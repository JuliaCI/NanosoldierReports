cset: moving following pidspec: 733341
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.368518891 seconds)
loading group "shootout"... done (took 0.863472285 seconds)
loading group "string"... done (took 0.236745996 seconds)
loading group "linalg"... done (took 3.245452748 seconds)
loading group "parallel"... done (took 0.022149797 seconds)
loading group "find"... done (took 1.246141839 seconds)
loading group "tuple"... done (took 0.790041712 seconds)
loading group "union"... done (took 3.115832493 seconds)
loading group "dates"... done (took 0.158868894 seconds)
loading group "micro"... done (took 0.058783516 seconds)
loading group "simd"... done (took 0.39651821 seconds)
loading group "io"... done (took 1.435038717 seconds)
loading group "random"... done (took 2.452272239 seconds)
loading group "problem"... done (took 1.182873022 seconds)
loading group "array"... done (took 4.678679059 seconds)
loading group "misc"... done (took 1.15687224 seconds)
loading group "scalar"... done (took 3.608497998 seconds)
loading group "sort"... done (took 0.32195422 seconds)
loading group "sparse"... done (took 3.670317505 seconds)
loading group "collection"... done (took 6.168414692 seconds)
FILTERING SUITE...
SETTING UP FOR RUN...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.554654244 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.076239052 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.261091163 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.078584156 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.285548586 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.085386746 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.089793355 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.075114708 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.185185663 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.168843456 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.221031695 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.393851082 seconds)
done (took 5.218476149 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 0.314064241 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.034080075 seconds)
    (2/2) benchmarking "String"...
    done (took 0.131038507 seconds)
  done (took 0.772081011 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.143242679 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.016426551 seconds)
    (3/3) benchmarking "different"...
    done (took 0.023364652 seconds)
  done (took 0.784485615 seconds)
  (4/7) benchmarking "replace"...
  done (took 0.021185071 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.099518995 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.021874673 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.022385759 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.022308524 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.021703806 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.021579005 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.021688552 seconds)
  done (took 0.834181947 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.029563257 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.023407871 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.021510481 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.022767802 seconds)
  done (took 0.700150807 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.023074377 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.09447989 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.027647482 seconds)
    (4/4) benchmarking "different"...
    done (took 0.027638347 seconds)
  done (took 0.771375422 seconds)
done (took 4.816325567 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.203984026 seconds)
    (2/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.788388414 seconds)
    (3/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.990039969 seconds)
    (4/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.185068095 seconds)
    (5/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.361671803 seconds)
    (6/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.310933727 seconds)
    (7/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.078869269 seconds)
    (8/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.247263176 seconds)
    (9/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.157797716 seconds)
    (10/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.033131611 seconds)
    (11/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.191418024 seconds)
    (12/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.042430692 seconds)
    (13/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.52811872 seconds)
    (14/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.471260787 seconds)
    (15/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.029826253 seconds)
    (16/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.148688761 seconds)
    (17/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.581606525 seconds)
    (18/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.039242323 seconds)
    (19/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.070638214 seconds)
    (20/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.257535063 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.040139472 seconds)
    (22/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.039665012 seconds)
    (23/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.043685276 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.028552678 seconds)
    (25/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.167151069 seconds)
    (26/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.136816777 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.590317291 seconds)
    (28/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.072101604 seconds)
    (29/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.027227866 seconds)
    (30/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.049380955 seconds)
    (31/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.030395969 seconds)
    (32/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.033320684 seconds)
  done (took 9.62032635 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.159245333 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.156806019 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.025483426 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.061865498 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.052820448 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.025936475 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.032013054 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.024562328 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.044895402 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.091748172 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.047327897 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.164045296 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.022723746 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.025975109 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.144883703 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.11743559 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.038598128 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.039291505 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.023262596 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.037147669 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.050055917 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.035564756 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.03322529 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.032852123 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.06919847 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.091502765 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.04223506 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.065380606 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.023377987 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.036377921 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.054345921 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.064866142 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.024285041 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.022131472 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.066623954 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.040485876 seconds)
  done (took 2.772214019 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.732386371 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.051892362 seconds)
    (2/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.149762743 seconds)
    (3/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.142516836 seconds)
    (4/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.071595247 seconds)
    (5/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.051210947 seconds)
    (6/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.18893799 seconds)
    (7/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.082499739 seconds)
    (8/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.056666132 seconds)
    (9/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.024610897 seconds)
    (10/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.215397405 seconds)
    (11/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.674852813 seconds)
    (12/118) benchmarking ("cumsum!", "Int32", 256)...
    done (took 0.178910655 seconds)
    (13/118) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 2.096247913 seconds)
    (14/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.028622008 seconds)
    (15/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.18968129 seconds)
    (16/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.938148905 seconds)
    (17/118) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 0.952363515 seconds)
    (18/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.025345609 seconds)
    (19/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.025030885 seconds)
    (20/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.140494487 seconds)
    (21/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.027503602 seconds)
    (22/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.183407602 seconds)
    (23/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.022709057 seconds)
    (24/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.139393318 seconds)
    (25/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.842142087 seconds)
    (26/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.027581625 seconds)
    (27/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.0261527 seconds)
    (28/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.055970698 seconds)
    (29/118) benchmarking ("cumsum!", "Float32", 1024)...
    done (took 0.151498853 seconds)
    (30/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.021506706 seconds)
    (31/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.09860053 seconds)
    (32/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.051059228 seconds)
    (33/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.027586277 seconds)
    (34/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.559987049 seconds)
    (35/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.02213602 seconds)
    (36/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.020079324 seconds)
    (37/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.042243603 seconds)
    (38/118) benchmarking ("3-arg mul!", 2)...
    done (took 0.051962223 seconds)
    (39/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.022574755 seconds)
    (40/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.023387327 seconds)
    (41/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.031222914 seconds)
    (42/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.021492622 seconds)
    (43/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.071494565 seconds)
    (44/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.033138453 seconds)
    (45/118) benchmarking ("5-arg mul!", 3)...
    done (took 0.514228508 seconds)
    (46/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.025481926 seconds)
    (47/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.708081985 seconds)
    (48/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 5.083656455 seconds)
    (49/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.031854534 seconds)
    (50/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.027574218 seconds)
    (51/118) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.06129871 seconds)
    (52/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.020994526 seconds)
    (53/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.024105451 seconds)
    (54/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.533254743 seconds)
    (55/118) benchmarking ("5-arg mul!", 2)...
    done (took 0.100510969 seconds)
    (56/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.023738372 seconds)
    (57/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.29454114 seconds)
    (58/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.025724274 seconds)
    (59/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.024461712 seconds)
    (60/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.024665291 seconds)
    (61/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.055261496 seconds)
    (62/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.02325592 seconds)
    (63/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.024961866 seconds)
    (64/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.027122969 seconds)
    (65/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.041178142 seconds)
    (66/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 0.976595486 seconds)
    (67/118) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.034504482 seconds)
    (68/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.043980948 seconds)
    (69/118) benchmarking ("cumsum!", "Float32", 256)...
    done (took 0.022648256 seconds)
    (70/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.023480773 seconds)
    (71/118) benchmarking ("cumsum!", "Int32", 1024)...
    done (took 0.022026336 seconds)
    (72/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.408811129 seconds)
    (73/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.03016064 seconds)
    (74/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.026429473 seconds)
    (75/118) benchmarking ("cumsum!", "Float64", 1024)...
    done (took 0.023052031 seconds)
    (76/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.029523166 seconds)
    (77/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.026391527 seconds)
    (78/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.02511904 seconds)
    (79/118) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.068605116 seconds)
    (80/118) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.053902325 seconds)
    (81/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.050038368 seconds)
    (82/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.028277762 seconds)
    (83/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.025165396 seconds)
    (84/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.024744981 seconds)
    (85/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.507564046 seconds)
    (86/118) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 0.943158482 seconds)
    (87/118) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.026044075 seconds)
    (88/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.025854231 seconds)
    (89/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.528765237 seconds)
    (90/118) benchmarking ("3-arg mul!", 3)...
    done (took 0.022055583 seconds)
    (91/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.024486817 seconds)
    (92/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.026368617 seconds)
    (93/118) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 0.046914666 seconds)
    (94/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.025456923 seconds)
    (95/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.022125872 seconds)
    (96/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.063151391 seconds)
    (97/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.026818992 seconds)
    (98/118) benchmarking ("cumsum!", "Int64", 256)...
    done (took 0.139185411 seconds)
    (99/118) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.26263169 seconds)
    (100/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.025685322 seconds)
    (101/118) benchmarking ("cumsum!", "Float64", 256)...
    done (took 0.020902269 seconds)
    (102/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.460389974 seconds)
    (103/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.025032342 seconds)
    (104/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.059007132 seconds)
    (105/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.07986952 seconds)
    (106/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.023212142 seconds)
    (107/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.234458038 seconds)
    (108/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.022792747 seconds)
    (109/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.020224698 seconds)
    (110/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.026162521 seconds)
    (111/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.01997378 seconds)
    (112/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.024245058 seconds)
    (113/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.021114853 seconds)
    (114/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.021901751 seconds)
    (115/118) benchmarking ("cumsum!", "Int64", 1024)...
    done (took 0.021170963 seconds)
    (116/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.022785493 seconds)
    (117/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.023863666 seconds)
    (118/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.022804055 seconds)
  done (took 24.171864248 seconds)
done (took 38.899755474 seconds)
(4/20) benchmarking "parallel"...
done (took 0.687659013 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 0.223664746 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.050437945 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 0.019989646 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.171006189 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 0.046745088 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 0.143203292 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 0.182306964 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 0.133609372 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 0.047758713 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 0.047564966 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 0.047882772 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 0.189281405 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 0.19876641 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 0.049182404 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.124872016 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 0.19989439 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 0.048901583 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 0.020114272 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 0.047833394 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 0.048691034 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 0.04875477 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.020859938 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 0.050335244 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 0.049837532 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.125168721 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 0.048459655 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 0.019979038 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.124575831 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 0.049275088 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.127188179 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 0.051327238 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 0.050461982 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 0.051272891 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.126796424 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 0.051868563 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.127651602 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.02045293 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 0.051506953 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 0.05213137 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 0.053231233 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 0.053231865 seconds)
  done (took 4.102784067 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.047309692 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.038882026 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.041178727 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.018521763 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.028525427 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.039110765 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.018525789 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.038585756 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.044318375 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.039220187 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.039127682 seconds)
  done (took 1.135321024 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.042227754 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.039840545 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.041188387 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.018425033 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.030361916 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.03973564 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.018428727 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.039306348 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.042026858 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.039655542 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.039717359 seconds)
  done (took 1.075453235 seconds)
done (took 6.974730602 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 0.158363274 seconds)
    (2/2) benchmarking "11899"...
    done (took 0.128210421 seconds)
  done (took 0.958465625 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", "(8, 8)", "(8, 8)")...
    done (took 0.602069894 seconds)
    (2/8) benchmarking ("matvec", "(2, 2)", "(2,)")...
    done (took 0.216812735 seconds)
    (3/8) benchmarking ("matvec", "(4, 4)", "(4,)")...
    done (took 0.135351935 seconds)
    (4/8) benchmarking ("matvec", "(16, 16)", "(16,)")...
    done (took 0.260502742 seconds)
    (5/8) benchmarking ("matmat", "(2, 2)", "(2, 2)")...
    done (took 0.128326737 seconds)
    (6/8) benchmarking ("matvec", "(8, 8)", "(8,)")...
    done (took 0.161420728 seconds)
    (7/8) benchmarking ("matmat", "(16, 16)", "(16, 16)")...
    done (took 4.828681024 seconds)
    (8/8) benchmarking ("matmat", "(4, 4)", "(4, 4)")...
    done (took 0.164924504 seconds)
  done (took 7.226928434 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, "Float64")...
    done (took 0.076312804 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float32")...
    done (took 0.147403443 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float64")...
    done (took 0.024893093 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, "Float64")...
    done (took 0.023315073 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, "Float64")...
    done (took 0.02356345 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float64")...
    done (took 0.023523838 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, "Float32")...
    done (took 0.024981495 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float64")...
    done (took 0.023780764 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, "Float32")...
    done (took 0.022982027 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float64")...
    done (took 0.025472683 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, "Float64")...
    done (took 0.025081749 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float32")...
    done (took 0.023192999 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, "Float32")...
    done (took 0.023986911 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float32")...
    done (took 0.025161933 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, "Float32")...
    done (took 0.023326494 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float32")...
    done (took 0.02350715 seconds)
  done (took 1.379206558 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sum", "(2, 2)")...
    done (took 0.029417987 seconds)
    (2/24) benchmarking ("sumabs", "(8, 8)")...
    done (took 0.026071551 seconds)
    (3/24) benchmarking ("minimum", "(2, 2)")...
    done (took 0.0273134 seconds)
    (4/24) benchmarking ("sumabs", "(2,)")...
    done (took 0.017527413 seconds)
    (5/24) benchmarking ("sum", "(4, 4)")...
    done (took 0.028209611 seconds)
    (6/24) benchmarking ("sum", "(2,)")...
    done (took 0.027155527 seconds)
    (7/24) benchmarking ("sum", "(8, 8)")...
    done (took 0.028394414 seconds)
    (8/24) benchmarking ("minimum", "(16, 16)")...
    done (took 0.028745577 seconds)
    (9/24) benchmarking ("sum", "(8,)")...
    done (took 0.027496558 seconds)
    (10/24) benchmarking ("sumabs", "(4, 4)")...
    done (took 0.02732113 seconds)
    (11/24) benchmarking ("sumabs", "(2, 2)")...
    done (took 0.025313274 seconds)
    (12/24) benchmarking ("minimum", "(4, 4)")...
    done (took 0.028209485 seconds)
    (13/24) benchmarking ("sumabs", "(16,)")...
    done (took 0.026677677 seconds)
    (14/24) benchmarking ("sumabs", "(8,)")...
    done (took 0.025416985 seconds)
    (15/24) benchmarking ("minimum", "(16,)")...
    done (took 0.02816114 seconds)
    (16/24) benchmarking ("minimum", "(2,)")...
    done (took 0.01742901 seconds)
    (17/24) benchmarking ("minimum", "(8, 8)")...
    done (took 0.028093081 seconds)
    (18/24) benchmarking ("minimum", "(4,)")...
    done (took 0.027603465 seconds)
    (19/24) benchmarking ("minimum", "(8,)")...
    done (took 0.029546582 seconds)
    (20/24) benchmarking ("sum", "(16,)")...
    done (took 0.028363453 seconds)
    (21/24) benchmarking ("sum", "(4,)")...
    done (took 0.027440636 seconds)
    (22/24) benchmarking ("sumabs", "(4,)")...
    done (took 0.024878626 seconds)
    (23/24) benchmarking ("sum", "(16, 16)")...
    done (took 0.029044168 seconds)
    (24/24) benchmarking ("sumabs", "(16, 16)")...
    done (took 0.02629458 seconds)
  done (took 1.338599282 seconds)
done (took 11.586663155 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.143954527 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.030217685 seconds)
  done (took 0.858312298 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.132507402 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.131906818 seconds)
  done (took 0.958533062 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.02934458 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.016373416 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.033220407 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.025025099 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.016641549 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.016311386 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.032093861 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.016568547 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.016400117 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.016471994 seconds)
  done (took 0.916049588 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.019850331 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.023498736 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.021470368 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.019756649 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.021407429 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.017438372 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.019886237 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.017706487 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.023323008 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.016767343 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.020571515 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.038816649 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.019962177 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.039224236 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.019946068 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.020453603 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.021961905 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.019685007 seconds)
  done (took 1.099136751 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.018126346 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.017181383 seconds)
  done (took 0.73397522 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.021040344 seconds)
    (2/7) benchmarking "second"...
    done (took 0.017368634 seconds)
    (3/7) benchmarking "month"...
    done (took 0.01911345 seconds)
    (4/7) benchmarking "year"...
    done (took 0.018957655 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.016982717 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.016411819 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.016986644 seconds)
  done (took 0.819363254 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.396426151 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.090862415 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.324309208 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.025137526 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.038373283 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.236840535 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.020073033 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.024335022 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.024128036 seconds)
  done (took 1.875621793 seconds)
done (took 7.958155228 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.04558819 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.148716599 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.158902769 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.45913881 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.034841378 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.022898431 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.057611133 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.234747571 seconds)
done (took 1.869992467 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.482328375 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.28041369 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.191656898 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.024018362 seconds)
  done (took 2.199071209 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.315973578 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.146402099 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.032392522 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.023418984 seconds)
  done (took 1.232822892 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.022471088 seconds)
    (2/2) benchmarking "read"...
    done (took 0.027882222 seconds)
  done (took 0.760607875 seconds)
done (took 5.388697584 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.030597854 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.017115284 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.02347814 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.018806524 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.018463515 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.01787679 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", "Float64")...
    done (took 0.017985681 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.018835862 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.016791484 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.018811338 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.018820407 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.018836269 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.018516092 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.018486832 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", "Float64")...
    done (took 0.018007432 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.018786597 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", "Float32")...
    done (took 0.016815462 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.018449423 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.018474279 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.01843682 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", "Float32")...
    done (took 0.016771387 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.01880676 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.017953 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.018450221 seconds)
  done (took 1.152874255 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.038566079 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.022780974 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.022722973 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.022718125 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.023928547 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.022673496 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.022756893 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.022681847 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.022932033 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.02162681 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.023873383 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.024009101 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.021504419 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.024033911 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.021648717 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.024010536 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.022970215 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.022784093 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.021658113 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.024189162 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.023006993 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.022890776 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.024125118 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.022959175 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.023977749 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.023992467 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.021750268 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.022850039 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.022947168 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.023957426 seconds)
  done (took 1.41728467 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.023606093 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.015394794 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.01560688 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.025839108 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.015288046 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.015460657 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.015944944 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.015143269 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.015556025 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.016383475 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.015902396 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.015277086 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.016103638 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.015401412 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.015358815 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.015923916 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.020660133 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.036453599 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.01555425 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.015329678 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.020159009 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.015597146 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.015381527 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.015372053 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.015828456 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.015329065 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.015174523 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.015694288 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.015327943 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.015965746 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.015360806 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.020046631 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.021616287 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.015874654 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.02577995 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.020556624 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.015801979 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.019879446 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.016232131 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.015144275 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.015128543 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.015156814 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.015319753 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.015322736 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.025939236 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.015554064 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.016477555 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.015833364 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.015488228 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.015153405 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.015306376 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.016915512 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.021106103 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.016565047 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.015172404 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.016494244 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.015161656 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.015919521 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.015335595 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.015176269 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.015315424 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.019427318 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.01666951 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.01596796 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.037115077 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.016639335 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.025903373 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.015370378 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.015714199 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.019525922 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.015890688 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.035221673 seconds)
  done (took 1.993431117 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.028135231 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.026020691 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.034955619 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.025546963 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.018976207 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.016268812 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.01952707 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.016307628 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.025779191 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.019942922 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.016283088 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.019485371 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.025719713 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.01993654 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.017445341 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.025592323 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.019890226 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.019123981 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.016337384 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.019850538 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.017394782 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.019469472 seconds)
  done (took 1.184803648 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107595836 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.02312325 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.069604247 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.022908946 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.021539363 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.022724552 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.022997273 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.022929234 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.023141361 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.024266208 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.024256705 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.023173177 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.021412276 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.024145753 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.024232051 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.024079247 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.023240305 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.024072529 seconds)
  done (took 1.262530366 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.034824659 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.021535016 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.049147279 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.021283043 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.021398122 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.021042086 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.025457194 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.025110318 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.021149728 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.021559814 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.025195904 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.021168744 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.021115071 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.021563761 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.021157276 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.021516284 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.021101715 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.021581001 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.025150426 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.025726485 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.025715886 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.025162113 seconds)
  done (took 1.252685715 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.037344127 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.021415235 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.040531425 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.023816046 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.015837267 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.015857646 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.023759751 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.022387342 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.02363302 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.0213733 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.02249207 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.015920498 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.024689541 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.022625721 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.024806778 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.022561178 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.021515424 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.022549719 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.021460279 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.015906168 seconds)
  done (took 1.172912297 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.135522471 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.018040072 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.017817278 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.02231312 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.017774539 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.017753083 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.022470782 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.01779463 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.017750684 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.042586322 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.017801268 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.01804539 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.02246743 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.020695262 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.017850869 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.022433008 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.022333557 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.022425714 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.017757527 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.017725806 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.04233571 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.017788835 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.022366032 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.017766382 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.017740685 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.017791488 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.017750763 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.020646243 seconds)
  done (took 1.415661367 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.039857849 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.015129237 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.015344868 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.019373313 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.019404267 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.025352564 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.019443041 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.019415346 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.01506784 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.015462488 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.017480205 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.015122598 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.015082851 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.024853679 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.015064072 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.017465599 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.024881372 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.019472733 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.025611946 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.02822254 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.017466301 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.024745537 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.017471017 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.015498793 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.025692892 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.017472373 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0194655 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.020320362 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.017408127 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.015465339 seconds)
  done (took 1.316006932 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.030246206 seconds)
    (2/2) benchmarking "in"...
    done (took 0.026765892 seconds)
  done (took 0.771879705 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.018845158 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.03380655 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.015164669 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.028789649 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.024824344 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.019568945 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.024338863 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.024830315 seconds)
  done (took 0.898663621 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.130209358 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.154846557 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.017546985 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.017738422 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.127922921 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.084879693 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.138863803 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.028894318 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.030853986 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.020043818 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.01731237 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.139224214 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.016901596 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.030678261 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.018406462 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.026716701 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.024473681 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.034927117 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.030093126 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.015851979 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.029630264 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.017595498 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.016686796 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.017640869 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.017907394 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.023726234 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.032875273 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.029507034 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.025215382 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.015135887 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.035651188 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.016000713 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.016687612 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.025188773 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.129476474 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.016299017 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.054128504 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.016188102 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.020389537 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.015801204 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.02813308 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.037287705 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.03059383 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.034296518 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.01744043 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.017906634 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.015976698 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.017631448 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.020091232 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.025217889 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.016164903 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.02338494 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.01573432 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.017441846 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.026574661 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.016199806 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.020786164 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.025278528 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.029668575 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.026588712 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.028487058 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.031582405 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.024834071 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.024627378 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.016746712 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.036160465 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.017678777 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.02935359 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.03095948 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.017288012 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.029070997 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.01591501 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.015203145 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.016039613 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.049995139 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.0174487 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.016933369 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.01618544 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.016296926 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.017387689 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.025612931 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.020762045 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.023430113 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.019062084 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.032038286 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.025237815 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.015921615 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.023293874 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.03456874 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.020158494 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.016171907 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.033234112 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.020102526 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.015860609 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.03419217 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.026596785 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.017613623 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.016754456 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.020004208 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.029880386 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.017921076 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.015525594 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.024992136 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.018065629 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.131941586 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.021362547 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.024663733 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.016329094 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.026735358 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.022999202 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.018058931 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.015551465 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.021258671 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.017234295 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.015548001 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.025999556 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.016595152 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.031636292 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.023500381 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.031297337 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.031640071 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.027205292 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.032630815 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.016307064 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.015575842 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.035260513 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.025930935 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.017800328 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.0349592 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.016341624 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.026990212 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.016513938 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.017966816 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.025802715 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.015820557 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.018216318 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.016687789 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.023108955 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.018088086 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.018222516 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.022469943 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.025129174 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.029130193 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.017701976 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.025343142 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.016889403 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.032707979 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.026342289 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.021563027 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.020080241 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.017413262 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.028935979 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.023617289 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.025760507 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.016486942 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.017458493 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.016622304 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.027836576 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.026213375 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.018373029 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.026262449 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.021573788 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.017453959 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.016724349 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.017655381 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.020457704 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.020061128 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.017153844 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.024405966 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.025406444 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.031414923 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.024597881 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.025832159 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.016027561 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.016554275 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.01849057 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.016529735 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.021500374 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.025974606 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.032438117 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.028685272 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.038624986 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.016999683 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.026416272 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.018428079 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.034107166 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.030164018 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.017622335 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.021513619 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.015745648 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.018495376 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.026138642 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.028212308 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.031428596 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.031993177 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.021769765 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.021663694 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.016698252 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.032190002 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.017226613 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.02522108 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.026343112 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.02336991 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.016696907 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.018644588 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.025880846 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.021736906 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.01781626 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.032915332 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.024860584 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.016672432 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.031369906 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.01711274 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.027616382 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.016650783 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.020609447 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.022242989 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.018829724 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.026453676 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.032349677 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.015864139 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.017119783 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.032673424 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.018671094 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.018573448 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.0247782 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.032215268 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.021795612 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.02471508 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.027547258 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.02743786 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.02169483 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.027148462 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.017891742 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.026093807 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.020347755 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.028892897 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.016858057 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.035904977 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.015931994 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.032385269 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.017541689 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.02818128 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.017204783 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.026289058 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.017670819 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.03452686 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.018453072 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.017775098 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.028920014 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.015926402 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.0260275 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.016713672 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.022052842 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.023786223 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.026096082 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.018733758 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.026429588 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.170314044 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.025411853 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.021170841 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.02475732 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.025132362 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.021020381 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.015769308 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.024306381 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.026649959 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.024052175 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.017218839 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.017214217 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.016222955 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.025121789 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.01718092 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.016706243 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.02399091 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.021021181 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.022084797 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.017138157 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.017305166 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.017156424 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.024257095 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.025160996 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.033752784 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.024342014 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.02327127 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.024807441 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.015669725 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.031179366 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.0156913 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.023230564 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.015058546 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.021965007 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.024854678 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.015897818 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.034548037 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.017048297 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.023488905 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.027442978 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.024227896 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.01983355 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.033405839 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.018477212 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.023999816 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.023505158 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.020649055 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.022729025 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.017091354 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.024047401 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.024963852 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.026021562 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.016246074 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.023107852 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.024469479 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.017158071 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.023406603 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.016917211 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.023966191 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.017145688 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.015093936 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.020743931 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.026664858 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.02089813 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.021099381 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.015882253 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.014881566 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.015907332 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.022180759 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.02068087 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.024140149 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.030845159 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.014890003 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.016236247 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.015450194 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.019700319 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.033373778 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.024919868 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.023434758 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.02066547 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.015007428 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.016975068 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.017171523 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.015763254 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.018474821 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.015122447 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.015538589 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.026077439 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.01718336 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.020580067 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.015991098 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.016765251 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.025591851 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.01979297 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.016092233 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.022853864 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.01569492 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.021356372 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.015327238 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.017192395 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.0208123 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.015621504 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.019971096 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.026063025 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.032380527 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.022998994 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.024784545 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.016759958 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.023797237 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.031312521 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.024136599 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.016918707 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.025337478 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.015600213 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.034855921 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.02527915 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.024507114 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.025711311 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.016895986 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.033101943 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.020999706 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.025954847 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.031584717 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.016968897 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.023731538 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.015899719 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.031822965 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.02098163 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.015895129 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.024612572 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.023823271 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.02236498 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.027693449 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.016825603 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.024545661 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.020961216 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.020655505 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.01816748 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.018216646 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.025255319 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.032999574 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.017421352 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.022426742 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.024471348 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.024823487 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.02142887 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.028770738 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.02461489 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.017429578 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.018140664 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.02039277 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.01720124 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.028734904 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.016757969 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.021379179 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.021360021 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.016317724 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.023523926 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.033255327 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.025746006 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.026007009 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.016424035 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.015793449 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.034816041 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.020432501 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.019838171 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.024445068 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.026270965 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.028857226 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.025732584 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.033718485 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.016900227 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.022710021 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.028713594 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.017373474 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.016258402 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.020393049 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.018052914 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.025533219 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.026315091 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.023924246 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.01832256 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.023636642 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.030097699 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.017832405 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.021529778 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.022667369 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.017307706 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.027039332 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.024515581 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.025151303 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.018144988 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.016457949 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.020229988 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.025374116 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.024091809 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.025466749 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.017502115 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.025504638 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.030940232 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.024019546 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.020235524 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.016478647 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.020045848 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.025580783 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.023217602 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.016430931 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.021527592 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.020415528 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.025631948 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.025886909 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.021382719 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.016389544 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.03395303 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.02515186 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.025520234 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.018296014 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.018419164 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.016839077 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.016447191 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.027921341 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.016450811 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.018260491 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.021563154 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.018319118 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.035141715 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.024608991 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.03246431 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.017487488 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.021337178 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.016582031 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.026111339 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.021419093 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.01648335 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.027042509 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.015983008 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.032225051 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.028740392 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.024333569 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.016551641 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.022055064 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.025430449 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.032241878 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.026291558 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.025561642 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.020305167 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.026315301 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.018454697 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.027752411 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.016610436 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.015779301 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.026815745 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.02518377 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.029244993 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.016645149 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.026834571 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.018660213 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.024844286 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.025532551 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.018483069 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.018566868 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.018356233 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.026236985 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.02168476 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.026047599 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.021797746 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.034243541 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.017676346 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.028015988 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.025596253 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.027892283 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.030571846 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.02940469 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.025456484 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.017122502 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.024067941 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.025475334 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.017870522 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.02185423 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.020286047 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.039828197 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.018452078 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.018441992 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.031775069 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.025744077 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.016862669 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.025353947 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.021885246 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.026943592 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.01791245 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.027125644 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.022816619 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.017672078 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.021717622 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.021723395 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.015815646 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.016555913 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.01693684 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.026535295 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.175419599 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.016145782 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.034744092 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.017094272 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.024601983 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.026561372 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.022930619 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.017045268 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.015071666 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.016526014 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.029295488 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.031181935 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.020141702 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.024315323 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.017277684 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.02495676 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.015188831 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.024411711 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.02364728 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.024234303 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.015642131 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.015878642 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.030726206 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.031277081 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.020902931 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.032761656 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.024637906 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.017086228 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.037373283 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.024592725 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.016457671 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.02636774 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.017611857 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.015295139 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.015110404 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.017146211 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.026936159 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.01559156 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.017579866 seconds)
  done (took 15.370702185 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.061796969 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.017106806 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.015678943 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.01575341 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.023026665 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.016952709 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.015740412 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.016977415 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.017078818 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.018037578 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.015803659 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.015759729 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.021360951 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.031077642 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.023895954 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.019665395 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.015877111 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.017065456 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.015815365 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.017037942 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.02191722 seconds)
  done (took 1.197457704 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.020296887 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.020033378 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.019412682 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.01975878 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.018943914 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.015860549 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.019305999 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.015870326 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.019786526 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.016306731 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.019773172 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.015914099 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.016271101 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.016236371 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.016242518 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.017307981 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.019802338 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.019039488 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.015886663 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.019383127 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.017361157 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.019466138 seconds)
  done (took 1.150325323 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.018482597 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.016401637 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.024235633 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.015250416 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.015184516 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.01788704 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.015268328 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.020037891 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.020027683 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.019985858 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.024136438 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.016098153 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.015191401 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.021320668 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.015193138 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.015995654 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.062066159 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.016189762 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.016145936 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.015423711 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.017523223 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.024440769 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.015494947 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.015639658 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.019993575 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.0181451 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.015382842 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.017664394 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.015951317 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.020050437 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.016117307 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.015157764 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.02423278 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.023438979 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.020047963 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.020041445 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.016596463 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.016098301 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.01539943 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.015387516 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.023656636 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.016598632 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.015621805 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.016390961 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.024190517 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.01545552 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.01523021 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.024127399 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.015239526 seconds)
  done (took 1.681545506 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.028742524 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.069506503 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.023549015 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.051136973 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.028765142 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.020912383 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.022504554 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.05360338 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.016620882 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.017108676 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.029480925 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.030132597 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.018092151 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.019284725 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.023597753 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.017956665 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.018618764 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.017279101 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.020277275 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.017665426 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.02037915 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.023648686 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.028437453 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.029627321 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.135902608 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.01823398 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.017806809 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.019296378 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.029501758 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.020842328 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.019385311 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.019804768 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.029077016 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.024777811 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.017694944 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.017812854 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.029507775 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.018238385 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.017987171 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.01656531 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.017698776 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.019157131 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.02358908 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.029601365 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.018104197 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.024693576 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.018023486 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.016139109 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.029481489 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.017876924 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.021422415 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.030673595 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.019070155 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.018346171 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.019424731 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.029243811 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.018196331 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.01698292 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.018347845 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.029475878 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.016609866 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.01886231 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.030320672 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.017657953 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.021016637 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.030388429 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.024790878 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.019277105 seconds)
  done (took 2.592448494 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.027458672 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.022830318 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.027163732 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.027236685 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.02278422 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.022969112 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.022819792 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.022752223 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.022670501 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.025573463 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.022843131 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.1423195 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.020158401 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.023805144 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.023120622 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.023006175 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.022920214 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.02293598 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.022928954 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.022828188 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.022874561 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.027508327 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.022880331 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.027496427 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.055913658 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.019773762 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.022748994 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.022843391 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.027595701 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.022770674 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.029708902 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.022944942 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.022880356 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.02777106 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.029843394 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.022826172 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.016056415 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.022724095 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.023184621 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.023102282 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.01984932 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.02805496 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.02301 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.019891579 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.023197106 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.02295459 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.027907363 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.03013871 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.02405561 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.026024387 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.02328125 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.028087319 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.024335174 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.024642012 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.030315178 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.063858639 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.030271492 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.030407001 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.024792375 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.030138622 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.030243527 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.03728046 seconds)
  done (took 2.493860553 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.030944537 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.021326228 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.026812083 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.015472369 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.015343282 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.021304494 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.015327661 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.015382219 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.021330198 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.02125788 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.022755551 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.021396592 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.023199272 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.022743789 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.021310797 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.023125516 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.021273982 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.021333419 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.021299726 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.021251933 seconds)
  done (took 1.202327073 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.019217869 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.020727324 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.016062755 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.020053058 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.016139563 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.019614118 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.016110614 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.016086714 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.016169373 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.016176322 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.020697203 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.02069333 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.016186781 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.020274484 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.019671531 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.019694849 seconds)
  done (took 1.053038822 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.020614591 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.026494985 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.130287496 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.016808189 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.018707585 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.016120277 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.016950067 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.015878913 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.018142707 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.029961825 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.016972421 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.019047832 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.016958931 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.015631396 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.016177578 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.018985884 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.018128755 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.016982824 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.016931198 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.131026553 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.025294542 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.017628061 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.019013763 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.017555092 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.018621034 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.025016112 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.01819825 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.018619187 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.016861681 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.018992936 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.018594004 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.027851825 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.018592743 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.017367375 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.015664958 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.016468686 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.016902942 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.018994747 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.018942776 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.016920406 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.01578036 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.018579558 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.016929361 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.017269813 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.018069702 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.019287149 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.018028684 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.027059429 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.016652133 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.018552322 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.016870026 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.017988197 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.017226939 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.028024882 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.018837907 seconds)
  done (took 2.021112913 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.035955099 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.022118686 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.015250634 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.015141851 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.021572167 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.022977446 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.02174359 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.022433772 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.022945285 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.015295121 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.023152873 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.021389555 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.023157785 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.022083026 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.023171241 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.021978413 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.015267541 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.022860083 seconds)
  done (took 1.155155787 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.024541167 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.020979881 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.021193821 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.017315871 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.017233887 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.021220327 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.015645191 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.01691196 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.016926818 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.01740322 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.017270191 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.016907543 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.016835067 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.016881273 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.020846707 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.017201191 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.01683424 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.015745647 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.017327258 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.015631627 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.021303188 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.015747737 seconds)
  done (took 1.155974315 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#3", "BigInt", "+")...
    done (took 0.191358155 seconds)
    (2/6) benchmarking ("#3", "UInt64", "+")...
    done (took 0.151371346 seconds)
    (3/6) benchmarking ("#4", "UInt64", "+")...
    done (took 0.038755197 seconds)
    (4/6) benchmarking ("#3", "Int64", "+")...
    done (took 0.034001278 seconds)
    (5/6) benchmarking ("#4", "Int64", "+")...
    done (took 0.025559305 seconds)
    (6/6) benchmarking ("#4", "BigInt", "+")...
    done (took 0.051973756 seconds)
  done (took 1.251686285 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.054127322 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.025467675 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.021977591 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.047344106 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.02155457 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.020139083 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.020194254 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.020424488 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.02366393 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.02928882 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.020522314 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.023281275 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.023568815 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.025229569 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.022110476 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.021574536 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.020419651 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.020473667 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.022128987 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.032060719 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.020588289 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.023173641 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.020584286 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.020265441 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.020437431 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.02521715 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.023666531 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.029173982 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.020289541 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.023128331 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.021540019 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.020464645 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.023246632 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.029233605 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.021896184 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.023548006 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.02045906 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.032059188 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.021521338 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.025198776 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.021847289 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.022174397 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.023648912 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.023143992 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.023180914 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.020768051 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.023424432 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.020708525 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.020780816 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.034856909 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.021941489 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.025273962 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.022423946 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.023625936 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.023858107 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.034798863 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.029513962 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.025863375 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.023777064 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.031120449 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.027521867 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.023298263 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.027349621 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.031495425 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.024073953 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.027573609 seconds)
  done (took 2.404691524 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.031006342 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.049643958 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.020347155 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.02904027 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.02485995 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.020449186 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.020407092 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.020438278 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.020392171 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.022690872 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.060951074 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.020808029 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.025135059 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.025217923 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.020619768 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.020365074 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.020414647 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.025010661 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.022580836 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.034272106 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.020490907 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.025114285 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.025067417 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.025093203 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.029215204 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.021661823 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.020484368 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.020469194 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.020407301 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.020427238 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.023283819 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.020554537 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.025064601 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.02239312 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.025034603 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.020666365 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.02042516 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.023299732 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.020420201 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.02169639 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.025226803 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.031592188 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.020477119 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.020571135 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.029555512 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.020615532 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.020591472 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.022769492 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.020627815 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.022768758 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.029614646 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.029542802 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.02955303 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.025590608 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.020955426 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.020938346 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.020612328 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.020599403 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.021665621 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.023118454 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.027253438 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.021810803 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.037555004 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.02203707 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.022006445 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.027601712 seconds)
  done (took 2.401273894 seconds)
done (took 51.676557587 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.205329006 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.17704343 seconds)
  done (took 1.132569715 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose", "(600, 600)")...
    done (took 0.141418598 seconds)
    (2/16) benchmarking ("adjoint", "(600, 400)")...
    done (took 0.139741949 seconds)
    (3/16) benchmarking ("adjoint!", "(600, 600)")...
    done (took 0.168130602 seconds)
    (4/16) benchmarking ("adjoint", "(20000, 20000)")...
    done (took 0.023988766 seconds)
    (5/16) benchmarking ("transpose!", "(20000, 10000)")...
    done (took 0.081573305 seconds)
    (6/16) benchmarking ("adjoint!", "(20000, 20000)")...
    done (took 0.175377421 seconds)
    (7/16) benchmarking ("transpose!", "(20000, 20000)")...
    done (took 0.125616659 seconds)
    (8/16) benchmarking ("transpose", "(600, 400)")...
    done (took 0.026550953 seconds)
    (9/16) benchmarking ("transpose", "(20000, 20000)")...
    done (took 0.024241744 seconds)
    (10/16) benchmarking ("transpose!", "(600, 400)")...
    done (took 0.025594623 seconds)
    (11/16) benchmarking ("adjoint", "(600, 600)")...
    done (took 0.023776899 seconds)
    (12/16) benchmarking ("transpose!", "(600, 600)")...
    done (took 0.025317529 seconds)
    (13/16) benchmarking ("adjoint!", "(600, 400)")...
    done (took 0.025457328 seconds)
    (14/16) benchmarking ("transpose", "(20000, 10000)")...
    done (took 0.023674323 seconds)
    (15/16) benchmarking ("adjoint!", "(20000, 10000)")...
    done (took 0.086353811 seconds)
    (16/16) benchmarking ("adjoint", "(20000, 10000)")...
    done (took 0.026481077 seconds)
  done (took 1.9273231 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.073596421 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.277721819 seconds)
    (3/18) benchmarking ("IJV", 10)...
    done (took 0.058698909 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.023028661 seconds)
    (5/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.103580911 seconds)
    (6/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.029170507 seconds)
    (7/18) benchmarking ("IJV", 100)...
    done (took 0.02448859 seconds)
    (8/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.028506122 seconds)
    (9/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.029277231 seconds)
    (10/18) benchmarking ("IV", 1000)...
    done (took 0.023582436 seconds)
    (11/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.070854495 seconds)
    (12/18) benchmarking ("Diagonal", 10)...
    done (took 0.045693398 seconds)
    (13/18) benchmarking ("Diagonal", 100)...
    done (took 0.028164264 seconds)
    (14/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.028500008 seconds)
    (15/18) benchmarking ("IJV", 1000)...
    done (took 0.024370414 seconds)
    (16/18) benchmarking ("Diagonal", 1000)...
    done (took 0.028163742 seconds)
    (17/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.028349121 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.028816009 seconds)
  done (took 1.723585593 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", "(20000, 20000)")...
    done (took 0.092719203 seconds)
    (2/2) benchmarking ("unary minus", "(600, 600)")...
    done (took 0.034437396 seconds)
  done (took 0.896107238 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.139238237 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.06393782 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.105765679 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.312547301 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.099266127 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.297271401 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.10174329 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.097550733 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.069426226 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.095133741 seconds)
  done (took 2.146489636 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.062389158 seconds)
    (2/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.056873461 seconds)
    (3/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.285362623 seconds)
    (4/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.05498588 seconds)
    (5/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.035102228 seconds)
    (6/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.030030136 seconds)
    (7/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.03040527 seconds)
    (8/54) benchmarking ("spmat", "range", 100)...
    done (took 0.030509847 seconds)
    (9/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.030664317 seconds)
    (10/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.0295152 seconds)
    (11/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.075458696 seconds)
    (12/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.028112413 seconds)
    (13/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.024520053 seconds)
    (14/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.072338819 seconds)
    (15/54) benchmarking ("spmat", "array", 100)...
    done (took 0.049929605 seconds)
    (16/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.059189837 seconds)
    (17/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.023845185 seconds)
    (18/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.029627421 seconds)
    (19/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.032744588 seconds)
    (20/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.023548434 seconds)
    (21/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.028442926 seconds)
    (22/54) benchmarking ("spmat", "range", 10)...
    done (took 0.030373744 seconds)
    (23/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.135440489 seconds)
    (24/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.029976104 seconds)
    (25/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.050912549 seconds)
    (26/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.028011429 seconds)
    (27/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.02942289 seconds)
    (28/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.029554384 seconds)
    (29/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.029449441 seconds)
    (30/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.030553735 seconds)
    (31/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.031041911 seconds)
    (32/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.053883684 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.029599466 seconds)
    (34/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.037261076 seconds)
    (35/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.028955901 seconds)
    (36/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.050212187 seconds)
    (37/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.024598885 seconds)
    (38/54) benchmarking ("spmat", "array", 10)...
    done (took 0.049693583 seconds)
    (39/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.027193752 seconds)
    (40/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.024429654 seconds)
    (41/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.027827526 seconds)
    (42/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.031224796 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.025021106 seconds)
    (44/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.030385233 seconds)
    (45/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.030857699 seconds)
    (46/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.03060103 seconds)
    (47/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.030864329 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.023783443 seconds)
    (49/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.030728018 seconds)
    (50/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.02746025 seconds)
    (51/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.024668214 seconds)
    (52/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.028907633 seconds)
    (53/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.028649644 seconds)
    (54/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.02971868 seconds)
  done (took 3.027242337 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.077944248 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.066758676 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.024408557 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.072015415 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065661483 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.024665057 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.079867636 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.060311395 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078384207 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.023941946 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.023605642 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.023622253 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.031454313 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.03558478 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.076355093 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.06951585 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.025694088 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.024252484 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.068607453 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.068698327 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.024662104 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.080470506 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.070053622 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.067702288 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.022748759 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.024199358 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.022931387 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.023604735 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.031579753 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.031434743 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.023372067 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.033958895 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.035206523 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.030598282 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.02265304 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.022974919 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.022889664 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.031578619 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.033029033 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.032893764 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.029977533 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.022601682 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.022949973 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.023559095 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.024034542 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.022504642 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.033002141 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.030965622 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.032859346 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.023523032 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.023677181 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.022892844 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.023966447 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.030492849 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.029286847 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.030921985 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.03379705 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.023673968 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.023561952 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.024704762 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.034679404 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.031504041 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.031459908 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.024259847 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.032506166 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.023093929 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.033533962 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.036755319 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.023204794 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.023757375 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.023358436 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.02341484 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.023642803 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.029863464 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.029983348 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.02376238 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.023650732 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.022977859 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.031801167 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.030240026 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.023101025 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.031968689 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.022682041 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.023397645 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.023668295 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.023961438 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.032987894 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.031991042 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.024339409 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.023844226 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.023888983 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.023811413 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.023026729 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.033504102 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.032544369 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.032782134 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.034525872 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.024337052 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.035217628 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.032796061 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.024500125 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.031867497 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.023969833 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.024316656 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.024235606 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.031797619 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.031421862 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.03301307 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.023971286 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.023589155 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.03298434 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.035176121 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.023701683 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.031317283 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.034134229 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.032022892 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.023216351 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.034747126 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.023931247 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.034991202 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.024216721 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.034576497 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.024297292 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.032282165 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.024194725 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.023342432 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.024031368 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.035815525 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.024695893 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.024065183 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.024412779 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.024009923 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.032335282 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.036563397 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.024669305 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.032700915 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.032608796 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.024628206 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.034754863 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.02416671 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.034726812 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.024257717 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.024507857 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.023290411 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.037096854 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.023992722 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.024500065 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.024081554 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.034556545 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.023999696 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.034304333 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.031633529 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.023444018 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.035740265 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.033924213 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.031604465 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.034553943 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.024851404 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.024262412 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.023848304 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.024176992 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.034782935 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.036388603 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.024975497 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.024151959 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.031177255 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.035028571 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.023641377 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.031853612 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.031739727 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.032169112 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.024393339 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.024327514 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.035167748 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.038385969 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.033318219 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.03556272 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.033339627 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.024175905 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.031956655 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.035588291 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.024171353 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.03909041 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.024082305 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.035562618 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.035885984 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.031401343 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.035542093 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.184099454 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.032275539 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.031886755 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.033928446 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.02297347 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.023193834 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.029621766 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.023070704 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.023359045 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.029203216 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.023601025 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.023845757 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.035756734 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.023319563 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.032169124 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.022701296 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.030177684 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.022652794 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.023605411 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.034293887 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.023001545 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.023560702 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.029576543 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.023166372 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.029156803 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.032192376 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.029027054 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.022979877 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.023523728 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.032631608 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.031737098 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.022883549 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.022823144 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.02343368 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.031509864 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.030932846 seconds)
  done (took 7.868425009 seconds)
done (took 19.500515705 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 0.146003242 seconds)
    (2/4) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 0.074001063 seconds)
    (3/4) benchmarking ("Float64", "(1000, 1000)", 3)...
    done (took 0.144994798 seconds)
    (4/4) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 0.085148328 seconds)
  done (took 1.211586167 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 0.058509038 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 0.019742749 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 0.146046923 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 0.158005912 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 0.019973992 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 0.140000075 seconds)
  done (took 1.325856873 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 0.263439293 seconds)
    (2/3) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 0.155354683 seconds)
    (3/3) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 0.164039079 seconds)
  done (took 1.367892963 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ("(10000000,)", 1)...
    done (took 0.154037445 seconds)
    (2/4) benchmarking ("(10000000,)", 2)...
    done (took 0.280389158 seconds)
    (3/4) benchmarking ("(1000, 1000)", 2)...
    done (took 0.548492832 seconds)
    (4/4) benchmarking ("(1000, 1000)", 1)...
    done (took 0.146207796 seconds)
  done (took 1.921654762 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 0.173685997 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.169589413 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 0.031594013 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.187123635 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 0.038857441 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 0.016320201 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.107786091 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 0.017261707 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 0.052002674 seconds)
  done (took 1.640855615 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.098724096 seconds)
done (took 8.350182576 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("map", "*", "Int64", "(false, false)")...
    done (took 0.200368954 seconds)
    (2/341) benchmarking ("perf_simplecopy", "Float64", 1)...
    done (took 0.143497384 seconds)
    (3/341) benchmarking ("perf_sum", "BigFloat", 0)...
    done (took 0.034190469 seconds)
    (4/341) benchmarking ("perf_sum3", "Float64", 1)...
    done (took 0.028101414 seconds)
    (5/341) benchmarking ("broadcast", "abs", "Int64", 0)...
    done (took 0.124591009 seconds)
    (6/341) benchmarking ("broadcast", "abs", "Int64", 1)...
    done (took 0.136354684 seconds)
    (7/341) benchmarking ("map", "identity", "Float32", 0)...
    done (took 0.143077369 seconds)
    (8/341) benchmarking ("perf_countnothing", "Int8", 1)...
    done (took 0.030500738 seconds)
    (9/341) benchmarking ("collect", "all", "Float64", 1)...
    done (took 0.133641263 seconds)
    (10/341) benchmarking ("broadcast", "*", "Bool", "(false, true)")...
    done (took 0.311712142 seconds)
    (11/341) benchmarking ("broadcast", "*", "Int64", "(false, true)")...
    done (took 0.182053172 seconds)
    (12/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int64}", 1)...
    done (took 0.049061213 seconds)
    (13/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float32}", 0)...
    done (took 0.163882544 seconds)
    (14/341) benchmarking ("perf_binaryop", "*", "Float32", "(true, true)")...
    done (took 0.043157572 seconds)
    (15/341) benchmarking ("collect", "all", "ComplexF64", 0)...
    done (took 0.264714878 seconds)
    (16/341) benchmarking ("perf_sum2", "Bool", 1)...
    done (took 0.031261597 seconds)
    (17/341) benchmarking ("perf_countnothing", "Float32", 1)...
    done (took 0.029676419 seconds)
    (18/341) benchmarking ("perf_countnothing", "BigInt", 1)...
    done (took 0.024825853 seconds)
    (19/341) benchmarking ("collect", "filter", "Float64", 1)...
    done (took 0.140682069 seconds)
    (20/341) benchmarking ("map", "abs", "Bool", 1)...
    done (took 0.131731733 seconds)
    (21/341) benchmarking ("sort", "Union{Missing, Bool}", 1)...
    done (took 0.245956294 seconds)
    (22/341) benchmarking ("perf_sum2", "ComplexF64", 0)...
    done (took 0.028587812 seconds)
    (23/341) benchmarking ("sort", "Float32", 0)...
    done (took 0.096621872 seconds)
    (24/341) benchmarking ("perf_sum", "Int64", 1)...
    done (took 0.030945471 seconds)
    (25/341) benchmarking ("collect", "filter", "Float32", 0)...
    done (took 0.101290498 seconds)
    (26/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int8}", 0)...
    done (took 0.080685477 seconds)
    (27/341) benchmarking ("broadcast", "*", "Float32", "(false, false)")...
    done (took 0.188219407 seconds)
    (28/341) benchmarking ("broadcast", "*", "BigInt", "(false, true)")...
    done (took 0.317261428 seconds)
    (29/341) benchmarking ("map", "*", "ComplexF64", "(true, true)")...
    done (took 0.279881351 seconds)
    (30/341) benchmarking ("perf_sum4", "Float32", 1)...
    done (took 0.031352254 seconds)
    (31/341) benchmarking ("broadcast", "identity", "Float32", 0)...
    done (took 0.119560817 seconds)
    (32/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, true)")...
    done (took 0.0424986 seconds)
    (33/341) benchmarking ("collect", "filter", "BigInt", 1)...
    done (took 0.115727047 seconds)
    (34/341) benchmarking ("broadcast", "identity", "Float64", 1)...
    done (took 0.123937668 seconds)
    (35/341) benchmarking ("map", "abs", "Bool", 0)...
    done (took 0.138817338 seconds)
    (36/341) benchmarking ("skipmissing", "collect", "Union{Missing, Bool}", 1)...
    done (took 0.048806623 seconds)
    (37/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, false)")...
    done (took 0.020228943 seconds)
    (38/341) benchmarking ("map", "abs", "BigFloat", 0)...
    done (took 0.246126878 seconds)
    (39/341) benchmarking ("skipmissing", "sum", "Union{Missing, ComplexF64}", 1)...
    done (took 0.106656373 seconds)
    (40/341) benchmarking ("map", "*", "Int8", "(true, true)")...
    done (took 0.326609755 seconds)
    (41/341) benchmarking ("map", "*", "Bool", "(false, false)")...
    done (took 0.166658509 seconds)
    (42/341) benchmarking ("perf_sum3", "Bool", 0)...
    done (took 0.02749983 seconds)
    (43/341) benchmarking ("map", "*", "BigFloat", "(false, false)")...
    done (took 0.142136836 seconds)
    (44/341) benchmarking ("perf_sum", "Float32", 1)...
    done (took 0.025570484 seconds)
    (45/341) benchmarking ("broadcast", "*", "Float32", "(false, true)")...
    done (took 0.019821691 seconds)
    (46/341) benchmarking ("perf_sum", "Int8", 1)...
    done (took 0.150048582 seconds)
    (47/341) benchmarking ("skipmissing", "collect", "Float64", 0)...
    done (took 0.033402541 seconds)
    (48/341) benchmarking ("perf_sum2", "Float64", 1)...
    done (took 0.027244758 seconds)
    (49/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int64}", 0)...
    done (took 0.043684366 seconds)
    (50/341) benchmarking ("perf_sum3", "Float32", 1)...
    done (took 0.027514093 seconds)
    (51/341) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.042637161 seconds)
    (52/341) benchmarking ("perf_sum", "Int8", 0)...
    done (took 0.0284552 seconds)
    (53/341) benchmarking ("broadcast", "identity", "ComplexF64", 1)...
    done (took 0.132269794 seconds)
    (54/341) benchmarking ("perf_countnothing", "BigInt", 0)...
    done (took 0.024058436 seconds)
    (55/341) benchmarking ("map", "identity", "Bool", 0)...
    done (took 0.093153104 seconds)
    (56/341) benchmarking ("map", "abs", "BigFloat", 1)...
    done (took 0.145798302 seconds)
    (57/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, true)")...
    done (took 0.18458376 seconds)
    (58/341) benchmarking ("map", "abs", "ComplexF64", 0)...
    done (took 0.102491391 seconds)
    (59/341) benchmarking ("perf_sum", "Float64", 0)...
    done (took 0.026454165 seconds)
    (60/341) benchmarking ("perf_countequals", "Int8")...
    done (took 0.039632276 seconds)
    (61/341) benchmarking ("perf_countnothing", "Float64", 1)...
    done (took 0.030457714 seconds)
    (62/341) benchmarking ("broadcast", "abs", "BigFloat", 0)...
    done (took 0.159592607 seconds)
    (63/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(true, true)")...
    done (took 0.038631181 seconds)
    (64/341) benchmarking ("skipmissing", "sum", "Float64", 0)...
    done (took 0.025997399 seconds)
    (65/341) benchmarking ("perf_sum2", "BigInt", 0)...
    done (took 0.032222084 seconds)
    (66/341) benchmarking ("map", "identity", "Bool", 1)...
    done (took 0.020434584 seconds)
    (67/341) benchmarking ("broadcast", "*", "Bool", "(false, false)")...
    done (took 0.142405143 seconds)
    (68/341) benchmarking ("collect", "all", "Bool", 0)...
    done (took 0.040107274 seconds)
    (69/341) benchmarking ("map", "*", "ComplexF64", "(false, false)")...
    done (took 0.020812391 seconds)
    (70/341) benchmarking ("perf_sum4", "Float64", 0)...
    done (took 0.031314306 seconds)
    (71/341) benchmarking ("perf_countnothing", "Int8", 0)...
    done (took 0.029302518 seconds)
    (72/341) benchmarking ("skipmissing", "sum", "Union{Missing, Bool}", 1)...
    done (took 0.099461228 seconds)
    (73/341) benchmarking ("skipmissing", "collect", "Int8", 0)...
    done (took 0.160403595 seconds)
    (74/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int64}", 0)...
    done (took 0.066739141 seconds)
    (75/341) benchmarking ("perf_sum3", "BigFloat", 0)...
    done (took 0.032339289 seconds)
    (76/341) benchmarking ("sort", "Union{Nothing, Int64}", 0)...
    done (took 0.119118421 seconds)
    (77/341) benchmarking ("map", "identity", "BigFloat", 0)...
    done (took 0.097758968 seconds)
    (78/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigInt}", 1)...
    done (took 0.046777304 seconds)
    (79/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, false)")...
    done (took 0.049766077 seconds)
    (80/341) benchmarking ("perf_sum", "BigInt", 1)...
    done (took 0.029974553 seconds)
    (81/341) benchmarking ("broadcast", "identity", "Float64", 0)...
    done (took 0.02012987 seconds)
    (82/341) benchmarking ("broadcast", "*", "BigFloat", "(false, false)")...
    done (took 0.191836967 seconds)
    (83/341) benchmarking ("collect", "all", "Float64", 0)...
    done (took 0.02564009 seconds)
    (84/341) benchmarking ("map", "identity", "Float64", 1)...
    done (took 0.038696683 seconds)
    (85/341) benchmarking ("perf_sum3", "Float64", 0)...
    done (took 0.027251053 seconds)
    (86/341) benchmarking ("skipmissing", "collect", "Union{Missing, ComplexF64}", 1)...
    done (took 0.053664177 seconds)
    (87/341) benchmarking ("broadcast", "*", "Int64", "(true, true)")...
    done (took 0.020275805 seconds)
    (88/341) benchmarking ("perf_binaryop", "*", "Int8", "(true, true)")...
    done (took 0.03580367 seconds)
    (89/341) benchmarking ("map", "*", "Float32", "(true, true)")...
    done (took 0.170717812 seconds)
    (90/341) benchmarking ("map", "*", "BigInt", "(false, true)")...
    done (took 0.150724534 seconds)
    (91/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigInt}", 1)...
    done (took 0.088431454 seconds)
    (92/341) benchmarking ("broadcast", "*", "BigInt", "(true, true)")...
    done (took 0.021520586 seconds)
    (93/341) benchmarking ("sort", "BigInt", 0)...
    done (took 0.237509739 seconds)
    (94/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, true)")...
    done (took 0.022392278 seconds)
    (95/341) benchmarking ("perf_binaryop", "*", "BigInt", "(true, true)")...
    done (took 0.046946504 seconds)
    (96/341) benchmarking ("broadcast", "*", "BigInt", "(false, false)")...
    done (took 0.021653754 seconds)
    (97/341) benchmarking ("map", "*", "Bool", "(true, true)")...
    done (took 0.020983135 seconds)
    (98/341) benchmarking ("broadcast", "*", "Float64", "(true, true)")...
    done (took 0.188006527 seconds)
    (99/341) benchmarking ("map", "identity", "Float64", 0)...
    done (took 0.020733521 seconds)
    (100/341) benchmarking ("map", "*", "Int64", "(true, true)")...
    done (took 0.02085925 seconds)
    (101/341) benchmarking ("perf_sum4", "Int64", 1)...
    done (took 0.03123222 seconds)
    (102/341) benchmarking ("perf_countnothing", "Float32", 0)...
    done (took 0.029603454 seconds)
    (103/341) benchmarking ("collect", "filter", "Float32", 1)...
    done (took 0.022550812 seconds)
    (104/341) benchmarking ("map", "*", "Float64", "(false, false)")...
    done (took 0.170962405 seconds)
    (105/341) benchmarking ("collect", "filter", "Bool", 0)...
    done (took 0.103102236 seconds)
    (106/341) benchmarking ("perf_sum", "Int64", 0)...
    done (took 0.029033865 seconds)
    (107/341) benchmarking ("perf_sum3", "Int8", 1)...
    done (took 0.027862795 seconds)
    (108/341) benchmarking ("perf_sum3", "BigFloat", 1)...
    done (took 0.182253696 seconds)
    (109/341) benchmarking ("perf_sum3", "Float32", 0)...
    done (took 0.027720509 seconds)
    (110/341) benchmarking ("map", "*", "BigInt", "(true, true)")...
    done (took 0.022285133 seconds)
    (111/341) benchmarking ("perf_sum", "BigFloat", 1)...
    done (took 0.0207424 seconds)
    (112/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, true)")...
    done (took 0.020370321 seconds)
    (113/341) benchmarking ("sort", "BigFloat", 0)...
    done (took 0.096447549 seconds)
    (114/341) benchmarking ("perf_simplecopy", "Bool", 1)...
    done (took 0.037570032 seconds)
    (115/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, false)")...
    done (took 0.019743917 seconds)
    (116/341) benchmarking ("sort", "Union{Nothing, BigFloat}", 0)...
    done (took 0.105353682 seconds)
    (117/341) benchmarking ("broadcast", "identity", "Int64", 1)...
    done (took 0.118191157 seconds)
    (118/341) benchmarking ("perf_countequals", "Float32")...
    done (took 0.031440472 seconds)
    (119/341) benchmarking ("skipmissing", "collect", "BigFloat", 0)...
    done (took 0.03624839 seconds)
    (120/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigFloat}", 1)...
    done (took 0.085676882 seconds)
    (121/341) benchmarking ("perf_sum", "Float64", 1)...
    done (took 0.023606145 seconds)
    (122/341) benchmarking ("perf_sum4", "Int8", 0)...
    done (took 0.03011427 seconds)
    (123/341) benchmarking ("perf_sum4", "ComplexF64", 0)...
    done (took 0.027360393 seconds)
    (124/341) benchmarking ("broadcast", "abs", "ComplexF64", 1)...
    done (took 0.135113009 seconds)
    (125/341) benchmarking ("perf_simplecopy", "BigInt", 1)...
    done (took 0.026816357 seconds)
    (126/341) benchmarking ("broadcast", "identity", "Bool", 0)...
    done (took 0.131644381 seconds)
    (127/341) benchmarking ("map", "*", "BigInt", "(false, false)")...
    done (took 0.021444012 seconds)
    (128/341) benchmarking ("perf_binaryop", "*", "Bool", "(true, true)")...
    done (took 0.04231782 seconds)
    (129/341) benchmarking ("sort", "Union{Nothing, Float32}", 0)...
    done (took 0.119366276 seconds)
    (130/341) benchmarking ("map", "abs", "Int8", 1)...
    done (took 0.096075014 seconds)
    (131/341) benchmarking ("sort", "Union{Nothing, BigInt}", 0)...
    done (took 0.102326602 seconds)
    (132/341) benchmarking ("map", "identity", "BigFloat", 1)...
    done (took 0.019810753 seconds)
    (133/341) benchmarking ("broadcast", "identity", "BigFloat", 1)...
    done (took 0.137689401 seconds)
    (134/341) benchmarking ("perf_sum2", "Int64", 1)...
    done (took 0.029739938 seconds)
    (135/341) benchmarking ("broadcast", "*", "Float64", "(false, false)")...
    done (took 0.019388471 seconds)
    (136/341) benchmarking ("perf_sum", "ComplexF64", 0)...
    done (took 0.027219736 seconds)
    (137/341) benchmarking ("skipmissing", "sum", "BigFloat", 0)...
    done (took 0.047883604 seconds)
    (138/341) benchmarking ("perf_sum3", "ComplexF64", 1)...
    done (took 0.029396811 seconds)
    (139/341) benchmarking ("perf_simplecopy", "Int8", 1)...
    done (took 0.036658401 seconds)
    (140/341) benchmarking ("perf_sum3", "ComplexF64", 0)...
    done (took 0.028029868 seconds)
    (141/341) benchmarking ("broadcast", "identity", "BigInt", 0)...
    done (took 0.137699246 seconds)
    (142/341) benchmarking ("perf_countequals", "Int64")...
    done (took 0.030783075 seconds)
    (143/341) benchmarking ("perf_sum3", "Bool", 1)...
    done (took 0.025671425 seconds)
    (144/341) benchmarking ("sort", "Union{Nothing, Float64}", 0)...
    done (took 0.119135927 seconds)
    (145/341) benchmarking ("broadcast", "identity", "BigFloat", 0)...
    done (took 0.019291485 seconds)
    (146/341) benchmarking ("sort", "Union{Nothing, Bool}", 0)...
    done (took 0.116312454 seconds)
    (147/341) benchmarking ("map", "abs", "Float32", 1)...
    done (took 0.098100972 seconds)
    (148/341) benchmarking ("broadcast", "abs", "Float64", 1)...
    done (took 0.1288943 seconds)
    (149/341) benchmarking ("perf_sum2", "Float32", 1)...
    done (took 0.02501004 seconds)
    (150/341) benchmarking ("perf_countequals", "Bool")...
    done (took 0.03044556 seconds)
    (151/341) benchmarking ("map", "identity", "Int8", 0)...
    done (took 0.092001437 seconds)
    (152/341) benchmarking ("skipmissing", "sum", "Int8", 0)...
    done (took 0.043285418 seconds)
    (153/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float32}", 1)...
    done (took 0.049273474 seconds)
    (154/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, false)")...
    done (took 0.042026015 seconds)
    (155/341) benchmarking ("collect", "all", "ComplexF64", 1)...
    done (took 0.023963766 seconds)
    (156/341) benchmarking ("map", "*", "Int64", "(false, true)")...
    done (took 0.020037486 seconds)
    (157/341) benchmarking ("map", "identity", "Float32", 1)...
    done (took 0.019724258 seconds)
    (158/341) benchmarking ("perf_simplecopy", "Float32", 0)...
    done (took 0.032798738 seconds)
    (159/341) benchmarking ("broadcast", "identity", "BigInt", 1)...
    done (took 0.019072102 seconds)
    (160/341) benchmarking ("map", "*", "Int8", "(false, false)")...
    done (took 0.0199602 seconds)
    (161/341) benchmarking ("skipmissing", "collect", "Float32", 0)...
    done (took 0.032681699 seconds)
    (162/341) benchmarking ("perf_sum3", "Int64", 0)...
    done (took 0.026570362 seconds)
    (163/341) benchmarking ("perf_simplecopy", "Bool", 0)...
    done (took 0.035833613 seconds)
    (164/341) benchmarking ("sort", "Union{Missing, Int8}", 1)...
    done (took 0.244491891 seconds)
    (165/341) benchmarking ("perf_sum2", "Int8", 0)...
    done (took 0.029704899 seconds)
    (166/341) benchmarking ("perf_countnothing", "BigFloat", 1)...
    done (took 0.024126098 seconds)
    (167/341) benchmarking ("sort", "Union{Missing, BigFloat}", 1)...
    done (took 0.255590957 seconds)
    (168/341) benchmarking ("perf_sum2", "BigFloat", 1)...
    done (took 0.032738418 seconds)
    (169/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float64}", 1)...
    done (took 0.09338805 seconds)
    (170/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Bool}", 0)...
    done (took 0.04035229 seconds)
    (171/341) benchmarking ("map", "*", "Float64", "(false, true)")...
    done (took 0.020496759 seconds)
    (172/341) benchmarking ("collect", "filter", "Int8", 0)...
    done (took 0.101454131 seconds)
    (173/341) benchmarking ("sort", "Int64", 0)...
    done (took 0.021947378 seconds)
    (174/341) benchmarking ("collect", "all", "BigFloat", 0)...
    done (took 0.040370222 seconds)
    (175/341) benchmarking ("skipmissing", "sum", "Union{Nothing, ComplexF64}", 0)...
    done (took 0.085392 seconds)
    (176/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, true)")...
    done (took 0.020565514 seconds)
    (177/341) benchmarking ("map", "identity", "BigInt", 1)...
    done (took 0.097490074 seconds)
    (178/341) benchmarking ("broadcast", "*", "BigFloat", "(true, true)")...
    done (took 0.020967709 seconds)
    (179/341) benchmarking ("map", "*", "Float32", "(false, false)")...
    done (took 0.020319035 seconds)
    (180/341) benchmarking ("perf_simplecopy", "ComplexF64", 1)...
    done (took 0.02634227 seconds)
    (181/341) benchmarking ("collect", "filter", "Float64", 0)...
    done (took 0.021960155 seconds)
    (182/341) benchmarking ("perf_countnothing", "Bool", 1)...
    done (took 0.029816067 seconds)
    (183/341) benchmarking ("perf_sum4", "BigFloat", 0)...
    done (took 0.033943875 seconds)
    (184/341) benchmarking ("broadcast", "*", "BigFloat", "(false, true)")...
    done (took 0.020799655 seconds)
    (185/341) benchmarking ("skipmissing", "collect", "Bool", 0)...
    done (took 0.033351662 seconds)
    (186/341) benchmarking ("perf_sum2", "Int64", 0)...
    done (took 0.027935737 seconds)
    (187/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, false)")...
    done (took 0.020252074 seconds)
    (188/341) benchmarking ("collect", "filter", "Int64", 1)...
    done (took 0.101487991 seconds)
    (189/341) benchmarking ("collect", "filter", "Int8", 1)...
    done (took 0.022045453 seconds)
    (190/341) benchmarking ("broadcast", "*", "Int8", "(true, true)")...
    done (took 0.18900978 seconds)
    (191/341) benchmarking ("collect", "filter", "BigFloat", 1)...
    done (took 0.099518067 seconds)
    (192/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int64}", 1)...
    done (took 0.096091316 seconds)
    (193/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, false)")...
    done (took 0.020448348 seconds)
    (194/341) benchmarking ("map", "identity", "ComplexF64", 0)...
    done (took 0.038870845 seconds)
    (195/341) benchmarking ("map", "identity", "BigInt", 0)...
    done (took 0.020145894 seconds)
    (196/341) benchmarking ("broadcast", "abs", "Bool", 0)...
    done (took 0.132848802 seconds)
    (197/341) benchmarking ("map", "*", "Float32", "(false, true)")...
    done (took 0.020434095 seconds)
    (198/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Bool}", 0)...
    done (took 0.070512919 seconds)
    (199/341) benchmarking ("collect", "filter", "ComplexF64", 0)...
    done (took 0.111261912 seconds)
    (200/341) benchmarking ("skipmissing", "collect", "BigInt", 0)...
    done (took 0.034947033 seconds)
    (201/341) benchmarking ("collect", "all", "BigInt", 0)...
    done (took 0.040296456 seconds)
    (202/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, true)")...
    done (took 0.021490716 seconds)
    (203/341) benchmarking ("map", "abs", "Float64", 0)...
    done (took 0.098619279 seconds)
    (204/341) benchmarking ("skipmissing", "collect", "ComplexF64", 0)...
    done (took 0.034436201 seconds)
    (205/341) benchmarking ("perf_simplecopy", "ComplexF64", 0)...
    done (took 0.025284056 seconds)
    (206/341) benchmarking ("collect", "all", "Int64", 1)...
    done (took 0.099010296 seconds)
    (207/341) benchmarking ("broadcast", "abs", "Float32", 1)...
    done (took 0.130787354 seconds)
    (208/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float32}", 1)...
    done (took 0.093199692 seconds)
    (209/341) benchmarking ("perf_simplecopy", "BigFloat", 0)...
    done (took 0.02661879 seconds)
    (210/341) benchmarking ("sort", "Union{Missing, Int64}", 1)...
    done (took 0.251277229 seconds)
    (211/341) benchmarking ("perf_sum3", "BigInt", 0)...
    done (took 0.029317164 seconds)
    (212/341) benchmarking ("perf_sum2", "BigFloat", 0)...
    done (took 0.020677858 seconds)
    (213/341) benchmarking ("perf_simplecopy", "Int64", 0)...
    done (took 0.026053505 seconds)
    (214/341) benchmarking ("perf_countnothing", "Float64", 0)...
    done (took 0.029064623 seconds)
    (215/341) benchmarking ("perf_sum", "BigInt", 0)...
    done (took 0.020691072 seconds)
    (216/341) benchmarking ("map", "abs", "BigInt", 0)...
    done (took 0.099636625 seconds)
    (217/341) benchmarking ("perf_sum2", "ComplexF64", 1)...
    done (took 0.024921589 seconds)
    (218/341) benchmarking ("broadcast", "*", "ComplexF64", "(true, true)")...
    done (took 0.019658965 seconds)
    (219/341) benchmarking ("map", "abs", "Float32", 0)...
    done (took 0.019913061 seconds)
    (220/341) benchmarking ("collect", "filter", "Bool", 1)...
    done (took 0.02175886 seconds)
    (221/341) benchmarking ("broadcast", "abs", "Float32", 0)...
    done (took 0.019252865 seconds)
    (222/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigFloat}", 1)...
    done (took 0.044028145 seconds)
    (223/341) benchmarking ("broadcast", "abs", "ComplexF64", 0)...
    done (took 0.019492394 seconds)
    (224/341) benchmarking ("perf_sum4", "Float32", 0)...
    done (took 0.028097137 seconds)
    (225/341) benchmarking ("perf_simplecopy", "BigInt", 0)...
    done (took 0.025692223 seconds)
    (226/341) benchmarking ("perf_sum", "Float32", 0)...
    done (took 0.023021921 seconds)
    (227/341) benchmarking ("collect", "filter", "BigFloat", 0)...
    done (took 0.021840327 seconds)
    (228/341) benchmarking ("broadcast", "identity", "Float32", 1)...
    done (took 0.019265162 seconds)
    (229/341) benchmarking ("perf_sum4", "Float64", 1)...
    done (took 0.028246127 seconds)
    (230/341) benchmarking ("map", "abs", "Int64", 0)...
    done (took 0.099935948 seconds)
    (231/341) benchmarking ("broadcast", "abs", "Int8", 1)...
    done (took 0.119958129 seconds)
    (232/341) benchmarking ("perf_sum3", "Int64", 1)...
    done (took 0.026473475 seconds)
    (233/341) benchmarking ("collect", "all", "Float32", 1)...
    done (took 0.040016536 seconds)
    (234/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.033916456 seconds)
    (235/341) benchmarking ("perf_countequals", "Float64")...
    done (took 0.031779543 seconds)
    (236/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigInt}", 0)...
    done (took 0.069584096 seconds)
    (237/341) benchmarking ("perf_sum4", "Int8", 1)...
    done (took 0.028520371 seconds)
    (238/341) benchmarking ("broadcast", "abs", "BigInt", 0)...
    done (took 0.159248496 seconds)
    (239/341) benchmarking ("broadcast", "identity", "Bool", 1)...
    done (took 0.01974298 seconds)
    (240/341) benchmarking ("perf_countnothing", "Int64", 1)...
    done (took 0.030146557 seconds)
    (241/341) benchmarking ("skipmissing", "sum", "Float32", 0)...
    done (took 0.042415474 seconds)
    (242/341) benchmarking ("broadcast", "*", "Int8", "(false, false)")...
    done (took 0.02005429 seconds)
    (243/341) benchmarking ("collect", "all", "Bool", 1)...
    done (took 0.02498347 seconds)
    (244/341) benchmarking ("perf_simplecopy", "Int64", 1)...
    done (took 0.025821004 seconds)
    (245/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigInt}", 0)...
    done (took 0.037893617 seconds)
    (246/341) benchmarking ("perf_sum2", "Float64", 0)...
    done (took 0.02377221 seconds)
    (247/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(true, true)")...
    done (took 0.021597657 seconds)
    (248/341) benchmarking ("perf_countnothing", "Int64", 0)...
    done (took 0.029378674 seconds)
    (249/341) benchmarking ("map", "*", "Int8", "(false, true)")...
    done (took 0.020576645 seconds)
    (250/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, false)")...
    done (took 0.02059608 seconds)
    (251/341) benchmarking ("map", "abs", "ComplexF64", 1)...
    done (took 0.020288467 seconds)
    (252/341) benchmarking ("map", "*", "ComplexF64", "(false, true)")...
    done (took 0.020529401 seconds)
    (253/341) benchmarking ("perf_countnothing", "Bool", 0)...
    done (took 0.029131266 seconds)
    (254/341) benchmarking ("map", "*", "BigFloat", "(false, true)")...
    done (took 0.021624981 seconds)
    (255/341) benchmarking ("broadcast", "*", "Bool", "(true, true)")...
    done (took 0.019868769 seconds)
    (256/341) benchmarking ("broadcast", "*", "Float32", "(true, true)")...
    done (took 0.019861752 seconds)
    (257/341) benchmarking ("perf_simplecopy", "Int8", 0)...
    done (took 0.036258008 seconds)
    (258/341) benchmarking ("perf_sum4", "ComplexF64", 1)...
    done (took 0.025239725 seconds)
    (259/341) benchmarking ("collect", "all", "BigInt", 1)...
    done (took 0.02516599 seconds)
    (260/341) benchmarking ("perf_sum4", "Bool", 1)...
    done (took 0.031301412 seconds)
    (261/341) benchmarking ("collect", "all", "Int8", 1)...
    done (took 0.039986061 seconds)
    (262/341) benchmarking ("sort", "Union{Missing, Float32}", 1)...
    done (took 0.481844253 seconds)
    (263/341) benchmarking ("perf_sum4", "BigFloat", 1)...
    done (took 0.021894127 seconds)
    (264/341) benchmarking ("collect", "filter", "ComplexF64", 1)...
    done (took 0.022488693 seconds)
    (265/341) benchmarking ("perf_simplecopy", "Float32", 1)...
    done (took 0.032981279 seconds)
    (266/341) benchmarking ("perf_simplecopy", "Float64", 0)...
    done (took 0.026006523 seconds)
    (267/341) benchmarking ("map", "*", "Float64", "(true, true)")...
    done (took 0.020849884 seconds)
    (268/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, false)")...
    done (took 0.021972145 seconds)
    (269/341) benchmarking ("map", "abs", "Float64", 1)...
    done (took 0.020415802 seconds)
    (270/341) benchmarking ("collect", "filter", "Int64", 0)...
    done (took 0.022281121 seconds)
    (271/341) benchmarking ("map", "*", "Bool", "(false, true)")...
    done (took 0.02061224 seconds)
    (272/341) benchmarking ("broadcast", "*", "Float64", "(false, true)")...
    done (took 0.020062029 seconds)
    (273/341) benchmarking ("skipmissing", "sum", "ComplexF64", 0)...
    done (took 0.049762951 seconds)
    (274/341) benchmarking ("collect", "all", "Int64", 0)...
    done (took 0.025349613 seconds)
    (275/341) benchmarking ("perf_sum3", "BigInt", 1)...
    done (took 0.021142929 seconds)
    (276/341) benchmarking ("skipmissing", "collect", "Union{Nothing, ComplexF64}", 0)...
    done (took 0.041522445 seconds)
    (277/341) benchmarking ("perf_simplecopy", "BigFloat", 1)...
    done (took 0.026360996 seconds)
    (278/341) benchmarking ("perf_countnothing", "ComplexF64", 0)...
    done (took 0.030542394 seconds)
    (279/341) benchmarking ("broadcast", "identity", "Int8", 1)...
    done (took 0.120528406 seconds)
    (280/341) benchmarking ("map", "identity", "Int64", 1)...
    done (took 0.037270188 seconds)
    (281/341) benchmarking ("collect", "all", "Float32", 0)...
    done (took 0.025211663 seconds)
    (282/341) benchmarking ("broadcast", "identity", "Int64", 0)...
    done (took 0.019866415 seconds)
    (283/341) benchmarking ("sort", "Union{Missing, BigInt}", 1)...
    done (took 0.267157035 seconds)
    (284/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int8}", 1)...
    done (took 0.096405608 seconds)
    (285/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float64}", 0)...
    done (took 0.042093204 seconds)
    (286/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int8}", 0)...
    done (took 0.040228608 seconds)
    (287/341) benchmarking ("perf_binaryop", "*", "Float64", "(true, true)")...
    done (took 0.020866769 seconds)
    (288/341) benchmarking ("perf_sum", "Bool", 0)...
    done (took 0.031620934 seconds)
    (289/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, true)")...
    done (took 0.020785167 seconds)
    (290/341) benchmarking ("broadcast", "abs", "BigInt", 1)...
    done (took 0.021314177 seconds)
    (291/341) benchmarking ("broadcast", "abs", "Float64", 0)...
    done (took 0.019904676 seconds)
    (292/341) benchmarking ("skipmissing", "sum", "Bool", 0)...
    done (took 0.048322043 seconds)
    (293/341) benchmarking ("collect", "all", "Int8", 0)...
    done (took 0.025649034 seconds)
    (294/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, true)")...
    done (took 0.020842725 seconds)
    (295/341) benchmarking ("broadcast", "abs", "Int8", 0)...
    done (took 0.019884039 seconds)
    (296/341) benchmarking ("broadcast", "*", "Int8", "(false, true)")...
    done (took 0.020147439 seconds)
    (297/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigFloat}", 0)...
    done (took 0.069858542 seconds)
    (298/341) benchmarking ("perf_sum", "Bool", 1)...
    done (took 0.028889072 seconds)
    (299/341) benchmarking ("broadcast", "*", "Int64", "(false, false)")...
    done (took 0.020176344 seconds)
    (300/341) benchmarking ("perf_sum4", "Bool", 0)...
    done (took 0.028842789 seconds)
    (301/341) benchmarking ("broadcast", "abs", "BigFloat", 1)...
    done (took 0.020799516 seconds)
    (302/341) benchmarking ("map", "identity", "Int64", 0)...
    done (took 0.020481387 seconds)
    (303/341) benchmarking ("skipmissing", "sum", "BigInt", 0)...
    done (took 0.048463394 seconds)
    (304/341) benchmarking ("perf_sum2", "BigInt", 1)...
    done (took 0.021252682 seconds)
    (305/341) benchmarking ("map", "identity", "Int8", 1)...
    done (took 0.020511716 seconds)
    (306/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigFloat}", 0)...
    done (took 0.038611254 seconds)
    (307/341) benchmarking ("skipmissing", "collect", "Int64", 0)...
    done (took 0.033023935 seconds)
    (308/341) benchmarking ("sort", "Bool", 0)...
    done (took 0.106986704 seconds)
    (309/341) benchmarking ("perf_sum4", "BigInt", 0)...
    done (took 0.033059204 seconds)
    (310/341) benchmarking ("perf_sum2", "Float32", 0)...
    done (took 0.023680979 seconds)
    (311/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float32}", 0)...
    done (took 0.072919658 seconds)
    (312/341) benchmarking ("broadcast", "identity", "Int8", 0)...
    done (took 0.019964958 seconds)
    (313/341) benchmarking ("map", "identity", "ComplexF64", 1)...
    done (took 0.020565005 seconds)
    (314/341) benchmarking ("perf_binaryop", "*", "Int64", "(true, true)")...
    done (took 0.020832426 seconds)
    (315/341) benchmarking ("sort", "Union{Nothing, Int8}", 0)...
    done (took 0.119275922 seconds)
    (316/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.034212652 seconds)
    (317/341) benchmarking ("map", "*", "BigFloat", "(true, true)")...
    done (took 0.022259875 seconds)
    (318/341) benchmarking ("map", "abs", "Int64", 1)...
    done (took 0.020644449 seconds)
    (319/341) benchmarking ("skipmissing", "sum", "Int64", 0)...
    done (took 0.028291724 seconds)
    (320/341) benchmarking ("perf_countnothing", "ComplexF64", 1)...
    done (took 0.029866458 seconds)
    (321/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float64}", 0)...
    done (took 0.07559059 seconds)
    (322/341) benchmarking ("perf_sum3", "Int8", 0)...
    done (took 0.026847471 seconds)
    (323/341) benchmarking ("perf_sum4", "BigInt", 1)...
    done (took 0.023600251 seconds)
    (324/341) benchmarking ("perf_sum2", "Bool", 0)...
    done (took 0.028387761 seconds)
    (325/341) benchmarking ("broadcast", "abs", "Bool", 1)...
    done (took 0.01989407 seconds)
    (326/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, true)")...
    done (took 0.020822368 seconds)
    (327/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float64}", 1)...
    done (took 0.047469963 seconds)
    (328/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int8}", 1)...
    done (took 0.049154261 seconds)
    (329/341) benchmarking ("map", "abs", "BigInt", 1)...
    done (took 0.021802586 seconds)
    (330/341) benchmarking ("perf_countnothing", "BigFloat", 0)...
    done (took 0.024211076 seconds)
    (331/341) benchmarking ("map", "abs", "Int8", 0)...
    done (took 0.020418272 seconds)
    (332/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, false)")...
    done (took 0.020795015 seconds)
    (333/341) benchmarking ("sort", "Float64", 0)...
    done (took 0.097677745 seconds)
    (334/341) benchmarking ("perf_sum2", "Int8", 1)...
    done (took 0.028246212 seconds)
    (335/341) benchmarking ("perf_sum", "ComplexF64", 1)...
    done (took 0.025583284 seconds)
    (336/341) benchmarking ("sort", "Int8", 0)...
    done (took 0.111109037 seconds)
    (337/341) benchmarking ("collect", "filter", "BigInt", 0)...
    done (took 0.022715383 seconds)
    (338/341) benchmarking ("perf_sum4", "Int64", 0)...
    done (took 0.028803562 seconds)
    (339/341) benchmarking ("broadcast", "identity", "ComplexF64", 0)...
    done (took 0.019982099 seconds)
    (340/341) benchmarking ("sort", "Union{Missing, Float64}", 1)...
    done (took 0.494980264 seconds)
    (341/341) benchmarking ("collect", "all", "BigFloat", 1)...
    done (took 0.025858206 seconds)
  done (took 22.385236671 seconds)
done (took 23.186218099 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.168808455 seconds)
  (2/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.034901029 seconds)
  (3/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.040696394 seconds)
  (4/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.02900882 seconds)
  (5/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.032571525 seconds)
  (6/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.03332936 seconds)
  (7/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.043084321 seconds)
  (8/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.03010908 seconds)
  (9/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.033172209 seconds)
  (10/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.040297085 seconds)
  (11/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.148626135 seconds)
  (12/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.020429785 seconds)
  (13/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.028110992 seconds)
  (14/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.03567074 seconds)
  (15/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.028944313 seconds)
  (16/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.036759578 seconds)
  (17/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.033001335 seconds)
  (18/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.035940884 seconds)
  (19/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.020860041 seconds)
  (20/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.036222306 seconds)
  (21/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.031534147 seconds)
  (22/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.03154245 seconds)
  (23/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.029284703 seconds)
  (24/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.035619766 seconds)
  (25/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.020821159 seconds)
  (26/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.028920025 seconds)
  (27/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.162634356 seconds)
  (28/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.040859626 seconds)
  (29/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.02414444 seconds)
  (30/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.029950189 seconds)
  (31/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.028336752 seconds)
  (32/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.042348846 seconds)
  (33/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.028044737 seconds)
  (34/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.027547671 seconds)
  (35/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.029568427 seconds)
  (36/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.025556854 seconds)
  (37/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.030246793 seconds)
  (38/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.026648271 seconds)
  (39/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.156406394 seconds)
  (40/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.025865374 seconds)
  (41/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.020599849 seconds)
  (42/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.033063111 seconds)
  (43/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.027433267 seconds)
  (44/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.027959457 seconds)
  (45/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.028726211 seconds)
  (46/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.031530632 seconds)
  (47/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.02553887 seconds)
  (48/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.033796766 seconds)
  (49/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.020072471 seconds)
  (50/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.03979977 seconds)
  (51/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.155577994 seconds)
  (52/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.029194426 seconds)
  (53/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.024018744 seconds)
  (54/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.028499749 seconds)
  (55/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.025537812 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.029442843 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.02378537 seconds)
  (58/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.031742732 seconds)
  (59/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.025390558 seconds)
  (60/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.039159842 seconds)
  (61/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.028552437 seconds)
  (62/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.027918592 seconds)
  (63/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.019894396 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.028554351 seconds)
  (65/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.027483307 seconds)
  (66/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.027746073 seconds)
  (67/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.019146226 seconds)
  (68/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.029047625 seconds)
  (69/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.01989496 seconds)
  (70/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.019805548 seconds)
  (71/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.019431251 seconds)
  (72/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.028545049 seconds)
  (73/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.026879325 seconds)
  (74/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.025010313 seconds)
  (75/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.019571517 seconds)
  (76/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.019857155 seconds)
  (77/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.019694545 seconds)
  (78/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.039162497 seconds)
  (79/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.027237011 seconds)
  (80/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.028869536 seconds)
  (81/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.02040303 seconds)
  (82/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.025577079 seconds)
  (83/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.025097319 seconds)
  (84/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.020484778 seconds)
  (85/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.029137418 seconds)
  (86/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.031301853 seconds)
  (87/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.029006552 seconds)
  (88/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.020419966 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.019576888 seconds)
  (90/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.039449072 seconds)
  (91/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.026546299 seconds)
  (92/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.019862182 seconds)
  (93/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.03131505 seconds)
  (94/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.028912553 seconds)
  (95/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.028742102 seconds)
  (96/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.02000549 seconds)
  (97/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.019600584 seconds)
  (98/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.028742552 seconds)
  (99/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.027837229 seconds)
  (100/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.019865916 seconds)
  (101/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.019166626 seconds)
  (102/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.028874952 seconds)
  (103/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.025152899 seconds)
  (104/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.0286438 seconds)
  (105/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.020327048 seconds)
  (106/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.02884604 seconds)
  (107/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.028720631 seconds)
  (108/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.019280256 seconds)
  (109/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.0284975 seconds)
  (110/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.027393192 seconds)
  (111/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.02889184 seconds)
  (112/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.030753829 seconds)
  (113/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.028551808 seconds)
  (114/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.03113178 seconds)
  (115/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.020341675 seconds)
  (116/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.019104877 seconds)
  (117/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.029613858 seconds)
  (118/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.020233164 seconds)
  (119/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.028948288 seconds)
  (120/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.027890507 seconds)
  (121/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.025319307 seconds)
  (122/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.027643779 seconds)
  (123/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.020389321 seconds)
  (124/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.019459862 seconds)
  (125/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.028647826 seconds)
  (126/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.025876506 seconds)
  (127/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.020200303 seconds)
  (128/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.020328499 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.020174978 seconds)
  (130/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.028607637 seconds)
  (131/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.027273367 seconds)
  (132/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.019163389 seconds)
  (133/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.019821805 seconds)
  (134/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.028606175 seconds)
  (135/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.028440349 seconds)
  (136/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.019629193 seconds)
  (137/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.019408475 seconds)
  (138/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.028561056 seconds)
  (139/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.020344043 seconds)
  (140/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.025882772 seconds)
  (141/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.025282907 seconds)
  (142/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.02852409 seconds)
  (143/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.019876673 seconds)
  (144/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.020227735 seconds)
  (145/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.019428253 seconds)
  (146/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.019875811 seconds)
  (147/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.028801395 seconds)
  (148/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.025292173 seconds)
  (149/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.028939622 seconds)
  (150/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.020446247 seconds)
  (151/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.028494635 seconds)
  (152/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.027099983 seconds)
done (took 5.791350234 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.076970503 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.064833596 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.183564625 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.146819066 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.03388383 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.034558274 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.025474061 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.0412653 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.027204337 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.046136614 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.045866105 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.04347273 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.16828329 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.041247731 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.020329774 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.032361905 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.02078529 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.048050225 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.149691317 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.045453506 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.06391217 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.019112898 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.036900559 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.039165066 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.033266995 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.039329411 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.044647845 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.021308216 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.038499551 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.038023137 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.047503384 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.022867558 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.020723004 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.040357384 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.0368946 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.02944703 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.020096651 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.02732145 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.032359539 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.020244985 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.064711099 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.039112747 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.027302172 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.027484898 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.021060006 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.035582181 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.021080697 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.028663884 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.035054498 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.027172885 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.033424127 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.038042789 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.022508115 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.038833761 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.019283867 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.028228306 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.027849243 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.020057464 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.021064868 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.020273508 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.020156467 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.023200267 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.033437429 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.040062645 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.024436228 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.028074879 seconds)
  done (took 3.596996405 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.046168278 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.067231478 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.035044352 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.035440786 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.020094495 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.02056552 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.020592764 seconds)
  done (took 1.145921406 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.093457708 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.142331644 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.150375496 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.15174907 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.161916621 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.148391221 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.033408311 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.051056611 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.056055832 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.162837561 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.158763016 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.153106936 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.024697946 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.033311226 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.053280797 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.156148529 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.03363002 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.028189519 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.147503366 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.153680082 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.025900958 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.052470297 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.033697848 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.023827343 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.151913986 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.144378324 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.024632199 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.062861411 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.023277264 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.021145195 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.021049594 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.043925811 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.144128149 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.036550482 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.021373647 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.020130908 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.141317554 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.021714214 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.144080521 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.028438617 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.143851188 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.023717212 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.02380168 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.021540856 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.022459848 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.146782243 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.022578821 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.021170189 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.020758746 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.145881887 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.032171272 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.144302991 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.022705368 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.026407295 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.028184394 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.027963098 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.028248498 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.021563344 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.147126714 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.031508745 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.022980036 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.155599107 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.155429493 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.14480873 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.155782638 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.030395304 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.145520925 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.144885772 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.021542688 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.02947159 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.022095168 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.159320192 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.025276288 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.023846091 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.01988793 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.028763523 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.163781348 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.163941188 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.164356481 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.036072351 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.023120635 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.022142711 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.161341015 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.164141702 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.027559166 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.021826172 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.021869356 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.037598915 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.046952469 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.024180302 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.026530115 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.021829495 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.032488288 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.024224412 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.023573611 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.158235295 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.02095945 seconds)
  done (took 7.937278225 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.039682036 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.021631751 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.021215699 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.021576388 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.021802592 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.02165514 seconds)
  done (took 1.133930651 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.049318411 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.022258781 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.034762307 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.021978362 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.045113503 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.140079695 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.139967712 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.023452303 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.039309402 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.034376287 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.140007276 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.142968555 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.142601899 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.023331595 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.140443361 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.03385741 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.140500477 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.026888382 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.033181703 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.023220307 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.032768094 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.022888052 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.023086454 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.155248009 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.017123984 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.033489286 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.03166884 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.033324046 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.032923405 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.022838141 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.022763667 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.016805151 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.027996138 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.022830065 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.141324646 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.028304882 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.022124456 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.017933595 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.026339433 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.016776756 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.143831381 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.023588842 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.026979753 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.018024071 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.022938362 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.028169322 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.017986775 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.032285897 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.142415559 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.018302952 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.018009559 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.02264856 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.016914635 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.017837187 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.028104699 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.0229391 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.017879755 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.142914816 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.023208109 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.028250106 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.022229017 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.016918024 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.022872078 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.01676626 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.027177793 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.017884907 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.028074847 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.023222646 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.023160353 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.022058213 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.017957934 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.022718334 seconds)
  done (took 4.126658317 seconds)
done (took 18.840591034 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.456462155 seconds)
  done (took 1.357355527 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.02938132 seconds)
  done (took 1.942113251 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 0.050931458 seconds)
  done (took 0.980455466 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.311064094 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.515366516 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.740599251 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.09251175 seconds)
  done (took 2.573606265 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.832395468 seconds)
  done (took 1.77157382 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.215028823 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.179496471 seconds)
  done (took 1.350111829 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.497047628 seconds)
  done (took 1.422336454 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.322832875 seconds)
  done (took 2.255660167 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.204452677 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.13568881 seconds)
  done (took 1.273489803 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.612957937 seconds)
  done (took 1.54328776 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.492072732 seconds)
  done (took 5.423777183 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.190643587 seconds)
  done (took 1.173604101 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.192371709 seconds)
  done (took 1.126134319 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 0.700957849 seconds)
  done (took 1.631271899 seconds)
done (took 26.779555336 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.044227601 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.037398022 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.037435002 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.034804078 seconds)
  done (took 1.074031361 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.031203298 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.025230546 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.027560489 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.027918235 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.025346012 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.027231644 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.028005607 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.024117313 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.025334058 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.02453725 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.02299218 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.024396024 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.027092975 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.024187987 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.026775888 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.028151906 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.024577994 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.025162026 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.026510342 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.024153053 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.027147279 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.024508868 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.024496538 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.02591014 seconds)
  done (took 1.555192116 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.034614344 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.025924068 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.027665155 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.024831082 seconds)
  done (took 1.050406889 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.033450596 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.031106409 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.03983496 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.044526448 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.030978971 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.031553414 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.038125642 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.038414759 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.045425045 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.041258518 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.022079161 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.021704665 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.020944955 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.040003548 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.037632483 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.0162481 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.017694715 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.031762513 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.030762927 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.033582237 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.023966454 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.019545389 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.031102861 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.031527212 seconds)
  done (took 1.686777509 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.038178419 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.019853331 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.036321326 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.045382318 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.045494611 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.019745981 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.033974316 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.045949081 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.083841137 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.019776055 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.025726754 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.019689576 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.058613898 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.0196923 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.034907615 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.065234887 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.068088587 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.023812174 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.050872306 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.019771459 seconds)
  done (took 1.717731896 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.029097661 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.024630157 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.025251303 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.019371911 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.030828938 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.0269332 seconds)
  done (took 1.099518376 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.024531988 seconds)
    (2/12) benchmarking ("push_single!", 256)...
    done (took 0.02153018 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.021349838 seconds)
    (4/12) benchmarking ("push_multiple!", 256)...
    done (took 0.025673651 seconds)
    (5/12) benchmarking ("push_single!", 2048)...
    done (took 0.021189773 seconds)
    (6/12) benchmarking ("push_single!", 8)...
    done (took 0.021231789 seconds)
    (7/12) benchmarking ("prerend!", 2048)...
    done (took 0.021211181 seconds)
    (8/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.020063879 seconds)
    (9/12) benchmarking ("push_multiple!", 8)...
    done (took 0.020084801 seconds)
    (10/12) benchmarking ("append!", 2048)...
    done (took 0.020950065 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.020848233 seconds)
    (12/12) benchmarking ("prerend!", 8)...
    done (took 0.021279529 seconds)
  done (took 1.196653722 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.166013811 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.026841461 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.024748575 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.020119847 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.021806638 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.020919582 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.035912973 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.022869654 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.039060623 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.020815501 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.02109401 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.023310825 seconds)
  done (took 1.38100281 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.061150266 seconds)
    (2/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.06662928 seconds)
    (3/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.102006352 seconds)
    (4/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076678318 seconds)
    (5/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.081111716 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.051095236 seconds)
    (7/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.203033455 seconds)
    (8/608) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.033691397 seconds)
    (9/608) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.121485761 seconds)
    (10/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.092975859 seconds)
    (11/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079218432 seconds)
    (12/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.046332294 seconds)
    (13/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.040436282 seconds)
    (14/608) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.023753846 seconds)
    (15/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.055733804 seconds)
    (16/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.073399901 seconds)
    (17/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.092057541 seconds)
    (18/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.027192311 seconds)
    (19/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.076539051 seconds)
    (20/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.245484587 seconds)
    (21/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.089943942 seconds)
    (22/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.093579887 seconds)
    (23/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105537214 seconds)
    (24/608) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080403605 seconds)
    (25/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.047723174 seconds)
    (26/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105438698 seconds)
    (27/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.05093786 seconds)
    (28/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.058809771 seconds)
    (29/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.079129425 seconds)
    (30/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.083508005 seconds)
    (31/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076918958 seconds)
    (32/608) benchmarking ("sumvector_view", "Matrix{Int64}")...
    done (took 0.058462135 seconds)
    (33/608) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.025799953 seconds)
    (34/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.025457989 seconds)
    (35/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.117904289 seconds)
    (36/608) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.058966001 seconds)
    (37/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.077587193 seconds)
    (38/608) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.049127583 seconds)
    (39/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.060986321 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.045001314 seconds)
    (41/608) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.085150346 seconds)
    (42/608) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.024665329 seconds)
    (43/608) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.037928745 seconds)
    (44/608) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.069160199 seconds)
    (45/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.042978518 seconds)
    (46/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.093729641 seconds)
    (47/608) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.049389754 seconds)
    (48/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.074643768 seconds)
    (49/608) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.036984829 seconds)
    (50/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.100260974 seconds)
    (51/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.088946986 seconds)
    (52/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.181288306 seconds)
    (53/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.042759498 seconds)
    (54/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.062746128 seconds)
    (55/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.103231915 seconds)
    (56/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.073163228 seconds)
    (57/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.099529301 seconds)
    (58/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.065817388 seconds)
    (59/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.039906912 seconds)
    (60/608) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.080268104 seconds)
    (61/608) benchmarking ("sumlinear_view", "Matrix{Float64}")...
    done (took 0.068497845 seconds)
    (62/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.060578174 seconds)
    (63/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.223177934 seconds)
    (64/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.035284703 seconds)
    (65/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.135580636 seconds)
    (66/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.043426404 seconds)
    (67/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.079347983 seconds)
    (68/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.069132905 seconds)
    (69/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.049746049 seconds)
    (70/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.049117773 seconds)
    (71/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.065126238 seconds)
    (72/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.091690529 seconds)
    (73/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.080534887 seconds)
    (74/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.080559527 seconds)
    (75/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091088924 seconds)
    (76/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.046347557 seconds)
    (77/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083612437 seconds)
    (78/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.054050518 seconds)
    (79/608) benchmarking ("mapr_access", "Matrix{Int64}")...
    done (took 0.079206546 seconds)
    (80/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.057207491 seconds)
    (81/608) benchmarking ("sumcartesian", "Matrix{Float64}")...
    done (took 0.026540978 seconds)
    (82/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.076583431 seconds)
    (83/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.082424469 seconds)
    (84/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.053054931 seconds)
    (85/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.054768585 seconds)
    (86/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.0906305 seconds)
    (87/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.047804133 seconds)
    (88/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.030436956 seconds)
    (89/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.056513577 seconds)
    (90/608) benchmarking ("sumlogical_view", "Matrix{Int64}")...
    done (took 0.076054103 seconds)
    (91/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.034690564 seconds)
    (92/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.070088626 seconds)
    (93/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.035656074 seconds)
    (94/608) benchmarking ("sum", "3dsubarray")...
    done (took 0.0862179 seconds)
    (95/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.095521365 seconds)
    (96/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.053677552 seconds)
    (97/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.072824602 seconds)
    (98/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.074639988 seconds)
    (99/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.033156843 seconds)
    (100/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.12407112 seconds)
    (101/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.063195049 seconds)
    (102/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.027413353 seconds)
    (103/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.072449271 seconds)
    (104/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.069063326 seconds)
    (105/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.112034983 seconds)
    (106/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.052392107 seconds)
    (107/608) benchmarking ("sumcartesian", "Matrix{Int64}")...
    done (took 0.029641205 seconds)
    (108/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.055882705 seconds)
    (109/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.059487647 seconds)
    (110/608) benchmarking "5d"...
    done (took 0.115244205 seconds)
    (111/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.067134737 seconds)
    (112/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.037011992 seconds)
    (113/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.077016571 seconds)
    (114/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.103105757 seconds)
    (115/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.051700751 seconds)
    (116/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.264085306 seconds)
    (117/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.053130829 seconds)
    (118/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106252422 seconds)
    (119/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.075451723 seconds)
    (120/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.042392039 seconds)
    (121/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.031029538 seconds)
    (122/608) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.0516361 seconds)
    (123/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075541884 seconds)
    (124/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.068446476 seconds)
    (125/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.084640174 seconds)
    (126/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.052721139 seconds)
    (127/608) benchmarking ("sumrange_view", "Matrix{Float64}")...
    done (took 0.041361684 seconds)
    (128/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.042455981 seconds)
    (129/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.079913423 seconds)
    (130/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.050598664 seconds)
    (131/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.196987121 seconds)
    (132/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.073240622 seconds)
    (133/608) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.057956679 seconds)
    (134/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.029032192 seconds)
    (135/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.042620151 seconds)
    (136/608) benchmarking ("sumcolon_view", "Matrix{Float64}")...
    done (took 0.031092755 seconds)
    (137/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.108152186 seconds)
    (138/608) benchmarking ("sumrange", "Matrix{Float64}")...
    done (took 0.032891059 seconds)
    (139/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.090267813 seconds)
    (140/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.087539217 seconds)
    (141/608) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.029769909 seconds)
    (142/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.060714794 seconds)
    (143/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.050157821 seconds)
    (144/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.059337301 seconds)
    (145/608) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.055138448 seconds)
    (146/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.072048058 seconds)
    (147/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.093388284 seconds)
    (148/608) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.139172017 seconds)
    (149/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.044250783 seconds)
    (150/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.048371145 seconds)
    (151/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.061569944 seconds)
    (152/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099462335 seconds)
    (153/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.080492675 seconds)
    (154/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.0450205 seconds)
    (155/608) benchmarking ("sumcolon", "Matrix{Int64}")...
    done (took 0.03947968 seconds)
    (156/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.054095946 seconds)
    (157/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.065058506 seconds)
    (158/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.054414819 seconds)
    (159/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.080602584 seconds)
    (160/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.049047141 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.069305795 seconds)
    (162/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.058908831 seconds)
    (163/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.100209674 seconds)
    (164/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.102992386 seconds)
    (165/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.056636925 seconds)
    (166/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.060469783 seconds)
    (167/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.06387818 seconds)
    (168/608) benchmarking "ind2sub"...
    done (took 0.078979069 seconds)
    (169/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.029417896 seconds)
    (170/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.116283997 seconds)
    (171/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.05972986 seconds)
    (172/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.078948746 seconds)
    (173/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.042118629 seconds)
    (174/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101171657 seconds)
    (175/608) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.071136791 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.063230306 seconds)
    (177/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.041367351 seconds)
    (178/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.05988431 seconds)
    (179/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.060936723 seconds)
    (180/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.062413476 seconds)
    (181/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.103438809 seconds)
    (182/608) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.050801276 seconds)
    (183/608) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.026657609 seconds)
    (184/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.049520872 seconds)
    (185/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.109207096 seconds)
    (186/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.03325602 seconds)
    (187/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079253119 seconds)
    (188/608) benchmarking ("sumcartesian_view", "Matrix{Float64}")...
    done (took 0.046345575 seconds)
    (189/608) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.049286733 seconds)
    (190/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.077016991 seconds)
    (191/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.052855622 seconds)
    (192/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.038540055 seconds)
    (193/608) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.023353127 seconds)
    (194/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.091476865 seconds)
    (195/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.125596972 seconds)
    (196/608) benchmarking ("sumelt_boundscheck", "Matrix{Float64}")...
    done (took 0.025228297 seconds)
    (197/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.07674098 seconds)
    (198/608) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.072541549 seconds)
    (199/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.064296977 seconds)
    (200/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.085656339 seconds)
    (201/608) benchmarking ("sumelt", "1:100000")...
    done (took 0.024687978 seconds)
    (202/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.09019029 seconds)
    (203/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.255390307 seconds)
    (204/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.078846041 seconds)
    (205/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.098200723 seconds)
    (206/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.147286143 seconds)
    (207/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.072073574 seconds)
    (208/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.072073173 seconds)
    (209/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.075803973 seconds)
    (210/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.066771933 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.033259714 seconds)
    (212/608) benchmarking ("sumlogical", "Matrix{Float64}")...
    done (took 0.080073188 seconds)
    (213/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.0892917 seconds)
    (214/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.049627198 seconds)
    (215/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.045909431 seconds)
    (216/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.088950689 seconds)
    (217/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.072543671 seconds)
    (218/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.090898332 seconds)
    (219/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.071067208 seconds)
    (220/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076406732 seconds)
    (221/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.059862116 seconds)
    (222/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.061090027 seconds)
    (223/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.059979258 seconds)
    (224/608) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.058025924 seconds)
    (225/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.103942949 seconds)
    (226/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.078583006 seconds)
    (227/608) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.083355922 seconds)
    (228/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.038665616 seconds)
    (229/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.069459207 seconds)
    (230/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.073910654 seconds)
    (231/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.093781972 seconds)
    (232/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.035846583 seconds)
    (233/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.099688448 seconds)
    (234/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.040300273 seconds)
    (235/608) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.101039891 seconds)
    (236/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.033273821 seconds)
    (237/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089243555 seconds)
    (238/608) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.030853921 seconds)
    (239/608) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.126349286 seconds)
    (240/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.034258971 seconds)
    (241/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.055713399 seconds)
    (242/608) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.024287353 seconds)
    (243/608) benchmarking ("sumeach", "1:100000")...
    done (took 0.028752447 seconds)
    (244/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.101589264 seconds)
    (245/608) benchmarking ("sumvector", "1:100000")...
    done (took 0.082190958 seconds)
    (246/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.064096905 seconds)
    (247/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.057929319 seconds)
    (248/608) benchmarking ("sumlogical", "1:100000")...
    done (took 0.100003455 seconds)
    (249/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.098045182 seconds)
    (250/608) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.032719692 seconds)
    (251/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.070281342 seconds)
    (252/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.073017823 seconds)
    (253/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.06261688 seconds)
    (254/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077246512 seconds)
    (255/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.066019929 seconds)
    (256/608) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.046412152 seconds)
    (257/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.054733035 seconds)
    (258/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.065677994 seconds)
    (259/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.041640523 seconds)
    (260/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.038482008 seconds)
    (261/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088516496 seconds)
    (262/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.054433203 seconds)
    (263/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.098745386 seconds)
    (264/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.039289649 seconds)
    (265/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.030246441 seconds)
    (266/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.104902588 seconds)
    (267/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.072972856 seconds)
    (268/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.211886224 seconds)
    (269/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.031141085 seconds)
    (270/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.061424923 seconds)
    (271/608) benchmarking "4d"...
    done (took 0.082505343 seconds)
    (272/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.046796177 seconds)
    (273/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.040280172 seconds)
    (274/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.073507562 seconds)
    (275/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.058967025 seconds)
    (276/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.096996542 seconds)
    (277/608) benchmarking ("sumcartesian_view", "Matrix{Int64}")...
    done (took 0.044156028 seconds)
    (278/608) benchmarking ("sumvector", "Matrix{Float64}")...
    done (took 0.055873308 seconds)
    (279/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.079619718 seconds)
    (280/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.035071901 seconds)
    (281/608) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.050018258 seconds)
    (282/608) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.023724273 seconds)
    (283/608) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.042988937 seconds)
    (284/608) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.030536026 seconds)
    (285/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082812463 seconds)
    (286/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.030064773 seconds)
    (287/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.070345781 seconds)
    (288/608) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.02285369 seconds)
    (289/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.084573012 seconds)
    (290/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.040832358 seconds)
    (291/608) benchmarking ("sumvector_view", "Matrix{Float64}")...
    done (took 0.050696595 seconds)
    (292/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.058574687 seconds)
    (293/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.063023126 seconds)
    (294/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.089196492 seconds)
    (295/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.047897881 seconds)
    (296/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.096064393 seconds)
    (297/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.043649724 seconds)
    (298/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.074774283 seconds)
    (299/608) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.063210091 seconds)
    (300/608) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.070520366 seconds)
    (301/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.041794236 seconds)
    (302/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.058211009 seconds)
    (303/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.059883427 seconds)
    (304/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.078502867 seconds)
    (305/608) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.050843617 seconds)
    (306/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.079036181 seconds)
    (307/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.101948255 seconds)
    (308/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.058834363 seconds)
    (309/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.101066722 seconds)
    (310/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.045790923 seconds)
    (311/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.078777793 seconds)
    (312/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.061993716 seconds)
    (313/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.081505185 seconds)
    (314/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.06930936 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.152400028 seconds)
    (316/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.099234994 seconds)
    (317/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.069410627 seconds)
    (318/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.066305484 seconds)
    (319/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.030020496 seconds)
    (320/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.050883449 seconds)
    (321/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.068897937 seconds)
    (322/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.069040981 seconds)
    (323/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.136626669 seconds)
    (324/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.085924085 seconds)
    (325/608) benchmarking ("sumlinear", "Matrix{Int64}")...
    done (took 0.027169461 seconds)
    (326/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.063453807 seconds)
    (327/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.049584644 seconds)
    (328/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.068253978 seconds)
    (329/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.069440906 seconds)
    (330/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.038617127 seconds)
    (331/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.108670666 seconds)
    (332/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.063142922 seconds)
    (333/608) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.043465651 seconds)
    (334/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.073521681 seconds)
    (335/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.052401494 seconds)
    (336/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.063055891 seconds)
    (337/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.032551167 seconds)
    (338/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.06030462 seconds)
    (339/608) benchmarking ("sumcolon", "1:100000")...
    done (took 0.061067593 seconds)
    (340/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.053218451 seconds)
    (341/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.055096168 seconds)
    (342/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.230701645 seconds)
    (343/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.084812952 seconds)
    (344/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.067266884 seconds)
    (345/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.099230648 seconds)
    (346/608) benchmarking "3d"...
    done (took 0.057436758 seconds)
    (347/608) benchmarking ("sum", "3darray")...
    done (took 0.046390447 seconds)
    (348/608) benchmarking ("sumlogical", "Matrix{Int64}")...
    done (took 0.073715891 seconds)
    (349/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.07147746 seconds)
    (350/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.068702934 seconds)
    (351/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.03936073 seconds)
    (352/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.03976703 seconds)
    (353/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.095623161 seconds)
    (354/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.072794903 seconds)
    (355/608) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.081032352 seconds)
    (356/608) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.051618342 seconds)
    (357/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.062000327 seconds)
    (358/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.064082795 seconds)
    (359/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.053069111 seconds)
    (360/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.084347673 seconds)
    (361/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.060285164 seconds)
    (362/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.080759431 seconds)
    (363/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.033852094 seconds)
    (364/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.030517076 seconds)
    (365/608) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.022415497 seconds)
    (366/608) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.025750646 seconds)
    (367/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.079065751 seconds)
    (368/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.067975182 seconds)
    (369/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.065157985 seconds)
    (370/608) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.060254141 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Matrix{Int64}")...
    done (took 0.026545048 seconds)
    (372/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.06213581 seconds)
    (373/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.063422056 seconds)
    (374/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.026634594 seconds)
    (375/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.040730492 seconds)
    (376/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.050068252 seconds)
    (377/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.053980512 seconds)
    (378/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.047426603 seconds)
    (379/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.062731965 seconds)
    (380/608) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.070940342 seconds)
    (381/608) benchmarking ("sumrange", "Matrix{Int64}")...
    done (took 0.051021515 seconds)
    (382/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.059344 seconds)
    (383/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.060484711 seconds)
    (384/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.106567869 seconds)
    (385/608) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.05379304 seconds)
    (386/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.044249609 seconds)
    (387/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.103369486 seconds)
    (388/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.110432973 seconds)
    (389/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.044018913 seconds)
    (390/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.04929883 seconds)
    (391/608) benchmarking ("sumelt", "Matrix{Int64}")...
    done (took 0.025757783 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.034093764 seconds)
    (393/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.080338735 seconds)
    (394/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.104758129 seconds)
    (395/608) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.115172164 seconds)
    (396/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.033834009 seconds)
    (397/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.041163339 seconds)
    (398/608) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.041226385 seconds)
    (399/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.042724794 seconds)
    (400/608) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.025722294 seconds)
    (401/608) benchmarking ("sumeach_view", "Matrix{Float64}")...
    done (took 0.049029884 seconds)
    (402/608) benchmarking ("sumcolon", "Matrix{Float64}")...
    done (took 0.046502585 seconds)
    (403/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.062902038 seconds)
    (404/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.054504814 seconds)
    (405/608) benchmarking ("sumlogical_view", "Matrix{Float64}")...
    done (took 0.072646277 seconds)
    (406/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.062444478 seconds)
    (407/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.031162059 seconds)
    (408/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.067145197 seconds)
    (409/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.057316161 seconds)
    (410/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.049369156 seconds)
    (411/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.065565268 seconds)
    (412/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.329055114 seconds)
    (413/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.089231846 seconds)
    (414/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.108691156 seconds)
    (415/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.072771336 seconds)
    (416/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076795567 seconds)
    (417/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.188429252 seconds)
    (418/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.035509958 seconds)
    (419/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.030634681 seconds)
    (420/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.033930486 seconds)
    (421/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.060899046 seconds)
    (422/608) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.032894608 seconds)
    (423/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.030203607 seconds)
    (424/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101294608 seconds)
    (425/608) benchmarking ("sumcolon_view", "Matrix{Int64}")...
    done (took 0.045359366 seconds)
    (426/608) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.065684237 seconds)
    (427/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.067399862 seconds)
    (428/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.04142332 seconds)
    (429/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.029314942 seconds)
    (430/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.088887702 seconds)
    (431/608) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.023521156 seconds)
    (432/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089645621 seconds)
    (433/608) benchmarking ("sumeach", "Matrix{Int64}")...
    done (took 0.025034143 seconds)
    (434/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.035909853 seconds)
    (435/608) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.035638549 seconds)
    (436/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.032386679 seconds)
    (437/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.047582766 seconds)
    (438/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.091502655 seconds)
    (439/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.062411073 seconds)
    (440/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.065140905 seconds)
    (441/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.060527183 seconds)
    (442/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.064679749 seconds)
    (443/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.141130996 seconds)
    (444/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.113400216 seconds)
    (445/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.035714996 seconds)
    (446/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.09788862 seconds)
    (447/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.030183666 seconds)
    (448/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.030902363 seconds)
    (449/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.030580142 seconds)
    (450/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.066180597 seconds)
    (451/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.045435493 seconds)
    (452/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.074303801 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.102832911 seconds)
    (454/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.043586708 seconds)
    (455/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.056871573 seconds)
    (456/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.033015392 seconds)
    (457/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102709671 seconds)
    (458/608) benchmarking ("sumeach_view", "Matrix{Int64}")...
    done (took 0.052428866 seconds)
    (459/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.059109914 seconds)
    (460/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.040549077 seconds)
    (461/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.0340908 seconds)
    (462/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102350179 seconds)
    (463/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.034192162 seconds)
    (464/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.042420669 seconds)
    (465/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.044654162 seconds)
    (466/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.066105471 seconds)
    (467/608) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.02694262 seconds)
    (468/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.057601167 seconds)
    (469/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.037896168 seconds)
    (470/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.034231227 seconds)
    (471/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.148073851 seconds)
    (472/608) benchmarking "sub2ind"...
    done (took 0.667147537 seconds)
    (473/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.051666637 seconds)
    (474/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.030299769 seconds)
    (475/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.05141002 seconds)
    (476/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.099828372 seconds)
    (477/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.097427448 seconds)
    (478/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.054307315 seconds)
    (479/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.066565218 seconds)
    (480/608) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.077751417 seconds)
    (481/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.062268013 seconds)
    (482/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.05074388 seconds)
    (483/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.074088719 seconds)
    (484/608) benchmarking "6d"...
    done (took 0.15550072 seconds)
    (485/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.028702285 seconds)
    (486/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.053576028 seconds)
    (487/608) benchmarking ("sumrange", "1:100000")...
    done (took 0.062078189 seconds)
    (488/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.061548151 seconds)
    (489/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.069131849 seconds)
    (490/608) benchmarking ("sumrange_view", "Matrix{Int64}")...
    done (took 0.05676813 seconds)
    (491/608) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.049466997 seconds)
    (492/608) benchmarking ("sumvector", "Matrix{Int64}")...
    done (took 0.054966636 seconds)
    (493/608) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.042172815 seconds)
    (494/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.034948741 seconds)
    (495/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.075757009 seconds)
    (496/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.044281021 seconds)
    (497/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.055112023 seconds)
    (498/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.217883746 seconds)
    (499/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.03767669 seconds)
    (500/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.041852946 seconds)
    (501/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.08567235 seconds)
    (502/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.056579114 seconds)
    (503/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.036892784 seconds)
    (504/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.042222504 seconds)
    (505/608) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.058466396 seconds)
    (506/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.039772764 seconds)
    (507/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.059104408 seconds)
    (508/608) benchmarking ("sumelt", "Matrix{Float64}")...
    done (took 0.023552572 seconds)
    (509/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.06464649 seconds)
    (510/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.042819797 seconds)
    (511/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.072393442 seconds)
    (512/608) benchmarking ("sumlinear_view", "Matrix{Int64}")...
    done (took 0.044522355 seconds)
    (513/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.06429989 seconds)
    (514/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.079898976 seconds)
    (515/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.047663872 seconds)
    (516/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090181438 seconds)
    (517/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.060747389 seconds)
    (518/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.075449829 seconds)
    (519/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.04038457 seconds)
    (520/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.031804182 seconds)
    (521/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.077394326 seconds)
    (522/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.04288225 seconds)
    (523/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.03113058 seconds)
    (524/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.099019398 seconds)
    (525/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.052108359 seconds)
    (526/608) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.059244386 seconds)
    (527/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.064563178 seconds)
    (528/608) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.050252533 seconds)
    (529/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.068819008 seconds)
    (530/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.073383206 seconds)
    (531/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.068034506 seconds)
    (532/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.057898862 seconds)
    (533/608) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.032869744 seconds)
    (534/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.05740204 seconds)
    (535/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.067662202 seconds)
    (536/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.041967277 seconds)
    (537/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.034242764 seconds)
    (538/608) benchmarking ("sumlinear", "1:100000")...
    done (took 0.029164726 seconds)
    (539/608) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.0298084 seconds)
    (540/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.063623729 seconds)
    (541/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.041868541 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.041800885 seconds)
    (543/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.073059251 seconds)
    (544/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.044058259 seconds)
    (545/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.058302618 seconds)
    (546/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.055827611 seconds)
    (547/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.079531638 seconds)
    (548/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.043829899 seconds)
    (549/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.061755177 seconds)
    (550/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.066668596 seconds)
    (551/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.047831985 seconds)
    (552/608) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.094029828 seconds)
    (553/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.057956596 seconds)
    (554/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.089230544 seconds)
    (555/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.140593827 seconds)
    (556/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.09491136 seconds)
    (557/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.089934547 seconds)
    (558/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.096352745 seconds)
    (559/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.033981295 seconds)
    (560/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.037158392 seconds)
    (561/608) benchmarking ("sumeach", "Matrix{Float64}")...
    done (took 0.023839742 seconds)
    (562/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.071899767 seconds)
    (563/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.035189959 seconds)
    (564/608) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.045470232 seconds)
    (565/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.034339736 seconds)
    (566/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09736967 seconds)
    (567/608) benchmarking "2d"...
    done (took 0.03997916 seconds)
    (568/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.072756022 seconds)
    (569/608) benchmarking "7d"...
    done (took 0.216394551 seconds)
    (570/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.036276873 seconds)
    (571/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.053064534 seconds)
    (572/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.056158753 seconds)
    (573/608) benchmarking ("sumlinear", "Matrix{Float64}")...
    done (took 0.025100309 seconds)
    (574/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.040098545 seconds)
    (575/608) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.068011965 seconds)
    (576/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.042673146 seconds)
    (577/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.191260558 seconds)
    (578/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.071548187 seconds)
    (579/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.036081629 seconds)
    (580/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.083610352 seconds)
    (581/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.06454542 seconds)
    (582/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.052563261 seconds)
    (583/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.048922079 seconds)
    (584/608) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.034766911 seconds)
    (585/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.066189351 seconds)
    (586/608) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.058815716 seconds)
    (587/608) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.08439391 seconds)
    (588/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.052053827 seconds)
    (589/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.028931504 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.076598211 seconds)
    (591/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.059765031 seconds)
    (592/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.095446918 seconds)
    (593/608) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.028635959 seconds)
    (594/608) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.034600529 seconds)
    (595/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.083381727 seconds)
    (596/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.056421318 seconds)
    (597/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.084310639 seconds)
    (598/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.034644398 seconds)
    (599/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.110700335 seconds)
    (600/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.097111565 seconds)
    (601/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.058192692 seconds)
    (602/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091077026 seconds)
    (603/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.025444207 seconds)
    (604/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.043738063 seconds)
    (605/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.044880747 seconds)
    (606/608) benchmarking ("mapr_access", "Matrix{Float64}")...
    done (took 0.078718387 seconds)
    (607/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.039757798 seconds)
    (608/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.066543645 seconds)
  done (took 42.097838896 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.098445769 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.127927476 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.078621767 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.089576852 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.246363298 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.255346665 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.111235833 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.078202933 seconds)
  done (took 2.144121588 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hcat", 500)...
    done (took 0.024734707 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.05392247 seconds)
    (3/17) benchmarking ("vcat_setind", 5)...
    done (took 0.035408634 seconds)
    (4/17) benchmarking ("catnd_setind", 500)...
    done (took 0.298911949 seconds)
    (5/17) benchmarking ("vcat", 500)...
    done (took 0.054851073 seconds)
    (6/17) benchmarking ("vcat", 5)...
    done (took 0.021173293 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.028596737 seconds)
    (8/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.036298096 seconds)
    (9/17) benchmarking ("vcat_setind", 500)...
    done (took 0.021137503 seconds)
    (10/17) benchmarking ("hvcat", 5)...
    done (took 0.020583305 seconds)
    (11/17) benchmarking ("hcat_setind", 500)...
    done (took 0.055874506 seconds)
    (12/17) benchmarking ("hcat", 5)...
    done (took 0.020840474 seconds)
    (13/17) benchmarking ("hvcat", 500)...
    done (took 0.021241694 seconds)
    (14/17) benchmarking ("catnd", 500)...
    done (took 0.468012502 seconds)
    (15/17) benchmarking ("hcat_setind", 5)...
    done (took 0.020234769 seconds)
    (16/17) benchmarking ("catnd", 5)...
    done (took 0.02564397 seconds)
    (17/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.021414717 seconds)
  done (took 2.293294609 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.31389247 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.956214429 seconds)
    (3/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 1.256877922 seconds)
    (4/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.474374912 seconds)
    (5/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.104226228 seconds)
    (6/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.56106475 seconds)
    (7/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.029256588 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.034285928 seconds)
    (9/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.639726589 seconds)
    (10/12) benchmarking ("gramschmidt!", 1000)...
    done (took 3.360289737 seconds)
    (11/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.098015042 seconds)
    (12/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.180899764 seconds)
  done (took 18.063242633 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 4)...
    done (took 0.031473427 seconds)
    (2/5) benchmarking ("setindex!", 3)...
    done (took 0.159911914 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.158943202 seconds)
    (4/5) benchmarking ("setindex!", 1)...
    done (took 0.028173347 seconds)
    (5/5) benchmarking ("setindex!", 2)...
    done (took 0.027674957 seconds)
  done (took 1.524802009 seconds)
done (took 77.893569198 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 0.041135394 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 0.124672376 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 0.021178686 seconds)
  done (took 1.225535386 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.162302638 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.157959553 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.158568972 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.160677749 seconds)
  done (took 1.686561538 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.030926155 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.030213967 seconds)
  done (took 1.115889964 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 0.19764755 seconds)
  (6/15) benchmarking "18129"...
  done (took 0.263998844 seconds)
  (7/15) benchmarking "20517"...
  done (took 0.045041778 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.040350564 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.034433535 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.035784307 seconds)
  done (took 1.168584953 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.02733738 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.025162585 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.025173331 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.025702576 seconds)
  done (took 1.150932985 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.140251507 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.02002583 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.022581815 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.024346143 seconds)
  done (took 1.255685393 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 0.041077147 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 0.040743962 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 0.071399661 seconds)
  done (took 1.206242044 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.039979287 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.038964532 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.033711213 seconds)
  done (took 1.167702728 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.06464714 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.050285921 seconds)
  done (took 1.165025622 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.036552762 seconds)
  done (took 1.088898237 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.048855944 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.052337691 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.225833366 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.191337901 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.233306911 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.21198685 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.034674233 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.031787015 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.02689823 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.036433188 seconds)
  done (took 2.140964246 seconds)
done (took 15.970823885 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.037091531 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.140494422 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.270112474 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.041496856 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.609205617 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.267889279 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.678317028 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.043813391 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.05406563 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.022241672 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.038956852 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.586849304 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.683138931 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.103405176 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.67000393 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.09514181 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.515919429 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.022433544 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.021421898 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.021964593 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.661706346 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.021782647 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.0219785 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.022403733 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.513678077 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.287226613 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.022877123 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.098910987 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.021985672 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.025771358 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.269290945 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.022916683 seconds)
  done (took 11.957263131 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.026439847 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.076390983 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.026736596 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.037659876 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.023931038 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.023879394 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.025877324 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.022451196 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.065535309 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.022257775 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.039552985 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.021904666 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.026545892 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.02323364 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.042493647 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.022059986 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.024064806 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.02249354 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.022173046 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.02270116 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.041276853 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.021886327 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.022566448 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.022579827 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.022407513 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.03710012 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.02341583 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.021983216 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.022425236 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.026157067 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.027265333 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.023509051 seconds)
  done (took 1.993888789 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078468698 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.078016854 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.027422488 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.062081992 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.07410947 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.024665709 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.10476871 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.044293019 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.067680373 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.022633716 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.039676963 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.02226791 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.058515643 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.023595856 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.04273113 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.022428229 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.024562982 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.022661601 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.021936199 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.022502385 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.041316079 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.022153482 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.022555929 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.022813741 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.02274619 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.038896043 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.023371535 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.022220674 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.02217969 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.026226924 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.028113024 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.023523287 seconds)
  done (took 2.26461328 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.026105443 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.026373939 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.032123362 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.035430699 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.020622971 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.023100732 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.024452778 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.02075779 seconds)
  done (took 1.273696715 seconds)
done (took 18.559341954 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.036094926 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.022526068 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.025402019 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.046512215 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.028803514 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.148236997 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.025011375 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.027520764 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.026179166 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.025378677 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.027622968 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.019867141 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.024491098 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.024661705 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.026524119 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.020480537 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.151177857 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.025035446 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.1491141 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.150540087 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.023267384 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.026283072 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.029009472 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.14986025 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.150443661 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.150819351 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.030052282 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.026584009 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.026300048 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.02358639 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.147791473 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.15002685 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.023357941 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.145487713 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.02083859 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.020549941 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.024973025 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.022062582 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.152219468 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.029866672 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.022841237 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.029500829 seconds)
  done (took 3.50355883 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.153601975 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.159091784 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.152522533 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.033315648 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.029385992 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.032457684 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.15885615 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.029728296 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.028494762 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.157059788 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.024169307 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.028108139 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.030425788 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.021179525 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.027874069 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.024528277 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.029904663 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.022344862 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.027761511 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.028100453 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.157831415 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.021705018 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.029047353 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.029383479 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.02400217 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.030126765 seconds)
  done (took 2.574839643 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.031206577 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.043559057 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.045931745 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109704953 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.063262673 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.043757326 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.037256165 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.047685332 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.053322429 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.021442146 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.043912259 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.050535546 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.049953887 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.028511617 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.060353227 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.040565964 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.034390639 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.023049724 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.028024132 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.056038158 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.044938675 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.04079941 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.054365288 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.041237079 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.020544917 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.030435838 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.025940071 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.037972244 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.032997983 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.033959081 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.02524692 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.025060809 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.022163911 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.032333665 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.025185744 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.019826799 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.044822458 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.034362528 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.03622147 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.060472047 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.031652806 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.022620889 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.048155417 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.081243183 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.020342179 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.024521444 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.02580786 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.034268 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.023003343 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.063784551 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.037348791 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.021160246 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.040833763 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.022835598 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.022888574 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.042574209 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.0230939 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.023526804 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.042055029 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.027796311 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.043184538 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.026901598 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.04153047 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.020505288 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.033076244 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.02293281 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.02306698 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.020136671 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.055347847 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.02869579 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.068757326 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.022849111 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.020351656 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.03423825 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.033499166 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.029131463 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.020310665 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.0405404 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.03476419 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.025524442 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.040208712 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.024695172 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.025359197 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.06627977 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.021081407 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.019973147 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.019982476 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.024246269 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.025004352 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.02213068 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.034395806 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.021197163 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.02510332 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.048989568 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.021374837 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.022291259 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.024360631 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.023380985 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.020961639 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.031776501 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.025265394 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.02336868 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.034405933 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.022264751 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.025125293 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.037075258 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.03124895 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.02031896 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.023316042 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.024240492 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.023340506 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.023232157 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.025359925 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.02344859 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.027025315 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.029226809 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.027592496 seconds)
  done (took 5.016945324 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.24662449 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.235531309 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.022730576 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.231873648 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.030314473 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.163465574 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.234395385 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.235956766 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.02235324 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.023192051 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.021410137 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.177869178 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.173034588 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.185159049 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.164409578 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.024277505 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.055119616 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.183631261 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.239628134 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.236793885 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.054628117 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.029552214 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.025075227 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.023623656 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.023260178 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.030946756 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.039050718 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.031408166 seconds)
  done (took 4.257404098 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.031017201 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.066714675 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.025802426 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.046954638 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.03980575 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.022753909 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.024042974 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.022758133 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.039059932 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.028157148 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.022452515 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.026300655 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.029452295 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.024433161 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.022351516 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.028523664 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.028915081 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.021070113 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.025664333 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.026794027 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.033342765 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.046678551 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.026125666 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.021946199 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.02552873 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.021890348 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.02762956 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.031038075 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.021759549 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.021842565 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.019269538 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.030737057 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.03738693 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.023329875 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.021844645 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.022651285 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.022401135 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.022392919 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.022238144 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.020518788 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.020520032 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.027527574 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.020919778 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.027680502 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.035788424 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.024563864 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.024008966 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.025002499 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.025099789 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.01933057 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.025422884 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.025614153 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.025022495 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.030818801 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.025038464 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.024906253 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.023766334 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.037292248 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.028235311 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.021765887 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.02162769 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.0207314 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.024360556 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.029350275 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.038603962 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.024295739 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.020729034 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.022677298 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.02399309 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.035744049 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.021754339 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.028746413 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.019745485 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.022542308 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.025025844 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.025134851 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.023707545 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.020644762 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.022211532 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.021769362 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.02247085 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.0220306 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.021560624 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.024699404 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.020203725 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.020683157 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.02292045 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.024366299 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.027736527 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.021471684 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.025773557 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.024130224 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.021114955 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.024793539 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.027638855 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.025229916 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.040615261 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.030438425 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.023065854 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.020226776 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.03947235 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.025202704 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.021659558 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.024209614 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.031006066 seconds)
  done (took 3.878429938 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.053051068 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.024426417 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.04187126 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.057888828 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.0326468 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.028161375 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.036158355 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.023634382 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.043927071 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.021492462 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.03157201 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.020700385 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.035269015 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.031206158 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.024325639 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.032292711 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.02515607 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.042966719 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.037353458 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.021065693 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.030973541 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.034777422 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.034945091 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.039827313 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.039163766 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.040551108 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.034620647 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.025135278 seconds)
  done (took 2.04238795 seconds)
done (took 22.331589093 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.118909477 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.29833677 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.10074818 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.8706763 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.156382782 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.217471666 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.298145659 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.081592549 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.272032657 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.183365615 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.738903076 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.383257049 seconds)
done (took 59.877468382 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 6.220809801 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.231622196 seconds)
    (2/2) benchmarking "String"...
    done (took 1.337953724 seconds)
  done (took 3.655496903 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 1.525379042 seconds)
    (2/3) benchmarking "different length"...
    done (took 1.087641984 seconds)
    (3/3) benchmarking "different"...
    done (took 1.121210123 seconds)
  done (took 4.806853284 seconds)
  (4/7) benchmarking "replace"...
  done (took 2.508825217 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.794189078 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.426345445 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.074329953 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.090953498 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.873238227 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.248109494 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.787494115 seconds)
  done (took 27.376136985 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.125845478 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.345525734 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.460486822 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.564828755 seconds)
  done (took 17.66253864 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 1.542396662 seconds)
    (2/4) benchmarking "equal"...
    done (took 1.640642229 seconds)
    (3/4) benchmarking "different length"...
    done (took 1.640832094 seconds)
    (4/4) benchmarking "different"...
    done (took 1.762905139 seconds)
  done (took 7.793510949 seconds)
done (took 71.196589639 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.12774017 seconds)
    (2/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 6.393951762 seconds)
    (3/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.113237884 seconds)
    (4/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.269346716 seconds)
    (5/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.096322349 seconds)
    (6/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.178088698 seconds)
    (7/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.089060224 seconds)
    (8/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.110060403 seconds)
    (9/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.084748792 seconds)
    (10/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.093301115 seconds)
    (11/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.088474288 seconds)
    (12/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.084492711 seconds)
    (13/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.08969692 seconds)
    (14/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.139815816 seconds)
    (15/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.107424258 seconds)
    (16/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.124000884 seconds)
    (17/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 6.222671867 seconds)
    (18/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.090087021 seconds)
    (19/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.090705892 seconds)
    (20/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.739594429 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 3.408634349 seconds)
    (22/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.086201088 seconds)
    (23/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.096998355 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.157778894 seconds)
    (25/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.345541765 seconds)
    (26/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.087071924 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.379829525 seconds)
    (28/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.091154293 seconds)
    (29/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 1.686497195 seconds)
    (30/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.085210585 seconds)
    (31/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.089865033 seconds)
    (32/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.085015775 seconds)
  done (took 181.088230007 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.074592076 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.846604128 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.955517322 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.085599769 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.461729574 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.467641864 seconds)
    (7/36) benchmarking "scal!"...
    done (took 1.946754292 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.521662644 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.108554053 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.187884285 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.423945537 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.253603919 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.424105138 seconds)
    (14/36) benchmarking "dot"...
    done (took 1.686527036 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.172203262 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.138435596 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.042104274 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.97384672 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.199204735 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.033529254 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.134462849 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.635705387 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.606769808 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.974844633 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.105346655 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.119729006 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.096000663 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.130089737 seconds)
    (29/36) benchmarking "asum"...
    done (took 1.627609394 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.030084585 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.176851979 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.09225134 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.290556183 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.327143094 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.084814598 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.099163858 seconds)
  done (took 153.618052248 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.32870593 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.082837123 seconds)
    (2/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.121084677 seconds)
    (3/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.196851897 seconds)
    (4/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.009571187 seconds)
    (5/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 3.889965533 seconds)
    (6/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.088022189 seconds)
    (7/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.076910526 seconds)
    (8/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.076871301 seconds)
    (9/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.102272239 seconds)
    (10/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.101569165 seconds)
    (11/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.194935285 seconds)
    (12/118) benchmarking ("cumsum!", "Int32", 256)...
    done (took 1.129891827 seconds)
    (13/118) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 21.316632498 seconds)
    (14/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.166249259 seconds)
    (15/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.129810112 seconds)
    (16/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.186597639 seconds)
    (17/118) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 21.313528023 seconds)
    (18/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.131436087 seconds)
    (19/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.123429083 seconds)
    (20/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.156652358 seconds)
    (21/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.22267463 seconds)
    (22/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 1.485578469 seconds)
    (23/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.266346421 seconds)
    (24/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.160009268 seconds)
    (25/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.121391134 seconds)
    (26/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.225056604 seconds)
    (27/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.146222783 seconds)
    (28/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.257250071 seconds)
    (29/118) benchmarking ("cumsum!", "Float32", 1024)...
    done (took 1.252299433 seconds)
    (30/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.21099206 seconds)
    (31/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.085308399 seconds)
    (32/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.257795715 seconds)
    (33/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.304317923 seconds)
    (34/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.179579117 seconds)
    (35/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.137278156 seconds)
    (36/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.097909987 seconds)
    (37/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.289731697 seconds)
    (38/118) benchmarking ("3-arg mul!", 2)...
    done (took 1.09155788 seconds)
    (39/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.158584604 seconds)
    (40/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.206509301 seconds)
    (41/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.187977887 seconds)
    (42/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.130071668 seconds)
    (43/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 5.179728999 seconds)
    (44/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.264352766 seconds)
    (45/118) benchmarking ("5-arg mul!", 3)...
    done (took 1.213917922 seconds)
    (46/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.226772811 seconds)
    (47/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.656103403 seconds)
    (48/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.773808169 seconds)
    (49/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.097365287 seconds)
    (50/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.07875097 seconds)
    (51/118) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.091080405 seconds)
    (52/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.084762993 seconds)
    (53/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.077284795 seconds)
    (54/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.401145533 seconds)
    (55/118) benchmarking ("5-arg mul!", 2)...
    done (took 1.094920639 seconds)
    (56/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.124490541 seconds)
    (57/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.647629403 seconds)
    (58/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.098434951 seconds)
    (59/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.080672693 seconds)
    (60/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.079526216 seconds)
    (61/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.084461966 seconds)
    (62/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.079153589 seconds)
    (63/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.083033353 seconds)
    (64/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.118650994 seconds)
    (65/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 2.665459901 seconds)
    (66/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.896159603 seconds)
    (67/118) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 1.437509651 seconds)
    (68/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 2.785658314 seconds)
    (69/118) benchmarking ("cumsum!", "Float32", 256)...
    done (took 1.085422685 seconds)
    (70/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.075201662 seconds)
    (71/118) benchmarking ("cumsum!", "Int32", 1024)...
    done (took 1.086959765 seconds)
    (72/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.987089319 seconds)
    (73/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.145013835 seconds)
    (74/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.075605507 seconds)
    (75/118) benchmarking ("cumsum!", "Float64", 1024)...
    done (took 1.076369268 seconds)
    (76/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.251093714 seconds)
    (77/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.085177895 seconds)
    (78/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.079434351 seconds)
    (79/118) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 2.995866489 seconds)
    (80/118) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 2.99775633 seconds)
    (81/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.08443784 seconds)
    (82/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.183280636 seconds)
    (83/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.086114211 seconds)
    (84/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.074999095 seconds)
    (85/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.541286544 seconds)
    (86/118) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 21.136475557 seconds)
    (87/118) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.09231832 seconds)
    (88/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.096876339 seconds)
    (89/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.130107506 seconds)
    (90/118) benchmarking ("3-arg mul!", 3)...
    done (took 1.078690086 seconds)
    (91/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.074513115 seconds)
    (92/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.082555371 seconds)
    (93/118) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 2.999295703 seconds)
    (94/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.085085609 seconds)
    (95/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.089326093 seconds)
    (96/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.37725619 seconds)
    (97/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.085235549 seconds)
    (98/118) benchmarking ("cumsum!", "Int64", 256)...
    done (took 1.073803409 seconds)
    (99/118) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.352020712 seconds)
    (100/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.446038701 seconds)
    (101/118) benchmarking ("cumsum!", "Float64", 256)...
    done (took 1.084756963 seconds)
    (102/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.156589132 seconds)
    (103/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.484867385 seconds)
    (104/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 3.972218918 seconds)
    (105/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.083855831 seconds)
    (106/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.076782453 seconds)
    (107/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.094100457 seconds)
    (108/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.075112853 seconds)
    (109/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.086212852 seconds)
    (110/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.085967757 seconds)
    (111/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.080472974 seconds)
    (112/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.08016666 seconds)
    (113/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.0798296 seconds)
    (114/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.074119552 seconds)
    (115/118) benchmarking ("cumsum!", "Int64", 1024)...
    done (took 1.074114184 seconds)
    (116/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.08127962 seconds)
    (117/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.094795545 seconds)
    (118/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.075541862 seconds)
  done (took 326.546292515 seconds)
done (took 663.844464205 seconds)
(4/20) benchmarking "parallel"...
done (took 1.074104782 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 1.339805168 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 2.093794273 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 6.268062288 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.330245064 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 1.287669708 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 1.261490775 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 1.297810234 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 1.382737881 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 1.317844131 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 1.254512518 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 1.309306686 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 1.262576843 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 1.378007272 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 1.346419573 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.378389319 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 1.352382768 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 1.285732291 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 2.76058825 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 1.299207052 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 1.259221903 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 1.288927706 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.244612303 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 1.243640625 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 1.312828381 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.381368503 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 1.259580368 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 1.47707484 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.32273666 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 1.297223647 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.334958612 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 1.365327422 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 1.378434448 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 1.304840403 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.365347905 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 1.327779857 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.388586705 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.243566347 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 1.348835783 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 1.269301168 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 1.297488049 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 1.307742436 seconds)
  done (took 62.299299288 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 2.525869567 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.272829589 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.383625427 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.401635941 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.947603365 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.374198457 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.494525394 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.271020294 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.276688935 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.426230918 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.403189554 seconds)
  done (took 17.880952651 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 2.351695044 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.281137565 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.403324776 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.410229506 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.499247196 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.393935759 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.447116087 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.26653061 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.282820765 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.396886083 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.460023645 seconds)
  done (took 17.29153666 seconds)
done (took 98.548875847 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 1.669747455 seconds)
    (2/2) benchmarking "11899"...
    done (took 1.195583192 seconds)
  done (took 3.938411959 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", "(8, 8)", "(8, 8)")...
    done (took 1.107809899 seconds)
    (2/8) benchmarking ("matvec", "(2, 2)", "(2,)")...
    done (took 1.097337646 seconds)
    (3/8) benchmarking ("matvec", "(4, 4)", "(4,)")...
    done (took 1.089651778 seconds)
    (4/8) benchmarking ("matvec", "(16, 16)", "(16,)")...
    done (took 1.09613083 seconds)
    (5/8) benchmarking ("matmat", "(2, 2)", "(2, 2)")...
    done (took 1.089303854 seconds)
    (6/8) benchmarking ("matvec", "(8, 8)", "(8,)")...
    done (took 1.089509804 seconds)
    (7/8) benchmarking ("matmat", "(16, 16)", "(16, 16)")...
    done (took 1.13993743 seconds)
    (8/8) benchmarking ("matmat", "(4, 4)", "(4, 4)")...
    done (took 1.10303721 seconds)
  done (took 9.894560509 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, "Float64")...
    done (took 1.107132367 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float32")...
    done (took 1.098508616 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float64")...
    done (took 1.088604588 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, "Float64")...
    done (took 1.087003995 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, "Float64")...
    done (took 1.086881665 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float64")...
    done (took 1.08666433 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, "Float32")...
    done (took 1.087130518 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float64")...
    done (took 1.087064084 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, "Float32")...
    done (took 1.086553022 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float64")...
    done (took 1.08729208 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, "Float64")...
    done (took 1.087157055 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float32")...
    done (took 1.087007713 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, "Float32")...
    done (took 1.086804769 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float32")...
    done (took 1.08702936 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, "Float32")...
    done (took 1.087129756 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float32")...
    done (took 1.08666652 seconds)
  done (took 18.506775046 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sum", "(2, 2)")...
    done (took 1.086235697 seconds)
    (2/24) benchmarking ("sumabs", "(8, 8)")...
    done (took 1.086967583 seconds)
    (3/24) benchmarking ("minimum", "(2, 2)")...
    done (took 1.087051527 seconds)
    (4/24) benchmarking ("sumabs", "(2,)")...
    done (took 1.086382297 seconds)
    (5/24) benchmarking ("sum", "(4, 4)")...
    done (took 1.087377237 seconds)
    (6/24) benchmarking ("sum", "(2,)")...
    done (took 1.086999544 seconds)
    (7/24) benchmarking ("sum", "(8, 8)")...
    done (took 1.087335906 seconds)
    (8/24) benchmarking ("minimum", "(16, 16)")...
    done (took 1.095554204 seconds)
    (9/24) benchmarking ("sum", "(8,)")...
    done (took 1.087282886 seconds)
    (10/24) benchmarking ("sumabs", "(4, 4)")...
    done (took 1.086499937 seconds)
    (11/24) benchmarking ("sumabs", "(2, 2)")...
    done (took 1.08631989 seconds)
    (12/24) benchmarking ("minimum", "(4, 4)")...
    done (took 1.086765605 seconds)
    (13/24) benchmarking ("sumabs", "(16,)")...
    done (took 1.086980196 seconds)
    (14/24) benchmarking ("sumabs", "(8,)")...
    done (took 1.086754941 seconds)
    (15/24) benchmarking ("minimum", "(16,)")...
    done (took 1.086762048 seconds)
    (16/24) benchmarking ("minimum", "(2,)")...
    done (took 1.086810402 seconds)
    (17/24) benchmarking ("minimum", "(8, 8)")...
    done (took 1.08907183 seconds)
    (18/24) benchmarking ("minimum", "(4,)")...
    done (took 1.086867765 seconds)
    (19/24) benchmarking ("minimum", "(8,)")...
    done (took 1.086970732 seconds)
    (20/24) benchmarking ("sum", "(16,)")...
    done (took 1.087124877 seconds)
    (21/24) benchmarking ("sum", "(4,)")...
    done (took 1.086940843 seconds)
    (22/24) benchmarking ("sumabs", "(4,)")...
    done (took 1.086378638 seconds)
    (23/24) benchmarking ("sum", "(16, 16)")...
    done (took 1.08783317 seconds)
    (24/24) benchmarking ("sumabs", "(16, 16)")...
    done (took 1.089355161 seconds)
  done (took 27.170820111 seconds)
done (took 60.611274317 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.699071713 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.883058967 seconds)
  done (took 6.653424143 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.104951009 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.096670049 seconds)
  done (took 3.357694062 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.087164612 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.086049687 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.086648923 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.086918038 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.08639656 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.087103236 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.086413184 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.087012717 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.086598074 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.086254227 seconds)
  done (took 11.938793271 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.08725068 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.086629569 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.086601953 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.086341639 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.087376229 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.086176721 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.086604504 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.087084867 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.086292183 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.0865069 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.086202897 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.274781272 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.087297216 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.313561463 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.086406495 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.086514061 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.086125727 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.086741482 seconds)
  done (took 21.046550139 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.08630923 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.086842597 seconds)
  done (took 3.245173966 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.085915607 seconds)
    (2/7) benchmarking "second"...
    done (took 1.086785498 seconds)
    (3/7) benchmarking "month"...
    done (took 1.086254726 seconds)
    (4/7) benchmarking "year"...
    done (took 1.086778985 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.086546667 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.086189216 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.086814943 seconds)
  done (took 8.677855601 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.530515248 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.251754661 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.298581196 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.544880212 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.73653837 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 2.044900041 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.735509008 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 2.046060964 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.891827792 seconds)
  done (took 16.152126942 seconds)
done (took 72.145604395 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.849686872 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.081487206 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.592428011 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.174160749 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.099987126 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.417809386 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.097801473 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.628939636 seconds)
done (took 37.023821889 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.277051986 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.073949432 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.111908828 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.111014335 seconds)
  done (took 19.368313527 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.074380086 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.643784797 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.120413633 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.180082768 seconds)
  done (took 19.171443797 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.492046586 seconds)
    (2/2) benchmarking "read"...
    done (took 1.48759762 seconds)
  done (took 4.070027085 seconds)
done (took 49.962788361 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.086309235 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.086890448 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.087166634 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.086835335 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.086762821 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.086704547 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", "Float64")...
    done (took 1.086667969 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.08644571 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.086727444 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.087030999 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.086517161 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.086369348 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.086969972 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.087053704 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", "Float64")...
    done (took 1.086963492 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.086258158 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", "Float32")...
    done (took 1.086789069 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.086998763 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.086647481 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.086642175 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", "Float32")...
    done (took 1.086905648 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.08696933 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.086936477 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.087156318 seconds)
  done (took 27.155338685 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.160866192 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.152519684 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.163800643 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.164109121 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.184922783 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.16386788 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.156621925 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.129093387 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.167277845 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.135311758 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.123263701 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.179233531 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.12753719 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.183285871 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.125792718 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.183179667 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.163632623 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.128977795 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.125611322 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.184735799 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.15889093 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.128789075 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.178636397 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.119968222 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.176681026 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.123374753 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.135869458 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.152552454 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.125942942 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.175976676 seconds)
  done (took 35.653780032 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.120290326 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.086510701 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.086451069 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.176340429 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.08654139 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.086912377 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.086459618 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.086577355 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.086252488 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.086408088 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.086522181 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.087205395 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.086770258 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.086675296 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.0865942 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.086652973 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.120403842 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.266954077 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.086768719 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.0860979 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.139963353 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.087940036 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.087152905 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.086264146 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.086429857 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.086605518 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.08650571 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.087000888 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.087297233 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.086740795 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.086369887 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.131597617 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.122936736 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.086695346 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.203171677 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.150081467 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.086327986 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.116477892 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.086906082 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.086801148 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.086878038 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.086560844 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.086545774 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.086579375 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.143743941 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.086832507 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.087152579 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.087043272 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.087211561 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.08685245 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.086573939 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.086234766 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.101632417 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.086314443 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.086837471 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.086582066 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.086672016 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.086674572 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.08677575 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.086723431 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.087018608 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.152617542 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.086997514 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.086542232 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.460956246 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.086603833 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.152643067 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.086766794 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.086399018 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.305038856 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.086694365 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.287772408 seconds)
  done (took 80.995956359 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.086840278 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.087126221 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.167898757 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.171314768 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.087526145 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.087447682 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.086789152 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.086862275 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.7570719 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.087300538 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.087059007 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.087423285 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.761359811 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.086969445 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.087490088 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.170643182 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.087801383 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.087144361 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.087247357 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.087258707 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.087181233 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.086914658 seconds)
  done (took 26.583494964 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.129254834 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.102611302 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.123577196 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.087443567 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.087267969 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.087147266 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.123192907 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.102131751 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.123653931 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.123132561 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.123214603 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.1290661 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.086860541 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.123195968 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.129065167 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.102809469 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.127247098 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.102109856 seconds)
  done (took 21.086167128 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.26568234 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.253060287 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.16760183 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.131613424 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.348912956 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.32256679 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.191552197 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.262118605 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.132524627 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.25273547 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.262403579 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.129926841 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.322209583 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.129360204 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.130010376 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.349571081 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.166835539 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.12905167 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.199470344 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.191977099 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.265317423 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.199607149 seconds)
  done (took 27.877255682 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.12357062 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.130606365 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.164123681 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.160419861 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.087420169 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.087095346 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.146599957 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.123221094 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.102830414 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.129425957 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.128782684 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.087503286 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.102582002 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.144181676 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.176278872 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.12325286 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.132580575 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.144188659 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.129542213 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.087097459 seconds)
  done (took 23.584094996 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.087967879 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.088748509 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.087968175 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.087339104 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.088206767 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.087896911 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.088084042 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.088026194 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.087854894 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.343352686 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.087755609 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.087986979 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.087967246 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.088307597 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.087891563 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.087724445 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.087980243 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.088196119 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.088121246 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.087696165 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.343634892 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.087853486 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.088489491 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.08779945 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.088850267 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.088097995 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.087913066 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.088036965 seconds)
  done (took 32.04964052 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.148680544 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.087208399 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.087788109 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.087022769 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.087408268 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.161948608 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.08773417 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.087703412 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.086809155 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.087600531 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.087449073 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.087424288 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.087572389 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.148009149 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.087461312 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.087447829 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 5.178345646 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.087728866 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.156159889 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 6.076070077 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.087210791 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 5.17695344 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.087924766 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.08758425 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 6.075275922 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.087586943 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.087388916 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.087867738 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.0872965 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.087099102 seconds)
  done (took 52.119576884 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.105179832 seconds)
    (2/2) benchmarking "in"...
    done (took 1.108809015 seconds)
  done (took 3.286740583 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.089041476 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.188337971 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.087871898 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.286518725 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.255312278 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.263524725 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.253303405 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.183087052 seconds)
  done (took 10.680009558 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.087057578 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 4.274887762 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.233993402 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.088025635 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.087819675 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 3.401075608 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 3.136519773 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 2.903981818 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.810459201 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 2.08325103 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 2.206458688 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 2.651344389 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 3.088357025 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 2.366824616 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.202156559 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 2.887953306 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 3.261840854 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 4.536477757 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 3.057269723 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.200715689 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 3.740416636 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.171192228 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.088272269 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.087139413 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.112086445 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 2.020997466 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 3.996681907 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 2.548025343 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 3.204014063 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.251117359 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 3.818202215 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.199850549 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.116630322 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 3.345973079 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.201981915 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.115066828 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 3.229684226 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.184616868 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.088536745 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.089308035 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 4.774231542 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 4.713622379 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 2.303618534 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 3.275813913 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.18619783 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.110577111 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.122361972 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.124463433 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 2.378466476 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 2.761526693 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 3.116917555 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 2.069000175 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.260305066 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.132465779 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 4.590194198 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.226497688 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.092143043 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 2.02152416 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 5.642539507 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 3.268964661 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 2.486109669 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 4.243399094 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 3.105315363 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.2431903 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.131190734 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.357404168 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 2.943720447 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 3.822922996 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.771576962 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.272070748 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 3.496430538 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.251526426 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.10807562 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.108536505 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.033213231 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.456861034 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.172763723 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.146115156 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.146510636 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.141788899 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 3.35028341 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.238971162 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.946064176 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.293769357 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.348991951 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 4.563582072 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.241527942 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.137273179 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 3.719400817 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.945385186 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 2.233550426 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 4.730677472 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 2.297083032 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.264692619 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 3.072582449 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 2.361351915 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.15836115 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.134796835 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.94631872 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 3.565737003 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.287610651 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.128613006 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.488310693 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 3.216001871 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.175252975 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.163955363 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 2.800190134 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.273718192 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 3.269306213 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.188186146 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.165424317 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.166601767 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.784143876 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 2.288371918 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.174286852 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.673985623 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 3.166354759 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.548374022 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 4.53307175 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 2.322133248 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 3.452274841 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 5.019971349 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.40760636 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 2.970987003 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.129814514 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 3.400009691 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 3.185522891 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 3.790415513 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 3.364834389 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.269923823 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 4.911903612 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.187250716 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.16585004 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 4.249445845 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.210479197 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.166649397 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.166310565 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.167173369 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.165017306 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.165730953 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 2.2769148 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 3.491961008 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 4.768443599 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.290008056 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 2.385169745 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.280426457 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 4.922310178 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 3.2456827 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 2.783239988 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.295565221 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.167102027 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 4.678496447 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 4.477096334 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 2.815817878 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.265593627 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.154055397 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.156713275 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 2.99227251 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 4.093057087 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.206148615 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.131766821 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.718128274 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 2.283427002 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.158467728 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.120097152 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 2.598094519 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.22737099 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.143392099 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 3.214500192 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 2.810163464 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 4.712974275 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.273193343 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 2.378168458 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.256343619 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.157991242 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.136147156 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.090046914 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.906109982 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 2.750525759 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 6.22785692 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 2.763066821 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 5.845949641 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.213497084 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 3.251201768 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.202432616 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 3.379735839 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 2.330907269 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.259084255 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.131930275 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.122020268 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.103113298 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 2.630224502 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 3.961591976 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 4.928740264 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 4.08121927 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 2.106044266 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 3.107292052 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 2.239007774 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 2.903872751 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.153159233 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 2.808384043 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 4.056099491 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.195962525 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.131726987 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.125148449 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 2.273239046 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 2.296587315 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.248150815 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 3.466455929 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.262174866 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.118984379 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 2.715587308 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.211683411 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 3.72962331 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.206476466 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.950149059 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 3.154837901 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.252127874 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 3.232892945 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 4.65013723 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.210820756 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.12347726 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 4.71294505 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.223563971 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.134682849 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 3.121158862 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 3.574977122 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 2.036620391 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 2.89302361 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 3.624983528 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 3.202790827 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 2.732823074 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 2.380938677 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.26897077 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 3.907016693 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.230862843 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 2.409712103 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 3.226333198 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 4.451122405 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.290583769 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 2.895860158 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.158525391 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 4.652372658 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.283769836 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 3.094050306 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.259401271 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 3.561112678 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.247147108 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.145742803 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 3.277684318 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.22968582 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 2.76621067 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.22748258 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 2.215958153 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 4.405893407 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 3.973030832 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.249685743 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.395391373 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 3.170647732 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 2.968607424 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 3.074167042 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 2.449279546 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 3.968064809 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 2.09649704 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 2.206095215 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 2.83097735 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.205208842 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 3.358740646 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.224824229 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.08939373 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.090590762 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 4.171690856 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.163300654 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.088823338 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 3.364708028 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 3.008031333 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 2.146182851 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 2.206465752 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.100066295 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.089540495 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 3.265301222 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 3.175928453 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 4.272477708 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 3.491332213 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 2.690682384 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 2.854176933 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.204013673 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 4.632287454 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.183560077 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.794134686 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 2.213007449 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.100096296 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 2.713955924 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.203974658 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 3.317115749 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.222094552 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 2.187626743 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 3.584774052 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 3.296886612 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 2.350408993 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 3.178978688 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.199877885 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 2.818011194 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 2.649022753 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 2.315689779 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 4.429543969 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.109554861 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 2.642609032 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 6.119973492 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 2.6448408 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 3.114201258 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.805512485 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 4.132519421 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.13346623 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.089050544 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.089850997 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 2.639383248 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 3.085987859 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.100328251 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.855222065 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.612019598 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 3.175107056 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.841185572 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 2.217631257 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.1009069 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.09018811 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.089272401 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 2.01617519 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 4.148976779 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 4.322463227 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.200514685 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.090382359 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.089718247 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 2.028252897 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 4.330926556 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.838021991 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 2.919545885 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 3.025412996 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.226835146 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.090485988 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.089399996 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.089181746 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.08902408 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.089392413 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.09040675 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 3.412265608 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.243628625 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.719423667 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 2.219732309 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.100917254 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 3.27302633 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.140967131 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.091317278 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 4.193381372 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.147327602 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 2.18331603 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.157358151 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.090317744 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 2.531146035 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.227813719 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 2.07435109 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 4.345517814 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 3.323344809 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 2.299305398 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 4.534908496 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.109744804 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 2.541588072 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.418125299 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 2.890042132 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.102533725 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 2.018677663 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 2.207622548 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 3.801420176 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 2.067867546 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 4.518491148 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.699218805 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 3.10706136 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 3.303441256 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.9577954 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 2.486909196 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 5.196599101 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.145428774 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.090007455 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.089310187 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.082717169 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 2.307418983 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.134986297 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 4.293644121 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 2.247823824 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 2.086334161 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 4.346574523 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.173346407 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 4.249750765 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.106665001 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.105111007 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.090665293 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.089994924 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 3.489745385 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 3.955171841 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.154558608 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.089758882 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 2.010236232 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 3.945928218 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.958423611 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.743991612 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 5.049671077 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.226154272 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.090026216 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 2.277362096 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.14054807 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 4.640251426 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.248076347 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.850711069 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 2.401839867 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.136146171 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 4.182734062 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.487158144 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 4.776482015 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 3.414626661 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.194843939 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.090982769 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 3.386711059 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 2.039265069 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.230675106 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 3.024594381 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 3.39123414 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.661850376 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 4.579582383 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 5.304160573 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.240946822 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 2.03367045 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 3.694202804 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 3.111107667 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.117241857 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.955373311 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.256590004 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 4.355148029 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 4.028880606 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 2.353293718 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.262787768 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.790798732 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 3.834178193 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.262343061 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 2.731862833 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.233058551 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.095518801 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 4.621189346 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 2.161024587 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 4.251267486 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.219592204 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.122954713 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.135863532 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 2.768446567 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 2.716702498 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 4.354975242 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.183050092 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.091738919 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 4.691735469 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 2.03109882 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 2.269811563 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.158060647 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.145005773 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 4.531527897 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.15627172 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.113722146 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 2.567349838 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 2.763359971 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.256369302 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 2.644615833 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 4.264676107 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.271420143 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 3.364762659 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 4.47780578 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 2.295354874 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.227498165 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.172577208 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.171781679 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.174930875 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.552925562 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.315485858 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.173324966 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 2.747737542 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.303532077 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 2.942188358 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 3.111727978 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.355802814 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.222417612 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 2.629856912 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.304395883 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.687175246 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 4.087778804 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 2.286213111 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 2.464615707 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 3.254854951 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.222613265 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 3.909594637 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.257711005 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.174839901 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 3.061897291 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 4.392785974 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 3.437975468 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 3.511961083 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 4.317323432 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.238667937 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 3.833290634 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.266084162 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 4.752527888 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.319594799 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.174919669 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 2.672947529 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 5.266868827 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 3.474260289 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.229426548 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 3.483308149 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.193440775 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 2.436983626 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 4.342340114 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.181455867 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.091354798 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.092443667 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 3.056151633 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 2.1208278 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 3.686793511 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 5.080678739 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 3.497284178 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.20952019 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 2.961345992 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 5.616354454 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 4.679175274 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.410934259 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 5.233616926 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 4.473859124 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.10876666 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 2.034390197 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 4.352224906 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.148381653 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 2.231736964 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.183453931 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 3.798489649 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.137740676 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.09176784 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 3.46854261 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.239901448 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.092248877 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.091118439 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 2.018147279 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 4.877997483 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.183363876 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 3.249728369 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.174416494 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.09301944 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 2.656577769 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 2.353035674 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.128145931 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.0917429 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.091648819 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.903532194 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.189041458 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.093448511 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 3.386827657 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.231343319 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 3.398493307 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.886861509 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 2.512870493 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.183894549 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.092820382 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.092124402 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 2.79430676 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 4.429560917 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.261092433 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.451453895 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 3.153904647 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 2.614883481 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 3.095943947 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 3.489326949 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 2.644594623 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 3.037614192 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.20276951 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.092088871 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 2.086947394 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 4.785059822 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 3.172813475 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.855789977 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 5.482507649 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.169815137 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 3.793333429 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 3.011771542 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.148652204 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 4.177502272 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.135295896 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.092291489 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.091610231 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.091526913 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 2.598213245 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 3.105875044 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.102307306 seconds)
  done (took 1425.436414637 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.367065191 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.091864906 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.091802974 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.092219387 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.092407619 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.091796148 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.091691628 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.091387974 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.092384069 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.091752071 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.091851757 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.09208091 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.091845714 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.375902395 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.091886548 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.091773923 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.091910198 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.092242333 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.092576263 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.092705754 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.09205026 seconds)
  done (took 24.569192076 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.092442649 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.09150756 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.092569546 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.093235002 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.092192277 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.092598523 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.09204998 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.092083854 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.093233472 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.0927999 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.093085305 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.092481981 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.092414292 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.092298086 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.092616162 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.091512516 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.092130593 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.092490237 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.092736517 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.092223889 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.091679891 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.091692414 seconds)
  done (took 25.110146954 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.09216625 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.091572381 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 2.746242346 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.20319493 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.093043253 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.091754716 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.091584267 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 2.279493279 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 2.077817239 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.991208555 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 3.534958999 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 3.15774575 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.103163736 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 2.247756098 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.186344 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.091963471 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.217037954 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.114804237 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.136473848 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.14582273 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.144182638 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 3.306439617 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.253309833 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.136817642 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.924285626 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.275245165 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.11876244 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.119356258 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.116216892 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 2.103537737 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 2.241377021 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.132983343 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 2.928986686 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 3.875795038 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 2.433674789 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 2.026584174 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 2.251299776 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.17057516 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.170045646 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.173484727 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 2.363591452 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 2.933591897 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.158475288 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.15131269 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 3.392670242 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.242370544 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.129386572 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 2.486051191 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 3.192551275 seconds)
  done (took 88.726883626 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.125369689 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.272183757 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.194205678 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.131965754 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.274286437 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.136278568 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.196963642 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.138825923 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.130927426 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.134423205 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.272781904 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.296418523 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.136262314 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.142393542 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.229270094 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.131915366 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.128326204 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.169556199 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.17586129 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.171609156 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.171355438 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.224333292 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.298436055 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.298097526 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.171691504 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.174129007 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.173845475 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.173110268 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.324679819 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.171998729 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.17489215 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.170755725 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.310627618 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.282828255 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.171139018 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.173809521 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.305232939 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.175178791 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.172958984 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.172389253 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.175252148 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.171220452 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.223631164 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.307136177 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.17503438 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.273359906 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.177118188 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.173981063 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.325692304 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.172705939 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.173592231 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.346698118 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.173613247 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.172588239 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.158566497 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.268642211 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.122381513 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.101785203 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.09520315 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.314867384 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.17319041 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.17675887 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.329893333 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.173419285 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.172244884 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.340387125 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.274882549 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.173849193 seconds)
  done (took 82.920010635 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.173737181 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.17287651 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.172947324 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.171705045 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.172549078 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.173332041 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.175640875 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.170447751 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.172273407 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.171550011 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.17206647 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.172834137 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.171815109 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.173089418 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.173854019 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.174494037 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.172723543 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.175262737 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.174323852 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.172028526 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.174305638 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.171870971 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.171616631 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.174195786 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.538938956 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.137569306 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.132687831 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.118362498 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.105755225 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.097077263 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.506757913 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.174340251 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.17103629 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.170900912 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.532608179 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.173169654 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.173764523 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.173961429 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.171312221 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.173183914 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.172199452 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.172674443 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.173706128 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.173599262 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.171944742 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.17015416 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.172224838 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.535607239 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.173733167 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.172177464 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.172599273 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.17365609 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.171171637 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.174387635 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.171839781 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.271228217 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.173988303 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.17243736 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.171610804 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.17185434 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.172414671 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.272091817 seconds)
  done (took 75.221408878 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.172230483 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.171674044 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.173380447 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.171023629 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.171568841 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.172334762 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.174108894 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.15189596 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.170561149 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.156355877 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.120585489 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.124548949 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.120325587 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.11642309 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.09374536 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.094154558 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.172682162 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.1710347 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.17134033 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.172535814 seconds)
  done (took 24.201622952 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.169934763 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.171299202 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.170576651 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.172772881 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.170635255 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.174530847 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.172986317 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.173433648 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.169515426 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.172162834 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.170821981 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.173447502 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.172704136 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.172326262 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.172049012 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.1715875 seconds)
  done (took 19.908255314 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.170235287 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.172743578 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.172358908 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.174565128 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.171090111 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.171722882 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.172439893 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.170144927 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.172868833 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.632890969 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.174479218 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.173295942 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.171796886 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.173597722 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.171859125 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.17159938 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.171173529 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.169972128 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.172855576 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.173391825 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.744853143 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.174171879 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.174236008 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.171193614 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.177041144 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.749527845 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.1712736 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.174281368 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.119256049 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.123121765 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.1353138 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.592432995 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.120093283 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.093067741 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.093746907 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.101609307 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.169875839 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.154842359 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.11139961 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.146396688 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.138718874 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.140502724 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.139064506 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.141798989 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.135347307 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.145828458 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.139473253 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.592632257 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.140192856 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.136337395 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.135719509 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.131755878 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.128468167 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.657650489 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.181046119 seconds)
  done (took 67.646504227 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.214602638 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.230400268 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.122396715 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.126962386 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.217220163 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.221286527 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.223645724 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.191336435 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.19757065 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.144257158 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.200686186 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.153072909 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.175856324 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.186258062 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.198850205 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.178028824 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.140787717 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.213929011 seconds)
  done (took 22.497867606 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.140578272 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.138136051 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.142293828 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.138470261 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.140038244 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.135679885 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.137096398 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.135243208 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.131464506 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.130098125 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.157342393 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.164871427 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.153686441 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.148441789 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.15742097 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.153128814 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.140565124 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.143197363 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.158251075 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.151764797 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.144387291 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.14545603 seconds)
  done (took 26.311136487 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#3", "BigInt", "+")...
    done (took 1.147481421 seconds)
    (2/6) benchmarking ("#3", "UInt64", "+")...
    done (took 1.188716601 seconds)
    (3/6) benchmarking ("#4", "UInt64", "+")...
    done (took 1.115577084 seconds)
    (4/6) benchmarking ("#3", "Int64", "+")...
    done (took 1.106828041 seconds)
    (5/6) benchmarking ("#4", "Int64", "+")...
    done (took 1.138976235 seconds)
    (6/6) benchmarking ("#4", "BigInt", "+")...
    done (took 1.172132608 seconds)
  done (took 7.957486886 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.217137347 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.160071707 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.191114947 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.199290075 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.147068341 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.155262027 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.100188272 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.095506908 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.103259362 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.404038077 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.095510244 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.121220015 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.096538397 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.094783306 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.10725194 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.108356711 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.097194367 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.094807352 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.160241171 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.17637066 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.107223133 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.108994525 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.098764409 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.094794374 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.123738289 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.095469822 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.094726885 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.432840204 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.094677414 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.094402522 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.123229973 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.0945204 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.09353967 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.422610747 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.147233912 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.094358557 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.123848723 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.173728606 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.095082538 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.120590701 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.133163546 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.09536877 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.123021447 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.121100346 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.104957832 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.125921837 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.111783941 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.095363807 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.093915589 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.437494634 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.095154739 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.098125758 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.120010089 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.094247518 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.093681157 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.427601783 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.403082951 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.11741427 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.100018325 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.399169512 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.129021647 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.155142488 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.115758306 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.467548898 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.17287526 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.170498499 seconds)
  done (took 77.526481823 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.171762979 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.218815813 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.172456616 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.479521385 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.174901212 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.173037482 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.172847851 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.171255887 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.127669415 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.202883729 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.206348296 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.107515005 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.142797539 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.103943495 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.126091492 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.106217803 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.130581713 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.136581573 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.182407721 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.419390213 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.113821958 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.124280863 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.136236231 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.109801873 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.415927281 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.1181917 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.09450348 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.094604203 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.128189912 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.094066194 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.094463583 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.128672776 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.134989788 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.143674841 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.094504124 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.124810079 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.097512545 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.094430471 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.108373718 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.157528693 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.113072865 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.219328086 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.134729215 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.106336326 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.467935098 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.11145287 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.145019691 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.191951678 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.165253824 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.239942341 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.478066802 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.479772476 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.48332185 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.174595124 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.171723187 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.17471575 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.17554569 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.17128897 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.173006101 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.174710913 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.176669194 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.173357723 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.439542822 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.175000382 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.173925431 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.172560172 seconds)
  done (took 79.358462631 seconds)
done (took 2389.54017131 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.161862296 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.217654691 seconds)
  done (took 13.536731279 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose", "(600, 600)")...
    done (took 1.174768536 seconds)
    (2/16) benchmarking ("adjoint", "(600, 400)")...
    done (took 1.174816728 seconds)
    (3/16) benchmarking ("adjoint!", "(600, 600)")...
    done (took 1.283525502 seconds)
    (4/16) benchmarking ("adjoint", "(20000, 20000)")...
    done (took 1.132827391 seconds)
    (5/16) benchmarking ("transpose!", "(20000, 10000)")...
    done (took 6.152283678 seconds)
    (6/16) benchmarking ("adjoint!", "(20000, 20000)")...
    done (took 6.166081279 seconds)
    (7/16) benchmarking ("transpose!", "(20000, 20000)")...
    done (took 6.160826639 seconds)
    (8/16) benchmarking ("transpose", "(600, 400)")...
    done (took 1.174385 seconds)
    (9/16) benchmarking ("transpose", "(20000, 20000)")...
    done (took 1.172590498 seconds)
    (10/16) benchmarking ("transpose!", "(600, 400)")...
    done (took 1.255713472 seconds)
    (11/16) benchmarking ("adjoint", "(600, 600)")...
    done (took 1.173396045 seconds)
    (12/16) benchmarking ("transpose!", "(600, 600)")...
    done (took 1.304929672 seconds)
    (13/16) benchmarking ("adjoint!", "(600, 400)")...
    done (took 1.28210107 seconds)
    (14/16) benchmarking ("transpose", "(20000, 10000)")...
    done (took 1.175531926 seconds)
    (15/16) benchmarking ("adjoint!", "(20000, 10000)")...
    done (took 6.178796077 seconds)
    (16/16) benchmarking ("adjoint", "(20000, 10000)")...
    done (took 1.106184641 seconds)
  done (took 40.232372869 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("Tridiagonal", 10)...
    done (took 6.104004102 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 2.466269018 seconds)
    (3/18) benchmarking ("IJV", 10)...
    done (took 3.024618912 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 2.792097561 seconds)
    (5/18) benchmarking ("Bidiagonal", 100)...
    done (took 6.104044837 seconds)
    (6/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.97831371 seconds)
    (7/18) benchmarking ("IJV", 100)...
    done (took 2.368203772 seconds)
    (8/18) benchmarking ("Bidiagonal", 10)...
    done (took 5.283414947 seconds)
    (9/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.517945396 seconds)
    (10/18) benchmarking ("IV", 1000)...
    done (took 1.613972386 seconds)
    (11/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.396445278 seconds)
    (12/18) benchmarking ("Diagonal", 10)...
    done (took 4.671452568 seconds)
    (13/18) benchmarking ("Diagonal", 100)...
    done (took 5.855704925 seconds)
    (14/18) benchmarking ("SymTridiagonal", 10)...
    done (took 6.16446685 seconds)
    (15/18) benchmarking ("IJV", 1000)...
    done (took 1.771536473 seconds)
    (16/18) benchmarking ("Diagonal", 1000)...
    done (took 1.664116396 seconds)
    (17/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.776157705 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.847009788 seconds)
  done (took 59.5247327 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", "(20000, 20000)")...
    done (took 6.126983365 seconds)
    (2/2) benchmarking ("unary minus", "(600, 600)")...
    done (took 1.267336845 seconds)
  done (took 8.545746963 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.165383178 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.128096968 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.144021141 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.143288886 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.139398169 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.140586771 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.13491907 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.143452345 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.179936108 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.17205761 seconds)
  done (took 62.607235136 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 1000)...
    done (took 5.97697846 seconds)
    (2/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 2.777548359 seconds)
    (3/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.537677857 seconds)
    (4/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 2.626138573 seconds)
    (5/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 3.582668076 seconds)
    (6/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.589935597 seconds)
    (7/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.293810737 seconds)
    (8/54) benchmarking ("spmat", "range", 100)...
    done (took 1.53820527 seconds)
    (9/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.191609538 seconds)
    (10/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.082493891 seconds)
    (11/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 4.877438145 seconds)
    (12/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.713179105 seconds)
    (13/54) benchmarking ("spmat", "logical", 10)...
    done (took 2.817068202 seconds)
    (14/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 3.035217361 seconds)
    (15/54) benchmarking ("spmat", "array", 100)...
    done (took 1.636527989 seconds)
    (16/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 2.512321255 seconds)
    (17/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 2.687445378 seconds)
    (18/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.548007782 seconds)
    (19/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.421769052 seconds)
    (20/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 3.504252478 seconds)
    (21/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 2.21580454 seconds)
    (22/54) benchmarking ("spmat", "range", 10)...
    done (took 4.895219355 seconds)
    (23/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.426199628 seconds)
    (24/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.016530688 seconds)
    (25/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.109606629 seconds)
    (26/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 3.155803457 seconds)
    (27/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 2.190760343 seconds)
    (28/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.216327926 seconds)
    (29/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.168742546 seconds)
    (30/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 2.966786832 seconds)
    (31/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 4.874740824 seconds)
    (32/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.224475603 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 4.93343669 seconds)
    (34/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.200385806 seconds)
    (35/54) benchmarking ("spvec", "range", 10000)...
    done (took 4.176296812 seconds)
    (36/54) benchmarking ("spmat", "splogical", 10)...
    done (took 2.600045347 seconds)
    (37/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.754126796 seconds)
    (38/54) benchmarking ("spmat", "array", 10)...
    done (took 1.306401489 seconds)
    (39/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 2.415854792 seconds)
    (40/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.390650551 seconds)
    (41/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.460719608 seconds)
    (42/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 3.31856417 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.262956172 seconds)
    (44/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 3.315994847 seconds)
    (45/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.360889118 seconds)
    (46/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 3.287440919 seconds)
    (47/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.128872994 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.346807411 seconds)
    (49/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.185090547 seconds)
    (50/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.214480799 seconds)
    (51/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.614601325 seconds)
    (52/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.279111437 seconds)
    (53/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.225291617 seconds)
    (54/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.209166446 seconds)
  done (took 149.5360863 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.080583555 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.487976252 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.238548584 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.08539575 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.508615244 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.299361637 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 4.815116393 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.664526738 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.110574762 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.296857733 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.260664195 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.225140921 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.083845389 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.085488691 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.088080574 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.084465713 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.274301259 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.681663199 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.102344983 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.083860693 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.302317973 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.333324833 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.219926741 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.084852548 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.2538121 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.337476278 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.490137255 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.227587121 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 1.47555336 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.083707035 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.531545475 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.101661609 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.085429395 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 5.977854494 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.471847878 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.438220629 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.557695073 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.093676093 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 5.830361737 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.086168057 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 1.772955154 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.291216086 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.421416846 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.230323962 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.341099748 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.322737382 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 1.687791554 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.082180486 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 1.869285583 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.264284622 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.315795124 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.307249848 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.365665663 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.090155763 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.648440019 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.08440708 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.083160374 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.348073281 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.245835055 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.214330955 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.085161683 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.085301072 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.085704761 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.330544041 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.084296982 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.209431483 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.084101458 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.085485569 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.211078399 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.214924369 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.24358285 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.334625919 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.338906706 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.305930781 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.076028182 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.328301468 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.504838565 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.334903633 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.086222456 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.085332111 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.535421092 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 1.533943193 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.245773321 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.328322394 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.399220031 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.388315378 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 1.664277159 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.081661785 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.319445821 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.259844103 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.439093468 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.35157985 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.455700593 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 1.984182703 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.083126025 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.084558181 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.350133189 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.215623986 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.085927036 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.611518779 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.366405534 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.182355604 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.26990526 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.572644272 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.195567444 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.085474811 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 1.650329039 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.084029797 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.310565712 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.379309672 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.091821472 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.085752406 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.24587171 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.025825255 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.083697667 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.509937054 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.503716467 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.102190992 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.254125189 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.084463133 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.345295007 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 5.949571999 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.343679647 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.08621598 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.367015045 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.277840948 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.386954651 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.102110788 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.44281712 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.360354127 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.493637403 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.41947725 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.085809913 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.085895697 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.398755533 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.103107615 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.083503512 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.264045683 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 4.785122445 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.264624844 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.085841957 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.454182722 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.249152258 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.466889603 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.083893628 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.326300506 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.338988977 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.497073182 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.09587618 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.225391998 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.085769916 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.226410065 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.255017887 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.083143941 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.083234029 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.938702663 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.085425264 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.244747114 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.321320701 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.815701122 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.503457498 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 1.435180167 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.081610135 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.575846414 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.30281196 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.534333001 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 4.627830223 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.258264172 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 5.808492443 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.328218926 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.09115453 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.338787585 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.387697518 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.084244548 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.104987749 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 1.820835687 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 4.216078302 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.088504453 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.273804678 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.799805984 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 4.555864713 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.336093935 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.10484192 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.461630658 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.093500545 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.296514261 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.629477793 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 5.339346905 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.096514122 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.095970609 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.136945401 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.132305546 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.358386041 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.360465064 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.758851379 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.255808526 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.408633854 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 1.348823622 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.415987554 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.574232265 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.104536265 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.422389776 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.097064317 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.53418271 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.0969166 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.287844697 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.350499558 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.096926848 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.320213642 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.457721473 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.335300111 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.512688821 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.10708304 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.110011591 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 5.702955305 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.272867653 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.514080387 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.085023193 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 5.422247264 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.487287613 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.220644964 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.30186314 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 4.313467019 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.106478639 seconds)
  done (took 726.521863628 seconds)
done (took 1061.666583661 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 6.134725508 seconds)
    (2/4) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 6.180189895 seconds)
    (3/4) benchmarking ("Float64", "(1000, 1000)", 3)...
    done (took 6.195666913 seconds)
    (4/4) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 6.210404343 seconds)
  done (took 25.83498465 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 2.094728909 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 2.08367206 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 1.298490496 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 1.201992516 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 2.557916139 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 1.263785874 seconds)
  done (took 11.752913425 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 4.803876565 seconds)
    (2/3) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 6.212547546 seconds)
    (3/3) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 6.211204199 seconds)
  done (took 18.434570287 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ("(10000000,)", 1)...
    done (took 1.506350984 seconds)
    (2/4) benchmarking ("(10000000,)", 2)...
    done (took 1.670713973 seconds)
    (3/4) benchmarking ("(1000, 1000)", 2)...
    done (took 1.426030877 seconds)
    (4/4) benchmarking ("(1000, 1000)", 1)...
    done (took 1.322075541 seconds)
  done (took 7.139889284 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 1.235886068 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.232784943 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 1.225329072 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.223596154 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 1.232062935 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 1.233226121 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.227547693 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 1.235891246 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 1.227201484 seconds)
  done (took 12.293495488 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.801313781 seconds)
done (took 81.35331841 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("map", "*", "Int64", "(false, false)")...
    done (took 1.604097 seconds)
    (2/341) benchmarking ("perf_simplecopy", "Float64", 1)...
    done (took 1.504311785 seconds)
    (3/341) benchmarking ("perf_sum", "BigFloat", 0)...
    done (took 6.203845936 seconds)
    (4/341) benchmarking ("perf_sum3", "Float64", 1)...
    done (took 1.521756119 seconds)
    (5/341) benchmarking ("broadcast", "abs", "Int64", 0)...
    done (took 1.350236122 seconds)
    (6/341) benchmarking ("broadcast", "abs", "Int64", 1)...
    done (took 1.516698161 seconds)
    (7/341) benchmarking ("map", "identity", "Float32", 0)...
    done (took 1.325426682 seconds)
    (8/341) benchmarking ("perf_countnothing", "Int8", 1)...
    done (took 1.246882108 seconds)
    (9/341) benchmarking ("collect", "all", "Float64", 1)...
    done (took 1.508102985 seconds)
    (10/341) benchmarking ("broadcast", "*", "Bool", "(false, true)")...
    done (took 1.636325254 seconds)
    (11/341) benchmarking ("broadcast", "*", "Int64", "(false, true)")...
    done (took 1.77006167 seconds)
    (12/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int64}", 1)...
    done (took 2.322596172 seconds)
    (13/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float32}", 0)...
    done (took 2.609947855 seconds)
    (14/341) benchmarking ("perf_binaryop", "*", "Float32", "(true, true)")...
    done (took 1.717028843 seconds)
    (15/341) benchmarking ("collect", "all", "ComplexF64", 0)...
    done (took 1.487817618 seconds)
    (16/341) benchmarking ("perf_sum2", "Bool", 1)...
    done (took 1.283944307 seconds)
    (17/341) benchmarking ("perf_countnothing", "Float32", 1)...
    done (took 1.269620634 seconds)
    (18/341) benchmarking ("perf_countnothing", "BigInt", 1)...
    done (took 1.310578774 seconds)
    (19/341) benchmarking ("collect", "filter", "Float64", 1)...
    done (took 2.776401534 seconds)
    (20/341) benchmarking ("map", "abs", "Bool", 1)...
    done (took 1.485223063 seconds)
    (21/341) benchmarking ("sort", "Union{Missing, Bool}", 1)...
    done (took 5.918083097 seconds)
    (22/341) benchmarking ("perf_sum2", "ComplexF64", 0)...
    done (took 1.388783475 seconds)
    (23/341) benchmarking ("sort", "Float32", 0)...
    done (took 5.903263139 seconds)
    (24/341) benchmarking ("perf_sum", "Int64", 1)...
    done (took 1.27906754 seconds)
    (25/341) benchmarking ("collect", "filter", "Float32", 0)...
    done (took 2.135968463 seconds)
    (26/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int8}", 0)...
    done (took 1.369545046 seconds)
    (27/341) benchmarking ("broadcast", "*", "Float32", "(false, false)")...
    done (took 1.518286268 seconds)
    (28/341) benchmarking ("broadcast", "*", "BigInt", "(false, true)")...
    done (took 7.573360754 seconds)
    (29/341) benchmarking ("map", "*", "ComplexF64", "(true, true)")...
    done (took 2.32433444 seconds)
    (30/341) benchmarking ("perf_sum4", "Float32", 1)...
    done (took 1.271946503 seconds)
    (31/341) benchmarking ("broadcast", "identity", "Float32", 0)...
    done (took 1.351288359 seconds)
    (32/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, true)")...
    done (took 1.824606838 seconds)
    (33/341) benchmarking ("collect", "filter", "BigInt", 1)...
    done (took 2.458556479 seconds)
    (34/341) benchmarking ("broadcast", "identity", "Float64", 1)...
    done (took 1.539661948 seconds)
    (35/341) benchmarking ("map", "abs", "Bool", 0)...
    done (took 1.351395812 seconds)
    (36/341) benchmarking ("skipmissing", "collect", "Union{Missing, Bool}", 1)...
    done (took 2.113182253 seconds)
    (37/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, false)")...
    done (took 1.770403191 seconds)
    (38/341) benchmarking ("map", "abs", "BigFloat", 0)...
    done (took 6.247599278 seconds)
    (39/341) benchmarking ("skipmissing", "sum", "Union{Missing, ComplexF64}", 1)...
    done (took 1.487659375 seconds)
    (40/341) benchmarking ("map", "*", "Int8", "(true, true)")...
    done (took 1.81744739 seconds)
    (41/341) benchmarking ("map", "*", "Bool", "(false, false)")...
    done (took 1.534061999 seconds)
    (42/341) benchmarking ("perf_sum3", "Bool", 0)...
    done (took 1.349321947 seconds)
    (43/341) benchmarking ("map", "*", "BigFloat", "(false, false)")...
    done (took 6.26529362 seconds)
    (44/341) benchmarking ("perf_sum", "Float32", 1)...
    done (took 1.632588846 seconds)
    (45/341) benchmarking ("broadcast", "*", "Float32", "(false, true)")...
    done (took 1.707927615 seconds)
    (46/341) benchmarking ("perf_sum", "Int8", 1)...
    done (took 1.290034604 seconds)
    (47/341) benchmarking ("skipmissing", "collect", "Float64", 0)...
    done (took 2.165578613 seconds)
    (48/341) benchmarking ("perf_sum2", "Float64", 1)...
    done (took 1.408906799 seconds)
    (49/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int64}", 0)...
    done (took 2.717985144 seconds)
    (50/341) benchmarking ("perf_sum3", "Float32", 1)...
    done (took 1.408745986 seconds)
    (51/341) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 1.654122038 seconds)
    (52/341) benchmarking ("perf_sum", "Int8", 0)...
    done (took 1.277306197 seconds)
    (53/341) benchmarking ("broadcast", "identity", "ComplexF64", 1)...
    done (took 1.895213913 seconds)
    (54/341) benchmarking ("perf_countnothing", "BigInt", 0)...
    done (took 1.342817136 seconds)
    (55/341) benchmarking ("map", "identity", "Bool", 0)...
    done (took 1.341212335 seconds)
    (56/341) benchmarking ("map", "abs", "BigFloat", 1)...
    done (took 6.24676123 seconds)
    (57/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, true)")...
    done (took 2.382520129 seconds)
    (58/341) benchmarking ("map", "abs", "ComplexF64", 0)...
    done (took 2.704616306 seconds)
    (59/341) benchmarking ("perf_sum", "Float64", 0)...
    done (took 1.471734531 seconds)
    (60/341) benchmarking ("perf_countequals", "Int8")...
    done (took 1.560172162 seconds)
    (61/341) benchmarking ("perf_countnothing", "Float64", 1)...
    done (took 1.289828024 seconds)
    (62/341) benchmarking ("broadcast", "abs", "BigFloat", 0)...
    done (took 6.277572744 seconds)
    (63/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(true, true)")...
    done (took 2.236590431 seconds)
    (64/341) benchmarking ("skipmissing", "sum", "Float64", 0)...
    done (took 1.275072774 seconds)
    (65/341) benchmarking ("perf_sum2", "BigInt", 0)...
    done (took 7.91359721 seconds)
    (66/341) benchmarking ("map", "identity", "Bool", 1)...
    done (took 1.550818946 seconds)
    (67/341) benchmarking ("broadcast", "*", "Bool", "(false, false)")...
    done (took 1.717540071 seconds)
    (68/341) benchmarking ("collect", "all", "Bool", 0)...
    done (took 1.356865538 seconds)
    (69/341) benchmarking ("map", "*", "ComplexF64", "(false, false)")...
    done (took 1.753341344 seconds)
    (70/341) benchmarking ("perf_sum4", "Float64", 0)...
    done (took 1.283077972 seconds)
    (71/341) benchmarking ("perf_countnothing", "Int8", 0)...
    done (took 1.275178854 seconds)
    (72/341) benchmarking ("skipmissing", "sum", "Union{Missing, Bool}", 1)...
    done (took 1.288099838 seconds)
    (73/341) benchmarking ("skipmissing", "collect", "Int8", 0)...
    done (took 1.954819858 seconds)
    (74/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int64}", 0)...
    done (took 1.389306212 seconds)
    (75/341) benchmarking ("perf_sum3", "BigFloat", 0)...
    done (took 6.224388977 seconds)
    (76/341) benchmarking ("sort", "Union{Nothing, Int64}", 0)...
    done (took 6.354844337 seconds)
    (77/341) benchmarking ("map", "identity", "BigFloat", 0)...
    done (took 1.53208655 seconds)
    (78/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigInt}", 1)...
    done (took 2.383646397 seconds)
    (79/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, false)")...
    done (took 6.243026905 seconds)
    (80/341) benchmarking ("perf_sum", "BigInt", 1)...
    done (took 7.831069241 seconds)
    (81/341) benchmarking ("broadcast", "identity", "Float64", 0)...
    done (took 1.507800147 seconds)
    (82/341) benchmarking ("broadcast", "*", "BigFloat", "(false, false)")...
    done (took 6.255033375 seconds)
    (83/341) benchmarking ("collect", "all", "Float64", 0)...
    done (took 1.536782983 seconds)
    (84/341) benchmarking ("map", "identity", "Float64", 1)...
    done (took 1.579208148 seconds)
    (85/341) benchmarking ("perf_sum3", "Float64", 0)...
    done (took 1.419246739 seconds)
    (86/341) benchmarking ("skipmissing", "collect", "Union{Missing, ComplexF64}", 1)...
    done (took 2.637675597 seconds)
    (87/341) benchmarking ("broadcast", "*", "Int64", "(true, true)")...
    done (took 1.771315494 seconds)
    (88/341) benchmarking ("perf_binaryop", "*", "Int8", "(true, true)")...
    done (took 1.625072989 seconds)
    (89/341) benchmarking ("map", "*", "Float32", "(true, true)")...
    done (took 1.772500473 seconds)
    (90/341) benchmarking ("map", "*", "BigInt", "(false, true)")...
    done (took 6.236933374 seconds)
    (91/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigInt}", 1)...
    done (took 9.833007773 seconds)
    (92/341) benchmarking ("broadcast", "*", "BigInt", "(true, true)")...
    done (took 7.458887909 seconds)
    (93/341) benchmarking ("sort", "BigInt", 0)...
    done (took 6.327211548 seconds)
    (94/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, true)")...
    done (took 6.214352896 seconds)
    (95/341) benchmarking ("perf_binaryop", "*", "BigInt", "(true, true)")...
    done (took 6.374101135 seconds)
    (96/341) benchmarking ("broadcast", "*", "BigInt", "(false, false)")...
    done (took 7.935748944 seconds)
    (97/341) benchmarking ("map", "*", "Bool", "(true, true)")...
    done (took 3.219285801 seconds)
    (98/341) benchmarking ("broadcast", "*", "Float64", "(true, true)")...
    done (took 1.689735569 seconds)
    (99/341) benchmarking ("map", "identity", "Float64", 0)...
    done (took 1.31549578 seconds)
    (100/341) benchmarking ("map", "*", "Int64", "(true, true)")...
    done (took 1.864994504 seconds)
    (101/341) benchmarking ("perf_sum4", "Int64", 1)...
    done (took 1.20003245 seconds)
    (102/341) benchmarking ("perf_countnothing", "Float32", 0)...
    done (took 1.175893529 seconds)
    (103/341) benchmarking ("collect", "filter", "Float32", 1)...
    done (took 2.532961938 seconds)
    (104/341) benchmarking ("map", "*", "Float64", "(false, false)")...
    done (took 1.53904877 seconds)
    (105/341) benchmarking ("collect", "filter", "Bool", 0)...
    done (took 1.971425361 seconds)
    (106/341) benchmarking ("perf_sum", "Int64", 0)...
    done (took 1.207282555 seconds)
    (107/341) benchmarking ("perf_sum3", "Int8", 1)...
    done (took 1.311725598 seconds)
    (108/341) benchmarking ("perf_sum3", "BigFloat", 1)...
    done (took 6.166478159 seconds)
    (109/341) benchmarking ("perf_sum3", "Float32", 0)...
    done (took 1.446343076 seconds)
    (110/341) benchmarking ("map", "*", "BigInt", "(true, true)")...
    done (took 7.183337837 seconds)
    (111/341) benchmarking ("perf_sum", "BigFloat", 1)...
    done (took 6.366216647 seconds)
    (112/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, true)")...
    done (took 1.861695554 seconds)
    (113/341) benchmarking ("sort", "BigFloat", 0)...
    done (took 6.269298709 seconds)
    (114/341) benchmarking ("perf_simplecopy", "Bool", 1)...
    done (took 1.300800495 seconds)
    (115/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, false)")...
    done (took 1.738156657 seconds)
    (116/341) benchmarking ("sort", "Union{Nothing, BigFloat}", 0)...
    done (took 6.224250347 seconds)
    (117/341) benchmarking ("broadcast", "identity", "Int64", 1)...
    done (took 1.547148811 seconds)
    (118/341) benchmarking ("perf_countequals", "Float32")...
    done (took 1.67062703 seconds)
    (119/341) benchmarking ("skipmissing", "collect", "BigFloat", 0)...
    done (took 2.294988114 seconds)
    (120/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigFloat}", 1)...
    done (took 6.230480996 seconds)
    (121/341) benchmarking ("perf_sum", "Float64", 1)...
    done (took 1.556647537 seconds)
    (122/341) benchmarking ("perf_sum4", "Int8", 0)...
    done (took 1.246794526 seconds)
    (123/341) benchmarking ("perf_sum4", "ComplexF64", 0)...
    done (took 1.371178443 seconds)
    (124/341) benchmarking ("broadcast", "abs", "ComplexF64", 1)...
    done (took 2.761354594 seconds)
    (125/341) benchmarking ("perf_simplecopy", "BigInt", 1)...
    done (took 1.677580525 seconds)
    (126/341) benchmarking ("broadcast", "identity", "Bool", 0)...
    done (took 1.45600411 seconds)
    (127/341) benchmarking ("map", "*", "BigInt", "(false, false)")...
    done (took 6.222636902 seconds)
    (128/341) benchmarking ("perf_binaryop", "*", "Bool", "(true, true)")...
    done (took 3.213146278 seconds)
    (129/341) benchmarking ("sort", "Union{Nothing, Float32}", 0)...
    done (took 6.245760038 seconds)
    (130/341) benchmarking ("map", "abs", "Int8", 1)...
    done (took 1.343512852 seconds)
    (131/341) benchmarking ("sort", "Union{Nothing, BigInt}", 0)...
    done (took 6.098373357 seconds)
    (132/341) benchmarking ("map", "identity", "BigFloat", 1)...
    done (took 1.752421537 seconds)
    (133/341) benchmarking ("broadcast", "identity", "BigFloat", 1)...
    done (took 1.68461803 seconds)
    (134/341) benchmarking ("perf_sum2", "Int64", 1)...
    done (took 1.130119015 seconds)
    (135/341) benchmarking ("broadcast", "*", "Float64", "(false, false)")...
    done (took 1.346139091 seconds)
    (136/341) benchmarking ("perf_sum", "ComplexF64", 0)...
    done (took 1.219264437 seconds)
    (137/341) benchmarking ("skipmissing", "sum", "BigFloat", 0)...
    done (took 6.083486998 seconds)
    (138/341) benchmarking ("perf_sum3", "ComplexF64", 1)...
    done (took 1.348153825 seconds)
    (139/341) benchmarking ("perf_simplecopy", "Int8", 1)...
    done (took 1.145797688 seconds)
    (140/341) benchmarking ("perf_sum3", "ComplexF64", 0)...
    done (took 1.229911336 seconds)
    (141/341) benchmarking ("broadcast", "identity", "BigInt", 0)...
    done (took 1.432519155 seconds)
    (142/341) benchmarking ("perf_countequals", "Int64")...
    done (took 1.408372458 seconds)
    (143/341) benchmarking ("perf_sum3", "Bool", 1)...
    done (took 1.216532303 seconds)
    (144/341) benchmarking ("sort", "Union{Nothing, Float64}", 0)...
    done (took 6.083545632 seconds)
    (145/341) benchmarking ("broadcast", "identity", "BigFloat", 0)...
    done (took 1.473660559 seconds)
    (146/341) benchmarking ("sort", "Union{Nothing, Bool}", 0)...
    done (took 6.095644338 seconds)
    (147/341) benchmarking ("map", "abs", "Float32", 1)...
    done (took 1.33602152 seconds)
    (148/341) benchmarking ("broadcast", "abs", "Float64", 1)...
    done (took 1.41754739 seconds)
    (149/341) benchmarking ("perf_sum2", "Float32", 1)...
    done (took 1.258421028 seconds)
    (150/341) benchmarking ("perf_countequals", "Bool")...
    done (took 1.387453929 seconds)
    (151/341) benchmarking ("map", "identity", "Int8", 0)...
    done (took 1.177766557 seconds)
    (152/341) benchmarking ("skipmissing", "sum", "Int8", 0)...
    done (took 1.107743131 seconds)
    (153/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float32}", 1)...
    done (took 2.184176329 seconds)
    (154/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, false)")...
    done (took 1.538187995 seconds)
    (155/341) benchmarking ("collect", "all", "ComplexF64", 1)...
    done (took 1.697294415 seconds)
    (156/341) benchmarking ("map", "*", "Int64", "(false, true)")...
    done (took 1.810087404 seconds)
    (157/341) benchmarking ("map", "identity", "Float32", 1)...
    done (took 1.335167008 seconds)
    (158/341) benchmarking ("perf_simplecopy", "Float32", 0)...
    done (took 1.225774167 seconds)
    (159/341) benchmarking ("broadcast", "identity", "BigInt", 1)...
    done (took 1.650107007 seconds)
    (160/341) benchmarking ("map", "*", "Int8", "(false, false)")...
    done (took 1.414005317 seconds)
    (161/341) benchmarking ("skipmissing", "collect", "Float32", 0)...
    done (took 1.88529661 seconds)
    (162/341) benchmarking ("perf_sum3", "Int64", 0)...
    done (took 1.210036657 seconds)
    (163/341) benchmarking ("perf_simplecopy", "Bool", 0)...
    done (took 1.195103225 seconds)
    (164/341) benchmarking ("sort", "Union{Missing, Int8}", 1)...
    done (took 6.130169646 seconds)
    (165/341) benchmarking ("perf_sum2", "Int8", 0)...
    done (took 1.180537566 seconds)
    (166/341) benchmarking ("perf_countnothing", "BigFloat", 1)...
    done (took 1.215070002 seconds)
    (167/341) benchmarking ("sort", "Union{Missing, BigFloat}", 1)...
    done (took 6.16165714 seconds)
    (168/341) benchmarking ("perf_sum2", "BigFloat", 1)...
    done (took 6.227313095 seconds)
    (169/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float64}", 1)...
    done (took 1.579109842 seconds)
    (170/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Bool}", 0)...
    done (took 2.490179302 seconds)
    (171/341) benchmarking ("map", "*", "Float64", "(false, true)")...
    done (took 1.921497017 seconds)
    (172/341) benchmarking ("collect", "filter", "Int8", 0)...
    done (took 2.088911736 seconds)
    (173/341) benchmarking ("sort", "Int64", 0)...
    done (took 6.295447737 seconds)
    (174/341) benchmarking ("collect", "all", "BigFloat", 0)...
    done (took 1.568454888 seconds)
    (175/341) benchmarking ("skipmissing", "sum", "Union{Nothing, ComplexF64}", 0)...
    done (took 1.459341119 seconds)
    (176/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, true)")...
    done (took 2.253114547 seconds)
    (177/341) benchmarking ("map", "identity", "BigInt", 1)...
    done (took 1.965883278 seconds)
    (178/341) benchmarking ("broadcast", "*", "BigFloat", "(true, true)")...
    done (took 6.326395897 seconds)
    (179/341) benchmarking ("map", "*", "Float32", "(false, false)")...
    done (took 1.633415216 seconds)
    (180/341) benchmarking ("perf_simplecopy", "ComplexF64", 1)...
    done (took 1.798212337 seconds)
    (181/341) benchmarking ("collect", "filter", "Float64", 0)...
    done (took 2.404809963 seconds)
    (182/341) benchmarking ("perf_countnothing", "Bool", 1)...
    done (took 1.282497512 seconds)
    (183/341) benchmarking ("perf_sum4", "BigFloat", 0)...
    done (took 6.2910612 seconds)
    (184/341) benchmarking ("broadcast", "*", "BigFloat", "(false, true)")...
    done (took 6.322851205 seconds)
    (185/341) benchmarking ("skipmissing", "collect", "Bool", 0)...
    done (took 1.961939346 seconds)
    (186/341) benchmarking ("perf_sum2", "Int64", 0)...
    done (took 1.322478256 seconds)
    (187/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, false)")...
    done (took 1.621743179 seconds)
    (188/341) benchmarking ("collect", "filter", "Int64", 1)...
    done (took 2.798066724 seconds)
    (189/341) benchmarking ("collect", "filter", "Int8", 1)...
    done (took 2.581108726 seconds)
    (190/341) benchmarking ("broadcast", "*", "Int8", "(true, true)")...
    done (took 1.63611285 seconds)
    (191/341) benchmarking ("collect", "filter", "BigFloat", 1)...
    done (took 2.482843798 seconds)
    (192/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int64}", 1)...
    done (took 1.330145704 seconds)
    (193/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, false)")...
    done (took 1.6709431 seconds)
    (194/341) benchmarking ("map", "identity", "ComplexF64", 0)...
    done (took 1.512885151 seconds)
    (195/341) benchmarking ("map", "identity", "BigInt", 0)...
    done (took 1.557174962 seconds)
    (196/341) benchmarking ("broadcast", "abs", "Bool", 0)...
    done (took 1.519688762 seconds)
    (197/341) benchmarking ("map", "*", "Float32", "(false, true)")...
    done (took 1.847976245 seconds)
    (198/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Bool}", 0)...
    done (took 1.40084439 seconds)
    (199/341) benchmarking ("collect", "filter", "ComplexF64", 0)...
    done (took 2.637663197 seconds)
    (200/341) benchmarking ("skipmissing", "collect", "BigInt", 0)...
    done (took 2.325897866 seconds)
    (201/341) benchmarking ("collect", "all", "BigInt", 0)...
    done (took 1.529683553 seconds)
    (202/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, true)")...
    done (took 6.262862052 seconds)
    (203/341) benchmarking ("map", "abs", "Float64", 0)...
    done (took 2.9907033 seconds)
    (204/341) benchmarking ("skipmissing", "collect", "ComplexF64", 0)...
    done (took 2.417557811 seconds)
    (205/341) benchmarking ("perf_simplecopy", "ComplexF64", 0)...
    done (took 1.661305574 seconds)
    (206/341) benchmarking ("collect", "all", "Int64", 1)...
    done (took 1.584629382 seconds)
    (207/341) benchmarking ("broadcast", "abs", "Float32", 1)...
    done (took 1.396562981 seconds)
    (208/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float32}", 1)...
    done (took 1.406799961 seconds)
    (209/341) benchmarking ("perf_simplecopy", "BigFloat", 0)...
    done (took 1.458042342 seconds)
    (210/341) benchmarking ("sort", "Union{Missing, Int64}", 1)...
    done (took 6.09694301 seconds)
    (211/341) benchmarking ("perf_sum3", "BigInt", 0)...
    done (took 8.015057278 seconds)
    (212/341) benchmarking ("perf_sum2", "BigFloat", 0)...
    done (took 6.37285253 seconds)
    (213/341) benchmarking ("perf_simplecopy", "Int64", 0)...
    done (took 1.590940406 seconds)
    (214/341) benchmarking ("perf_countnothing", "Float64", 0)...
    done (took 1.30081294 seconds)
    (215/341) benchmarking ("perf_sum", "BigInt", 0)...
    done (took 8.050277834 seconds)
    (216/341) benchmarking ("map", "abs", "BigInt", 0)...
    done (took 6.393087984 seconds)
    (217/341) benchmarking ("perf_sum2", "ComplexF64", 1)...
    done (took 2.324830496 seconds)
    (218/341) benchmarking ("broadcast", "*", "ComplexF64", "(true, true)")...
    done (took 2.303269344 seconds)
    (219/341) benchmarking ("map", "abs", "Float32", 0)...
    done (took 1.388500911 seconds)
    (220/341) benchmarking ("collect", "filter", "Bool", 1)...
    done (took 2.541410998 seconds)
    (221/341) benchmarking ("broadcast", "abs", "Float32", 0)...
    done (took 1.364650793 seconds)
    (222/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigFloat}", 1)...
    done (took 2.344569582 seconds)
    (223/341) benchmarking ("broadcast", "abs", "ComplexF64", 0)...
    done (took 2.827181976 seconds)
    (224/341) benchmarking ("perf_sum4", "Float32", 0)...
    done (took 1.270046165 seconds)
    (225/341) benchmarking ("perf_simplecopy", "BigInt", 0)...
    done (took 1.538592381 seconds)
    (226/341) benchmarking ("perf_sum", "Float32", 0)...
    done (took 1.453750699 seconds)
    (227/341) benchmarking ("collect", "filter", "BigFloat", 0)...
    done (took 2.250746639 seconds)
    (228/341) benchmarking ("broadcast", "identity", "Float32", 1)...
    done (took 1.294338348 seconds)
    (229/341) benchmarking ("perf_sum4", "Float64", 1)...
    done (took 1.12863182 seconds)
    (230/341) benchmarking ("map", "abs", "Int64", 0)...
    done (took 1.237480606 seconds)
    (231/341) benchmarking ("broadcast", "abs", "Int8", 1)...
    done (took 1.278141513 seconds)
    (232/341) benchmarking ("perf_sum3", "Int64", 1)...
    done (took 1.233521055 seconds)
    (233/341) benchmarking ("collect", "all", "Float32", 1)...
    done (took 1.3210901 seconds)
    (234/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.176261836 seconds)
    (235/341) benchmarking ("perf_countequals", "Float64")...
    done (took 1.508903565 seconds)
    (236/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigInt}", 0)...
    done (took 6.082963699 seconds)
    (237/341) benchmarking ("perf_sum4", "Int8", 1)...
    done (took 3.597348918 seconds)
    (238/341) benchmarking ("broadcast", "abs", "BigInt", 0)...
    done (took 6.087041393 seconds)
    (239/341) benchmarking ("broadcast", "identity", "Bool", 1)...
    done (took 2.361965907 seconds)
    (240/341) benchmarking ("perf_countnothing", "Int64", 1)...
    done (took 1.127959694 seconds)
    (241/341) benchmarking ("skipmissing", "sum", "Float32", 0)...
    done (took 1.106275876 seconds)
    (242/341) benchmarking ("broadcast", "*", "Int8", "(false, false)")...
    done (took 1.370576205 seconds)
    (243/341) benchmarking ("collect", "all", "Bool", 1)...
    done (took 1.277858153 seconds)
    (244/341) benchmarking ("perf_simplecopy", "Int64", 1)...
    done (took 1.396450654 seconds)
    (245/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigInt}", 0)...
    done (took 2.222730666 seconds)
    (246/341) benchmarking ("perf_sum2", "Float64", 0)...
    done (took 1.258710422 seconds)
    (247/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(true, true)")...
    done (took 6.083845971 seconds)
    (248/341) benchmarking ("perf_countnothing", "Int64", 0)...
    done (took 1.280871143 seconds)
    (249/341) benchmarking ("map", "*", "Int8", "(false, true)")...
    done (took 1.719909487 seconds)
    (250/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, false)")...
    done (took 2.007799412 seconds)
    (251/341) benchmarking ("map", "abs", "ComplexF64", 1)...
    done (took 2.684844673 seconds)
    (252/341) benchmarking ("map", "*", "ComplexF64", "(false, true)")...
    done (took 2.124045339 seconds)
    (253/341) benchmarking ("perf_countnothing", "Bool", 0)...
    done (took 1.162738984 seconds)
    (254/341) benchmarking ("map", "*", "BigFloat", "(false, true)")...
    done (took 6.166030305 seconds)
    (255/341) benchmarking ("broadcast", "*", "Bool", "(true, true)")...
    done (took 1.638699369 seconds)
    (256/341) benchmarking ("broadcast", "*", "Float32", "(true, true)")...
    done (took 1.665276163 seconds)
    (257/341) benchmarking ("perf_simplecopy", "Int8", 0)...
    done (took 1.295803087 seconds)
    (258/341) benchmarking ("perf_sum4", "ComplexF64", 1)...
    done (took 1.368909027 seconds)
    (259/341) benchmarking ("collect", "all", "BigInt", 1)...
    done (took 1.913733883 seconds)
    (260/341) benchmarking ("perf_sum4", "Bool", 1)...
    done (took 1.296098514 seconds)
    (261/341) benchmarking ("collect", "all", "Int8", 1)...
    done (took 1.48384813 seconds)
    (262/341) benchmarking ("sort", "Union{Missing, Float32}", 1)...
    done (took 6.228418566 seconds)
    (263/341) benchmarking ("perf_sum4", "BigFloat", 1)...
    done (took 6.242033701 seconds)
    (264/341) benchmarking ("collect", "filter", "ComplexF64", 1)...
    done (took 2.883972094 seconds)
    (265/341) benchmarking ("perf_simplecopy", "Float32", 1)...
    done (took 1.35248225 seconds)
    (266/341) benchmarking ("perf_simplecopy", "Float64", 0)...
    done (took 1.453820876 seconds)
    (267/341) benchmarking ("map", "*", "Float64", "(true, true)")...
    done (took 1.848920638 seconds)
    (268/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, false)")...
    done (took 6.210137943 seconds)
    (269/341) benchmarking ("map", "abs", "Float64", 1)...
    done (took 3.128874694 seconds)
    (270/341) benchmarking ("collect", "filter", "Int64", 0)...
    done (took 2.260905535 seconds)
    (271/341) benchmarking ("map", "*", "Bool", "(false, true)")...
    done (took 1.814532722 seconds)
    (272/341) benchmarking ("broadcast", "*", "Float64", "(false, true)")...
    done (took 1.725668626 seconds)
    (273/341) benchmarking ("skipmissing", "sum", "ComplexF64", 0)...
    done (took 1.250794328 seconds)
    (274/341) benchmarking ("collect", "all", "Int64", 0)...
    done (took 1.364677393 seconds)
    (275/341) benchmarking ("perf_sum3", "BigInt", 1)...
    done (took 7.775869773 seconds)
    (276/341) benchmarking ("skipmissing", "collect", "Union{Nothing, ComplexF64}", 0)...
    done (took 3.202581478 seconds)
    (277/341) benchmarking ("perf_simplecopy", "BigFloat", 1)...
    done (took 1.618241391 seconds)
    (278/341) benchmarking ("perf_countnothing", "ComplexF64", 0)...
    done (took 1.256472484 seconds)
    (279/341) benchmarking ("broadcast", "identity", "Int8", 1)...
    done (took 1.411914358 seconds)
    (280/341) benchmarking ("map", "identity", "Int64", 1)...
    done (took 1.595113693 seconds)
    (281/341) benchmarking ("collect", "all", "Float32", 0)...
    done (took 1.324589965 seconds)
    (282/341) benchmarking ("broadcast", "identity", "Int64", 0)...
    done (took 1.360776804 seconds)
    (283/341) benchmarking ("sort", "Union{Missing, BigInt}", 1)...
    done (took 6.207709327 seconds)
    (284/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int8}", 1)...
    done (took 1.244212543 seconds)
    (285/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float64}", 0)...
    done (took 2.691497679 seconds)
    (286/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int8}", 0)...
    done (took 2.447648307 seconds)
    (287/341) benchmarking ("perf_binaryop", "*", "Float64", "(true, true)")...
    done (took 1.743455178 seconds)
    (288/341) benchmarking ("perf_sum", "Bool", 0)...
    done (took 1.280635587 seconds)
    (289/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, true)")...
    done (took 1.607968125 seconds)
    (290/341) benchmarking ("broadcast", "abs", "BigInt", 1)...
    done (took 6.231868932 seconds)
    (291/341) benchmarking ("broadcast", "abs", "Float64", 0)...
    done (took 3.21505703 seconds)
    (292/341) benchmarking ("skipmissing", "sum", "Bool", 0)...
    done (took 1.249436438 seconds)
    (293/341) benchmarking ("collect", "all", "Int8", 0)...
    done (took 1.306503726 seconds)
    (294/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, true)")...
    done (took 1.648836493 seconds)
    (295/341) benchmarking ("broadcast", "abs", "Int8", 0)...
    done (took 1.341659602 seconds)
    (296/341) benchmarking ("broadcast", "*", "Int8", "(false, true)")...
    done (took 1.546157117 seconds)
    (297/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigFloat}", 0)...
    done (took 6.173352596 seconds)
    (298/341) benchmarking ("perf_sum", "Bool", 1)...
    done (took 1.362288558 seconds)
    (299/341) benchmarking ("broadcast", "*", "Int64", "(false, false)")...
    done (took 1.487474178 seconds)
    (300/341) benchmarking ("perf_sum4", "Bool", 0)...
    done (took 1.252759851 seconds)
    (301/341) benchmarking ("broadcast", "abs", "BigFloat", 1)...
    done (took 6.245924685 seconds)
    (302/341) benchmarking ("map", "identity", "Int64", 0)...
    done (took 1.45486306 seconds)
    (303/341) benchmarking ("skipmissing", "sum", "BigInt", 0)...
    done (took 6.229003356 seconds)
    (304/341) benchmarking ("perf_sum2", "BigInt", 1)...
    done (took 8.301636609 seconds)
    (305/341) benchmarking ("map", "identity", "Int8", 1)...
    done (took 3.724548069 seconds)
    (306/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigFloat}", 0)...
    done (took 2.233521307 seconds)
    (307/341) benchmarking ("skipmissing", "collect", "Int64", 0)...
    done (took 2.003140231 seconds)
    (308/341) benchmarking ("sort", "Bool", 0)...
    done (took 1.33049297 seconds)
    (309/341) benchmarking ("perf_sum4", "BigInt", 0)...
    done (took 6.094175181 seconds)
    (310/341) benchmarking ("perf_sum2", "Float32", 0)...
    done (took 3.168217106 seconds)
    (311/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float32}", 0)...
    done (took 1.256885434 seconds)
    (312/341) benchmarking ("broadcast", "identity", "Int8", 0)...
    done (took 1.193118891 seconds)
    (313/341) benchmarking ("map", "identity", "ComplexF64", 1)...
    done (took 1.670718324 seconds)
    (314/341) benchmarking ("perf_binaryop", "*", "Int64", "(true, true)")...
    done (took 1.66019478 seconds)
    (315/341) benchmarking ("sort", "Union{Nothing, Int8}", 0)...
    done (took 6.097079409 seconds)
    (316/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.294999 seconds)
    (317/341) benchmarking ("map", "*", "BigFloat", "(true, true)")...
    done (took 6.119085726 seconds)
    (318/341) benchmarking ("map", "abs", "Int64", 1)...
    done (took 1.467644532 seconds)
    (319/341) benchmarking ("skipmissing", "sum", "Int64", 0)...
    done (took 1.121193779 seconds)
    (320/341) benchmarking ("perf_countnothing", "ComplexF64", 1)...
    done (took 1.112536105 seconds)
    (321/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float64}", 0)...
    done (took 1.249425237 seconds)
    (322/341) benchmarking ("perf_sum3", "Int8", 0)...
    done (took 1.186566356 seconds)
    (323/341) benchmarking ("perf_sum4", "BigInt", 1)...
    done (took 6.083375686 seconds)
    (324/341) benchmarking ("perf_sum2", "Bool", 0)...
    done (took 3.379652454 seconds)
    (325/341) benchmarking ("broadcast", "abs", "Bool", 1)...
    done (took 1.287481112 seconds)
    (326/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, true)")...
    done (took 1.660390569 seconds)
    (327/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float64}", 1)...
    done (took 2.226955871 seconds)
    (328/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int8}", 1)...
    done (took 2.047991953 seconds)
    (329/341) benchmarking ("map", "abs", "BigInt", 1)...
    done (took 6.153547398 seconds)
    (330/341) benchmarking ("perf_countnothing", "BigFloat", 0)...
    done (took 3.146228824 seconds)
    (331/341) benchmarking ("map", "abs", "Int8", 0)...
    done (took 1.357494205 seconds)
    (332/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, false)")...
    done (took 1.546769733 seconds)
    (333/341) benchmarking ("sort", "Float64", 0)...
    done (took 5.929692998 seconds)
    (334/341) benchmarking ("perf_sum2", "Int8", 1)...
    done (took 1.272366662 seconds)
    (335/341) benchmarking ("perf_sum", "ComplexF64", 1)...
    done (took 1.428925486 seconds)
    (336/341) benchmarking ("sort", "Int8", 0)...
    done (took 4.950390598 seconds)
    (337/341) benchmarking ("collect", "filter", "BigInt", 0)...
    done (took 2.394369546 seconds)
    (338/341) benchmarking ("perf_sum4", "Int64", 0)...
    done (took 1.296435702 seconds)
    (339/341) benchmarking ("broadcast", "identity", "ComplexF64", 0)...
    done (took 1.523589522 seconds)
    (340/341) benchmarking ("sort", "Union{Missing, Float64}", 1)...
    done (took 6.261754032 seconds)
    (341/341) benchmarking ("collect", "all", "BigFloat", 1)...
    done (took 1.926631815 seconds)
  done (took 907.603358864 seconds)
done (took 908.890673467 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.297888698 seconds)
  (2/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 2.640647515 seconds)
  (3/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 1.474006366 seconds)
  (4/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 2.177150511 seconds)
  (5/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 2.061104525 seconds)
  (6/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.916455028 seconds)
  (7/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 1.492723667 seconds)
  (8/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.514876964 seconds)
  (9/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.357748122 seconds)
  (10/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 1.493738786 seconds)
  (11/152) benchmarking ("inner", "Int32", 4096)...
  done (took 2.226901161 seconds)
  (12/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 2.077564052 seconds)
  (13/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.370124927 seconds)
  (14/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.408380469 seconds)
  (15/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.35737199 seconds)
  (16/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.372173506 seconds)
  (17/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 2.512930464 seconds)
  (18/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.520401622 seconds)
  (19/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.391685823 seconds)
  (20/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 2.215634227 seconds)
  (21/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.633765875 seconds)
  (22/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 2.2079909 seconds)
  (23/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.690310914 seconds)
  (24/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.579529193 seconds)
  (25/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 2.654677236 seconds)
  (26/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.37199993 seconds)
  (27/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.326284834 seconds)
  (28/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.623129817 seconds)
  (29/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.636312831 seconds)
  (30/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 2.26383465 seconds)
  (31/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 2.510147885 seconds)
  (32/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 1.49629874 seconds)
  (33/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 2.111211802 seconds)
  (34/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 2.522241113 seconds)
  (35/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.353058864 seconds)
  (36/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.36148622 seconds)
  (37/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 2.155223661 seconds)
  (38/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.348121872 seconds)
  (39/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.246032499 seconds)
  (40/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.305245747 seconds)
  (41/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 2.602911367 seconds)
  (42/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.331076148 seconds)
  (43/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.888036509 seconds)
  (44/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.952043976 seconds)
  (45/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.925407952 seconds)
  (46/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.693513199 seconds)
  (47/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 2.142073289 seconds)
  (48/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.385368301 seconds)
  (49/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.367230267 seconds)
  (50/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 1.454306004 seconds)
  (51/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.303552713 seconds)
  (52/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.305923981 seconds)
  (53/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.621891366 seconds)
  (54/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 2.263964955 seconds)
  (55/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 2.165702467 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 2.120514495 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.633376819 seconds)
  (58/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 2.2164899 seconds)
  (59/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 2.001666759 seconds)
  (60/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 1.463050225 seconds)
  (61/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.639780808 seconds)
  (62/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.370477705 seconds)
  (63/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 1.419421351 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.404401567 seconds)
  (65/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.229766444 seconds)
  (66/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.396111193 seconds)
  (67/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.510826995 seconds)
  (68/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.120581223 seconds)
  (69/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 1.294064108 seconds)
  (70/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 1.319770633 seconds)
  (71/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.340936341 seconds)
  (72/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.319512293 seconds)
  (73/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 2.212114926 seconds)
  (74/152) benchmarking ("inner", "Float32", 4096)...
  done (took 2.294758406 seconds)
  (75/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.209066271 seconds)
  (76/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 1.31314365 seconds)
  (77/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.826877913 seconds)
  (78/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 1.294638197 seconds)
  (79/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.885649058 seconds)
  (80/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.200894002 seconds)
  (81/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 2.042944453 seconds)
  (82/152) benchmarking ("inner", "Int32", 4095)...
  done (took 2.027411214 seconds)
  (83/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 2.051180746 seconds)
  (84/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.17315966 seconds)
  (85/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.143419976 seconds)
  (86/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.923015078 seconds)
  (87/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 2.075577847 seconds)
  (88/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 2.093662329 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.281707965 seconds)
  (90/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 1.353792522 seconds)
  (91/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 2.125378871 seconds)
  (92/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 1.388487768 seconds)
  (93/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.658495573 seconds)
  (94/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.205282646 seconds)
  (95/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.139521564 seconds)
  (96/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 1.294942639 seconds)
  (97/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 2.038051214 seconds)
  (98/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.117871534 seconds)
  (99/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 2.262618709 seconds)
  (100/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 1.294429803 seconds)
  (101/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.878206892 seconds)
  (102/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.204730309 seconds)
  (103/152) benchmarking ("inner", "Float32", 4095)...
  done (took 2.128710189 seconds)
  (104/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.223190002 seconds)
  (105/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.246274471 seconds)
  (106/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.150622951 seconds)
  (107/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.233414982 seconds)
  (108/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.563508407 seconds)
  (109/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.423082578 seconds)
  (110/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 2.373735717 seconds)
  (111/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 2.609493471 seconds)
  (112/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.325711916 seconds)
  (113/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.455660534 seconds)
  (114/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.342130535 seconds)
  (115/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.264595353 seconds)
  (116/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.998745759 seconds)
  (117/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.508841906 seconds)
  (118/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 2.153200049 seconds)
  (119/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.235528783 seconds)
  (120/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.86226878 seconds)
  (121/152) benchmarking ("inner", "Float64", 4095)...
  done (took 2.459176294 seconds)
  (122/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.311644942 seconds)
  (123/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 2.56756088 seconds)
  (124/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.51533166 seconds)
  (125/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.234445684 seconds)
  (126/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.308292211 seconds)
  (127/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.309707693 seconds)
  (128/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 2.167482887 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.347092057 seconds)
  (130/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.331631632 seconds)
  (131/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 2.426865072 seconds)
  (132/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.672121634 seconds)
  (133/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 1.400821506 seconds)
  (134/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 2.108822933 seconds)
  (135/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.439739807 seconds)
  (136/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.899326802 seconds)
  (137/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.440996589 seconds)
  (138/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.434648104 seconds)
  (139/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.297903321 seconds)
  (140/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 2.164235165 seconds)
  (141/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.335430981 seconds)
  (142/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 2.371818832 seconds)
  (143/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.516191052 seconds)
  (144/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 2.614684202 seconds)
  (145/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.424150356 seconds)
  (146/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.517267232 seconds)
  (147/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.321086035 seconds)
  (148/152) benchmarking ("inner", "Float64", 4096)...
  done (took 2.473407253 seconds)
  (149/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.263144696 seconds)
  (150/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.368428933 seconds)
  (151/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.464357595 seconds)
  (152/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 2.372316331 seconds)
done (took 256.729213676 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.56350981 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 5.298436864 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.380221482 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.402657134 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.59982913 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.513025886 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.334112457 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.69525223 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.2869699 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.636794729 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.477176568 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 3.0305502 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 5.22380931 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.313852322 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.443532604 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.331960675 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.144156623 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.347376753 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.537421159 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.45187915 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.834905807 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.323621567 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.292593774 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.531850096 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.134312716 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.927217463 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.507921842 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.34323575 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.490179945 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.97098694 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 3.022407233 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.521789975 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.559034048 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 4.956506721 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 3.669612004 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 2.987580147 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.555293863 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 3.048366257 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.517383551 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.595100581 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.466941529 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 6.015523679 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.997617523 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 3.007508684 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.352005488 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.533812004 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.32655104 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 5.123764025 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.24289767 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 2.949641995 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.52521602 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 3.090412911 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 3.137352498 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.536690853 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.477774615 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 4.910634295 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.669623201 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.643162653 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.551228092 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.548735427 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.502905459 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.670034218 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.633159741 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.37127957 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 3.005920213 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.502827102 seconds)
  done (took 152.817514173 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.657205982 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.527464872 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.633918642 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 2.485165242 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.748908796 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.619801706 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 2.530296668 seconds)
  done (took 14.421760252 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 2.176862731 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.155079578 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.398233096 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.387503225 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.219138067 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.466803957 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.406662951 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 3.05738871 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.558218986 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.357165632 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 1.634640227 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.555728085 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 2.957333732 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 3.061110843 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.408368764 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.556186929 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 2.316387649 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.402153118 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.357695343 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.597564962 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 3.049500635 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 3.019489014 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.456170751 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.268355518 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.197063209 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.1901929 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.142210091 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 2.115196209 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.141084622 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.128571166 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.149174246 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.254822562 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.137130131 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.833429194 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.128599205 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.463760122 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.149206418 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.143626925 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.277130325 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.08892597 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.168461135 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.194131185 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.333793815 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.164648009 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.173437826 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.366749931 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.16190314 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.21898098 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.169132568 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.228324473 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.416157269 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.234063029 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.215443458 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 2.834146123 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.375830834 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 2.818274023 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.232107848 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.186540449 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.176909338 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.248702885 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.196811006 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.424477175 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.401689789 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.181949302 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.43684314 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 1.499681687 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.190635683 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.218272297 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.229715001 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 1.498244009 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.27252272 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.549412795 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.312093586 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 1.373737347 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.328469047 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.446032395 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.519701826 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 2.135830732 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 2.114903421 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.955724484 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.665321512 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.319120596 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 2.649435789 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 2.25805821 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 3.205957499 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.331699168 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.345340768 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 3.047029843 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 2.261573537 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.357532302 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.664657377 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.326254038 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.395372686 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 1.396584271 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.338842916 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.415980427 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.515379075 seconds)
  done (took 160.336670924 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 2.387138673 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 3.558626144 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.426863625 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 2.165519925 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 2.257844018 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 2.489336639 seconds)
  done (took 15.512907018 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 2.669523598 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 2.035998171 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.33279269 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.376526944 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.4188566 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.317056307 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.323653484 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.638197439 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 2.563036328 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.375390527 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.317149103 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.311550458 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.304834068 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.447689966 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.237440679 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.277896284 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.238739028 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.301986633 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.283016814 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.345086889 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 1.564921499 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.333401278 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.33475952 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 2.16184372 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 2.338987054 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.320783379 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 2.04231607 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.327238245 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.306782969 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 2.692439588 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.485680621 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.225275447 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 2.066606767 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 3.569704839 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.965017917 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 2.162126501 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.470785583 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.229102972 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.290421805 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.250489266 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.250961816 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.351541812 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.323355426 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.241727858 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 2.693479602 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 3.12633957 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 2.362013497 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.54962557 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.263258654 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.231431946 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.293847192 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.31939062 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.263869455 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.270635885 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 3.813924843 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.726784105 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 2.225111508 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.273222292 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.355821089 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 2.192142149 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 2.398263099 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.200780383 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.677756021 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 2.107893859 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 2.807841958 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.103825914 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 2.01985421 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.309144391 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.210112014 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.16594065 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.098217849 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.160656549 seconds)
  done (took 125.901297597 seconds)
done (took 470.20544087 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.321197727 seconds)
  done (took 7.414631463 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.189722259 seconds)
  done (took 7.463399843 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.184184516 seconds)
  done (took 7.356479025 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.201024743 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.171415083 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.214916697 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.174430721 seconds)
  done (took 25.966779033 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.546735585 seconds)
  done (took 7.639311974 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.08605604 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.107085323 seconds)
  done (took 13.362670035 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.097576651 seconds)
  done (took 7.203086088 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.415555556 seconds)
  done (took 7.514797024 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.104040012 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.101485499 seconds)
  done (took 13.323560913 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.089599839 seconds)
  done (took 7.175055954 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.417480487 seconds)
  done (took 8.597564214 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.138420301 seconds)
  done (took 7.283105936 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.175373152 seconds)
  done (took 7.344438388 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.432681722 seconds)
  done (took 7.649867704 seconds)
done (took 136.380354229 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.249252515 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.254543546 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.23543392 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.25061175 seconds)
  done (took 26.217814116 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.580994962 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.572260771 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.549701056 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.712211711 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.507030507 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.512415356 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.596089908 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.595641133 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.554433448 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.644524357 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.566981824 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.600749172 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.730238796 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.551385551 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.548656664 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.671363912 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.734376344 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.578800078 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.524505411 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.554272245 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.723319263 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.714068951 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.979779234 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.95607345 seconds)
  done (took 40.50184343 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.397859658 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.551455352 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.289202189 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.416503703 seconds)
  done (took 6.842716664 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.128385943 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.484053496 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.542926541 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.710164786 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.634745815 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 1.456934955 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.633732861 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 1.496792726 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 1.473591685 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 1.454516193 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.889019571 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.427579123 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.443754377 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.689072799 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 1.433572017 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.165673273 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.116399411 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 1.282576193 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.472497518 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 1.298359901 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.360918537 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.454352541 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.45451599 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.455245106 seconds)
  done (took 36.044917381 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.86858845 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 2.061768369 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 2.502526248 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 2.049697185 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.860900823 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.99135737 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 2.491820872 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.71882611 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.463162932 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 2.462988723 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.939258299 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.916038723 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.363046582 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 2.072813696 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.962066096 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.389302445 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.381581244 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 2.054912335 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.636349882 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 2.515352155 seconds)
  done (took 39.787100547 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.203440161 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 6.208032183 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.401644751 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.430520835 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.240505615 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.095255613 seconds)
  done (took 28.775950765 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 3.483775223 seconds)
    (2/12) benchmarking ("push_single!", 256)...
    done (took 1.226196901 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.378221656 seconds)
    (4/12) benchmarking ("push_multiple!", 256)...
    done (took 1.348187053 seconds)
    (5/12) benchmarking ("push_single!", 2048)...
    done (took 1.250381848 seconds)
    (6/12) benchmarking ("push_single!", 8)...
    done (took 1.217922739 seconds)
    (7/12) benchmarking ("prerend!", 2048)...
    done (took 1.63302354 seconds)
    (8/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.310200435 seconds)
    (9/12) benchmarking ("push_multiple!", 8)...
    done (took 1.849766781 seconds)
    (10/12) benchmarking ("append!", 2048)...
    done (took 1.77999149 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 2.607797914 seconds)
    (12/12) benchmarking ("prerend!", 8)...
    done (took 1.513465582 seconds)
  done (took 21.68911602 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.084637419 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.130999872 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.094926452 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.325325963 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 2.392008997 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 3.856707526 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 3.103282885 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.086683278 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 2.586420592 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.35024406 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 3.22866854 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.323538611 seconds)
  done (took 44.663971958 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.279891693 seconds)
    (2/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.278760262 seconds)
    (3/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.394766742 seconds)
    (4/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.129705147 seconds)
    (5/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.48954947 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.140338313 seconds)
    (7/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.459067889 seconds)
    (8/608) benchmarking ("sumelt", "BitMatrix")...
    done (took 6.086629182 seconds)
    (9/608) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.823442373 seconds)
    (10/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.858688151 seconds)
    (11/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.466287345 seconds)
    (12/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.104713877 seconds)
    (13/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.620674174 seconds)
    (14/608) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 4.061160184 seconds)
    (15/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.829008403 seconds)
    (16/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.388735873 seconds)
    (17/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.909697736 seconds)
    (18/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.125441275 seconds)
    (19/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.399084083 seconds)
    (20/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.129299766 seconds)
    (21/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.05481892 seconds)
    (22/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.240361612 seconds)
    (23/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.086333946 seconds)
    (24/608) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.514656492 seconds)
    (25/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.372620568 seconds)
    (26/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.08851602 seconds)
    (27/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.291243084 seconds)
    (28/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.33522797 seconds)
    (29/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.086934513 seconds)
    (30/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.338576797 seconds)
    (31/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.133443468 seconds)
    (32/608) benchmarking ("sumvector_view", "Matrix{Int64}")...
    done (took 1.689487356 seconds)
    (33/608) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 1.343535013 seconds)
    (34/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.524408418 seconds)
    (35/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.608210873 seconds)
    (36/608) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.284906635 seconds)
    (37/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.367261857 seconds)
    (38/608) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 6.259668764 seconds)
    (39/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.852321314 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.568096387 seconds)
    (41/608) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.407526772 seconds)
    (42/608) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 1.427778738 seconds)
    (43/608) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.257437428 seconds)
    (44/608) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 2.278387049 seconds)
    (45/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.525027858 seconds)
    (46/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.053390724 seconds)
    (47/608) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.280228338 seconds)
    (48/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.964179154 seconds)
    (49/608) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.276215188 seconds)
    (50/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.467529147 seconds)
    (51/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.190315227 seconds)
    (52/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.95166957 seconds)
    (53/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.735614749 seconds)
    (54/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.004681903 seconds)
    (55/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.411646849 seconds)
    (56/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.578670464 seconds)
    (57/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.454256088 seconds)
    (58/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.285583618 seconds)
    (59/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.604020285 seconds)
    (60/608) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 5.339880121 seconds)
    (61/608) benchmarking ("sumlinear_view", "Matrix{Float64}")...
    done (took 6.431712445 seconds)
    (62/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.333541598 seconds)
    (63/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.313334548 seconds)
    (64/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.155873655 seconds)
    (65/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.372087966 seconds)
    (66/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.632415912 seconds)
    (67/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 3.252608634 seconds)
    (68/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.520412279 seconds)
    (69/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.55492626 seconds)
    (70/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.54541316 seconds)
    (71/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.628966361 seconds)
    (72/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.45498088 seconds)
    (73/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.124451595 seconds)
    (74/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.405892703 seconds)
    (75/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.786761975 seconds)
    (76/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.216070037 seconds)
    (77/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.561971677 seconds)
    (78/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.11544706 seconds)
    (79/608) benchmarking ("mapr_access", "Matrix{Int64}")...
    done (took 2.796400083 seconds)
    (80/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.623388843 seconds)
    (81/608) benchmarking ("sumcartesian", "Matrix{Float64}")...
    done (took 4.069919721 seconds)
    (82/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.205298541 seconds)
    (83/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.671430534 seconds)
    (84/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.054367824 seconds)
    (85/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.086263794 seconds)
    (86/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.26255734 seconds)
    (87/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.958835 seconds)
    (88/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.061754869 seconds)
    (89/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.184493864 seconds)
    (90/608) benchmarking ("sumlogical_view", "Matrix{Int64}")...
    done (took 5.14017998 seconds)
    (91/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.489256813 seconds)
    (92/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.229071012 seconds)
    (93/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.240354735 seconds)
    (94/608) benchmarking ("sum", "3dsubarray")...
    done (took 1.282603471 seconds)
    (95/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.796615514 seconds)
    (96/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.070362308 seconds)
    (97/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.090204404 seconds)
    (98/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.392172077 seconds)
    (99/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.061537881 seconds)
    (100/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.650341113 seconds)
    (101/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.086043716 seconds)
    (102/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.087973129 seconds)
    (103/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.133288932 seconds)
    (104/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.698118076 seconds)
    (105/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.513063903 seconds)
    (106/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.937252253 seconds)
    (107/608) benchmarking ("sumcartesian", "Matrix{Int64}")...
    done (took 1.909264081 seconds)
    (108/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.814334926 seconds)
    (109/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.482717814 seconds)
    (110/608) benchmarking "5d"...
    done (took 2.799962999 seconds)
    (111/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.351261469 seconds)
    (112/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.21399852 seconds)
    (113/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.584915953 seconds)
    (114/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.577877624 seconds)
    (115/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.213398502 seconds)
    (116/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.973121824 seconds)
    (117/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.236124937 seconds)
    (118/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.336168235 seconds)
    (119/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.612492453 seconds)
    (120/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.247405902 seconds)
    (121/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.225894467 seconds)
    (122/608) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.689311538 seconds)
    (123/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.443521681 seconds)
    (124/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.262870222 seconds)
    (125/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.530040329 seconds)
    (126/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.26995332 seconds)
    (127/608) benchmarking ("sumrange_view", "Matrix{Float64}")...
    done (took 2.443699688 seconds)
    (128/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.266875805 seconds)
    (129/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.858114783 seconds)
    (130/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.24338138 seconds)
    (131/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.508512592 seconds)
    (132/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.73288369 seconds)
    (133/608) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 2.360593412 seconds)
    (134/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.343526056 seconds)
    (135/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.229281579 seconds)
    (136/608) benchmarking ("sumcolon_view", "Matrix{Float64}")...
    done (took 2.41222532 seconds)
    (137/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.722824837 seconds)
    (138/608) benchmarking ("sumrange", "Matrix{Float64}")...
    done (took 6.410881728 seconds)
    (139/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.581998949 seconds)
    (140/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.576051045 seconds)
    (141/608) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.463328213 seconds)
    (142/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.744359412 seconds)
    (143/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.272291977 seconds)
    (144/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.098796171 seconds)
    (145/608) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 1.639224995 seconds)
    (146/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.501950911 seconds)
    (147/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.632181259 seconds)
    (148/608) benchmarking ("sumlogical", "BitMatrix")...
    done (took 2.926963423 seconds)
    (149/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.438537293 seconds)
    (150/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.372791988 seconds)
    (151/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.281587948 seconds)
    (152/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.457829487 seconds)
    (153/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.318233886 seconds)
    (154/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.83860995 seconds)
    (155/608) benchmarking ("sumcolon", "Matrix{Int64}")...
    done (took 6.295749661 seconds)
    (156/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.92611477 seconds)
    (157/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.008073345 seconds)
    (158/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.680772138 seconds)
    (159/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.292851551 seconds)
    (160/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.453185758 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.281469142 seconds)
    (162/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.509711832 seconds)
    (163/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.985680381 seconds)
    (164/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.30525784 seconds)
    (165/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.435613858 seconds)
    (166/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.555453447 seconds)
    (167/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.487799614 seconds)
    (168/608) benchmarking "ind2sub"...
    done (took 6.293166068 seconds)
    (169/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.26144975 seconds)
    (170/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.587039552 seconds)
    (171/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.503529774 seconds)
    (172/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.751785837 seconds)
    (173/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.535755705 seconds)
    (174/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.962787061 seconds)
    (175/608) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 1.610530956 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.770761342 seconds)
    (177/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.482048346 seconds)
    (178/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.65657335 seconds)
    (179/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.069256313 seconds)
    (180/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.559824729 seconds)
    (181/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.529645776 seconds)
    (182/608) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.935467142 seconds)
    (183/608) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.303314977 seconds)
    (184/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.312742968 seconds)
    (185/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.414027085 seconds)
    (186/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.709030912 seconds)
    (187/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.526195522 seconds)
    (188/608) benchmarking ("sumcartesian_view", "Matrix{Float64}")...
    done (took 2.083084617 seconds)
    (189/608) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.789916672 seconds)
    (190/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.799630684 seconds)
    (191/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.290940269 seconds)
    (192/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.28095876 seconds)
    (193/608) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 4.223109101 seconds)
    (194/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.417136515 seconds)
    (195/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.629612146 seconds)
    (196/608) benchmarking ("sumelt_boundscheck", "Matrix{Float64}")...
    done (took 4.27375824 seconds)
    (197/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.742372967 seconds)
    (198/608) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.340323933 seconds)
    (199/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.612346815 seconds)
    (200/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.560680453 seconds)
    (201/608) benchmarking ("sumelt", "1:100000")...
    done (took 1.292808571 seconds)
    (202/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.5636284 seconds)
    (203/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.11563963 seconds)
    (204/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.628885876 seconds)
    (205/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.620614499 seconds)
    (206/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.592210427 seconds)
    (207/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.254889092 seconds)
    (208/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 5.964604681 seconds)
    (209/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 2.537181611 seconds)
    (210/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 3.41340274 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.324497471 seconds)
    (212/608) benchmarking ("sumlogical", "Matrix{Float64}")...
    done (took 5.604298253 seconds)
    (213/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.253376989 seconds)
    (214/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.270680978 seconds)
    (215/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.271667666 seconds)
    (216/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.618419514 seconds)
    (217/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 4.416607763 seconds)
    (218/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 1.976111225 seconds)
    (219/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.584128411 seconds)
    (220/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.806462968 seconds)
    (221/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.228828225 seconds)
    (222/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.429844027 seconds)
    (223/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.657992527 seconds)
    (224/608) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.234893122 seconds)
    (225/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.179824013 seconds)
    (226/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.367462666 seconds)
    (227/608) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 5.360998734 seconds)
    (228/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.134631573 seconds)
    (229/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.687816701 seconds)
    (230/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.466506418 seconds)
    (231/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.592645355 seconds)
    (232/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.233560299 seconds)
    (233/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.231959654 seconds)
    (234/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.511671026 seconds)
    (235/608) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.561429605 seconds)
    (236/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.50274056 seconds)
    (237/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.681993339 seconds)
    (238/608) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.467346527 seconds)
    (239/608) benchmarking ("sumrange", "BitMatrix")...
    done (took 1.885660993 seconds)
    (240/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.305487402 seconds)
    (241/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.885355527 seconds)
    (242/608) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 1.384591967 seconds)
    (243/608) benchmarking ("sumeach", "1:100000")...
    done (took 1.263829122 seconds)
    (244/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.735810932 seconds)
    (245/608) benchmarking ("sumvector", "1:100000")...
    done (took 3.130257414 seconds)
    (246/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.06024681 seconds)
    (247/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.381590143 seconds)
    (248/608) benchmarking ("sumlogical", "1:100000")...
    done (took 1.902313921 seconds)
    (249/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.404617275 seconds)
    (250/608) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 4.931939806 seconds)
    (251/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.472371787 seconds)
    (252/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.214023667 seconds)
    (253/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.57787471 seconds)
    (254/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.758944475 seconds)
    (255/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.097170666 seconds)
    (256/608) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 1.994058502 seconds)
    (257/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.296962063 seconds)
    (258/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.168001862 seconds)
    (259/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.385700952 seconds)
    (260/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.067728999 seconds)
    (261/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.197920456 seconds)
    (262/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.724233595 seconds)
    (263/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.834062604 seconds)
    (264/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.378984304 seconds)
    (265/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.331921942 seconds)
    (266/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.54911832 seconds)
    (267/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.55654258 seconds)
    (268/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.483172868 seconds)
    (269/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.148700914 seconds)
    (270/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.331873638 seconds)
    (271/608) benchmarking "4d"...
    done (took 2.257719046 seconds)
    (272/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.470630922 seconds)
    (273/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.170640364 seconds)
    (274/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.446921109 seconds)
    (275/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.755714876 seconds)
    (276/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.75931362 seconds)
    (277/608) benchmarking ("sumcartesian_view", "Matrix{Int64}")...
    done (took 1.91337609 seconds)
    (278/608) benchmarking ("sumvector", "Matrix{Float64}")...
    done (took 1.643783794 seconds)
    (279/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.393733312 seconds)
    (280/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.35828575 seconds)
    (281/608) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 1.522056801 seconds)
    (282/608) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 1.372931368 seconds)
    (283/608) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.470960276 seconds)
    (284/608) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 2.053110479 seconds)
    (285/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.787914527 seconds)
    (286/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.152762529 seconds)
    (287/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.313704411 seconds)
    (288/608) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 4.109395783 seconds)
    (289/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.851684542 seconds)
    (290/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.381616989 seconds)
    (291/608) benchmarking ("sumvector_view", "Matrix{Float64}")...
    done (took 1.463955556 seconds)
    (292/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.456011072 seconds)
    (293/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.157447095 seconds)
    (294/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.532376967 seconds)
    (295/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.453715921 seconds)
    (296/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.223801046 seconds)
    (297/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.381227378 seconds)
    (298/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.446759237 seconds)
    (299/608) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.197797163 seconds)
    (300/608) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.467173838 seconds)
    (301/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.173299212 seconds)
    (302/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.650523094 seconds)
    (303/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.483738668 seconds)
    (304/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.087010687 seconds)
    (305/608) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.554525078 seconds)
    (306/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.281787465 seconds)
    (307/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.432751813 seconds)
    (308/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.255253689 seconds)
    (309/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.805941859 seconds)
    (310/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.124669569 seconds)
    (311/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.324797237 seconds)
    (312/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.780590186 seconds)
    (313/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.376569737 seconds)
    (314/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.335135798 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.557216741 seconds)
    (316/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.032544944 seconds)
    (317/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.218014076 seconds)
    (318/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.286263684 seconds)
    (319/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.351457761 seconds)
    (320/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.844555551 seconds)
    (321/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.570050622 seconds)
    (322/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.775884131 seconds)
    (323/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.69011069 seconds)
    (324/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.559536101 seconds)
    (325/608) benchmarking ("sumlinear", "Matrix{Int64}")...
    done (took 1.950439759 seconds)
    (326/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.219403017 seconds)
    (327/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.397586973 seconds)
    (328/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.373237539 seconds)
    (329/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.210507079 seconds)
    (330/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.434924925 seconds)
    (331/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.607822659 seconds)
    (332/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.23710982 seconds)
    (333/608) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 1.405568149 seconds)
    (334/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.520703121 seconds)
    (335/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.342176386 seconds)
    (336/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.736392742 seconds)
    (337/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.273521922 seconds)
    (338/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.852331889 seconds)
    (339/608) benchmarking ("sumcolon", "1:100000")...
    done (took 2.369508366 seconds)
    (340/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.751173494 seconds)
    (341/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.781823729 seconds)
    (342/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.029387886 seconds)
    (343/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.658342776 seconds)
    (344/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.132426301 seconds)
    (345/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.556892576 seconds)
    (346/608) benchmarking "3d"...
    done (took 2.035689158 seconds)
    (347/608) benchmarking ("sum", "3darray")...
    done (took 2.322160215 seconds)
    (348/608) benchmarking ("sumlogical", "Matrix{Int64}")...
    done (took 5.399320911 seconds)
    (349/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.758012369 seconds)
    (350/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.230778425 seconds)
    (351/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.041849373 seconds)
    (352/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.988218012 seconds)
    (353/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.39689084 seconds)
    (354/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.66478028 seconds)
    (355/608) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 5.369491647 seconds)
    (356/608) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.050532531 seconds)
    (357/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.43399681 seconds)
    (358/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.521995728 seconds)
    (359/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.473363841 seconds)
    (360/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.401744851 seconds)
    (361/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.271558557 seconds)
    (362/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 1.855760063 seconds)
    (363/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.033145057 seconds)
    (364/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.556380218 seconds)
    (365/608) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 1.460428757 seconds)
    (366/608) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 1.444503634 seconds)
    (367/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.481441016 seconds)
    (368/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.463541279 seconds)
    (369/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.832949789 seconds)
    (370/608) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.610159994 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Matrix{Int64}")...
    done (took 2.012239107 seconds)
    (372/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.676128599 seconds)
    (373/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.496171485 seconds)
    (374/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.253052078 seconds)
    (375/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.297548309 seconds)
    (376/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.981719024 seconds)
    (377/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.665029886 seconds)
    (378/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.407423468 seconds)
    (379/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.594692986 seconds)
    (380/608) benchmarking ("sumvector", "BitMatrix")...
    done (took 1.621174909 seconds)
    (381/608) benchmarking ("sumrange", "Matrix{Int64}")...
    done (took 6.310267366 seconds)
    (382/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.326276011 seconds)
    (383/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.290872745 seconds)
    (384/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.683930277 seconds)
    (385/608) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.011169142 seconds)
    (386/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.014640677 seconds)
    (387/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.502885939 seconds)
    (388/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.645146454 seconds)
    (389/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.840626185 seconds)
    (390/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.300977 seconds)
    (391/608) benchmarking ("sumelt", "Matrix{Int64}")...
    done (took 2.00546761 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.481583652 seconds)
    (393/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.654164949 seconds)
    (394/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.663665434 seconds)
    (395/608) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.165992023 seconds)
    (396/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.692592227 seconds)
    (397/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.619776878 seconds)
    (398/608) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 2.457072725 seconds)
    (399/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.270162011 seconds)
    (400/608) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 1.46327837 seconds)
    (401/608) benchmarking ("sumeach_view", "Matrix{Float64}")...
    done (took 6.294685917 seconds)
    (402/608) benchmarking ("sumcolon", "Matrix{Float64}")...
    done (took 6.357643463 seconds)
    (403/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.011742665 seconds)
    (404/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.608675183 seconds)
    (405/608) benchmarking ("sumlogical_view", "Matrix{Float64}")...
    done (took 5.437987354 seconds)
    (406/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.485541446 seconds)
    (407/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.92860556 seconds)
    (408/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.302319253 seconds)
    (409/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.34433104 seconds)
    (410/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 5.039081434 seconds)
    (411/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.546511624 seconds)
    (412/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.471207194 seconds)
    (413/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.281406916 seconds)
    (414/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 1.873701375 seconds)
    (415/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.615497965 seconds)
    (416/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.444857613 seconds)
    (417/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.26876968 seconds)
    (418/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.024489248 seconds)
    (419/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.250241415 seconds)
    (420/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.474047397 seconds)
    (421/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.318775865 seconds)
    (422/608) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 2.447583739 seconds)
    (423/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.133675228 seconds)
    (424/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.399401775 seconds)
    (425/608) benchmarking ("sumcolon_view", "Matrix{Int64}")...
    done (took 2.946862929 seconds)
    (426/608) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.673971698 seconds)
    (427/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.281792404 seconds)
    (428/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.406105893 seconds)
    (429/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.215034699 seconds)
    (430/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.006458481 seconds)
    (431/608) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 4.236016681 seconds)
    (432/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.792536406 seconds)
    (433/608) benchmarking ("sumeach", "Matrix{Int64}")...
    done (took 1.863261977 seconds)
    (434/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.341235056 seconds)
    (435/608) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 2.670217552 seconds)
    (436/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.269138152 seconds)
    (437/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.09574468 seconds)
    (438/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.503952972 seconds)
    (439/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.316214869 seconds)
    (440/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.47264567 seconds)
    (441/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.429117138 seconds)
    (442/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.534942315 seconds)
    (443/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.550502127 seconds)
    (444/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.433260601 seconds)
    (445/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.429301886 seconds)
    (446/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 5.937956129 seconds)
    (447/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.320639017 seconds)
    (448/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.408287285 seconds)
    (449/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.141899323 seconds)
    (450/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.1658569 seconds)
    (451/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.189042053 seconds)
    (452/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.556656831 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.528281198 seconds)
    (454/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.165136699 seconds)
    (455/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.704728973 seconds)
    (456/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.415704179 seconds)
    (457/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.328027548 seconds)
    (458/608) benchmarking ("sumeach_view", "Matrix{Int64}")...
    done (took 6.347055019 seconds)
    (459/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.278250061 seconds)
    (460/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.729657349 seconds)
    (461/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.377197421 seconds)
    (462/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.314574498 seconds)
    (463/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.314450751 seconds)
    (464/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.124017934 seconds)
    (465/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.411097544 seconds)
    (466/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.088246289 seconds)
    (467/608) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 1.28590368 seconds)
    (468/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.087667563 seconds)
    (469/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.134065964 seconds)
    (470/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.297363676 seconds)
    (471/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.336653904 seconds)
    (472/608) benchmarking "sub2ind"...
    done (took 6.470785611 seconds)
    (473/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.398621733 seconds)
    (474/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.690042528 seconds)
    (475/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.25487242 seconds)
    (476/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.546897127 seconds)
    (477/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.806066153 seconds)
    (478/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.620192048 seconds)
    (479/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.091285987 seconds)
    (480/608) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.909544905 seconds)
    (481/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.412734689 seconds)
    (482/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.087707623 seconds)
    (483/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.452351647 seconds)
    (484/608) benchmarking "6d"...
    done (took 2.687934385 seconds)
    (485/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.254259319 seconds)
    (486/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.360681974 seconds)
    (487/608) benchmarking ("sumrange", "1:100000")...
    done (took 2.183939999 seconds)
    (488/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.107900635 seconds)
    (489/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.26521913 seconds)
    (490/608) benchmarking ("sumrange_view", "Matrix{Int64}")...
    done (took 2.603186426 seconds)
    (491/608) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.098261995 seconds)
    (492/608) benchmarking ("sumvector", "Matrix{Int64}")...
    done (took 1.684485626 seconds)
    (493/608) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 1.46510422 seconds)
    (494/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.088824666 seconds)
    (495/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.465757648 seconds)
    (496/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.143618285 seconds)
    (497/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.28405812 seconds)
    (498/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.893641331 seconds)
    (499/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.65043644 seconds)
    (500/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.21408026 seconds)
    (501/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.735273402 seconds)
    (502/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.502483445 seconds)
    (503/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.718992707 seconds)
    (504/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.9033108 seconds)
    (505/608) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.192085747 seconds)
    (506/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.336108455 seconds)
    (507/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.806081644 seconds)
    (508/608) benchmarking ("sumelt", "Matrix{Float64}")...
    done (took 4.221455736 seconds)
    (509/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.230816827 seconds)
    (510/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.346808041 seconds)
    (511/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.842929486 seconds)
    (512/608) benchmarking ("sumlinear_view", "Matrix{Int64}")...
    done (took 6.279312709 seconds)
    (513/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.711477807 seconds)
    (514/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.385191854 seconds)
    (515/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.418434296 seconds)
    (516/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.224013088 seconds)
    (517/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.377180313 seconds)
    (518/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.238950046 seconds)
    (519/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.485630106 seconds)
    (520/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.462401654 seconds)
    (521/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.518024661 seconds)
    (522/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.543118782 seconds)
    (523/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.422629231 seconds)
    (524/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.280602767 seconds)
    (525/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 1.869112406 seconds)
    (526/608) benchmarking ("sumcolon", "BitMatrix")...
    done (took 1.946390658 seconds)
    (527/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.376589027 seconds)
    (528/608) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 1.444901078 seconds)
    (529/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.265991654 seconds)
    (530/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.649800032 seconds)
    (531/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.065175738 seconds)
    (532/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.246382494 seconds)
    (533/608) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.849996915 seconds)
    (534/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.444570838 seconds)
    (535/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.22929844 seconds)
    (536/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.65728373 seconds)
    (537/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.531504254 seconds)
    (538/608) benchmarking ("sumlinear", "1:100000")...
    done (took 1.306350971 seconds)
    (539/608) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 1.478291864 seconds)
    (540/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.265514994 seconds)
    (541/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.564682964 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.413267271 seconds)
    (543/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.760439736 seconds)
    (544/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.471715533 seconds)
    (545/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 5.815300488 seconds)
    (546/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.410852464 seconds)
    (547/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.263836926 seconds)
    (548/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.789063325 seconds)
    (549/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.54847393 seconds)
    (550/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.008120216 seconds)
    (551/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.179417369 seconds)
    (552/608) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.531697431 seconds)
    (553/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.237612869 seconds)
    (554/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.785590173 seconds)
    (555/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.892704526 seconds)
    (556/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.341702302 seconds)
    (557/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.345861244 seconds)
    (558/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.980045692 seconds)
    (559/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.000313937 seconds)
    (560/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 3.21711907 seconds)
    (561/608) benchmarking ("sumeach", "Matrix{Float64}")...
    done (took 4.265372298 seconds)
    (562/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.239698688 seconds)
    (563/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.392416799 seconds)
    (564/608) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 2.688994606 seconds)
    (565/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.197593888 seconds)
    (566/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.810219457 seconds)
    (567/608) benchmarking "2d"...
    done (took 2.310532984 seconds)
    (568/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.415713741 seconds)
    (569/608) benchmarking "7d"...
    done (took 1.548808096 seconds)
    (570/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.215621033 seconds)
    (571/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.405828951 seconds)
    (572/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.24913229 seconds)
    (573/608) benchmarking ("sumlinear", "Matrix{Float64}")...
    done (took 4.221933638 seconds)
    (574/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.735911343 seconds)
    (575/608) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.240154422 seconds)
    (576/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.573813728 seconds)
    (577/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.222325168 seconds)
    (578/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.742952944 seconds)
    (579/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.244526246 seconds)
    (580/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.381312146 seconds)
    (581/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.419168032 seconds)
    (582/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.457144851 seconds)
    (583/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.196404594 seconds)
    (584/608) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.211736116 seconds)
    (585/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.453090758 seconds)
    (586/608) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.260549223 seconds)
    (587/608) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.270509223 seconds)
    (588/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.624180861 seconds)
    (589/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.349169522 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.517505484 seconds)
    (591/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.600336679 seconds)
    (592/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.487998025 seconds)
    (593/608) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 1.639260543 seconds)
    (594/608) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.20431233 seconds)
    (595/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.679997076 seconds)
    (596/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.321580996 seconds)
    (597/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.445849769 seconds)
    (598/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.947819755 seconds)
    (599/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.733571639 seconds)
    (600/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 5.301636993 seconds)
    (601/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.717962509 seconds)
    (602/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.790722607 seconds)
    (603/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.395978225 seconds)
    (604/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.739099677 seconds)
    (605/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.413158471 seconds)
    (606/608) benchmarking ("mapr_access", "Matrix{Float64}")...
    done (took 2.927844459 seconds)
    (607/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.320802492 seconds)
    (608/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.643140934 seconds)
  done (took 2000.303162086 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.232778855 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 6.347282166 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.355903232 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.316553794 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.249772385 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.3128055 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.291083112 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.264446954 seconds)
  done (took 51.52775692 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hcat", 500)...
    done (took 6.215513083 seconds)
    (2/17) benchmarking "4467"...
    done (took 6.26944869 seconds)
    (3/17) benchmarking ("vcat_setind", 5)...
    done (took 5.711412266 seconds)
    (4/17) benchmarking ("catnd_setind", 500)...
    done (took 6.458553698 seconds)
    (5/17) benchmarking ("vcat", 500)...
    done (took 6.122537193 seconds)
    (6/17) benchmarking ("vcat", 5)...
    done (took 5.384326569 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.283615002 seconds)
    (8/17) benchmarking ("hvcat_setind", 5)...
    done (took 5.729882191 seconds)
    (9/17) benchmarking ("vcat_setind", 500)...
    done (took 6.418305011 seconds)
    (10/17) benchmarking ("hvcat", 5)...
    done (took 5.30198005 seconds)
    (11/17) benchmarking ("hcat_setind", 500)...
    done (took 6.327298476 seconds)
    (12/17) benchmarking ("hcat", 5)...
    done (took 6.389833546 seconds)
    (13/17) benchmarking ("hvcat", 500)...
    done (took 6.28911113 seconds)
    (14/17) benchmarking ("catnd", 500)...
    done (took 6.314635243 seconds)
    (15/17) benchmarking ("hcat_setind", 5)...
    done (took 6.268985948 seconds)
    (16/17) benchmarking ("catnd", 5)...
    done (took 1.391486233 seconds)
    (17/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.284795198 seconds)
  done (took 95.449877062 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.36136067 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.434752879 seconds)
    (3/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.316426334 seconds)
    (4/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 10.424094093 seconds)
    (5/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.326587464 seconds)
    (6/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.755714076 seconds)
    (7/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.293943125 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.281087815 seconds)
    (9/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.699046579 seconds)
    (10/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.994811127 seconds)
    (11/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.312326627 seconds)
    (12/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.370067712 seconds)
  done (took 83.896581464 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 4)...
    done (took 1.256534829 seconds)
    (2/5) benchmarking ("setindex!", 3)...
    done (took 1.266254662 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.249330767 seconds)
    (4/5) benchmarking ("setindex!", 1)...
    done (took 1.162207965 seconds)
    (5/5) benchmarking ("setindex!", 2)...
    done (took 1.128774701 seconds)
  done (took 7.285466096 seconds)
done (took 2484.2389628 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 1.322394191 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 1.730333061 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 1.818356482 seconds)
  done (took 4.695685802 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 1.349584715 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.412761494 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.490352846 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 1.377021808 seconds)
  done (took 6.883253707 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 1.562571891 seconds)
    (2/2) benchmarking "Float64"...
    done (took 1.745937978 seconds)
  done (took 4.574185087 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 1.775859398 seconds)
  (6/15) benchmarking "18129"...
  done (took 6.294488637 seconds)
  (7/15) benchmarking "20517"...
  done (took 1.797010467 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.247343314 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.26024801 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.249979948 seconds)
  done (took 20.015405903 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.160000615 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.171859418 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.163089484 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.150533457 seconds)
  done (took 5.781485543 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.13886271 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.195984607 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.128699996 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.302011976 seconds)
  done (took 18.870650042 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 1.566296615 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 1.317631881 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 1.970229944 seconds)
  done (took 6.076561072 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.028630269 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.350097504 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.022052383 seconds)
  done (took 6.601041319 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.16672355 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.250581684 seconds)
  done (took 5.628637296 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.401234602 seconds)
  done (took 2.622876798 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.715198907 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.717169289 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 1.883628253 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 1.952682944 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.060648404 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 1.436865842 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 1.561825679 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 1.468200391 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 1.686543032 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 1.687434376 seconds)
  done (took 18.391728668 seconds)
done (took 112.420310277 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.059809488 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.620396273 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.385275768 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.315152124 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.371809444 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.452399412 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.287126542 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.079953545 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.829405202 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.864650908 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.927265655 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.325413423 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.282871861 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.612573673 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.271885805 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.609926399 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.6279011 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.146007558 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.136889304 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 3.59368852 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.284827591 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.852902818 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.692261773 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.842338706 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.679419364 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.399115163 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.095245971 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.60790146 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.386820807 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.048864045 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.261428931 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 3.893919392 seconds)
  done (took 156.080155246 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.250638027 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.255281969 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.16605881 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.098357672 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.255953009 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.103138299 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.101049056 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.138205504 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.104448687 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.091930835 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.201647031 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.364296257 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.186711027 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.179558182 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.183691674 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.167377496 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.321428564 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.197814552 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.182063928 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.185334954 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.186174273 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.110473778 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.18912303 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.153896762 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.2304303 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.103853652 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.097941143 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.104449105 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.103885142 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.103133523 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.103659275 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.139930964 seconds)
  done (took 190.604018341 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.135570797 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.197840347 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.229022064 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.25100878 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.250176588 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.251147283 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.227057654 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.253087084 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.265595299 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.26055273 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.274623468 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.278080966 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.257431954 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.26421701 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.271092544 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.263685902 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.243597692 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.219438262 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.188805981 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.122311492 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.243591402 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.260026173 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.247388728 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.237565814 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.25437846 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.129226257 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.128126772 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.19394931 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.231073577 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.235941415 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.249682224 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.264568694 seconds)
  done (took 200.529529949 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.550672204 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.274916353 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.157202346 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 1.99447506 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.135789669 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.2747471 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.015467724 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.551603233 seconds)
  done (took 15.211811091 seconds)
done (took 563.667816081 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.941177722 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.182854859 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.421438809 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.521813971 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.883696373 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.593664348 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.544853268 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.725690223 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.010497947 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.705374985 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 1.772090696 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.505247754 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.171002747 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.550909471 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.46754144 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.756196999 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 1.67281202 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 1.96979683 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.481204236 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.157076413 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.47340827 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.169237048 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.733308545 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.047294533 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 1.763758931 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.236528993 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.438922595 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 1.664351746 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.531082203 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.502150663 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.358815956 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.751732829 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.491192216 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.479564783 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.762041067 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.736703651 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.67156295 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.671219177 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.42001178 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 1.932298999 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.097860969 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 1.861418264 seconds)
  done (took 82.085571526 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.23437077 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.263575308 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.412127151 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.307253101 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.887523267 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.276539292 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.431888042 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.340934632 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.301183245 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.410403013 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.390202367 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.816836474 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.529234945 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.940800708 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.511221206 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.524602275 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.390097407 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.912949931 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.523898717 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.506149273 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.323665716 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.453773528 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.323543394 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.506536446 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.279272871 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.335410177 seconds)
  done (took 39.36599186 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.340422472 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.467281256 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.533388729 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 3.344614645 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.518180308 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.276459637 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.634006461 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.428548971 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 3.131838518 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.494479829 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.251096376 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.289314863 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.357807012 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.427765307 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 4.419396479 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.337719648 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.395824186 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.388627156 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.368686637 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 3.320571569 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.30122877 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.286371735 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.556296429 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 3.269421373 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.788064181 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 4.706319317 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.386618413 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.714368273 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 4.213279735 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.447767998 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.344806196 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.534159247 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.580112907 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.447004525 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.341695703 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.223944321 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.183853549 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.235099777 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.079257066 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.334974663 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.508796912 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 4.572875991 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.490944364 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.775702193 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 4.516583806 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.425942187 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.718648149 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.373561355 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.407948298 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 3.095924358 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.589561959 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 4.058970869 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.399032698 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.566110421 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.434231737 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.637550903 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.481059222 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.583872706 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.406701411 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 3.05614989 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.383992454 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.696255299 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.498970867 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 4.601825723 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.542630477 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.491643695 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 3.362169727 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 4.89654525 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.561521095 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 4.316900092 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.957906224 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.365902901 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.32527673 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.368711054 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.470435045 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.766901384 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 4.263400409 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.520256546 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.684672239 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.630201963 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.508046049 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.872214306 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.295863391 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.854839415 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.31914915 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.301512981 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.386154956 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.648373088 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.603943142 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.741329657 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.80686869 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.560979119 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.850950382 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 3.421380703 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 4.883289329 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.52517436 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.19225469 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.155846687 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.343235262 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.720321746 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.384179848 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 3.384205996 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.892820143 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 4.596493792 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.731913839 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.423671985 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.617478161 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 4.561388396 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.636526054 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.18535448 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 3.225215536 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 3.252453671 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.439411688 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.43941769 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.142641579 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.719267172 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.330252586 seconds)
  done (took 248.726788575 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.197470928 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.14588646 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.185824193 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.257264789 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.242486118 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.793499417 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.3043445 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.231962688 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.811205928 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.317112482 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.271758521 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.292096483 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.305832682 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.311136497 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 3.426396742 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 3.495525768 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.012581987 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.283882303 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.298545956 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.290783559 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.024410075 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.32006301 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.288597873 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.290670732 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.313355477 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.244853857 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.271704762 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.303450727 seconds)
  done (took 155.728903114 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.332493579 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.704758639 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.361682684 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.43096826 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.395721573 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.382096801 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.879592055 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.50728399 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.43229095 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.356070155 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.384862849 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.592996376 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.689731689 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.955679214 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.496194168 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.583966113 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.002226382 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.496672902 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.361228022 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.355225457 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.49232626 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.677516287 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.585386246 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.583867239 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.477042462 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.619031744 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.421614183 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.343994018 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.44323804 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.828799872 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.332075667 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.666655381 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.435006542 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.293966177 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.798576975 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.638686026 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.877112548 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.947350908 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.495936855 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.260523429 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.212024094 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.410268596 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.558868648 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.307478876 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.153014925 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.875420204 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.343459022 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.581342815 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.332915097 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.299411955 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.451993867 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.440542425 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.592518652 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 3.292588167 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.495988746 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.499887483 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.938956492 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 6.310312457 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.41603585 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.677031625 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.316505399 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.832989739 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.790513434 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.410137698 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.352423419 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.188117658 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.446497005 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.839018279 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.797459388 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.207721242 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.495635158 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.362986244 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.132602201 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.417857537 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.335186605 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.597032992 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.744950209 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.340572046 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.293782496 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.271020246 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.455429411 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.174722687 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.746100972 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.313471411 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.215358936 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.741107427 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.657976359 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.239892505 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.289431497 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.389597152 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.456408684 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.497424804 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.565252083 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.372622586 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.229054125 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.582932186 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.597249398 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.347014637 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.476767949 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.31430516 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.739859232 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.525374982 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.327753394 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.628031861 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.734284006 seconds)
  done (took 170.183269063 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.083671704 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.367713505 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.534951952 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.874393827 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.674548949 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.741751948 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.532309904 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.387067811 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.570471116 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 1.533451703 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.524760542 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.401274034 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 3.282681637 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.067764999 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.380559337 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.489165045 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.389316903 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 1.921982889 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.606039958 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.311996066 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.648803978 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.035210667 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.620030266 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 1.696182307 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.757652555 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.80075453 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 1.987369624 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.412965672 seconds)
  done (took 52.917005421 seconds)
done (took 750.261149166 seconds)
SAVING RESULT...
DONE!
