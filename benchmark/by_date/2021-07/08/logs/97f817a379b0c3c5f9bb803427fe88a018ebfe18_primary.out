cset: moving following pidspec: 778191
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.33870343 seconds)
loading group "shootout"... done (took 0.841036836 seconds)
loading group "string"... done (took 0.224161201 seconds)
loading group "linalg"... done (took 3.292085451 seconds)
loading group "parallel"... done (took 0.021849805 seconds)
loading group "find"... done (took 1.220746617 seconds)
loading group "tuple"... done (took 0.729443102 seconds)
loading group "union"... done (took 3.251072959 seconds)
loading group "dates"... done (took 0.158583085 seconds)
loading group "micro"... done (took 0.058420885 seconds)
loading group "simd"... done (took 0.37224068 seconds)
loading group "io"... done (took 1.44549366 seconds)
loading group "random"... done (took 2.355675553 seconds)
loading group "problem"... done (took 1.163462293 seconds)
loading group "array"... done (took 4.522992792 seconds)
loading group "misc"... done (took 1.125495271 seconds)
loading group "scalar"... done (took 3.53346121 seconds)
loading group "sort"... done (took 0.311576199 seconds)
loading group "sparse"... done (took 3.591053756 seconds)
loading group "collection"... done (took 6.10285903 seconds)
FILTERING SUITE...
SETTING UP FOR RUN...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.544486463 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.075206051 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.253252344 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.072997118 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.279478423 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.084790768 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.087512827 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.075404169 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.170965788 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.16301907 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.213670188 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.389306925 seconds)
done (took 5.131281229 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 0.315907529 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.033807127 seconds)
    (2/2) benchmarking "String"...
    done (took 0.125421578 seconds)
  done (took 0.746311615 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.139210021 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.015987717 seconds)
    (3/3) benchmarking "different"...
    done (took 0.023076551 seconds)
  done (took 0.763662329 seconds)
  (4/7) benchmarking "replace"...
  done (took 0.020766257 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.099718482 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.021730429 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.022373811 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.022350872 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.021832773 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.021631898 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.021625844 seconds)
  done (took 0.814591155 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.029653855 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.023207029 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.021225711 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.022627844 seconds)
  done (took 0.679115302 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.02311477 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.094444483 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.027584381 seconds)
    (4/4) benchmarking "different"...
    done (took 0.027450517 seconds)
  done (took 0.751083518 seconds)
done (took 4.686961246 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.198440593 seconds)
    (2/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.781388167 seconds)
    (3/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.9804205 seconds)
    (4/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.180176856 seconds)
    (5/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.357035106 seconds)
    (6/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.296179345 seconds)
    (7/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.07666322 seconds)
    (8/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.242964198 seconds)
    (9/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.150170367 seconds)
    (10/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.032884128 seconds)
    (11/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.184067014 seconds)
    (12/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.039771785 seconds)
    (13/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.505561654 seconds)
    (14/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.476257635 seconds)
    (15/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.028114714 seconds)
    (16/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.143263983 seconds)
    (17/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.580711019 seconds)
    (18/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.038794926 seconds)
    (19/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.070584606 seconds)
    (20/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.222336051 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.038778487 seconds)
    (22/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.03920125 seconds)
    (23/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.043706833 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.027866151 seconds)
    (25/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.142165558 seconds)
    (26/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.13981278 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.588184434 seconds)
    (28/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.067470228 seconds)
    (29/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.026101827 seconds)
    (30/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.048536793 seconds)
    (31/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.029070014 seconds)
    (32/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.032926007 seconds)
  done (took 9.430718247 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.155203056 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.146108056 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.024013362 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.059701033 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.051035729 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.025243285 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.030509135 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.023230983 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.043277003 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.088787231 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.046335039 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.157548466 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.021327477 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.024790284 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.138076356 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.115821844 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.038080779 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.037425306 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.022712049 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.03660141 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.049221126 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.035033923 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.033102402 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.032588349 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.068085165 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.089471667 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.041701346 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.064220092 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.023719634 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.034868371 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.054702165 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.063626054 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.022989883 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.021744824 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.065202623 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.040261332 seconds)
  done (took 2.678405258 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.721054326 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.051528956 seconds)
    (2/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.143612284 seconds)
    (3/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.130257296 seconds)
    (4/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.068190482 seconds)
    (5/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.050813747 seconds)
    (6/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.182041323 seconds)
    (7/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.079089999 seconds)
    (8/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.055673121 seconds)
    (9/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.024288192 seconds)
    (10/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.208128336 seconds)
    (11/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.652206163 seconds)
    (12/118) benchmarking ("cumsum!", "Int32", 256)...
    done (took 0.169276491 seconds)
    (13/118) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 2.067513101 seconds)
    (14/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.028590148 seconds)
    (15/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.181223977 seconds)
    (16/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.90981458 seconds)
    (17/118) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 0.936620823 seconds)
    (18/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.023763953 seconds)
    (19/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.024190635 seconds)
    (20/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.134132938 seconds)
    (21/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.026524311 seconds)
    (22/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.173732641 seconds)
    (23/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.02186767 seconds)
    (24/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.135766076 seconds)
    (25/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.709914234 seconds)
    (26/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.145194508 seconds)
    (27/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.02521279 seconds)
    (28/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.054141177 seconds)
    (29/118) benchmarking ("cumsum!", "Float32", 1024)...
    done (took 0.143171138 seconds)
    (30/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.021223168 seconds)
    (31/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.097002568 seconds)
    (32/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.047211256 seconds)
    (33/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.025467403 seconds)
    (34/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.554733136 seconds)
    (35/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.022113055 seconds)
    (36/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.020101447 seconds)
    (37/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.041989246 seconds)
    (38/118) benchmarking ("3-arg mul!", 2)...
    done (took 0.051524281 seconds)
    (39/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.022423016 seconds)
    (40/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.023403658 seconds)
    (41/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.031273208 seconds)
    (42/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.021523097 seconds)
    (43/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.071632162 seconds)
    (44/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.032921891 seconds)
    (45/118) benchmarking ("5-arg mul!", 3)...
    done (took 0.51206187 seconds)
    (46/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.025270001 seconds)
    (47/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.70191615 seconds)
    (48/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 4.826597595 seconds)
    (49/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.029728315 seconds)
    (50/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.026724309 seconds)
    (51/118) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.058882721 seconds)
    (52/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.020027481 seconds)
    (53/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.023535262 seconds)
    (54/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.524831231 seconds)
    (55/118) benchmarking ("5-arg mul!", 2)...
    done (took 0.098448066 seconds)
    (56/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.023001396 seconds)
    (57/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.290896212 seconds)
    (58/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.025807929 seconds)
    (59/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.024362703 seconds)
    (60/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.024633768 seconds)
    (61/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.055185531 seconds)
    (62/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.023266748 seconds)
    (63/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.024590181 seconds)
    (64/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.026349246 seconds)
    (65/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.040915744 seconds)
    (66/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 0.972126672 seconds)
    (67/118) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.033699545 seconds)
    (68/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.043151334 seconds)
    (69/118) benchmarking ("cumsum!", "Float32", 256)...
    done (took 0.021898266 seconds)
    (70/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.022987298 seconds)
    (71/118) benchmarking ("cumsum!", "Int32", 1024)...
    done (took 0.022540508 seconds)
    (72/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.400881733 seconds)
    (73/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.030045161 seconds)
    (74/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.025601625 seconds)
    (75/118) benchmarking ("cumsum!", "Float64", 1024)...
    done (took 0.020970602 seconds)
    (76/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.026843958 seconds)
    (77/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.023044951 seconds)
    (78/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.02261061 seconds)
    (79/118) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.063234959 seconds)
    (80/118) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.048902555 seconds)
    (81/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.046400588 seconds)
    (82/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.026517431 seconds)
    (83/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.023458053 seconds)
    (84/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.022617988 seconds)
    (85/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.513575573 seconds)
    (86/118) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 0.950231924 seconds)
    (87/118) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.025773679 seconds)
    (88/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.024895854 seconds)
    (89/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.510715707 seconds)
    (90/118) benchmarking ("3-arg mul!", 3)...
    done (took 0.020944634 seconds)
    (91/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.023127851 seconds)
    (92/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.024672949 seconds)
    (93/118) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 0.045298738 seconds)
    (94/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.023516103 seconds)
    (95/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.020515788 seconds)
    (96/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.059142487 seconds)
    (97/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.025314639 seconds)
    (98/118) benchmarking ("cumsum!", "Int64", 256)...
    done (took 0.131794329 seconds)
    (99/118) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.332630202 seconds)
    (100/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.024978552 seconds)
    (101/118) benchmarking ("cumsum!", "Float64", 256)...
    done (took 0.020802023 seconds)
    (102/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.381000853 seconds)
    (103/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.024914373 seconds)
    (104/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.060391835 seconds)
    (105/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.080143992 seconds)
    (106/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.023226945 seconds)
    (107/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.069333282 seconds)
    (108/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.023920486 seconds)
    (109/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.020800958 seconds)
    (110/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.026959857 seconds)
    (111/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.020571346 seconds)
    (112/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.024859725 seconds)
    (113/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.02178978 seconds)
    (114/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.022592569 seconds)
    (115/118) benchmarking ("cumsum!", "Int64", 1024)...
    done (took 0.02164152 seconds)
    (116/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.023605802 seconds)
    (117/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.02458848 seconds)
    (118/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.023557632 seconds)
  done (took 23.405345069 seconds)
done (took 37.818343231 seconds)
(4/20) benchmarking "parallel"...
done (took 0.806728484 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 0.215363846 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.050509464 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 0.020076991 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.162744081 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 0.045980035 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 0.135499464 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 0.176360965 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 0.12790213 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 0.046813293 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 0.046614936 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 0.046570988 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 0.180780066 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 0.190299408 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 0.04798218 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.116808831 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 0.191227055 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 0.047947643 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 0.020173561 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 0.046778705 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 0.047653933 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 0.047680545 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.020429315 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 0.048405677 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 0.048776525 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.11764702 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 0.047351266 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 0.019949495 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.119397329 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 0.048813772 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.119162377 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 0.049811752 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 0.049343485 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 0.049989099 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.119908217 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 0.050557983 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.119746448 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.020354497 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 0.050408637 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 0.050790588 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 0.051677793 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 0.050736056 seconds)
  done (took 3.966143464 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.04715807 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.038842209 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.041090441 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.018429136 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.028506227 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.039006583 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.01847996 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.038524052 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.044398012 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.039066646 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.039034742 seconds)
  done (took 1.127362613 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.042137826 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.039711924 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.04104599 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.018421916 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.030306064 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.039554501 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.018458192 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.039267865 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.042042952 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.039613996 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.039681279 seconds)
  done (took 1.067608505 seconds)
done (took 6.817392605 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 0.152400923 seconds)
    (2/2) benchmarking "11899"...
    done (took 0.122776579 seconds)
  done (took 0.941953372 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", "(8, 8)", "(8, 8)")...
    done (took 0.589997108 seconds)
    (2/8) benchmarking ("matvec", "(2, 2)", "(2,)")...
    done (took 0.206219399 seconds)
    (3/8) benchmarking ("matvec", "(4, 4)", "(4,)")...
    done (took 0.129871602 seconds)
    (4/8) benchmarking ("matvec", "(16, 16)", "(16,)")...
    done (took 0.25474844 seconds)
    (5/8) benchmarking ("matmat", "(2, 2)", "(2, 2)")...
    done (took 0.123765109 seconds)
    (6/8) benchmarking ("matvec", "(8, 8)", "(8,)")...
    done (took 0.156711699 seconds)
    (7/8) benchmarking ("matmat", "(16, 16)", "(16, 16)")...
    done (took 4.80264946 seconds)
    (8/8) benchmarking ("matmat", "(4, 4)", "(4, 4)")...
    done (took 0.159794066 seconds)
  done (took 7.150899154 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, "Float64")...
    done (took 0.076147436 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float32")...
    done (took 0.142712281 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float64")...
    done (took 0.024827913 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, "Float64")...
    done (took 0.023143294 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, "Float64")...
    done (took 0.023488045 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float64")...
    done (took 0.023416421 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, "Float32")...
    done (took 0.024995147 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float64")...
    done (took 0.023785518 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, "Float32")...
    done (took 0.022928364 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float64")...
    done (took 0.025464444 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, "Float64")...
    done (took 0.025046894 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float32")...
    done (took 0.023166999 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, "Float32")...
    done (took 0.024005033 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float32")...
    done (took 0.025107788 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, "Float32")...
    done (took 0.023317257 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float32")...
    done (took 0.023434119 seconds)
  done (took 1.367136814 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sum", "(2, 2)")...
    done (took 0.02899851 seconds)
    (2/24) benchmarking ("sumabs", "(8, 8)")...
    done (took 0.026081999 seconds)
    (3/24) benchmarking ("minimum", "(2, 2)")...
    done (took 0.027329069 seconds)
    (4/24) benchmarking ("sumabs", "(2,)")...
    done (took 0.017519748 seconds)
    (5/24) benchmarking ("sum", "(4, 4)")...
    done (took 0.027635276 seconds)
    (6/24) benchmarking ("sum", "(2,)")...
    done (took 0.026288621 seconds)
    (7/24) benchmarking ("sum", "(8, 8)")...
    done (took 0.027380521 seconds)
    (8/24) benchmarking ("minimum", "(16, 16)")...
    done (took 0.028693725 seconds)
    (9/24) benchmarking ("sum", "(8,)")...
    done (took 0.026862682 seconds)
    (10/24) benchmarking ("sumabs", "(4, 4)")...
    done (took 0.027058678 seconds)
    (11/24) benchmarking ("sumabs", "(2, 2)")...
    done (took 0.025034371 seconds)
    (12/24) benchmarking ("minimum", "(4, 4)")...
    done (took 0.028234774 seconds)
    (13/24) benchmarking ("sumabs", "(16,)")...
    done (took 0.026780355 seconds)
    (14/24) benchmarking ("sumabs", "(8,)")...
    done (took 0.025431506 seconds)
    (15/24) benchmarking ("minimum", "(16,)")...
    done (took 0.0281308 seconds)
    (16/24) benchmarking ("minimum", "(2,)")...
    done (took 0.017503481 seconds)
    (17/24) benchmarking ("minimum", "(8, 8)")...
    done (took 0.028311762 seconds)
    (18/24) benchmarking ("minimum", "(4,)")...
    done (took 0.027514951 seconds)
    (19/24) benchmarking ("minimum", "(8,)")...
    done (took 0.02942703 seconds)
    (20/24) benchmarking ("sum", "(16,)")...
    done (took 0.027672627 seconds)
    (21/24) benchmarking ("sum", "(4,)")...
    done (took 0.026749301 seconds)
    (22/24) benchmarking ("sumabs", "(4,)")...
    done (took 0.024947698 seconds)
    (23/24) benchmarking ("sum", "(16, 16)")...
    done (took 0.028541791 seconds)
    (24/24) benchmarking ("sumabs", "(16, 16)")...
    done (took 0.026287909 seconds)
  done (took 1.327578254 seconds)
done (took 11.464905292 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.143869834 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.030155749 seconds)
  done (took 0.852927608 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.128290813 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.127377345 seconds)
  done (took 0.943739492 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.029330052 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.016367221 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.033079946 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.024899595 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.016647186 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.016335319 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.031872701 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.016574769 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.016365427 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.016540878 seconds)
  done (took 0.909059878 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.019894074 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.023477575 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.021449066 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.019706092 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.02132958 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.01742479 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.019828847 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.017660332 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.02318982 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.016714101 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.020460279 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.038635772 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.019940422 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.039112775 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.019933969 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.020458828 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.021911851 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.019652604 seconds)
  done (took 1.091768577 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.018224992 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.017227892 seconds)
  done (took 0.727035418 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.020957613 seconds)
    (2/7) benchmarking "second"...
    done (took 0.017383553 seconds)
    (3/7) benchmarking "month"...
    done (took 0.019026187 seconds)
    (4/7) benchmarking "year"...
    done (took 0.018964647 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.017010137 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.016416606 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.017011629 seconds)
  done (took 0.817653332 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.395477158 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.091040645 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.324341772 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.02523361 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.038466839 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.237463241 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.020149348 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.024340396 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.024178921 seconds)
  done (took 1.868792844 seconds)
done (took 7.90714625 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.045382721 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.144920594 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.149924868 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.450373685 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.034671339 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.022848564 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.057381209 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.229266899 seconds)
done (took 1.835966508 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.519222074 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.286253643 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.191163295 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.023943503 seconds)
  done (took 2.198496924 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.313971842 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.141878705 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.031168795 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.023282624 seconds)
  done (took 1.218587794 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.022338129 seconds)
    (2/2) benchmarking "read"...
    done (took 0.027744721 seconds)
  done (took 0.753255168 seconds)
done (took 5.396206312 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.030532664 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.017082126 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.023554767 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.018755098 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.018333193 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.017848429 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", "Float64")...
    done (took 0.017867505 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.018829534 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.016757018 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.018796731 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.018732891 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.018746269 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.018434805 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.018435026 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", "Float64")...
    done (took 0.018005869 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.01877735 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", "Float32")...
    done (took 0.016855004 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.01849515 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.01848939 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.018491142 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", "Float32")...
    done (took 0.016800459 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.018762448 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.017964493 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.018446011 seconds)
  done (took 1.143471174 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.038427056 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.022774682 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.022708488 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.022670374 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.023833708 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.022688957 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.022690555 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.022636504 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.022959027 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.021599282 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.023843251 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.023891881 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.021553271 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.023994676 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.021668884 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.024010043 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.022853363 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.022658575 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.02163498 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.024072691 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.022781797 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.022755584 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.023962893 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.022833109 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.023889564 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.023865383 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.021739015 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.022791335 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.022870383 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.023880367 seconds)
  done (took 1.408224317 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.023615313 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.015417355 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.01574244 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.02588202 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.015368214 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.015520552 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.016010734 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.015180822 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.015621023 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.016403739 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.015922566 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.015255232 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.016206985 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.01532295 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.01539923 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.015933739 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.020682791 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.036735121 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.015610605 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.015381259 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.020131661 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.015636069 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.01535531 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.015397246 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.015827201 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.015388356 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.015138421 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.015691553 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.015386298 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.01592628 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.015386816 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.020139985 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.021731556 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.015833478 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.025896642 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.020634044 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.01586524 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.019964379 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.016257166 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.015204229 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.015212076 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.015247591 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.015364496 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.015330497 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.026029127 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.015588436 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.016531075 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.015862858 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.015587038 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.015299684 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.015457453 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.01696111 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.021259682 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.016579335 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.01526911 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.016557014 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.015257416 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.015985146 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.015404669 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.01526531 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.015226879 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.019412473 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.016737713 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.01602374 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.037316733 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.016707773 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.026067411 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.015403652 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.015823696 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.019605502 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.015917327 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.035576961 seconds)
  done (took 1.989675663 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.028133082 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.025976166 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.035024963 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.025512312 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.019025985 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.016266365 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.019470162 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.01629898 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.025764924 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.019849845 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.016335891 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.019386581 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.025706449 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.019850395 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.017318607 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.025632677 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.01981388 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.019093931 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.016333829 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.019777083 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.017381052 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.019455245 seconds)
  done (took 1.178211005 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.108026264 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.023026534 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.069666538 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.022803499 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.021410762 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.022579561 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.023018499 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.022928147 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.02315219 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.024199702 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.024201644 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.023163263 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.021391522 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.024129119 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.024251123 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.024012266 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.023226948 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.024088096 seconds)
  done (took 1.254473928 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.03487678 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.021494841 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.049311138 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.021326001 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.021470106 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.021019786 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.025362714 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.025094341 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.021031387 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.021512626 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.025005642 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.021130033 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.021127703 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.021603694 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.021151371 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.021500898 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.021109018 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.021586917 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.025030793 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.025624211 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.025556344 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.025067163 seconds)
  done (took 1.244727492 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.03731401 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.021402735 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.040481236 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.023700744 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.015817507 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.015769289 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.023609289 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.02228681 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.023661223 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.021386928 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.022572618 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.01598369 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.024714952 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.022592228 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.024808359 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.022539067 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.021470539 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.022558744 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.021408692 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.015909762 seconds)
  done (took 1.165961308 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.131239658 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.018126338 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.017922058 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.022376074 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.017824834 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.017820426 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.022505863 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.017791724 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.017895236 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.042376408 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.017876626 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.017805714 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.022423711 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.020680088 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.017855721 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.022462546 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.022356433 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.022417446 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.017861475 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.017841453 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.042431699 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.018472097 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.022376153 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.017803699 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.017750202 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.01780361 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.01777518 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.020686448 seconds)
  done (took 1.411863052 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.039896121 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.015197161 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.015382411 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.019374501 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.019411637 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.025341353 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.019378734 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.019310254 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.015308513 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.015483562 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.017392601 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.015098408 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.015099642 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.024765554 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.01507701 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.017366942 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.024801473 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.019415529 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.025529507 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.027494461 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.017444649 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.024666421 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.017445511 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.015439356 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.025473148 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.017423023 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.019428773 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.020243566 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.017374278 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.015476733 seconds)
  done (took 1.306791865 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.030192744 seconds)
    (2/2) benchmarking "in"...
    done (took 0.026889522 seconds)
  done (took 0.764952883 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.018849233 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.033659219 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.01519241 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.028799013 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.024842734 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.019596728 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.024263111 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.02473962 seconds)
  done (took 0.891759751 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.126265948 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.15312306 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.01756608 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.017748829 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.1237661 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.084926223 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.134740148 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.028903274 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.03086464 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.020076276 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.017298797 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.134797327 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.016780828 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.030502787 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.018367952 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.026579781 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.024082146 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.034827613 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.030293159 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.015819422 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.029449832 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.017525753 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.01674339 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.017553035 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.017976506 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.023751452 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.032813457 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.029291805 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.025224266 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.015158427 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.035633885 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.016062913 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.016669792 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.025112923 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.12439809 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.016161107 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.054112199 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.016217167 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.020413639 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.015810578 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.028038422 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.036892635 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.030462159 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.034099712 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.017319778 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.017843356 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.015848965 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.017522063 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.020040632 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.025133635 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.016059743 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.023373966 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.015749118 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.017395734 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.026614809 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.016179919 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.02064704 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.025295492 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.029594727 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.026485005 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.028442848 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.031533953 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.024864873 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.024476372 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.016793324 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.036091144 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.017629678 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.029445824 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.030993307 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.017186874 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.029011161 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.015926237 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.015251512 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.016113088 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.050312004 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.01745922 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.016915479 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.0161507 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.016287711 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.017479844 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.025585802 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.020767639 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.023451509 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.019149425 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.032077923 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.025243618 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.015952088 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.023242648 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.03452867 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.020149688 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.016165438 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.033253797 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.020099027 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.015939045 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.034346286 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.026584374 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.017619633 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.016784858 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.01998753 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.029773268 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.017986091 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.015554854 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.024985184 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.018059026 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.127561109 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.02128579 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.02468783 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.01627689 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.026760907 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.022807315 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.017938777 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.015533055 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.021266252 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.017304651 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.015543431 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.025954207 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.01651839 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.031569643 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.023448167 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.03117052 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.031618536 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.027159523 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.032639337 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.016300284 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.015577914 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.035162721 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.025960666 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.017808068 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.034980575 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.016386752 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.027062041 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.016517634 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.017936669 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.025805012 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.01582604 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.018177776 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.016639619 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.02292417 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.018142771 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.018364461 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.022621961 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.025178743 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.029120581 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.017720383 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.025497347 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.016918594 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.032818997 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.026364483 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.021582283 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.020017184 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.017428418 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.028953211 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.023644709 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.025837199 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.016583696 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.017422367 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.01665306 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.027795762 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.026231963 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.018397805 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.026106244 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.021586669 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.017455851 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.016665556 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.017670004 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.020573472 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.020094128 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.01728214 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.024512295 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.025474194 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.031409371 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.024432885 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.025828493 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.016087497 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.016537574 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.018588779 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.016522956 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.021525457 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.025951772 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.032438773 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.028692083 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.038530645 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.016893327 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.026406139 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.018433134 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.034035871 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.030290224 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.018777861 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.022468642 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.016134831 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.018724783 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.026207128 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.028361085 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.031378004 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.032004738 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.021768433 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.021594169 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.016670486 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.032141037 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.017225547 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.025243474 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.026090837 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.023197847 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.016590826 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.018589136 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.025949007 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.021670258 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.017925374 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.032763996 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.024678349 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.016674678 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.031435557 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.017055416 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.027646415 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.016714851 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.02062609 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.022258678 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.01882488 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.026486113 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.032314098 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.015888103 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.017117894 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.032640691 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.018685603 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.018578504 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.024816629 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.032210338 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.021741284 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.024604086 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.027450786 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.027417136 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.021567691 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.02707639 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.017812703 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.02604759 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.020279687 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.028814492 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.016830899 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.035610991 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.015960655 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.032240681 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.017508533 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.028107577 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.017188154 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.026186713 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.0176634 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.034471591 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.018444304 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.017689225 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.028836555 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.015893662 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.025931018 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.01663716 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.021991949 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.023774961 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.026086322 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.018692314 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.026197475 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.018555044 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.025728781 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.17457067 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.024967519 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.025139503 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.021042899 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.015817309 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.02429159 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.026585425 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.024047401 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.01724321 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.017262991 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.016264778 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.025117579 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.017268452 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.01676159 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.024054563 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.021040533 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.022133025 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.017176254 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.017303371 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.017113333 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.024240393 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.025129944 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.033874204 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.024336618 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.023289541 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.024960789 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.015707612 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.031259949 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.015728431 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.023233878 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.01511152 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.021916797 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.024859471 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.015978001 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.03465941 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.017089108 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.0234764 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.027438208 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.024181916 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.019897923 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.033594092 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.018542794 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.024103115 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.023568396 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.02068569 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.022746575 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.017093963 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.024062417 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.025065314 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.026104192 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.016333442 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.023152683 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.024569423 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.017158298 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.023379472 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.016969319 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.024022741 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.017236583 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.015119199 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.02074877 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.026718261 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.020909109 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.021080567 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.01592064 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.01490164 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.015857857 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.02216791 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.020666311 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.024135274 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.030969366 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.014971964 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.016403348 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.015534228 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.01974828 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.033461584 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.025044777 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.023509921 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.020726178 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.01506218 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.016812609 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.016968891 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.015703598 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.018471236 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.015191835 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.015591517 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.026109749 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.017191733 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.020531188 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.015929837 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.016767551 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.025597999 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.019848039 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.016174796 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.02292277 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.015626073 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.021322869 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.015317179 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.017209129 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.020826212 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.015624069 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.019938296 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.0260744 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.032346242 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.02288975 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.024697379 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.016824473 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.023813005 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.031332572 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.023860108 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.016874875 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.025335274 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.015627628 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.034920739 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.025370643 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.024560143 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.025711292 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.016882804 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.033066879 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.020989193 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.025950379 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.03154382 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.016950413 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.02370588 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.015919792 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.031751958 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.02100598 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.015911507 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.024667917 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.023839061 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.022372153 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.027695176 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.016842934 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.024594011 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.020801015 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.020315021 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.017826858 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.018164271 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.025225114 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.032877816 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.017334141 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.022329918 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.024461125 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.024836018 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.021386368 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.029313243 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.025985988 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.0178449 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.018394772 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.020589954 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.017316371 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.028807278 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.016867942 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.021338066 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.021361017 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.016344437 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.02360372 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.033171987 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.025809607 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.025951119 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.016390083 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.015788193 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.034786464 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.02046435 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.019839635 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.024485854 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.026258338 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.028788885 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.025714371 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.033587252 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.016856176 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.022658271 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.028798488 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.017339198 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.016251156 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.020406461 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.017988687 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.025490612 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.026136224 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.0237547 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.018291786 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.023612511 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.030047623 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.017821193 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.021382548 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.022734236 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.017436662 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.027064159 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.02451885 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.025128299 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.018077895 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.016453646 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.020230416 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.025263608 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.023956746 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.02544862 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.017579457 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.025292318 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.030940467 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.024035349 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.020033817 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.016464498 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.019893521 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.025516797 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.02301298 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.016395998 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.02160093 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.020423325 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.025438315 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.025974244 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.021426468 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.016400817 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.033882899 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.02518932 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.02551931 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.018282383 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.018483335 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.016829545 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.016524088 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.027736619 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.01644783 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.018190592 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.021761547 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.018358623 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.034761127 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.024612349 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.032755883 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.017505441 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.021375966 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.016511585 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.026145927 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.021580138 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.016588672 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.027067902 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.016010409 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.032387927 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.028713027 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.024166062 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.016497299 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.022039499 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.02543173 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.032023888 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.026306114 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.025551576 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.020250665 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.026357779 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.018503103 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.027920717 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.016685446 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.015817185 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.026901125 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.0252321 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.029306986 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.016749839 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.026954941 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.018727763 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.024906783 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.02546634 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.01848779 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.018569873 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.018475844 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.026290076 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.021719279 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.026045799 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.021863128 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.03419077 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.017711864 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.028013936 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.025574283 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.027841554 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.030621738 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.029413247 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.02550727 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.017137632 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.024116765 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.025432232 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.017867206 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.021885844 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.020249378 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.039787546 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.018515174 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.018470568 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.031923906 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.025598348 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.016821122 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.025159526 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.021931205 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.026886965 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.017726075 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.027106368 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.022745729 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.017860576 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.02171094 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.021756591 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.015792119 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.016601855 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.016939216 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.026571853 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.021794734 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.016829467 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.19028018 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.01729433 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.024575633 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.026514452 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.022975146 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.017111965 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.015199865 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.016575395 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.02941071 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.031375871 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.020210716 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.024417112 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.017310322 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.024932927 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.015200274 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.024466724 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.023719982 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.024268434 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.015693608 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.015926751 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.030839927 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.031296618 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.021004225 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.032951578 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.024731359 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.017107836 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.037511887 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.024712702 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.016597864 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.026448674 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.017517202 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.015356554 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.015180112 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.01714315 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.027085463 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.015679977 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.017606843 seconds)
  done (took 15.345047394 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.062417987 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.017093398 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.01569246 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.015759978 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.022780271 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.016971505 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.015710545 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.016972733 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.016999562 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.017997716 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.015811314 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.015771873 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.021230031 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.030970277 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.02360893 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.019439189 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.015825532 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.017115366 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.015829561 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.017040386 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.021793452 seconds)
  done (took 1.196017435 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.020355199 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.020202711 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.019473659 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.019717872 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.019016442 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.015967057 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.019309244 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.015910997 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.019721996 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.016267389 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.019832765 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.015961552 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.016295865 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.016266805 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.016267658 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.017328587 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.019833052 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.019103715 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.015997708 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.019395281 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.01731061 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.01940523 seconds)
  done (took 1.146582261 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.018568855 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.016717885 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.024316286 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.015324629 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.015153089 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.018064068 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.01530665 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.02011013 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.020081403 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.020034578 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.024251834 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.016141411 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.015233125 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.021352471 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.01523299 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.016030533 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.061923354 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.016139793 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.016168839 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.01545264 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.017617099 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.024508036 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.015474682 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.015645121 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.020046913 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.018057984 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.015377571 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.017661454 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.015995667 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.020124473 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.016255231 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.015221255 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.024219734 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.023474965 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.020077832 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.020101865 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.016567829 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.016132376 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.015407872 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.015432324 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.023627392 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.016654912 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.015711646 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.016418695 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.024202302 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.015473336 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.015275317 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.02426257 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.015300024 seconds)
  done (took 1.680280351 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.028711691 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.069591112 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.023516944 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.050994663 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.028656087 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.020864567 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.022512764 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.053597021 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.016737597 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.017130013 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.02944933 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.030084444 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.018199937 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.019329217 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.023744505 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.018029303 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.018659131 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.017324691 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.020296869 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.017646157 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.020365006 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.023641271 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.029978187 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.030356939 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.019104643 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.017486335 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.017764342 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.019197894 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.029315369 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.020820795 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.019423972 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.019840348 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.02903634 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.024795887 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.017748313 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.017852139 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.029428826 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.018251731 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.018021557 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.016588188 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.017762509 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.019154204 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.023652258 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.029660147 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.018185787 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.024620062 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.018068325 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.016237092 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.029438492 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.017854005 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.021241961 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.030518217 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.019114869 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.018393952 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.019390029 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.029176421 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.01828666 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.017083854 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.018357609 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.029432763 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.016648097 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.018880169 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.030261139 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.134407691 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.02185863 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.030826062 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.025059098 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.019627939 seconds)
  done (took 2.590104125 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.027711881 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.022729445 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.026976013 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.027142214 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.022775135 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.022848419 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.022772992 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.022727198 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.022603991 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.025416747 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.022823876 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.138364139 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.020026478 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.023660795 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.022894935 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.022906525 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.022843281 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.022839909 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.022823574 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.02272081 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.02284116 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.027296665 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.022904504 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.027328573 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.056032352 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.01975544 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.022756932 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.022893978 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.027452485 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.022788444 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.029713053 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.022872218 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.022858465 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.027576609 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.029680272 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.022641912 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.016108264 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.02266838 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.022881813 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.023017051 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.019898023 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.027806416 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.022922354 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.019855781 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.02311712 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.022930404 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.027856709 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.030157298 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.02397963 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.026028848 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.023190301 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.027987088 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.02420543 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.024522904 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.030061893 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.063651178 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.030029707 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.030076587 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.024784101 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.029901502 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.030076403 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.037297723 seconds)
  done (took 2.480666809 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.030967511 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.021403609 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.026814447 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.015471766 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.015360886 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.02124055 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.015458383 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.015441071 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.02126894 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.02120009 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.02269966 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.021384949 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.023138408 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.022694002 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.021314147 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.023058257 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.021228849 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.021213995 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.021228188 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.021309632 seconds)
  done (took 1.197922896 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.019262075 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.020817014 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.016154322 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.020076187 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.016161933 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.01957376 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.016159019 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.016123697 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.016112789 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.016221525 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.020636574 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.020623159 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.016211664 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.020199562 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.019612379 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.019651171 seconds)
  done (took 1.051810184 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.020578028 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.026474827 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.126512114 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.016824621 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.018635767 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.016189553 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.016974535 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.015883355 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.01808765 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.02996649 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.016880247 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.018974091 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.016984252 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.015654344 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.016224773 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.018950118 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.01812731 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.01702854 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.016930363 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.127198196 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.025464295 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.017548426 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.019048825 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.01769087 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.01863469 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.025016608 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.018307534 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.018593906 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.016880384 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.018964251 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.018588784 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.027995515 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.018625695 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.017485536 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.015665657 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.01651811 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.016898727 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.018949862 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.018936163 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.016966486 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.015862409 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.018607031 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.016934261 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.017298861 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.018090077 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.018883399 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.018070971 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.027161434 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.016752066 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.018561127 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.016841162 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.018009695 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.017312049 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.02803391 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.018831486 seconds)
  done (took 2.00951642 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.036001622 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.022133607 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.0152809 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.01515577 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.021622791 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.022975188 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.02186364 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.022451455 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.022977511 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.015269254 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.023116911 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.021333835 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.023075965 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.022078421 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.023118 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.022040718 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.015309902 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.022882875 seconds)
  done (took 1.152022339 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.024584495 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.020922294 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.021264431 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.017299775 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.017221351 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.021246277 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.01570006 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.016890428 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.016875155 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.01737102 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.01729422 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.016931884 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.017709523 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.017885755 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.021268148 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.017480665 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.017030306 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.015897984 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.017376489 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.015706232 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.0213457 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.015911168 seconds)
  done (took 1.155615602 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#3", "BigInt", "+")...
    done (took 0.187745365 seconds)
    (2/6) benchmarking ("#3", "UInt64", "+")...
    done (took 0.147400313 seconds)
    (3/6) benchmarking ("#4", "UInt64", "+")...
    done (took 0.038917478 seconds)
    (4/6) benchmarking ("#3", "Int64", "+")...
    done (took 0.034105543 seconds)
    (5/6) benchmarking ("#4", "Int64", "+")...
    done (took 0.025640982 seconds)
    (6/6) benchmarking ("#4", "BigInt", "+")...
    done (took 0.052023253 seconds)
  done (took 1.241700557 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.054350897 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.025676263 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.02201577 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.047471073 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.021477899 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.020117698 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.020149695 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.020414076 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.023546953 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.029261224 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.020494152 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.023183437 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.023505837 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.025118868 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.022035415 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.021491235 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.020364262 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.020406702 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.022225504 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.031869674 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.020571531 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.023071123 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.020550216 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.020158109 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.020378036 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.025066485 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.023575988 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.029238199 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.020267132 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.023167223 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.021569909 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.020488197 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.023243266 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.029260995 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.021957557 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.023535096 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.020472661 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.031915382 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.021508524 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.025130611 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.021696483 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.022151016 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.023489082 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.023141278 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.023061642 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.020849297 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.023182148 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.020625874 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.020747644 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.034798943 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.021868025 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.025154021 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.022340613 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.023526071 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.023793807 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.034754883 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.029582578 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.02591897 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.023694867 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.031326493 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.027320097 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.023223153 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.027132357 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.031496825 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.023923336 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.027312283 seconds)
  done (took 2.396995936 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.031126109 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.049904521 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.020287831 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0290162 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.024791837 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.020420459 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.020388159 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.020341533 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.020361331 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.02261382 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.061012744 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.020601369 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.024916774 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.025045248 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.020707695 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.021661838 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.021161469 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.025203305 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.02278734 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.034325668 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.020480455 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.024970118 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.024966783 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.02498302 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.029226654 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.021617686 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.020357731 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.020348921 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.020393955 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.020314537 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.023241779 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.02049475 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.024881132 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.022463918 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.024928762 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.020578289 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.020370409 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.02318311 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.020372696 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.021596056 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.025099714 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.031442905 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.020432931 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.020411452 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0296098 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.020664371 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.020543784 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.02283169 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.020654422 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.02271426 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.029549233 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.029433484 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.02952659 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.025415738 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.020806124 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.020816805 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.02058204 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.020600264 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.021882451 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.022983794 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.027116372 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.02175824 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.037463512 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.021967713 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.021911149 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.027330261 seconds)
  done (took 2.396278928 seconds)
done (took 51.501591341 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.213346893 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.168792434 seconds)
  done (took 1.127575563 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose", "(600, 600)")...
    done (took 0.136992607 seconds)
    (2/16) benchmarking ("adjoint", "(600, 400)")...
    done (took 0.13497932 seconds)
    (3/16) benchmarking ("adjoint!", "(600, 600)")...
    done (took 0.163736529 seconds)
    (4/16) benchmarking ("adjoint", "(20000, 20000)")...
    done (took 0.023868753 seconds)
    (5/16) benchmarking ("transpose!", "(20000, 10000)")...
    done (took 0.081545524 seconds)
    (6/16) benchmarking ("adjoint!", "(20000, 20000)")...
    done (took 0.174072797 seconds)
    (7/16) benchmarking ("transpose!", "(20000, 20000)")...
    done (took 0.12499662 seconds)
    (8/16) benchmarking ("transpose", "(600, 400)")...
    done (took 0.026519307 seconds)
    (9/16) benchmarking ("transpose", "(20000, 20000)")...
    done (took 0.02417361 seconds)
    (10/16) benchmarking ("transpose!", "(600, 400)")...
    done (took 0.025605609 seconds)
    (11/16) benchmarking ("adjoint", "(600, 600)")...
    done (took 0.023764564 seconds)
    (12/16) benchmarking ("transpose!", "(600, 600)")...
    done (took 0.025267662 seconds)
    (13/16) benchmarking ("adjoint!", "(600, 400)")...
    done (took 0.025445191 seconds)
    (14/16) benchmarking ("transpose", "(20000, 10000)")...
    done (took 0.023661034 seconds)
    (15/16) benchmarking ("adjoint!", "(20000, 10000)")...
    done (took 0.086421195 seconds)
    (16/16) benchmarking ("adjoint", "(20000, 10000)")...
    done (took 0.026927293 seconds)
  done (took 1.894157733 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.073566428 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.273700083 seconds)
    (3/18) benchmarking ("IJV", 10)...
    done (took 0.067915677 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.023075028 seconds)
    (5/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.10391848 seconds)
    (6/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.029192155 seconds)
    (7/18) benchmarking ("IJV", 100)...
    done (took 0.024065246 seconds)
    (8/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.028517684 seconds)
    (9/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.02896104 seconds)
    (10/18) benchmarking ("IV", 1000)...
    done (took 0.023326867 seconds)
    (11/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.070453492 seconds)
    (12/18) benchmarking ("Diagonal", 10)...
    done (took 0.044441703 seconds)
    (13/18) benchmarking ("Diagonal", 100)...
    done (took 0.027442324 seconds)
    (14/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.028618413 seconds)
    (15/18) benchmarking ("IJV", 1000)...
    done (took 0.023946243 seconds)
    (16/18) benchmarking ("Diagonal", 1000)...
    done (took 0.02736242 seconds)
    (17/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.028504379 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.02895821 seconds)
  done (took 1.721583319 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", "(20000, 20000)")...
    done (took 0.090480147 seconds)
    (2/2) benchmarking ("unary minus", "(600, 600)")...
    done (took 0.032949922 seconds)
  done (took 0.888309641 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.137563904 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.063969947 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.105916042 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.314161696 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.099039102 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.294515755 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.103013981 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.102905733 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.069306363 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.097469854 seconds)
  done (took 2.147355441 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.059998871 seconds)
    (2/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.055559711 seconds)
    (3/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.280920102 seconds)
    (4/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.054803144 seconds)
    (5/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.034315649 seconds)
    (6/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.029267356 seconds)
    (7/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.030423567 seconds)
    (8/54) benchmarking ("spmat", "range", 100)...
    done (took 0.029972754 seconds)
    (9/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.030637674 seconds)
    (10/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.02955098 seconds)
    (11/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.072126591 seconds)
    (12/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.028130439 seconds)
    (13/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.024544279 seconds)
    (14/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.067841741 seconds)
    (15/54) benchmarking ("spmat", "array", 100)...
    done (took 0.04901707 seconds)
    (16/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.059142866 seconds)
    (17/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.02396885 seconds)
    (18/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.029581242 seconds)
    (19/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.032870617 seconds)
    (20/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.023677515 seconds)
    (21/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.028335524 seconds)
    (22/54) benchmarking ("spmat", "range", 10)...
    done (took 0.029847718 seconds)
    (23/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.133817502 seconds)
    (24/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.029745506 seconds)
    (25/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.050390887 seconds)
    (26/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.027165048 seconds)
    (27/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.029002928 seconds)
    (28/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.029576189 seconds)
    (29/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.029533334 seconds)
    (30/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.030402878 seconds)
    (31/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.030451607 seconds)
    (32/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.053734735 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.029506365 seconds)
    (34/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.037281561 seconds)
    (35/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.028250204 seconds)
    (36/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.049865542 seconds)
    (37/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.024573059 seconds)
    (38/54) benchmarking ("spmat", "array", 10)...
    done (took 0.048989416 seconds)
    (39/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.027208634 seconds)
    (40/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.024451535 seconds)
    (41/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.027059464 seconds)
    (42/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.03057004 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.025118927 seconds)
    (44/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.030166808 seconds)
    (45/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.030576086 seconds)
    (46/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.029465818 seconds)
    (47/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.030072678 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.023736271 seconds)
    (49/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.030687548 seconds)
    (50/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.027496343 seconds)
    (51/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.024692347 seconds)
    (52/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.028296214 seconds)
    (53/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.028574554 seconds)
    (54/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.029105074 seconds)
  done (took 2.998140657 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.076631712 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.066829731 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.024413539 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.074165918 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065642383 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.024610204 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.078877922 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.06041108 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.077330408 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.023967654 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.02364364 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.023678595 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.031371556 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.035330574 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.076754649 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.069408881 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.025722375 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.024334741 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.068788587 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.068614182 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.023026969 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07959589 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.070736204 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.067348731 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.022732285 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.024281089 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.022912274 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.023592309 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.030872646 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.031052189 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.023350255 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.033600399 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.036459856 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.030979079 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.022731891 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.023027247 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.022933363 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.03155064 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.032163023 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.03207843 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.030056784 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.022717768 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.022946344 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.023616898 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.024061306 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.022548824 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.032152148 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.030991721 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.032051344 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.023498039 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.023548731 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.022913456 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.023820443 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.030430542 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.029443143 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.030792206 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.033030197 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.023265816 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.02333932 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.024626782 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.033928596 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.031451956 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.03124 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.024281293 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.031728393 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.023109534 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.032816663 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.03628898 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.023131396 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.023843634 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.023393696 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.023404597 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.023806107 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.029831189 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.029855713 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.023769468 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.023607806 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.023063234 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.031367836 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.030059955 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.023088303 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.031242892 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.02275128 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.023349025 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.023799786 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.023976326 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.032227476 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.03154854 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.02400024 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.023820135 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.023889266 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.023814743 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.023020149 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.032585118 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.032213719 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.032402335 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.03359246 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.024387132 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.034248559 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.032833391 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.024469488 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.031644182 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.023923564 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.024273808 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.024252775 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.031673434 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.03130475 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.032958338 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.02389762 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.023501757 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.032591048 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.035444934 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.02370847 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.031253645 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.033252992 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.031759122 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.023319822 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.034860931 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.023960455 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.034068123 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.024202605 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.033453164 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.024251922 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.032290633 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.024172848 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.023256069 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.024079614 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.034923977 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.024589066 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.024021446 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.024375718 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.024003011 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.032285955 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.035659011 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.024695301 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.032787871 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.032405739 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.024692971 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.033780235 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.024215553 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.033757685 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.024233355 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.024477165 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.023288116 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.036214017 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.024069504 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.024468616 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.024078153 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.034225605 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.023893746 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.034076916 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.031520697 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.023446332 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.034612001 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.034037978 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.03160256 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.034472661 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.024901539 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.02427975 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.023897284 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.024227835 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.033669156 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.035425854 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.025028534 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.024138807 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.03117179 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.034373519 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.02356797 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.031901069 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.031738595 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.032133054 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.024458841 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.024330107 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.035152055 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.036430265 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.032239084 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.034254877 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.03317405 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.024110068 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.031814402 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.034636959 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.024226103 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.038852963 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.0241662 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.035640744 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.034926099 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.031324941 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.034607664 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.035826103 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.033906588 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.034157474 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.036438706 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.023661511 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.023931987 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.032282431 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.024011574 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.024303711 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.03205189 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.024755595 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.025001698 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.038459489 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.024346342 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.034666574 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.023632433 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.032886228 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.023549769 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.024919769 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.038887546 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.024558177 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.024918627 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.032771016 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.024335774 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.031924806 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.034754286 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.031987063 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.02403191 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.024726155 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.035425961 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.034599971 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.024073469 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.02391633 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.024682641 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.034321964 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.033591241 seconds)
  done (took 7.745009751 seconds)
done (took 19.296940271 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 0.154239931 seconds)
    (2/4) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 0.075030592 seconds)
    (3/4) benchmarking ("Float64", "(1000, 1000)", 3)...
    done (took 0.147240349 seconds)
    (4/4) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 0.086512168 seconds)
  done (took 1.223412672 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 0.059521477 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 0.020089182 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 0.144487412 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 0.155961381 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 0.020182128 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 0.137872117 seconds)
  done (took 1.319452503 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 0.267517408 seconds)
    (2/3) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 0.159978102 seconds)
    (3/3) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 0.166555593 seconds)
  done (took 1.3786524 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ("(10000000,)", 1)...
    done (took 0.154979416 seconds)
    (2/4) benchmarking ("(10000000,)", 2)...
    done (took 0.283711926 seconds)
    (3/4) benchmarking ("(1000, 1000)", 2)...
    done (took 0.549784429 seconds)
    (4/4) benchmarking ("(1000, 1000)", 1)...
    done (took 0.146935782 seconds)
  done (took 1.92649111 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 0.17038952 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.166043893 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 0.031547672 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.18343484 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 0.038823067 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 0.016422167 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.108277009 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 0.017292785 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 0.051970702 seconds)
  done (took 1.629526579 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.096455323 seconds)
done (took 8.46104764 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("map", "*", "Int64", "(false, false)")...
    done (took 0.199288248 seconds)
    (2/341) benchmarking ("perf_simplecopy", "Float64", 1)...
    done (took 0.139476316 seconds)
    (3/341) benchmarking ("perf_sum", "BigFloat", 0)...
    done (took 0.034259463 seconds)
    (4/341) benchmarking ("perf_sum3", "Float64", 1)...
    done (took 0.028245318 seconds)
    (5/341) benchmarking ("broadcast", "abs", "Int64", 0)...
    done (took 0.125101324 seconds)
    (6/341) benchmarking ("broadcast", "abs", "Int64", 1)...
    done (took 0.132102945 seconds)
    (7/341) benchmarking ("map", "identity", "Float32", 0)...
    done (took 0.143532069 seconds)
    (8/341) benchmarking ("perf_countnothing", "Int8", 1)...
    done (took 0.030600771 seconds)
    (9/341) benchmarking ("collect", "all", "Float64", 1)...
    done (took 0.133807551 seconds)
    (10/341) benchmarking ("broadcast", "*", "Bool", "(false, true)")...
    done (took 0.307576018 seconds)
    (11/341) benchmarking ("broadcast", "*", "Int64", "(false, true)")...
    done (took 0.181739786 seconds)
    (12/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int64}", 1)...
    done (took 0.049101181 seconds)
    (13/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float32}", 0)...
    done (took 0.154565522 seconds)
    (14/341) benchmarking ("perf_binaryop", "*", "Float32", "(true, true)")...
    done (took 0.043093893 seconds)
    (15/341) benchmarking ("collect", "all", "ComplexF64", 0)...
    done (took 0.266117047 seconds)
    (16/341) benchmarking ("perf_sum2", "Bool", 1)...
    done (took 0.031429446 seconds)
    (17/341) benchmarking ("perf_countnothing", "Float32", 1)...
    done (took 0.029840316 seconds)
    (18/341) benchmarking ("perf_countnothing", "BigInt", 1)...
    done (took 0.024911279 seconds)
    (19/341) benchmarking ("collect", "filter", "Float64", 1)...
    done (took 0.140743914 seconds)
    (20/341) benchmarking ("map", "abs", "Bool", 1)...
    done (took 0.131833963 seconds)
    (21/341) benchmarking ("sort", "Union{Missing, Bool}", 1)...
    done (took 0.241830197 seconds)
    (22/341) benchmarking ("perf_sum2", "ComplexF64", 0)...
    done (took 0.028622196 seconds)
    (23/341) benchmarking ("sort", "Float32", 0)...
    done (took 0.096477687 seconds)
    (24/341) benchmarking ("perf_sum", "Int64", 1)...
    done (took 0.030924537 seconds)
    (25/341) benchmarking ("collect", "filter", "Float32", 0)...
    done (took 0.100680742 seconds)
    (26/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int8}", 0)...
    done (took 0.079164011 seconds)
    (27/341) benchmarking ("broadcast", "*", "Float32", "(false, false)")...
    done (took 0.188448035 seconds)
    (28/341) benchmarking ("broadcast", "*", "BigInt", "(false, true)")...
    done (took 0.312946253 seconds)
    (29/341) benchmarking ("map", "*", "ComplexF64", "(true, true)")...
    done (took 0.273719986 seconds)
    (30/341) benchmarking ("perf_sum4", "Float32", 1)...
    done (took 0.031353168 seconds)
    (31/341) benchmarking ("broadcast", "identity", "Float32", 0)...
    done (took 0.119419453 seconds)
    (32/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, true)")...
    done (took 0.042524788 seconds)
    (33/341) benchmarking ("collect", "filter", "BigInt", 1)...
    done (took 0.115830221 seconds)
    (34/341) benchmarking ("broadcast", "identity", "Float64", 1)...
    done (took 0.124087058 seconds)
    (35/341) benchmarking ("map", "abs", "Bool", 0)...
    done (took 0.134515497 seconds)
    (36/341) benchmarking ("skipmissing", "collect", "Union{Missing, Bool}", 1)...
    done (took 0.04894842 seconds)
    (37/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, false)")...
    done (took 0.020284642 seconds)
    (38/341) benchmarking ("map", "abs", "BigFloat", 0)...
    done (took 0.24402971 seconds)
    (39/341) benchmarking ("skipmissing", "sum", "Union{Missing, ComplexF64}", 1)...
    done (took 0.105644924 seconds)
    (40/341) benchmarking ("map", "*", "Int8", "(true, true)")...
    done (took 0.320931314 seconds)
    (41/341) benchmarking ("map", "*", "Bool", "(false, false)")...
    done (took 0.164985669 seconds)
    (42/341) benchmarking ("perf_sum3", "Bool", 0)...
    done (took 0.027518572 seconds)
    (43/341) benchmarking ("map", "*", "BigFloat", "(false, false)")...
    done (took 0.140957902 seconds)
    (44/341) benchmarking ("perf_sum", "Float32", 1)...
    done (took 0.025628407 seconds)
    (45/341) benchmarking ("broadcast", "*", "Float32", "(false, true)")...
    done (took 0.019899175 seconds)
    (46/341) benchmarking ("perf_sum", "Int8", 1)...
    done (took 0.144449077 seconds)
    (47/341) benchmarking ("skipmissing", "collect", "Float64", 0)...
    done (took 0.033471158 seconds)
    (48/341) benchmarking ("perf_sum2", "Float64", 1)...
    done (took 0.027389592 seconds)
    (49/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int64}", 0)...
    done (took 0.043555182 seconds)
    (50/341) benchmarking ("perf_sum3", "Float32", 1)...
    done (took 0.027485369 seconds)
    (51/341) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.042309774 seconds)
    (52/341) benchmarking ("perf_sum", "Int8", 0)...
    done (took 0.028432303 seconds)
    (53/341) benchmarking ("broadcast", "identity", "ComplexF64", 1)...
    done (took 0.131988545 seconds)
    (54/341) benchmarking ("perf_countnothing", "BigInt", 0)...
    done (took 0.024061702 seconds)
    (55/341) benchmarking ("map", "identity", "Bool", 0)...
    done (took 0.093155883 seconds)
    (56/341) benchmarking ("map", "abs", "BigFloat", 1)...
    done (took 0.14006125 seconds)
    (57/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, true)")...
    done (took 0.184329038 seconds)
    (58/341) benchmarking ("map", "abs", "ComplexF64", 0)...
    done (took 0.102308035 seconds)
    (59/341) benchmarking ("perf_sum", "Float64", 0)...
    done (took 0.026435155 seconds)
    (60/341) benchmarking ("perf_countequals", "Int8")...
    done (took 0.039393593 seconds)
    (61/341) benchmarking ("perf_countnothing", "Float64", 1)...
    done (took 0.030366893 seconds)
    (62/341) benchmarking ("broadcast", "abs", "BigFloat", 0)...
    done (took 0.158661562 seconds)
    (63/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(true, true)")...
    done (took 0.038692847 seconds)
    (64/341) benchmarking ("skipmissing", "sum", "Float64", 0)...
    done (took 0.026109887 seconds)
    (65/341) benchmarking ("perf_sum2", "BigInt", 0)...
    done (took 0.032270183 seconds)
    (66/341) benchmarking ("map", "identity", "Bool", 1)...
    done (took 0.020352523 seconds)
    (67/341) benchmarking ("broadcast", "*", "Bool", "(false, false)")...
    done (took 0.137870343 seconds)
    (68/341) benchmarking ("collect", "all", "Bool", 0)...
    done (took 0.040186883 seconds)
    (69/341) benchmarking ("map", "*", "ComplexF64", "(false, false)")...
    done (took 0.020879659 seconds)
    (70/341) benchmarking ("perf_sum4", "Float64", 0)...
    done (took 0.031423109 seconds)
    (71/341) benchmarking ("perf_countnothing", "Int8", 0)...
    done (took 0.029360648 seconds)
    (72/341) benchmarking ("skipmissing", "sum", "Union{Missing, Bool}", 1)...
    done (took 0.098395517 seconds)
    (73/341) benchmarking ("skipmissing", "collect", "Int8", 0)...
    done (took 0.155557671 seconds)
    (74/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int64}", 0)...
    done (took 0.065849489 seconds)
    (75/341) benchmarking ("perf_sum3", "BigFloat", 0)...
    done (took 0.032314573 seconds)
    (76/341) benchmarking ("sort", "Union{Nothing, Int64}", 0)...
    done (took 0.11950248 seconds)
    (77/341) benchmarking ("map", "identity", "BigFloat", 0)...
    done (took 0.097411169 seconds)
    (78/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigInt}", 1)...
    done (took 0.046636022 seconds)
    (79/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, false)")...
    done (took 0.049719188 seconds)
    (80/341) benchmarking ("perf_sum", "BigInt", 1)...
    done (took 0.029928581 seconds)
    (81/341) benchmarking ("broadcast", "identity", "Float64", 0)...
    done (took 0.020017666 seconds)
    (82/341) benchmarking ("broadcast", "*", "BigFloat", "(false, false)")...
    done (took 0.19134916 seconds)
    (83/341) benchmarking ("collect", "all", "Float64", 0)...
    done (took 0.025520045 seconds)
    (84/341) benchmarking ("map", "identity", "Float64", 1)...
    done (took 0.038516054 seconds)
    (85/341) benchmarking ("perf_sum3", "Float64", 0)...
    done (took 0.027206166 seconds)
    (86/341) benchmarking ("skipmissing", "collect", "Union{Missing, ComplexF64}", 1)...
    done (took 0.053615058 seconds)
    (87/341) benchmarking ("broadcast", "*", "Int64", "(true, true)")...
    done (took 0.020238006 seconds)
    (88/341) benchmarking ("perf_binaryop", "*", "Int8", "(true, true)")...
    done (took 0.035741238 seconds)
    (89/341) benchmarking ("map", "*", "Float32", "(true, true)")...
    done (took 0.169398429 seconds)
    (90/341) benchmarking ("map", "*", "BigInt", "(false, true)")...
    done (took 0.149435872 seconds)
    (91/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigInt}", 1)...
    done (took 0.087040917 seconds)
    (92/341) benchmarking ("broadcast", "*", "BigInt", "(true, true)")...
    done (took 0.02140867 seconds)
    (93/341) benchmarking ("sort", "BigInt", 0)...
    done (took 0.237127389 seconds)
    (94/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, true)")...
    done (took 0.022296923 seconds)
    (95/341) benchmarking ("perf_binaryop", "*", "BigInt", "(true, true)")...
    done (took 0.046930731 seconds)
    (96/341) benchmarking ("broadcast", "*", "BigInt", "(false, false)")...
    done (took 0.021880091 seconds)
    (97/341) benchmarking ("map", "*", "Bool", "(true, true)")...
    done (took 0.020927865 seconds)
    (98/341) benchmarking ("broadcast", "*", "Float64", "(true, true)")...
    done (took 0.187766558 seconds)
    (99/341) benchmarking ("map", "identity", "Float64", 0)...
    done (took 0.020677969 seconds)
    (100/341) benchmarking ("map", "*", "Int64", "(true, true)")...
    done (took 0.020779734 seconds)
    (101/341) benchmarking ("perf_sum4", "Int64", 1)...
    done (took 0.031132674 seconds)
    (102/341) benchmarking ("perf_countnothing", "Float32", 0)...
    done (took 0.02956882 seconds)
    (103/341) benchmarking ("collect", "filter", "Float32", 1)...
    done (took 0.022471696 seconds)
    (104/341) benchmarking ("map", "*", "Float64", "(false, false)")...
    done (took 0.169541721 seconds)
    (105/341) benchmarking ("collect", "filter", "Bool", 0)...
    done (took 0.104116419 seconds)
    (106/341) benchmarking ("perf_sum", "Int64", 0)...
    done (took 0.029373753 seconds)
    (107/341) benchmarking ("perf_sum3", "Int8", 1)...
    done (took 0.027941241 seconds)
    (108/341) benchmarking ("perf_sum3", "BigFloat", 1)...
    done (took 0.021378896 seconds)
    (109/341) benchmarking ("perf_sum3", "Float32", 0)...
    done (took 0.026694746 seconds)
    (110/341) benchmarking ("map", "*", "BigInt", "(true, true)")...
    done (took 0.021939191 seconds)
    (111/341) benchmarking ("perf_sum", "BigFloat", 1)...
    done (took 0.021432535 seconds)
    (112/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, true)")...
    done (took 0.020849881 seconds)
    (113/341) benchmarking ("sort", "BigFloat", 0)...
    done (took 0.096085951 seconds)
    (114/341) benchmarking ("perf_simplecopy", "Bool", 1)...
    done (took 0.037685144 seconds)
    (115/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, false)")...
    done (took 0.182169479 seconds)
    (116/341) benchmarking ("sort", "Union{Nothing, BigFloat}", 0)...
    done (took 0.107059263 seconds)
    (117/341) benchmarking ("broadcast", "identity", "Int64", 1)...
    done (took 0.119366161 seconds)
    (118/341) benchmarking ("perf_countequals", "Float32")...
    done (took 0.031949392 seconds)
    (119/341) benchmarking ("skipmissing", "collect", "BigFloat", 0)...
    done (took 0.036853963 seconds)
    (120/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigFloat}", 1)...
    done (took 0.085131545 seconds)
    (121/341) benchmarking ("perf_sum", "Float64", 1)...
    done (took 0.023923882 seconds)
    (122/341) benchmarking ("perf_sum4", "Int8", 0)...
    done (took 0.030486958 seconds)
    (123/341) benchmarking ("perf_sum4", "ComplexF64", 0)...
    done (took 0.027757545 seconds)
    (124/341) benchmarking ("broadcast", "abs", "ComplexF64", 1)...
    done (took 0.136356578 seconds)
    (125/341) benchmarking ("perf_simplecopy", "BigInt", 1)...
    done (took 0.027043838 seconds)
    (126/341) benchmarking ("broadcast", "identity", "Bool", 0)...
    done (took 0.13297093 seconds)
    (127/341) benchmarking ("map", "*", "BigInt", "(false, false)")...
    done (took 0.021987051 seconds)
    (128/341) benchmarking ("perf_binaryop", "*", "Bool", "(true, true)")...
    done (took 0.042703752 seconds)
    (129/341) benchmarking ("sort", "Union{Nothing, Float32}", 0)...
    done (took 0.120277241 seconds)
    (130/341) benchmarking ("map", "abs", "Int8", 1)...
    done (took 0.097183703 seconds)
    (131/341) benchmarking ("sort", "Union{Nothing, BigInt}", 0)...
    done (took 0.103244738 seconds)
    (132/341) benchmarking ("map", "identity", "BigFloat", 1)...
    done (took 0.019988644 seconds)
    (133/341) benchmarking ("broadcast", "identity", "BigFloat", 1)...
    done (took 0.138373815 seconds)
    (134/341) benchmarking ("perf_sum2", "Int64", 1)...
    done (took 0.029986724 seconds)
    (135/341) benchmarking ("broadcast", "*", "Float64", "(false, false)")...
    done (took 0.019579167 seconds)
    (136/341) benchmarking ("perf_sum", "ComplexF64", 0)...
    done (took 0.027419324 seconds)
    (137/341) benchmarking ("skipmissing", "sum", "BigFloat", 0)...
    done (took 0.047232743 seconds)
    (138/341) benchmarking ("perf_sum3", "ComplexF64", 1)...
    done (took 0.029597801 seconds)
    (139/341) benchmarking ("perf_simplecopy", "Int8", 1)...
    done (took 0.03692609 seconds)
    (140/341) benchmarking ("perf_sum3", "ComplexF64", 0)...
    done (took 0.028202647 seconds)
    (141/341) benchmarking ("broadcast", "identity", "BigInt", 0)...
    done (took 0.138555878 seconds)
    (142/341) benchmarking ("perf_countequals", "Int64")...
    done (took 0.030977585 seconds)
    (143/341) benchmarking ("perf_sum3", "Bool", 1)...
    done (took 0.025765228 seconds)
    (144/341) benchmarking ("sort", "Union{Nothing, Float64}", 0)...
    done (took 0.119901364 seconds)
    (145/341) benchmarking ("broadcast", "identity", "BigFloat", 0)...
    done (took 0.019332115 seconds)
    (146/341) benchmarking ("sort", "Union{Nothing, Bool}", 0)...
    done (took 0.11654612 seconds)
    (147/341) benchmarking ("map", "abs", "Float32", 1)...
    done (took 0.098439975 seconds)
    (148/341) benchmarking ("broadcast", "abs", "Float64", 1)...
    done (took 0.12915777 seconds)
    (149/341) benchmarking ("perf_sum2", "Float32", 1)...
    done (took 0.02512296 seconds)
    (150/341) benchmarking ("perf_countequals", "Bool")...
    done (took 0.030492881 seconds)
    (151/341) benchmarking ("map", "identity", "Int8", 0)...
    done (took 0.09234764 seconds)
    (152/341) benchmarking ("skipmissing", "sum", "Int8", 0)...
    done (took 0.042481717 seconds)
    (153/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float32}", 1)...
    done (took 0.049537931 seconds)
    (154/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, false)")...
    done (took 0.042309147 seconds)
    (155/341) benchmarking ("collect", "all", "ComplexF64", 1)...
    done (took 0.023999969 seconds)
    (156/341) benchmarking ("map", "*", "Int64", "(false, true)")...
    done (took 0.020068497 seconds)
    (157/341) benchmarking ("map", "identity", "Float32", 1)...
    done (took 0.01980302 seconds)
    (158/341) benchmarking ("perf_simplecopy", "Float32", 0)...
    done (took 0.032838041 seconds)
    (159/341) benchmarking ("broadcast", "identity", "BigInt", 1)...
    done (took 0.019173249 seconds)
    (160/341) benchmarking ("map", "*", "Int8", "(false, false)")...
    done (took 0.019948845 seconds)
    (161/341) benchmarking ("skipmissing", "collect", "Float32", 0)...
    done (took 0.032810758 seconds)
    (162/341) benchmarking ("perf_sum3", "Int64", 0)...
    done (took 0.026683482 seconds)
    (163/341) benchmarking ("perf_simplecopy", "Bool", 0)...
    done (took 0.03587327 seconds)
    (164/341) benchmarking ("sort", "Union{Missing, Int8}", 1)...
    done (took 0.240775461 seconds)
    (165/341) benchmarking ("perf_sum2", "Int8", 0)...
    done (took 0.029693761 seconds)
    (166/341) benchmarking ("perf_countnothing", "BigFloat", 1)...
    done (took 0.024172237 seconds)
    (167/341) benchmarking ("sort", "Union{Missing, BigFloat}", 1)...
    done (took 0.249996221 seconds)
    (168/341) benchmarking ("perf_sum2", "BigFloat", 1)...
    done (took 0.03213531 seconds)
    (169/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float64}", 1)...
    done (took 0.091251128 seconds)
    (170/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Bool}", 0)...
    done (took 0.039961013 seconds)
    (171/341) benchmarking ("map", "*", "Float64", "(false, true)")...
    done (took 0.020370115 seconds)
    (172/341) benchmarking ("collect", "filter", "Int8", 0)...
    done (took 0.100904404 seconds)
    (173/341) benchmarking ("sort", "Int64", 0)...
    done (took 0.021933618 seconds)
    (174/341) benchmarking ("collect", "all", "BigFloat", 0)...
    done (took 0.040121013 seconds)
    (175/341) benchmarking ("skipmissing", "sum", "Union{Nothing, ComplexF64}", 0)...
    done (took 0.08402767 seconds)
    (176/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, true)")...
    done (took 0.020457496 seconds)
    (177/341) benchmarking ("map", "identity", "BigInt", 1)...
    done (took 0.097130994 seconds)
    (178/341) benchmarking ("broadcast", "*", "BigFloat", "(true, true)")...
    done (took 0.020862826 seconds)
    (179/341) benchmarking ("map", "*", "Float32", "(false, false)")...
    done (took 0.020257257 seconds)
    (180/341) benchmarking ("perf_simplecopy", "ComplexF64", 1)...
    done (took 0.02635648 seconds)
    (181/341) benchmarking ("collect", "filter", "Float64", 0)...
    done (took 0.021865857 seconds)
    (182/341) benchmarking ("perf_countnothing", "Bool", 1)...
    done (took 0.029850938 seconds)
    (183/341) benchmarking ("perf_sum4", "BigFloat", 0)...
    done (took 0.033849556 seconds)
    (184/341) benchmarking ("broadcast", "*", "BigFloat", "(false, true)")...
    done (took 0.020890816 seconds)
    (185/341) benchmarking ("skipmissing", "collect", "Bool", 0)...
    done (took 0.033505687 seconds)
    (186/341) benchmarking ("perf_sum2", "Int64", 0)...
    done (took 0.028053275 seconds)
    (187/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, false)")...
    done (took 0.02034574 seconds)
    (188/341) benchmarking ("collect", "filter", "Int64", 1)...
    done (took 0.101353766 seconds)
    (189/341) benchmarking ("collect", "filter", "Int8", 1)...
    done (took 0.022056613 seconds)
    (190/341) benchmarking ("broadcast", "*", "Int8", "(true, true)")...
    done (took 0.188837158 seconds)
    (191/341) benchmarking ("collect", "filter", "BigFloat", 1)...
    done (took 0.100014506 seconds)
    (192/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int64}", 1)...
    done (took 0.09735941 seconds)
    (193/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, false)")...
    done (took 0.020588622 seconds)
    (194/341) benchmarking ("map", "identity", "ComplexF64", 0)...
    done (took 0.039057313 seconds)
    (195/341) benchmarking ("map", "identity", "BigInt", 0)...
    done (took 0.020166708 seconds)
    (196/341) benchmarking ("broadcast", "abs", "Bool", 0)...
    done (took 0.133051912 seconds)
    (197/341) benchmarking ("map", "*", "Float32", "(false, true)")...
    done (took 0.020446537 seconds)
    (198/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Bool}", 0)...
    done (took 0.069661837 seconds)
    (199/341) benchmarking ("collect", "filter", "ComplexF64", 0)...
    done (took 0.111593852 seconds)
    (200/341) benchmarking ("skipmissing", "collect", "BigInt", 0)...
    done (took 0.035026455 seconds)
    (201/341) benchmarking ("collect", "all", "BigInt", 0)...
    done (took 0.040400929 seconds)
    (202/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, true)")...
    done (took 0.021695653 seconds)
    (203/341) benchmarking ("map", "abs", "Float64", 0)...
    done (took 0.098941434 seconds)
    (204/341) benchmarking ("skipmissing", "collect", "ComplexF64", 0)...
    done (took 0.034540883 seconds)
    (205/341) benchmarking ("perf_simplecopy", "ComplexF64", 0)...
    done (took 0.025349391 seconds)
    (206/341) benchmarking ("collect", "all", "Int64", 1)...
    done (took 0.099375766 seconds)
    (207/341) benchmarking ("broadcast", "abs", "Float32", 1)...
    done (took 0.131246736 seconds)
    (208/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float32}", 1)...
    done (took 0.091952151 seconds)
    (209/341) benchmarking ("perf_simplecopy", "BigFloat", 0)...
    done (took 0.026775696 seconds)
    (210/341) benchmarking ("sort", "Union{Missing, Int64}", 1)...
    done (took 0.246597831 seconds)
    (211/341) benchmarking ("perf_sum3", "BigInt", 0)...
    done (took 0.02933525 seconds)
    (212/341) benchmarking ("perf_sum2", "BigFloat", 0)...
    done (took 0.020675108 seconds)
    (213/341) benchmarking ("perf_simplecopy", "Int64", 0)...
    done (took 0.026156206 seconds)
    (214/341) benchmarking ("perf_countnothing", "Float64", 0)...
    done (took 0.029078817 seconds)
    (215/341) benchmarking ("perf_sum", "BigInt", 0)...
    done (took 0.020692471 seconds)
    (216/341) benchmarking ("map", "abs", "BigInt", 0)...
    done (took 0.099772893 seconds)
    (217/341) benchmarking ("perf_sum2", "ComplexF64", 1)...
    done (took 0.025022556 seconds)
    (218/341) benchmarking ("broadcast", "*", "ComplexF64", "(true, true)")...
    done (took 0.019693946 seconds)
    (219/341) benchmarking ("map", "abs", "Float32", 0)...
    done (took 0.020004431 seconds)
    (220/341) benchmarking ("collect", "filter", "Bool", 1)...
    done (took 0.021841515 seconds)
    (221/341) benchmarking ("broadcast", "abs", "Float32", 0)...
    done (took 0.019266726 seconds)
    (222/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigFloat}", 1)...
    done (took 0.044161145 seconds)
    (223/341) benchmarking ("broadcast", "abs", "ComplexF64", 0)...
    done (took 0.019521945 seconds)
    (224/341) benchmarking ("perf_sum4", "Float32", 0)...
    done (took 0.028189901 seconds)
    (225/341) benchmarking ("perf_simplecopy", "BigInt", 0)...
    done (took 0.025795767 seconds)
    (226/341) benchmarking ("perf_sum", "Float32", 0)...
    done (took 0.02307153 seconds)
    (227/341) benchmarking ("collect", "filter", "BigFloat", 0)...
    done (took 0.021823778 seconds)
    (228/341) benchmarking ("broadcast", "identity", "Float32", 1)...
    done (took 0.019344236 seconds)
    (229/341) benchmarking ("perf_sum4", "Float64", 1)...
    done (took 0.02838314 seconds)
    (230/341) benchmarking ("map", "abs", "Int64", 0)...
    done (took 0.099852784 seconds)
    (231/341) benchmarking ("broadcast", "abs", "Int8", 1)...
    done (took 0.119391639 seconds)
    (232/341) benchmarking ("perf_sum3", "Int64", 1)...
    done (took 0.026245823 seconds)
    (233/341) benchmarking ("collect", "all", "Float32", 1)...
    done (took 0.03937758 seconds)
    (234/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.033490815 seconds)
    (235/341) benchmarking ("perf_countequals", "Float64")...
    done (took 0.031355222 seconds)
    (236/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigInt}", 0)...
    done (took 0.067339799 seconds)
    (237/341) benchmarking ("perf_sum4", "Int8", 1)...
    done (took 0.028363544 seconds)
    (238/341) benchmarking ("broadcast", "abs", "BigInt", 0)...
    done (took 0.15871778 seconds)
    (239/341) benchmarking ("broadcast", "identity", "Bool", 1)...
    done (took 0.019713565 seconds)
    (240/341) benchmarking ("perf_countnothing", "Int64", 1)...
    done (took 0.030220306 seconds)
    (241/341) benchmarking ("skipmissing", "sum", "Float32", 0)...
    done (took 0.041254742 seconds)
    (242/341) benchmarking ("broadcast", "*", "Int8", "(false, false)")...
    done (took 0.019948104 seconds)
    (243/341) benchmarking ("collect", "all", "Bool", 1)...
    done (took 0.024909962 seconds)
    (244/341) benchmarking ("perf_simplecopy", "Int64", 1)...
    done (took 0.025708783 seconds)
    (245/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigInt}", 0)...
    done (took 0.03770701 seconds)
    (246/341) benchmarking ("perf_sum2", "Float64", 0)...
    done (took 0.023756412 seconds)
    (247/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(true, true)")...
    done (took 0.021571995 seconds)
    (248/341) benchmarking ("perf_countnothing", "Int64", 0)...
    done (took 0.029287503 seconds)
    (249/341) benchmarking ("map", "*", "Int8", "(false, true)")...
    done (took 0.020553787 seconds)
    (250/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, false)")...
    done (took 0.020581894 seconds)
    (251/341) benchmarking ("map", "abs", "ComplexF64", 1)...
    done (took 0.020286288 seconds)
    (252/341) benchmarking ("map", "*", "ComplexF64", "(false, true)")...
    done (took 0.020503488 seconds)
    (253/341) benchmarking ("perf_countnothing", "Bool", 0)...
    done (took 0.029199335 seconds)
    (254/341) benchmarking ("map", "*", "BigFloat", "(false, true)")...
    done (took 0.021613574 seconds)
    (255/341) benchmarking ("broadcast", "*", "Bool", "(true, true)")...
    done (took 0.019898575 seconds)
    (256/341) benchmarking ("broadcast", "*", "Float32", "(true, true)")...
    done (took 0.019823933 seconds)
    (257/341) benchmarking ("perf_simplecopy", "Int8", 0)...
    done (took 0.036230855 seconds)
    (258/341) benchmarking ("perf_sum4", "ComplexF64", 1)...
    done (took 0.025221547 seconds)
    (259/341) benchmarking ("collect", "all", "BigInt", 1)...
    done (took 0.02515596 seconds)
    (260/341) benchmarking ("perf_sum4", "Bool", 1)...
    done (took 0.031272578 seconds)
    (261/341) benchmarking ("collect", "all", "Int8", 1)...
    done (took 0.039995746 seconds)
    (262/341) benchmarking ("sort", "Union{Missing, Float32}", 1)...
    done (took 0.476187852 seconds)
    (263/341) benchmarking ("perf_sum4", "BigFloat", 1)...
    done (took 0.021779449 seconds)
    (264/341) benchmarking ("collect", "filter", "ComplexF64", 1)...
    done (took 0.022406582 seconds)
    (265/341) benchmarking ("perf_simplecopy", "Float32", 1)...
    done (took 0.032920383 seconds)
    (266/341) benchmarking ("perf_simplecopy", "Float64", 0)...
    done (took 0.025895148 seconds)
    (267/341) benchmarking ("map", "*", "Float64", "(true, true)")...
    done (took 0.020883685 seconds)
    (268/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, false)")...
    done (took 0.022424532 seconds)
    (269/341) benchmarking ("map", "abs", "Float64", 1)...
    done (took 0.020535729 seconds)
    (270/341) benchmarking ("collect", "filter", "Int64", 0)...
    done (took 0.022468535 seconds)
    (271/341) benchmarking ("map", "*", "Bool", "(false, true)")...
    done (took 0.0206177 seconds)
    (272/341) benchmarking ("broadcast", "*", "Float64", "(false, true)")...
    done (took 0.020012109 seconds)
    (273/341) benchmarking ("skipmissing", "sum", "ComplexF64", 0)...
    done (took 0.048531023 seconds)
    (274/341) benchmarking ("collect", "all", "Int64", 0)...
    done (took 0.025120827 seconds)
    (275/341) benchmarking ("perf_sum3", "BigInt", 1)...
    done (took 0.021141056 seconds)
    (276/341) benchmarking ("skipmissing", "collect", "Union{Nothing, ComplexF64}", 0)...
    done (took 0.041414318 seconds)
    (277/341) benchmarking ("perf_simplecopy", "BigFloat", 1)...
    done (took 0.026439498 seconds)
    (278/341) benchmarking ("perf_countnothing", "ComplexF64", 0)...
    done (took 0.030580152 seconds)
    (279/341) benchmarking ("broadcast", "identity", "Int8", 1)...
    done (took 0.120541819 seconds)
    (280/341) benchmarking ("map", "identity", "Int64", 1)...
    done (took 0.037252967 seconds)
    (281/341) benchmarking ("collect", "all", "Float32", 0)...
    done (took 0.025433171 seconds)
    (282/341) benchmarking ("broadcast", "identity", "Int64", 0)...
    done (took 0.019886942 seconds)
    (283/341) benchmarking ("sort", "Union{Missing, BigInt}", 1)...
    done (took 0.261304156 seconds)
    (284/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int8}", 1)...
    done (took 0.095065044 seconds)
    (285/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float64}", 0)...
    done (took 0.042065405 seconds)
    (286/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int8}", 0)...
    done (took 0.040354226 seconds)
    (287/341) benchmarking ("perf_binaryop", "*", "Float64", "(true, true)")...
    done (took 0.020931626 seconds)
    (288/341) benchmarking ("perf_sum", "Bool", 0)...
    done (took 0.031660254 seconds)
    (289/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, true)")...
    done (took 0.020796392 seconds)
    (290/341) benchmarking ("broadcast", "abs", "BigInt", 1)...
    done (took 0.021200014 seconds)
    (291/341) benchmarking ("broadcast", "abs", "Float64", 0)...
    done (took 0.019878107 seconds)
    (292/341) benchmarking ("skipmissing", "sum", "Bool", 0)...
    done (took 0.047345385 seconds)
    (293/341) benchmarking ("collect", "all", "Int8", 0)...
    done (took 0.025612494 seconds)
    (294/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, true)")...
    done (took 0.0208787 seconds)
    (295/341) benchmarking ("broadcast", "abs", "Int8", 0)...
    done (took 0.019858795 seconds)
    (296/341) benchmarking ("broadcast", "*", "Int8", "(false, true)")...
    done (took 0.020166881 seconds)
    (297/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigFloat}", 0)...
    done (took 0.068695483 seconds)
    (298/341) benchmarking ("perf_sum", "Bool", 1)...
    done (took 0.029825395 seconds)
    (299/341) benchmarking ("broadcast", "*", "Int64", "(false, false)")...
    done (took 0.021028199 seconds)
    (300/341) benchmarking ("perf_sum4", "Bool", 0)...
    done (took 0.029080454 seconds)
    (301/341) benchmarking ("broadcast", "abs", "BigFloat", 1)...
    done (took 0.020764875 seconds)
    (302/341) benchmarking ("map", "identity", "Int64", 0)...
    done (took 0.020529286 seconds)
    (303/341) benchmarking ("skipmissing", "sum", "BigInt", 0)...
    done (took 0.047755086 seconds)
    (304/341) benchmarking ("perf_sum2", "BigInt", 1)...
    done (took 0.021216409 seconds)
    (305/341) benchmarking ("map", "identity", "Int8", 1)...
    done (took 0.020504228 seconds)
    (306/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigFloat}", 0)...
    done (took 0.038545698 seconds)
    (307/341) benchmarking ("skipmissing", "collect", "Int64", 0)...
    done (took 0.033088078 seconds)
    (308/341) benchmarking ("sort", "Bool", 0)...
    done (took 0.107211749 seconds)
    (309/341) benchmarking ("perf_sum4", "BigInt", 0)...
    done (took 0.032629287 seconds)
    (310/341) benchmarking ("perf_sum2", "Float32", 0)...
    done (took 0.023797033 seconds)
    (311/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float32}", 0)...
    done (took 0.071793672 seconds)
    (312/341) benchmarking ("broadcast", "identity", "Int8", 0)...
    done (took 0.019965219 seconds)
    (313/341) benchmarking ("map", "identity", "ComplexF64", 1)...
    done (took 0.020551744 seconds)
    (314/341) benchmarking ("perf_binaryop", "*", "Int64", "(true, true)")...
    done (took 0.020888441 seconds)
    (315/341) benchmarking ("sort", "Union{Nothing, Int8}", 0)...
    done (took 0.119133359 seconds)
    (316/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.033909124 seconds)
    (317/341) benchmarking ("map", "*", "BigFloat", "(true, true)")...
    done (took 0.022152755 seconds)
    (318/341) benchmarking ("map", "abs", "Int64", 1)...
    done (took 0.020517137 seconds)
    (319/341) benchmarking ("skipmissing", "sum", "Int64", 0)...
    done (took 0.02819886 seconds)
    (320/341) benchmarking ("perf_countnothing", "ComplexF64", 1)...
    done (took 0.029740078 seconds)
    (321/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float64}", 0)...
    done (took 0.074297525 seconds)
    (322/341) benchmarking ("perf_sum3", "Int8", 0)...
    done (took 0.026907773 seconds)
    (323/341) benchmarking ("perf_sum4", "BigInt", 1)...
    done (took 0.024014462 seconds)
    (324/341) benchmarking ("perf_sum2", "Bool", 0)...
    done (took 0.028340138 seconds)
    (325/341) benchmarking ("broadcast", "abs", "Bool", 1)...
    done (took 0.019899548 seconds)
    (326/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, true)")...
    done (took 0.02079456 seconds)
    (327/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float64}", 1)...
    done (took 0.047232688 seconds)
    (328/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int8}", 1)...
    done (took 0.04927744 seconds)
    (329/341) benchmarking ("map", "abs", "BigInt", 1)...
    done (took 0.021756789 seconds)
    (330/341) benchmarking ("perf_countnothing", "BigFloat", 0)...
    done (took 0.024213058 seconds)
    (331/341) benchmarking ("map", "abs", "Int8", 0)...
    done (took 0.020425082 seconds)
    (332/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, false)")...
    done (took 0.020784039 seconds)
    (333/341) benchmarking ("sort", "Float64", 0)...
    done (took 0.280303844 seconds)
    (334/341) benchmarking ("perf_sum2", "Int8", 1)...
    done (took 0.032718197 seconds)
    (335/341) benchmarking ("perf_sum", "ComplexF64", 1)...
    done (took 0.025664653 seconds)
    (336/341) benchmarking ("sort", "Int8", 0)...
    done (took 0.107724099 seconds)
    (337/341) benchmarking ("collect", "filter", "BigInt", 0)...
    done (took 0.022171374 seconds)
    (338/341) benchmarking ("perf_sum4", "Int64", 0)...
    done (took 0.028490038 seconds)
    (339/341) benchmarking ("broadcast", "identity", "ComplexF64", 0)...
    done (took 0.019528993 seconds)
    (340/341) benchmarking ("sort", "Union{Missing, Float64}", 1)...
    done (took 0.490335782 seconds)
    (341/341) benchmarking ("collect", "all", "BigFloat", 1)...
    done (took 0.024629531 seconds)
  done (took 22.460667753 seconds)
done (took 23.259884903 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.15346476 seconds)
  (2/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.033724805 seconds)
  (3/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.040342359 seconds)
  (4/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.028720331 seconds)
  (5/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.032084918 seconds)
  (6/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.031885893 seconds)
  (7/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.042410595 seconds)
  (8/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.029608226 seconds)
  (9/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.032689133 seconds)
  (10/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.039633381 seconds)
  (11/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.14249099 seconds)
  (12/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.020075664 seconds)
  (13/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.02755597 seconds)
  (14/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.034177439 seconds)
  (15/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.028461579 seconds)
  (16/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.032639313 seconds)
  (17/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.031496231 seconds)
  (18/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.03223171 seconds)
  (19/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.020557628 seconds)
  (20/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.03249276 seconds)
  (21/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.031106354 seconds)
  (22/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.031588248 seconds)
  (23/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.028873206 seconds)
  (24/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.031825002 seconds)
  (25/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.020511318 seconds)
  (26/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.028523406 seconds)
  (27/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.149761559 seconds)
  (28/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.034951849 seconds)
  (29/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.030190449 seconds)
  (30/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.02959493 seconds)
  (31/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.027608279 seconds)
  (32/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.042049339 seconds)
  (33/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.027598038 seconds)
  (34/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.027073075 seconds)
  (35/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.029450289 seconds)
  (36/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.030733624 seconds)
  (37/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.030114303 seconds)
  (38/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.026508363 seconds)
  (39/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.149503298 seconds)
  (40/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.025689216 seconds)
  (41/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.02043745 seconds)
  (42/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.031896958 seconds)
  (43/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.027204727 seconds)
  (44/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.027780265 seconds)
  (45/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.028596735 seconds)
  (46/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.030991949 seconds)
  (47/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.025525586 seconds)
  (48/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.034430693 seconds)
  (49/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.028647186 seconds)
  (50/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.039798991 seconds)
  (51/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.149375556 seconds)
  (52/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.028732172 seconds)
  (53/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.030198036 seconds)
  (54/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.02842717 seconds)
  (55/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.025385311 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.029304398 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.029946339 seconds)
  (58/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.030649953 seconds)
  (59/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.025335791 seconds)
  (60/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.039000403 seconds)
  (61/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.028450467 seconds)
  (62/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.027859498 seconds)
  (63/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.019834887 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.028450268 seconds)
  (65/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.027137706 seconds)
  (66/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.027415094 seconds)
  (67/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.019101369 seconds)
  (68/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.028486399 seconds)
  (69/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.019841454 seconds)
  (70/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.019782025 seconds)
  (71/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.028139147 seconds)
  (72/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.028360347 seconds)
  (73/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.026758812 seconds)
  (74/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.024874014 seconds)
  (75/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.028046533 seconds)
  (76/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.019760464 seconds)
  (77/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.027658356 seconds)
  (78/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.03887888 seconds)
  (79/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.026803316 seconds)
  (80/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.028439987 seconds)
  (81/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.020172571 seconds)
  (82/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.025294245 seconds)
  (83/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.024889204 seconds)
  (84/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.020330634 seconds)
  (85/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.028648178 seconds)
  (86/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.030934007 seconds)
  (87/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.028795192 seconds)
  (88/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.020299653 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.028068011 seconds)
  (90/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.039173676 seconds)
  (91/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.026389836 seconds)
  (92/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.019735708 seconds)
  (93/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.030747127 seconds)
  (94/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.028430157 seconds)
  (95/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.028220864 seconds)
  (96/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.019822372 seconds)
  (97/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.028224591 seconds)
  (98/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.028396441 seconds)
  (99/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.027653183 seconds)
  (100/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.019763928 seconds)
  (101/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.018992053 seconds)
  (102/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.02840945 seconds)
  (103/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.025146201 seconds)
  (104/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.028488285 seconds)
  (105/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.020237754 seconds)
  (106/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.028330805 seconds)
  (107/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.028343518 seconds)
  (108/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.019195592 seconds)
  (109/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.028389952 seconds)
  (110/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.026908642 seconds)
  (111/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.028802852 seconds)
  (112/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.030590964 seconds)
  (113/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.028347626 seconds)
  (114/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.031052324 seconds)
  (115/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.020313404 seconds)
  (116/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.019006171 seconds)
  (117/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.029527772 seconds)
  (118/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.020139578 seconds)
  (119/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.028516151 seconds)
  (120/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.027745292 seconds)
  (121/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.025192954 seconds)
  (122/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.027575601 seconds)
  (123/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.020326613 seconds)
  (124/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.027600773 seconds)
  (125/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.028399236 seconds)
  (126/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.025862095 seconds)
  (127/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.020202637 seconds)
  (128/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.020292553 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.020174088 seconds)
  (130/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.028568305 seconds)
  (131/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.026960172 seconds)
  (132/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.019067858 seconds)
  (133/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.019760032 seconds)
  (134/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.028562637 seconds)
  (135/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.028307499 seconds)
  (136/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.027667488 seconds)
  (137/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.028058502 seconds)
  (138/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.028402129 seconds)
  (139/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.020321015 seconds)
  (140/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.025775742 seconds)
  (141/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.025283939 seconds)
  (142/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.028416932 seconds)
  (143/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.0279055 seconds)
  (144/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.020131655 seconds)
  (145/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.027885436 seconds)
  (146/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.027827927 seconds)
  (147/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.028629688 seconds)
  (148/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.025232547 seconds)
  (149/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.028525751 seconds)
  (150/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.020399185 seconds)
  (151/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.028467269 seconds)
  (152/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.026869118 seconds)
done (took 5.676373123 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.07720293 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.064933792 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.178999194 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.145485605 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.034051213 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.034615128 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.025487222 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.041213801 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.027359515 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.046175116 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.045900534 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.043453608 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.163848587 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.04110534 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.020354633 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.032397513 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.02076543 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.048130172 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.145618306 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.045304693 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.063867976 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.019081986 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.036855764 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.039141167 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.033187034 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.039293909 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.044489411 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.021336152 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.038345718 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.03797655 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.047379619 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.022848972 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.020688691 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.040343507 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.036879755 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.029572973 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.020068781 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.02737925 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.032351569 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.020198568 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.064742926 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.039158083 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.027289761 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.027499259 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.021078105 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.035434414 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.020977815 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.02877775 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.035085656 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.027078515 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.03339937 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.037866434 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.022526384 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.038759196 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.019371848 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.028145867 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.027810604 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.020099296 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.021014638 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.020166995 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.020143488 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.023301219 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.033395333 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.039880859 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.024441499 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.028059116 seconds)
  done (took 3.575825468 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.047385895 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.067305734 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.03510666 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.035416839 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.020110781 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.020595709 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.020538354 seconds)
  done (took 1.138937457 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.093415245 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.138026069 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.145843294 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.147317282 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.159167206 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.145629322 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.033388438 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.050998597 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.055880534 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.158664278 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.154523777 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.148507128 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.024752489 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.033311692 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.053216555 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.151560669 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.033689293 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.028146215 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.142866411 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.149608421 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.025843089 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.052344067 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.033603891 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.023636663 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.147527742 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.139836282 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.024724936 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.062783662 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.023288333 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.021117013 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.021081277 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.043957467 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.139563333 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.036621612 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.021412374 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.020100093 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.137180281 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.021746254 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.13945849 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.028200084 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.139596508 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.023832899 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.023877398 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.021545164 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.022485339 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.14255934 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.022554765 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.021291376 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.020792253 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.141853816 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.032368718 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.140180028 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.022761278 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.026424788 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.028290343 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.027914543 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.028257108 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.021616066 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.142881244 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.031524525 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.023048275 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.151131647 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.150208392 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.140015001 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.151290634 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.030277388 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.141127635 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.139923393 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.021475328 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.029527915 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.022235623 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.154298647 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.025273268 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.023798645 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.019826226 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.028654931 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.159211761 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.158864821 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.15849091 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.035807483 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.02301807 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.022051121 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.156169766 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.15913973 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.027166946 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.021712269 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.021862854 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.037318122 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.046571475 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.024029881 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.02652276 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.021829028 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.032503879 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.024158233 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.023541905 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.15396291 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.020963409 seconds)
  done (took 7.777467222 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.039669674 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.02163979 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.021229244 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.021653901 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.021825735 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.021771485 seconds)
  done (took 1.124624166 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.049276574 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.022254332 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.034805525 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.022047145 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.045245507 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.135762752 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.135721273 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.023233163 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.038805377 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.034238161 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.135640324 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.138723101 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.138102849 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.023264981 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.135542779 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.033831145 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.135999502 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.026831882 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.033150149 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.02326942 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.032720281 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.022839611 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.023177192 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.151123357 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.017198972 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.033496022 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.031627239 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.034506589 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.034057577 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.023125873 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.022939294 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.016873545 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.02799105 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.022869302 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.137541249 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.028396608 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.02227339 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.01798281 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.026455624 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.016779903 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.139509301 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.023503593 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.026782021 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.017989828 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.022877764 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.028252932 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.018044286 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.032326329 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.138007717 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.018272575 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.017997992 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.02254489 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.016908783 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.017844881 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.028162091 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.023013956 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.017875551 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.138612017 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.023214467 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.028314484 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.022349638 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.016924645 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.022933682 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.016807576 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.027170668 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.017942981 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.028096262 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.023251769 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.023259227 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.022190631 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.018036323 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.022119538 seconds)
  done (took 4.071144216 seconds)
done (took 18.580668354 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.455635515 seconds)
  done (took 1.350123339 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.024694919 seconds)
  done (took 1.931285032 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 0.051202652 seconds)
  done (took 0.97493523 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.315572619 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.490101798 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.713061551 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.09143161 seconds)
  done (took 2.517521759 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.835353128 seconds)
  done (took 1.772488722 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.214013069 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.178487667 seconds)
  done (took 1.342930656 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.493922408 seconds)
  done (took 1.413045433 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.316628357 seconds)
  done (took 2.243129511 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.205313457 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.135629163 seconds)
  done (took 1.266509419 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.607951468 seconds)
  done (took 1.529316364 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.519290132 seconds)
  done (took 5.443145445 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.193945119 seconds)
  done (took 1.175785073 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.19175324 seconds)
  done (took 1.117596399 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 0.715338474 seconds)
  done (took 1.639537359 seconds)
done (took 26.650449401 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.043980224 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.037375501 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.037478809 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.034750279 seconds)
  done (took 1.067902756 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.031197559 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.025429976 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.027643666 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.028094326 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.025491435 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.027336218 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.028082481 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.024183578 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.025289794 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.024588867 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.023031138 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.024417604 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.027125714 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.024233097 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.026841517 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.028206593 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.024544683 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.025127416 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.02649427 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.024159985 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.027191643 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.024447153 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.024531851 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.025878605 seconds)
  done (took 1.548736136 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.034672176 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.026002693 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.027739268 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.024923232 seconds)
  done (took 1.042373312 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.033537092 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.031216696 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.039982215 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.040495891 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.030979125 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.031521702 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.038324154 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.038590375 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.045516398 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.041371704 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.022112788 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.021800938 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.020934466 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.035854684 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.037754639 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.016311147 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.017579258 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.031744889 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.030706326 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.033523282 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.023978737 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.019624444 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.031060092 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.031423892 seconds)
  done (took 1.67098679 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.038271421 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.019783599 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.036569434 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.044320192 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.044476917 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.019613073 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.033914881 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.04506591 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.083951159 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.019702518 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.025707207 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.019707309 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.057588439 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.019613839 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.035017988 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.065404984 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.068166719 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.023860497 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.050700175 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.019718777 seconds)
  done (took 1.712912558 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.028978397 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.024567512 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.025200903 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.019482229 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.0308613 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.026931125 seconds)
  done (took 1.092693483 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.024442463 seconds)
    (2/12) benchmarking ("push_single!", 256)...
    done (took 0.021590016 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.021414275 seconds)
    (4/12) benchmarking ("push_multiple!", 256)...
    done (took 0.025672137 seconds)
    (5/12) benchmarking ("push_single!", 2048)...
    done (took 0.021286772 seconds)
    (6/12) benchmarking ("push_single!", 8)...
    done (took 0.021181531 seconds)
    (7/12) benchmarking ("prerend!", 2048)...
    done (took 0.021209088 seconds)
    (8/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.020126578 seconds)
    (9/12) benchmarking ("push_multiple!", 8)...
    done (took 0.020138571 seconds)
    (10/12) benchmarking ("append!", 2048)...
    done (took 0.02096411 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.020926893 seconds)
    (12/12) benchmarking ("prerend!", 8)...
    done (took 0.021299441 seconds)
  done (took 1.190542914 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.165711575 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.027222206 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.028472776 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.020304465 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.021911772 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.021001198 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.036143618 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.022975564 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.039094778 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.020838583 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.021145026 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.023360596 seconds)
  done (took 1.378780727 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.061202797 seconds)
    (2/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.065883177 seconds)
    (3/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.098765437 seconds)
    (4/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075201686 seconds)
    (5/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.0805755 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.051077261 seconds)
    (7/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.198888089 seconds)
    (8/608) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.033739167 seconds)
    (9/608) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.115978081 seconds)
    (10/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.090948006 seconds)
    (11/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077704459 seconds)
    (12/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.046488645 seconds)
    (13/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.040221244 seconds)
    (14/608) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.023911993 seconds)
    (15/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.055938618 seconds)
    (16/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.073452965 seconds)
    (17/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.090565503 seconds)
    (18/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.027199359 seconds)
    (19/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.074880113 seconds)
    (20/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.239249586 seconds)
    (21/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.086661987 seconds)
    (22/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.086809864 seconds)
    (23/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103352645 seconds)
    (24/608) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078954043 seconds)
    (25/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.047392716 seconds)
    (26/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103509812 seconds)
    (27/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.050890828 seconds)
    (28/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.05844038 seconds)
    (29/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.077225091 seconds)
    (30/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.083176772 seconds)
    (31/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077618145 seconds)
    (32/608) benchmarking ("sumvector_view", "Matrix{Int64}")...
    done (took 0.057961412 seconds)
    (33/608) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.025614821 seconds)
    (34/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.025353469 seconds)
    (35/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.116051817 seconds)
    (36/608) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.057887852 seconds)
    (37/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.075340924 seconds)
    (38/608) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.047718473 seconds)
    (39/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.060618728 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.044078735 seconds)
    (41/608) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.085031531 seconds)
    (42/608) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.024613625 seconds)
    (43/608) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.038733722 seconds)
    (44/608) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.06637622 seconds)
    (45/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.042964545 seconds)
    (46/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.092533179 seconds)
    (47/608) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.049430459 seconds)
    (48/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.074179513 seconds)
    (49/608) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.036651972 seconds)
    (50/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.098519954 seconds)
    (51/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.08803347 seconds)
    (52/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.175985083 seconds)
    (53/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.042760795 seconds)
    (54/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.061509692 seconds)
    (55/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.103009489 seconds)
    (56/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.072027742 seconds)
    (57/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092732802 seconds)
    (58/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.065503747 seconds)
    (59/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.037329686 seconds)
    (60/608) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.077978477 seconds)
    (61/608) benchmarking ("sumlinear_view", "Matrix{Float64}")...
    done (took 0.067247197 seconds)
    (62/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.060597741 seconds)
    (63/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.068263737 seconds)
    (64/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.036395187 seconds)
    (65/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.293671805 seconds)
    (66/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.043290275 seconds)
    (67/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.079053147 seconds)
    (68/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.069315005 seconds)
    (69/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.045723632 seconds)
    (70/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.049166791 seconds)
    (71/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.065490764 seconds)
    (72/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.090396401 seconds)
    (73/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.079836737 seconds)
    (74/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.072421212 seconds)
    (75/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.084828358 seconds)
    (76/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.046324118 seconds)
    (77/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083516048 seconds)
    (78/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.054756968 seconds)
    (79/608) benchmarking ("mapr_access", "Matrix{Int64}")...
    done (took 0.077737045 seconds)
    (80/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.056943697 seconds)
    (81/608) benchmarking ("sumcartesian", "Matrix{Float64}")...
    done (took 0.026551193 seconds)
    (82/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.075727316 seconds)
    (83/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.081263097 seconds)
    (84/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.051922177 seconds)
    (85/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.053754198 seconds)
    (86/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.082758603 seconds)
    (87/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.047247978 seconds)
    (88/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.030242313 seconds)
    (89/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.044395588 seconds)
    (90/608) benchmarking ("sumlogical_view", "Matrix{Int64}")...
    done (took 0.073465028 seconds)
    (91/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.034606321 seconds)
    (92/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.064360372 seconds)
    (93/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.039971171 seconds)
    (94/608) benchmarking ("sum", "3dsubarray")...
    done (took 0.08599158 seconds)
    (95/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.091041762 seconds)
    (96/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.053396008 seconds)
    (97/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.071015626 seconds)
    (98/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.074295796 seconds)
    (99/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.032973896 seconds)
    (100/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.121990201 seconds)
    (101/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.064416587 seconds)
    (102/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.027485859 seconds)
    (103/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.074090161 seconds)
    (104/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.06919857 seconds)
    (105/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.108736319 seconds)
    (106/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.052534712 seconds)
    (107/608) benchmarking ("sumcartesian", "Matrix{Int64}")...
    done (took 0.029610946 seconds)
    (108/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.055357979 seconds)
    (109/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.059038894 seconds)
    (110/608) benchmarking "5d"...
    done (took 0.114705816 seconds)
    (111/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.0605729 seconds)
    (112/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.03602811 seconds)
    (113/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.074216629 seconds)
    (114/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.101639765 seconds)
    (115/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.051443238 seconds)
    (116/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.258213151 seconds)
    (117/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.051734164 seconds)
    (118/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101975089 seconds)
    (119/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.074056779 seconds)
    (120/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.042040426 seconds)
    (121/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.030872984 seconds)
    (122/608) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.051263493 seconds)
    (123/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.071632224 seconds)
    (124/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.070101245 seconds)
    (125/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.084272647 seconds)
    (126/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.05236179 seconds)
    (127/608) benchmarking ("sumrange_view", "Matrix{Float64}")...
    done (took 0.039483621 seconds)
    (128/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.042268299 seconds)
    (129/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.080020284 seconds)
    (130/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.052335725 seconds)
    (131/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.035877094 seconds)
    (132/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.077411479 seconds)
    (133/608) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.060983949 seconds)
    (134/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.030575314 seconds)
    (135/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.047522885 seconds)
    (136/608) benchmarking ("sumcolon_view", "Matrix{Float64}")...
    done (took 0.032572513 seconds)
    (137/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.270033737 seconds)
    (138/608) benchmarking ("sumrange", "Matrix{Float64}")...
    done (took 0.040762998 seconds)
    (139/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.091383218 seconds)
    (140/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.086453355 seconds)
    (141/608) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.029893938 seconds)
    (142/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.060226289 seconds)
    (143/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.05058801 seconds)
    (144/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.0592476 seconds)
    (145/608) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.05475088 seconds)
    (146/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.072580122 seconds)
    (147/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.093716593 seconds)
    (148/608) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.137389483 seconds)
    (149/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.044496851 seconds)
    (150/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.037657329 seconds)
    (151/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.063360815 seconds)
    (152/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097246271 seconds)
    (153/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.079567123 seconds)
    (154/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.045069394 seconds)
    (155/608) benchmarking ("sumcolon", "Matrix{Int64}")...
    done (took 0.038343442 seconds)
    (156/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.053409384 seconds)
    (157/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.064569484 seconds)
    (158/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.054119659 seconds)
    (159/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.077264415 seconds)
    (160/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.047790038 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.065104756 seconds)
    (162/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.057018504 seconds)
    (163/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.095398786 seconds)
    (164/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.100575311 seconds)
    (165/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.056685001 seconds)
    (166/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.060348114 seconds)
    (167/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.061264762 seconds)
    (168/608) benchmarking "ind2sub"...
    done (took 0.078521045 seconds)
    (169/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.029507555 seconds)
    (170/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.113333552 seconds)
    (171/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.058964302 seconds)
    (172/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.077905738 seconds)
    (173/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.041994624 seconds)
    (174/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.097638074 seconds)
    (175/608) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.071098096 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.062906958 seconds)
    (177/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.041319591 seconds)
    (178/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.059833749 seconds)
    (179/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.058830363 seconds)
    (180/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.061772649 seconds)
    (181/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.100159464 seconds)
    (182/608) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.048477587 seconds)
    (183/608) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.026691384 seconds)
    (184/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.049618091 seconds)
    (185/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105394559 seconds)
    (186/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.032089222 seconds)
    (187/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076404835 seconds)
    (188/608) benchmarking ("sumcartesian_view", "Matrix{Float64}")...
    done (took 0.045524606 seconds)
    (189/608) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.047528927 seconds)
    (190/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.072748614 seconds)
    (191/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.049856444 seconds)
    (192/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.038107365 seconds)
    (193/608) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.023322517 seconds)
    (194/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.085285879 seconds)
    (195/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.120821554 seconds)
    (196/608) benchmarking ("sumelt_boundscheck", "Matrix{Float64}")...
    done (took 0.025024566 seconds)
    (197/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.074654854 seconds)
    (198/608) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.072143984 seconds)
    (199/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.062738451 seconds)
    (200/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.083525021 seconds)
    (201/608) benchmarking ("sumelt", "1:100000")...
    done (took 0.024761466 seconds)
    (202/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.089734408 seconds)
    (203/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.098290659 seconds)
    (204/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08687821 seconds)
    (205/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.111728481 seconds)
    (206/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.31895254 seconds)
    (207/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.072735345 seconds)
    (208/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.070816311 seconds)
    (209/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.075738458 seconds)
    (210/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.066543473 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.033593837 seconds)
    (212/608) benchmarking ("sumlogical", "Matrix{Float64}")...
    done (took 0.078868937 seconds)
    (213/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.087978545 seconds)
    (214/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.047359202 seconds)
    (215/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.045892993 seconds)
    (216/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.089148128 seconds)
    (217/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.072172291 seconds)
    (218/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.088506249 seconds)
    (219/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.067454674 seconds)
    (220/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07597941 seconds)
    (221/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.058521916 seconds)
    (222/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.06058339 seconds)
    (223/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.058082301 seconds)
    (224/608) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.053852322 seconds)
    (225/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.097072036 seconds)
    (226/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.075800474 seconds)
    (227/608) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.079086977 seconds)
    (228/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.038161879 seconds)
    (229/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.066858099 seconds)
    (230/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.074000394 seconds)
    (231/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.093570033 seconds)
    (232/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.035854459 seconds)
    (233/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.097744984 seconds)
    (234/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.039834428 seconds)
    (235/608) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.100118758 seconds)
    (236/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.033250252 seconds)
    (237/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.083254225 seconds)
    (238/608) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.03086872 seconds)
    (239/608) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.124463652 seconds)
    (240/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.034146996 seconds)
    (241/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.055004163 seconds)
    (242/608) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.024175026 seconds)
    (243/608) benchmarking ("sumeach", "1:100000")...
    done (took 0.027037948 seconds)
    (244/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.099041706 seconds)
    (245/608) benchmarking ("sumvector", "1:100000")...
    done (took 0.078278297 seconds)
    (246/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.061053614 seconds)
    (247/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.054880265 seconds)
    (248/608) benchmarking ("sumlogical", "1:100000")...
    done (took 0.091700815 seconds)
    (249/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.094342011 seconds)
    (250/608) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.032403188 seconds)
    (251/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.068502116 seconds)
    (252/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.071007791 seconds)
    (253/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.059929718 seconds)
    (254/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.071680686 seconds)
    (255/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.065453541 seconds)
    (256/608) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.044770759 seconds)
    (257/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.053351659 seconds)
    (258/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.064198985 seconds)
    (259/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.041332349 seconds)
    (260/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.03754719 seconds)
    (261/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086415493 seconds)
    (262/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.053701823 seconds)
    (263/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.096070422 seconds)
    (264/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.038900582 seconds)
    (265/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.030006156 seconds)
    (266/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.09860039 seconds)
    (267/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.06974898 seconds)
    (268/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.052473179 seconds)
    (269/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.032086571 seconds)
    (270/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.067976903 seconds)
    (271/608) benchmarking "4d"...
    done (took 0.08392942 seconds)
    (272/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.049440892 seconds)
    (273/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.04252669 seconds)
    (274/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.080539459 seconds)
    (275/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.063056628 seconds)
    (276/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104343605 seconds)
    (277/608) benchmarking ("sumcartesian_view", "Matrix{Int64}")...
    done (took 0.047144321 seconds)
    (278/608) benchmarking ("sumvector", "Matrix{Float64}")...
    done (took 0.061062274 seconds)
    (279/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.08564652 seconds)
    (280/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.038028212 seconds)
    (281/608) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.05376883 seconds)
    (282/608) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.025014851 seconds)
    (283/608) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.046517441 seconds)
    (284/608) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.032165678 seconds)
    (285/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092730524 seconds)
    (286/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.032175262 seconds)
    (287/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.080570172 seconds)
    (288/608) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.024035479 seconds)
    (289/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.091147135 seconds)
    (290/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.04543508 seconds)
    (291/608) benchmarking ("sumvector_view", "Matrix{Float64}")...
    done (took 0.054955018 seconds)
    (292/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.063464534 seconds)
    (293/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.070385138 seconds)
    (294/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.096446032 seconds)
    (295/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.051234589 seconds)
    (296/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104687017 seconds)
    (297/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.048564398 seconds)
    (298/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.078556658 seconds)
    (299/608) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07037811 seconds)
    (300/608) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.075932023 seconds)
    (301/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.044073921 seconds)
    (302/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.060233456 seconds)
    (303/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.063153122 seconds)
    (304/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.082304595 seconds)
    (305/608) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.050401555 seconds)
    (306/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.085044144 seconds)
    (307/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.110477868 seconds)
    (308/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.062760657 seconds)
    (309/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.103928619 seconds)
    (310/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.048343967 seconds)
    (311/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.081683767 seconds)
    (312/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.064761833 seconds)
    (313/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.082874893 seconds)
    (314/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.074275047 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.158186617 seconds)
    (316/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.10150839 seconds)
    (317/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074822115 seconds)
    (318/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.07180974 seconds)
    (319/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.030879234 seconds)
    (320/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.053937192 seconds)
    (321/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.071273792 seconds)
    (322/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.069154137 seconds)
    (323/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.142518234 seconds)
    (324/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.08822544 seconds)
    (325/608) benchmarking ("sumlinear", "Matrix{Int64}")...
    done (took 0.027455417 seconds)
    (326/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.063924448 seconds)
    (327/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.050282644 seconds)
    (328/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.066320013 seconds)
    (329/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.068578456 seconds)
    (330/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.036644652 seconds)
    (331/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.105669399 seconds)
    (332/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.060831169 seconds)
    (333/608) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.043407866 seconds)
    (334/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.069219756 seconds)
    (335/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.049632042 seconds)
    (336/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.06267129 seconds)
    (337/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.032181151 seconds)
    (338/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.060491865 seconds)
    (339/608) benchmarking ("sumcolon", "1:100000")...
    done (took 0.055159248 seconds)
    (340/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.053728551 seconds)
    (341/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.055226502 seconds)
    (342/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.073995076 seconds)
    (343/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.089832911 seconds)
    (344/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.069170157 seconds)
    (345/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.106036071 seconds)
    (346/608) benchmarking "3d"...
    done (took 0.058989379 seconds)
    (347/608) benchmarking ("sum", "3darray")...
    done (took 0.047173668 seconds)
    (348/608) benchmarking ("sumlogical", "Matrix{Int64}")...
    done (took 0.077394116 seconds)
    (349/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.077358885 seconds)
    (350/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.074806932 seconds)
    (351/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.039584596 seconds)
    (352/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.041604003 seconds)
    (353/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.433066915 seconds)
    (354/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.072420214 seconds)
    (355/608) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.08202656 seconds)
    (356/608) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.052579624 seconds)
    (357/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.064336479 seconds)
    (358/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.067443538 seconds)
    (359/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.055665215 seconds)
    (360/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.088842365 seconds)
    (361/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.063256169 seconds)
    (362/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.082734098 seconds)
    (363/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.035205969 seconds)
    (364/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.03187029 seconds)
    (365/608) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.023446799 seconds)
    (366/608) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.026917088 seconds)
    (367/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.080437852 seconds)
    (368/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.068141229 seconds)
    (369/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.06647448 seconds)
    (370/608) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.060965837 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Matrix{Int64}")...
    done (took 0.027120406 seconds)
    (372/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.061648754 seconds)
    (373/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.06390186 seconds)
    (374/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.027089205 seconds)
    (375/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.041114232 seconds)
    (376/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.050367271 seconds)
    (377/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.054618207 seconds)
    (378/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.038204633 seconds)
    (379/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.06204043 seconds)
    (380/608) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.070887669 seconds)
    (381/608) benchmarking ("sumrange", "Matrix{Int64}")...
    done (took 0.049381243 seconds)
    (382/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.057113581 seconds)
    (383/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.059652406 seconds)
    (384/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.10031317 seconds)
    (385/608) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.053504831 seconds)
    (386/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.044097746 seconds)
    (387/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.101386147 seconds)
    (388/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.108654234 seconds)
    (389/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.04408216 seconds)
    (390/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.049608011 seconds)
    (391/608) benchmarking ("sumelt", "Matrix{Int64}")...
    done (took 0.02620583 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.034038522 seconds)
    (393/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.080556366 seconds)
    (394/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.101928216 seconds)
    (395/608) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.107121462 seconds)
    (396/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.033918278 seconds)
    (397/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.041312306 seconds)
    (398/608) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.03926426 seconds)
    (399/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.042753077 seconds)
    (400/608) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.026044573 seconds)
    (401/608) benchmarking ("sumeach_view", "Matrix{Float64}")...
    done (took 0.042709363 seconds)
    (402/608) benchmarking ("sumcolon", "Matrix{Float64}")...
    done (took 0.044348331 seconds)
    (403/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.060951871 seconds)
    (404/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.053684824 seconds)
    (405/608) benchmarking ("sumlogical_view", "Matrix{Float64}")...
    done (took 0.070650843 seconds)
    (406/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.060419493 seconds)
    (407/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.030957335 seconds)
    (408/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.064290887 seconds)
    (409/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.055658724 seconds)
    (410/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.048454307 seconds)
    (411/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.063530629 seconds)
    (412/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.075020714 seconds)
    (413/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.083627269 seconds)
    (414/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.096579394 seconds)
    (415/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.069558219 seconds)
    (416/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.073470086 seconds)
    (417/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.031696163 seconds)
    (418/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.035815851 seconds)
    (419/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.031668057 seconds)
    (420/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.03510155 seconds)
    (421/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.063546969 seconds)
    (422/608) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.034274953 seconds)
    (423/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.031614296 seconds)
    (424/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.107710577 seconds)
    (425/608) benchmarking ("sumcolon_view", "Matrix{Int64}")...
    done (took 0.047750617 seconds)
    (426/608) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.069509692 seconds)
    (427/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.07210051 seconds)
    (428/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.04434871 seconds)
    (429/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.030980147 seconds)
    (430/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.093889019 seconds)
    (431/608) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.024553905 seconds)
    (432/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.095416596 seconds)
    (433/608) benchmarking ("sumeach", "Matrix{Int64}")...
    done (took 0.02694764 seconds)
    (434/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.190267801 seconds)
    (435/608) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.036723158 seconds)
    (436/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.032744851 seconds)
    (437/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.048114976 seconds)
    (438/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.092261279 seconds)
    (439/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.060443369 seconds)
    (440/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.062245261 seconds)
    (441/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.322207847 seconds)
    (442/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.065775662 seconds)
    (443/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.143959828 seconds)
    (444/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.113749703 seconds)
    (445/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.040548622 seconds)
    (446/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.096085022 seconds)
    (447/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.030077847 seconds)
    (448/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.030968621 seconds)
    (449/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.030566955 seconds)
    (450/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.063098845 seconds)
    (451/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.044786441 seconds)
    (452/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.073131641 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.100558704 seconds)
    (454/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.04284355 seconds)
    (455/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.056204257 seconds)
    (456/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.032717994 seconds)
    (457/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.099259086 seconds)
    (458/608) benchmarking ("sumeach_view", "Matrix{Int64}")...
    done (took 0.050280764 seconds)
    (459/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.056295827 seconds)
    (460/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.040110493 seconds)
    (461/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.033785567 seconds)
    (462/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09976756 seconds)
    (463/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.03422174 seconds)
    (464/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.041716308 seconds)
    (465/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.044603977 seconds)
    (466/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.067711178 seconds)
    (467/608) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.026757284 seconds)
    (468/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.056396244 seconds)
    (469/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.038076281 seconds)
    (470/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.034185824 seconds)
    (471/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.147502541 seconds)
    (472/608) benchmarking "sub2ind"...
    done (took 0.666790047 seconds)
    (473/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.051792852 seconds)
    (474/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.02896476 seconds)
    (475/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.051765126 seconds)
    (476/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.098021293 seconds)
    (477/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090543094 seconds)
    (478/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.051188788 seconds)
    (479/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.06687702 seconds)
    (480/608) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.073953169 seconds)
    (481/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.060411689 seconds)
    (482/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.049313194 seconds)
    (483/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.069862835 seconds)
    (484/608) benchmarking "6d"...
    done (took 0.155915362 seconds)
    (485/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.028423687 seconds)
    (486/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.051226341 seconds)
    (487/608) benchmarking ("sumrange", "1:100000")...
    done (took 0.053475324 seconds)
    (488/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.058826912 seconds)
    (489/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.065483218 seconds)
    (490/608) benchmarking ("sumrange_view", "Matrix{Int64}")...
    done (took 0.051893895 seconds)
    (491/608) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.041580286 seconds)
    (492/608) benchmarking ("sumvector", "Matrix{Int64}")...
    done (took 0.050894069 seconds)
    (493/608) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.041005203 seconds)
    (494/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.034066277 seconds)
    (495/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.070846767 seconds)
    (496/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.042716326 seconds)
    (497/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.053831784 seconds)
    (498/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.063172963 seconds)
    (499/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.038947055 seconds)
    (500/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.046444046 seconds)
    (501/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.088857571 seconds)
    (502/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.058548549 seconds)
    (503/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.03964881 seconds)
    (504/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.045627541 seconds)
    (505/608) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.066885668 seconds)
    (506/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.042593903 seconds)
    (507/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.064162359 seconds)
    (508/608) benchmarking ("sumelt", "Matrix{Float64}")...
    done (took 0.024466138 seconds)
    (509/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.066769884 seconds)
    (510/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.044857248 seconds)
    (511/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079687915 seconds)
    (512/608) benchmarking ("sumlinear_view", "Matrix{Int64}")...
    done (took 0.05566873 seconds)
    (513/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.221275074 seconds)
    (514/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.079792015 seconds)
    (515/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.048092697 seconds)
    (516/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088989283 seconds)
    (517/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.0608149 seconds)
    (518/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.075501338 seconds)
    (519/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.040832183 seconds)
    (520/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.031676945 seconds)
    (521/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.079358301 seconds)
    (522/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.04398257 seconds)
    (523/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.031552866 seconds)
    (524/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.099365783 seconds)
    (525/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.049980167 seconds)
    (526/608) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.057920891 seconds)
    (527/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.062202957 seconds)
    (528/608) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.049860968 seconds)
    (529/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.064079407 seconds)
    (530/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.068784969 seconds)
    (531/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.066735327 seconds)
    (532/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.05578762 seconds)
    (533/608) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.032543945 seconds)
    (534/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.053897876 seconds)
    (535/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.061956138 seconds)
    (536/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.040912061 seconds)
    (537/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.03389909 seconds)
    (538/608) benchmarking ("sumlinear", "1:100000")...
    done (took 0.027552621 seconds)
    (539/608) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.029791517 seconds)
    (540/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.064359769 seconds)
    (541/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.040199711 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.040776472 seconds)
    (543/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.070973211 seconds)
    (544/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.043622571 seconds)
    (545/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.056940895 seconds)
    (546/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.053139778 seconds)
    (547/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.076941252 seconds)
    (548/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.043757217 seconds)
    (549/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.061041332 seconds)
    (550/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.066390411 seconds)
    (551/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.047458187 seconds)
    (552/608) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090324986 seconds)
    (553/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.05584781 seconds)
    (554/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.084206162 seconds)
    (555/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.133215183 seconds)
    (556/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.08959167 seconds)
    (557/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.085723945 seconds)
    (558/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089841735 seconds)
    (559/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.032716017 seconds)
    (560/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.034312542 seconds)
    (561/608) benchmarking ("sumeach", "Matrix{Float64}")...
    done (took 0.023335113 seconds)
    (562/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.069414281 seconds)
    (563/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.034566381 seconds)
    (564/608) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.042230985 seconds)
    (565/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.033701853 seconds)
    (566/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090385105 seconds)
    (567/608) benchmarking "2d"...
    done (took 0.038835053 seconds)
    (568/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.067970349 seconds)
    (569/608) benchmarking "7d"...
    done (took 0.210989758 seconds)
    (570/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.035079614 seconds)
    (571/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.049167601 seconds)
    (572/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.052530502 seconds)
    (573/608) benchmarking ("sumlinear", "Matrix{Float64}")...
    done (took 0.024454988 seconds)
    (574/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.038444946 seconds)
    (575/608) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.066267856 seconds)
    (576/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.041440685 seconds)
    (577/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.034945871 seconds)
    (578/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.068173396 seconds)
    (579/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.036674492 seconds)
    (580/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.084785076 seconds)
    (581/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.064616254 seconds)
    (582/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.055012323 seconds)
    (583/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.053841301 seconds)
    (584/608) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.036824971 seconds)
    (585/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.066974585 seconds)
    (586/608) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.060466629 seconds)
    (587/608) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.086564364 seconds)
    (588/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.055730624 seconds)
    (589/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.030505049 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.084209959 seconds)
    (591/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.063914777 seconds)
    (592/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10459654 seconds)
    (593/608) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.029713941 seconds)
    (594/608) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.037039343 seconds)
    (595/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.237638329 seconds)
    (596/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.057020225 seconds)
    (597/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.084782508 seconds)
    (598/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.03490793 seconds)
    (599/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.109821195 seconds)
    (600/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.09596802 seconds)
    (601/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.05872502 seconds)
    (602/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088272943 seconds)
    (603/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.025456036 seconds)
    (604/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.043777621 seconds)
    (605/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.043927079 seconds)
    (606/608) benchmarking ("mapr_access", "Matrix{Float64}")...
    done (took 0.076893707 seconds)
    (607/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.039094578 seconds)
    (608/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.061540939 seconds)
  done (took 41.93009617 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.13439516 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.129181765 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.078428556 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.089233644 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.246134545 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.256033832 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.111407706 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.078707331 seconds)
  done (took 2.219376436 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hcat", 500)...
    done (took 0.028014234 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.053798041 seconds)
    (3/17) benchmarking ("vcat_setind", 5)...
    done (took 0.035491198 seconds)
    (4/17) benchmarking ("catnd_setind", 500)...
    done (took 0.299097448 seconds)
    (5/17) benchmarking ("vcat", 500)...
    done (took 0.058939981 seconds)
    (6/17) benchmarking ("vcat", 5)...
    done (took 0.021460624 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.028772216 seconds)
    (8/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.036637616 seconds)
    (9/17) benchmarking ("vcat_setind", 500)...
    done (took 0.024889931 seconds)
    (10/17) benchmarking ("hvcat", 5)...
    done (took 0.020933876 seconds)
    (11/17) benchmarking ("hcat_setind", 500)...
    done (took 0.059056877 seconds)
    (12/17) benchmarking ("hcat", 5)...
    done (took 0.02120732 seconds)
    (13/17) benchmarking ("hvcat", 500)...
    done (took 0.025057642 seconds)
    (14/17) benchmarking ("catnd", 500)...
    done (took 0.469955227 seconds)
    (15/17) benchmarking ("hcat_setind", 5)...
    done (took 0.020386141 seconds)
    (16/17) benchmarking ("catnd", 5)...
    done (took 0.025823744 seconds)
    (17/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.025036152 seconds)
  done (took 2.342793289 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.313827975 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.693314821 seconds)
    (3/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 1.250582249 seconds)
    (4/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.38168386 seconds)
    (5/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.105866275 seconds)
    (6/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.564850487 seconds)
    (7/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.029458125 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.034983171 seconds)
    (9/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.635487864 seconds)
    (10/12) benchmarking ("gramschmidt!", 1000)...
    done (took 3.353250063 seconds)
    (11/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.097761712 seconds)
    (12/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.181041727 seconds)
  done (took 17.711173436 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 4)...
    done (took 0.031257272 seconds)
    (2/5) benchmarking ("setindex!", 3)...
    done (took 0.15433148 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.154033313 seconds)
    (4/5) benchmarking ("setindex!", 1)...
    done (took 0.028084213 seconds)
    (5/5) benchmarking ("setindex!", 2)...
    done (took 0.027628375 seconds)
  done (took 1.462208434 seconds)
done (took 77.372896259 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 0.040713426 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 0.123204855 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 0.021024421 seconds)
  done (took 1.24004373 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.157724135 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.153155762 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.153780869 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.156429803 seconds)
  done (took 1.68481109 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.030780243 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.030047807 seconds)
  done (took 1.134919554 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 0.183052753 seconds)
  (6/15) benchmarking "18129"...
  done (took 0.258372125 seconds)
  (7/15) benchmarking "20517"...
  done (took 0.044865555 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.04046992 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.034745628 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.035191532 seconds)
  done (took 1.185168938 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.027275276 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.025010896 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.025086729 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.025610531 seconds)
  done (took 1.16670352 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.135463494 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.019829812 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.022472966 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.02406086 seconds)
  done (took 1.267511068 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 0.040946255 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 0.040009549 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 0.070774525 seconds)
  done (took 1.223914921 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.040030299 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.038895758 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.033583181 seconds)
  done (took 1.182913918 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.064152397 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.050100355 seconds)
  done (took 1.180100944 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.036386922 seconds)
  done (took 1.105891815 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.04884931 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.052479333 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.21596667 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.183108707 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.221175802 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.202858034 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.033834123 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.030845798 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.032560991 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.035554779 seconds)
  done (took 2.125331695 seconds)
done (took 16.091229997 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.036596546 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.142354883 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.269293998 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.042835435 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.609282009 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.266491473 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.677899402 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.043467125 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.053708028 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.022043171 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.038959496 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.586648275 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.683124015 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.102625626 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.667924528 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.095595398 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.76262064 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.022682879 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.021521375 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.022149811 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.661421278 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.021766328 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.022022979 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.022412277 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.759067123 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.410811432 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.022837904 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.095277122 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.021701191 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.02570606 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.393226689 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.024777095 seconds)
  done (took 12.709222448 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.026493017 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.076381372 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.026869381 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.037531906 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.02389156 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.024129951 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.025714684 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.022390641 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.065041278 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.022175014 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.039382735 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.021717432 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.026578348 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.023291054 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.042576668 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.022091256 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.024132427 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.022837931 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.021984424 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.022794118 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.041127917 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.021838674 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.022532577 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.022584094 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.022371402 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.036855145 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.023138419 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.0219147 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.022146864 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.025912767 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.026940205 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.023522407 seconds)
  done (took 2.008727927 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078489101 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.077720934 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.027791454 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.062137765 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.073441729 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.024944983 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.104732072 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.043842378 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.067368811 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.022632579 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.039528279 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.022095644 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.058834987 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.02350738 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.043257421 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.022216509 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.024801739 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.022843384 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.021980238 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.022620569 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.041637857 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.0219918 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.022416681 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.022674716 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.022778809 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.038501052 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.023073366 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.022082751 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.022164804 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.025958504 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.02762012 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.023415325 seconds)
  done (took 2.279470025 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.025980363 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.026364234 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.032002177 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.035392821 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.020596319 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.023183067 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.024310249 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.02074027 seconds)
  done (took 1.297217165 seconds)
done (took 19.382401568 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.035925396 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.022363953 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.025302751 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.046443684 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.028708326 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.143490879 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.024975926 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.027547532 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.025987286 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.025386234 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.027585891 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.019885386 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.024634535 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.024737235 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.026512249 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.020472208 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.147322106 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.025023016 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.145187195 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.146472587 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.02325292 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.026223972 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.028971348 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.145235397 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.145129006 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.145035525 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.029939032 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.02651853 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.026151176 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.023497943 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.143214235 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.146546696 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.024357715 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.14277936 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.020947837 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.020683702 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.025117458 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.022170937 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.149080951 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.029982527 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.022915631 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.029552849 seconds)
  done (took 3.475055739 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.149286757 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.155537849 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.147796584 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.033375223 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.029333309 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.03246379 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.154032247 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.02982135 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.028408939 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.152970387 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.024133007 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.028166137 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.030511141 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.021243685 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.027872509 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.024484094 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.029976238 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.022405181 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.027786312 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.028175725 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.153481906 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.021733765 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.029054254 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.029423445 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.024107466 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.030083771 seconds)
  done (took 2.565510502 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.03086225 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.043823937 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.045864072 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109664843 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.063213526 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.043701944 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.037393241 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.047643005 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.053444894 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.021463101 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.044052869 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.05081803 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.050135257 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.028565036 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.060365528 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.040666406 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.034745905 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.024353299 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.028881828 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.056534037 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.04518437 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.040927886 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.054459713 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.041521589 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.020589613 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.030537637 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.025969727 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.038101647 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.033095489 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.033982831 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.025238227 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.025067671 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.022260366 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.032383846 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.025200768 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.019965664 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.04483911 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.034431463 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.036245491 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.060446564 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.031809496 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.022727051 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.048239906 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.08130985 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.020307366 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.024511023 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.025727017 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.034248037 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.022948189 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.063831317 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.036780424 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.021024525 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.040907218 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.02277399 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.022844671 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.04242619 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.023016661 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.023573957 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.041926799 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.027795126 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.043134013 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.02688775 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.041702135 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.020740329 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.033025752 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.022671578 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.023003036 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.020466313 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.055366836 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.028597259 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.06825512 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.02247293 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.019847575 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.033927454 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.033268737 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.029180643 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.020312664 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.040496358 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.034529437 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.025873901 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.040232223 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.024719359 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.025121288 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.066556364 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.020971823 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.020153131 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.019996311 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.0242724 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.025312823 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.022326435 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.034523072 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.021095618 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.025302919 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.048744516 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.02137649 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.022297794 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.02475514 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.02307741 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.021096043 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.031430903 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.025045751 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.023386356 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.034489281 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.022340172 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.025118601 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.036937917 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.031240017 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.020367664 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.023189425 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.024379444 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.023300012 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.023442113 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.025096541 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.023515187 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.027151725 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.029288437 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.027871732 seconds)
  done (took 5.038794118 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.241772495 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.231415129 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.022492762 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.228737401 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.030572705 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.162694725 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.230830615 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.231777882 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.022449096 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.023193421 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.021535783 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.173510882 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.168974067 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.181114816 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.159906379 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.024267782 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.055119112 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.17925287 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.233757787 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.228756917 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.054080079 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.029359932 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.02441662 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.023388249 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.022727532 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.030732634 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.0388064 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.030685494 seconds)
  done (took 4.214608433 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.030639602 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.06667713 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.025769598 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.04687221 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.039570232 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.022603487 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.024061007 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.022845616 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.039036689 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.02791821 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.022386134 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.026356626 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.025686763 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.02452507 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.02238453 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.028589724 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.032715818 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.021099286 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.025703638 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.026884496 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.033504293 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.046708415 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.026188442 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.022143402 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.025675263 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.022040973 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.027534035 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.031059223 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.021816164 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.021856035 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.019355021 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.030804481 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.037291342 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.023263199 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.02185367 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.022727952 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.022443325 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.022375066 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.022306952 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.020519752 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.020471518 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.02733487 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.020910394 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.027190235 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.035684715 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.024494047 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.023963671 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.024713812 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.024771023 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.019225412 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.025258565 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.025388364 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.024805151 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.03056631 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.024530716 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.024946207 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.02484832 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.037597506 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.028303844 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.021784353 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.021468852 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.020746096 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.024390412 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.028951484 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.038485128 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.024267709 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.020628148 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.022500059 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.023812898 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.035589456 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.021633914 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.028874788 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.019436435 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.022452383 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.024634345 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.025045131 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.023737355 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.020615078 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.02189444 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.02158896 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.022279961 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.021982563 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.021427393 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.024721477 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.020278992 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.020622515 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.022810155 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.024041201 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.027565357 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.021106803 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.025722957 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.023758396 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.020906848 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.024679235 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.027622762 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.025010709 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.039983714 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.03004304 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.02294471 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.020117831 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.039255003 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.024828034 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.021621071 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.024241597 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.030993866 seconds)
  done (took 3.88672346 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.052865001 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.02437021 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.041947868 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.05788688 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.032606587 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.028227253 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.036129128 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.023671382 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.04394727 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.021535355 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.031610052 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.020728003 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.035347792 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.03120568 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.02428022 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.032310422 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.025182343 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.04304931 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.037489815 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.021165234 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.031199161 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.034925802 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.035010348 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.040055958 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.039455435 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.040760219 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.034696387 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.025207344 seconds)
  done (took 2.060840777 seconds)
done (took 22.317127166 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.137993011 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.322098486 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.124939067 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.86355631 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.175705335 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.188178738 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.32162556 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.098679261 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.256869692 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.204045929 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.768348492 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.399745839 seconds)
done (took 60.042037759 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 6.256838118 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.272354121 seconds)
    (2/2) benchmarking "String"...
    done (took 1.352890026 seconds)
  done (took 3.738799571 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 1.545683155 seconds)
    (2/3) benchmarking "different length"...
    done (took 1.107716038 seconds)
    (3/3) benchmarking "different"...
    done (took 1.145162873 seconds)
  done (took 4.888504373 seconds)
  (4/7) benchmarking "replace"...
  done (took 2.484978811 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.886065708 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.422423437 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.095987673 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.112528986 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.756284959 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.263605858 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.792597352 seconds)
  done (took 27.428418065 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.157181803 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.363269731 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.500819574 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.595336057 seconds)
  done (took 17.797802209 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 1.558852697 seconds)
    (2/4) benchmarking "equal"...
    done (took 1.617721775 seconds)
    (3/4) benchmarking "different length"...
    done (took 1.616499476 seconds)
    (4/4) benchmarking "different"...
    done (took 1.724628114 seconds)
  done (took 7.739209694 seconds)
done (took 71.529554763 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.094896352 seconds)
    (2/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 6.38863224 seconds)
    (3/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.128790816 seconds)
    (4/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.286248772 seconds)
    (5/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.198333165 seconds)
    (6/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.200821511 seconds)
    (7/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.116688997 seconds)
    (8/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.135436752 seconds)
    (9/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.106705801 seconds)
    (10/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.115545324 seconds)
    (11/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.10720336 seconds)
    (12/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.108144788 seconds)
    (13/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.112253504 seconds)
    (14/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.159840817 seconds)
    (15/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.118663933 seconds)
    (16/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.120366238 seconds)
    (17/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 6.375205742 seconds)
    (18/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.10839765 seconds)
    (19/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.154073417 seconds)
    (20/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.967511405 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 3.439596558 seconds)
    (22/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.106531597 seconds)
    (23/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.108241908 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.179838196 seconds)
    (25/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.575431815 seconds)
    (26/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.152936979 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.544939627 seconds)
    (28/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.111035552 seconds)
    (29/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 1.710817596 seconds)
    (30/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.103184478 seconds)
    (31/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.113526948 seconds)
    (32/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.107753308 seconds)
  done (took 182.447767288 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.095574382 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 4.004223575 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 4.016367347 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.120156889 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.476770337 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.460459864 seconds)
    (7/36) benchmarking "scal!"...
    done (took 1.955756107 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.501176489 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.109426873 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.131861811 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.246196042 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.104715566 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.375622635 seconds)
    (14/36) benchmarking "dot"...
    done (took 1.670104123 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.141757068 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.099657853 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.053522097 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.982543562 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.154025026 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.03629312 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.109307356 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.720431401 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.646105248 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.994369811 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.119890454 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.132932311 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.118550592 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.123307109 seconds)
    (29/36) benchmarking "asum"...
    done (took 1.603506033 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.008914989 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.110581518 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.130876041 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.293730838 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.344221347 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.101945312 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.118960803 seconds)
  done (took 153.517026346 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.343836061 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.103296814 seconds)
    (2/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.140949603 seconds)
    (3/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.214203349 seconds)
    (4/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.055713253 seconds)
    (5/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 3.90614369 seconds)
    (6/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.105557546 seconds)
    (7/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.094493241 seconds)
    (8/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.102609533 seconds)
    (9/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.102459491 seconds)
    (10/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.096814516 seconds)
    (11/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.164506005 seconds)
    (12/118) benchmarking ("cumsum!", "Int32", 256)...
    done (took 1.105096763 seconds)
    (13/118) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 21.1977857 seconds)
    (14/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.134499239 seconds)
    (15/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.096934244 seconds)
    (16/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.095719464 seconds)
    (17/118) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 21.186838079 seconds)
    (18/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.114957828 seconds)
    (19/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.095409249 seconds)
    (20/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.095437706 seconds)
    (21/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.201962368 seconds)
    (22/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 1.44684027 seconds)
    (23/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.207084449 seconds)
    (24/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.104904284 seconds)
    (25/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.104162799 seconds)
    (26/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.208303177 seconds)
    (27/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.111830387 seconds)
    (28/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.096852416 seconds)
    (29/118) benchmarking ("cumsum!", "Float32", 1024)...
    done (took 1.09500197 seconds)
    (30/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.207607321 seconds)
    (31/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.105528292 seconds)
    (32/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.228288212 seconds)
    (33/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.214594102 seconds)
    (34/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.114910665 seconds)
    (35/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.153655852 seconds)
    (36/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.112944749 seconds)
    (37/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.286753684 seconds)
    (38/118) benchmarking ("3-arg mul!", 2)...
    done (took 1.107532418 seconds)
    (39/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.095747307 seconds)
    (40/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.097652012 seconds)
    (41/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.147889204 seconds)
    (42/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.105079457 seconds)
    (43/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 5.152916137 seconds)
    (44/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.207844742 seconds)
    (45/118) benchmarking ("5-arg mul!", 3)...
    done (took 1.109268174 seconds)
    (46/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.116932549 seconds)
    (47/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.589775078 seconds)
    (48/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.693149816 seconds)
    (49/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.114710312 seconds)
    (50/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.095970284 seconds)
    (51/118) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.096099841 seconds)
    (52/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.098236029 seconds)
    (53/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.096589468 seconds)
    (54/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.458716483 seconds)
    (55/118) benchmarking ("5-arg mul!", 2)...
    done (took 1.111053381 seconds)
    (56/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.130672406 seconds)
    (57/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.662287707 seconds)
    (58/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.117521418 seconds)
    (59/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.095496134 seconds)
    (60/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.095382635 seconds)
    (61/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.095921963 seconds)
    (62/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.09651155 seconds)
    (63/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.10528328 seconds)
    (64/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.130930155 seconds)
    (65/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 2.711201259 seconds)
    (66/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.910839688 seconds)
    (67/118) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 1.458628609 seconds)
    (68/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 2.832931058 seconds)
    (69/118) benchmarking ("cumsum!", "Float32", 256)...
    done (took 1.105386431 seconds)
    (70/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.096166614 seconds)
    (71/118) benchmarking ("cumsum!", "Int32", 1024)...
    done (took 1.095658284 seconds)
    (72/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.971191252 seconds)
    (73/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.168690647 seconds)
    (74/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.097639527 seconds)
    (75/118) benchmarking ("cumsum!", "Float64", 1024)...
    done (took 1.095209301 seconds)
    (76/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.274801255 seconds)
    (77/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.105254912 seconds)
    (78/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.095699178 seconds)
    (79/118) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.015559267 seconds)
    (80/118) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.016712936 seconds)
    (81/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.110945757 seconds)
    (82/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.205536657 seconds)
    (83/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.105674549 seconds)
    (84/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.095385101 seconds)
    (85/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.281973457 seconds)
    (86/118) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 21.201920469 seconds)
    (87/118) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.115133964 seconds)
    (88/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.116887879 seconds)
    (89/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.150682898 seconds)
    (90/118) benchmarking ("3-arg mul!", 3)...
    done (took 1.105369782 seconds)
    (91/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.095453224 seconds)
    (92/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.101886612 seconds)
    (93/118) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.016911337 seconds)
    (94/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.107048843 seconds)
    (95/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.107948858 seconds)
    (96/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.430376251 seconds)
    (97/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.106874355 seconds)
    (98/118) benchmarking ("cumsum!", "Int64", 256)...
    done (took 1.096180095 seconds)
    (99/118) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.224291398 seconds)
    (100/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.466502303 seconds)
    (101/118) benchmarking ("cumsum!", "Float64", 256)...
    done (took 1.105566918 seconds)
    (102/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.177938848 seconds)
    (103/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.502310579 seconds)
    (104/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.018044188 seconds)
    (105/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.106380172 seconds)
    (106/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.095034772 seconds)
    (107/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.113503922 seconds)
    (108/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.096231765 seconds)
    (109/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.110800237 seconds)
    (110/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.107284755 seconds)
    (111/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.097192883 seconds)
    (112/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.096365503 seconds)
    (113/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.101911335 seconds)
    (114/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.098712728 seconds)
    (115/118) benchmarking ("cumsum!", "Int64", 1024)...
    done (took 1.095124208 seconds)
    (116/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.095951459 seconds)
    (117/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.114562668 seconds)
    (118/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.103690163 seconds)
  done (took 325.892635371 seconds)
done (took 664.405581019 seconds)
(4/20) benchmarking "parallel"...
done (took 1.089600691 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 1.350252747 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 2.120318061 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 6.276760777 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.346481136 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 1.304541224 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 1.277123128 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 1.306230775 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 1.394961169 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 1.3339917 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 1.267554102 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 1.326179567 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 1.280116356 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 1.387212963 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 1.359850887 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.397967953 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 1.3748646 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 1.310861364 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 2.792601819 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 1.318503076 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 1.272753088 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 1.300546911 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.277600864 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 1.258754021 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 1.33858574 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.397481217 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 1.279330561 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 1.497597576 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.337886774 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 1.316796753 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.359113494 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 1.370984036 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 1.386958951 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 1.318598028 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.3970763 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 1.347516359 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.39806548 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.297848292 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 1.366134973 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 1.28372605 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 1.314925172 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 1.329033969 seconds)
  done (took 63.063528004 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 2.577493005 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.298784767 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.412030916 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.42268885 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.976642514 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.42422641 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.517899545 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.29785206 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.307047299 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.432279772 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.432055768 seconds)
  done (took 18.216324937 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 2.395130208 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.300447466 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.44475785 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.433181618 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.506932528 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.418167773 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.474638235 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.290975364 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.302888129 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.419954654 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.450991774 seconds)
  done (took 17.556478159 seconds)
done (took 99.926465506 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 1.6950239 seconds)
    (2/2) benchmarking "11899"...
    done (took 1.179783734 seconds)
  done (took 3.96331192 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", "(8, 8)", "(8, 8)")...
    done (took 1.129181461 seconds)
    (2/8) benchmarking ("matvec", "(2, 2)", "(2,)")...
    done (took 1.117370165 seconds)
    (3/8) benchmarking ("matvec", "(4, 4)", "(4,)")...
    done (took 1.116566011 seconds)
    (4/8) benchmarking ("matvec", "(16, 16)", "(16,)")...
    done (took 1.112225668 seconds)
    (5/8) benchmarking ("matmat", "(2, 2)", "(2, 2)")...
    done (took 1.110283386 seconds)
    (6/8) benchmarking ("matvec", "(8, 8)", "(8,)")...
    done (took 1.10868659 seconds)
    (7/8) benchmarking ("matmat", "(16, 16)", "(16, 16)")...
    done (took 1.166824118 seconds)
    (8/8) benchmarking ("matmat", "(4, 4)", "(4, 4)")...
    done (took 1.120494443 seconds)
  done (took 10.070746203 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, "Float64")...
    done (took 1.108639925 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float32")...
    done (took 1.108686136 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, "Float64")...
    done (took 1.114530976 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, "Float64")...
    done (took 1.1080071 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, "Float64")...
    done (took 1.108031715 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float64")...
    done (took 1.107772228 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, "Float32")...
    done (took 1.11450084 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float64")...
    done (took 1.108023148 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, "Float32")...
    done (took 1.107575937 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float64")...
    done (took 1.108371408 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, "Float64")...
    done (took 1.107963081 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, "Float32")...
    done (took 1.114504697 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, "Float32")...
    done (took 1.10890748 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, "Float32")...
    done (took 1.108432414 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, "Float32")...
    done (took 1.108149333 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, "Float32")...
    done (took 1.115512329 seconds)
  done (took 18.850341085 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sum", "(2, 2)")...
    done (took 1.108162112 seconds)
    (2/24) benchmarking ("sumabs", "(8, 8)")...
    done (took 1.108087012 seconds)
    (3/24) benchmarking ("minimum", "(2, 2)")...
    done (took 1.107792418 seconds)
    (4/24) benchmarking ("sumabs", "(2,)")...
    done (took 1.114898704 seconds)
    (5/24) benchmarking ("sum", "(4, 4)")...
    done (took 1.108026005 seconds)
    (6/24) benchmarking ("sum", "(2,)")...
    done (took 1.108396729 seconds)
    (7/24) benchmarking ("sum", "(8, 8)")...
    done (took 1.108139276 seconds)
    (8/24) benchmarking ("minimum", "(16, 16)")...
    done (took 1.123510788 seconds)
    (9/24) benchmarking ("sum", "(8,)")...
    done (took 1.108207853 seconds)
    (10/24) benchmarking ("sumabs", "(4, 4)")...
    done (took 1.108577782 seconds)
    (11/24) benchmarking ("sumabs", "(2, 2)")...
    done (took 1.107666787 seconds)
    (12/24) benchmarking ("minimum", "(4, 4)")...
    done (took 1.107971214 seconds)
    (13/24) benchmarking ("sumabs", "(16,)")...
    done (took 1.114527228 seconds)
    (14/24) benchmarking ("sumabs", "(8,)")...
    done (took 1.107316946 seconds)
    (15/24) benchmarking ("minimum", "(16,)")...
    done (took 1.108121172 seconds)
    (16/24) benchmarking ("minimum", "(2,)")...
    done (took 1.107217125 seconds)
    (17/24) benchmarking ("minimum", "(8, 8)")...
    done (took 1.116841987 seconds)
    (18/24) benchmarking ("minimum", "(4,)")...
    done (took 1.107780965 seconds)
    (19/24) benchmarking ("minimum", "(8,)")...
    done (took 1.107593881 seconds)
    (20/24) benchmarking ("sum", "(16,)")...
    done (took 1.108529246 seconds)
    (21/24) benchmarking ("sum", "(4,)")...
    done (took 1.107744837 seconds)
    (22/24) benchmarking ("sumabs", "(4,)")...
    done (took 1.114978609 seconds)
    (23/24) benchmarking ("sum", "(16, 16)")...
    done (took 1.108185486 seconds)
    (24/24) benchmarking ("sumabs", "(16, 16)")...
    done (took 1.111364472 seconds)
  done (took 27.729427906 seconds)
done (took 61.729651411 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.716881077 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.878492838 seconds)
  done (took 6.690803548 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.109764668 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.10816513 seconds)
  done (took 3.373253921 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.108147182 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.108353311 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.108166258 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.108182974 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.115027198 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.107928835 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.108349088 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.107811806 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.115007272 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.108546526 seconds)
  done (took 12.190610991 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.108427226 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.108169941 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.114351469 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.108021631 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.108141873 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.1083471 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.114307548 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.108960382 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.107752088 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.107620339 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.107929566 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.302786818 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.108183547 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.334624776 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.108142655 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.111140805 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.108190869 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.108844198 seconds)
  done (took 21.473235115 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.112126872 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.109199155 seconds)
  done (took 3.310700285 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.108250112 seconds)
    (2/7) benchmarking "second"...
    done (took 1.110726737 seconds)
    (3/7) benchmarking "month"...
    done (took 1.114328745 seconds)
    (4/7) benchmarking "year"...
    done (took 1.10828387 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.107792737 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.108264732 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.114796207 seconds)
  done (took 8.861090196 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.556757545 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.27547544 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.32779355 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.575083287 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.774346246 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 2.015331367 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.779458881 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 2.016981567 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.871465542 seconds)
  done (took 16.282217875 seconds)
done (took 73.272508953 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.80827626 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.109676247 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.624193225 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.193402601 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.202822837 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.474879969 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.126730961 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.712997418 seconds)
done (took 37.351426029 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.39973181 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.096226694 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.135590673 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.136632484 seconds)
  done (took 19.463292361 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.099572025 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.675058818 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.137836071 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.131645496 seconds)
  done (took 19.214819028 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.513074309 seconds)
    (2/2) benchmarking "read"...
    done (took 1.508888559 seconds)
  done (took 4.1299108 seconds)
done (took 50.299980087 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.109253183 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.109025726 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.108639417 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.113860796 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.108121058 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.108282567 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", "Float64")...
    done (took 1.108483063 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.114894206 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.109525507 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.108064517 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.108094373 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.10840173 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.115361236 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.108109128 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", "Float64")...
    done (took 1.107924341 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.108748158 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", "Float32")...
    done (took 1.114764615 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.108413518 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.107999642 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.108006112 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", "Float32")...
    done (took 1.108104657 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.115089786 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.108296406 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.108178507 seconds)
  done (took 27.724017359 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.186929489 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.174745295 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.183899345 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.185951449 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.206191932 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.19135114 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.179529021 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.151375676 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.188843836 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.159972679 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.144965369 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.200872258 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.150023212 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.211858363 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.150807408 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.204140312 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.184746903 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.15679703 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.149748882 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.20639101 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.179934417 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.151460394 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.206492318 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.141250193 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.1982423 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.145647914 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.163696558 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.174535151 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.148131229 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.197569818 seconds)
  done (took 36.366363935 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.14338734 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.108441313 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.108497575 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.198436414 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.113935858 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.108171527 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.108118534 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.108436408 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.11187466 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.108660925 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.108494742 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.108449393 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.109230878 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.113639126 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.108431065 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.108801868 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.144800014 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.291240338 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.10889814 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.108719081 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.154772474 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.11525187 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.109171816 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.108617959 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.109839582 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.109115982 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.115031092 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.108909875 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.108129215 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.109139105 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.115110992 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.162405722 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.142227663 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.108413913 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.23436582 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.175403902 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.108665672 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.140913165 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.108789708 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.114164937 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.108714908 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.108739141 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.10906354 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.109072434 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.174833906 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.108304887 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.10905401 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.10920728 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.112152198 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.108932846 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.110098597 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.108997411 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.126047914 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.111164624 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.10867738 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.108353148 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.109045753 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.112714715 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.108932058 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.108639895 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.108575476 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.182549915 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.111460886 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.108442483 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.483661117 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.108966791 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.178459725 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.108535752 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.10895086 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.33213731 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.116288528 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.314896884 seconds)
  done (took 82.719000299 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.108759539 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.112482363 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.190096609 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.192136434 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.108870023 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.109086941 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.115059865 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.108312406 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.779927179 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.112094962 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.109360267 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.108643287 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.76859076 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.116054646 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.109277597 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.192174235 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.108699236 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.109302443 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.111652599 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.108909855 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.108696149 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.108741524 seconds)
  done (took 27.087214913 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.145778242 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.123400252 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.144494494 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.108932121 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.112486112 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.108446173 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.148549616 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.124302731 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.149000902 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.154391757 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.144977636 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.144764566 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.111288548 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.151399702 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.150267233 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.124093699 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.144678089 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.127721677 seconds)
  done (took 21.51505158 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.285861247 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.274463807 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.193974211 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.151259604 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.370520488 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.343856312 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.220370878 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.285204943 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.151397108 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.27465795 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.289304372 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.1514854 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.34481357 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.150581302 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.154526154 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.37101327 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.188300441 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.150591422 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.22803065 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.21326419 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.285442337 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.220603466 seconds)
  done (took 28.389892848 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.145542007 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.153404258 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.185582073 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.182259888 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.113219009 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.108600663 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.168452361 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.153761751 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.1315077 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.145620536 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.154046559 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.108690336 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.12444827 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.168369126 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.197802854 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.149521448 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.154821068 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.170469433 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.149462019 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.108240657 seconds)
  done (took 24.070626639 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.11242267 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.109596034 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.108954441 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.108959461 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.108751221 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.112668743 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.108953509 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.109379358 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.109661693 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.367549763 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.109427718 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.10897991 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.108813026 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.111722913 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.111679105 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.109858297 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.10928279 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.110023193 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.112337396 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.109389311 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.365454712 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.109885866 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.114354798 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.109098333 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.109078477 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.109056663 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.10949973 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.113959659 seconds)
  done (took 32.689690088 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.171955525 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.109066245 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.11223551 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.109129221 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.108850887 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.175499997 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.108786309 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.113497518 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.108562019 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.108545146 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.108647437 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.112526021 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.10952392 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.169338593 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.109213902 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.109168253 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 5.255681201 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.11571775 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.176702986 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 6.097591399 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.115975442 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 5.260384851 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.116578399 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.108911378 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 6.09738083 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.116828075 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.114960723 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.109233513 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.108527531 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.110085483 seconds)
  done (took 52.939580447 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.135198154 seconds)
    (2/2) benchmarking "in"...
    done (took 1.133791105 seconds)
  done (took 3.359010368 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.10850476 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.216041042 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.109248626 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.307773703 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.275595064 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.28866827 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.275767235 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.204974134 seconds)
  done (took 10.877023523 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.116496923 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 4.250429174 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.258320289 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.109969538 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.109312424 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 3.38010157 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 3.149268105 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 3.007923183 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.816937208 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 2.015630952 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 2.24408256 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 2.828393921 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 3.163319292 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 2.382435157 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.225479519 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 2.905051409 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 3.293401674 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 4.462881362 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 3.087327462 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.222849404 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 3.710001136 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.186159807 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.113226953 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.109267022 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.109388891 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 2.044382539 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 3.909319922 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 2.56208161 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 3.198699806 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.219823443 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 3.750865783 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.165143708 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.109345181 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 3.335894501 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.212141872 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.109823024 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 3.20991616 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.20248862 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.109708236 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.10929084 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 4.784638885 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 4.593374283 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 2.31748378 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 3.274050059 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.188818318 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.110299566 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.109263246 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.109158718 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 2.343864853 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 2.771185266 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 3.161437915 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 2.032168543 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.24774456 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.109748077 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 4.584978635 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.239654266 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.109970925 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 2.044932007 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 5.438696222 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 3.252662723 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 2.529570037 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 4.290149406 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 3.145924206 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.226253951 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.109959585 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.342551696 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 3.005499964 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 3.811805617 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.764405577 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.210853976 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 3.413094597 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.273895489 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.110016563 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.109595891 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.011209213 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.415094436 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.115979347 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.109221222 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.109915233 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.112768173 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 3.318638527 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.219535644 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.902680436 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.245184839 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.327004617 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 4.64917092 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.223697846 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.111102296 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 3.777045321 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.968152854 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 2.145600562 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 4.653009908 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 2.278970232 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.243528582 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 3.018586232 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 2.331882964 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.151210627 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.110479915 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.910564461 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 3.513436756 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.254594878 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.110441207 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.481480997 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 3.219531436 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.123451155 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.109988466 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 2.804119535 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.223831252 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 3.180567527 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.142789269 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.10975329 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.109933964 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.721886342 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 2.145919352 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.117338105 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.663598056 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 3.164483516 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.428331636 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 4.401948405 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 2.258358256 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 3.371576108 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 4.959063306 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.37117645 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 3.003085893 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.120935178 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 3.398688818 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 3.27765444 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 3.786096445 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 3.283014146 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.22004491 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 4.851731682 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.139786129 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.114132952 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 4.134101124 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.169322439 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.110053633 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.110367238 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.111009317 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.115935001 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.110492892 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 2.206821176 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 3.417850776 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 4.689984917 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.238416206 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 2.317017715 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.227886893 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 4.800064459 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 3.244006803 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 2.751971555 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.245991711 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.110850262 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 4.615445085 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 4.424227307 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 2.813929252 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.223867331 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.11109019 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.109416842 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 2.89972051 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 4.04104606 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.195007629 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.110934022 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.748485879 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 2.145062882 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.118394237 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.117227673 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 2.592587191 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.244136986 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.115206182 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 3.167570756 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 2.88908096 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 4.727380205 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.244416969 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 2.378037582 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.230435113 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.110529984 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.110522301 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.110263558 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.867052477 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 2.78937317 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 6.196496565 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 2.746279326 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 5.843811855 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.177402492 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 3.208586457 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.189883417 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 3.303011799 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 2.300960694 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.248806044 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.110812987 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.111646648 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.110411876 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 2.645948015 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 3.995133131 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 4.887285504 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 4.019190901 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 2.147697042 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 3.043700707 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 2.133563695 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 2.897374833 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.126515891 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 2.821623791 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 3.983468071 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.199678653 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.114396805 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.110605881 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 2.241716333 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 2.248100553 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.248172886 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 3.438291378 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.254958574 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.11115064 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 2.781811475 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.223778189 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 3.746632756 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.202981192 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.891733829 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 3.113196318 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.223260116 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 3.204034266 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 4.562203476 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.202287003 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.110070415 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 4.629488958 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.219053764 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.117388386 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 3.118853571 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 3.547082361 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 2.005302484 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 2.831637507 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 3.522065418 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 3.156085838 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 2.67571295 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 2.308973461 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.24759174 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 3.866538332 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.197474169 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 2.435630407 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 3.2457128 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 4.362055406 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.262645856 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 2.849786486 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.125310956 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 4.598549179 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.244326378 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 3.067130191 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.222867147 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 3.566246539 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.21379002 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.117504708 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 3.221291577 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.197220584 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 2.783982057 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.224638244 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 2.207317384 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 4.333465384 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 3.902484855 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.199455201 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.391334412 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 3.242610877 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 2.9610708 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 3.080623578 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 2.417011324 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 3.941462773 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 2.123243569 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 2.13450821 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 2.882140814 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.206790989 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 3.377371531 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.242971492 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.111443102 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.113385374 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 4.212727523 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.190456622 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.111591091 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 3.355624027 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 3.027454562 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 2.180007925 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 2.134799718 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.117806304 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.111071168 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 3.241209752 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 3.193771796 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 4.248126019 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 3.485793633 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 2.690441474 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 2.93063637 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.230788198 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 4.584310436 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.204227885 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.81420243 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 2.150321651 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.118446351 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 2.796413124 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.227292009 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 3.300005418 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.249033361 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 2.215567523 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 3.546535617 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 3.321474567 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 2.3597282 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 3.142681684 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.221154347 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 2.870484161 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 2.666956098 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 2.317783205 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 4.412896381 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.132015038 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 2.684543542 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 6.160203511 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 2.700765145 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 3.184612564 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.833219346 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 4.045046149 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.155666183 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.111909578 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.11102481 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 2.707756527 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 3.155016695 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.125126048 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.851103214 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.584854646 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 3.17274615 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.864962961 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 2.145011184 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.119547079 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.118201306 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.111567323 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 2.057133744 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 4.085299862 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 4.284729702 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.22010428 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.110944479 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.117297809 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 2.023062797 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 4.281697651 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.813605939 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 2.968571324 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 3.005693623 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.244468015 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.111788711 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.111181293 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.11586848 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.111884496 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.111583024 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.111860635 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 3.393557197 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.262006039 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.737156193 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 2.146350274 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.119129184 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 3.277483528 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.162324679 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.111489793 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 4.179604486 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.169900166 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 2.193483497 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.177856744 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.111374668 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 2.52668841 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.246625251 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 2.103479983 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 4.278950334 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 3.360742067 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 2.303739275 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 4.710216183 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.1339575 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 2.54880544 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.452290033 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 2.957941157 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.122954691 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 2.0562398 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 2.134625002 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 3.77463312 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 2.102651299 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 4.425523699 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.777234171 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 3.181248066 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 3.293384829 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.96314191 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 2.514813161 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 5.240630516 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.166150345 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.119756403 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.11210437 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.086964411 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 2.311978952 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.156609844 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 4.276332668 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 2.263819475 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 2.113092318 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 4.297662412 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.193753998 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 4.26200705 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.127372498 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.127192866 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.11887073 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.111921196 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 3.518308299 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 3.854388736 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.174653433 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.119418489 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 2.046104576 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 3.909510094 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.962995279 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.822584368 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 5.092463294 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.243192143 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.11231863 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 2.298476075 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.161772865 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 4.634583047 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.266167642 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.854159537 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 2.421605023 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.157856687 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 4.168633795 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.517453091 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 4.904513722 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 3.450012585 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.219571359 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.112149307 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 3.377756912 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 2.056143555 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.248987187 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 3.02892953 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 3.382088327 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.730571901 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 4.680424537 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 5.350080931 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.212597239 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 2.03580233 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 3.687779204 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 3.179197576 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.122221454 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.915172791 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.249297242 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 4.341941182 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 4.000692528 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 2.335190007 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.247387657 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.767734469 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 3.728452111 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.250021598 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 2.668524975 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.247047174 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.116050599 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 4.650856004 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 2.178264288 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 4.164163493 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.218753582 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.11342457 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.127943227 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 2.798121487 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 2.697118015 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 4.258248703 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.180771928 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.11285427 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 4.657219752 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.963860148 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 2.14784114 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.119920944 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.112787505 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 4.54148578 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.132341334 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.112741886 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 2.533336462 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 2.725178591 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.247767811 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 2.653695937 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 4.253391965 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.249475229 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 3.266705104 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 4.384582633 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 2.26928702 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.174917717 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.113731277 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.112883705 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.113819399 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.430359318 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.257616576 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.112756992 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 2.662299452 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.247659892 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 2.861033837 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 3.051809141 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 3.260951411 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.16946429 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 2.525861032 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.247818645 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.6785112 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 4.095786858 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 2.135307416 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 2.434986889 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 3.247416537 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 3.132239856 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 3.811267897 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.206103988 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.113390674 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 2.964444863 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 4.291205378 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 3.354452304 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 3.44658117 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 4.327411822 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.186880379 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 3.725109494 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.211412766 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 4.655907611 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.263522967 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.113082327 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 2.610184719 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 5.263069514 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 3.444187131 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.253940488 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 3.553750605 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.216544489 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 2.445675922 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 4.403754759 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.200939727 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.114049872 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.116667764 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 3.0900185 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 2.161660495 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 3.666143035 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 5.07797963 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 3.484937394 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.228666562 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 3.194815403 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 5.6569316 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 4.677619764 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.490523002 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 5.250696401 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 4.455535817 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.131692986 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 2.022789971 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 4.312541577 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.168658691 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 2.250048387 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.202886604 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 3.779894296 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.158124011 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.11282275 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 3.434061684 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.257622672 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.11375381 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.116434067 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 2.048807392 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 4.783303576 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.201592318 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 3.245329575 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.193792438 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.113339782 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 2.672419793 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 2.356366029 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.148759741 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.11676808 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.11358589 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 3.901812945 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.209770689 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.113681527 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 3.360735243 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.249611512 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 3.354863163 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.900839382 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 2.523162372 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.200185421 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.112975914 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.112632442 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 2.815589084 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 4.413783585 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.27926224 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.473735041 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 3.226145178 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 2.659364264 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 3.166926237 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 3.535259958 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 2.642353933 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 3.087136495 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.220479348 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.120495811 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 2.096589482 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 4.750255458 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 3.159256579 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.873565827 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 5.401037102 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.190977425 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 3.780858332 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 3.007873377 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.160469833 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 4.158271387 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.157078022 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.113385763 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.112711366 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.118294186 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 2.617763225 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 3.178752536 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.123162041 seconds)
  done (took 1419.751246908 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.391630119 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.119542318 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.112800248 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.113078964 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.11349882 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.119718558 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.11332003 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.114297006 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.113597155 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.119547916 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.11376692 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.113387628 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.113343155 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.397211367 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.118684675 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.113095771 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.11308492 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.11304795 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.116436171 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.113154619 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.112913361 seconds)
  done (took 25.063757404 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.114027119 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.116426612 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.112856284 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.113511368 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.113238225 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.116008477 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.113501966 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.112869397 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.114038722 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.114865679 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.114833948 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.115711823 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.115574471 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.113003708 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.116657962 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.113483581 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.112816745 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.113427428 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.115896082 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.113884305 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.113446488 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.113067867 seconds)
  done (took 25.607642398 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.116196254 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.112918385 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 2.842945586 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.227896706 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.114105529 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.113247711 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.113182717 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 2.2989808 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 2.081811424 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 2.006730004 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 3.501977637 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 3.227364327 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.123797397 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 2.262896255 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.205102158 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.113549005 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.238298258 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.116286157 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.112841483 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.113422755 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.113141043 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 3.242865821 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.235528679 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.113735565 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.904725272 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.250739796 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.114406182 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.114400402 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.120716725 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 2.103064078 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 2.132880989 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.126667767 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 2.950224494 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 3.734394249 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 2.390643325 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 2.010060372 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 2.145112345 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.128505919 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.113077141 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.11441675 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 2.389313517 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 2.959780581 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.12423591 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.116402619 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 3.323687232 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.214025256 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.118377852 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 2.48752821 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 3.229229036 seconds)
  done (took 88.261089878 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.121352828 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.242185764 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.175466751 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.112733786 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.233443585 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.11334268 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.170784049 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.113595246 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.113654772 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.113553294 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.252994828 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.272805641 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.114516908 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.114495458 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.207918121 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.113760882 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.113139751 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.113568932 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.112867127 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.1192943 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.113690403 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.168754074 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.22981083 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.279174278 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.113609854 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.113368962 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.113147809 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.116489482 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.266368097 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.114020731 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.113975501 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.113399626 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.247512561 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.224892287 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.114060443 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.114126526 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.249250816 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.11323635 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.113311027 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.11370034 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.116470734 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.114132554 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.167018942 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.249017542 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.11348802 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.220162596 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.113547128 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.113013826 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.261429344 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.119018857 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.113801084 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.282893494 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.113599596 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.119852509 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.113905809 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.234635428 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.114693755 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.113053073 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.117070542 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.257521376 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.113888601 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.113173572 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.280166386 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.114233072 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.113934999 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.28288302 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.22341018 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.113900529 seconds)
  done (took 79.814128046 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.115122128 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.11739577 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.118068555 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.114061174 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.114729879 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.114158973 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.118042105 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.114325178 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.114375107 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.114541072 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.114565272 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.118143805 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.113876041 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.114125599 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.114319065 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.119336362 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.115752396 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.11447487 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.116286479 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.115084133 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.12182956 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.114646164 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.114489786 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.114792403 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.485541229 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.114202369 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.114275805 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.114963585 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.118149648 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.114554403 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.476831068 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.115139959 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.117684122 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.114931713 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.473429049 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.114511326 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.114395698 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.12145722 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.114317548 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.114500114 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.114004677 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.120821856 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.11462878 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.113904136 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.114846256 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.114134756 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.120753653 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.473105886 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.114604779 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.114958613 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.118355598 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.114353029 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.114251685 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.114009593 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.117927937 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.214905936 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.114244717 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.114859657 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.114348474 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.12142308 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.114421282 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.215479514 seconds)
  done (took 71.916460489 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.11680919 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.11421937 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.113727171 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.114022335 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.116458613 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.11463622 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.115412142 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.113909447 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.114108481 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.117947699 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.114032709 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.11378198 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.113532294 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.118222949 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.114357236 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.114050507 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.113539528 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.113735549 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.117627963 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.113776428 seconds)
  done (took 23.393260333 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.1140874 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.117361653 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.114334676 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.113408116 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.114236526 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.113893592 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.11845435 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.11465475 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.113914453 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.114109145 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.118620322 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.114061293 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.113260294 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.114156794 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.113954203 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.120550288 seconds)
  done (took 18.937964137 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.113544807 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.114094508 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.120869117 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.114611316 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.113721129 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.113680902 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.114293109 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.121356605 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.113499522 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.574480412 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.114572877 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.117961148 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.113587368 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.114498916 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.113923712 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.117604291 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.11448747 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.113850289 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.113833882 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.113898674 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.697744263 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.114805348 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.114741187 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.113857053 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.121016804 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.685270523 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.114006893 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.114299026 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.121297147 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.114263829 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.113794164 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.587246126 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.120066508 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.114004095 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.113182236 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.114026196 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.120692924 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.114798242 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.114426471 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.113857701 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.114252318 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.121238939 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.11413368 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.114047046 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.113934199 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.120139015 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.114175017 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.568354092 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.11451619 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.117991845 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.114972286 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.113941013 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.114808371 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.587302618 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.120719884 seconds)
  done (took 65.461045922 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.159304767 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.170990617 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.120611943 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.114542626 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.171302192 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.158325297 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.159160427 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.128860238 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.157402294 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.114169493 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.176983242 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.135748755 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.158709593 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.176968013 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.17442098 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.163795414 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.114592451 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.18331922 seconds)
  done (took 21.835273083 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.120661712 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.114208493 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.114147972 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.114192055 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.114654931 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.119296913 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.114141694 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.11419627 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.114649364 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.119007184 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.114246593 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.113909523 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.114386001 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.114275064 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.117166212 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.114111884 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.114591626 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.114473172 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.116964289 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.114312828 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.114014179 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.114342107 seconds)
  done (took 25.632163498 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#3", "BigInt", "+")...
    done (took 1.149590528 seconds)
    (2/6) benchmarking ("#3", "UInt64", "+")...
    done (took 1.160769149 seconds)
    (3/6) benchmarking ("#4", "UInt64", "+")...
    done (took 1.115907311 seconds)
    (4/6) benchmarking ("#3", "Int64", "+")...
    done (took 1.114793061 seconds)
    (5/6) benchmarking ("#4", "Int64", "+")...
    done (took 1.119543393 seconds)
    (6/6) benchmarking ("#4", "BigInt", "+")...
    done (took 1.136911962 seconds)
  done (took 7.892353712 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.167340219 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.11485477 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.157799588 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.16519124 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.113903757 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.113932901 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.117395175 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.114105226 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.114452666 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.422737135 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.11832185 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.114036769 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.114278566 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.114428352 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.114227963 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.118514448 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.115017395 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.114327697 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.160465142 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.204464634 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.114515739 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.114994264 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.114487871 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.115849984 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.116351319 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.113785562 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.114340666 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.421571942 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.118557732 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.113742414 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.114622861 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.11566195 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.117798824 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.418283365 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.164976711 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.11432546 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.120181871 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.198370411 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.114197215 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.113987548 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.151166898 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.117630235 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.114947938 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.114369327 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.114407333 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.117573878 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.114592477 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.113866863 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.113778666 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.429721069 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.120450741 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.113863961 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.114467561 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.114576094 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.11967426 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.421013158 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.421401429 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.116124313 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.121212447 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.421998849 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.114550639 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.114576119 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.120669689 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.421293461 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.11482378 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.113795203 seconds)
  done (took 77.645196012 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.114555423 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.150255644 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.114675285 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.428905083 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.120099242 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.114383003 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.114634695 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.114876589 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.118206645 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.168336635 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.200688799 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.114261241 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.120167582 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.114600832 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.114576469 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.114650992 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.114430054 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.117292336 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.168684018 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.42282003 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.114357925 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.11890366 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.113889903 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.114481791 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.416905231 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.12203274 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.115049316 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.114585734 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.114745528 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.114287384 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.12149831 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.114254102 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.114128012 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.150763191 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.120652426 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.114533079 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.114941086 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.114105832 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.116112907 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.118956835 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.114299081 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.200822813 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.114892845 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.118377051 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.417703472 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.114257593 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.114608059 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.179241713 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.114348478 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.168761123 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.418980473 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.420875227 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.423809934 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.11467897 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.114553692 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.118264123 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.114543641 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.114502107 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.114638754 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.115398902 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.118836417 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.115571809 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.426962586 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.115173425 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.121356257 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.114582952 seconds)
  done (took 77.660974751 seconds)
done (took 2377.705681443 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.229661573 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.155059717 seconds)
  done (took 13.480176092 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose", "(600, 600)")...
    done (took 1.115228478 seconds)
    (2/16) benchmarking ("adjoint", "(600, 400)")...
    done (took 1.114710833 seconds)
    (3/16) benchmarking ("adjoint!", "(600, 600)")...
    done (took 1.271284851 seconds)
    (4/16) benchmarking ("adjoint", "(20000, 20000)")...
    done (took 1.114322672 seconds)
    (5/16) benchmarking ("transpose!", "(20000, 10000)")...
    done (took 6.132256128 seconds)
    (6/16) benchmarking ("adjoint!", "(20000, 20000)")...
    done (took 6.195748483 seconds)
    (7/16) benchmarking ("transpose!", "(20000, 20000)")...
    done (took 6.127399074 seconds)
    (8/16) benchmarking ("transpose", "(600, 400)")...
    done (took 1.125560326 seconds)
    (9/16) benchmarking ("transpose", "(20000, 20000)")...
    done (took 1.114956616 seconds)
    (10/16) benchmarking ("transpose!", "(600, 400)")...
    done (took 1.197595637 seconds)
    (11/16) benchmarking ("adjoint", "(600, 600)")...
    done (took 1.120869916 seconds)
    (12/16) benchmarking ("transpose!", "(600, 600)")...
    done (took 1.24547004 seconds)
    (13/16) benchmarking ("adjoint!", "(600, 400)")...
    done (took 1.217521483 seconds)
    (14/16) benchmarking ("transpose", "(20000, 10000)")...
    done (took 1.114477528 seconds)
    (15/16) benchmarking ("adjoint!", "(20000, 10000)")...
    done (took 6.107338284 seconds)
    (16/16) benchmarking ("adjoint", "(20000, 10000)")...
    done (took 1.127268358 seconds)
  done (took 39.554512007 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("Tridiagonal", 10)...
    done (took 6.063405761 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 2.433727567 seconds)
    (3/18) benchmarking ("IJV", 10)...
    done (took 3.048525103 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 2.763707784 seconds)
    (5/18) benchmarking ("Bidiagonal", 100)...
    done (took 6.12158022 seconds)
    (6/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.792460955 seconds)
    (7/18) benchmarking ("IJV", 100)...
    done (took 2.34080954 seconds)
    (8/18) benchmarking ("Bidiagonal", 10)...
    done (took 5.24396385 seconds)
    (9/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.493801389 seconds)
    (10/18) benchmarking ("IV", 1000)...
    done (took 1.569413108 seconds)
    (11/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.379600578 seconds)
    (12/18) benchmarking ("Diagonal", 10)...
    done (took 4.689979735 seconds)
    (13/18) benchmarking ("Diagonal", 100)...
    done (took 5.772461328 seconds)
    (14/18) benchmarking ("SymTridiagonal", 10)...
    done (took 6.16510939 seconds)
    (15/18) benchmarking ("IJV", 1000)...
    done (took 1.739302621 seconds)
    (16/18) benchmarking ("Diagonal", 1000)...
    done (took 1.55138571 seconds)
    (17/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.628215841 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.684536428 seconds)
  done (took 58.5782172 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", "(20000, 20000)")...
    done (took 6.106993854 seconds)
    (2/2) benchmarking ("unary minus", "(600, 600)")...
    done (took 1.270154397 seconds)
  done (took 8.48989071 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.119614982 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.126422648 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.137901856 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.131983338 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.127763745 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.144120364 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.143020148 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.138912225 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.135351277 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.13335593 seconds)
  done (took 62.453244701 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 1000)...
    done (took 6.107356364 seconds)
    (2/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 2.747606614 seconds)
    (3/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.534150146 seconds)
    (4/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 2.560654945 seconds)
    (5/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 3.595478567 seconds)
    (6/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.551654454 seconds)
    (7/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.294942227 seconds)
    (8/54) benchmarking ("spmat", "range", 100)...
    done (took 1.455857907 seconds)
    (9/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.207768245 seconds)
    (10/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.103362289 seconds)
    (11/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 4.864068491 seconds)
    (12/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.712829377 seconds)
    (13/54) benchmarking ("spmat", "logical", 10)...
    done (took 2.81667617 seconds)
    (14/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 3.040677072 seconds)
    (15/54) benchmarking ("spmat", "array", 100)...
    done (took 1.664030469 seconds)
    (16/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 2.505924129 seconds)
    (17/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 2.669551208 seconds)
    (18/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.483238148 seconds)
    (19/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.432316113 seconds)
    (20/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 3.487438916 seconds)
    (21/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 2.246130137 seconds)
    (22/54) benchmarking ("spmat", "range", 10)...
    done (took 4.916752606 seconds)
    (23/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.448325835 seconds)
    (24/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 1.941376882 seconds)
    (25/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.110108452 seconds)
    (26/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 3.135901643 seconds)
    (27/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 2.299876346 seconds)
    (28/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.219425882 seconds)
    (29/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.191254002 seconds)
    (30/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 2.975264607 seconds)
    (31/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 4.87124127 seconds)
    (32/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.24408467 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 4.968856117 seconds)
    (34/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.229616301 seconds)
    (35/54) benchmarking ("spvec", "range", 10000)...
    done (took 4.31402892 seconds)
    (36/54) benchmarking ("spmat", "splogical", 10)...
    done (took 2.617350497 seconds)
    (37/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.835486698 seconds)
    (38/54) benchmarking ("spmat", "array", 10)...
    done (took 1.32798057 seconds)
    (39/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 2.33963212 seconds)
    (40/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.425551466 seconds)
    (41/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.502280483 seconds)
    (42/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 3.328773054 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.28711795 seconds)
    (44/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 3.313531906 seconds)
    (45/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.37996341 seconds)
    (46/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 3.278400953 seconds)
    (47/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.042447755 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.341822897 seconds)
    (49/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.21965829 seconds)
    (50/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.236212965 seconds)
    (51/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.660645072 seconds)
    (52/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.285644733 seconds)
    (53/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.253167755 seconds)
    (54/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.225704754 seconds)
  done (took 149.956921506 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.102697781 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.571823947 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.285359617 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.106493751 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.501807706 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.327057227 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 4.8700827 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.581869638 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.122204657 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.326119629 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.29231783 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.238544153 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.105450236 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.113599586 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.123252815 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.112182714 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.300779315 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.591135297 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.127414581 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.110912103 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.327357278 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.353867031 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.241745724 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.108365328 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.284387384 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.356412246 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.517623203 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.239435237 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 1.49476329 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.10367407 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.56512057 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.124149954 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.111912439 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.005615814 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.50566018 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.458820478 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.565309783 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.11574234 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 5.857504857 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.112884407 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 1.775018146 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.313933875 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.449163577 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.250421052 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.265041961 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.34770103 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 1.704990247 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.103929049 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 1.892403185 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.29429261 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.328360926 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.327611566 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.391986255 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.111931766 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.569571449 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.112552901 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.11256869 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.41045412 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.257713084 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.240189635 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.105393212 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.117797369 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.112504654 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.361216361 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.106404769 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.240207178 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.106600677 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.111069169 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.238340132 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.239586682 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.268125364 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.353810429 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.360612444 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.056019123 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 3.451765999 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.350328034 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.522392176 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.375212701 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.11386734 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.111669714 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.559809094 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 1.561630193 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.276773061 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.352501402 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.41950185 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.412419993 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 1.68366582 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.103474096 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.342877165 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.285246687 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.339613561 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.262923058 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.476976021 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.011388442 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.104791582 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.112073272 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.090848897 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.237870346 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.107233089 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.62818975 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.376339858 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.714784466 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.289671749 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.554011245 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.220693894 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.107505802 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 1.671394609 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.104616895 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.342249299 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.401025723 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.113612382 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.111495808 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.275969382 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 1.845327066 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.103101759 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.190729346 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.530395418 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.117410452 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.275689338 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.106018952 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.376584343 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 5.972178334 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.348841629 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.106372901 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.390753241 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.303711845 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.261636154 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.107658234 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.464546126 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.384590096 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.514396459 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.342339344 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 5.973146176 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.112171146 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.422550511 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.106052155 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.112740998 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.293275567 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 5.053518808 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.292128635 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.107397581 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.382636056 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.279832794 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.487354595 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.105432854 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.365732806 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.362305963 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.476822396 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.109956242 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.258270569 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.108535701 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.176335403 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.279528768 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.111149935 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.113115404 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.97864231 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.112744166 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.263705488 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.345199919 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.824622571 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.479172846 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 1.471810292 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.103780521 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.543298874 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.304741094 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.616072982 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 4.623379022 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.29016839 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.107420045 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.116429614 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.110350848 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.359627825 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.300678857 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.111594171 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.113185828 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 1.818524511 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 4.202868969 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.112428595 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.304307305 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.727134616 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 4.538136044 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.33084622 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.10703925 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.479968264 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.111328739 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.327082895 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.61147687 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 5.384595722 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.112477643 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.113763458 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.112017537 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.116665733 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.327921176 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.3638918 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.662502719 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.265033068 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.410919761 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 1.339558762 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.423037064 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.57732571 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.114625826 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.382706991 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.106913754 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.510711371 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.112445753 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.332457753 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.359862436 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.109798271 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.428751046 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.4678334 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.231899172 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.508276137 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.107716209 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.114355636 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.11436822 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.291190945 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.55513991 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.106372872 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 5.302424734 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.48224515 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.239236796 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.305601898 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 4.328201907 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.120470369 seconds)
  done (took 728.705114946 seconds)
done (took 1062.315213579 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 6.103497899 seconds)
    (2/4) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 6.11415567 seconds)
    (3/4) benchmarking ("Float64", "(1000, 1000)", 3)...
    done (took 6.115302474 seconds)
    (4/4) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 6.118140066 seconds)
  done (took 25.547798609 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 1.926104612 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 1.927125208 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 1.213935454 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 1.117999054 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 2.402890044 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 1.150433083 seconds)
  done (took 10.845623459 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", "(1000, 1000)", 2)...
    done (took 4.60781552 seconds)
    (2/3) benchmarking ("Float64", "(1000000,)", 2)...
    done (took 6.115000617 seconds)
    (3/3) benchmarking ("Float64", "(1000000,)", 1)...
    done (took 6.114987041 seconds)
  done (took 17.934132545 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ("(10000000,)", 1)...
    done (took 1.382435676 seconds)
    (2/4) benchmarking ("(10000000,)", 2)...
    done (took 1.550246327 seconds)
    (3/4) benchmarking ("(1000, 1000)", 2)...
    done (took 1.287358023 seconds)
    (4/4) benchmarking ("(1000, 1000)", 1)...
    done (took 1.212777969 seconds)
  done (took 6.545880895 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 1.119440021 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.116587879 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 1.119176238 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.117319482 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 1.117081824 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 1.116267285 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.120893219 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 1.11948276 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 1.118315785 seconds)
  done (took 11.166381491 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.701667719 seconds)
done (took 77.8445629 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("map", "*", "Int64", "(false, false)")...
    done (took 1.527598937 seconds)
    (2/341) benchmarking ("perf_simplecopy", "Float64", 1)...
    done (took 1.414547282 seconds)
    (3/341) benchmarking ("perf_sum", "BigFloat", 0)...
    done (took 6.117886155 seconds)
    (4/341) benchmarking ("perf_sum3", "Float64", 1)...
    done (took 1.399940716 seconds)
    (5/341) benchmarking ("broadcast", "abs", "Int64", 0)...
    done (took 1.247149158 seconds)
    (6/341) benchmarking ("broadcast", "abs", "Int64", 1)...
    done (took 1.425572694 seconds)
    (7/341) benchmarking ("map", "identity", "Float32", 0)...
    done (took 1.23293695 seconds)
    (8/341) benchmarking ("perf_countnothing", "Int8", 1)...
    done (took 1.135155093 seconds)
    (9/341) benchmarking ("collect", "all", "Float64", 1)...
    done (took 1.460043459 seconds)
    (10/341) benchmarking ("broadcast", "*", "Bool", "(false, true)")...
    done (took 1.54837751 seconds)
    (11/341) benchmarking ("broadcast", "*", "Int64", "(false, true)")...
    done (took 1.625255439 seconds)
    (12/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int64}", 1)...
    done (took 2.257559748 seconds)
    (13/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float32}", 0)...
    done (took 2.45381814 seconds)
    (14/341) benchmarking ("perf_binaryop", "*", "Float32", "(true, true)")...
    done (took 1.580409362 seconds)
    (15/341) benchmarking ("collect", "all", "ComplexF64", 0)...
    done (took 1.352445564 seconds)
    (16/341) benchmarking ("perf_sum2", "Bool", 1)...
    done (took 1.142409011 seconds)
    (17/341) benchmarking ("perf_countnothing", "Float32", 1)...
    done (took 1.131971073 seconds)
    (18/341) benchmarking ("perf_countnothing", "BigInt", 1)...
    done (took 1.183682694 seconds)
    (19/341) benchmarking ("collect", "filter", "Float64", 1)...
    done (took 2.629410435 seconds)
    (20/341) benchmarking ("map", "abs", "Bool", 1)...
    done (took 1.325546319 seconds)
    (21/341) benchmarking ("sort", "Union{Missing, Bool}", 1)...
    done (took 6.123303862 seconds)
    (22/341) benchmarking ("perf_sum2", "ComplexF64", 0)...
    done (took 1.25053331 seconds)
    (23/341) benchmarking ("sort", "Float32", 0)...
    done (took 5.848287324 seconds)
    (24/341) benchmarking ("perf_sum", "Int64", 1)...
    done (took 1.146404454 seconds)
    (25/341) benchmarking ("collect", "filter", "Float32", 0)...
    done (took 1.988179386 seconds)
    (26/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int8}", 0)...
    done (took 1.234279608 seconds)
    (27/341) benchmarking ("broadcast", "*", "Float32", "(false, false)")...
    done (took 1.363721803 seconds)
    (28/341) benchmarking ("broadcast", "*", "BigInt", "(false, true)")...
    done (took 6.107157154 seconds)
    (29/341) benchmarking ("map", "*", "ComplexF64", "(true, true)")...
    done (took 3.828733492 seconds)
    (30/341) benchmarking ("perf_sum4", "Float32", 1)...
    done (took 1.139913831 seconds)
    (31/341) benchmarking ("broadcast", "identity", "Float32", 0)...
    done (took 1.209347041 seconds)
    (32/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, true)")...
    done (took 1.682031472 seconds)
    (33/341) benchmarking ("collect", "filter", "BigInt", 1)...
    done (took 2.300180128 seconds)
    (34/341) benchmarking ("broadcast", "identity", "Float64", 1)...
    done (took 1.412428516 seconds)
    (35/341) benchmarking ("map", "abs", "Bool", 0)...
    done (took 1.212998008 seconds)
    (36/341) benchmarking ("skipmissing", "collect", "Union{Missing, Bool}", 1)...
    done (took 1.966583688 seconds)
    (37/341) benchmarking ("perf_binaryop", "*", "Int64", "(false, false)")...
    done (took 1.631340402 seconds)
    (38/341) benchmarking ("map", "abs", "BigFloat", 0)...
    done (took 6.117833665 seconds)
    (39/341) benchmarking ("skipmissing", "sum", "Union{Missing, ComplexF64}", 1)...
    done (took 1.433544963 seconds)
    (40/341) benchmarking ("map", "*", "Int8", "(true, true)")...
    done (took 1.701509746 seconds)
    (41/341) benchmarking ("map", "*", "Bool", "(false, false)")...
    done (took 1.380587241 seconds)
    (42/341) benchmarking ("perf_sum3", "Bool", 0)...
    done (took 1.194429258 seconds)
    (43/341) benchmarking ("map", "*", "BigFloat", "(false, false)")...
    done (took 6.104154739 seconds)
    (44/341) benchmarking ("perf_sum", "Float32", 1)...
    done (took 1.489926788 seconds)
    (45/341) benchmarking ("broadcast", "*", "Float32", "(false, true)")...
    done (took 1.533661261 seconds)
    (46/341) benchmarking ("perf_sum", "Int8", 1)...
    done (took 1.134725675 seconds)
    (47/341) benchmarking ("skipmissing", "collect", "Float64", 0)...
    done (took 2.017941966 seconds)
    (48/341) benchmarking ("perf_sum2", "Float64", 1)...
    done (took 1.278227283 seconds)
    (49/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int64}", 0)...
    done (took 2.570283843 seconds)
    (50/341) benchmarking ("perf_sum3", "Float32", 1)...
    done (took 1.283350708 seconds)
    (51/341) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 1.49420573 seconds)
    (52/341) benchmarking ("perf_sum", "Int8", 0)...
    done (took 1.120321757 seconds)
    (53/341) benchmarking ("broadcast", "identity", "ComplexF64", 1)...
    done (took 1.723271159 seconds)
    (54/341) benchmarking ("perf_countnothing", "BigInt", 0)...
    done (took 1.194594093 seconds)
    (55/341) benchmarking ("map", "identity", "Bool", 0)...
    done (took 1.198275906 seconds)
    (56/341) benchmarking ("map", "abs", "BigFloat", 1)...
    done (took 6.111905093 seconds)
    (57/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, true)")...
    done (took 2.044543641 seconds)
    (58/341) benchmarking ("map", "abs", "ComplexF64", 0)...
    done (took 2.594731188 seconds)
    (59/341) benchmarking ("perf_sum", "Float64", 0)...
    done (took 1.331881895 seconds)
    (60/341) benchmarking ("perf_countequals", "Int8")...
    done (took 1.436809271 seconds)
    (61/341) benchmarking ("perf_countnothing", "Float64", 1)...
    done (took 1.132855006 seconds)
    (62/341) benchmarking ("broadcast", "abs", "BigFloat", 0)...
    done (took 6.104114732 seconds)
    (63/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(true, true)")...
    done (took 2.170081088 seconds)
    (64/341) benchmarking ("skipmissing", "sum", "Float64", 0)...
    done (took 1.14785594 seconds)
    (65/341) benchmarking ("perf_sum2", "BigInt", 0)...
    done (took 7.793892224 seconds)
    (66/341) benchmarking ("map", "identity", "Bool", 1)...
    done (took 1.424418443 seconds)
    (67/341) benchmarking ("broadcast", "*", "Bool", "(false, false)")...
    done (took 1.528532263 seconds)
    (68/341) benchmarking ("collect", "all", "Bool", 0)...
    done (took 1.204917338 seconds)
    (69/341) benchmarking ("map", "*", "ComplexF64", "(false, false)")...
    done (took 1.605329417 seconds)
    (70/341) benchmarking ("perf_sum4", "Float64", 0)...
    done (took 1.149404127 seconds)
    (71/341) benchmarking ("perf_countnothing", "Int8", 0)...
    done (took 1.132007399 seconds)
    (72/341) benchmarking ("skipmissing", "sum", "Union{Missing, Bool}", 1)...
    done (took 1.146775396 seconds)
    (73/341) benchmarking ("skipmissing", "collect", "Int8", 0)...
    done (took 1.80467288 seconds)
    (74/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Int64}", 0)...
    done (took 1.248102223 seconds)
    (75/341) benchmarking ("perf_sum3", "BigFloat", 0)...
    done (took 6.105428057 seconds)
    (76/341) benchmarking ("sort", "Union{Nothing, Int64}", 0)...
    done (took 6.227062999 seconds)
    (77/341) benchmarking ("map", "identity", "BigFloat", 0)...
    done (took 1.406100047 seconds)
    (78/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigInt}", 1)...
    done (took 2.256926119 seconds)
    (79/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, false)")...
    done (took 6.116738649 seconds)
    (80/341) benchmarking ("perf_sum", "BigInt", 1)...
    done (took 7.590861119 seconds)
    (81/341) benchmarking ("broadcast", "identity", "Float64", 0)...
    done (took 1.356557071 seconds)
    (82/341) benchmarking ("broadcast", "*", "BigFloat", "(false, false)")...
    done (took 6.107134845 seconds)
    (83/341) benchmarking ("collect", "all", "Float64", 0)...
    done (took 1.401046979 seconds)
    (84/341) benchmarking ("map", "identity", "Float64", 1)...
    done (took 1.472227534 seconds)
    (85/341) benchmarking ("perf_sum3", "Float64", 0)...
    done (took 1.279904624 seconds)
    (86/341) benchmarking ("skipmissing", "collect", "Union{Missing, ComplexF64}", 1)...
    done (took 2.44388135 seconds)
    (87/341) benchmarking ("broadcast", "*", "Int64", "(true, true)")...
    done (took 1.62536984 seconds)
    (88/341) benchmarking ("perf_binaryop", "*", "Int8", "(true, true)")...
    done (took 1.493930826 seconds)
    (89/341) benchmarking ("map", "*", "Float32", "(true, true)")...
    done (took 1.636173314 seconds)
    (90/341) benchmarking ("map", "*", "BigInt", "(false, true)")...
    done (took 6.124375159 seconds)
    (91/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigInt}", 1)...
    done (took 9.494383632 seconds)
    (92/341) benchmarking ("broadcast", "*", "BigInt", "(true, true)")...
    done (took 7.233996737 seconds)
    (93/341) benchmarking ("sort", "BigInt", 0)...
    done (took 6.217253154 seconds)
    (94/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(false, true)")...
    done (took 6.118239035 seconds)
    (95/341) benchmarking ("perf_binaryop", "*", "BigInt", "(true, true)")...
    done (took 6.256049472 seconds)
    (96/341) benchmarking ("broadcast", "*", "BigInt", "(false, false)")...
    done (took 7.696651183 seconds)
    (97/341) benchmarking ("map", "*", "Bool", "(true, true)")...
    done (took 3.021752235 seconds)
    (98/341) benchmarking ("broadcast", "*", "Float64", "(true, true)")...
    done (took 1.63938289 seconds)
    (99/341) benchmarking ("map", "identity", "Float64", 0)...
    done (took 1.251976463 seconds)
    (100/341) benchmarking ("map", "*", "Int64", "(true, true)")...
    done (took 1.835538951 seconds)
    (101/341) benchmarking ("perf_sum4", "Int64", 1)...
    done (took 1.147743166 seconds)
    (102/341) benchmarking ("perf_countnothing", "Float32", 0)...
    done (took 1.13260707 seconds)
    (103/341) benchmarking ("collect", "filter", "Float32", 1)...
    done (took 2.474370495 seconds)
    (104/341) benchmarking ("map", "*", "Float64", "(false, false)")...
    done (took 1.473256467 seconds)
    (105/341) benchmarking ("collect", "filter", "Bool", 0)...
    done (took 1.917104501 seconds)
    (106/341) benchmarking ("perf_sum", "Int64", 0)...
    done (took 1.160997604 seconds)
    (107/341) benchmarking ("perf_sum3", "Int8", 1)...
    done (took 1.245398703 seconds)
    (108/341) benchmarking ("perf_sum3", "BigFloat", 1)...
    done (took 6.105141601 seconds)
    (109/341) benchmarking ("perf_sum3", "Float32", 0)...
    done (took 1.379631164 seconds)
    (110/341) benchmarking ("map", "*", "BigInt", "(true, true)")...
    done (took 7.116909088 seconds)
    (111/341) benchmarking ("perf_sum", "BigFloat", 1)...
    done (took 6.208641291 seconds)
    (112/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, true)")...
    done (took 1.68828601 seconds)
    (113/341) benchmarking ("sort", "BigFloat", 0)...
    done (took 6.12140592 seconds)
    (114/341) benchmarking ("perf_simplecopy", "Bool", 1)...
    done (took 1.177494346 seconds)
    (115/341) benchmarking ("broadcast", "*", "ComplexF64", "(false, false)")...
    done (took 1.658540619 seconds)
    (116/341) benchmarking ("sort", "Union{Nothing, BigFloat}", 0)...
    done (took 6.11982276 seconds)
    (117/341) benchmarking ("broadcast", "identity", "Int64", 1)...
    done (took 1.416573159 seconds)
    (118/341) benchmarking ("perf_countequals", "Float32")...
    done (took 1.550027825 seconds)
    (119/341) benchmarking ("skipmissing", "collect", "BigFloat", 0)...
    done (took 2.204363762 seconds)
    (120/341) benchmarking ("skipmissing", "sum", "Union{Missing, BigFloat}", 1)...
    done (took 6.12030738 seconds)
    (121/341) benchmarking ("perf_sum", "Float64", 1)...
    done (took 1.463900429 seconds)
    (122/341) benchmarking ("perf_sum4", "Int8", 0)...
    done (took 1.120002388 seconds)
    (123/341) benchmarking ("perf_sum4", "ComplexF64", 0)...
    done (took 1.237431849 seconds)
    (124/341) benchmarking ("broadcast", "abs", "ComplexF64", 1)...
    done (took 2.641859569 seconds)
    (125/341) benchmarking ("perf_simplecopy", "BigInt", 1)...
    done (took 1.526376546 seconds)
    (126/341) benchmarking ("broadcast", "identity", "Bool", 0)...
    done (took 1.316517408 seconds)
    (127/341) benchmarking ("map", "*", "BigInt", "(false, false)")...
    done (took 6.114687712 seconds)
    (128/341) benchmarking ("perf_binaryop", "*", "Bool", "(true, true)")...
    done (took 3.037386943 seconds)
    (129/341) benchmarking ("sort", "Union{Nothing, Float32}", 0)...
    done (took 6.126002647 seconds)
    (130/341) benchmarking ("map", "abs", "Int8", 1)...
    done (took 1.364949777 seconds)
    (131/341) benchmarking ("sort", "Union{Nothing, BigInt}", 0)...
    done (took 6.120984616 seconds)
    (132/341) benchmarking ("map", "identity", "BigFloat", 1)...
    done (took 1.77532246 seconds)
    (133/341) benchmarking ("broadcast", "identity", "BigFloat", 1)...
    done (took 1.680451218 seconds)
    (134/341) benchmarking ("perf_sum2", "Int64", 1)...
    done (took 1.151705899 seconds)
    (135/341) benchmarking ("broadcast", "*", "Float64", "(false, false)")...
    done (took 1.365636478 seconds)
    (136/341) benchmarking ("perf_sum", "ComplexF64", 0)...
    done (took 1.241008071 seconds)
    (137/341) benchmarking ("skipmissing", "sum", "BigFloat", 0)...
    done (took 6.106793072 seconds)
    (138/341) benchmarking ("perf_sum3", "ComplexF64", 1)...
    done (took 1.392894783 seconds)
    (139/341) benchmarking ("perf_simplecopy", "Int8", 1)...
    done (took 1.166417586 seconds)
    (140/341) benchmarking ("perf_sum3", "ComplexF64", 0)...
    done (took 1.251381353 seconds)
    (141/341) benchmarking ("broadcast", "identity", "BigInt", 0)...
    done (took 1.418064197 seconds)
    (142/341) benchmarking ("perf_countequals", "Int64")...
    done (took 1.442560459 seconds)
    (143/341) benchmarking ("perf_sum3", "Bool", 1)...
    done (took 1.281908559 seconds)
    (144/341) benchmarking ("sort", "Union{Nothing, Float64}", 0)...
    done (took 6.106958449 seconds)
    (145/341) benchmarking ("broadcast", "identity", "BigFloat", 0)...
    done (took 1.469813653 seconds)
    (146/341) benchmarking ("sort", "Union{Nothing, Bool}", 0)...
    done (took 6.118150251 seconds)
    (147/341) benchmarking ("map", "abs", "Float32", 1)...
    done (took 1.348951573 seconds)
    (148/341) benchmarking ("broadcast", "abs", "Float64", 1)...
    done (took 1.432453822 seconds)
    (149/341) benchmarking ("perf_sum2", "Float32", 1)...
    done (took 1.279682063 seconds)
    (150/341) benchmarking ("perf_countequals", "Bool")...
    done (took 1.433261819 seconds)
    (151/341) benchmarking ("map", "identity", "Int8", 0)...
    done (took 1.199251322 seconds)
    (152/341) benchmarking ("skipmissing", "sum", "Int8", 0)...
    done (took 1.136260835 seconds)
    (153/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float32}", 1)...
    done (took 2.08845534 seconds)
    (154/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, false)")...
    done (took 1.56076475 seconds)
    (155/341) benchmarking ("collect", "all", "ComplexF64", 1)...
    done (took 1.757576622 seconds)
    (156/341) benchmarking ("map", "*", "Int64", "(false, true)")...
    done (took 1.840053261 seconds)
    (157/341) benchmarking ("map", "identity", "Float32", 1)...
    done (took 1.383613582 seconds)
    (158/341) benchmarking ("perf_simplecopy", "Float32", 0)...
    done (took 1.253687345 seconds)
    (159/341) benchmarking ("broadcast", "identity", "BigInt", 1)...
    done (took 1.709439636 seconds)
    (160/341) benchmarking ("map", "*", "Int8", "(false, false)")...
    done (took 1.437375699 seconds)
    (161/341) benchmarking ("skipmissing", "collect", "Float32", 0)...
    done (took 1.905143969 seconds)
    (162/341) benchmarking ("perf_sum3", "Int64", 0)...
    done (took 1.220805033 seconds)
    (163/341) benchmarking ("perf_simplecopy", "Bool", 0)...
    done (took 1.166337896 seconds)
    (164/341) benchmarking ("sort", "Union{Missing, Int8}", 1)...
    done (took 6.118023211 seconds)
    (165/341) benchmarking ("perf_sum2", "Int8", 0)...
    done (took 1.136506445 seconds)
    (166/341) benchmarking ("perf_countnothing", "BigFloat", 1)...
    done (took 1.17852494 seconds)
    (167/341) benchmarking ("sort", "Union{Missing, BigFloat}", 1)...
    done (took 6.105208775 seconds)
    (168/341) benchmarking ("perf_sum2", "BigFloat", 1)...
    done (took 6.116695275 seconds)
    (169/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float64}", 1)...
    done (took 1.436545423 seconds)
    (170/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Bool}", 0)...
    done (took 2.407153358 seconds)
    (171/341) benchmarking ("map", "*", "Float64", "(false, true)")...
    done (took 1.862133588 seconds)
    (172/341) benchmarking ("collect", "filter", "Int8", 0)...
    done (took 1.916094717 seconds)
    (173/341) benchmarking ("sort", "Int64", 0)...
    done (took 6.124016314 seconds)
    (174/341) benchmarking ("collect", "all", "BigFloat", 0)...
    done (took 1.407070096 seconds)
    (175/341) benchmarking ("skipmissing", "sum", "Union{Nothing, ComplexF64}", 0)...
    done (took 1.268680612 seconds)
    (176/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, true)")...
    done (took 2.046359847 seconds)
    (177/341) benchmarking ("map", "identity", "BigInt", 1)...
    done (took 1.78918018 seconds)
    (178/341) benchmarking ("broadcast", "*", "BigFloat", "(true, true)")...
    done (took 6.124212184 seconds)
    (179/341) benchmarking ("map", "*", "Float32", "(false, false)")...
    done (took 1.470614096 seconds)
    (180/341) benchmarking ("perf_simplecopy", "ComplexF64", 1)...
    done (took 1.603471332 seconds)
    (181/341) benchmarking ("collect", "filter", "Float64", 0)...
    done (took 2.227938347 seconds)
    (182/341) benchmarking ("perf_countnothing", "Bool", 1)...
    done (took 1.145390705 seconds)
    (183/341) benchmarking ("perf_sum4", "BigFloat", 0)...
    done (took 6.108348409 seconds)
    (184/341) benchmarking ("broadcast", "*", "BigFloat", "(false, true)")...
    done (took 6.121341936 seconds)
    (185/341) benchmarking ("skipmissing", "collect", "Bool", 0)...
    done (took 1.82361538 seconds)
    (186/341) benchmarking ("perf_sum2", "Int64", 0)...
    done (took 1.156691648 seconds)
    (187/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, false)")...
    done (took 1.450342611 seconds)
    (188/341) benchmarking ("collect", "filter", "Int64", 1)...
    done (took 2.629746496 seconds)
    (189/341) benchmarking ("collect", "filter", "Int8", 1)...
    done (took 2.418353494 seconds)
    (190/341) benchmarking ("broadcast", "*", "Int8", "(true, true)")...
    done (took 1.56014143 seconds)
    (191/341) benchmarking ("collect", "filter", "BigFloat", 1)...
    done (took 2.334384679 seconds)
    (192/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int64}", 1)...
    done (took 1.156316598 seconds)
    (193/341) benchmarking ("perf_binaryop", "*", "Float32", "(false, false)")...
    done (took 1.490465782 seconds)
    (194/341) benchmarking ("map", "identity", "ComplexF64", 0)...
    done (took 1.378213796 seconds)
    (195/341) benchmarking ("map", "identity", "BigInt", 0)...
    done (took 1.398133724 seconds)
    (196/341) benchmarking ("broadcast", "abs", "Bool", 0)...
    done (took 1.317458438 seconds)
    (197/341) benchmarking ("map", "*", "Float32", "(false, true)")...
    done (took 1.665498728 seconds)
    (198/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Bool}", 0)...
    done (took 1.237218571 seconds)
    (199/341) benchmarking ("collect", "filter", "ComplexF64", 0)...
    done (took 2.443601438 seconds)
    (200/341) benchmarking ("skipmissing", "collect", "BigInt", 0)...
    done (took 2.25233479 seconds)
    (201/341) benchmarking ("collect", "all", "BigInt", 0)...
    done (took 1.397279887 seconds)
    (202/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, true)")...
    done (took 6.117873773 seconds)
    (203/341) benchmarking ("map", "abs", "Float64", 0)...
    done (took 2.622317512 seconds)
    (204/341) benchmarking ("skipmissing", "collect", "ComplexF64", 0)...
    done (took 2.316570563 seconds)
    (205/341) benchmarking ("perf_simplecopy", "ComplexF64", 0)...
    done (took 1.596144325 seconds)
    (206/341) benchmarking ("collect", "all", "Int64", 1)...
    done (took 1.48592215 seconds)
    (207/341) benchmarking ("broadcast", "abs", "Float32", 1)...
    done (took 1.341687212 seconds)
    (208/341) benchmarking ("skipmissing", "sum", "Union{Missing, Float32}", 1)...
    done (took 1.343172559 seconds)
    (209/341) benchmarking ("perf_simplecopy", "BigFloat", 0)...
    done (took 1.42967503 seconds)
    (210/341) benchmarking ("sort", "Union{Missing, Int64}", 1)...
    done (took 6.118971104 seconds)
    (211/341) benchmarking ("perf_sum3", "BigInt", 0)...
    done (took 6.117186082 seconds)
    (212/341) benchmarking ("perf_sum2", "BigFloat", 0)...
    done (took 8.306846248 seconds)
    (213/341) benchmarking ("perf_simplecopy", "Int64", 0)...
    done (took 1.428257788 seconds)
    (214/341) benchmarking ("perf_countnothing", "Float64", 0)...
    done (took 1.147517057 seconds)
    (215/341) benchmarking ("perf_sum", "BigInt", 0)...
    done (took 7.873152977 seconds)
    (216/341) benchmarking ("map", "abs", "BigInt", 0)...
    done (took 6.223274899 seconds)
    (217/341) benchmarking ("perf_sum2", "ComplexF64", 1)...
    done (took 2.188952582 seconds)
    (218/341) benchmarking ("broadcast", "*", "ComplexF64", "(true, true)")...
    done (took 2.033656179 seconds)
    (219/341) benchmarking ("map", "abs", "Float32", 0)...
    done (took 1.290746326 seconds)
    (220/341) benchmarking ("collect", "filter", "Bool", 1)...
    done (took 2.413989909 seconds)
    (221/341) benchmarking ("broadcast", "abs", "Float32", 0)...
    done (took 1.217934763 seconds)
    (222/341) benchmarking ("skipmissing", "collect", "Union{Missing, BigFloat}", 1)...
    done (took 2.216879692 seconds)
    (223/341) benchmarking ("broadcast", "abs", "ComplexF64", 0)...
    done (took 2.675732162 seconds)
    (224/341) benchmarking ("perf_sum4", "Float32", 0)...
    done (took 1.131466244 seconds)
    (225/341) benchmarking ("perf_simplecopy", "BigInt", 0)...
    done (took 1.444628441 seconds)
    (226/341) benchmarking ("perf_sum", "Float32", 0)...
    done (took 1.339360499 seconds)
    (227/341) benchmarking ("collect", "filter", "BigFloat", 0)...
    done (took 2.298148128 seconds)
    (228/341) benchmarking ("broadcast", "identity", "Float32", 1)...
    done (took 1.31479489 seconds)
    (229/341) benchmarking ("perf_sum4", "Float64", 1)...
    done (took 1.151237687 seconds)
    (230/341) benchmarking ("map", "abs", "Int64", 0)...
    done (took 1.283728822 seconds)
    (231/341) benchmarking ("broadcast", "abs", "Int8", 1)...
    done (took 1.300390992 seconds)
    (232/341) benchmarking ("perf_sum3", "Int64", 1)...
    done (took 1.256169844 seconds)
    (233/341) benchmarking ("collect", "all", "Float32", 1)...
    done (took 1.375950209 seconds)
    (234/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.261293044 seconds)
    (235/341) benchmarking ("perf_countequals", "Float64")...
    done (took 1.520733233 seconds)
    (236/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigInt}", 0)...
    done (took 6.136432508 seconds)
    (237/341) benchmarking ("perf_sum4", "Int8", 1)...
    done (took 3.510728773 seconds)
    (238/341) benchmarking ("broadcast", "abs", "BigInt", 0)...
    done (took 6.111858015 seconds)
    (239/341) benchmarking ("broadcast", "identity", "Bool", 1)...
    done (took 2.217251306 seconds)
    (240/341) benchmarking ("perf_countnothing", "Int64", 1)...
    done (took 1.150315993 seconds)
    (241/341) benchmarking ("skipmissing", "sum", "Float32", 0)...
    done (took 1.129943308 seconds)
    (242/341) benchmarking ("broadcast", "*", "Int8", "(false, false)")...
    done (took 1.449859989 seconds)
    (243/341) benchmarking ("collect", "all", "Bool", 1)...
    done (took 1.298025712 seconds)
    (244/341) benchmarking ("perf_simplecopy", "Int64", 1)...
    done (took 1.430673124 seconds)
    (245/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigInt}", 0)...
    done (took 2.303813253 seconds)
    (246/341) benchmarking ("perf_sum2", "Float64", 0)...
    done (took 1.279324907 seconds)
    (247/341) benchmarking ("perf_binaryop", "*", "BigFloat", "(true, true)")...
    done (took 6.105110678 seconds)
    (248/341) benchmarking ("perf_countnothing", "Int64", 0)...
    done (took 1.286744256 seconds)
    (249/341) benchmarking ("map", "*", "Int8", "(false, true)")...
    done (took 1.717453101 seconds)
    (250/341) benchmarking ("perf_binaryop", "*", "ComplexF64", "(false, false)")...
    done (took 1.967889372 seconds)
    (251/341) benchmarking ("map", "abs", "ComplexF64", 1)...
    done (took 2.681792093 seconds)
    (252/341) benchmarking ("map", "*", "ComplexF64", "(false, true)")...
    done (took 2.094326248 seconds)
    (253/341) benchmarking ("perf_countnothing", "Bool", 0)...
    done (took 1.150922931 seconds)
    (254/341) benchmarking ("map", "*", "BigFloat", "(false, true)")...
    done (took 6.105903925 seconds)
    (255/341) benchmarking ("broadcast", "*", "Bool", "(true, true)")...
    done (took 1.537366444 seconds)
    (256/341) benchmarking ("broadcast", "*", "Float32", "(true, true)")...
    done (took 1.54594663 seconds)
    (257/341) benchmarking ("perf_simplecopy", "Int8", 0)...
    done (took 1.185315965 seconds)
    (258/341) benchmarking ("perf_sum4", "ComplexF64", 1)...
    done (took 1.252823295 seconds)
    (259/341) benchmarking ("collect", "all", "BigInt", 1)...
    done (took 1.782116501 seconds)
    (260/341) benchmarking ("perf_sum4", "Bool", 1)...
    done (took 1.157252894 seconds)
    (261/341) benchmarking ("collect", "all", "Int8", 1)...
    done (took 1.320191871 seconds)
    (262/341) benchmarking ("sort", "Union{Missing, Float32}", 1)...
    done (took 6.121073023 seconds)
    (263/341) benchmarking ("perf_sum4", "BigFloat", 1)...
    done (took 6.120291134 seconds)
    (264/341) benchmarking ("collect", "filter", "ComplexF64", 1)...
    done (took 2.771602624 seconds)
    (265/341) benchmarking ("perf_simplecopy", "Float32", 1)...
    done (took 1.245229181 seconds)
    (266/341) benchmarking ("perf_simplecopy", "Float64", 0)...
    done (took 1.358927039 seconds)
    (267/341) benchmarking ("map", "*", "Float64", "(true, true)")...
    done (took 1.815734362 seconds)
    (268/341) benchmarking ("perf_binaryop", "*", "BigInt", "(false, false)")...
    done (took 6.120962191 seconds)
    (269/341) benchmarking ("map", "abs", "Float64", 1)...
    done (took 2.758059232 seconds)
    (270/341) benchmarking ("collect", "filter", "Int64", 0)...
    done (took 2.143841543 seconds)
    (271/341) benchmarking ("map", "*", "Bool", "(false, true)")...
    done (took 1.653068786 seconds)
    (272/341) benchmarking ("broadcast", "*", "Float64", "(false, true)")...
    done (took 1.652618407 seconds)
    (273/341) benchmarking ("skipmissing", "sum", "ComplexF64", 0)...
    done (took 1.171992696 seconds)
    (274/341) benchmarking ("collect", "all", "Int64", 0)...
    done (took 1.23814184 seconds)
    (275/341) benchmarking ("perf_sum3", "BigInt", 1)...
    done (took 7.601178743 seconds)
    (276/341) benchmarking ("skipmissing", "collect", "Union{Nothing, ComplexF64}", 0)...
    done (took 3.099478923 seconds)
    (277/341) benchmarking ("perf_simplecopy", "BigFloat", 1)...
    done (took 1.515880513 seconds)
    (278/341) benchmarking ("perf_countnothing", "ComplexF64", 0)...
    done (took 1.153449462 seconds)
    (279/341) benchmarking ("broadcast", "identity", "Int8", 1)...
    done (took 1.270582804 seconds)
    (280/341) benchmarking ("map", "identity", "Int64", 1)...
    done (took 1.492773655 seconds)
    (281/341) benchmarking ("collect", "all", "Float32", 0)...
    done (took 1.23563041 seconds)
    (282/341) benchmarking ("broadcast", "identity", "Int64", 0)...
    done (took 1.245201628 seconds)
    (283/341) benchmarking ("sort", "Union{Missing, BigInt}", 1)...
    done (took 6.108360358 seconds)
    (284/341) benchmarking ("skipmissing", "sum", "Union{Missing, Int8}", 1)...
    done (took 1.157978136 seconds)
    (285/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Float64}", 0)...
    done (took 2.583161628 seconds)
    (286/341) benchmarking ("skipmissing", "collect", "Union{Nothing, Int8}", 0)...
    done (took 2.340620859 seconds)
    (287/341) benchmarking ("perf_binaryop", "*", "Float64", "(true, true)")...
    done (took 1.63485181 seconds)
    (288/341) benchmarking ("perf_sum", "Bool", 0)...
    done (took 1.160509574 seconds)
    (289/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, true)")...
    done (took 1.486604544 seconds)
    (290/341) benchmarking ("broadcast", "abs", "BigInt", 1)...
    done (took 7.428240985 seconds)
    (291/341) benchmarking ("broadcast", "abs", "Float64", 0)...
    done (took 1.345055964 seconds)
    (292/341) benchmarking ("skipmissing", "sum", "Bool", 0)...
    done (took 1.131735465 seconds)
    (293/341) benchmarking ("collect", "all", "Int8", 0)...
    done (took 1.198834332 seconds)
    (294/341) benchmarking ("perf_binaryop", "*", "Bool", "(false, true)")...
    done (took 1.536981763 seconds)
    (295/341) benchmarking ("broadcast", "abs", "Int8", 0)...
    done (took 1.244575727 seconds)
    (296/341) benchmarking ("broadcast", "*", "Int8", "(false, true)")...
    done (took 1.543281283 seconds)
    (297/341) benchmarking ("skipmissing", "sum", "Union{Nothing, BigFloat}", 0)...
    done (took 6.122212184 seconds)
    (298/341) benchmarking ("perf_sum", "Bool", 1)...
    done (took 1.266773932 seconds)
    (299/341) benchmarking ("broadcast", "*", "Int64", "(false, false)")...
    done (took 1.370301886 seconds)
    (300/341) benchmarking ("perf_sum4", "Bool", 0)...
    done (took 1.142814615 seconds)
    (301/341) benchmarking ("broadcast", "abs", "BigFloat", 1)...
    done (took 6.210678668 seconds)
    (302/341) benchmarking ("map", "identity", "Int64", 0)...
    done (took 1.254239592 seconds)
    (303/341) benchmarking ("skipmissing", "sum", "BigInt", 0)...
    done (took 6.146832048 seconds)
    (304/341) benchmarking ("perf_sum2", "BigInt", 1)...
    done (took 8.178626264 seconds)
    (305/341) benchmarking ("map", "identity", "Int8", 1)...
    done (took 3.777662921 seconds)
    (306/341) benchmarking ("skipmissing", "collect", "Union{Nothing, BigFloat}", 0)...
    done (took 2.302858583 seconds)
    (307/341) benchmarking ("skipmissing", "collect", "Int64", 0)...
    done (took 2.027327306 seconds)
    (308/341) benchmarking ("sort", "Bool", 0)...
    done (took 1.351583521 seconds)
    (309/341) benchmarking ("perf_sum4", "BigInt", 0)...
    done (took 6.116285131 seconds)
    (310/341) benchmarking ("perf_sum2", "Float32", 0)...
    done (took 3.071452748 seconds)
    (311/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float32}", 0)...
    done (took 1.276531554 seconds)
    (312/341) benchmarking ("broadcast", "identity", "Int8", 0)...
    done (took 1.217324284 seconds)
    (313/341) benchmarking ("map", "identity", "ComplexF64", 1)...
    done (took 1.746071992 seconds)
    (314/341) benchmarking ("perf_binaryop", "*", "Int64", "(true, true)")...
    done (took 1.682518987 seconds)
    (315/341) benchmarking ("sort", "Union{Nothing, Int8}", 0)...
    done (took 6.122145393 seconds)
    (316/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.39762208 seconds)
    (317/341) benchmarking ("map", "*", "BigFloat", "(true, true)")...
    done (took 6.134014915 seconds)
    (318/341) benchmarking ("map", "abs", "Int64", 1)...
    done (took 1.478032058 seconds)
    (319/341) benchmarking ("skipmissing", "sum", "Int64", 0)...
    done (took 1.143473388 seconds)
    (320/341) benchmarking ("perf_countnothing", "ComplexF64", 1)...
    done (took 1.132933822 seconds)
    (321/341) benchmarking ("skipmissing", "sum", "Union{Nothing, Float64}", 0)...
    done (took 1.241023072 seconds)
    (322/341) benchmarking ("perf_sum3", "Int8", 0)...
    done (took 1.211368773 seconds)
    (323/341) benchmarking ("perf_sum4", "BigInt", 1)...
    done (took 6.105038844 seconds)
    (324/341) benchmarking ("perf_sum2", "Bool", 0)...
    done (took 3.390617721 seconds)
    (325/341) benchmarking ("broadcast", "abs", "Bool", 1)...
    done (took 1.285151723 seconds)
    (326/341) benchmarking ("perf_binaryop", "*", "Float64", "(false, true)")...
    done (took 1.641279354 seconds)
    (327/341) benchmarking ("skipmissing", "collect", "Union{Missing, Float64}", 1)...
    done (took 2.232228703 seconds)
    (328/341) benchmarking ("skipmissing", "collect", "Union{Missing, Int8}", 1)...
    done (took 1.978870073 seconds)
    (329/341) benchmarking ("map", "abs", "BigInt", 1)...
    done (took 6.123755143 seconds)
    (330/341) benchmarking ("perf_countnothing", "BigFloat", 0)...
    done (took 3.042799764 seconds)
    (331/341) benchmarking ("map", "abs", "Int8", 0)...
    done (took 1.233392464 seconds)
    (332/341) benchmarking ("perf_binaryop", "*", "Int8", "(false, false)")...
    done (took 1.424382535 seconds)
    (333/341) benchmarking ("sort", "Float64", 0)...
    done (took 6.12332689 seconds)
    (334/341) benchmarking ("perf_sum2", "Int8", 1)...
    done (took 1.132964597 seconds)
    (335/341) benchmarking ("perf_sum", "ComplexF64", 1)...
    done (took 1.314961984 seconds)
    (336/341) benchmarking ("sort", "Int8", 0)...
    done (took 4.793321893 seconds)
    (337/341) benchmarking ("collect", "filter", "BigInt", 0)...
    done (took 2.224680179 seconds)
    (338/341) benchmarking ("perf_sum4", "Int64", 0)...
    done (took 1.151598236 seconds)
    (339/341) benchmarking ("broadcast", "identity", "ComplexF64", 0)...
    done (took 1.359660457 seconds)
    (340/341) benchmarking ("sort", "Union{Missing, Float64}", 1)...
    done (took 6.120068319 seconds)
    (341/341) benchmarking ("collect", "all", "BigFloat", 1)...
    done (took 1.801568235 seconds)
  done (took 877.056461283 seconds)
done (took 878.267529797 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.157025376 seconds)
  (2/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 2.500414081 seconds)
  (3/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 1.321340874 seconds)
  (4/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.982472918 seconds)
  (5/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.914825562 seconds)
  (6/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.764559312 seconds)
  (7/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 1.3360257 seconds)
  (8/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.349789805 seconds)
  (9/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.196863928 seconds)
  (10/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 1.334798637 seconds)
  (11/152) benchmarking ("inner", "Int32", 4096)...
  done (took 2.032774595 seconds)
  (12/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.918774633 seconds)
  (13/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.209769626 seconds)
  (14/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.230549556 seconds)
  (15/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.203610148 seconds)
  (16/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.220412072 seconds)
  (17/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 2.294013326 seconds)
  (18/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.355308646 seconds)
  (19/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.237622591 seconds)
  (20/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 2.055316129 seconds)
  (21/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.480729067 seconds)
  (22/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 2.06519105 seconds)
  (23/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.536039456 seconds)
  (24/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.411487995 seconds)
  (25/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 2.503621587 seconds)
  (26/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.213596264 seconds)
  (27/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.181098518 seconds)
  (28/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.475790949 seconds)
  (29/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.468798125 seconds)
  (30/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 2.306846255 seconds)
  (31/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 2.316322269 seconds)
  (32/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 1.316770463 seconds)
  (33/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.958948523 seconds)
  (34/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 2.362386281 seconds)
  (35/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.204851448 seconds)
  (36/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.198171583 seconds)
  (37/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.966611057 seconds)
  (38/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.208279926 seconds)
  (39/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.143478353 seconds)
  (40/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.203385557 seconds)
  (41/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 2.491159241 seconds)
  (42/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.243174156 seconds)
  (43/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.83612694 seconds)
  (44/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 2.050397091 seconds)
  (45/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.894401281 seconds)
  (46/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.537778266 seconds)
  (47/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.965305056 seconds)
  (48/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.218787952 seconds)
  (49/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.234763344 seconds)
  (50/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 1.293694664 seconds)
  (51/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.144380135 seconds)
  (52/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.141284987 seconds)
  (53/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.474240518 seconds)
  (54/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 2.328798696 seconds)
  (55/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 2.007962521 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 2.064731044 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.468434864 seconds)
  (58/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.978215682 seconds)
  (59/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.848026699 seconds)
  (60/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 1.293373058 seconds)
  (61/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.492506561 seconds)
  (62/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.220744669 seconds)
  (63/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 1.293305096 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.34996662 seconds)
  (65/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.243962317 seconds)
  (66/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.411675841 seconds)
  (67/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.535642491 seconds)
  (68/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.14461612 seconds)
  (69/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 1.319351471 seconds)
  (70/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 1.343448589 seconds)
  (71/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.360555178 seconds)
  (72/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.341373178 seconds)
  (73/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 2.241113214 seconds)
  (74/152) benchmarking ("inner", "Float32", 4096)...
  done (took 2.257864967 seconds)
  (75/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.241514365 seconds)
  (76/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 1.334669308 seconds)
  (77/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.983842657 seconds)
  (78/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 1.319825077 seconds)
  (79/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.906154088 seconds)
  (80/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.212511213 seconds)
  (81/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 2.071901351 seconds)
  (82/152) benchmarking ("inner", "Int32", 4095)...
  done (took 2.034774225 seconds)
  (83/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 2.070999096 seconds)
  (84/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.195995567 seconds)
  (85/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.157700487 seconds)
  (86/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.896012898 seconds)
  (87/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 2.211058891 seconds)
  (88/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 2.073998047 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.234588148 seconds)
  (90/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 1.319172819 seconds)
  (91/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 2.028014597 seconds)
  (92/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 1.317252357 seconds)
  (93/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.574258607 seconds)
  (94/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.181841002 seconds)
  (95/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.15760199 seconds)
  (96/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 1.315212861 seconds)
  (97/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 2.22209562 seconds)
  (98/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.139527528 seconds)
  (99/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 2.287698543 seconds)
  (100/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 1.321664334 seconds)
  (101/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.912671921 seconds)
  (102/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.181280597 seconds)
  (103/152) benchmarking ("inner", "Float32", 4095)...
  done (took 2.125853664 seconds)
  (104/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.197413751 seconds)
  (105/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.21867716 seconds)
  (106/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.147368476 seconds)
  (107/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.182120796 seconds)
  (108/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.533091359 seconds)
  (109/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.341462739 seconds)
  (110/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 2.277299673 seconds)
  (111/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 2.494795582 seconds)
  (112/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.239128508 seconds)
  (113/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.341229321 seconds)
  (114/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.230618346 seconds)
  (115/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.19109497 seconds)
  (116/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.900351452 seconds)
  (117/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.400531092 seconds)
  (118/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.957781769 seconds)
  (119/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.14448119 seconds)
  (120/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.796408007 seconds)
  (121/152) benchmarking ("inner", "Float64", 4095)...
  done (took 2.396970778 seconds)
  (122/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.203848964 seconds)
  (123/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 2.490961972 seconds)
  (124/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.411452461 seconds)
  (125/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.161959671 seconds)
  (126/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.214994361 seconds)
  (127/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.218647963 seconds)
  (128/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 2.064609482 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.224309923 seconds)
  (130/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.220118092 seconds)
  (131/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 2.303869357 seconds)
  (132/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.568259622 seconds)
  (133/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 1.293932233 seconds)
  (134/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.97110452 seconds)
  (135/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.347633006 seconds)
  (136/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 2.016633335 seconds)
  (137/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.353856266 seconds)
  (138/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.348262346 seconds)
  (139/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.191332395 seconds)
  (140/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 2.003586593 seconds)
  (141/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.217697295 seconds)
  (142/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 2.264883092 seconds)
  (143/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.412593874 seconds)
  (144/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 2.496630379 seconds)
  (145/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.357237317 seconds)
  (146/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.41299283 seconds)
  (147/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.241526365 seconds)
  (148/152) benchmarking ("inner", "Float64", 4096)...
  done (took 2.410064123 seconds)
  (149/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.138979829 seconds)
  (150/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.236913409 seconds)
  (151/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.340823068 seconds)
  (152/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 2.234745705 seconds)
done (took 243.727383789 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.46680893 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 5.217877544 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.382398683 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.336903684 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.474110119 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.41156439 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.184088498 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.577619567 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.164975019 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.529584746 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.315626118 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 3.08899585 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 5.246304775 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.360484706 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.467868504 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.350171925 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.165969345 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.368281621 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.56220487 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.499437366 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.948480744 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.346759973 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.246481217 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.50882917 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.108113149 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.965963129 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.419493525 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.227900961 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.380219332 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.880190109 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 3.046278801 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.405104604 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.416156495 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 4.876320226 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 3.538031454 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 2.804222523 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.432956767 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 2.97835557 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.365162117 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.451285536 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.309627628 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 5.957905408 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.887354751 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.983618148 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.217854255 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.425783308 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.181423211 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 5.017960039 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.113291026 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 2.808928018 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.381913913 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 2.90073081 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 3.096644845 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.4085987 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.353958642 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 4.760544692 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.508849318 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.503802629 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.498289611 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.412062414 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.365445233 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.528459829 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.500176636 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.231424053 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 3.009530061 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.420608033 seconds)
  done (took 147.40343647 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.539074902 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.411599465 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.517135742 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 2.340397151 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.639456679 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.535203262 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 2.448381371 seconds)
  done (took 13.530021784 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 2.174177636 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.167007678 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.407235892 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.407214801 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.167924778 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.292997631 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.252840931 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 2.900800324 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.416493983 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.208137739 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 1.482011084 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.412393717 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 2.771530346 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.907594164 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.260105794 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.404693459 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 2.148628944 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.232265794 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.223637821 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.421763833 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 2.908271415 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 2.852073946 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.320542392 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.14505636 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.167421851 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.212790587 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.162168761 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 2.133773652 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.160373119 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.149268766 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.173462799 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.274703931 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.161547811 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.84469153 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.148328178 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.48690688 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.172335989 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.164102027 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.29941295 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.106159587 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.153476183 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.167826216 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.306056349 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.171917872 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.146862235 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.352095297 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.149704521 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.175520485 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.152129199 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.163001579 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.354042151 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.159517494 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.153920687 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 2.773894371 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.372957455 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 2.832937036 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.230390728 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.157382464 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.163336813 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.221483937 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.164115004 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.421348363 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.389541359 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.149351162 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.405238693 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 1.469177895 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.168430724 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.146989952 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.144025378 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 1.4074566 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.163634506 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.357908863 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.16661509 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 1.213963538 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.172121207 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.290180969 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.352710037 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.962583483 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.933008753 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.781325247 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.491342947 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.149199792 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 2.494871553 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 2.108738635 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 2.777665261 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.153290066 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.166188361 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 2.812566518 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 2.081547861 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.160366701 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.474812005 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.145189626 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.219221678 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 1.215361057 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.149059415 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.223660773 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.325308028 seconds)
  done (took 151.714379432 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 2.23999604 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 3.431457095 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.325369081 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 2.044977641 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 2.12823995 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 2.331223805 seconds)
  done (took 14.60012676 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 2.497970503 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.92661462 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.185262563 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.191795124 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.217474525 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.118175336 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.118065264 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.355769685 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 2.349154758 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.166183382 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.124435077 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.118782031 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.117687228 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.303314134 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.124121872 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.164889265 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.11793661 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.184085707 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.167719879 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.233815263 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 1.462475457 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.217170105 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.230631645 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 2.050560389 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 2.217745618 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.173992485 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.88373419 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.168803077 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.168487249 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 2.477260192 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.351089197 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.118508305 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 2.006634506 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 3.552560218 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.847094225 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 2.051732727 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.35452946 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.121067541 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.164672308 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.118098514 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.12287532 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.226934756 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.183178305 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.118000051 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 2.535282315 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 3.014278258 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 2.220042355 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.411047829 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.117914608 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.125402915 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.119097043 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.192441359 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.11847515 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.122380117 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 3.606138892 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.613479422 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 2.112221001 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.123892485 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.218363749 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 2.058719076 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 2.284764462 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.121406907 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.509368771 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 2.109304217 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 2.804188109 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.122238533 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 2.063128425 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.338255097 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.234458297 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.182620442 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.118817018 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.179114024 seconds)
  done (took 117.09364749 seconds)
done (took 445.444768607 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.299583672 seconds)
  done (took 7.398594638 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.251419936 seconds)
  done (took 7.497163447 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.109628048 seconds)
  done (took 7.220875318 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.114874928 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.134082479 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.134736021 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.130670648 seconds)
  done (took 25.657707175 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.590681459 seconds)
  done (took 7.69902832 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.106787706 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.130105088 seconds)
  done (took 13.422866736 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.134310247 seconds)
  done (took 7.261344465 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.426973148 seconds)
  done (took 7.543114842 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.124003799 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.126501116 seconds)
  done (took 13.390150936 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.109510397 seconds)
  done (took 7.21702998 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.493056274 seconds)
  done (took 8.686743278 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.113031012 seconds)
  done (took 7.242004848 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.156436611 seconds)
  done (took 7.263918209 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.206182773 seconds)
  done (took 7.312586409 seconds)
done (took 135.918614992 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.106138772 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.118373663 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.120952751 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.116741889 seconds)
  done (took 25.561250997 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.444989374 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.448695013 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.421232672 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.49427986 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.389582902 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.387920677 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.444028797 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.442754922 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.394126013 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.488949228 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.443870681 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.597175472 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.495490396 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.420254896 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.421050714 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.495332105 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.495442076 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.443715167 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.391159219 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.42063368 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.486537901 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.494615973 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.872819034 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.854966409 seconds)
  done (took 36.799899597 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.334364366 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.564720914 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.27239409 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.445139125 seconds)
  done (took 6.716136269 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.15575709 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.492891402 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.480979975 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.535046105 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.475531866 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 1.289646622 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.482744311 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 1.328001392 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 1.297155844 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 1.301452147 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.742456578 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.27020354 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.282141771 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.53866152 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 1.289552499 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.118544534 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.118377824 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 1.262684984 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.495034491 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 1.333664193 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.380743708 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.477407754 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.474580549 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.475593468 seconds)
  done (took 34.199008051 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.955741374 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 2.045029514 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 2.481028569 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 2.023226029 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.826961371 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.910878764 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 2.398070561 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.623859158 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.384925216 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 2.361640482 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.847595356 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.851972853 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.265984034 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 2.003402718 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.876878027 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.300565754 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.29542024 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.962173861 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.538675651 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 2.419288757 seconds)
  done (took 38.477037746 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.112545108 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 6.11430697 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.352337755 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.282015774 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.10972223 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.116869833 seconds)
  done (took 28.187730671 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 3.408982354 seconds)
    (2/12) benchmarking ("push_single!", 256)...
    done (took 1.248206351 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.401671915 seconds)
    (4/12) benchmarking ("push_multiple!", 256)...
    done (took 1.370116365 seconds)
    (5/12) benchmarking ("push_single!", 2048)...
    done (took 1.273512415 seconds)
    (6/12) benchmarking ("push_single!", 8)...
    done (took 1.238472929 seconds)
    (7/12) benchmarking ("prerend!", 2048)...
    done (took 1.646719978 seconds)
    (8/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.336853494 seconds)
    (9/12) benchmarking ("push_multiple!", 8)...
    done (took 1.877777989 seconds)
    (10/12) benchmarking ("append!", 2048)...
    done (took 1.80818299 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 2.53999147 seconds)
    (12/12) benchmarking ("prerend!", 8)...
    done (took 1.535184013 seconds)
  done (took 21.795864005 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.113238833 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.154621667 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.118476629 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.347770922 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 2.435626425 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 3.881017468 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 3.130083376 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.107611959 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 2.640768776 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.371885134 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 3.249785082 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.350402183 seconds)
  done (took 45.01963247 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.337967691 seconds)
    (2/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.279138661 seconds)
    (3/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.414331774 seconds)
    (4/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.151785711 seconds)
    (5/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.522318473 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.157516476 seconds)
    (7/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.47533285 seconds)
    (8/608) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.074398621 seconds)
    (9/608) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.852594379 seconds)
    (10/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.871676535 seconds)
    (11/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.489505614 seconds)
    (12/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.123620149 seconds)
    (13/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.649269825 seconds)
    (14/608) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 4.082829344 seconds)
    (15/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.114756124 seconds)
    (16/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.408223129 seconds)
    (17/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.929140302 seconds)
    (18/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.609482456 seconds)
    (19/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.416397858 seconds)
    (20/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.157663633 seconds)
    (21/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.078224383 seconds)
    (22/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.252044888 seconds)
    (23/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.106941025 seconds)
    (24/608) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.557630389 seconds)
    (25/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.396857319 seconds)
    (26/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.107920841 seconds)
    (27/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.354952634 seconds)
    (28/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.357794165 seconds)
    (29/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.106291311 seconds)
    (30/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.366995269 seconds)
    (31/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.113835045 seconds)
    (32/608) benchmarking ("sumvector_view", "Matrix{Int64}")...
    done (took 1.600124384 seconds)
    (33/608) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 1.322591604 seconds)
    (34/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.418044408 seconds)
    (35/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.508231233 seconds)
    (36/608) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.155219222 seconds)
    (37/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.238592863 seconds)
    (38/608) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.656314695 seconds)
    (39/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.706641468 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.406371777 seconds)
    (41/608) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.25838705 seconds)
    (42/608) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 1.276782279 seconds)
    (43/608) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.108351237 seconds)
    (44/608) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 2.126862342 seconds)
    (45/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.373811932 seconds)
    (46/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.93470061 seconds)
    (47/608) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.110853595 seconds)
    (48/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.771441708 seconds)
    (49/608) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.097979249 seconds)
    (50/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.263001833 seconds)
    (51/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.017994508 seconds)
    (52/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.726669547 seconds)
    (53/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.568119153 seconds)
    (54/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.076574454 seconds)
    (55/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.25822966 seconds)
    (56/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.400020786 seconds)
    (57/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.364985212 seconds)
    (58/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.165745048 seconds)
    (59/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.361383064 seconds)
    (60/608) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 5.192685602 seconds)
    (61/608) benchmarking ("sumlinear_view", "Matrix{Float64}")...
    done (took 6.318292312 seconds)
    (62/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.238112614 seconds)
    (63/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.338392471 seconds)
    (64/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.079040774 seconds)
    (65/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.394874433 seconds)
    (66/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.468200348 seconds)
    (67/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 3.184469457 seconds)
    (68/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.34706134 seconds)
    (69/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.432256838 seconds)
    (70/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.400093709 seconds)
    (71/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.472301209 seconds)
    (72/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.283163786 seconds)
    (73/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.951243634 seconds)
    (74/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.24189825 seconds)
    (75/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.652908561 seconds)
    (76/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.027248915 seconds)
    (77/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.483931684 seconds)
    (78/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.109934462 seconds)
    (79/608) benchmarking ("mapr_access", "Matrix{Int64}")...
    done (took 2.827177886 seconds)
    (80/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.648259939 seconds)
    (81/608) benchmarking ("sumcartesian", "Matrix{Float64}")...
    done (took 4.090174187 seconds)
    (82/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.230491256 seconds)
    (83/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.887949343 seconds)
    (84/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.07867942 seconds)
    (85/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.107018961 seconds)
    (86/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.287553142 seconds)
    (87/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.976988083 seconds)
    (88/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.082199368 seconds)
    (89/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.121769475 seconds)
    (90/608) benchmarking ("sumlogical_view", "Matrix{Int64}")...
    done (took 5.208529263 seconds)
    (91/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.551916406 seconds)
    (92/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.235047973 seconds)
    (93/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.252251468 seconds)
    (94/608) benchmarking ("sum", "3dsubarray")...
    done (took 1.302839399 seconds)
    (95/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.823558099 seconds)
    (96/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.090114969 seconds)
    (97/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.115890432 seconds)
    (98/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.38802913 seconds)
    (99/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.079376268 seconds)
    (100/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.6776934 seconds)
    (101/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.110787188 seconds)
    (102/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.164589087 seconds)
    (103/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.113522602 seconds)
    (104/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.723963425 seconds)
    (105/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.481786867 seconds)
    (106/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.902597441 seconds)
    (107/608) benchmarking ("sumcartesian", "Matrix{Int64}")...
    done (took 1.887954229 seconds)
    (108/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.742632821 seconds)
    (109/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.418013908 seconds)
    (110/608) benchmarking "5d"...
    done (took 2.708069789 seconds)
    (111/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.274312832 seconds)
    (112/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.113717835 seconds)
    (113/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.475042646 seconds)
    (114/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.437649525 seconds)
    (115/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.110920485 seconds)
    (116/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.873339379 seconds)
    (117/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.113363949 seconds)
    (118/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.220828904 seconds)
    (119/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.471041861 seconds)
    (120/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.107967716 seconds)
    (121/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.093184594 seconds)
    (122/608) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.512479853 seconds)
    (123/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.32231649 seconds)
    (124/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.104667084 seconds)
    (125/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.375537301 seconds)
    (126/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.116703411 seconds)
    (127/608) benchmarking ("sumrange_view", "Matrix{Float64}")...
    done (took 2.269090189 seconds)
    (128/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.108716463 seconds)
    (129/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.692206088 seconds)
    (130/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.083023649 seconds)
    (131/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.360738526 seconds)
    (132/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.558095741 seconds)
    (133/608) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 2.202376375 seconds)
    (134/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.271891793 seconds)
    (135/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.079564926 seconds)
    (136/608) benchmarking ("sumcolon_view", "Matrix{Float64}")...
    done (took 2.263831361 seconds)
    (137/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.547208495 seconds)
    (138/608) benchmarking ("sumrange", "Matrix{Float64}")...
    done (took 6.187926144 seconds)
    (139/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.444978045 seconds)
    (140/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.414844688 seconds)
    (141/608) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.30035931 seconds)
    (142/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.571304228 seconds)
    (143/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.105132448 seconds)
    (144/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.942638023 seconds)
    (145/608) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 1.467958798 seconds)
    (146/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.334596214 seconds)
    (147/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.454218345 seconds)
    (148/608) benchmarking ("sumlogical", "BitMatrix")...
    done (took 2.755118564 seconds)
    (149/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.274700645 seconds)
    (150/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.12579264 seconds)
    (151/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.107012843 seconds)
    (152/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.310053127 seconds)
    (153/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.119737734 seconds)
    (154/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.691676233 seconds)
    (155/608) benchmarking ("sumcolon", "Matrix{Int64}")...
    done (took 6.108379568 seconds)
    (156/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.898422138 seconds)
    (157/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.807956707 seconds)
    (158/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.373647524 seconds)
    (159/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.107071966 seconds)
    (160/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.274912031 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.081642135 seconds)
    (162/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.357317433 seconds)
    (163/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.673049776 seconds)
    (164/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.127457992 seconds)
    (165/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.283226481 seconds)
    (166/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.386980714 seconds)
    (167/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.279075182 seconds)
    (168/608) benchmarking "ind2sub"...
    done (took 6.111518572 seconds)
    (169/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.08371408 seconds)
    (170/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.379610373 seconds)
    (171/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.367401013 seconds)
    (172/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.561894295 seconds)
    (173/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.346842757 seconds)
    (174/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.676703232 seconds)
    (175/608) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 1.420313191 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.603998741 seconds)
    (177/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.343087165 seconds)
    (178/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.486513568 seconds)
    (179/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 3.850515376 seconds)
    (180/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.529458925 seconds)
    (181/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.350265868 seconds)
    (182/608) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.506915177 seconds)
    (183/608) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.122471728 seconds)
    (184/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.140520498 seconds)
    (185/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.210337905 seconds)
    (186/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.549711445 seconds)
    (187/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.338732469 seconds)
    (188/608) benchmarking ("sumcartesian_view", "Matrix{Float64}")...
    done (took 1.898925379 seconds)
    (189/608) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.437836433 seconds)
    (190/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.38469037 seconds)
    (191/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.150029267 seconds)
    (192/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.123223596 seconds)
    (193/608) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 4.08658684 seconds)
    (194/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.266497171 seconds)
    (195/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.473419629 seconds)
    (196/608) benchmarking ("sumelt_boundscheck", "Matrix{Float64}")...
    done (took 4.111729107 seconds)
    (197/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.603234391 seconds)
    (198/608) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.199173019 seconds)
    (199/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.430069662 seconds)
    (200/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.624828477 seconds)
    (201/608) benchmarking ("sumelt", "1:100000")...
    done (took 1.140921203 seconds)
    (202/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.406950063 seconds)
    (203/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.876743769 seconds)
    (204/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.492768638 seconds)
    (205/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.464172306 seconds)
    (206/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.43995469 seconds)
    (207/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.093822009 seconds)
    (208/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 5.32512816 seconds)
    (209/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 2.635293982 seconds)
    (210/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 3.218464019 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.173995406 seconds)
    (212/608) benchmarking ("sumlogical", "Matrix{Float64}")...
    done (took 5.399373963 seconds)
    (213/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.054018502 seconds)
    (214/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.135282644 seconds)
    (215/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.115587599 seconds)
    (216/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.46331134 seconds)
    (217/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.999782816 seconds)
    (218/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 1.797652332 seconds)
    (219/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.640801773 seconds)
    (220/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.661468333 seconds)
    (221/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.024008739 seconds)
    (222/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.26838468 seconds)
    (223/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.494632062 seconds)
    (224/608) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.124348665 seconds)
    (225/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.024223808 seconds)
    (226/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.252857197 seconds)
    (227/608) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 5.198007652 seconds)
    (228/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.9810295 seconds)
    (229/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.548408733 seconds)
    (230/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.330335842 seconds)
    (231/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.437230864 seconds)
    (232/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.114081432 seconds)
    (233/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.11755665 seconds)
    (234/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.398569233 seconds)
    (235/608) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.426536644 seconds)
    (236/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.438802908 seconds)
    (237/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.606060872 seconds)
    (238/608) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.339324226 seconds)
    (239/608) benchmarking ("sumrange", "BitMatrix")...
    done (took 1.781469246 seconds)
    (240/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.220849974 seconds)
    (241/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.74125677 seconds)
    (242/608) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 1.279098093 seconds)
    (243/608) benchmarking ("sumeach", "1:100000")...
    done (took 1.147246973 seconds)
    (244/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.770048419 seconds)
    (245/608) benchmarking ("sumvector", "1:100000")...
    done (took 3.037125285 seconds)
    (246/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.972621825 seconds)
    (247/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.321216186 seconds)
    (248/608) benchmarking ("sumlogical", "1:100000")...
    done (took 1.779551785 seconds)
    (249/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.289578027 seconds)
    (250/608) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.008135463 seconds)
    (251/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.389586125 seconds)
    (252/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.112515336 seconds)
    (253/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.468922325 seconds)
    (254/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.686112919 seconds)
    (255/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.096397392 seconds)
    (256/608) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 2.037783212 seconds)
    (257/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.232071222 seconds)
    (258/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.116267857 seconds)
    (259/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.304717083 seconds)
    (260/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.877621768 seconds)
    (261/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.135658715 seconds)
    (262/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.78685706 seconds)
    (263/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.356743928 seconds)
    (264/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.364626952 seconds)
    (265/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.316651168 seconds)
    (266/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.485359491 seconds)
    (267/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.5077501 seconds)
    (268/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.426759674 seconds)
    (269/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.084519807 seconds)
    (270/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.275315363 seconds)
    (271/608) benchmarking "4d"...
    done (took 2.213830666 seconds)
    (272/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.412600457 seconds)
    (273/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.109456127 seconds)
    (274/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.404891284 seconds)
    (275/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.730800712 seconds)
    (276/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.690784983 seconds)
    (277/608) benchmarking ("sumcartesian_view", "Matrix{Int64}")...
    done (took 1.902366526 seconds)
    (278/608) benchmarking ("sumvector", "Matrix{Float64}")...
    done (took 1.582578711 seconds)
    (279/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.331513886 seconds)
    (280/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.889800703 seconds)
    (281/608) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 1.466851585 seconds)
    (282/608) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 1.318863663 seconds)
    (283/608) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.413495006 seconds)
    (284/608) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 2.004083672 seconds)
    (285/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.705231178 seconds)
    (286/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.092993648 seconds)
    (287/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.256952045 seconds)
    (288/608) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 4.079391698 seconds)
    (289/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.852556763 seconds)
    (290/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.401706976 seconds)
    (291/608) benchmarking ("sumvector_view", "Matrix{Float64}")...
    done (took 1.479170614 seconds)
    (292/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.469907914 seconds)
    (293/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.134183081 seconds)
    (294/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.510814873 seconds)
    (295/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.451854998 seconds)
    (296/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.183334204 seconds)
    (297/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.271242795 seconds)
    (298/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.375933172 seconds)
    (299/608) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.108240895 seconds)
    (300/608) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.419459012 seconds)
    (301/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.108611059 seconds)
    (302/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.529543107 seconds)
    (303/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.506418798 seconds)
    (304/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.114959861 seconds)
    (305/608) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.448192237 seconds)
    (306/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.29556122 seconds)
    (307/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.445137781 seconds)
    (308/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.278565694 seconds)
    (309/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.768285363 seconds)
    (310/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.122913769 seconds)
    (311/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.256415102 seconds)
    (312/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.675513711 seconds)
    (313/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.288619619 seconds)
    (314/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.252712431 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.455228392 seconds)
    (316/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.899090933 seconds)
    (317/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.118057632 seconds)
    (318/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.180642559 seconds)
    (319/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.295837456 seconds)
    (320/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.751726638 seconds)
    (321/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.46832727 seconds)
    (322/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.68356503 seconds)
    (323/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.59638088 seconds)
    (324/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.422055751 seconds)
    (325/608) benchmarking ("sumlinear", "Matrix{Int64}")...
    done (took 1.88744821 seconds)
    (326/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.111424152 seconds)
    (327/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.353069357 seconds)
    (328/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.275442717 seconds)
    (329/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.114366459 seconds)
    (330/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.319912769 seconds)
    (331/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.478152608 seconds)
    (332/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.141686729 seconds)
    (333/608) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 1.338270056 seconds)
    (334/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.417331414 seconds)
    (335/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.249374302 seconds)
    (336/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.657890512 seconds)
    (337/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.187174773 seconds)
    (338/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.79460643 seconds)
    (339/608) benchmarking ("sumcolon", "1:100000")...
    done (took 2.249730822 seconds)
    (340/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.6332526 seconds)
    (341/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.653271278 seconds)
    (342/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.89803286 seconds)
    (343/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.521826464 seconds)
    (344/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.121731897 seconds)
    (345/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.525243463 seconds)
    (346/608) benchmarking "3d"...
    done (took 2.060591267 seconds)
    (347/608) benchmarking ("sum", "3darray")...
    done (took 2.273679817 seconds)
    (348/608) benchmarking ("sumlogical", "Matrix{Int64}")...
    done (took 5.396076888 seconds)
    (349/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.725291396 seconds)
    (350/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.15180935 seconds)
    (351/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.968601038 seconds)
    (352/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.903051027 seconds)
    (353/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.28586978 seconds)
    (354/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.556281058 seconds)
    (355/608) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 5.263081015 seconds)
    (356/608) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 2.874836361 seconds)
    (357/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.283475468 seconds)
    (358/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.348814567 seconds)
    (359/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.34925547 seconds)
    (360/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.24955691 seconds)
    (361/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.07792017 seconds)
    (362/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 1.700290308 seconds)
    (363/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.887291131 seconds)
    (364/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.395276629 seconds)
    (365/608) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 1.27896127 seconds)
    (366/608) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 1.313576221 seconds)
    (367/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.282815436 seconds)
    (368/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.294454383 seconds)
    (369/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.690647398 seconds)
    (370/608) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.422034068 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Matrix{Int64}")...
    done (took 1.878737507 seconds)
    (372/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.470083082 seconds)
    (373/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.315687668 seconds)
    (374/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.079804569 seconds)
    (375/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.114968941 seconds)
    (376/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.393199372 seconds)
    (377/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.472738416 seconds)
    (378/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.122401644 seconds)
    (379/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.405405161 seconds)
    (380/608) benchmarking ("sumvector", "BitMatrix")...
    done (took 1.435903588 seconds)
    (381/608) benchmarking ("sumrange", "Matrix{Int64}")...
    done (took 6.137210464 seconds)
    (382/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.117499594 seconds)
    (383/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.126516146 seconds)
    (384/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.41344017 seconds)
    (385/608) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 2.854992489 seconds)
    (386/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.839583709 seconds)
    (387/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.344145611 seconds)
    (388/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.500402025 seconds)
    (389/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.680792313 seconds)
    (390/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.109361529 seconds)
    (391/608) benchmarking ("sumelt", "Matrix{Int64}")...
    done (took 1.889086515 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.352873177 seconds)
    (393/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.471836421 seconds)
    (394/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.483084748 seconds)
    (395/608) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.91159094 seconds)
    (396/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.496312515 seconds)
    (397/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.412995196 seconds)
    (398/608) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 2.266096533 seconds)
    (399/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.087575172 seconds)
    (400/608) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 1.316938375 seconds)
    (401/608) benchmarking ("sumeach_view", "Matrix{Float64}")...
    done (took 6.118607456 seconds)
    (402/608) benchmarking ("sumcolon", "Matrix{Float64}")...
    done (took 6.227127486 seconds)
    (403/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.980435725 seconds)
    (404/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.426991707 seconds)
    (405/608) benchmarking ("sumlogical_view", "Matrix{Float64}")...
    done (took 5.19492063 seconds)
    (406/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.946462108 seconds)
    (407/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.746301356 seconds)
    (408/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.106617137 seconds)
    (409/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.157097271 seconds)
    (410/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.542830071 seconds)
    (411/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.333943061 seconds)
    (412/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.313575948 seconds)
    (413/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.108476421 seconds)
    (414/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 1.704873378 seconds)
    (415/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.479562557 seconds)
    (416/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.267012822 seconds)
    (417/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.095763331 seconds)
    (418/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.879169627 seconds)
    (419/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.079940471 seconds)
    (420/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.352576 seconds)
    (421/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.110630424 seconds)
    (422/608) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 2.277928732 seconds)
    (423/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.951053086 seconds)
    (424/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.220989729 seconds)
    (425/608) benchmarking ("sumcolon_view", "Matrix{Int64}")...
    done (took 2.788006546 seconds)
    (426/608) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.532380715 seconds)
    (427/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.133270199 seconds)
    (428/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.314553811 seconds)
    (429/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.081838702 seconds)
    (430/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.872260112 seconds)
    (431/608) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 4.104900234 seconds)
    (432/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.710664061 seconds)
    (433/608) benchmarking ("sumeach", "Matrix{Int64}")...
    done (took 1.902602335 seconds)
    (434/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.365798521 seconds)
    (435/608) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 2.631305361 seconds)
    (436/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.320541627 seconds)
    (437/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.113714422 seconds)
    (438/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.444283383 seconds)
    (439/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.247680607 seconds)
    (440/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.413326181 seconds)
    (441/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.369003952 seconds)
    (442/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.475186416 seconds)
    (443/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.505918327 seconds)
    (444/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.372563498 seconds)
    (445/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.376042728 seconds)
    (446/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 5.613004171 seconds)
    (447/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.273608563 seconds)
    (448/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.359975175 seconds)
    (449/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.079861883 seconds)
    (450/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.09939302 seconds)
    (451/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.148180632 seconds)
    (452/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.487363937 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.473105061 seconds)
    (454/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.109339968 seconds)
    (455/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.669477069 seconds)
    (456/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.363900034 seconds)
    (457/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.288639666 seconds)
    (458/608) benchmarking ("sumeach_view", "Matrix{Int64}")...
    done (took 6.297535858 seconds)
    (459/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.234339373 seconds)
    (460/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.704501945 seconds)
    (461/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.32177148 seconds)
    (462/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.288987915 seconds)
    (463/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.287300809 seconds)
    (464/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.141884478 seconds)
    (465/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.436792624 seconds)
    (466/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.11564829 seconds)
    (467/608) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 1.363788506 seconds)
    (468/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.10926768 seconds)
    (469/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.134202084 seconds)
    (470/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.350712312 seconds)
    (471/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.365209457 seconds)
    (472/608) benchmarking "sub2ind"...
    done (took 6.492371021 seconds)
    (473/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.423938803 seconds)
    (474/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.715321473 seconds)
    (475/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.27550537 seconds)
    (476/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.582589761 seconds)
    (477/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.809560919 seconds)
    (478/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.642409954 seconds)
    (479/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.116155822 seconds)
    (480/608) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.916996424 seconds)
    (481/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 1.433447507 seconds)
    (482/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.109224221 seconds)
    (483/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.473627755 seconds)
    (484/608) benchmarking "6d"...
    done (took 2.724500764 seconds)
    (485/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.321062361 seconds)
    (486/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.386098172 seconds)
    (487/608) benchmarking ("sumrange", "1:100000")...
    done (took 2.375715106 seconds)
    (488/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.129929567 seconds)
    (489/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.328010309 seconds)
    (490/608) benchmarking ("sumrange_view", "Matrix{Int64}")...
    done (took 2.61621698 seconds)
    (491/608) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.124600517 seconds)
    (492/608) benchmarking ("sumvector", "Matrix{Int64}")...
    done (took 1.70466745 seconds)
    (493/608) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 1.481131009 seconds)
    (494/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.109600184 seconds)
    (495/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.479941968 seconds)
    (496/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.153172727 seconds)
    (497/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.282568844 seconds)
    (498/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 1.892122657 seconds)
    (499/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.615258178 seconds)
    (500/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.112656117 seconds)
    (501/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.880107444 seconds)
    (502/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.224809071 seconds)
    (503/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.65898035 seconds)
    (504/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.814522608 seconds)
    (505/608) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.115785564 seconds)
    (506/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.212375483 seconds)
    (507/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.712056705 seconds)
    (508/608) benchmarking ("sumelt", "Matrix{Float64}")...
    done (took 4.089158233 seconds)
    (509/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.116736277 seconds)
    (510/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.245133509 seconds)
    (511/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.650036536 seconds)
    (512/608) benchmarking ("sumlinear_view", "Matrix{Int64}")...
    done (took 6.120247378 seconds)
    (513/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.585753264 seconds)
    (514/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.220012108 seconds)
    (515/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.283935929 seconds)
    (516/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.119431691 seconds)
    (517/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.261911033 seconds)
    (518/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.108865745 seconds)
    (519/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.352298904 seconds)
    (520/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.712759854 seconds)
    (521/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.363656616 seconds)
    (522/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.383550696 seconds)
    (523/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.322661549 seconds)
    (524/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.118369776 seconds)
    (525/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 1.699695719 seconds)
    (526/608) benchmarking ("sumcolon", "BitMatrix")...
    done (took 1.785059411 seconds)
    (527/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.215021167 seconds)
    (528/608) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 1.342315511 seconds)
    (529/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.15777504 seconds)
    (530/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.430492072 seconds)
    (531/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.041588691 seconds)
    (532/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.114447887 seconds)
    (533/608) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.677048855 seconds)
    (534/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.282839951 seconds)
    (535/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.068905798 seconds)
    (536/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.502141324 seconds)
    (537/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.370538534 seconds)
    (538/608) benchmarking ("sumlinear", "1:100000")...
    done (took 1.138785387 seconds)
    (539/608) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 1.340813719 seconds)
    (540/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.109290247 seconds)
    (541/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.42011668 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.270644028 seconds)
    (543/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.603315715 seconds)
    (544/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.351575658 seconds)
    (545/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 5.435979812 seconds)
    (546/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.242390673 seconds)
    (547/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.133094837 seconds)
    (548/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.648645586 seconds)
    (549/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.468809454 seconds)
    (550/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.973762878 seconds)
    (551/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.110983258 seconds)
    (552/608) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.42926748 seconds)
    (553/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.108656455 seconds)
    (554/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.65962483 seconds)
    (555/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.827666348 seconds)
    (556/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.273591934 seconds)
    (557/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.27343356 seconds)
    (558/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.837261626 seconds)
    (559/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 3.901708832 seconds)
    (560/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 3.068521058 seconds)
    (561/608) benchmarking ("sumeach", "Matrix{Float64}")...
    done (took 4.158372573 seconds)
    (562/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.117067626 seconds)
    (563/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 1.331313966 seconds)
    (564/608) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 2.621668306 seconds)
    (565/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.086160622 seconds)
    (566/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.66126915 seconds)
    (567/608) benchmarking "2d"...
    done (took 2.189329076 seconds)
    (568/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.36560568 seconds)
    (569/608) benchmarking "7d"...
    done (took 1.439576353 seconds)
    (570/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.080500006 seconds)
    (571/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.321563954 seconds)
    (572/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.126777491 seconds)
    (573/608) benchmarking ("sumlinear", "Matrix{Float64}")...
    done (took 4.098062255 seconds)
    (574/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.614648897 seconds)
    (575/608) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.119433741 seconds)
    (576/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.464336863 seconds)
    (577/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.082498012 seconds)
    (578/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.659845798 seconds)
    (579/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.118648393 seconds)
    (580/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.23679246 seconds)
    (581/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.282418711 seconds)
    (582/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.434841629 seconds)
    (583/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.110220397 seconds)
    (584/608) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.836271357 seconds)
    (585/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.385725958 seconds)
    (586/608) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.115782928 seconds)
    (587/608) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.115213567 seconds)
    (588/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.478836919 seconds)
    (589/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.262680716 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.369920036 seconds)
    (591/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.466077001 seconds)
    (592/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.324668642 seconds)
    (593/608) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 1.462597603 seconds)
    (594/608) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.023601056 seconds)
    (595/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.667068051 seconds)
    (596/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.316058458 seconds)
    (597/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.425419482 seconds)
    (598/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.946492311 seconds)
    (599/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.670945552 seconds)
    (600/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 5.217121266 seconds)
    (601/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 1.637674319 seconds)
    (602/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.648834143 seconds)
    (603/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.318344622 seconds)
    (604/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.649409952 seconds)
    (605/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.358629536 seconds)
    (606/608) benchmarking ("mapr_access", "Matrix{Float64}")...
    done (took 2.843142854 seconds)
    (607/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.257274901 seconds)
    (608/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.612342182 seconds)
  done (took 1943.089100674 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.159477403 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 6.24097179 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.22181798 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.200670245 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.165345882 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.210290942 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.196531434 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.133307201 seconds)
  done (took 50.636752983 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hcat", 500)...
    done (took 6.108253058 seconds)
    (2/17) benchmarking "4467"...
    done (took 6.164079715 seconds)
    (3/17) benchmarking ("vcat_setind", 5)...
    done (took 5.645984526 seconds)
    (4/17) benchmarking ("catnd_setind", 500)...
    done (took 6.303058954 seconds)
    (5/17) benchmarking ("vcat", 500)...
    done (took 6.142360272 seconds)
    (6/17) benchmarking ("vcat", 5)...
    done (took 5.335571899 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.279010687 seconds)
    (8/17) benchmarking ("hvcat_setind", 5)...
    done (took 5.638228309 seconds)
    (9/17) benchmarking ("vcat_setind", 500)...
    done (took 6.322278416 seconds)
    (10/17) benchmarking ("hvcat", 5)...
    done (took 5.160055397 seconds)
    (11/17) benchmarking ("hcat_setind", 500)...
    done (took 6.186662133 seconds)
    (12/17) benchmarking ("hcat", 5)...
    done (took 6.196471636 seconds)
    (13/17) benchmarking ("hvcat", 500)...
    done (took 6.129155349 seconds)
    (14/17) benchmarking ("catnd", 500)...
    done (took 6.156421259 seconds)
    (15/17) benchmarking ("hcat_setind", 5)...
    done (took 6.049517941 seconds)
    (16/17) benchmarking ("catnd", 5)...
    done (took 1.203325879 seconds)
    (17/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.12069287 seconds)
  done (took 93.314089404 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.14083625 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.511782546 seconds)
    (3/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.125776003 seconds)
    (4/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 10.038183809 seconds)
    (5/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.174188662 seconds)
    (6/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.531524358 seconds)
    (7/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.127245199 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.121688154 seconds)
    (9/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.56119161 seconds)
    (10/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.77388373 seconds)
    (11/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.126796934 seconds)
    (12/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.258527771 seconds)
  done (took 81.638830846 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 4)...
    done (took 1.149569252 seconds)
    (2/5) benchmarking ("setindex!", 3)...
    done (took 1.154114898 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.148033518 seconds)
    (4/5) benchmarking ("setindex!", 1)...
    done (took 1.147841961 seconds)
    (5/5) benchmarking ("setindex!", 2)...
    done (took 1.147933047 seconds)
  done (took 6.856717139 seconds)
done (took 2413.413116088 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 1.414396198 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 1.639728124 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 1.673010024 seconds)
  done (took 4.414434908 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 1.185467588 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.254008412 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.316165548 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 1.25904831 seconds)
  done (took 6.14359817 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 1.392421027 seconds)
    (2/2) benchmarking "Float64"...
    done (took 1.606671057 seconds)
  done (took 4.100868635 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 1.503123642 seconds)
  (6/15) benchmarking "18129"...
  done (took 6.128083854 seconds)
  (7/15) benchmarking "20517"...
  done (took 1.664469023 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.111284993 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.121435596 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.120308159 seconds)
  done (took 19.472486609 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.1388279 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.141556856 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.141851253 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.140262458 seconds)
  done (took 5.68078851 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.107971125 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.140173672 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.119560217 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.125363194 seconds)
  done (took 18.594966373 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 1.426484949 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 1.201878351 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 1.862553931 seconds)
  done (took 5.608183672 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.928723114 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.248853157 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.915233706 seconds)
  done (took 6.198966581 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.061459446 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.145479638 seconds)
  done (took 5.314493897 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.28383961 seconds)
  done (took 2.387003148 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.602687238 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.600313273 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 1.755783584 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 1.839027119 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.007913156 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 1.409737959 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 1.486140155 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 1.392982377 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 1.608187885 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 1.618395977 seconds)
  done (took 17.423518843 seconds)
done (took 107.151967982 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.000078687 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.522015055 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.268873039 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.174314252 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.211809917 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.267203115 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.126763709 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.974555909 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.415922366 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.416094408 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.310307576 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.211491605 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.156352064 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.521681685 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.157355212 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.488204593 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.275146828 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.024496002 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.400973775 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 3.997506257 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.131204204 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.699273801 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.037631781 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.708530525 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.290528386 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.277838536 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.06168409 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.497184432 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.631181023 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.070317528 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.285941326 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.240936975 seconds)
  done (took 151.956464072 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.109701286 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.124892845 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.125114582 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.119600026 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.2227269 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.128397523 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.119922857 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.119182367 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.820898479 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.820148786 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.125901903 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.231409006 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.129018611 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.119884038 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.126934379 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.120500678 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 4.950467709 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.125299009 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.129212716 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.125931136 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.126699729 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.987125616 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.12562457 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.999485531 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 4.950065131 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.128792567 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.121104445 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.125296072 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.125320394 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.127199623 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.130127671 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.120646719 seconds)
  done (took 188.085616354 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.108728356 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.12913639 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.125172128 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.120491661 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.125671754 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.125918905 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.124447899 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.120263862 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.124422055 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.124435073 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.128950587 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.125336224 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.126853753 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.119500354 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.125957261 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.12056201 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.123378049 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.124434652 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.123951304 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.130572276 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.12490492 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.120406009 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.124378978 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.128851544 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.124218678 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.124403162 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.120893927 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.12443619 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.131030455 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.124645269 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.125193387 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.120756868 seconds)
  done (took 197.091431651 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.419724394 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.152288256 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.037638887 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 1.689677332 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.01199141 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.144286538 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 1.688306 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.420989043 seconds)
  done (took 13.685649752 seconds)
done (took 551.939586267 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.779946574 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.024084359 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.303443269 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.352847101 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.72574462 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.422738351 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.353285418 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.558428641 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 1.865702343 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.531134427 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 1.580958423 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.336306019 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 1.91897409 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.347881514 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.322600775 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.587949454 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 1.554972116 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 1.841163828 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.331746287 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 1.977459655 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.337080746 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.023824458 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.581167131 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 1.912878461 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 1.587835375 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.060669624 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.274991676 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 1.55390289 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.332317113 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.342967405 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.179915787 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.555955468 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.357077909 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.363648259 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.616560966 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.584984984 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.50497444 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.557814466 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.291899937 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 1.809390843 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.007370769 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 1.730172047 seconds)
  done (took 75.390655 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.140142185 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.162278449 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.305689983 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.220058443 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.796534376 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.217309692 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.378863248 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.360770928 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.23141651 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.343356305 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.390691339 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.810258529 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.383555453 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.812375018 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.375702894 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.402027545 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.225731276 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.768023494 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.37186309 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.351505369 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.185799751 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.308416032 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.184069484 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.334575927 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.179604716 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.1999635 seconds)
  done (took 36.579296168 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.189900209 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.335231444 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.377379822 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 3.204481946 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.372022928 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.134095364 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.485620212 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.316533341 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.948135018 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.503051789 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.254947583 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.28796638 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.331125567 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.409550023 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 4.414471292 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.258170095 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.308918779 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.314495465 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.346382199 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 3.239163624 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.228973542 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.230318356 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.488443581 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 3.215948894 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.792206873 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 4.685067573 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.358438731 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.724946584 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 4.165945249 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.413109387 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.287965607 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.475017603 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.533027562 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.377401708 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.287148422 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.162460816 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.163936094 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.248244828 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.11331671 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.3139398 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.481166571 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 4.529506033 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.423797101 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.698530238 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 4.416972525 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.307755368 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.60539017 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.261417483 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.280304727 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.941572667 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.444573275 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 3.839788411 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.264174955 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.336887011 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.275525715 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.504897026 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.331584372 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.470986869 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.238205505 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.749353545 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.231419098 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.546112922 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.344921778 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 4.42825984 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.394744824 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.350591648 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 3.195606571 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 4.713452333 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.421541076 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 4.134776377 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.826087688 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.229116964 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.190814924 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.246031355 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.341199947 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.64041387 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 4.122747079 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.388851067 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.547937922 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.476162086 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.364737234 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.740906981 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.135432783 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.687986212 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.183197058 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.150228778 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.242964252 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.489747865 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.468625901 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.645780746 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.702657889 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.493279492 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.644405241 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 3.346726382 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 4.730631821 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.504990534 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.150795094 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.170743185 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.363172745 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.707798734 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.232059741 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 3.262986474 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.784231491 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 4.530205216 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.519500546 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.295532926 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.501488747 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 4.426374299 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.501328677 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.143546605 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 3.245528671 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 3.175922548 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.414879873 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.43854058 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.141093014 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.680469682 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.269206668 seconds)
  done (took 237.065076477 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.116254714 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.126185821 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.120546529 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.126377532 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.118067863 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.656176412 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.16590877 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.117916393 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.650150141 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.165650864 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.117131195 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.119473798 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.120007734 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.126838687 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 3.224692541 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 3.276127289 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.846587827 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.118634916 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.116088935 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.122124178 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.822821506 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.118293816 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.116125272 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.121412133 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.123805205 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.117919988 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.128457968 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.165939839 seconds)
  done (took 151.375419209 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.171153083 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.540460164 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.202567715 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.273225748 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.213138804 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.184703688 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.682990097 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.316405296 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.247691581 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.183149967 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.184905538 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.405847556 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.495864486 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.764975819 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.30589864 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.40842405 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.818289963 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.325304496 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.183273275 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.181775474 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.335694399 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.547348728 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.439840855 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.434388566 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.327130258 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.437866161 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.255915354 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.171964234 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.2929715 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.762989942 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.195616089 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.541260037 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.327140865 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.180664549 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.779517516 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.53411242 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.748725202 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.81909955 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.370782227 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.139957968 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.137264368 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.413755795 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.548272257 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.236848248 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.171248134 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.889684509 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.199156507 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.43916516 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.20123929 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.142023523 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.283354422 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.291166692 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.422563639 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 3.169072265 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.374217303 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.359452554 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.769233206 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 6.160597647 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.242350642 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.485896327 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.154464766 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.663867732 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.669174427 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.236456281 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.186805848 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.045334016 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.270649211 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.697409366 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.798504 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.223574093 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.518329338 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.379965465 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.155344873 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.445122674 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.356166322 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.677158191 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.751542715 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.322775015 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.277559182 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.253534777 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.45665899 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.16731318 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.733253692 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.279978827 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.152157977 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.66930111 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.572497694 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.150251393 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.175012941 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.271451766 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.342970758 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.390801474 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.518744506 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.255090314 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.114815959 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.436162766 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.454697864 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.19004935 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.303008795 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.167572304 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.586646435 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.365283826 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.159200631 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.505525744 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.646768817 seconds)
  done (took 157.941464146 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 1.909606069 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.224009332 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.377022443 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.707905408 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.529618836 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.574173802 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.391159331 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.249248439 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.429619641 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 1.397038229 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.382510337 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.261113647 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 3.133950831 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.928140542 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.227898488 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.348064234 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.249592915 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 1.76424536 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.473385742 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.164191726 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.473925845 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 1.904510564 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.481153124 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 1.59046035 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.574792794 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.650870878 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 1.827368498 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.289169551 seconds)
  done (took 48.63204106 seconds)
done (took 708.087297318 seconds)
SAVING RESULT...
DONE!
