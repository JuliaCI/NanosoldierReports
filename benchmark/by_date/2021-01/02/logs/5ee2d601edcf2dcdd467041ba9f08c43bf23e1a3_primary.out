cset: moving following pidspec: 23325
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.81983019 seconds)
loading group "shootout"... done (took 1.12472729 seconds)
loading group "string"... done (took 0.667867138 seconds)
loading group "linalg"... done (took 8.581789945 seconds)
loading group "parallel"... done (took 0.164928212 seconds)
loading group "find"... done (took 3.019705756 seconds)
loading group "tuple"... done (took 2.127837846 seconds)
loading group "union"... done (took 14.787736696 seconds)
loading group "dates"... done (took 1.445834652 seconds)
loading group "micro"... done (took 0.218931355 seconds)
loading group "simd"... done (took 4.768812061 seconds)
loading group "io"... done (took 1.077646137 seconds)
loading group "random"... done (took 9.531123387 seconds)
loading group "problem"... done (took 1.51117392 seconds)
loading group "array"... done (took 25.212071635 seconds)
loading group "misc"... done (took 1.885968331 seconds)
loading group "scalar"... done (took 43.388412594 seconds)
loading group "sort"... done (took 3.318458646 seconds)
loading group "sparse"... done (took 12.620011717 seconds)
loading group "collection"... done (took 18.023196616 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.413899686 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.111280009 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.123236478 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.109422857 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.176857169 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.116301691 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.123563808 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.080890144 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.887461963 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.133971754 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.110858271 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.410265167 seconds)
done (took 5.113421915 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 0.163357048 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.08694175 seconds)
    (2/2) benchmarking "String"...
    done (took 0.080024113 seconds)
  done (took 1.263195538 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.06831054 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.057763999 seconds)
    (3/3) benchmarking "different"...
    done (took 0.064132231 seconds)
  done (took 1.286491587 seconds)
  (4/7) benchmarking "replace"...
  done (took 0.062577698 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.13059393 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.063515857 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.063921263 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.064250913 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.06389979 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.063231924 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.06355711 seconds)
  done (took 1.61279714 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.068741044 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.064868847 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.062767037 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.064556555 seconds)
  done (took 1.359895376 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.062811069 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.117074485 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.062151766 seconds)
    (4/4) benchmarking "different"...
    done (took 0.061802635 seconds)
  done (took 1.39994728 seconds)
done (took 8.262728014 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.134179357 seconds)
    (2/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.817460805 seconds)
    (3/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.752428958 seconds)
    (4/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.11863354 seconds)
    (5/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.240652778 seconds)
    (6/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.358327298 seconds)
    (7/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.119852026 seconds)
    (8/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.178237407 seconds)
    (9/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.085260577 seconds)
    (10/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.072712493 seconds)
    (11/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.11699502 seconds)
    (12/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.074644151 seconds)
    (13/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.37796424 seconds)
    (14/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.483708767 seconds)
    (15/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.067922323 seconds)
    (16/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.165055249 seconds)
    (17/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.637843708 seconds)
    (18/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.084058454 seconds)
    (19/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127893436 seconds)
    (20/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.36195299 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.069959988 seconds)
    (22/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.084354525 seconds)
    (23/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080634068 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.068257728 seconds)
    (25/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.242089669 seconds)
    (26/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.149608591 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.650293115 seconds)
    (28/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.088957131 seconds)
    (29/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.065425841 seconds)
    (30/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.091454057 seconds)
    (31/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.067734184 seconds)
    (32/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.074770122 seconds)
  done (took 10.241699383 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.088564588 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.085917622 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.065919973 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.120015783 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.090542645 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.067322677 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.07261251 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.0656764 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086203973 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.119727769 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.085986434 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.09494413 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.063564988 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.066511566 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.070211628 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.190399527 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.077460754 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081245775 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.065025151 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.078147693 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.101483081 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.07531255 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.074906563 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.074764051 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.12629409 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.16444395 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.092869761 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.095298544 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.062784196 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.075801354 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.111946922 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.121344505 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.064457591 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.062659801 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.115688509 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.091780713 seconds)
  done (took 4.39563263 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.86082578 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.092932598 seconds)
    (2/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.079738956 seconds)
    (3/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.070993711 seconds)
    (4/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.102429637 seconds)
    (5/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.110166801 seconds)
    (6/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.116475817 seconds)
    (7/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.118233454 seconds)
    (8/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.095522355 seconds)
    (9/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.071414872 seconds)
    (10/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.144491887 seconds)
    (11/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.650445838 seconds)
    (12/118) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 2.095384364 seconds)
    (13/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.068642165 seconds)
    (14/118) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.094219416 seconds)
    (15/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.116042224 seconds)
    (16/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.348723139 seconds)
    (17/118) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.035348866 seconds)
    (18/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.067376552 seconds)
    (19/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.065268776 seconds)
    (20/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.067927536 seconds)
    (21/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.066780264 seconds)
    (22/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.108677112 seconds)
    (23/118) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.080805363 seconds)
    (24/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.063088041 seconds)
    (25/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.170178979 seconds)
    (26/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.566061495 seconds)
    (27/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.06864229 seconds)
    (28/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.067126729 seconds)
    (29/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.093046495 seconds)
    (30/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.062381558 seconds)
    (31/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.134451218 seconds)
    (32/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.089003638 seconds)
    (33/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.066527421 seconds)
    (34/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.534295704 seconds)
    (35/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.062816353 seconds)
    (36/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.06120547 seconds)
    (37/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.190640525 seconds)
    (38/118) benchmarking ("3-arg mul!", 2)...
    done (took 0.092187608 seconds)
    (39/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.064145283 seconds)
    (40/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.065606194 seconds)
    (41/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.075570118 seconds)
    (42/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.06407272 seconds)
    (43/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.105046459 seconds)
    (44/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.076310401 seconds)
    (45/118) benchmarking ("5-arg mul!", 3)...
    done (took 0.493648985 seconds)
    (46/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.06692208 seconds)
    (47/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.562574963 seconds)
    (48/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.218900103 seconds)
    (49/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.069125733 seconds)
    (50/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.068510419 seconds)
    (51/118) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.098289981 seconds)
    (52/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.062071099 seconds)
    (53/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.064811646 seconds)
    (54/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.122308561 seconds)
    (55/118) benchmarking ("5-arg mul!", 2)...
    done (took 0.139920803 seconds)
    (56/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.063992302 seconds)
    (57/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.265384275 seconds)
    (58/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.065164269 seconds)
    (59/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.065577307 seconds)
    (60/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.066191763 seconds)
    (61/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.095251064 seconds)
    (62/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.064328139 seconds)
    (63/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.066048049 seconds)
    (64/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.070140224 seconds)
    (65/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.092391332 seconds)
    (66/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 0.852922297 seconds)
    (67/118) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.085177403 seconds)
    (68/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.092307109 seconds)
    (69/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.063905564 seconds)
    (70/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.396209363 seconds)
    (71/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.070880686 seconds)
    (72/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.066498366 seconds)
    (73/118) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.062273415 seconds)
    (74/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.066340921 seconds)
    (75/118) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.06579518 seconds)
    (76/118) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.102879025 seconds)
    (77/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.063834689 seconds)
    (78/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.063497126 seconds)
    (79/118) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.105309976 seconds)
    (80/118) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.091029863 seconds)
    (81/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.085297847 seconds)
    (82/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.066590961 seconds)
    (83/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.064639895 seconds)
    (84/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.063270032 seconds)
    (85/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.322898246 seconds)
    (86/118) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.061610475 seconds)
    (87/118) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.127157498 seconds)
    (88/118) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.063622917 seconds)
    (89/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.064190369 seconds)
    (90/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.467697205 seconds)
    (91/118) benchmarking ("3-arg mul!", 3)...
    done (took 0.061439673 seconds)
    (92/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.066463534 seconds)
    (93/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.065519714 seconds)
    (94/118) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 0.199086611 seconds)
    (95/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.064697487 seconds)
    (96/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.06180618 seconds)
    (97/118) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.062411799 seconds)
    (98/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.096589486 seconds)
    (99/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.065171877 seconds)
    (100/118) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.345149866 seconds)
    (101/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.06621616 seconds)
    (102/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.438865095 seconds)
    (103/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.06598083 seconds)
    (104/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.09954402 seconds)
    (105/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.115461982 seconds)
    (106/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.064798743 seconds)
    (107/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.095129123 seconds)
    (108/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.065237822 seconds)
    (109/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.062373182 seconds)
    (110/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.070817693 seconds)
    (111/118) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.063148956 seconds)
    (112/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.061988233 seconds)
    (113/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.066874212 seconds)
    (114/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.062990057 seconds)
    (115/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.063747468 seconds)
    (116/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.066321991 seconds)
    (117/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.065380805 seconds)
    (118/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.064618126 seconds)
  done (took 22.24898106 seconds)
done (took 38.846851301 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 512)...
    done (took 0.304203419 seconds)
    (2/5) benchmarking ("identity", 4096)...
    done (took 0.074485242 seconds)
    (3/5) benchmarking ("identity", 2)...
    done (took 0.074785627 seconds)
    (4/5) benchmarking ("identity", 1024)...
    done (took 0.074979108 seconds)
    (5/5) benchmarking ("identity", 64)...
    done (took 0.074847069 seconds)
  done (took 1.751655539 seconds)
done (took 2.985877713 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 0.242400947 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.072229673 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 0.061343724 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.193333502 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 0.085694267 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 0.169220281 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 0.203988453 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 0.153132171 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 0.08382902 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 0.083543774 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 0.083202718 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 0.207878381 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 0.21609916 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 0.083359321 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.15416412 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 0.216417641 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 0.084186882 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 0.061736234 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 0.083535402 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 0.083522479 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 0.083413807 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.061483296 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 0.083394549 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 0.083380112 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.153034928 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 0.083677268 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 0.06110028 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.152978562 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 0.083403025 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.153711606 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 0.083436905 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 0.082790957 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 0.083373544 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.152976514 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 0.083221 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.151606808 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.060939134 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 0.08348635 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 0.082897804 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 0.083394419 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 0.08308844 seconds)
  done (took 5.84592603 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.071686448 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.190241161 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.081501859 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.059843488 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.069043006 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.079305408 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.059493318 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.078793678 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.08501788 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.079146106 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.079290079 seconds)
  done (took 2.157280851 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.067104797 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.080141267 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.080572734 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.058964473 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.070342476 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.0802026 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.05917234 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.079657911 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.082456781 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.080429915 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.08020944 seconds)
  done (took 1.998758066 seconds)
done (took 11.167688928 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 0.09196782 seconds)
    (2/2) benchmarking "11899"...
    done (took 0.062424164 seconds)
  done (took 1.316174354 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.215757226 seconds)
    (2/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.478087851 seconds)
    (3/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 4.569687946 seconds)
    (4/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.088613709 seconds)
    (5/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.069323752 seconds)
    (6/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.082041422 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.189639613 seconds)
    (8/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.064392408 seconds)
  done (took 7.100735221 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.096804594 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.065292033 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.064578025 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.06645129 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.067547291 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.065216227 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.064651326 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.066494838 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.064770771 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.065799034 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.065812541 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.063887761 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.064346761 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.0649647 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.065396062 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.064538663 seconds)
  done (took 2.347773112 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("minimum", (8,))...
    done (took 0.099097117 seconds)
    (2/24) benchmarking ("sumabs", (4,))...
    done (took 0.066153912 seconds)
    (3/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.095699192 seconds)
    (4/24) benchmarking ("minimum", (2,))...
    done (took 0.058882594 seconds)
    (5/24) benchmarking ("sum", (8,))...
    done (took 0.068408089 seconds)
    (6/24) benchmarking ("sumabs", (2,))...
    done (took 0.058909867 seconds)
    (7/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.067236746 seconds)
    (8/24) benchmarking ("minimum", (4, 4))...
    done (took 0.06916288 seconds)
    (9/24) benchmarking ("sumabs", (8,))...
    done (took 0.066677738 seconds)
    (10/24) benchmarking ("sum", (2, 2))...
    done (took 0.068379268 seconds)
    (11/24) benchmarking ("minimum", (2, 2))...
    done (took 0.069937665 seconds)
    (12/24) benchmarking ("sum", (4,))...
    done (took 0.068554831 seconds)
    (13/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.068079516 seconds)
    (14/24) benchmarking ("sumabs", (16,))...
    done (took 0.068410405 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.069234391 seconds)
    (16/24) benchmarking ("sum", (4, 4))...
    done (took 0.068963368 seconds)
    (17/24) benchmarking ("sum", (8, 8))...
    done (took 0.070229806 seconds)
    (18/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.067635232 seconds)
    (19/24) benchmarking ("minimum", (8, 8))...
    done (took 0.069717616 seconds)
    (20/24) benchmarking ("sum", (16, 16))...
    done (took 0.070328228 seconds)
    (21/24) benchmarking ("minimum", (4,))...
    done (took 0.069282422 seconds)
    (22/24) benchmarking ("sum", (16,))...
    done (took 0.069690543 seconds)
    (23/24) benchmarking ("minimum", (16, 16))...
    done (took 0.069744634 seconds)
    (24/24) benchmarking ("sum", (2,))...
    done (took 0.067889147 seconds)
  done (took 2.97435867 seconds)
done (took 14.915745688 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.167500665 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.070531536 seconds)
  done (took 1.410044518 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.063691342 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.064058346 seconds)
  done (took 1.318336926 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.068235521 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.057455334 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.073167038 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.065878616 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.05824344 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.05808244 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.07212897 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.058284749 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.058116782 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.058317799 seconds)
  done (took 1.816975845 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.059296944 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.064349246 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.06286364 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.061065073 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.062942544 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.05959851 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.06158333 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.059326437 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.065083987 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.058307398 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.062211338 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.078679307 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.061680968 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.079513756 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.062401072 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.062371492 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.064160056 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.062573875 seconds)
  done (took 2.33888845 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.057892146 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.058340803 seconds)
  done (took 1.31124018 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.061008593 seconds)
    (2/7) benchmarking "second"...
    done (took 0.058280567 seconds)
    (3/7) benchmarking "month"...
    done (took 0.060202337 seconds)
    (4/7) benchmarking "year"...
    done (took 0.060106553 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.058630635 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.057985848 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.058749187 seconds)
  done (took 1.604975157 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.409166559 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.119347601 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.332936138 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.06573293 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.072786776 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.248685956 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.060935421 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.065152046 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.065316533 seconds)
  done (took 2.673194192 seconds)
done (took 13.672480661 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078154137 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.174431996 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.083267144 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.368791204 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.087844312 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.064142406 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.109133865 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.167130969 seconds)
done (took 2.344384066 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.272768572 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.195951349 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.382006019 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.122139489 seconds)
  done (took 2.900211363 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.323587412 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.075388628 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.073632262 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.063403283 seconds)
  done (took 1.746672365 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.062135063 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068250253 seconds)
  done (took 1.335071611 seconds)
done (took 7.465073414 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067466909 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.088909071 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.058418003 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.063975787 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.060824642 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.060089441 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.060101496 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.0601055 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.060644961 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.058612411 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.058826407 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.060555001 seconds)
    (13/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.059706929 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.060671663 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060581962 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.060347395 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060335986 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060780049 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.060264426 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060254267 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.060202259 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.061464753 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.059519318 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.060492684 seconds)
  done (took 2.717473029 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.075364956 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.062313804 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.063732633 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.063145593 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.063844365 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.063362657 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.063503336 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.062631199 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.063674766 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.062255959 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063860943 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.064104199 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.062407677 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.063554937 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062351514 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.064306514 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.063603566 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062605253 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062021325 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.064141241 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.063616074 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06274067 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.064124537 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063840377 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.06421042 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064091328 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.062395511 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.06281657 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063513343 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.06382707 seconds)
  done (took 3.131095659 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.063021775 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.056813746 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.057188134 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.067199018 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.05692227 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.05732243 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.057686402 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.056797147 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.057280038 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.058267584 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.057723411 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.057394873 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.05785134 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.057227996 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.057393781 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.057822426 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.062172929 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.076420957 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.057142384 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.056974483 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.061594655 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.057492186 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.057437949 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.057243183 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.057684226 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.057772995 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.057031538 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.057580085 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.05748689 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.057964489 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.057440645 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.061937653 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.062568213 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.057479472 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.067568787 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.062262179 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.057195565 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.063814616 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.058099251 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.057043 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.056873706 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.056995607 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.057311008 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.05731532 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.067578464 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.057450513 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.058411362 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.058036346 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.057664693 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.057062521 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.0573917 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.059272844 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066173301 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.058808994 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.057296291 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.058291662 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.057616988 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.057914866 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.057570551 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.057755936 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.057198631 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.061132936 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.058859296 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.057990261 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077962275 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.058554448 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.067688367 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.057548835 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.057762754 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.061506512 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.058160762 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075332738 seconds)
  done (took 5.509792533 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.067340155 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.067424817 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.075378974 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066626517 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061004945 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.05810369 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.06140513 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.058071861 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066777839 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.061465318 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.05813047 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.061223399 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066838446 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.061519432 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.059161742 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067021656 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.061554831 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060926147 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.05828506 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06195045 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.05931047 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.061491778 seconds)
  done (took 2.611432015 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.132921618 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.063095646 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.101419229 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066554627 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06572986 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067004752 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.063154906 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.063480619 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063398777 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064039704 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064040228 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063214764 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065404955 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063995135 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063771608 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064014031 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063296843 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06395933 seconds)
  done (took 2.482782115 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.072778799 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.063056813 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085752448 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.062588071 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.063067909 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.062396606 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065797972 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.066265978 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.06270666 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.063028537 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.066622194 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062444599 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.062509347 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063137961 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06292842 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.062913961 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.062428031 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063021086 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066478479 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066027378 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.0657833 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067442911 seconds)
  done (took 2.662281436 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074845279 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.061933907 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.076489318 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.063295415 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.057264783 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.057453819 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.063023763 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.062242072 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.063379902 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.061754253 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062503185 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.057676921 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.064047192 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.062448156 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.064130932 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062361758 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.061816054 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.062585605 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.061783973 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.057853606 seconds)
  done (took 2.485066923 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067840233 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.060517027 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.060124253 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064368945 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.060200985 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.059999414 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064966368 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.060411077 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.060252946 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.081520801 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.060340842 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.070423769 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064735026 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.063115478 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.060220228 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064880961 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.065140992 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.064788322 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.060441996 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060295999 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.081567029 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.060531537 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.06494108 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.060619848 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.060335067 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.060285793 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.060109828 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.063346679 seconds)
  done (took 3.01334992 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.061221262 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.060055482 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.060781512 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.060925015 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.060703416 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.060488262 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.060660265 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.060632372 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.060154766 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.060956438 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.060929014 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.060922822 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.062849142 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.060587624 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.060543771 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.060733024 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060395399 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.061061733 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.060839984 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061012403 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.060342414 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060522071 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.060522867 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.061159629 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060672705 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.060106698 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06089751 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06089223 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.060272608 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.061324 seconds)
  done (took 3.056481828 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.069480034 seconds)
    (2/2) benchmarking "in"...
    done (took 0.067647757 seconds)
  done (took 1.369095089 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.058463903 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073623825 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.056467025 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069680578 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.065011051 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.062052199 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.065438924 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065091151 seconds)
  done (took 1.743432946 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.062785817 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.086551474 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.058714264 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.059404494 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.061692297 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.123487834 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.071458252 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.070882021 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.072896247 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.062113579 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.059337275 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.070849365 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.05840212 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.07238533 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.060138358 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.068020473 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06602899 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.076833473 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.072339661 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.057083206 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071232169 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.059480391 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.05770727 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.059490805 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.058576562 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066784715 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.074491921 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071232476 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.067098522 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.056718828 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.078120941 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.058103556 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.059290382 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.06790369 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.06204666 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.058785541 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.09529746 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.058699554 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.063484649 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.057779352 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070324765 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078574165 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072712737 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.075498392 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.059363471 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.059462831 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.057558843 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.059452783 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.061880986 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068323802 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.058291633 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067822883 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.059321921 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.061068432 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.070805928 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.060520372 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.064625717 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069262412 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073686383 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070380158 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.068639933 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074377258 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067990737 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.066005374 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.060290937 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078004285 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.059349409 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070999464 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.072398172 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.058982781 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070624365 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.057231591 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.056715633 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.057511161 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090768549 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.059426213 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.05890584 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.057910071 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.057769862 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.059229052 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.06741151 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.062514218 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06558978 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.060819021 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073717343 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.067288897 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.057964865 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.063863101 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.075733084 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.061797 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.058581681 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.074606878 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.061742961 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.057442557 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.07552743 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.067847594 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.059552829 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.059006422 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.061706091 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.071786202 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.059056694 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.057094695 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066918391 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.059704447 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.06009581 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.062196214 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066496901 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.058215894 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068043512 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.062283647 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.059440804 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.056668545 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.061986941 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.058609194 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.056542672 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067362863 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.057629472 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.071809402 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.064063236 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.072194134 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.07241681 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.068079115 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07359149 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.057662832 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.056900041 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.075453318 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.067462549 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.059085755 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075346916 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.057556119 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070746447 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.057327376 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.058988385 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.195384311 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.058503845 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.060922204 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.059424028 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.063390472 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.060061584 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.060346129 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.064425613 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.0672429 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.07057636 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.058934019 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.066938213 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.058364782 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073551705 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068272993 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.063075229 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.061321708 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.058138115 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.069735115 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.064270307 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.067058575 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.057307852 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.058038965 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.057547236 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.068318464 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.067306144 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.059575749 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.064557627 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.062314794 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.058174185 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.058453157 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.059044855 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.061563226 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06094182 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.058688068 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065948533 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.066949126 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.071263702 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064283575 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.06732266 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.056948264 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.057145219 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.059001265 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.056959659 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.062339407 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.067337959 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.073302371 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.069312782 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.078544816 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.057403299 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.067648759 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.058944672 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074144163 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071506289 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.05848334 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.062149549 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.056724858 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.059061374 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.067176787 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069174554 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.071079795 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.072642245 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.062503523 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.062316628 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.057262877 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072537266 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.058053414 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066491121 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.06726897 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.061466799 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.057850978 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.058999974 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.066823083 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.06237866 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.057401147 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.073115723 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.062996337 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.057050116 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071985632 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.057815299 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.06844631 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.057514592 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.061649906 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.063396726 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.059333929 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067252244 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073092503 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.056857106 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.058431536 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073962505 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.059493782 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.05950379 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066045673 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.073098087 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.062423402 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.065951996 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068318361 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.06843277 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.062721493 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.067889653 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.058719327 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.067325638 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.060975832 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.069564384 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.057871823 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.076051888 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.057034755 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.073034149 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.058337026 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.069207003 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.058959997 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068016884 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.059189819 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.075220503 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.059502933 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.058867375 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.069383135 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.056573315 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.066938299 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.057140186 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.062977557 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.064637194 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.066922541 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.059193932 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.067258937 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.059468775 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.066266994 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.062157917 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.065553853 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.067069779 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.062054084 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.056987083 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.06616494 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.06861531 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.066052345 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.059048882 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.058795295 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.058115673 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.199605661 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.060222381 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.060344221 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067137927 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.063504896 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.064513437 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.059530642 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.060185019 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.059708055 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066682952 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.0678107 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.075573185 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066697598 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.065987126 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.067340899 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.057281546 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073325299 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.058010047 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.068119704 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.056799906 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.063081212 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.067077862 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.05788341 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.076272462 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.058906529 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.065530745 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069562019 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066418127 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.0614016 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.075428385 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.060739012 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066617958 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.066162389 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.062338237 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.064523277 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.059337164 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.06636415 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.067250318 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.06834487 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.058714816 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.065789846 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067182206 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.059192369 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.06440017 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.059506816 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066606889 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.058993442 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.056662122 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.06255868 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.06885124 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.063002623 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.06299363 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.058047845 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.056886431 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.058204346 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.063676026 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.062530579 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.066385448 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.073274309 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.056625955 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.058533728 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.057045155 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.061304482 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.075243667 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.067644509 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066144241 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.06269365 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.057045554 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.059119159 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.059582695 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.057900793 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.060824071 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.056985251 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.057151872 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068580307 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.059585599 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.062244638 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.057986643 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.058531695 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.06773943 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.062271543 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.05830973 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.064305514 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.057490383 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.062900528 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.056950675 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.059327765 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.06234135 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.057192935 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.061467786 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.068558496 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.073946922 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.064297801 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.066899892 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.058788214 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.066093433 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072871207 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.064381641 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.058961942 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.067361765 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.057412778 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.075585301 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.067366485 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066511317 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.067972366 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.059153177 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.074560581 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.062603286 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.067895968 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.073052857 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.059039649 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.064378225 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.057521611 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.073291555 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.062903691 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.05752063 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.065832834 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065932705 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.063746704 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.069509214 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.058715632 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.065658878 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.062562049 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.061215102 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.059031972 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.058867378 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.066247946 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.073393121 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.058240683 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.061483119 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.065831221 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066227326 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.062141789 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070075305 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.065780622 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.058919347 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.059466146 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.061338291 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.194116192 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.07094297 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.059172397 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.063400395 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.063284962 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.058517162 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.066227324 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074957323 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.067378839 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.067215918 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.057360733 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.057155375 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.075224055 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.061529855 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.061060514 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.065805013 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.067448881 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069944447 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.067249819 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074387568 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.058229934 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.063673309 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069741534 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.058720364 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.057663145 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.061399996 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.058615917 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.066654683 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.067477744 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.065529177 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.059539168 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.064869486 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.07103856 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.058704274 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.062450962 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.061828599 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.05858036 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.068214149 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.066246709 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069183248 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.059229571 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.057666378 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.061646315 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.06661886 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.065433824 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.066731718 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.058564678 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.063072695 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.070716729 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.065381681 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.060283712 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.057386138 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.060622085 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.066874611 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.061544149 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.057147961 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.062209867 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.061727233 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.063624641 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.066921297 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.062172527 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.057277833 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.074438491 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.065517769 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.066984235 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.059252544 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.059415246 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.058041287 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.057128906 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.068608123 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.057217091 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.059869195 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.062465371 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.059675164 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.075509079 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.065916367 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.074686776 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.058688195 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.062364331 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.057711787 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067319713 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.062915291 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.057921148 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.068685147 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.05734351 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.07286295 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.070082924 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.062509975 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.057090634 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.062997836 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.065616899 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072401032 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.067470625 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.0668516 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.061231613 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.067410651 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.059707999 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.068783534 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.057447227 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.057063746 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.068061588 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066848757 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.070647976 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.057668256 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.067944627 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.060302896 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067032623 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.066037958 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.059991396 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.059625596 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.05986169 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.067887479 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.062719149 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.067556401 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.062964071 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074704706 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.059347259 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.069058862 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068021649 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.068744778 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072384493 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070346395 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.066030411 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.058351302 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065889438 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.06565978 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.05923451 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.062796703 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.060970408 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.078468997 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.059225726 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.059071048 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.07181587 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.063199483 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.057862823 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.063835277 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.196353827 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.06928598 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.059850284 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.069478134 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.062422488 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.059155333 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.063066356 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.063014882 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.05710293 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.058172763 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.057848785 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.067796012 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.062484365 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.058853578 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.076507488 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.05914074 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.066668747 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.068457453 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.064396204 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.059712864 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.056860257 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.058809834 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.071343417 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.073562289 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.061499895 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067927585 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.060530325 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068431108 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.058077441 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068382995 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067985369 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068222283 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.058480555 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.059387689 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073955823 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.074949138 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.062693909 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.067179993 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.067157123 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.059569491 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.078786896 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067054595 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.059448461 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.06853158 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06016288 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.057108883 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.056868702 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.059133851 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.069039085 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.057125845 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.06029088 seconds)
  done (took 40.060454607 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.093828549 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.058674139 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.057105791 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.057197869 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.0646684 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.058639015 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.057624142 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.058882961 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.05849445 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.059788624 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.057304334 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060223871 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.062958145 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.069895855 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06476021 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.060738699 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.057475773 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.058255975 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.057505224 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.058237531 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.063343367 seconds)
  done (took 2.631314964 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.060640332 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.06124115 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.061042134 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.061295983 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.060757516 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.058310485 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.06103254 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.057931463 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.06177073 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.05818045 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.062271543 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.057590589 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.058110984 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.057885065 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.058055807 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.058977679 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.061255433 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061276309 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.057644853 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.061113774 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.05903302 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.061540127 seconds)
  done (took 2.636273068 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.059167304 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.058188047 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.066340917 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.056736851 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.057076961 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.060425076 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.05696196 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.061755455 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.061984664 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.062336287 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.066514769 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.057894523 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.05685124 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.0632057 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.056994946 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.05771921 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.097892654 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.058276556 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.058510859 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.056854772 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.06002192 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.066713503 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.057028402 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.057371796 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.061935293 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.060536788 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.0570596 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.05983576 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.057794296 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.062021988 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.058742765 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.056787384 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066321278 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066019208 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.062210521 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.061857913 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.058790128 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.058651612 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.057287426 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.057178208 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066276749 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.05857469 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.057268813 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.058717684 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066274454 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.057222966 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.057399353 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066359138 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.057069423 seconds)
  done (took 4.303150222 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.066799114 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.107616482 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.063013528 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.08957002 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.068714931 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.062534639 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.063571172 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.092347786 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.058918979 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.058848507 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.069721828 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.070209479 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.059698044 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.060902441 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.063114479 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.060911666 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.061726002 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.060501612 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.063575607 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.060785786 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.06366667 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.064968738 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.06924122 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.069064319 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.060380707 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.059035034 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.059726216 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.061013508 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.068855689 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.06245835 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.061110322 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.061560928 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.069238704 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.064737985 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.059449903 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.059427589 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.069562072 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.05992954 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.059845644 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.058424241 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.059260667 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.060947314 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.063982372 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.069872655 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.060255259 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.064704343 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.059793861 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.057949162 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.069299793 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.059845034 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.062973392 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.070177595 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.060634765 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.05999695 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.061478352 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.069980814 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.059919536 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.058936209 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.060146064 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.069976188 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.058502336 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.060844283 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.072528599 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.059516132 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.062784058 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.070149984 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.064519637 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.061005367 seconds)
  done (took 5.859188225 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065899795 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.091428039 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071196582 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071383984 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067054483 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.066974334 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067027068 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.067238323 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.066966279 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070023322 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067151536 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.100736059 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.064383451 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.068620968 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.067441045 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067159107 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.067410768 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067585363 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06762211 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067598469 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.067982268 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071703977 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067129202 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071526187 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.069485472 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06381306 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06719061 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.067971319 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071836136 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.067440632 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.069617933 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.067503805 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.067256123 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071863124 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.069211643 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.066972936 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.058463871 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067205772 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.067471677 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067153508 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063853294 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071869027 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067180138 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.063873527 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067181593 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.066932129 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072027405 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.069889353 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.068833009 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070065166 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.067410963 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071831287 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066941758 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067306146 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071972784 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.074114061 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071898796 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072071306 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067554066 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.072614863 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072515592 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.074375785 seconds)
  done (took 5.663438378 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06885638 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.063414255 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.075343273 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.057224473 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.057523163 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066147008 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.057701075 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.057495226 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.063335539 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.063961061 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064976496 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065738437 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06749948 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064722653 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065881468 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067569909 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066050472 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065885665 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063344225 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066067128 seconds)
  done (took 2.641659756 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.071767291 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.074752449 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.063026516 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065957424 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.062697374 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066261724 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.06200531 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062775576 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063158905 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062946675 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067112564 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067300115 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062941993 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066083171 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.066760127 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.065904434 seconds)
  done (took 2.390729125 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.060141189 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.064785636 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.063156712 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.058612025 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.060079608 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.058135211 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.058445634 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.057071893 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.059556773 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.070836031 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.058195553 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.060303695 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.058397176 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.057942917 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.057661087 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.060624144 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.059678521 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.05818105 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.058595357 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.062349305 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.066945266 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.05919518 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.060474801 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.058282081 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.060318825 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.066116905 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.059657785 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.060578363 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.058347492 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.060651299 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.060146618 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.064447432 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.060167413 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.058600525 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.057410002 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.058307197 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.058617951 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.061163904 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.060551296 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.058715882 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.057438975 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.063311131 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.058689909 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.059017635 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.059474485 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.060651658 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.059821713 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.06374226 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.058386293 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.060513953 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.058798155 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.059834536 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.058532544 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.065097342 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.060601106 seconds)
  done (took 4.655271202 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074030106 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.062383715 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.056915306 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.057028674 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.062050134 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.062913393 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.062418951 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.062541051 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062855806 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.057312921 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.0629072 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.061873582 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062814282 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.062364117 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.063698433 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063420088 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.058189335 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.064021881 seconds)
  done (took 2.474047255 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.06320269 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.062405232 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.061278105 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.059120966 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.059175412 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.063134594 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.05733769 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.058658931 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.058821255 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.059119075 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.059074449 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.058469089 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.058671691 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.058620413 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.06255107 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.058850865 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.058397313 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.057334382 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.059089554 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.057183509 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.062942589 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.05739587 seconds)
  done (took 2.658961328 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.084014902 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.08061424 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.123000593 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.076545229 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.085041104 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.06836948 seconds)
  done (took 1.865393011 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08947696 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09333864 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06215602 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.061870099 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066254963 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064489269 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06477576 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064744104 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06762833 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067989634 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065181935 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068139772 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067656098 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069577588 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066084023 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066512326 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064702779 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064994584 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.062364221 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071437674 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06504211 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067877773 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065082406 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065006208 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065044065 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069457051 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067795036 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068550271 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065130935 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06836884 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066390241 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064934481 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068226263 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06825298 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.062200093 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067700464 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064889575 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071515325 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066459086 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069523287 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.062130919 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066643045 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068044788 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067823293 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068151375 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064895242 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067907792 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06505101 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065506368 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072878227 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066776342 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069751524 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066868158 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068710245 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068291683 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073276699 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06869171 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069985924 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066935048 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068525981 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069723555 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066634661 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069931396 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068610941 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066521425 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070033046 seconds)
  done (took 5.825476457 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099063191 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062815071 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.064870152 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068120856 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069461631 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064962798 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065092582 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065021317 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.064973001 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.062892018 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099342823 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065550224 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069519388 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072272563 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065273202 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064903405 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.065233864 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069965914 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.062660063 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072708545 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06496773 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069442097 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069387523 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069449904 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068807788 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066768686 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064835399 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065021484 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065041946 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06492973 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06784032 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.064998553 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069808366 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.062456949 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069775778 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065208963 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064974456 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06765108 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065107708 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066753766 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069764897 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071547923 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065142798 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065216528 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06846587 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.065246778 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06501627 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06272998 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065293892 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.062737363 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068569634 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068709747 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068646517 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069768317 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06534719 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065447729 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065547748 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06532904 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065498117 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067009003 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069652487 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06547295 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073339964 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.065119326 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.065475052 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069780041 seconds)
  done (took 5.837116781 seconds)
done (took 121.492709241 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.19407023 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.163331103 seconds)
  done (took 1.693792257 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070805671 seconds)
    (2/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.153487659 seconds)
    (3/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.071149547 seconds)
    (4/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.070824812 seconds)
    (5/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100678734 seconds)
    (6/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099723898 seconds)
    (7/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071729924 seconds)
    (8/16) benchmarking ("transpose", (600, 400))...
    done (took 0.068622558 seconds)
    (9/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070961616 seconds)
    (10/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.068592698 seconds)
    (11/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128255031 seconds)
    (12/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.072109233 seconds)
    (13/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.06898899 seconds)
    (14/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.068340415 seconds)
    (15/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068430649 seconds)
    (16/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.068932991 seconds)
  done (took 2.675448933 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103292583 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.19709307 seconds)
    (3/18) benchmarking ("IJV", 10)...
    done (took 0.0788468 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.066492313 seconds)
    (5/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.146802889 seconds)
    (6/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072540883 seconds)
    (7/18) benchmarking ("IJV", 100)...
    done (took 0.068411724 seconds)
    (8/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.072355358 seconds)
    (9/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072751858 seconds)
    (10/18) benchmarking ("IV", 1000)...
    done (took 0.066550692 seconds)
    (11/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.102357382 seconds)
    (12/18) benchmarking ("Diagonal", 10)...
    done (took 0.079297417 seconds)
    (13/18) benchmarking ("Diagonal", 100)...
    done (took 0.07139615 seconds)
    (14/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.072200481 seconds)
    (15/18) benchmarking ("IJV", 1000)...
    done (took 0.0683678 seconds)
    (16/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071524922 seconds)
    (17/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.072356176 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072482682 seconds)
  done (took 2.914493031 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.09803083 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.086690649 seconds)
  done (took 1.54846836 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.147176087 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.100026511 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.137792462 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.32930386 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.126799795 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.129844166 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.13525976 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.129101406 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.10363336 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.124762756 seconds)
  done (took 2.821330462 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.10120372 seconds)
    (2/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.100015316 seconds)
    (3/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.29693007 seconds)
    (4/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.097196937 seconds)
    (5/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.077875674 seconds)
    (6/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.073160275 seconds)
    (7/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.071105301 seconds)
    (8/54) benchmarking ("spmat", "range", 100)...
    done (took 0.07519665 seconds)
    (9/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.071048174 seconds)
    (10/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.07213337 seconds)
    (11/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.116533226 seconds)
    (12/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.07140883 seconds)
    (13/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.068904283 seconds)
    (14/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.118498954 seconds)
    (15/54) benchmarking ("spmat", "array", 100)...
    done (took 0.091776408 seconds)
    (16/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.101754984 seconds)
    (17/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.067424879 seconds)
    (18/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.073917165 seconds)
    (19/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.075715563 seconds)
    (20/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.067183802 seconds)
    (21/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.071807096 seconds)
    (22/54) benchmarking ("spmat", "range", 10)...
    done (took 0.07527199 seconds)
    (23/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.16937672 seconds)
    (24/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.073802468 seconds)
    (25/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.093691697 seconds)
    (26/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.071538527 seconds)
    (27/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.073029392 seconds)
    (28/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.070385475 seconds)
    (29/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.070329088 seconds)
    (30/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.074030223 seconds)
    (31/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.074210593 seconds)
    (32/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.09321027 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.073900802 seconds)
    (34/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.078507509 seconds)
    (35/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.072635969 seconds)
    (36/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.091132499 seconds)
    (37/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.067848526 seconds)
    (38/54) benchmarking ("spmat", "array", 10)...
    done (took 0.092555551 seconds)
    (39/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.070013618 seconds)
    (40/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.069036052 seconds)
    (41/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.070956654 seconds)
    (42/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.074823798 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.068396114 seconds)
    (44/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.074359405 seconds)
    (45/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.071428806 seconds)
    (46/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.073093986 seconds)
    (47/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.075570794 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.067422109 seconds)
    (49/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.071243261 seconds)
    (50/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.069779278 seconds)
    (51/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.069084943 seconds)
    (52/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.071675065 seconds)
    (53/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.071853426 seconds)
    (54/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.072920202 seconds)
  done (took 5.891218075 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102060356 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.1031251 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066229558 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.107527678 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100679 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066099012 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.099267027 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09570885 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.102703137 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.065957617 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.065509706 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.065383052 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.071429859 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.073627253 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.109460359 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.102513599 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067297393 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.065826987 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.101859717 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.102288353 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.064966109 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096769787 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.095653419 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101137498 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.064704816 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066234298 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.064857411 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.065803786 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.069491967 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.070640463 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.065867646 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.070958275 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.075031142 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.070620244 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.064346496 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.064843555 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.064958496 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.07110888 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.072020086 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.071863586 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.069933341 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064307458 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.064755714 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.065353148 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.065904075 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.065019577 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.070116122 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.071419746 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.070348552 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06512488 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.065230947 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.064803913 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.06517383 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.070851846 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.070871805 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.07131207 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.071323437 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.065225106 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065149575 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.066309225 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07215406 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.072521999 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.071838714 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.065720404 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.072494585 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.065104349 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.072948799 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.07630453 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.065241558 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.065589656 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.065136341 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.064897299 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.065540518 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.069957063 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.070507505 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06566922 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.064908397 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065175947 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.072370594 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.070914449 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.065192065 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.069922402 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.064596036 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.065602234 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.065715258 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065677315 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.070013574 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.071801743 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.065553221 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06484302 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.065206798 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.065333717 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.064663884 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.070127276 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.071239273 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.072002725 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.070739283 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.065554349 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.071337562 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.071170429 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.065606616 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.070827905 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.065613039 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.065733801 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065452487 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.070634244 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.069833462 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.071783986 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.065180525 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.064649421 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.070487303 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.072803419 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.065055673 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.070060597 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.072326728 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.200233135 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.0658531 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.074160603 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066218823 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.072568973 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065660071 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.072987537 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065701353 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.07086616 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065524522 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.064405218 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.065269026 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.070210939 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.065227013 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.065039075 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.065269412 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.064964507 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.07025876 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.073699509 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.065464534 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.070300118 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.070307519 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.065281687 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.070113349 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.065364036 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.071164597 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.065139438 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065856118 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.0652497 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.0733338 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.064887993 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.064984422 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.06493665 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.072287071 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.065287809 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.072241264 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.070532519 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.065479119 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.072856121 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.07199669 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.069923335 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.072376612 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.065780723 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.065005553 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.064810219 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.067692878 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.069278863 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07037987 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.065270496 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06517836 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.069507914 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.072158388 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.064445177 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.06995758 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.070556124 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.070656782 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.06521541 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.065270942 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.073143024 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.072206209 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.070260916 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.070228205 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.071043767 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.065131048 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.07008819 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.070593639 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06514194 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.076462406 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065069819 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.073461451 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.070782585 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.069968889 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.070604229 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.072316689 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.072750279 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.072650187 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.074780202 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.064797046 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.065127317 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.07040915 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.06515456 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.065341991 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.070770732 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.065490559 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.065720945 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.074350072 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.065369197 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.072606946 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.065082793 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.071561719 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.064828416 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065487274 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.074982171 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.065597903 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.066070412 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.070820992 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.065631698 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.070662691 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.073136272 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.070892465 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.065235496 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.065765706 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.071543681 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.071784252 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.065641029 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.065393066 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.065974244 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.071003588 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.069925151 seconds)
  done (took 17.294723857 seconds)
done (took 36.21159649 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.162152865 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.109499058 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.201455557 seconds)
    (4/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.191358298 seconds)
  done (took 2.131238174 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 0.095209866 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 0.061664106 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 0.075483171 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 0.083927159 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 0.061695544 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 0.070630739 seconds)
  done (took 1.856896272 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.189971828 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.166721697 seconds)
    (3/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.231993163 seconds)
  done (took 1.988106842 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((10000000,), 2)...
    done (took 0.35501332 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.140994585 seconds)
    (3/4) benchmarking ((1000, 1000), 1)...
    done (took 0.206602679 seconds)
    (4/4) benchmarking ((1000, 1000), 2)...
    done (took 0.486032953 seconds)
  done (took 2.688474299 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 0.104545994 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.093292429 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 0.072254593 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.104080812 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 0.079745596 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 0.058973553 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.124869834 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 0.066060539 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 0.09261422 seconds)
  done (took 2.26170253 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.130993 seconds)
done (took 12.481995924 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.120406657 seconds)
    (2/341) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.210953811 seconds)
    (3/341) benchmarking ("collect", "filter", Bool, true)...
    done (took 0.229949494 seconds)
    (4/341) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.440282807 seconds)
    (5/341) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.251103291 seconds)
    (6/341) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.101892962 seconds)
    (7/341) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.089678847 seconds)
    (8/341) benchmarking ("map", abs, Int64, true)...
    done (took 0.176793664 seconds)
    (9/341) benchmarking ("map", identity, BigInt, true)...
    done (took 0.198377272 seconds)
    (10/341) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.189993883 seconds)
    (11/341) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.072846919 seconds)
    (12/341) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.074422359 seconds)
    (13/341) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.088848961 seconds)
    (14/341) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.088063509 seconds)
    (15/341) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.071148666 seconds)
    (16/341) benchmarking ("collect", "all", Float64, false)...
    done (took 0.175709531 seconds)
    (17/341) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.158639507 seconds)
    (18/341) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.209010972 seconds)
    (19/341) benchmarking ("perf_sum", Bool, true)...
    done (took 0.072419177 seconds)
    (20/341) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.103748653 seconds)
    (21/341) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.073806382 seconds)
    (22/341) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.066367354 seconds)
    (23/341) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.191658061 seconds)
    (24/341) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.074231566 seconds)
    (25/341) benchmarking ("collect", "filter", Float32, false)...
    done (took 0.181146085 seconds)
    (26/341) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.086973277 seconds)
    (27/341) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.191840863 seconds)
    (28/341) benchmarking ("map", abs, BigInt, true)...
    done (took 0.139471657 seconds)
    (29/341) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.070723092 seconds)
    (30/341) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.070187764 seconds)
    (31/341) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.157580452 seconds)
    (32/341) benchmarking ("collect", "filter", BigFloat, false)...
    done (took 0.169990419 seconds)
    (33/341) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.074602489 seconds)
    (34/341) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.193917774 seconds)
    (35/341) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.231198535 seconds)
    (36/341) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.176174202 seconds)
    (37/341) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.070472278 seconds)
    (38/341) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.174194191 seconds)
    (39/341) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.070819292 seconds)
    (40/341) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.062198446 seconds)
    (41/341) benchmarking ("map", abs, Int8, false)...
    done (took 0.173009036 seconds)
    (42/341) benchmarking ("collect", "all", Int64, false)...
    done (took 0.136525721 seconds)
    (43/341) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.087386562 seconds)
    (44/341) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.174943125 seconds)
    (45/341) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.091774064 seconds)
    (46/341) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.069635228 seconds)
    (47/341) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.07282355 seconds)
    (48/341) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.073090496 seconds)
    (49/341) benchmarking ("collect", "all", Float32, true)...
    done (took 0.142909055 seconds)
    (50/341) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.159154693 seconds)
    (51/341) benchmarking ("collect", "all", Int8, true)...
    done (took 0.135147085 seconds)
    (52/341) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.117230985 seconds)
    (53/341) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.084184707 seconds)
    (54/341) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.075356584 seconds)
    (55/341) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.195240479 seconds)
    (56/341) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.062206614 seconds)
    (57/341) benchmarking ("collect", "filter", Float64, false)...
    done (took 0.189961277 seconds)
    (58/341) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.177458834 seconds)
    (59/341) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.069960832 seconds)
    (60/341) benchmarking ("collect", "all", BigInt, false)...
    done (took 0.080808274 seconds)
    (61/341) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.087498608 seconds)
    (62/341) benchmarking ("map", identity, Int8, true)...
    done (took 0.078002497 seconds)
    (63/341) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.157178567 seconds)
    (64/341) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.069497754 seconds)
    (65/341) benchmarking ("perf_countequals", "Int8")...
    done (took 0.077963805 seconds)
    (66/341) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.149487694 seconds)
    (67/341) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.143011711 seconds)
    (68/341) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.16416476 seconds)
    (69/341) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.067193195 seconds)
    (70/341) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.171655533 seconds)
    (71/341) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.094158134 seconds)
    (72/341) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.17718775 seconds)
    (73/341) benchmarking ("collect", "filter", Bool, false)...
    done (took 0.064278559 seconds)
    (74/341) benchmarking ("map", abs, Bool, false)...
    done (took 0.133453653 seconds)
    (75/341) benchmarking ("map", abs, Bool, true)...
    done (took 0.062374923 seconds)
    (76/341) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.061792016 seconds)
    (77/341) benchmarking ("sort", Int8, false)...
    done (took 0.145919629 seconds)
    (78/341) benchmarking ("perf_sum", Int8, true)...
    done (took 0.223285883 seconds)
    (79/341) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.140818051 seconds)
    (80/341) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.085035949 seconds)
    (81/341) benchmarking ("map", abs, Float32, true)...
    done (took 0.140677973 seconds)
    (82/341) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071639105 seconds)
    (83/341) benchmarking ("map", identity, Int8, false)...
    done (took 0.063597785 seconds)
    (84/341) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.193140842 seconds)
    (85/341) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.063392853 seconds)
    (86/341) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.071001083 seconds)
    (87/341) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.072577044 seconds)
    (88/341) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.06325846 seconds)
    (89/341) benchmarking ("map", identity, BigInt, false)...
    done (took 0.062929544 seconds)
    (90/341) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.086564814 seconds)
    (91/341) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.062590306 seconds)
    (92/341) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.069656134 seconds)
    (93/341) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.069393628 seconds)
    (94/341) benchmarking ("collect", "all", ComplexF64, false)...
    done (took 0.175323642 seconds)
    (95/341) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.216080552 seconds)
    (96/341) benchmarking ("collect", "filter", Float64, true)...
    done (took 0.064437037 seconds)
    (97/341) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.073320341 seconds)
    (98/341) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.181295325 seconds)
    (99/341) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.07036007 seconds)
    (100/341) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.069044282 seconds)
    (101/341) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.061874198 seconds)
    (102/341) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.082176997 seconds)
    (103/341) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.06195159 seconds)
    (104/341) benchmarking ("collect", "filter", BigInt, true)...
    done (took 0.145342752 seconds)
    (105/341) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.157083576 seconds)
    (106/341) benchmarking ("sort", Float32, false)...
    done (took 0.133175188 seconds)
    (107/341) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.062652254 seconds)
    (108/341) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.076269544 seconds)
    (109/341) benchmarking ("collect", "all", BigFloat, false)...
    done (took 0.080914106 seconds)
    (110/341) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.069130332 seconds)
    (111/341) benchmarking ("perf_sum", Float32, true)...
    done (took 0.06627471 seconds)
    (112/341) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.190060312 seconds)
    (113/341) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.062391052 seconds)
    (114/341) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.063296536 seconds)
    (115/341) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.072381971 seconds)
    (116/341) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.174120218 seconds)
    (117/341) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.090891658 seconds)
    (118/341) benchmarking ("collect", "filter", Int8, false)...
    done (took 0.14885597 seconds)
    (119/341) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.061655808 seconds)
    (120/341) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.070032896 seconds)
    (121/341) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.23140613 seconds)
    (122/341) benchmarking ("perf_sum", Float64, true)...
    done (took 0.066740821 seconds)
    (123/341) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.142390847 seconds)
    (124/341) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.062921706 seconds)
    (125/341) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.123210669 seconds)
    (126/341) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.146101132 seconds)
    (127/341) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.060631742 seconds)
    (128/341) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.118567163 seconds)
    (129/341) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.073462515 seconds)
    (130/341) benchmarking ("map", identity, Int64, false)...
    done (took 0.07761872 seconds)
    (131/341) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.074214394 seconds)
    (132/341) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.062154012 seconds)
    (133/341) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.062261836 seconds)
    (134/341) benchmarking ("sort", Float64, false)...
    done (took 0.132233703 seconds)
    (135/341) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.062631697 seconds)
    (136/341) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.190881322 seconds)
    (137/341) benchmarking ("collect", "filter", Int8, true)...
    done (took 0.064383847 seconds)
    (138/341) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.063046449 seconds)
    (139/341) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.08598768 seconds)
    (140/341) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.065629225 seconds)
    (141/341) benchmarking ("perf_countequals", "Float32")...
    done (took 0.071951267 seconds)
    (142/341) benchmarking ("collect", "all", Int64, true)...
    done (took 0.065412061 seconds)
    (143/341) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.063673485 seconds)
    (144/341) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.062313104 seconds)
    (145/341) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.077038601 seconds)
    (146/341) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.181969717 seconds)
    (147/341) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.070839379 seconds)
    (148/341) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071166902 seconds)
    (149/341) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.062214062 seconds)
    (150/341) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.189746884 seconds)
    (151/341) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.114055794 seconds)
    (152/341) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.070247496 seconds)
    (153/341) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.128313024 seconds)
    (154/341) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.127071269 seconds)
    (155/341) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071629403 seconds)
    (156/341) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.112368526 seconds)
    (157/341) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.07531345 seconds)
    (158/341) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.06891122 seconds)
    (159/341) benchmarking ("map", identity, Float64, false)...
    done (took 0.079069914 seconds)
    (160/341) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071546842 seconds)
    (161/341) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.146943362 seconds)
    (162/341) benchmarking ("sort", Bool, false)...
    done (took 0.137735807 seconds)
    (163/341) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.081187881 seconds)
    (164/341) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.071036207 seconds)
    (165/341) benchmarking ("map", abs, Int64, false)...
    done (took 0.062751744 seconds)
    (166/341) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.167792553 seconds)
    (167/341) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.063210702 seconds)
    (168/341) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.079799728 seconds)
    (169/341) benchmarking ("perf_sum", Int64, true)...
    done (took 0.069478547 seconds)
    (170/341) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071897534 seconds)
    (171/341) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.062357802 seconds)
    (172/341) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.062271821 seconds)
    (173/341) benchmarking ("sort", Int64, false)...
    done (took 0.063727448 seconds)
    (174/341) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.062816668 seconds)
    (175/341) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.062706774 seconds)
    (176/341) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.071038913 seconds)
    (177/341) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.084029538 seconds)
    (178/341) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.073500617 seconds)
    (179/341) benchmarking ("map", abs, Float32, false)...
    done (took 0.062481221 seconds)
    (180/341) benchmarking ("map", abs, Float64, false)...
    done (took 0.137820858 seconds)
    (181/341) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.221982583 seconds)
    (182/341) benchmarking ("collect", "filter", Int64, false)...
    done (took 0.15091075 seconds)
    (183/341) benchmarking ("collect", "all", Int8, false)...
    done (took 0.066134377 seconds)
    (184/341) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.069959073 seconds)
    (185/341) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.063165693 seconds)
    (186/341) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.070527718 seconds)
    (187/341) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.062504259 seconds)
    (188/341) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.061440035 seconds)
    (189/341) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.069040271 seconds)
    (190/341) benchmarking ("collect", "all", Bool, true)...
    done (took 0.29040338 seconds)
    (191/341) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.168960611 seconds)
    (192/341) benchmarking ("collect", "filter", Float32, true)...
    done (took 0.066019584 seconds)
    (193/341) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.188207651 seconds)
    (194/341) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072016914 seconds)
    (195/341) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.063391026 seconds)
    (196/341) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071184947 seconds)
    (197/341) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.072174811 seconds)
    (198/341) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.063133171 seconds)
    (199/341) benchmarking ("perf_sum", Int8, false)...
    done (took 0.069807939 seconds)
    (200/341) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.230799065 seconds)
    (201/341) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.060811042 seconds)
    (202/341) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.06232757 seconds)
    (203/341) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.062293644 seconds)
    (204/341) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.201452897 seconds)
    (205/341) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.062515474 seconds)
    (206/341) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.061598961 seconds)
    (207/341) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.158268322 seconds)
    (208/341) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.2213125 seconds)
    (209/341) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.06911375 seconds)
    (210/341) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.141978297 seconds)
    (211/341) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.070749763 seconds)
    (212/341) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.062319604 seconds)
    (213/341) benchmarking ("collect", "filter", BigInt, false)...
    done (took 0.064591532 seconds)
    (214/341) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.064800528 seconds)
    (215/341) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.062139531 seconds)
    (216/341) benchmarking ("map", identity, Bool, true)...
    done (took 0.077599562 seconds)
    (217/341) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.060430879 seconds)
    (218/341) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.060905795 seconds)
    (219/341) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.142722906 seconds)
    (220/341) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.186928462 seconds)
    (221/341) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.062560996 seconds)
    (222/341) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.065215161 seconds)
    (223/341) benchmarking ("map", identity, Float32, false)...
    done (took 0.077853152 seconds)
    (224/341) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.08778865 seconds)
    (225/341) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.080579888 seconds)
    (226/341) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.082895428 seconds)
    (227/341) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.06995658 seconds)
    (228/341) benchmarking ("perf_sum", Bool, false)...
    done (took 0.069858597 seconds)
    (229/341) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.062052422 seconds)
    (230/341) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.061727418 seconds)
    (231/341) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.063282844 seconds)
    (232/341) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.062905335 seconds)
    (233/341) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.084582916 seconds)
    (234/341) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.062294643 seconds)
    (235/341) benchmarking ("collect", "filter", Int64, true)...
    done (took 0.064126434 seconds)
    (236/341) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.08055657 seconds)
    (237/341) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.073333548 seconds)
    (238/341) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.063151908 seconds)
    (239/341) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.061905925 seconds)
    (240/341) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.064020037 seconds)
    (241/341) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.062328372 seconds)
    (242/341) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.061987204 seconds)
    (243/341) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.061101714 seconds)
    (244/341) benchmarking ("map", identity, Float64, true)...
    done (took 0.062546918 seconds)
    (245/341) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072765999 seconds)
    (246/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074107982 seconds)
    (247/341) benchmarking ("map", abs, Int8, true)...
    done (took 0.062565166 seconds)
    (248/341) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.137138699 seconds)
    (249/341) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.066832763 seconds)
    (250/341) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.074084768 seconds)
    (251/341) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.062959503 seconds)
    (252/341) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.063205395 seconds)
    (253/341) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.062275675 seconds)
    (254/341) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.063775494 seconds)
    (255/341) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.069297237 seconds)
    (256/341) benchmarking ("map", abs, Float64, true)...
    done (took 0.062917678 seconds)
    (257/341) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.062393512 seconds)
    (258/341) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.061107448 seconds)
    (259/341) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.076364053 seconds)
    (260/341) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.069401219 seconds)
    (261/341) benchmarking ("collect", "all", Bool, false)...
    done (took 0.065537312 seconds)
    (262/341) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.06186225 seconds)
    (263/341) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.062674611 seconds)
    (264/341) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.060464753 seconds)
    (265/341) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.062091974 seconds)
    (266/341) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.070642643 seconds)
    (267/341) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.063364289 seconds)
    (268/341) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.068561732 seconds)
    (269/341) benchmarking ("collect", "filter", ComplexF64, true)...
    done (took 0.160789454 seconds)
    (270/341) benchmarking ("map", identity, Float32, true)...
    done (took 0.062418143 seconds)
    (271/341) benchmarking ("collect", "all", Float32, false)...
    done (took 0.065639295 seconds)
    (272/341) benchmarking ("sort", BigFloat, false)...
    done (took 0.130920892 seconds)
    (273/341) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.062867345 seconds)
    (274/341) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.147309525 seconds)
    (275/341) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.08239532 seconds)
    (276/341) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.062166786 seconds)
    (277/341) benchmarking ("map", identity, Bool, false)...
    done (took 0.062758697 seconds)
    (278/341) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.06325335 seconds)
    (279/341) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.060769953 seconds)
    (280/341) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.062595019 seconds)
    (281/341) benchmarking ("collect", "all", ComplexF64, true)...
    done (took 0.066224655 seconds)
    (282/341) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.069166372 seconds)
    (283/341) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.082840251 seconds)
    (284/341) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.087068561 seconds)
    (285/341) benchmarking ("map", abs, BigInt, false)...
    done (took 0.063849401 seconds)
    (286/341) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.145084206 seconds)
    (287/341) benchmarking ("perf_sum", Float32, false)...
    done (took 0.064461504 seconds)
    (288/341) benchmarking ("collect", "filter", BigFloat, true)...
    done (took 0.064551358 seconds)
    (289/341) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.088882687 seconds)
    (290/341) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.118035738 seconds)
    (291/341) benchmarking ("perf_sum", Float64, false)...
    done (took 0.064949459 seconds)
    (292/341) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.063036545 seconds)
    (293/341) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.063441531 seconds)
    (294/341) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.062482201 seconds)
    (295/341) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.062714141 seconds)
    (296/341) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.071868396 seconds)
    (297/341) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.067068718 seconds)
    (298/341) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.07972223 seconds)
    (299/341) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.062301229 seconds)
    (300/341) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.061948461 seconds)
    (301/341) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.073558393 seconds)
    (302/341) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.084924495 seconds)
    (303/341) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.111435366 seconds)
    (304/341) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.06411859 seconds)
    (305/341) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.061378273 seconds)
    (306/341) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.062543069 seconds)
    (307/341) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.063363059 seconds)
    (308/341) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.062187081 seconds)
    (309/341) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.064410155 seconds)
    (310/341) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.062078418 seconds)
    (311/341) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.062630114 seconds)
    (312/341) benchmarking ("collect", "all", BigFloat, true)...
    done (took 0.066111044 seconds)
    (313/341) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.076675711 seconds)
    (314/341) benchmarking ("collect", "all", BigInt, true)...
    done (took 0.065382956 seconds)
    (315/341) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.064998152 seconds)
    (316/341) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.061815175 seconds)
    (317/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.073517711 seconds)
    (318/341) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.146120262 seconds)
    (319/341) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.125498442 seconds)
    (320/341) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.064233483 seconds)
    (321/341) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.165474531 seconds)
    (322/341) benchmarking ("collect", "all", Float64, true)...
    done (took 0.065661802 seconds)
    (323/341) benchmarking ("sort", BigInt, false)...
    done (took 0.419305773 seconds)
    (324/341) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.063747629 seconds)
    (325/341) benchmarking ("map", identity, Int64, true)...
    done (took 0.06372119 seconds)
    (326/341) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.064528451 seconds)
    (327/341) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.070555804 seconds)
    (328/341) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.063208842 seconds)
    (329/341) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.062594468 seconds)
    (330/341) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.069963053 seconds)
    (331/341) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.06108115 seconds)
    (332/341) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.064108005 seconds)
    (333/341) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.122561813 seconds)
    (334/341) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.0621498 seconds)
    (335/341) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.062685592 seconds)
    (336/341) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.146888473 seconds)
    (337/341) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.062230209 seconds)
    (338/341) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.146726993 seconds)
    (339/341) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.064027112 seconds)
    (340/341) benchmarking ("collect", "filter", ComplexF64, false)...
    done (took 0.064372748 seconds)
    (341/341) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.062910875 seconds)
  done (took 35.341750729 seconds)
done (took 36.764721685 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.087888057 seconds)
  (2/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.075781894 seconds)
  (3/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074661153 seconds)
  (4/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.071658523 seconds)
  (5/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.074904666 seconds)
  (6/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.073119104 seconds)
  (7/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074524759 seconds)
  (8/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072587644 seconds)
  (9/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.073489904 seconds)
  (10/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073544701 seconds)
  (11/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.07292557 seconds)
  (12/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.061631802 seconds)
  (13/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069922596 seconds)
  (14/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.076569732 seconds)
  (15/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071183692 seconds)
  (16/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.077586958 seconds)
  (17/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.074182871 seconds)
  (18/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.077322217 seconds)
  (19/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.06263147 seconds)
  (20/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.075565808 seconds)
  (21/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.088313485 seconds)
  (22/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.074071627 seconds)
  (23/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.070625063 seconds)
  (24/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.075434092 seconds)
  (25/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.062724804 seconds)
  (26/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.071732175 seconds)
  (27/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.085003999 seconds)
  (28/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.082820552 seconds)
  (29/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.069021138 seconds)
  (30/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.071295603 seconds)
  (31/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.069435585 seconds)
  (32/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.080141936 seconds)
  (33/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070165133 seconds)
  (34/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.068547563 seconds)
  (35/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.071407481 seconds)
  (36/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.067852771 seconds)
  (37/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.071054284 seconds)
  (38/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.068678611 seconds)
  (39/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.084395061 seconds)
  (40/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.06799807 seconds)
  (41/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.062216031 seconds)
  (42/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.074018913 seconds)
  (43/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.069143917 seconds)
  (44/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.070209775 seconds)
  (45/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.070472412 seconds)
  (46/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.074271344 seconds)
  (47/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.067666906 seconds)
  (48/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.074940614 seconds)
  (49/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.062198741 seconds)
  (50/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073173921 seconds)
  (51/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.084915286 seconds)
  (52/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067181154 seconds)
  (53/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.068677626 seconds)
  (54/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.070425365 seconds)
  (55/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.067252884 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.07139053 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.0688256 seconds)
  (58/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.073028348 seconds)
  (59/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.067383157 seconds)
  (60/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.073473753 seconds)
  (61/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.073410996 seconds)
  (62/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.070826781 seconds)
  (63/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.061960411 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.070436151 seconds)
  (65/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.069460566 seconds)
  (66/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.069422836 seconds)
  (67/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.060967549 seconds)
  (68/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066759219 seconds)
  (69/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.061947423 seconds)
  (70/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.062100393 seconds)
  (71/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.061175159 seconds)
  (72/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.07026927 seconds)
  (73/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.068408703 seconds)
  (74/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.066984045 seconds)
  (75/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.061397471 seconds)
  (76/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.061910337 seconds)
  (77/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.061118984 seconds)
  (78/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.073748823 seconds)
  (79/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.06775964 seconds)
  (80/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.07127955 seconds)
  (81/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.062214045 seconds)
  (82/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.06705352 seconds)
  (83/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.066941097 seconds)
  (84/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.062075897 seconds)
  (85/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066814763 seconds)
  (86/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.073113743 seconds)
  (87/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.061116978 seconds)
  (88/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.062156422 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.060791752 seconds)
  (90/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.076123082 seconds)
  (91/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.068197779 seconds)
  (92/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.062167332 seconds)
  (93/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.073266542 seconds)
  (94/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066910721 seconds)
  (95/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066870954 seconds)
  (96/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.061937323 seconds)
  (97/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.061207623 seconds)
  (98/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066755809 seconds)
  (99/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.069827902 seconds)
  (100/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.062003004 seconds)
  (101/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.06087741 seconds)
  (102/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066719641 seconds)
  (103/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.066889009 seconds)
  (104/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.070771407 seconds)
  (105/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.062335195 seconds)
  (106/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066631821 seconds)
  (107/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066668715 seconds)
  (108/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.060829144 seconds)
  (109/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.070400972 seconds)
  (110/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.069019336 seconds)
  (111/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.070145487 seconds)
  (112/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.074979052 seconds)
  (113/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.070609928 seconds)
  (114/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.073307549 seconds)
  (115/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.062336697 seconds)
  (116/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.060663711 seconds)
  (117/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071155044 seconds)
  (118/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.062205668 seconds)
  (119/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066772183 seconds)
  (120/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.069908697 seconds)
  (121/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.067124908 seconds)
  (122/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070012217 seconds)
  (123/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.062075157 seconds)
  (124/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.061124125 seconds)
  (125/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067174157 seconds)
  (126/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.06823296 seconds)
  (127/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.062274697 seconds)
  (128/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.062373894 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.062128511 seconds)
  (130/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.071290775 seconds)
  (131/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.06938825 seconds)
  (132/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.061143082 seconds)
  (133/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.062331659 seconds)
  (134/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.071033428 seconds)
  (135/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.070882724 seconds)
  (136/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.061542429 seconds)
  (137/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.061289184 seconds)
  (138/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.071245851 seconds)
  (139/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.062456086 seconds)
  (140/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.067606552 seconds)
  (141/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.06759779 seconds)
  (142/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.070074671 seconds)
  (143/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.061352306 seconds)
  (144/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.061817551 seconds)
  (145/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.06092434 seconds)
  (146/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.061240199 seconds)
  (147/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.061425855 seconds)
  (148/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.066998318 seconds)
  (149/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069765856 seconds)
  (150/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.062758798 seconds)
  (151/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.070456553 seconds)
  (152/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.206484125 seconds)
done (took 12.111649574 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.063653292 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.103475009 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.075612198 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.077869291 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.074772831 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.063922966 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.066075589 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.080190043 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.065844303 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.085660397 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087302728 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.0836127 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.09168465 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.060846755 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.06246495 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.063103439 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.060698995 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.073984106 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.078228947 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085490519 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.096361335 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.062254828 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.077051603 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.081182202 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.075709064 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.079319989 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.064130605 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.063442765 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.06551603 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.080600498 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.08827572 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.062259501 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.063368744 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.078759457 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.076937098 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.070117549 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.063344322 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.068615852 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065958885 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.062616241 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.064398412 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.079172708 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.068419857 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.068862819 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.063904123 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.063752447 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.063127601 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.068878027 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.079295648 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.067709493 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.073375861 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.080170872 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.064442337 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.063250031 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.061349352 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.069310218 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.06271192 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.063389931 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.06332757 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.062454863 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.063204059 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.065483638 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.067202678 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.068290956 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.066132808 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.068154248 seconds)
  done (took 6.185551834 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.078190095 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.088270913 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.076919305 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.076776811 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.061990605 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.063525325 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.063474488 seconds)
  done (took 2.039316667 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.063238739 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.070201381 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.074496077 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.074562908 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083331289 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.072545356 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.063419336 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.09396838 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.062013052 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.071071354 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.077841503 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.075513552 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066180613 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.074614887 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.063448637 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.074185671 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.063168579 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069827969 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070495508 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.075858496 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067126119 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.092149746 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.076443668 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.063728567 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.075573054 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.07029846 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.065346096 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.063667802 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.063612258 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.06283342 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.062905158 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.084309413 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.068955126 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074505413 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.063326601 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.061856275 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.066854051 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06355333 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.066408667 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071831702 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.066035411 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.062571843 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.063241852 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.062902292 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.063972358 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.066951095 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.063558338 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.062795286 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.062194515 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.069559076 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.061967563 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.068735043 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.064987832 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.067693374 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067346654 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067058899 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.069610631 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.063755131 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.069836161 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.068943965 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.062880122 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.07491595 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.073822661 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.066400435 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.073882122 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.071064134 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.068848404 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.06594062 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.062619433 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.062401968 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.062816788 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.073994207 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.065814507 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.065195086 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.063692088 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.06741942 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.066588544 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.07735301 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.077562639 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075444999 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.065203947 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.062778331 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066464264 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.077443825 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067486797 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.062462655 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064184801 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.062122769 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.068185123 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.063289064 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067818155 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.062950085 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.069483686 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.065498608 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.065202913 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.07032011 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.062771266 seconds)
  done (took 8.15799504 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.065251414 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.06476124 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.063843445 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.064167101 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.064305841 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.063918869 seconds)
  done (took 1.950339288 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.085596752 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.063173762 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.074490407 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.063302957 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.084299326 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.06899905 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.06907599 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.064980522 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.078775933 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.073101493 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.069035833 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.071622909 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.071558346 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.064538829 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.068908191 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.06405758 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.068897078 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.066155874 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.07282601 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.065137277 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.078681845 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.064768884 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.065130324 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.07475082 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.066350361 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.06399653 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.064355956 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.073137246 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.072980095 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.064624529 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.064336337 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.06600923 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.07159243 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.064651438 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.069227518 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.071198733 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.062891864 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.068353405 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.065167262 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.066047921 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.0707626 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.064573744 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.065181894 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.067999007 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.064726351 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.071164284 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.068274966 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.066460842 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.06872188 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.068428866 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.068138992 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.063516189 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.065821878 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.068225875 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.071103891 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.06469222 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.068224251 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.068748025 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.065459869 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.071400862 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.06332026 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.066068123 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.064775141 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.065588709 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.067591471 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.068409686 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.071497114 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.064980092 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.065210688 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.06737671 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.068251194 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.062932524 seconds)
  done (took 6.445515138 seconds)
done (took 26.292032064 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.53281824 seconds)
  done (took 2.046408498 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.850834326 seconds)
  done (took 2.399752672 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 7.736428545 seconds)
  done (took 9.292174218 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.333060561 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.395222722 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.715917193 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.126743119 seconds)
  done (took 3.159222419 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.739661845 seconds)
  done (took 2.304384156 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.222920859 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.214028181 seconds)
  done (took 2.00429047 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.326168771 seconds)
  done (took 1.875847312 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.126799012 seconds)
  done (took 2.675836263 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.221912248 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.162856767 seconds)
  done (took 1.946972825 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.524014453 seconds)
  done (took 2.0787971 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.170996821 seconds)
  done (took 5.731104811 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.22537343 seconds)
  done (took 1.820451925 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.223960539 seconds)
  done (took 1.782292855 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.957452633 seconds)
  done (took 3.515064989 seconds)
done (took 44.189929474 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080421351 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.082083307 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.082281676 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077538574 seconds)
  done (took 1.859469449 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.070285294 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.066539421 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.070093475 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.070380062 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.06734794 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.069026355 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.069001864 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.066308733 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.067392175 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.066527315 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.064990656 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.066558448 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.069104968 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.066698296 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.068839762 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.06980464 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.066540662 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.066904426 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.06870997 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.066803446 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.068990565 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.066499692 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.06487738 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.066392058 seconds)
  done (took 3.180303647 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.07490649 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.068956401 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.071954963 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.067349798 seconds)
  done (took 1.848141149 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.072752292 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.072571724 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.080887039 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.085440194 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.072101773 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.073317813 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.079752106 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.080091715 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.062277424 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.082263588 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.064388055 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.063346401 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.063611625 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.081258564 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.078858133 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.058944069 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.060103753 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.073360841 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.072633455 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.075195259 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.065022406 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.062119875 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.072591031 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.07315466 seconds)
  done (took 3.290351413 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.078267551 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.061938444 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.076612739 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.086440292 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.087742311 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.062142387 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074909495 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089052543 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.123719837 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.06237562 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.068388843 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.062393639 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.100077034 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.06190659 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076236536 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.104497434 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.107410043 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.065976502 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.094305516 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.062360976 seconds)
  done (took 3.179145321 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072608947 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.065931974 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.067188618 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.062115298 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.073377825 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.069525846 seconds)
  done (took 1.983257429 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.06465924 seconds)
    (2/12) benchmarking ("push_single!", 256)...
    done (took 0.064806847 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.066617914 seconds)
    (4/12) benchmarking ("push_multiple!", 256)...
    done (took 0.069155171 seconds)
    (5/12) benchmarking ("push_single!", 2048)...
    done (took 0.06461511 seconds)
    (6/12) benchmarking ("push_single!", 8)...
    done (took 0.064885652 seconds)
    (7/12) benchmarking ("prerend!", 2048)...
    done (took 0.063781466 seconds)
    (8/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.062443163 seconds)
    (9/12) benchmarking ("push_multiple!", 8)...
    done (took 0.062713473 seconds)
    (10/12) benchmarking ("append!", 2048)...
    done (took 0.063432099 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.06318601 seconds)
    (12/12) benchmarking ("prerend!", 8)...
    done (took 0.063818723 seconds)
  done (took 2.32734892 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.142532117 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.066079451 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.066450639 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.062868708 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.064585107 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.06330946 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.077270881 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.065394861 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.080224014 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.063433595 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.06376878 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.065589134 seconds)
  done (took 2.447762629 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.09895761 seconds)
    (2/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.104668531 seconds)
    (3/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.137483983 seconds)
    (4/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.110775651 seconds)
    (5/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.11098789 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091444775 seconds)
    (7/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.118425443 seconds)
    (8/608) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.090762364 seconds)
    (9/608) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.153216977 seconds)
    (10/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.130048974 seconds)
    (11/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.110944782 seconds)
    (12/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.088572128 seconds)
    (13/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.082165975 seconds)
    (14/608) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.06602198 seconds)
    (15/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.094110997 seconds)
    (16/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.111595708 seconds)
    (17/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.13063553 seconds)
    (18/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.068932728 seconds)
    (19/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.107415633 seconds)
    (20/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.157527271 seconds)
    (21/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.124279373 seconds)
    (22/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.127011278 seconds)
    (23/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.140131132 seconds)
    (24/608) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.110981151 seconds)
    (25/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084628019 seconds)
    (26/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.13975462 seconds)
    (27/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.092680366 seconds)
    (28/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.096485672 seconds)
    (29/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.11795367 seconds)
    (30/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.11893112 seconds)
    (31/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.112763716 seconds)
    (32/608) benchmarking ("sumvector_view", "Matrix{Int64}")...
    done (took 0.092926745 seconds)
    (33/608) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.068050013 seconds)
    (34/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.06690349 seconds)
    (35/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.142478507 seconds)
    (36/608) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.098067816 seconds)
    (37/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.114306807 seconds)
    (38/608) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.088899529 seconds)
    (39/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.100143537 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.083597505 seconds)
    (41/608) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.101813364 seconds)
    (42/608) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.065868417 seconds)
    (43/608) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.081497352 seconds)
    (44/608) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.10769819 seconds)
    (45/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080134043 seconds)
    (46/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.125133422 seconds)
    (47/608) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.08467789 seconds)
    (48/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.109308971 seconds)
    (49/608) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077518528 seconds)
    (50/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.130727178 seconds)
    (51/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.116969732 seconds)
    (52/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.093347491 seconds)
    (53/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.081555795 seconds)
    (54/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.099179882 seconds)
    (55/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.275242418 seconds)
    (56/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.10684378 seconds)
    (57/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.127080052 seconds)
    (58/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.10228404 seconds)
    (59/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.078762087 seconds)
    (60/608) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.113377187 seconds)
    (61/608) benchmarking ("sumlinear_view", "Matrix{Float64}")...
    done (took 0.097364958 seconds)
    (62/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.095088641 seconds)
    (63/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.100807185 seconds)
    (64/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076087329 seconds)
    (65/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.167314966 seconds)
    (66/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.08388848 seconds)
    (67/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.105667877 seconds)
    (68/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104865374 seconds)
    (69/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.088222697 seconds)
    (70/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.089508739 seconds)
    (71/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.102177208 seconds)
    (72/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.128678634 seconds)
    (73/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.117663597 seconds)
    (74/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.117469923 seconds)
    (75/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.130454671 seconds)
    (76/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.090582677 seconds)
    (77/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.115280777 seconds)
    (78/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.094198963 seconds)
    (79/608) benchmarking ("mapr_access", "Matrix{Int64}")...
    done (took 0.122699066 seconds)
    (80/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.099221357 seconds)
    (81/608) benchmarking ("sumcartesian", "Matrix{Float64}")...
    done (took 0.069198526 seconds)
    (82/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.114452247 seconds)
    (83/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.122588355 seconds)
    (84/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.092939226 seconds)
    (85/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.095366159 seconds)
    (86/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.122501236 seconds)
    (87/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.087725978 seconds)
    (88/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.073222623 seconds)
    (89/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.093465386 seconds)
    (90/608) benchmarking ("sumlogical_view", "Matrix{Int64}")...
    done (took 0.112583704 seconds)
    (91/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.076395393 seconds)
    (92/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.105735048 seconds)
    (93/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075926613 seconds)
    (94/608) benchmarking ("sum", "3dsubarray")...
    done (took 0.103438799 seconds)
    (95/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.125998832 seconds)
    (96/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092057292 seconds)
    (97/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106289136 seconds)
    (98/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.111404308 seconds)
    (99/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.074019035 seconds)
    (100/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.147055477 seconds)
    (101/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.103760236 seconds)
    (102/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.069303669 seconds)
    (103/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.111778443 seconds)
    (104/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10809116 seconds)
    (105/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.149200672 seconds)
    (106/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090312801 seconds)
    (107/608) benchmarking ("sumcartesian", "Matrix{Int64}")...
    done (took 0.072725518 seconds)
    (108/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.094889903 seconds)
    (109/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.246576817 seconds)
    (110/608) benchmarking "5d"...
    done (took 0.145300245 seconds)
    (111/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101695489 seconds)
    (112/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.07659632 seconds)
    (113/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10476137 seconds)
    (114/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.132406539 seconds)
    (115/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090403152 seconds)
    (116/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.161959849 seconds)
    (117/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.091169687 seconds)
    (118/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.132216846 seconds)
    (119/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105845575 seconds)
    (120/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.082770044 seconds)
    (121/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.070786312 seconds)
    (122/608) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.085673766 seconds)
    (123/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105560987 seconds)
    (124/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.1015792 seconds)
    (125/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105896392 seconds)
    (126/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085569048 seconds)
    (127/608) benchmarking ("sumrange_view", "Matrix{Float64}")...
    done (took 0.079443094 seconds)
    (128/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.082996268 seconds)
    (129/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105409502 seconds)
    (130/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.087833036 seconds)
    (131/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.076573883 seconds)
    (132/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.108283951 seconds)
    (133/608) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.096327804 seconds)
    (134/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.070783239 seconds)
    (135/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083547668 seconds)
    (136/608) benchmarking ("sumcolon_view", "Matrix{Float64}")...
    done (took 0.075635531 seconds)
    (137/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.13529248 seconds)
    (138/608) benchmarking ("sumrange", "Matrix{Float64}")...
    done (took 0.073898722 seconds)
    (139/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.130085341 seconds)
    (140/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.119134583 seconds)
    (141/608) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.074865465 seconds)
    (142/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.100886556 seconds)
    (143/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.093267484 seconds)
    (144/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.102888159 seconds)
    (145/608) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.093342405 seconds)
    (146/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.110925027 seconds)
    (147/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.132606404 seconds)
    (148/608) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.110860856 seconds)
    (149/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.084970535 seconds)
    (150/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.088671309 seconds)
    (151/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102403851 seconds)
    (152/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13704101 seconds)
    (153/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.121110185 seconds)
    (154/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.087502202 seconds)
    (155/608) benchmarking ("sumcolon", "Matrix{Int64}")...
    done (took 0.072814159 seconds)
    (156/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.095379381 seconds)
    (157/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.106572762 seconds)
    (158/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.093028318 seconds)
    (159/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.119583745 seconds)
    (160/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.095527618 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103995328 seconds)
    (162/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.098347013 seconds)
    (163/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.134499491 seconds)
    (164/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.137353041 seconds)
    (165/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09566798 seconds)
    (166/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.09622491 seconds)
    (167/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.1012961 seconds)
    (168/608) benchmarking "ind2sub"...
    done (took 0.268461233 seconds)
    (169/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.073485948 seconds)
    (170/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.148474366 seconds)
    (171/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.098637054 seconds)
    (172/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.113104071 seconds)
    (173/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.080780765 seconds)
    (174/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.133644776 seconds)
    (175/608) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.108952781 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.084721457 seconds)
    (177/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.082839857 seconds)
    (178/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.095216426 seconds)
    (179/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.097876132 seconds)
    (180/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.100453086 seconds)
    (181/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.134978406 seconds)
    (182/608) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.091373315 seconds)
    (183/608) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.068709846 seconds)
    (184/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088108216 seconds)
    (185/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.135276156 seconds)
    (186/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.072278335 seconds)
    (187/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103884903 seconds)
    (188/608) benchmarking ("sumcartesian_view", "Matrix{Float64}")...
    done (took 0.085974375 seconds)
    (189/608) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.088177207 seconds)
    (190/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.112618161 seconds)
    (191/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.087293679 seconds)
    (192/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.077084687 seconds)
    (193/608) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.06564841 seconds)
    (194/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.119498747 seconds)
    (195/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.149716695 seconds)
    (196/608) benchmarking ("sumelt_boundscheck", "Matrix{Float64}")...
    done (took 0.066164123 seconds)
    (197/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.109368116 seconds)
    (198/608) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.106538544 seconds)
    (199/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.097035654 seconds)
    (200/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.114645911 seconds)
    (201/608) benchmarking ("sumelt", "1:100000")...
    done (took 0.066117685 seconds)
    (202/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.112060315 seconds)
    (203/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.131340325 seconds)
    (204/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.111438024 seconds)
    (205/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.132761999 seconds)
    (206/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.139012419 seconds)
    (207/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.109653005 seconds)
    (208/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.11306804 seconds)
    (209/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.108023888 seconds)
    (210/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100925983 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.075952356 seconds)
    (212/608) benchmarking ("sumlogical", "Matrix{Float64}")...
    done (took 0.120099806 seconds)
    (213/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.128218706 seconds)
    (214/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09114351 seconds)
    (215/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.087738757 seconds)
    (216/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.129020635 seconds)
    (217/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.112874468 seconds)
    (218/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.129205298 seconds)
    (219/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.110078439 seconds)
    (220/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.108879156 seconds)
    (221/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.099188498 seconds)
    (222/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.252890348 seconds)
    (223/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.097624742 seconds)
    (224/608) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.096525099 seconds)
    (225/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.136560852 seconds)
    (226/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.115403303 seconds)
    (227/608) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.118368361 seconds)
    (228/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.081588828 seconds)
    (229/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.100427237 seconds)
    (230/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.111189822 seconds)
    (231/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.127668073 seconds)
    (232/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.077769723 seconds)
    (233/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.133221402 seconds)
    (234/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.078491151 seconds)
    (235/608) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.111304369 seconds)
    (236/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.073355209 seconds)
    (237/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.116831179 seconds)
    (238/608) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.075804371 seconds)
    (239/608) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.106279463 seconds)
    (240/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.075678655 seconds)
    (241/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.094582894 seconds)
    (242/608) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.066060448 seconds)
    (243/608) benchmarking ("sumeach", "1:100000")...
    done (took 0.069987483 seconds)
    (244/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.133576039 seconds)
    (245/608) benchmarking ("sumvector", "1:100000")...
    done (took 0.106210166 seconds)
    (246/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.099558136 seconds)
    (247/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.094131655 seconds)
    (248/608) benchmarking ("sumlogical", "1:100000")...
    done (took 0.130368966 seconds)
    (249/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.129543599 seconds)
    (250/608) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.077213133 seconds)
    (251/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.102491247 seconds)
    (252/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.109620854 seconds)
    (253/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.096120434 seconds)
    (254/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.109815741 seconds)
    (255/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.103635962 seconds)
    (256/608) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.084471725 seconds)
    (257/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089912873 seconds)
    (258/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.103399954 seconds)
    (259/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.080982995 seconds)
    (260/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.077061054 seconds)
    (261/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10828446 seconds)
    (262/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08910632 seconds)
    (263/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.119906148 seconds)
    (264/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.080724193 seconds)
    (265/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.07134434 seconds)
    (266/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.133972157 seconds)
    (267/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.099765533 seconds)
    (268/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090354568 seconds)
    (269/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.074188093 seconds)
    (270/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102862219 seconds)
    (271/608) benchmarking "4d"...
    done (took 0.117561395 seconds)
    (272/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.088822502 seconds)
    (273/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.083408986 seconds)
    (274/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.110084848 seconds)
    (275/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.099709649 seconds)
    (276/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.135055493 seconds)
    (277/608) benchmarking ("sumcartesian_view", "Matrix{Int64}")...
    done (took 0.085943186 seconds)
    (278/608) benchmarking ("sumvector", "Matrix{Float64}")...
    done (took 0.093224066 seconds)
    (279/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.117738746 seconds)
    (280/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.076455104 seconds)
    (281/608) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.087733303 seconds)
    (282/608) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.065849144 seconds)
    (283/608) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.081568782 seconds)
    (284/608) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.072037818 seconds)
    (285/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.271670717 seconds)
    (286/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.073139167 seconds)
    (287/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.110140895 seconds)
    (288/608) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.06549709 seconds)
    (289/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.124381319 seconds)
    (290/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08128585 seconds)
    (291/608) benchmarking ("sumvector_view", "Matrix{Float64}")...
    done (took 0.089046 seconds)
    (292/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.096866868 seconds)
    (293/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105219569 seconds)
    (294/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.121174989 seconds)
    (295/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.089631827 seconds)
    (296/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.132113917 seconds)
    (297/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083966002 seconds)
    (298/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.110890442 seconds)
    (299/608) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101280552 seconds)
    (300/608) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089552558 seconds)
    (301/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.083094671 seconds)
    (302/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.097742992 seconds)
    (303/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.095544681 seconds)
    (304/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.11525128 seconds)
    (305/608) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.091350569 seconds)
    (306/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.115308473 seconds)
    (307/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.135052104 seconds)
    (308/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.098524635 seconds)
    (309/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.134752673 seconds)
    (310/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086702364 seconds)
    (311/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.116182886 seconds)
    (312/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101581003 seconds)
    (313/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.11804183 seconds)
    (314/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.105782597 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.138818535 seconds)
    (316/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.131223907 seconds)
    (317/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106768337 seconds)
    (318/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.106241685 seconds)
    (319/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.070984624 seconds)
    (320/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.089333501 seconds)
    (321/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.099710786 seconds)
    (322/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.105684382 seconds)
    (323/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.164819108 seconds)
    (324/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.118790986 seconds)
    (325/608) benchmarking ("sumlinear", "Matrix{Int64}")...
    done (took 0.068814638 seconds)
    (326/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.100223928 seconds)
    (327/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.089913879 seconds)
    (328/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.102694317 seconds)
    (329/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.099779613 seconds)
    (330/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.078635372 seconds)
    (331/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.139536245 seconds)
    (332/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.096706883 seconds)
    (333/608) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.083989265 seconds)
    (334/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.107000425 seconds)
    (335/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.085615499 seconds)
    (336/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.099871604 seconds)
    (337/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.072127561 seconds)
    (338/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.090493697 seconds)
    (339/608) benchmarking ("sumcolon", "1:100000")...
    done (took 0.094798069 seconds)
    (340/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.238166028 seconds)
    (341/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.093931475 seconds)
    (342/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.110025843 seconds)
    (343/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.120737115 seconds)
    (344/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.107209337 seconds)
    (345/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.135477149 seconds)
    (346/608) benchmarking "3d"...
    done (took 0.095175628 seconds)
    (347/608) benchmarking ("sum", "3darray")...
    done (took 0.088764209 seconds)
    (348/608) benchmarking ("sumlogical", "Matrix{Int64}")...
    done (took 0.112736833 seconds)
    (349/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105220621 seconds)
    (350/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104333856 seconds)
    (351/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.081715221 seconds)
    (352/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.081946417 seconds)
    (353/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.129073588 seconds)
    (354/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.11177474 seconds)
    (355/608) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.12174592 seconds)
    (356/608) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.094546775 seconds)
    (357/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10246782 seconds)
    (358/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.105250054 seconds)
    (359/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094240229 seconds)
    (360/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.116853103 seconds)
    (361/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101372165 seconds)
    (362/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.118277554 seconds)
    (363/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075567056 seconds)
    (364/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.072715708 seconds)
    (365/608) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.065099729 seconds)
    (366/608) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.068753724 seconds)
    (367/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.116936376 seconds)
    (368/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103253631 seconds)
    (369/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105155169 seconds)
    (370/608) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.093879309 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Matrix{Int64}")...
    done (took 0.068789343 seconds)
    (372/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.098382029 seconds)
    (373/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.10082155 seconds)
    (374/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.068243337 seconds)
    (375/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084571994 seconds)
    (376/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.088770426 seconds)
    (377/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.094514892 seconds)
    (378/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.08651374 seconds)
    (379/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101048745 seconds)
    (380/608) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.108948683 seconds)
    (381/608) benchmarking ("sumrange", "Matrix{Int64}")...
    done (took 0.086959257 seconds)
    (382/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.099388962 seconds)
    (383/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.093966319 seconds)
    (384/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.138596541 seconds)
    (385/608) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.095171858 seconds)
    (386/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083634022 seconds)
    (387/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.13718039 seconds)
    (388/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.142328291 seconds)
    (389/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083279074 seconds)
    (390/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088366361 seconds)
    (391/608) benchmarking ("sumelt", "Matrix{Int64}")...
    done (took 0.068119684 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.075060532 seconds)
    (393/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10801753 seconds)
    (394/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.142575289 seconds)
    (395/608) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.143822354 seconds)
    (396/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.073498822 seconds)
    (397/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.082334674 seconds)
    (398/608) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.081381676 seconds)
    (399/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.081884456 seconds)
    (400/608) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.067721356 seconds)
    (401/608) benchmarking ("sumeach_view", "Matrix{Float64}")...
    done (took 0.231460529 seconds)
    (402/608) benchmarking ("sumcolon", "Matrix{Float64}")...
    done (took 0.085668386 seconds)
    (403/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.099844398 seconds)
    (404/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.094234554 seconds)
    (405/608) benchmarking ("sumlogical_view", "Matrix{Float64}")...
    done (took 0.107153236 seconds)
    (406/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.099170275 seconds)
    (407/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.071879606 seconds)
    (408/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.097798435 seconds)
    (409/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.09443084 seconds)
    (410/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.087621519 seconds)
    (411/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.098227884 seconds)
    (412/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.111524828 seconds)
    (413/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.117279368 seconds)
    (414/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.132020933 seconds)
    (415/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.106288212 seconds)
    (416/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.100779551 seconds)
    (417/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.071892487 seconds)
    (418/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.075723842 seconds)
    (419/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.071425604 seconds)
    (420/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.075163023 seconds)
    (421/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.096919606 seconds)
    (422/608) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.074793116 seconds)
    (423/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.072190179 seconds)
    (424/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.134502375 seconds)
    (425/608) benchmarking ("sumcolon_view", "Matrix{Int64}")...
    done (took 0.087045682 seconds)
    (426/608) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.098902654 seconds)
    (427/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103178468 seconds)
    (428/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.083950521 seconds)
    (429/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.071077882 seconds)
    (430/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.127047193 seconds)
    (431/608) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.065976447 seconds)
    (432/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.128514079 seconds)
    (433/608) benchmarking ("sumeach", "Matrix{Int64}")...
    done (took 0.068041585 seconds)
    (434/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.077951346 seconds)
    (435/608) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.078812052 seconds)
    (436/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075107696 seconds)
    (437/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.088563651 seconds)
    (438/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.131520832 seconds)
    (439/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.104439464 seconds)
    (440/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.106932157 seconds)
    (441/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101645164 seconds)
    (442/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.099571713 seconds)
    (443/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.132464843 seconds)
    (444/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.148555587 seconds)
    (445/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075199845 seconds)
    (446/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.136753621 seconds)
    (447/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.072044827 seconds)
    (448/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.071477352 seconds)
    (449/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.072198655 seconds)
    (450/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.108239314 seconds)
    (451/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085220835 seconds)
    (452/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.109186523 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.133906539 seconds)
    (454/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086839173 seconds)
    (455/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.098456489 seconds)
    (456/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073531657 seconds)
    (457/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.136150142 seconds)
    (458/608) benchmarking ("sumeach_view", "Matrix{Int64}")...
    done (took 0.094754217 seconds)
    (459/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.099220155 seconds)
    (460/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.082102117 seconds)
    (461/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.074663105 seconds)
    (462/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.287164297 seconds)
    (463/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.076444157 seconds)
    (464/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.075277667 seconds)
    (465/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.085916362 seconds)
    (466/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.105387615 seconds)
    (467/608) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.069169605 seconds)
    (468/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.099091549 seconds)
    (469/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.080312906 seconds)
    (470/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.075553237 seconds)
    (471/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.134221549 seconds)
    (472/608) benchmarking "sub2ind"...
    done (took 0.625326713 seconds)
    (473/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.085244587 seconds)
    (474/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.07153694 seconds)
    (475/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.090533542 seconds)
    (476/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.134493483 seconds)
    (477/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.119146388 seconds)
    (478/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089335507 seconds)
    (479/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102364851 seconds)
    (480/608) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.112217407 seconds)
    (481/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.093934229 seconds)
    (482/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.089767227 seconds)
    (483/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.1016757 seconds)
    (484/608) benchmarking "6d"...
    done (took 0.177060309 seconds)
    (485/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.070236808 seconds)
    (486/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.088724617 seconds)
    (487/608) benchmarking ("sumrange", "1:100000")...
    done (took 0.097655226 seconds)
    (488/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.092866597 seconds)
    (489/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.096338304 seconds)
    (490/608) benchmarking ("sumrange_view", "Matrix{Int64}")...
    done (took 0.093228509 seconds)
    (491/608) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.081664238 seconds)
    (492/608) benchmarking ("sumvector", "Matrix{Int64}")...
    done (took 0.088084739 seconds)
    (493/608) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.082925839 seconds)
    (494/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.07582775 seconds)
    (495/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.102377689 seconds)
    (496/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084845124 seconds)
    (497/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.091673462 seconds)
    (498/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.101607651 seconds)
    (499/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.07881022 seconds)
    (500/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.082571967 seconds)
    (501/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.123720686 seconds)
    (502/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.098234769 seconds)
    (503/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.077493824 seconds)
    (504/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083694032 seconds)
    (505/608) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.100986624 seconds)
    (506/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084085681 seconds)
    (507/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.095863697 seconds)
    (508/608) benchmarking ("sumelt", "Matrix{Float64}")...
    done (took 0.065582512 seconds)
    (509/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.107851078 seconds)
    (510/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.08656006 seconds)
    (511/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.110673009 seconds)
    (512/608) benchmarking ("sumlinear_view", "Matrix{Int64}")...
    done (took 0.089935546 seconds)
    (513/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.1021509 seconds)
    (514/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.120838181 seconds)
    (515/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085673053 seconds)
    (516/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.130811819 seconds)
    (517/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.10097356 seconds)
    (518/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.116953457 seconds)
    (519/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.083325467 seconds)
    (520/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.074274174 seconds)
    (521/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.119549184 seconds)
    (522/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.083670081 seconds)
    (523/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074129148 seconds)
    (524/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.290784946 seconds)
    (525/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.088975781 seconds)
    (526/608) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.088923426 seconds)
    (527/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09800823 seconds)
    (528/608) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.092403073 seconds)
    (529/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.107740318 seconds)
    (530/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.110673098 seconds)
    (531/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.106406626 seconds)
    (532/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.09216065 seconds)
    (533/608) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075001956 seconds)
    (534/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.093966838 seconds)
    (535/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.096066346 seconds)
    (536/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080232877 seconds)
    (537/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073735202 seconds)
    (538/608) benchmarking ("sumlinear", "1:100000")...
    done (took 0.070867158 seconds)
    (539/608) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.072917275 seconds)
    (540/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101174444 seconds)
    (541/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079917352 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.079054586 seconds)
    (543/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.108534323 seconds)
    (544/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.084109108 seconds)
    (545/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.097444529 seconds)
    (546/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.09405982 seconds)
    (547/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.115971726 seconds)
    (548/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.078990146 seconds)
    (549/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.095936014 seconds)
    (550/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.104020518 seconds)
    (551/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.087126468 seconds)
    (552/608) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.103651319 seconds)
    (553/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.095216615 seconds)
    (554/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.121439156 seconds)
    (555/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.164961464 seconds)
    (556/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.11794838 seconds)
    (557/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.122348063 seconds)
    (558/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.126988743 seconds)
    (559/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.072808261 seconds)
    (560/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.071665669 seconds)
    (561/608) benchmarking ("sumeach", "Matrix{Float64}")...
    done (took 0.065013636 seconds)
    (562/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.109600019 seconds)
    (563/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.07530974 seconds)
    (564/608) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.084697754 seconds)
    (565/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.077473217 seconds)
    (566/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.126750306 seconds)
    (567/608) benchmarking "2d"...
    done (took 0.077931905 seconds)
    (568/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.105057812 seconds)
    (569/608) benchmarking "7d"...
    done (took 0.227229055 seconds)
    (570/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.07618211 seconds)
    (571/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.088407752 seconds)
    (572/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.0909777 seconds)
    (573/608) benchmarking ("sumlinear", "Matrix{Float64}")...
    done (took 0.066484692 seconds)
    (574/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.079499909 seconds)
    (575/608) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102383695 seconds)
    (576/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.08341045 seconds)
    (577/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07598264 seconds)
    (578/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.112725119 seconds)
    (579/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.079335901 seconds)
    (580/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.121540757 seconds)
    (581/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.10568231 seconds)
    (582/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094055674 seconds)
    (583/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.090052085 seconds)
    (584/608) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077091691 seconds)
    (585/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.108083131 seconds)
    (586/608) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.100246322 seconds)
    (587/608) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.123435796 seconds)
    (588/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.08984387 seconds)
    (589/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.071039506 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.260015312 seconds)
    (591/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.099051209 seconds)
    (592/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.130018863 seconds)
    (593/608) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.069932476 seconds)
    (594/608) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.0770367 seconds)
    (595/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.122339293 seconds)
    (596/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.097667711 seconds)
    (597/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.124171105 seconds)
    (598/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.07582291 seconds)
    (599/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.140497379 seconds)
    (600/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.134803505 seconds)
    (601/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.09402867 seconds)
    (602/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.125963472 seconds)
    (603/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.067296682 seconds)
    (604/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.078881235 seconds)
    (605/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.084006281 seconds)
    (606/608) benchmarking ("mapr_access", "Matrix{Float64}")...
    done (took 0.119306982 seconds)
    (607/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079261188 seconds)
    (608/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103511056 seconds)
  done (took 64.391908361 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.143450149 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.134963102 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.077990555 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.099405791 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.182709167 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.192388552 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.114400704 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.092606405 seconds)
  done (took 2.762100309 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hcat", 500)...
    done (took 0.064758744 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.079938343 seconds)
    (3/17) benchmarking ("vcat_setind", 5)...
    done (took 0.077080145 seconds)
    (4/17) benchmarking ("catnd_setind", 500)...
    done (took 0.198201767 seconds)
    (5/17) benchmarking ("vcat", 500)...
    done (took 0.091095965 seconds)
    (6/17) benchmarking ("vcat", 5)...
    done (took 0.063800591 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.068915267 seconds)
    (8/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.077974838 seconds)
    (9/17) benchmarking ("vcat_setind", 500)...
    done (took 0.063904247 seconds)
    (10/17) benchmarking ("hvcat", 5)...
    done (took 0.063454144 seconds)
    (11/17) benchmarking ("hcat_setind", 500)...
    done (took 0.097655595 seconds)
    (12/17) benchmarking ("hcat", 5)...
    done (took 0.063880542 seconds)
    (13/17) benchmarking ("hvcat", 500)...
    done (took 0.06402804 seconds)
    (14/17) benchmarking ("catnd", 500)...
    done (took 0.366047496 seconds)
    (15/17) benchmarking ("hcat_setind", 5)...
    done (took 0.062818547 seconds)
    (16/17) benchmarking ("catnd", 5)...
    done (took 0.068557911 seconds)
    (17/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.063781875 seconds)
  done (took 3.342632691 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.321054763 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.602602563 seconds)
    (3/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 1.204495577 seconds)
    (4/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.975426858 seconds)
    (5/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.139170906 seconds)
    (6/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.534496555 seconds)
    (7/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073375709 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.079092931 seconds)
    (9/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.664031963 seconds)
    (10/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.364518266 seconds)
    (11/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.135938561 seconds)
    (12/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.084614575 seconds)
  done (took 18.896193891 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 4)...
    done (took 0.073643638 seconds)
    (2/5) benchmarking ("setindex!", 3)...
    done (took 0.075135979 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.074651326 seconds)
    (4/5) benchmarking ("setindex!", 1)...
    done (took 0.071399544 seconds)
    (5/5) benchmarking ("setindex!", 2)...
    done (took 0.071316523 seconds)
  done (took 2.085527326 seconds)
done (took 113.176297589 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 0.080667157 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 0.165014348 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 0.064597355 seconds)
  done (took 1.97016328 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.078512484 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.076262242 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.076332678 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.074346994 seconds)
  done (took 2.021365047 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.071704358 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.072766302 seconds)
  done (took 1.82441438 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 0.211919048 seconds)
  (6/15) benchmarking "18129"...
  done (took 0.170727259 seconds)
  (7/15) benchmarking "20517"...
  done (took 0.085352866 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.078007215 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.075192917 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.07567765 seconds)
  done (took 1.950826097 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.06859327 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.067411885 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.068170919 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.068076338 seconds)
  done (took 1.977945856 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.065332927 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.062889035 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.065865973 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.067275543 seconds)
  done (took 1.969121296 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 0.081543211 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 0.081663352 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 0.110423285 seconds)
  done (took 1.981898841 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.079618526 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078933313 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.074177804 seconds)
  done (took 1.943425998 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.104844452 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.092286348 seconds)
  done (took 1.903621564 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.07692341 seconds)
  done (took 1.787869125 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.085738923 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.093170901 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.130688962 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.10071645 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.137237449 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.117933011 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.072656064 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.073418231 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.069061112 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.074237007 seconds)
  done (took 2.662007801 seconds)
done (took 24.246822988 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.075678334 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.17627746 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.347958525 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083040369 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.648178209 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.345239294 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.877458181 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.086230328 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.096531732 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.064549282 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.081142555 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.626878666 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.8702501 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.139988654 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.855734268 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.133131077 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.630429645 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.065295821 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.064444338 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.065155927 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.86032556 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.064088861 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.064579823 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.065588341 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.628339433 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.362288693 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.065618971 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.134389473 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.064221398 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.067950326 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.345339356 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06518219 seconds)
  done (took 14.810687668 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.066561384 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.11798086 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.068995133 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.080246795 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.066667565 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.066125743 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.067535027 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.064977159 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.1072168 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.064891141 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.081243116 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.064262582 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.06853433 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.06595408 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086810417 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.064497803 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.06669485 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.065234922 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.064714512 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.065271624 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.082505101 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.064649216 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.065019852 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.065232752 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.064937519 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.077563601 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.065522332 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.06447277 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.064796587 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068141238 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.069271833 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.065970908 seconds)
  done (took 4.008075654 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117835442 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.120978878 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.069616177 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.10495506 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112626483 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.066344593 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.145340963 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.087436916 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.110463083 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.065255989 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.081705923 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.064783684 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.099611499 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.066240215 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.084153755 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.06460543 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.067041842 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.065648005 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.064608723 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.065224201 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.083422705 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.064779451 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.064891636 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.065551812 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.065306384 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079088894 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.066047013 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.065498536 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.064914621 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068751549 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070185673 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.066012358 seconds)
  done (took 4.276712279 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.066809757 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.067766812 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.074418928 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.077280119 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.063449508 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.06534925 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.06597618 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.063029541 seconds)
  done (took 2.275726355 seconds)
done (took 27.098336078 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.076009515 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.064256567 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.066992491 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.083531716 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.070527003 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.066066849 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.061288785 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.070911422 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.068287886 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.067701876 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.069496626 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.063834092 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.066875711 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.061097705 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.068231454 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.06221196 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.068671579 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.066326526 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.066473186 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.067931193 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.064545907 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.06759636 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.070718869 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.066527579 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.066553828 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.066548395 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.071009028 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.068046107 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.062624331 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.064956221 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.064648603 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.075988686 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.0685221 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.06845788 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.062545777 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.062260193 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.067068361 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.064781756 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.068577626 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.071041761 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.064463465 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.071077168 seconds)
  done (took 4.528519714 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.085536199 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089979919 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.082929918 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.077743296 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.102778683 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.077797898 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.086585216 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.075619115 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.074024696 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.085889621 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.069703945 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.074998512 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.077106771 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.071207044 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.074435421 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.070653729 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.075783126 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.069865161 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.074532566 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.074219896 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.086700512 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.06744016 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.074520248 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.075413712 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.069482933 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.075732795 seconds)
  done (took 3.759760509 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.06968564 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084685304 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.088384948 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.135885671 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.104618623 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.07893269 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.078006287 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.089688063 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.097564004 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.06434745 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.068532383 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.08911643 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092561738 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.071572866 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.101944518 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.082099405 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.077147542 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.06633675 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.070690344 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.098618197 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.086735207 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.082958717 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.096712625 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.083968016 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.063599899 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.07355333 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071355562 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.079928803 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07142434 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076832279 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.068322413 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070843177 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.064940675 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.076382103 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.068150189 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.06218287 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.085767755 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077124035 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078852324 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.101841532 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.074314752 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.066689256 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.094096318 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.129566732 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.06405941 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.066569849 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.068168025 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077074827 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.065764739 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093886024 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082456218 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.064114981 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.082539974 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.065755223 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.065612029 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080244498 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.065786254 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.104880222 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076178701 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.069920358 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.084635338 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.069245411 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084728753 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.064122353 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075556481 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.065442481 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.065876215 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.062775723 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.09901041 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070998509 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.115116589 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.06521301 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.062063887 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075998526 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075478807 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.070416644 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.063717792 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083322922 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.076169981 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.067800658 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075528577 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.066751873 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.067332762 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.099460711 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.063106005 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.062432373 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.062230416 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.06612516 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.067597164 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.064726824 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.076587248 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.063653835 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.06765543 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.079064904 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.064065846 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.0650823 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.066463221 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.064963494 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.063813232 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.074225694 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.067820279 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.065745257 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076555535 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.065289369 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.067113207 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.078902638 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073187285 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.063554289 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.0651943 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.066213512 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.066019204 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068684396 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.067164108 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.066223729 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.07104346 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.0713241 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.070277564 seconds)
  done (took 10.596118522 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.157070307 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.146967326 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.065198639 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.142250423 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.072447402 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.068528825 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.144183472 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.083761056 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.064964573 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.066193314 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.064375452 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.091703105 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.08753787 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.095884767 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.06843406 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.065636266 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.089932466 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.097002739 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.145308916 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.14093121 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.087932978 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.072463402 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.067044156 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.066274137 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.06671825 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.073613076 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.078028924 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.072679742 seconds)
  done (took 4.320450861 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.071168104 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.07979459 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.068600993 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088517068 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.081612202 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.064995215 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.066563529 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.065744142 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.081760591 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.07092864 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.065030184 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.068707109 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.06819327 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.065675059 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.065443301 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.070774329 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.07093465 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.063588813 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.068504287 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.069176265 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.074785614 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.088931445 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.069059459 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.064956891 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.06722263 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.064785375 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.071148356 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.073488313 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.064889588 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.094127584 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.062240768 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.068812886 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.078682565 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.065847581 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.064480798 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.065160257 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.064661633 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.064796074 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.0651703 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.062809704 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.062963986 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.069759051 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.063427118 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.06979503 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.081171776 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.072353477 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.065566124 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.06693718 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.067185706 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.061496512 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.067960268 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.068022005 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.067141313 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.073160811 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.06818973 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.067042638 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.065878678 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.094334942 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.070608322 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.064080473 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064452124 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.062669283 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.066207229 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.071909059 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.081359323 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.06629526 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.063137827 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.064584799 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069427316 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.078765293 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.06415594 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.069997465 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.061566695 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.064960473 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.066740075 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.067377942 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.065975484 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.062725736 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.064221725 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.064805528 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.064959843 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.064408393 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.064356015 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.067185698 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.062264913 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.062750468 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.065312785 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.065886085 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.070295891 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.063600366 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.067214062 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.065886848 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.063639049 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.067265555 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.070435118 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.067555537 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.084324579 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.072824968 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.065240426 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.06269246 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.079132823 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.066574441 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.063955829 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.069737484 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.068958394 seconds)
  done (took 9.001973878 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.087212363 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.065909744 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084159865 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.090911937 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.074540231 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.069809597 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.078331271 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.06519952 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.080563901 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.063584948 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.073492837 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.063021504 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077570385 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.073575956 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.066134137 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.074922862 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.067239985 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084612008 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.079011973 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.063525056 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.073349249 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.076583869 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.07702582 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.082880971 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.081981456 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.083243639 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.076824399 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.067054099 seconds)
  done (took 3.891137736 seconds)
done (took 37.819567639 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.802418254 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.976814408 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.811919823 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.054836372 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.000325612 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.922130404 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.929452293 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.803549361 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.824809142 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.860913111 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.122255023 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.198604936 seconds)
done (took 66.112551452 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 6.849183997 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.943976901 seconds)
    (2/2) benchmarking "String"...
    done (took 2.01436921 seconds)
  done (took 5.703898139 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 2.402939807 seconds)
    (2/3) benchmarking "different length"...
    done (took 1.802512348 seconds)
    (3/3) benchmarking "different"...
    done (took 1.847546157 seconds)
  done (took 7.795214422 seconds)
  (4/7) benchmarking "replace"...
  done (took 2.906724398 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 6.43597217 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.047510113 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.800759025 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.805610938 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.208204239 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.606167799 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.270281923 seconds)
  done (took 31.921266567 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.850747725 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.4285079 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.483605385 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.514655866 seconds)
  done (took 16.063377719 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 2.407611561 seconds)
    (2/4) benchmarking "equal"...
    done (took 2.064800773 seconds)
    (3/4) benchmarking "different length"...
    done (took 2.064513188 seconds)
    (4/4) benchmarking "different"...
    done (took 2.055361984 seconds)
  done (took 10.392672163 seconds)
done (took 83.464185727 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.802960711 seconds)
    (2/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.371037137 seconds)
    (3/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.8317128 seconds)
    (4/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.955126677 seconds)
    (5/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.853792056 seconds)
    (6/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.830423953 seconds)
    (7/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.812645603 seconds)
    (8/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.848459413 seconds)
    (9/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.805264409 seconds)
    (10/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.809340687 seconds)
    (11/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.195709804 seconds)
    (12/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.803766992 seconds)
    (13/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.807865574 seconds)
    (14/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.839876741 seconds)
    (15/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.802805471 seconds)
    (16/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.830744528 seconds)
    (17/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.234977744 seconds)
    (18/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.814553069 seconds)
    (19/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.814333432 seconds)
    (20/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.13098735 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.311925281 seconds)
    (22/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.81505422 seconds)
    (23/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.814521338 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.854299292 seconds)
    (25/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.802749468 seconds)
    (26/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.828318375 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.368022979 seconds)
    (28/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.81601896 seconds)
    (29/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.412347189 seconds)
    (30/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.816700072 seconds)
    (31/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.931895908 seconds)
    (32/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.805723795 seconds)
  done (took 206.518681615 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.804457531 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.760685936 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.854217464 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.834459398 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.211851167 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.999097153 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.943315259 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.254109496 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.808442778 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.81583806 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.968626292 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.806690795 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.971347915 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.80750766 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.800004356 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.896723292 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.07284514 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.002640308 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.801697692 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.993366869 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.817619888 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.846010583 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.800063607 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.924939799 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.811418071 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.806835736 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.817799704 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.810399437 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.990585354 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.059270957 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.816035206 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.814666486 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.009299151 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.676147785 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.807693183 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.823815593 seconds)
  done (took 170.786922459 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.986781719 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.811424444 seconds)
    (2/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.863813761 seconds)
    (3/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.929861671 seconds)
    (4/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.485107285 seconds)
    (5/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.478895714 seconds)
    (6/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.806342239 seconds)
    (7/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.805312756 seconds)
    (8/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.804082543 seconds)
    (9/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.811705957 seconds)
    (10/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.807348853 seconds)
    (11/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.872372761 seconds)
    (12/118) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.612622566 seconds)
    (13/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.818581116 seconds)
    (14/118) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.803623978 seconds)
    (15/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.807970986 seconds)
    (16/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.805988546 seconds)
    (17/118) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.440467267 seconds)
    (18/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.808507921 seconds)
    (19/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.806360122 seconds)
    (20/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.806705101 seconds)
    (21/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.867523723 seconds)
    (22/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.180356942 seconds)
    (23/118) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.805283945 seconds)
    (24/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.929530884 seconds)
    (25/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.806331511 seconds)
    (26/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.816737158 seconds)
    (27/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.931574475 seconds)
    (28/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.813390916 seconds)
    (29/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.805361981 seconds)
    (30/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.929744236 seconds)
    (31/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.806010532 seconds)
    (32/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.882802568 seconds)
    (33/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.928645946 seconds)
    (34/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.815594353 seconds)
    (35/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.887383102 seconds)
    (36/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.813129589 seconds)
    (37/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.262904523 seconds)
    (38/118) benchmarking ("3-arg mul!", 2)...
    done (took 1.80525739 seconds)
    (39/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.806155083 seconds)
    (40/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.80706281 seconds)
    (41/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.865153108 seconds)
    (42/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.806466193 seconds)
    (43/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.855369 seconds)
    (44/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.8955827 seconds)
    (45/118) benchmarking ("5-arg mul!", 3)...
    done (took 1.805452298 seconds)
    (46/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.820311819 seconds)
    (47/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.997723206 seconds)
    (48/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.483028321 seconds)
    (49/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.808842144 seconds)
    (50/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.807691409 seconds)
    (51/118) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.807958412 seconds)
    (52/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.807882981 seconds)
    (53/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.807095145 seconds)
    (54/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.615538627 seconds)
    (55/118) benchmarking ("5-arg mul!", 2)...
    done (took 1.807388896 seconds)
    (56/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.832559262 seconds)
    (57/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.318496657 seconds)
    (58/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.806949131 seconds)
    (59/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.807510672 seconds)
    (60/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.809156503 seconds)
    (61/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.807658436 seconds)
    (62/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.808153272 seconds)
    (63/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.814557299 seconds)
    (64/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.845172525 seconds)
    (65/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.517421808 seconds)
    (66/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.306232688 seconds)
    (67/118) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.193821628 seconds)
    (68/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.529417704 seconds)
    (69/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.807233177 seconds)
    (70/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.813308127 seconds)
    (71/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.863514713 seconds)
    (72/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.810361665 seconds)
    (73/118) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.808075953 seconds)
    (74/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.884443295 seconds)
    (75/118) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.80694778 seconds)
    (76/118) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.808214669 seconds)
    (77/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.806855419 seconds)
    (78/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.808131281 seconds)
    (79/118) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.855362458 seconds)
    (80/118) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.849574137 seconds)
    (81/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.809300242 seconds)
    (82/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.933005654 seconds)
    (83/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.810972213 seconds)
    (84/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.808598843 seconds)
    (85/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.838804638 seconds)
    (86/118) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.809139866 seconds)
    (87/118) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.416523308 seconds)
    (88/118) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.80941557 seconds)
    (89/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.820261842 seconds)
    (90/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.865558733 seconds)
    (91/118) benchmarking ("3-arg mul!", 3)...
    done (took 1.809276225 seconds)
    (92/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.808536068 seconds)
    (93/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.815642102 seconds)
    (94/118) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.853404039 seconds)
    (95/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.810858433 seconds)
    (96/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.808902778 seconds)
    (97/118) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.809133619 seconds)
    (98/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.852433724 seconds)
    (99/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.810963609 seconds)
    (100/118) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.893219446 seconds)
    (101/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.024423079 seconds)
    (102/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.879501631 seconds)
    (103/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.049137953 seconds)
    (104/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.974924858 seconds)
    (105/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.811286994 seconds)
    (106/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.809780146 seconds)
    (107/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.823635454 seconds)
    (108/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.811706579 seconds)
    (109/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.81015185 seconds)
    (110/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.821468043 seconds)
    (111/118) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.809645201 seconds)
    (112/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.81007348 seconds)
    (113/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.810693341 seconds)
    (114/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.812552573 seconds)
    (115/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.809394304 seconds)
    (116/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.812147305 seconds)
    (117/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.824064259 seconds)
    (118/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.810574437 seconds)
  done (took 412.473802249 seconds)
done (took 793.54910457 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 512)...
    done (took 2.509682483 seconds)
    (2/5) benchmarking ("identity", 4096)...
    done (took 2.575032738 seconds)
    (3/5) benchmarking ("identity", 2)...
    done (took 2.438426215 seconds)
    (4/5) benchmarking ("identity", 1024)...
    done (took 2.46942185 seconds)
    (5/5) benchmarking ("identity", 64)...
    done (took 2.43957187 seconds)
  done (took 14.176044891 seconds)
done (took 15.916872449 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 1.832002528 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.825961423 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 1.817155285 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.832936614 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 1.83309059 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 1.829474258 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 1.864491586 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 1.853108759 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 1.849351614 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 1.829173046 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 1.839851971 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 1.833074189 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 1.836961719 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 1.851980828 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.840733 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 1.83878123 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 1.832499802 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 1.823152007 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 1.836768671 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 1.832837415 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 1.832638893 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.831032663 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 1.831179841 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 1.838386279 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.845132435 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 1.836578244 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 1.827568994 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.834715597 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 1.837266937 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.835887753 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 1.871035883 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 1.840820308 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 1.865398754 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.841538127 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 1.841638143 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.844147079 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.831965524 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 1.855820517 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 1.834786658 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 1.8708694 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 1.840982587 seconds)
  done (took 77.17505292 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.822079206 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.951895396 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.025091259 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.851417075 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.821434909 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.035708567 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.875481613 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.94673613 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.954414384 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.030155688 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.031280622 seconds)
  done (took 23.104520362 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.820543457 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.954451595 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.047049897 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.85508586 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.824742538 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.035296791 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.883013195 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.95954739 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.953390692 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.037095183 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.039843772 seconds)
  done (took 23.171874033 seconds)
done (took 125.201666753 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 2.19311491 seconds)
    (2/2) benchmarking "11899"...
    done (took 1.843553863 seconds)
  done (took 5.790280092 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.817733227 seconds)
    (2/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.836581731 seconds)
    (3/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.964722642 seconds)
    (4/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.817886473 seconds)
    (5/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.818229954 seconds)
    (6/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.819334145 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.817984358 seconds)
    (8/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.816273101 seconds)
  done (took 16.465085798 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.817166366 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.816336105 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.818143671 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.817676377 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.816933898 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.81786167 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.817439042 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.816674978 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.817959261 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.818287119 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.816962259 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.816854767 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.81802308 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.816341743 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.817424097 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.816215931 seconds)
  done (took 30.83274517 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("minimum", (8,))...
    done (took 1.816718584 seconds)
    (2/24) benchmarking ("sumabs", (4,))...
    done (took 1.816942302 seconds)
    (3/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.817252254 seconds)
    (4/24) benchmarking ("minimum", (2,))...
    done (took 1.816984428 seconds)
    (5/24) benchmarking ("sum", (8,))...
    done (took 1.81661229 seconds)
    (6/24) benchmarking ("sumabs", (2,))...
    done (took 1.817587456 seconds)
    (7/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.818594642 seconds)
    (8/24) benchmarking ("minimum", (4, 4))...
    done (took 1.817839643 seconds)
    (9/24) benchmarking ("sumabs", (8,))...
    done (took 1.816647856 seconds)
    (10/24) benchmarking ("sum", (2, 2))...
    done (took 1.817238553 seconds)
    (11/24) benchmarking ("minimum", (2, 2))...
    done (took 1.81608771 seconds)
    (12/24) benchmarking ("sum", (4,))...
    done (took 1.815868139 seconds)
    (13/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.816457917 seconds)
    (14/24) benchmarking ("sumabs", (16,))...
    done (took 1.817233314 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.817031552 seconds)
    (16/24) benchmarking ("sum", (4, 4))...
    done (took 1.81856555 seconds)
    (17/24) benchmarking ("sum", (8, 8))...
    done (took 1.817934592 seconds)
    (18/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.819247855 seconds)
    (19/24) benchmarking ("minimum", (8, 8))...
    done (took 1.817891542 seconds)
    (20/24) benchmarking ("sum", (16, 16))...
    done (took 1.818780867 seconds)
    (21/24) benchmarking ("minimum", (4,))...
    done (took 1.817961767 seconds)
    (22/24) benchmarking ("sum", (16,))...
    done (took 1.818294922 seconds)
    (23/24) benchmarking ("minimum", (16, 16))...
    done (took 1.821213686 seconds)
    (24/24) benchmarking ("sum", (2,))...
    done (took 1.818120053 seconds)
  done (took 45.378993623 seconds)
done (took 100.22787613 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.041054616 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.519916141 seconds)
  done (took 8.319654715 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.821508955 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.818004042 seconds)
  done (took 5.467622624 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.818137066 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.818731869 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.817220389 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.818888842 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.818453061 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.819653257 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.819396048 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.817593838 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.819515284 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.818939849 seconds)
  done (took 19.945170145 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.818749791 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.817055961 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.818468857 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.818550241 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.81752722 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.817868735 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.819219537 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.819072319 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.819501985 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.819939211 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.819414583 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.818507579 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.819767152 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.818604014 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.819669349 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.819965487 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.819439936 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.818809652 seconds)
  done (took 34.497510736 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.8192476 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.819880766 seconds)
  done (took 5.398189244 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.820114171 seconds)
    (2/7) benchmarking "second"...
    done (took 1.818336659 seconds)
    (3/7) benchmarking "month"...
    done (took 1.821544118 seconds)
    (4/7) benchmarking "year"...
    done (took 1.819643283 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.820687086 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.820096896 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.81871338 seconds)
  done (took 14.496059721 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.822749449 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.981089475 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.032280504 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.42863671 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.822328701 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.821908047 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.697194891 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.822553674 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.823392174 seconds)
  done (took 20.012235451 seconds)
done (took 109.890167765 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.667826702 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.823395884 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.091241061 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.88733292 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.885121108 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.167475789 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.853249077 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.371622513 seconds)
done (took 42.503977842 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.907303994 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.817793531 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.847585493 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.848362512 seconds)
  done (took 22.272865684 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.821632912 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.112579683 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.840427889 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.804548792 seconds)
  done (took 22.355800107 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.195770654 seconds)
    (2/2) benchmarking "read"...
    done (took 2.166427263 seconds)
  done (took 6.125390778 seconds)
done (took 59.422645945 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.822254726 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.821730479 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.821998307 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.82091121 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.822733681 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.821664315 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.821814161 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.821822592 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.822108984 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.822290666 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.822253053 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.821420814 seconds)
    (13/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.82174983 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.82239207 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.822539675 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.821876136 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.822554785 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.822023374 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.822978335 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.823993359 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.82279724 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.822430533 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.822627002 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.823933359 seconds)
  done (took 45.495814359 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.820733141 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.821862687 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.823999485 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.823544657 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.823968263 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.824621163 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.823558607 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.82283337 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.82384165 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.82290324 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.824102457 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.822832333 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.823137218 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.822761648 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.823170196 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.824747313 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.823817214 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.823427006 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.824674698 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.823518081 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.823119566 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.82292144 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.823195733 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.823350416 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.824092327 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.824547396 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.824208968 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.825032114 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.82528568 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.824452076 seconds)
  done (took 56.468171119 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.824512965 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.824744929 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.826050807 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.823850766 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.824115288 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.824858645 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.825034601 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.82518434 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.825611637 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.824183499 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.824376696 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.824439883 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.825429891 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.824817208 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.825882184 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.825134703 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.824559478 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.824824071 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.825440423 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.825890573 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.826242628 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.8256776 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.825233702 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.826062336 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.825627439 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.825053596 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.826732202 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.825355655 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.824603715 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.826487814 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.825946547 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.825329524 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.825478852 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.825092965 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.825887517 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.825408456 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.825776208 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.828944772 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.834618048 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.826801059 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.826665317 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.826045295 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.825503897 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.824935174 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.825286283 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.826637644 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.825623736 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.825409979 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.82571143 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.826846256 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.825095351 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.825790773 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.826376026 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.826968985 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.826880841 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.828232037 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.827662424 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.827905844 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.827484768 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.82699872 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.827090025 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.826824456 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.826556058 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.829001167 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.827847654 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.827385344 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.827388718 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.826618514 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.827553012 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.826024256 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.827817428 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.826209497 seconds)
  done (took 133.245612795 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.827811822 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.828313837 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.827955287 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.827630707 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.828282989 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.826797369 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.828490432 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.827422702 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.828787515 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.827888436 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.82839838 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.827791787 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.829197483 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.828241711 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.827288254 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.82858934 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.828271001 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.827333283 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.82814117 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.827855283 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.82924423 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.8282007 seconds)
  done (took 41.985453791 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.827830586 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.82918925 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.828731499 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.82771854 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.829097881 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.82840221 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.827691183 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.829110631 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.828348995 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.827614137 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.829081903 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.828064894 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.829750247 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.828840544 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.828128433 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.829226933 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.829786795 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.829230965 seconds)
  done (took 34.683212671 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.828799123 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.830256155 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.828955259 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.827666808 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.82869782 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.828205485 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.829425118 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.829968215 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.82969954 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.829165245 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.830759739 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.829758887 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.832527739 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.830513938 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.828958304 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.830512062 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.830718985 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.829930484 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.830030618 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.830064342 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.829697924 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.831633799 seconds)
  done (took 42.024185164 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.831357752 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.82957627 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.830591339 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.830777308 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.830549039 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.830370498 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.830331582 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.830193934 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.830845826 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.83143974 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.831362931 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.830119383 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.83041296 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.83226505 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.831250744 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.830966459 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.831711282 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.832237168 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.831881809 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.832331356 seconds)
  done (took 38.390242255 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.832227378 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.833180279 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.832697857 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.832272754 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.832385467 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.831779576 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.831157734 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.833450932 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.833171014 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.833046018 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.831489469 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.831506093 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.831775465 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.832068095 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.832923195 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.834176837 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.83271558 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.832772683 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.831775465 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.832824633 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.83220543 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.830908467 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.832697778 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.832314885 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.833985169 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.832645387 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.832972725 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.833287065 seconds)
  done (took 53.080865275 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.832931775 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.83245414 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.83306548 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.832985411 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.831793093 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.832371038 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.833705644 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.833290766 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.832819406 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.833378818 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.833078085 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.833122972 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.832159286 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.834289872 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.833454259 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.834255497 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.833671037 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.833634609 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.832544269 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.83278299 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.832885173 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.832898549 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.834401159 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.834228096 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.834305926 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.833325858 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.834936981 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.833481305 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.833672193 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.833262441 seconds)
  done (took 56.770709799 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.85515706 seconds)
    (2/2) benchmarking "in"...
    done (took 1.85255975 seconds)
  done (took 5.480600585 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.833906719 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.834290187 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.832145901 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.836274796 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.834873984 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.83456164 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.835261219 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.835625507 seconds)
  done (took 16.448832729 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.835069064 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.837276638 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.83437872 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.833367645 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.835294751 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.841958476 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.836582375 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.835869933 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.836610726 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.837793882 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.839073549 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.840107984 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.842511776 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.83987645 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.836029789 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.834988989 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.83727764 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.836875266 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.83697159 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.836247458 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.837844716 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.836421384 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.834383735 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.836785859 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.836066171 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.838061855 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.846174084 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.838658789 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.837794835 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.836095004 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.842758977 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.835601558 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.837135822 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.837446728 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.83795331 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.835861803 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.843716754 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.836258264 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.83785563 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.836937919 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.838791098 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.839486446 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.840972986 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.844416651 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.837127864 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.835923077 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.835778063 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.836856182 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.838192493 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.842690397 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.845748558 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.837794563 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.837874609 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.835886284 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.837872056 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.837629255 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.837089347 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.839519112 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.844855287 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.844792916 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.840708355 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.857028076 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.844628962 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.83857797 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.838017658 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.849040499 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.86534019 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.838939672 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.840205722 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.83935175 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.845390526 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.837587664 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.836548467 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.838301289 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.851456055 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.84652435 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.839294145 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.839235574 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.839673776 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.838531985 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.841331661 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.839699496 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.839358928 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.83939824 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.848960342 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.866205057 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.83909949 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.838684602 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.840539909 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.839772035 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.842361411 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.841765475 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.839375794 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.837612785 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.842573328 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.841332617 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.83945684 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.838842628 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.839928504 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.84847939 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.838591111 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.838325484 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.842497929 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.848058029 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.839720949 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.84063881 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.841826077 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.840557722 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.849248379 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.840915996 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.839996889 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.840143715 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.84269463 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.844305484 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.840757623 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.843772266 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.848412399 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.848536537 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.840217291 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.84463293 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.844310634 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.843841909 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.851997725 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.869733691 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.84112787 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.845549756 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.845947613 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.852822492 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.844934838 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.840745948 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.84282937 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.840787096 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.841262349 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.843675932 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.841094808 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.842135491 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.840398054 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.843202966 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.840436104 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.841330157 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.844816588 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.843931254 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.843333136 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.842421269 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.846216707 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.842221674 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.844030158 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.848973933 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.842370526 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.842931415 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.842527997 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.843908922 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.843348424 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.843800697 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.841176305 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.842249642 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.842225508 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.842126916 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.844967857 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.842776138 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.842681852 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.843471326 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.846242054 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.844894207 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.842205108 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.84357709 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.842820574 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.838726236 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.844753342 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.84324184 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.846315365 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.843692024 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.846697978 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.842333504 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.842903985 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.84345694 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.842622276 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.842030058 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.847938252 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.855148858 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.847685471 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.852945988 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.843104448 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.851811339 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.84434517 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.844339165 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.843304819 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.846182107 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.843901336 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.843324358 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.844223751 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.847729666 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.86640105 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.853672795 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.846080361 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.845511494 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.850176668 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.848499734 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.849502429 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.842791432 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.845770346 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.848840021 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.845759079 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.843526775 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.845030284 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.848822936 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.844968338 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.846218129 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.847917729 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.845883317 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.843296154 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.849005845 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.843595479 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.847424644 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.845037656 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.843536543 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.845553212 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.844115623 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.854128403 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.846845028 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.846624406 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.84676826 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.848797341 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.846137981 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.845943719 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.847216981 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.849343082 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.846380967 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.847579265 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.852970551 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.845754286 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.845933268 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.846637801 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.845932128 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.848340662 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.845414233 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.849460276 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.85401844 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.849159819 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.846771087 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.852102665 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.846792151 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.849042045 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.847443743 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.849159952 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.846279793 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.84759268 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.847137387 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.847203777 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.854563262 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.848578302 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.847333663 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.846456399 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.848522495 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.847937761 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.848876483 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.848721857 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.851574675 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.855818633 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.853098521 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.847197076 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.850138663 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.850640277 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.850219473 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.851994622 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.849811466 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.86035662 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.857040968 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.8473228 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.846916583 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.84792276 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.850932505 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.849152266 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.847804322 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.85600557 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.848008433 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.849146875 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.852361605 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.850460031 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.847985724 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.856513466 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.849591356 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.851416671 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.848779616 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.850256059 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.850092985 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.8500127 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.850422966 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.850084996 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.851525718 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.850792139 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.848431136 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.84886026 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.851016341 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.857238713 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.850162185 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.850161078 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.859291323 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.849069598 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.849464266 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.849811889 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.849397895 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.852356239 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.850531832 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.849702503 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.851523493 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.850199047 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.854525388 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.860553121 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.853779849 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.858008198 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.852963394 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.861456288 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.849850613 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.848766339 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.850511407 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.853828809 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.857919093 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.849690422 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.850509298 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.858769814 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.852007123 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.85060711 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.85377301 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.849469384 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.850651361 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.851379024 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.853671431 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.857280947 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.854037944 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.850809776 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.851372118 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.849849162 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.850626347 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.854281372 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.853215653 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.852064938 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.851347336 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.852919433 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.851194058 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.851000214 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.852116917 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.850929994 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.851015093 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.853575711 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.858927679 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.853096695 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.852717945 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.856261143 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.851326778 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.860957874 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.85171353 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.853606628 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.852841607 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.851837449 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.85506927 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.852226053 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.854568677 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.851287865 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.852098339 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.854954912 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.865591121 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.859819183 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.856547502 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.85425661 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.852535519 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.853158668 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.863233652 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.880640094 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.852822937 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.855866423 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.855946629 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.859337799 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.85681105 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.858327406 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.858231781 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.861171476 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.854245898 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.853467796 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.857015433 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.868424818 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.854324841 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.853446339 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.852971256 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.859319784 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.856192486 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.855005785 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.854184382 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.8564816 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.855513777 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.867586195 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.855005681 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.855162901 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.855925244 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.853651759 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.853587988 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.854792546 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.856685969 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.85654513 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.855319964 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.853342939 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.857736968 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.859937557 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.854568318 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.859899631 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.863493413 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.856805246 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.855355202 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.857708323 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.857770748 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.858419955 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.856291299 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.856083645 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.857533126 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.855510857 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.856871567 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.85912889 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.864852823 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.85662893 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.856873227 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.854916024 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.860298493 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.856200009 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.856584884 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.856639859 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.864953773 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.86066843 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.869825622 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.86727269 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.857636145 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.857457762 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.863172968 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.865679994 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.856170757 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.856746967 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.856603753 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.856705217 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.858664101 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.858374542 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.856037023 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.858628302 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.862547841 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.857429986 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.857055753 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.85628721 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.855580298 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.859102328 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.859368628 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.863328569 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.856208857 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.85638213 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.855370565 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.857297104 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.85706085 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.85979962 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.858222557 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.858104593 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.860253341 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.860136793 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.862178367 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.857926495 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.856951779 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.858748754 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.858491986 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.856695341 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.858026777 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.859300124 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.857412103 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.861453716 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.865989295 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.856958219 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.85969845 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.85802968 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.861532222 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.858976651 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.858450893 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.858891872 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.858180225 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.867564833 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.858280166 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.858355812 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.859911661 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.858752287 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.865408627 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.862271486 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.8644994 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.858374036 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.857990036 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.858964658 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.862663467 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.869032331 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.8628659 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.862582256 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.866202986 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.863069834 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.861593788 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.859279593 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.858643573 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.858881584 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.860051147 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.863432176 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.861276351 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.863124285 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.858280108 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.860838287 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.861087563 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.861840274 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.858955361 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.860108967 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.862578925 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.869397728 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.869615593 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.859163879 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.861002222 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.860455856 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.864545881 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.87108931 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.860176563 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.860390314 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.860459062 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.860321513 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.862006337 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.86749621 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.87116506 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.863991417 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.861618096 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.866263911 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.87760364 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.864240912 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.871256434 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.896438429 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.861386766 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.861727499 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.861780761 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.860091791 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.862841301 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.865465603 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.861265236 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.867470646 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.861984108 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.86215634 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.869350679 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.861527533 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.860628693 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.861912995 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.863009587 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.868095272 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.863847223 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.869402303 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.861814693 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.861096904 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.862145025 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.865918258 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.862823116 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.862602295 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.862799855 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.86470014 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.862715537 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.861974397 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.870316412 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.862454956 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.866254721 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.876524051 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.872359375 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.863350076 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.864053159 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.863640064 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.868872865 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.865406284 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.863113083 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.866790467 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.869750682 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.867668079 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.871586611 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.866139896 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.864888484 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.865132433 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.862439782 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.862667759 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.876017772 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.874322608 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.867432511 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.864586485 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.871203311 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.864298622 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.868780741 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.869502302 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.86536286 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.866185854 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.864141444 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.861819073 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.865272323 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.864972549 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.867953773 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.873270794 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.862208684 seconds)
  done (took 1105.621291094 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.86298828 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.863072475 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.861620457 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.863915283 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.859497737 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.864369965 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.864013778 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.864278156 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.863810895 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.864037293 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.863871965 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.863704302 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.863995795 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.864423299 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.86512812 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.864649549 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.864197815 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.864691744 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.864557859 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.863678108 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.863793696 seconds)
  done (took 40.940433674 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.864896648 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.864437065 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.866016056 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.863361294 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.86396207 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.864822784 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.865123215 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.865281337 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.964598549 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.998787966 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.998724798 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.999287729 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.998487698 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 2.000303859 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.998235922 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.998362456 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.997734132 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.998717164 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.999397061 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.998660727 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.999217773 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.99915133 seconds)
  done (took 44.669611199 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.9993286 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 2.000354895 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 2.000367889 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.998772907 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.999199735 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.998916437 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.998475237 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 2.000522781 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.999871621 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 2.000713781 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 2.009768329 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 2.008233994 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.999613006 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 2.001592248 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 2.000144799 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.999504408 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.145702564 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.999640392 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.999308291 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.998456557 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 2.000497947 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 2.004609248 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.998016864 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.99715495 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.998452093 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.999727663 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.997239408 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.998277226 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.998727524 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 2.000653541 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 2.003692904 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.997103733 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.99857738 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.99982964 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.998043851 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.997658954 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.9989315 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.994506196 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.994160363 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.994068909 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 2.003982601 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 2.015090143 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.991892719 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.992471866 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.998887695 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.991920393 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.991349836 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.995522812 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 2.000032594 seconds)
  done (took 100.044913804 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.992160564 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.991287332 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.990868285 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.990810401 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.990669767 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.988900335 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.989888589 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.990192087 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.991319991 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.991807614 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.991723014 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.991146642 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.991013822 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.991266164 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.991289498 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.99257471 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.991430441 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.991177125 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.9908358 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.990631501 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.992478264 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.990873231 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.990579693 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.990461287 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.9911099 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.99180039 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.991365888 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.991118851 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.991147619 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.991013003 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.992928706 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.989921826 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.981162402 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.987337342 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.989789198 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.990636289 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.988734576 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.989024616 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.988583101 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.989130418 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.989468556 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.988879217 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.987102429 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.987978542 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.987207449 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.988458569 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.988039101 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.988463822 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.987414389 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.987903592 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.987634239 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.987934241 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.987637214 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.9888269 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.988005534 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.988191352 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.988709468 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.987627632 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.989056373 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.988414174 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.988695374 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.986599898 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.960681327 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.987679337 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.988874634 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.989210259 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.98861578 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.988804241 seconds)
  done (took 137.192068673 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.989893459 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.989540138 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.989170206 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.989863031 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.988918344 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.990502338 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.990112751 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.990357673 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.990573456 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.987900752 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.989335108 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.98851581 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.989743034 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.988793293 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.989945733 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.990223215 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.991014836 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.990560015 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.990555716 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.989370638 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.989584337 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.990849113 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.98950002 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.990179221 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.990807932 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.990221098 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.991037092 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.990198893 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.991412195 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.990509337 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.990096331 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.992413683 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.990488596 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.990378795 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.990523965 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.989683289 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.991006932 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.991133468 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.992045296 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.990513318 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.990748731 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.991892923 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.990299587 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.990950758 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.990890676 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.990337975 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.991913803 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.990983866 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.99039902 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.990263315 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.990618292 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.99247729 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.990647739 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.991396614 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.99075427 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.990445027 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.993830548 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.98792315 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.987602141 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.987550407 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.987409017 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.987684083 seconds)
  done (took 125.320999784 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.98252249 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.982219417 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.982597481 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.982946378 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.982181983 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.982075202 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.981898066 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.98267183 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.981768208 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.982535492 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.982008191 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.981311546 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.982269957 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.98132733 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.982023383 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.980848596 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.980106258 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.980375424 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.980804718 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.982576677 seconds)
  done (took 41.558135921 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.980292276 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.979938557 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.979605686 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.981685491 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.980336063 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.978931019 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.979435983 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.978917689 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.980984178 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.980263383 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.979350612 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.979148008 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.979892011 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.979997938 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.978768424 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.979167326 seconds)
  done (took 33.593856413 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.97872214 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.979208277 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.978736004 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.978512463 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.978161639 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.978309763 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.979385374 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.977167989 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.977817395 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.977223963 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.977545352 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.978910858 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.977556794 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.977839758 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.97812336 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.978466763 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.978123091 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.976791964 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.978151183 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.977640462 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.977649721 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.976941024 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.977791227 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.977071388 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.977339586 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.977751284 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.977836735 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.976859053 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.978132639 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.976683572 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.97723056 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.978047146 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.976276872 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.975957473 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.976944451 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.976887708 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.977100721 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.975397554 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.977127286 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.976553703 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.976731063 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.976996668 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.975967419 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.976404172 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.977384547 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.977147131 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.976583366 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.977873799 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.976292351 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.950819583 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.971974132 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.97662428 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.976511916 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.976092213 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.976409978 seconds)
  done (took 110.639988786 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.976109144 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.975458806 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.975696953 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.975297902 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.975204048 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.975951328 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.976076994 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.974523338 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.976189425 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.976443593 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.97645867 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.975518118 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.974878375 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.974498524 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.975254173 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.975467982 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.975629064 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.974410667 seconds)
  done (took 37.4723825 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.97527401 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.975480576 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.97718243 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.97434121 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.974854087 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.974456035 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.975679411 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.975974565 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.974484744 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.974867235 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.975028639 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.975190423 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.97537081 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.974047969 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.97470991 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.974293388 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.974608159 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.975553383 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.975210397 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.974465008 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.974708888 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.974030468 seconds)
  done (took 45.36212201 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.975625995 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.975397395 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.991271202 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.994594114 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.995925714 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 2.008706651 seconds)
  done (took 13.854069801 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.97425407 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.973782328 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.975708488 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.973948208 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.973979524 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.974366941 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.974853374 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.975013708 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.973646899 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.974655056 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.97383862 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.973658241 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.974942009 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.972835658 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.973686739 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.974306298 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.97383997 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.974312052 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.973936984 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.97394688 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.974558933 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.974031702 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.974726768 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.974019097 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.974155562 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.973610252 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.974181096 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.974378801 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.975278075 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.97363353 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.973843589 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.97449777 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.974180043 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.975234597 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.972900174 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.97354043 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.973544952 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.974243788 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.975378057 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.97433194 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.973481365 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.973268723 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.974136804 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.974886092 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.973124047 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.97428909 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.973506718 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.972759204 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.974819811 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.973014521 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.973963626 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.973220789 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.973969539 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.974458951 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.973365607 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.973147487 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.973971017 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.973400128 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.974798163 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.974208713 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.974239133 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.973602994 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.973743963 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.975050409 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.973328545 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.973103313 seconds)
  done (took 132.199005164 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.974480725 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.973489397 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.973583782 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.97322249 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.973299807 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.973797143 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.974302427 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.974239825 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.975192552 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.972955315 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.974923293 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.975128221 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.974088602 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.97460996 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.974091052 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.974479558 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.976068312 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.974378683 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.974318808 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.973942175 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.974999916 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.974939059 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.975655353 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.97576015 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.97518905 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.974491375 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.974591812 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.976388772 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.975238343 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.975247049 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.97495238 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.975353221 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.976252927 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.976471784 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.975499963 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.975776281 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.975769511 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.976605117 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.976327427 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.975540474 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.975646431 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.975291821 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.975727928 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.975909943 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.976470224 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.976278589 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.976225828 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.977090823 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.975802838 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.976031209 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.975271499 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.976773816 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.977728857 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.976291285 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.97538076 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.976302697 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.976064105 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.977095299 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.976864334 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.976040878 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.976962253 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.976263003 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.976677038 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.975852097 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.975470922 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.976338955 seconds)
  done (took 132.290680617 seconds)
done (took 2626.598744692 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 7.010436732 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.05704539 seconds)
  done (took 15.981617039 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.142792192 seconds)
    (2/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 7.016665174 seconds)
    (3/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.164632998 seconds)
    (4/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.09559838 seconds)
    (5/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 7.011888308 seconds)
    (6/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.97871619 seconds)
    (7/16) benchmarking ("transpose", (600, 600))...
    done (took 1.979932754 seconds)
    (8/16) benchmarking ("transpose", (600, 400))...
    done (took 1.980614956 seconds)
    (9/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.075111515 seconds)
    (10/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.980879627 seconds)
    (11/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.999430502 seconds)
    (12/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.982598627 seconds)
    (13/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.980853415 seconds)
    (14/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.981607724 seconds)
    (15/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.980828034 seconds)
    (16/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.982037057 seconds)
  done (took 54.250762012 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.984248041 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.984706332 seconds)
    (3/18) benchmarking ("IJV", 10)...
    done (took 1.981884998 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.980992919 seconds)
    (5/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.994726446 seconds)
    (6/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.055652382 seconds)
    (7/18) benchmarking ("IJV", 100)...
    done (took 2.003446952 seconds)
    (8/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.984825007 seconds)
    (9/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.995615663 seconds)
    (10/18) benchmarking ("IV", 1000)...
    done (took 2.01661801 seconds)
    (11/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.999507972 seconds)
    (12/18) benchmarking ("Diagonal", 10)...
    done (took 1.987258211 seconds)
    (13/18) benchmarking ("Diagonal", 100)...
    done (took 1.989421378 seconds)
    (14/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.987705738 seconds)
    (15/18) benchmarking ("IJV", 1000)...
    done (took 2.07062291 seconds)
    (16/18) benchmarking ("Diagonal", 1000)...
    done (took 2.028306697 seconds)
    (17/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.040036962 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.056220928 seconds)
  done (took 38.058456561 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.062149145 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.988865292 seconds)
  done (took 10.973845544 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.994959698 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.978145405 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 7.002770037 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 7.001447734 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.990185289 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.991554747 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.995634822 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.985041294 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 7.015947084 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.982840064 seconds)
  done (took 71.859122306 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.98521076 seconds)
    (2/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.985176615 seconds)
    (3/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.243069118 seconds)
    (4/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.996317441 seconds)
    (5/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.990661406 seconds)
    (6/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 2.008230631 seconds)
    (7/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.982490458 seconds)
    (8/54) benchmarking ("spmat", "range", 100)...
    done (took 2.014236243 seconds)
    (9/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.986624531 seconds)
    (10/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.981411887 seconds)
    (11/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.994101196 seconds)
    (12/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.246829368 seconds)
    (13/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.995814839 seconds)
    (14/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.985117976 seconds)
    (15/54) benchmarking ("spmat", "array", 100)...
    done (took 2.407853975 seconds)
    (16/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.996660787 seconds)
    (17/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.991354614 seconds)
    (18/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 2.01430656 seconds)
    (19/54) benchmarking ("spvec", "logical", 1000)...
    done (took 2.015443628 seconds)
    (20/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.98867013 seconds)
    (21/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.990302353 seconds)
    (22/54) benchmarking ("spmat", "range", 10)...
    done (took 1.989511265 seconds)
    (23/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.144732162 seconds)
    (24/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.671208564 seconds)
    (25/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.985193721 seconds)
    (26/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.987464008 seconds)
    (27/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.990121496 seconds)
    (28/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.980347581 seconds)
    (29/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.980828079 seconds)
    (30/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.984596364 seconds)
    (31/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.985523195 seconds)
    (32/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.983999651 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.987569941 seconds)
    (34/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.981721878 seconds)
    (35/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.990772744 seconds)
    (36/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.988182856 seconds)
    (37/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.481171118 seconds)
    (38/54) benchmarking ("spmat", "array", 10)...
    done (took 2.003061764 seconds)
    (39/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.991484876 seconds)
    (40/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.07394859 seconds)
    (41/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 2.025947253 seconds)
    (42/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.989225023 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.800599467 seconds)
    (44/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.987593561 seconds)
    (45/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.982540007 seconds)
    (46/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.99281913 seconds)
    (47/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.665266758 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 2.06113446 seconds)
    (49/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.98514353 seconds)
    (50/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.152180709 seconds)
    (51/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.312216659 seconds)
    (52/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.999146006 seconds)
    (53/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.136261865 seconds)
    (54/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.14715878 seconds)
  done (took 139.140108977 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.981158276 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.218714831 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.134586895 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.983886727 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.237868278 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.192108921 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.983673139 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.027228061 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.983550304 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.184051891 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.241688912 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.084549745 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.984563008 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.981669524 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.981725009 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.985210439 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.125161609 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.048579006 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.986148569 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.980881748 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.007602476 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.182531547 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.104137486 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.989908295 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 2.008891875 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.18801045 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.103658545 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.082481067 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.801695198 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.986580161 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.043757946 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.986739914 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.983094807 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.982659434 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.139410431 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.075418637 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.065416163 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.983843473 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.981787899 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.983916337 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.655693679 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.183612428 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.078027526 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.10588073 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.231483984 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.19994924 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.594683836 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.982115538 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.607471247 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.147883261 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.188875913 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.189947074 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.10155441 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.98584522 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.274125241 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.982798089 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.983290274 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.205768351 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.200793298 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.081236398 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.986476573 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.986409775 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.987218461 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.222468421 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.987366358 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.075394042 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.986369754 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.984283562 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.077568434 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.084542439 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.210949452 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.204162357 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.019236155 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.306031566 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.47745172 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.189795876 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.049066436 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.205200625 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.986961256 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.984796817 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.067167425 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.819229672 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.244736786 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.225871363 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.183253038 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.014714797 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.635078076 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.984026785 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.170653468 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.174377592 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.220929705 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.226481272 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.221521147 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.344196932 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.984623671 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.987570193 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.291899632 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.103485441 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.987869699 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.339393625 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.21341492 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.478027908 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.012083546 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.331697813 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.101261774 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.988422981 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.632629936 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.986408896 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.190819125 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.024987248 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.987555601 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.98686157 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.17747665 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.896898498 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.986204927 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.693448947 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 2.046673333 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.992107737 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.190237924 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.989059025 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.230297605 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.988934731 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.219974443 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.610380098 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.017760924 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.16126456 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.229257286 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.619762611 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.224727668 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.229829573 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.099423006 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.207409769 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.797977087 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.989368212 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.248336009 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.988673785 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.985604799 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.155246372 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.988422238 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.129748053 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 7.419572948 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.252968802 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.008678353 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.218623052 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.99076311 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.226773993 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.018796662 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.036650634 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.98997561 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.117551981 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.991637421 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.831950776 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.146683028 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.992886529 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.989888796 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.580844549 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.989463664 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.135133542 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.212693081 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.008478168 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.058701741 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.553485104 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.979326859 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.075239068 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.010215054 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.62871915 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.987786979 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.242142126 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.963827707 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.459919459 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.988752665 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.224381766 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.173949678 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.99157455 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.988814091 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.832800721 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.988827891 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.988658399 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.144822608 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.058774252 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.887976779 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.186698046 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.993910197 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.117166995 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.994478732 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 4.067416721 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.32899854 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.989294402 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.989520835 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.989629073 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.989515585 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.991313916 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.199433197 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.015391657 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.421369252 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.125622869 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.244118724 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.295884957 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.186141807 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.029278781 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.994769182 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.212793249 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.993819212 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 2.052376475 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.992221257 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.009939264 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.217062931 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.992307326 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.194639207 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.224908559 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 3.040502788 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.035747162 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.992240123 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.99182425 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.897027706 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.137412751 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.076115357 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.993312089 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.9909704 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.103749036 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.110961145 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.17208945 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.824696433 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.197313725 seconds)
  done (took 928.181338372 seconds)
done (took 1260.35713426 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.991795669 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.995876894 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.995124414 seconds)
    (4/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.99493177 seconds)
  done (took 29.906739169 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 1.992843943 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 1.993354923 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 1.993946741 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 1.995076142 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 1.993476291 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 1.992346095 seconds)
  done (took 13.889253604 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.992850296 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.993658663 seconds)
    (3/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.997090025 seconds)
  done (took 22.912209195 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((10000000,), 2)...
    done (took 2.400011157 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.399845916 seconds)
    (3/4) benchmarking ((1000, 1000), 1)...
    done (took 2.069007685 seconds)
    (4/4) benchmarking ((1000, 1000), 2)...
    done (took 2.133360336 seconds)
  done (took 10.929693251 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 1.998098386 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.993089504 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 1.993050459 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.995450187 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 1.99450395 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 1.994428249 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.996340105 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 1.994405534 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 1.994546558 seconds)
  done (took 19.890266202 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.2222413 seconds)
done (took 103.674895088 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.896401749 seconds)
    (2/341) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.26883249 seconds)
    (3/341) benchmarking ("collect", "filter", Bool, true)...
    done (took 3.124778933 seconds)
    (4/341) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.305728341 seconds)
    (5/341) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.999836179 seconds)
    (6/341) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.647482254 seconds)
    (7/341) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.699790349 seconds)
    (8/341) benchmarking ("map", abs, Int64, true)...
    done (took 2.251691056 seconds)
    (9/341) benchmarking ("map", identity, BigInt, true)...
    done (took 2.347062542 seconds)
    (10/341) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.52327465 seconds)
    (11/341) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.296508323 seconds)
    (12/341) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.126864612 seconds)
    (13/341) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 2.008069982 seconds)
    (14/341) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.99297418 seconds)
    (15/341) benchmarking ("perf_countnothing", Float32, true)...
    done (took 3.797294445 seconds)
    (16/341) benchmarking ("collect", "all", Float64, false)...
    done (took 2.086960052 seconds)
    (17/341) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.096221211 seconds)
    (18/341) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.39707545 seconds)
    (19/341) benchmarking ("perf_sum", Bool, true)...
    done (took 2.007009854 seconds)
    (20/341) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.737698861 seconds)
    (21/341) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.018000679 seconds)
    (22/341) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.053588735 seconds)
    (23/341) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.388540754 seconds)
    (24/341) benchmarking ("perf_sum2", Int64, false)...
    done (took 2.010663449 seconds)
    (25/341) benchmarking ("collect", "filter", Float32, false)...
    done (took 2.75746843 seconds)
    (26/341) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.322168157 seconds)
    (27/341) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.177479997 seconds)
    (28/341) benchmarking ("map", abs, BigInt, true)...
    done (took 7.323330177 seconds)
    (29/341) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.169854655 seconds)
    (30/341) benchmarking ("perf_countnothing", Float32, false)...
    done (took 2.004145997 seconds)
    (31/341) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.194225022 seconds)
    (32/341) benchmarking ("collect", "filter", BigFloat, false)...
    done (took 2.900714249 seconds)
    (33/341) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 7.000495806 seconds)
    (34/341) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.421863626 seconds)
    (35/341) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.304749899 seconds)
    (36/341) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.998632689 seconds)
    (37/341) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.744775347 seconds)
    (38/341) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 7.081336227 seconds)
    (39/341) benchmarking ("perf_countnothing", Int64, true)...
    done (took 2.008257987 seconds)
    (40/341) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.187174184 seconds)
    (41/341) benchmarking ("map", abs, Int8, false)...
    done (took 2.100157614 seconds)
    (42/341) benchmarking ("collect", "all", Int64, false)...
    done (took 2.094394255 seconds)
    (43/341) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.289419875 seconds)
    (44/341) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.154440934 seconds)
    (45/341) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.998699952 seconds)
    (46/341) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.14378863 seconds)
    (47/341) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.227526012 seconds)
    (48/341) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.128129435 seconds)
    (49/341) benchmarking ("collect", "all", Float32, true)...
    done (took 2.193624629 seconds)
    (50/341) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.268159189 seconds)
    (51/341) benchmarking ("collect", "all", Int8, true)...
    done (took 2.124112956 seconds)
    (52/341) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.761107169 seconds)
    (53/341) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.403143172 seconds)
    (54/341) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.415113747 seconds)
    (55/341) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.220229331 seconds)
    (56/341) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.694496894 seconds)
    (57/341) benchmarking ("collect", "filter", Float64, false)...
    done (took 2.884001056 seconds)
    (58/341) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.290226553 seconds)
    (59/341) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.076067832 seconds)
    (60/341) benchmarking ("collect", "all", BigInt, false)...
    done (took 2.226773986 seconds)
    (61/341) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 7.013290897 seconds)
    (62/341) benchmarking ("map", identity, Int8, true)...
    done (took 2.128571558 seconds)
    (63/341) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.274602525 seconds)
    (64/341) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.239788869 seconds)
    (65/341) benchmarking ("perf_countequals", "Int8")...
    done (took 2.243704166 seconds)
    (66/341) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.496293966 seconds)
    (67/341) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.248294163 seconds)
    (68/341) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.425638425 seconds)
    (69/341) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 2.01757568 seconds)
    (70/341) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.996596124 seconds)
    (71/341) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 3.070888264 seconds)
    (72/341) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.157166393 seconds)
    (73/341) benchmarking ("collect", "filter", Bool, false)...
    done (took 2.712216198 seconds)
    (74/341) benchmarking ("map", abs, Bool, false)...
    done (took 2.080951757 seconds)
    (75/341) benchmarking ("map", abs, Bool, true)...
    done (took 2.129687745 seconds)
    (76/341) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.346692687 seconds)
    (77/341) benchmarking ("sort", Int8, false)...
    done (took 4.938452504 seconds)
    (78/341) benchmarking ("perf_sum", Int8, true)...
    done (took 2.004328202 seconds)
    (79/341) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.129396933 seconds)
    (80/341) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 3.002252969 seconds)
    (81/341) benchmarking ("map", abs, Float32, true)...
    done (took 2.19812522 seconds)
    (82/341) benchmarking ("perf_countnothing", Bool, true)...
    done (took 2.015171602 seconds)
    (83/341) benchmarking ("map", identity, Int8, false)...
    done (took 2.081146301 seconds)
    (84/341) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.320499561 seconds)
    (85/341) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.321634991 seconds)
    (86/341) benchmarking ("perf_countnothing", Int64, false)...
    done (took 2.012661873 seconds)
    (87/341) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.70171955 seconds)
    (88/341) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.509294619 seconds)
    (89/341) benchmarking ("map", identity, BigInt, false)...
    done (took 2.23145511 seconds)
    (90/341) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 2.013829399 seconds)
    (91/341) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.761172911 seconds)
    (92/341) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.134955749 seconds)
    (93/341) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.13670979 seconds)
    (94/341) benchmarking ("collect", "all", ComplexF64, false)...
    done (took 2.196573682 seconds)
    (95/341) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.998245723 seconds)
    (96/341) benchmarking ("collect", "filter", Float64, true)...
    done (took 3.429548402 seconds)
    (97/341) benchmarking ("perf_sum", BigFloat, true)...
    done (took 7.005621394 seconds)
    (98/341) benchmarking ("map", *, BigInt, (true, true))...
    done (took 8.152358436 seconds)
    (99/341) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.813564482 seconds)
    (100/341) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.209004707 seconds)
    (101/341) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.111919147 seconds)
    (102/341) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.885158005 seconds)
    (103/341) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.126589373 seconds)
    (104/341) benchmarking ("collect", "filter", BigInt, true)...
    done (took 2.964539278 seconds)
    (105/341) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.206398209 seconds)
    (106/341) benchmarking ("sort", Float32, false)...
    done (took 5.675875293 seconds)
    (107/341) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.25208699 seconds)
    (108/341) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.831709906 seconds)
    (109/341) benchmarking ("collect", "all", BigFloat, false)...
    done (took 2.261669752 seconds)
    (110/341) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 2.088525334 seconds)
    (111/341) benchmarking ("perf_sum", Float32, true)...
    done (took 2.132813117 seconds)
    (112/341) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.290854907 seconds)
    (113/341) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.696121715 seconds)
    (114/341) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.383449304 seconds)
    (115/341) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.207586833 seconds)
    (116/341) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.157613033 seconds)
    (117/341) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.710124354 seconds)
    (118/341) benchmarking ("collect", "filter", Int8, false)...
    done (took 2.717485373 seconds)
    (119/341) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.233140712 seconds)
    (120/341) benchmarking ("perf_countnothing", Bool, false)...
    done (took 2.012410346 seconds)
    (121/341) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.999317032 seconds)
    (122/341) benchmarking ("perf_sum", Float64, true)...
    done (took 4.067351618 seconds)
    (123/341) benchmarking ("map", abs, BigFloat, false)...
    done (took 7.009417396 seconds)
    (124/341) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 7.059008726 seconds)
    (125/341) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 7.006719705 seconds)
    (126/341) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.073001375 seconds)
    (127/341) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.078562525 seconds)
    (128/341) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.868761702 seconds)
    (129/341) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.703232783 seconds)
    (130/341) benchmarking ("map", identity, Int64, false)...
    done (took 2.108251061 seconds)
    (131/341) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 7.006096633 seconds)
    (132/341) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.302410639 seconds)
    (133/341) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.151180806 seconds)
    (134/341) benchmarking ("sort", Float64, false)...
    done (took 5.726254494 seconds)
    (135/341) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.454094061 seconds)
    (136/341) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.425439086 seconds)
    (137/341) benchmarking ("collect", "filter", Int8, true)...
    done (took 3.131135017 seconds)
    (138/341) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.302613175 seconds)
    (139/341) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.886385204 seconds)
    (140/341) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 2.070385254 seconds)
    (141/341) benchmarking ("perf_countequals", "Float32")...
    done (took 2.287530298 seconds)
    (142/341) benchmarking ("collect", "all", Int64, true)...
    done (took 2.272190953 seconds)
    (143/341) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 7.001649841 seconds)
    (144/341) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.396335563 seconds)
    (145/341) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.239307406 seconds)
    (146/341) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 7.112720596 seconds)
    (147/341) benchmarking ("perf_sum4", Int8, true)...
    done (took 2.007393379 seconds)
    (148/341) benchmarking ("perf_sum", Int64, false)...
    done (took 2.015514182 seconds)
    (149/341) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.404764144 seconds)
    (150/341) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.310532639 seconds)
    (151/341) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.12898331 seconds)
    (152/341) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.08595464 seconds)
    (153/341) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.123766325 seconds)
    (154/341) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.100896564 seconds)
    (155/341) benchmarking ("perf_countequals", "Int64")...
    done (took 2.245968036 seconds)
    (156/341) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.129613439 seconds)
    (157/341) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.678822239 seconds)
    (158/341) benchmarking ("perf_sum4", Int8, false)...
    done (took 2.019646312 seconds)
    (159/341) benchmarking ("map", identity, Float64, false)...
    done (took 2.099534871 seconds)
    (160/341) benchmarking ("perf_countequals", "Bool")...
    done (took 2.253044299 seconds)
    (161/341) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 7.000441568 seconds)
    (162/341) benchmarking ("sort", Bool, false)...
    done (took 2.223065689 seconds)
    (163/341) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.200241927 seconds)
    (164/341) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 2.014372766 seconds)
    (165/341) benchmarking ("map", abs, Int64, false)...
    done (took 2.116876819 seconds)
    (166/341) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 7.007962855 seconds)
    (167/341) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.222174205 seconds)
    (168/341) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.205592112 seconds)
    (169/341) benchmarking ("perf_sum", Int64, true)...
    done (took 2.021901763 seconds)
    (170/341) benchmarking ("perf_sum4", Bool, false)...
    done (took 2.015798941 seconds)
    (171/341) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.161994583 seconds)
    (172/341) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.347313348 seconds)
    (173/341) benchmarking ("sort", Int64, false)...
    done (took 5.662216907 seconds)
    (174/341) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.921067514 seconds)
    (175/341) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.86904847 seconds)
    (176/341) benchmarking ("perf_sum4", Float32, true)...
    done (took 2.013817469 seconds)
    (177/341) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.39401741 seconds)
    (178/341) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.007680728 seconds)
    (179/341) benchmarking ("map", abs, Float32, false)...
    done (took 2.089785525 seconds)
    (180/341) benchmarking ("map", abs, Float64, false)...
    done (took 2.113483103 seconds)
    (181/341) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.304653213 seconds)
    (182/341) benchmarking ("collect", "filter", Int64, false)...
    done (took 2.882845904 seconds)
    (183/341) benchmarking ("collect", "all", Int8, false)...
    done (took 2.097267999 seconds)
    (184/341) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 2.016319889 seconds)
    (185/341) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 7.080500871 seconds)
    (186/341) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.118822842 seconds)
    (187/341) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.262208861 seconds)
    (188/341) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.210747557 seconds)
    (189/341) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.397339624 seconds)
    (190/341) benchmarking ("collect", "all", Bool, true)...
    done (took 2.132651904 seconds)
    (191/341) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 7.007001543 seconds)
    (192/341) benchmarking ("collect", "filter", Float32, true)...
    done (took 3.223925959 seconds)
    (193/341) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 7.014542827 seconds)
    (194/341) benchmarking ("perf_countnothing", Int8, false)...
    done (took 2.014630158 seconds)
    (195/341) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.133152161 seconds)
    (196/341) benchmarking ("perf_countnothing", Int8, true)...
    done (took 2.01303045 seconds)
    (197/341) benchmarking ("perf_sum4", Int64, true)...
    done (took 2.018821555 seconds)
    (198/341) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.111190362 seconds)
    (199/341) benchmarking ("perf_sum", Int8, false)...
    done (took 2.015408961 seconds)
    (200/341) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 8.098164492 seconds)
    (201/341) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.247461602 seconds)
    (202/341) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.784145319 seconds)
    (203/341) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.305948117 seconds)
    (204/341) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.406068908 seconds)
    (205/341) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.218128755 seconds)
    (206/341) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.27000923 seconds)
    (207/341) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.121696295 seconds)
    (208/341) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.321878209 seconds)
    (209/341) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.11833816 seconds)
    (210/341) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 7.005554692 seconds)
    (211/341) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.088097627 seconds)
    (212/341) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 7.004610932 seconds)
    (213/341) benchmarking ("collect", "filter", BigInt, false)...
    done (took 2.935615232 seconds)
    (214/341) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.345587749 seconds)
    (215/341) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.411907065 seconds)
    (216/341) benchmarking ("map", identity, Bool, true)...
    done (took 2.136296143 seconds)
    (217/341) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.997021142 seconds)
    (218/341) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.107555206 seconds)
    (219/341) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 2.025281753 seconds)
    (220/341) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 7.003616377 seconds)
    (221/341) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.94464305 seconds)
    (222/341) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 2.171644964 seconds)
    (223/341) benchmarking ("map", identity, Float32, false)...
    done (took 2.09194 seconds)
    (224/341) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.87565428 seconds)
    (225/341) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 3.026454844 seconds)
    (226/341) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.150180956 seconds)
    (227/341) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.175042029 seconds)
    (228/341) benchmarking ("perf_sum", Bool, false)...
    done (took 2.018900521 seconds)
    (229/341) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.188336919 seconds)
    (230/341) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.100846017 seconds)
    (231/341) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.23124706 seconds)
    (232/341) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.211274138 seconds)
    (233/341) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.917818083 seconds)
    (234/341) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.404416899 seconds)
    (235/341) benchmarking ("collect", "filter", Int64, true)...
    done (took 3.312703706 seconds)
    (236/341) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.266592391 seconds)
    (237/341) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.794823568 seconds)
    (238/341) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.753247525 seconds)
    (239/341) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.337639489 seconds)
    (240/341) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 7.007955055 seconds)
    (241/341) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.515569435 seconds)
    (242/341) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.343029661 seconds)
    (243/341) benchmarking ("perf_sum2", Int8, false)...
    done (took 2.011698649 seconds)
    (244/341) benchmarking ("map", identity, Float64, true)...
    done (took 2.282262556 seconds)
    (245/341) benchmarking ("perf_countequals", "Float64")...
    done (took 2.300570779 seconds)
    (246/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.63237975 seconds)
    (247/341) benchmarking ("map", abs, Int8, true)...
    done (took 2.153927195 seconds)
    (248/341) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.137967146 seconds)
    (249/341) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.15431296 seconds)
    (250/341) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 7.006339903 seconds)
    (251/341) benchmarking ("map", abs, BigFloat, true)...
    done (took 7.036829663 seconds)
    (252/341) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.817822826 seconds)
    (253/341) benchmarking ("perf_sum", BigFloat, false)...
    done (took 7.007612312 seconds)
    (254/341) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 7.063271511 seconds)
    (255/341) benchmarking ("perf_sum4", Bool, true)...
    done (took 2.032402318 seconds)
    (256/341) benchmarking ("map", abs, Float64, true)...
    done (took 2.272744738 seconds)
    (257/341) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.482218263 seconds)
    (258/341) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.085364692 seconds)
    (259/341) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.982345562 seconds)
    (260/341) benchmarking ("perf_sum4", Int64, false)...
    done (took 2.028038035 seconds)
    (261/341) benchmarking ("collect", "all", Bool, false)...
    done (took 2.08382832 seconds)
    (262/341) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.313783038 seconds)
    (263/341) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.431794635 seconds)
    (264/341) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.09564722 seconds)
    (265/341) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.08950541 seconds)
    (266/341) benchmarking ("perf_countnothing", Float64, true)...
    done (took 2.021387367 seconds)
    (267/341) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.006271562 seconds)
    (268/341) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 3.57217034 seconds)
    (269/341) benchmarking ("collect", "filter", ComplexF64, true)...
    done (took 3.572717206 seconds)
    (270/341) benchmarking ("map", identity, Float32, true)...
    done (took 2.207616609 seconds)
    (271/341) benchmarking ("collect", "all", Float32, false)...
    done (took 2.106539385 seconds)
    (272/341) benchmarking ("sort", BigFloat, false)...
    done (took 7.012977461 seconds)
    (273/341) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.196113188 seconds)
    (274/341) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 7.007928019 seconds)
    (275/341) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 2.020619984 seconds)
    (276/341) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.118647433 seconds)
    (277/341) benchmarking ("map", identity, Bool, false)...
    done (took 2.088149194 seconds)
    (278/341) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.318535626 seconds)
    (279/341) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.035369688 seconds)
    (280/341) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.345446296 seconds)
    (281/341) benchmarking ("collect", "all", ComplexF64, true)...
    done (took 2.496573179 seconds)
    (282/341) benchmarking ("perf_sum4", Float32, false)...
    done (took 2.01949577 seconds)
    (283/341) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.438598971 seconds)
    (284/341) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.720404716 seconds)
    (285/341) benchmarking ("map", abs, BigInt, false)...
    done (took 7.014594289 seconds)
    (286/341) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 8.88651247 seconds)
    (287/341) benchmarking ("perf_sum", Float32, false)...
    done (took 2.092978235 seconds)
    (288/341) benchmarking ("collect", "filter", BigFloat, true)...
    done (took 3.012337455 seconds)
    (289/341) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 2.057034952 seconds)
    (290/341) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 7.008576055 seconds)
    (291/341) benchmarking ("perf_sum", Float64, false)...
    done (took 2.125470673 seconds)
    (292/341) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.214963376 seconds)
    (293/341) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.469719827 seconds)
    (294/341) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.433182621 seconds)
    (295/341) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.155143965 seconds)
    (296/341) benchmarking ("perf_sum4", Float64, true)...
    done (took 2.030730041 seconds)
    (297/341) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 2.087136746 seconds)
    (298/341) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.87741344 seconds)
    (299/341) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 7.014348134 seconds)
    (300/341) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.301928099 seconds)
    (301/341) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.615322578 seconds)
    (302/341) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.915219011 seconds)
    (303/341) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.14871686 seconds)
    (304/341) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 8.255559416 seconds)
    (305/341) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.202220423 seconds)
    (306/341) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.122461009 seconds)
    (307/341) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 7.009724382 seconds)
    (308/341) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.414710713 seconds)
    (309/341) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.012720799 seconds)
    (310/341) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 3.927862632 seconds)
    (311/341) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 7.012518719 seconds)
    (312/341) benchmarking ("collect", "all", BigFloat, true)...
    done (took 2.440579259 seconds)
    (313/341) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.820581581 seconds)
    (314/341) benchmarking ("collect", "all", BigInt, true)...
    done (took 2.386942874 seconds)
    (315/341) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 2.070534788 seconds)
    (316/341) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.400653033 seconds)
    (317/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.892495907 seconds)
    (318/341) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 7.009660157 seconds)
    (319/341) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.138326077 seconds)
    (320/341) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.010105274 seconds)
    (321/341) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 7.454002566 seconds)
    (322/341) benchmarking ("collect", "all", Float64, true)...
    done (took 2.295392445 seconds)
    (323/341) benchmarking ("sort", BigInt, false)...
    done (took 7.011043749 seconds)
    (324/341) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.323223074 seconds)
    (325/341) benchmarking ("map", identity, Int64, true)...
    done (took 2.294665994 seconds)
    (326/341) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 7.010766035 seconds)
    (327/341) benchmarking ("perf_countnothing", Float64, false)...
    done (took 3.553307809 seconds)
    (328/341) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.331768292 seconds)
    (329/341) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.337414854 seconds)
    (330/341) benchmarking ("perf_sum4", Float64, false)...
    done (took 2.035178129 seconds)
    (331/341) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.146850584 seconds)
    (332/341) benchmarking ("map", *, BigInt, (false, true))...
    done (took 8.240806452 seconds)
    (333/341) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.060846141 seconds)
    (334/341) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.314261538 seconds)
    (335/341) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 7.014627383 seconds)
    (336/341) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 2.09705005 seconds)
    (337/341) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.416304836 seconds)
    (338/341) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 7.011546782 seconds)
    (339/341) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.919385793 seconds)
    (340/341) benchmarking ("collect", "filter", ComplexF64, false)...
    done (took 3.228476139 seconds)
    (341/341) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.443305684 seconds)
  done (took 1140.042244827 seconds)
done (took 1142.077220841 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.033837384 seconds)
  (2/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 2.018506881 seconds)
  (3/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.503092962 seconds)
  (4/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 2.028645777 seconds)
  (5/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 2.018646072 seconds)
  (6/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 2.02279476 seconds)
  (7/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.514259297 seconds)
  (8/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 2.046877018 seconds)
  (9/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 2.035964351 seconds)
  (10/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.512465985 seconds)
  (11/152) benchmarking ("inner", "Int32", 4096)...
  done (took 2.029037116 seconds)
  (12/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 2.018256437 seconds)
  (13/152) benchmarking ("inner", "Int64", 4096)...
  done (took 2.035476859 seconds)
  (14/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 2.054106811 seconds)
  (15/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 2.029825857 seconds)
  (16/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 2.031055248 seconds)
  (17/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 2.026075865 seconds)
  (18/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 2.043823955 seconds)
  (19/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 2.054532157 seconds)
  (20/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 2.025143431 seconds)
  (21/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 2.065771171 seconds)
  (22/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 2.025713628 seconds)
  (23/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 2.019503074 seconds)
  (24/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 2.072211683 seconds)
  (25/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 2.020429629 seconds)
  (26/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 2.035167442 seconds)
  (27/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.034172391 seconds)
  (28/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 2.065894749 seconds)
  (29/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 2.06582907 seconds)
  (30/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 2.023202342 seconds)
  (31/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 2.025539052 seconds)
  (32/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.368995158 seconds)
  (33/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 2.067091648 seconds)
  (34/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 2.025054494 seconds)
  (35/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 2.03133099 seconds)
  (36/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 2.034967858 seconds)
  (37/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 2.026697553 seconds)
  (38/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 2.035309981 seconds)
  (39/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.033818417 seconds)
  (40/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 2.034525479 seconds)
  (41/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 2.019413488 seconds)
  (42/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 2.030875994 seconds)
  (43/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 2.025244041 seconds)
  (44/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 2.022890166 seconds)
  (45/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 2.020100702 seconds)
  (46/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 2.020687152 seconds)
  (47/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 2.022908622 seconds)
  (48/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.145942152 seconds)
  (49/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 2.035075799 seconds)
  (50/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.35286415 seconds)
  (51/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.071177387 seconds)
  (52/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.033985687 seconds)
  (53/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 2.067712076 seconds)
  (54/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 2.024365275 seconds)
  (55/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 2.022809521 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 2.024092458 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 2.067069327 seconds)
  (58/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 2.028390117 seconds)
  (59/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 2.02474505 seconds)
  (60/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.35302013 seconds)
  (61/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 2.10448585 seconds)
  (62/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 2.036229704 seconds)
  (63/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.352328152 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 2.080563961 seconds)
  (65/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 2.030854899 seconds)
  (66/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 2.029678461 seconds)
  (67/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 2.020184674 seconds)
  (68/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.034872806 seconds)
  (69/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.370866082 seconds)
  (70/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.549981483 seconds)
  (71/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 2.052464493 seconds)
  (72/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 2.042185976 seconds)
  (73/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 2.023327917 seconds)
  (74/152) benchmarking ("inner", "Float32", 4096)...
  done (took 2.02476092 seconds)
  (75/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 2.03641675 seconds)
  (76/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.512996928 seconds)
  (77/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 2.036457434 seconds)
  (78/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.581698329 seconds)
  (79/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 2.046749391 seconds)
  (80/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 2.03728651 seconds)
  (81/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 2.029173987 seconds)
  (82/152) benchmarking ("inner", "Int32", 4095)...
  done (took 2.025254079 seconds)
  (83/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 2.023330384 seconds)
  (84/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 2.039427757 seconds)
  (85/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.035820311 seconds)
  (86/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 2.022727745 seconds)
  (87/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 2.028230548 seconds)
  (88/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 2.031019559 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 2.036882971 seconds)
  (90/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.371893392 seconds)
  (91/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 2.063689619 seconds)
  (92/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.505915898 seconds)
  (93/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 2.029600592 seconds)
  (94/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.037406983 seconds)
  (95/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.035702819 seconds)
  (96/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.581671251 seconds)
  (97/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 2.050184378 seconds)
  (98/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.0357125 seconds)
  (99/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 2.027972909 seconds)
  (100/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.371394986 seconds)
  (101/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 2.061382454 seconds)
  (102/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.037423002 seconds)
  (103/152) benchmarking ("inner", "Float32", 4095)...
  done (took 2.025322126 seconds)
  (104/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 2.034573756 seconds)
  (105/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.138869319 seconds)
  (106/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.036253438 seconds)
  (107/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.038184797 seconds)
  (108/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 2.023494295 seconds)
  (109/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 2.045206923 seconds)
  (110/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 2.030964567 seconds)
  (111/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 2.024529074 seconds)
  (112/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 2.03838319 seconds)
  (113/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 2.043561134 seconds)
  (114/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 2.057653164 seconds)
  (115/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 2.040584708 seconds)
  (116/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 2.023747346 seconds)
  (117/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 2.033338145 seconds)
  (118/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 2.03066278 seconds)
  (119/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.036538254 seconds)
  (120/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 2.033204156 seconds)
  (121/152) benchmarking ("inner", "Float64", 4095)...
  done (took 2.031398948 seconds)
  (122/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 2.035220891 seconds)
  (123/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 2.023826188 seconds)
  (124/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 2.076299778 seconds)
  (125/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.03724944 seconds)
  (126/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 2.039635121 seconds)
  (127/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.139175753 seconds)
  (128/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 2.032109652 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.148689553 seconds)
  (130/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 2.03936916 seconds)
  (131/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 2.030869691 seconds)
  (132/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 2.023842624 seconds)
  (133/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.355250605 seconds)
  (134/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 2.064007163 seconds)
  (135/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 2.04729625 seconds)
  (136/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 2.032386463 seconds)
  (137/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 2.047953837 seconds)
  (138/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 2.047218389 seconds)
  (139/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 2.041398489 seconds)
  (140/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 2.028395033 seconds)
  (141/152) benchmarking ("inner", "Int64", 4095)...
  done (took 2.041457369 seconds)
  (142/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 2.028089109 seconds)
  (143/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 2.077270498 seconds)
  (144/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 2.025180346 seconds)
  (145/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 2.050137684 seconds)
  (146/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 2.076962443 seconds)
  (147/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 2.039509631 seconds)
  (148/152) benchmarking ("inner", "Float64", 4096)...
  done (took 2.031779574 seconds)
  (149/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.037452251 seconds)
  (150/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 2.060911227 seconds)
  (151/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 2.045819229 seconds)
  (152/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 2.029986535 seconds)
done (took 318.644059227 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.069293252 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 7.018848495 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.094388882 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 2.018429181 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.090942334 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.070719682 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 2.019140149 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 2.020201891 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 2.019209058 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.40431848 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 2.01917933 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 2.024761313 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 7.017789179 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 2.018933837 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.072558234 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 2.020115161 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 2.019615258 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.25289888 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 2.020371216 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.080023843 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 7.019919897 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 2.020537763 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 2.019673739 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.406784688 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 7.018264233 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 7.021050009 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.079574239 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 2.021386611 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.2615865 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 7.019556722 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 7.020686315 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.260887056 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.079493934 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 2.033586241 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 2.027581391 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 2.026853178 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.086634308 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 2.029649294 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.066539472 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.070687554 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.096226535 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 2.054371593 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 7.019601979 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 7.01999512 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 2.023710207 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 2.022601053 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 2.021344535 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 2.054563391 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 7.020471048 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 2.029821734 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.254233317 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 2.026176734 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 2.025293906 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 2.020534358 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 2.022073192 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 2.037490224 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 2.022275158 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 2.02228734 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.081487495 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 2.022704286 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.068058462 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.408971321 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.406582474 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 2.022318405 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 7.022460329 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 2.022306662 seconds)
  done (took 193.766093508 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.08827352 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.10792348 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.087921348 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 2.026040512 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 2.073021755 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.086626278 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 2.026928119 seconds)
  done (took 16.45311505 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 2.028871 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.022794732 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 2.045870524 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.045301285 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 2.022270763 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.164457812 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 2.034102143 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 2.027539146 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 2.048597825 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 2.025044786 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.370444126 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 2.046128563 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 2.027714334 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 7.022312584 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 2.033318393 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 2.051138651 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 2.025320954 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.024071949 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.121797081 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.100613785 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 2.029504831 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 2.030344734 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 2.053018152 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 2.036316944 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 2.023592886 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.024026705 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 2.023164735 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 2.031174341 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 2.022347155 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 2.022779706 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.023471079 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 2.037460918 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 2.023223307 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 7.022831807 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 2.024191676 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 2.024463698 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 2.024252343 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 2.023718609 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 2.023390063 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 7.024575626 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 2.026644683 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 2.024477163 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 2.024797743 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 2.023954061 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 2.023718026 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 2.049072229 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 2.024792428 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 2.025884022 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 2.025201991 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 2.025941233 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 2.05351148 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 2.025630109 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 2.02347246 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 2.030362372 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 2.071340235 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 2.034702685 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 2.026154053 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 2.024755743 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.025160854 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 2.024724425 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.024352675 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.102638038 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 2.049155498 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 2.024077453 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.048472105 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.06399661 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.025151351 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 2.025981052 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 2.025425172 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 2.04907768 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 2.02466763 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.04875392 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 2.025791841 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.132257755 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 2.025834135 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.171496363 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 2.04864148 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 2.028999487 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 2.029734815 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 7.025911288 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 2.032806264 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 2.026850514 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 2.02766018 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 2.033070948 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 2.030841622 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.025574329 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 2.026162345 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 2.026984228 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 2.033967127 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 2.026074799 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 2.075555973 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 2.026392653 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 2.026424692 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.130744217 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 2.026464835 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.124009592 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 2.052473926 seconds)
  done (took 220.162279336 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 2.031102303 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 2.02890255 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 2.040129433 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 2.030649402 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 2.026148698 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 2.032525721 seconds)
  done (took 14.150500241 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 2.029201438 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 2.030432198 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 2.027174305 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 2.027697327 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 2.027565239 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 2.029440371 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 2.028945499 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.029939098 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 2.030786065 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 2.026511268 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 2.028205826 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 2.030268101 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 2.027802658 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 2.028154193 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 2.028687002 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 2.027886641 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 2.028486451 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 2.02725503 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 2.027897226 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.028383498 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.275032226 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 2.028778749 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.030853315 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 2.033493577 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 2.033322131 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 2.027823215 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 2.03732538 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 2.028065627 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 2.027623789 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 2.034839612 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 2.031554829 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 2.02927548 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 2.032103883 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 2.033904515 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 2.030607862 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 2.031904986 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.030537858 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 2.030425901 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 2.028572321 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 2.0300177 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 2.030698482 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.029148215 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 2.028361682 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 2.031003148 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 2.030592076 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 2.036200578 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 2.03388084 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 2.037828739 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 2.029901333 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 2.031342187 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 2.030417297 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 2.028144794 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 2.03076157 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 2.030577184 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 2.033987533 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.036248123 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 2.035449873 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 2.028768315 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 2.030220786 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 2.033952089 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 2.032582512 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 2.031657561 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.031168645 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 2.03328333 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 2.037301072 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 2.031237339 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 2.034652807 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.03261322 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.030224912 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 2.03155522 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 2.032031899 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 2.030056305 seconds)
  done (took 149.42500141 seconds)
done (took 595.908067051 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.10140953 seconds)
  done (took 9.065072429 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.185641295 seconds)
  done (took 9.246441817 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 10.07325442 seconds)
  done (took 12.040794515 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 7.041944104 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 7.045421823 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 7.035705239 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 7.038306988 seconds)
  done (took 30.139292204 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.349330954 seconds)
  done (took 9.314829965 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 7.040312559 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 7.028816973 seconds)
  done (took 16.106287828 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.146000555 seconds)
  done (took 9.111677722 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.081087674 seconds)
  done (took 9.065179012 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 7.050879453 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 7.063001809 seconds)
  done (took 16.098282913 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 7.032253582 seconds)
  done (took 8.997651928 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.84203379 seconds)
  done (took 9.899019035 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 7.045808248 seconds)
  done (took 9.030550621 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 7.068803784 seconds)
  done (took 9.034670383 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.815700876 seconds)
  done (took 9.781312475 seconds)
done (took 168.891906876 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 7.036467795 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 7.035463165 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 7.035829167 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 7.033911948 seconds)
  done (took 30.107148037 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 2.067250905 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 2.067302799 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 2.075093099 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 2.066089195 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 2.056627044 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 2.058231961 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 2.067866506 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 2.070042508 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 2.05812978 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 2.064531319 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 2.066591532 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 2.06678641 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 2.066675302 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 2.077643274 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 2.076357431 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 2.065626585 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 2.068386636 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 2.069739916 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 2.058531999 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 2.077825873 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 2.065270732 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 2.06928575 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 2.03385246 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 2.03245347 seconds)
  done (took 51.51112906 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.222828361 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.099935347 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.187052438 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.079545074 seconds)
  done (took 10.554842171 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 2.034008988 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 2.096348809 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 2.085081592 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 2.079448339 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.084096414 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.136187427 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 2.085063848 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.169049021 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.161070963 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.161698934 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 2.038251551 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 2.053787715 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 2.057024334 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 2.080907668 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.135224107 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 2.033485688 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 2.033388391 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.151023135 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 2.096537871 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.208230169 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 2.037127348 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 2.090305313 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.084607682 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 2.087447466 seconds)
  done (took 52.245830403 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 2.036047425 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 2.043324372 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 2.040819462 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 2.035199109 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 2.035752285 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 2.035531663 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 2.040847554 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 2.035914986 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 2.058522043 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 2.037146965 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 2.034483267 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 2.035419281 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 2.043130883 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 2.034794127 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 2.037310851 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 2.0486452 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 2.049774275 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 2.036085643 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 2.039855252 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 2.043144682 seconds)
  done (took 42.769732988 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 7.036266587 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.882457441 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.380462588 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.285537598 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 7.03830955 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 7.038142741 seconds)
  done (took 32.629726818 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 2.047266522 seconds)
    (2/12) benchmarking ("push_single!", 256)...
    done (took 2.050102239 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 2.041394961 seconds)
    (4/12) benchmarking ("push_multiple!", 256)...
    done (took 2.059943318 seconds)
    (5/12) benchmarking ("push_single!", 2048)...
    done (took 2.08002123 seconds)
    (6/12) benchmarking ("push_single!", 8)...
    done (took 2.047593816 seconds)
    (7/12) benchmarking ("prerend!", 2048)...
    done (took 2.093626909 seconds)
    (8/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.201637055 seconds)
    (9/12) benchmarking ("push_multiple!", 8)...
    done (took 2.045063139 seconds)
    (10/12) benchmarking ("append!", 2048)...
    done (took 2.093389073 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 2.054611042 seconds)
    (12/12) benchmarking ("prerend!", 8)...
    done (took 2.04020851 seconds)
  done (took 26.824150547 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 7.034232333 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 7.038832342 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 7.039297922 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 2.050949598 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 2.046828071 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 2.043455479 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 2.044672523 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 7.036404116 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 2.050987962 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 2.053754328 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 2.043671874 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 2.049512959 seconds)
  done (took 46.502451346 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.252052549 seconds)
    (2/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.260465687 seconds)
    (3/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.257718131 seconds)
    (4/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.522254261 seconds)
    (5/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.35823841 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.022156447 seconds)
    (7/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.320580825 seconds)
    (8/608) benchmarking ("sumelt", "BitMatrix")...
    done (took 5.249632197 seconds)
    (9/608) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.718413654 seconds)
    (10/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.742978426 seconds)
    (11/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.33567294 seconds)
    (12/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.020090462 seconds)
    (13/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.984536601 seconds)
    (14/608) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.962614684 seconds)
    (15/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.934424374 seconds)
    (16/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.279965421 seconds)
    (17/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.038925637 seconds)
    (18/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.895078643 seconds)
    (19/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.294657273 seconds)
    (20/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 7.090425994 seconds)
    (21/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.040854167 seconds)
    (22/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 2.038571268 seconds)
    (23/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.039390046 seconds)
    (24/608) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.32393989 seconds)
    (25/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.36647646 seconds)
    (26/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.045596773 seconds)
    (27/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.249887143 seconds)
    (28/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.053602609 seconds)
    (29/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 7.037105793 seconds)
    (30/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.263325286 seconds)
    (31/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.556586923 seconds)
    (32/608) benchmarking ("sumvector_view", "Matrix{Int64}")...
    done (took 2.089294934 seconds)
    (33/608) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.240940097 seconds)
    (34/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.300724557 seconds)
    (35/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.379820234 seconds)
    (36/608) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 7.10095042 seconds)
    (37/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 7.143569024 seconds)
    (38/608) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.081166642 seconds)
    (39/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.081818577 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.073276584 seconds)
    (41/608) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.047181569 seconds)
    (42/608) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 2.04799334 seconds)
    (43/608) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.573261106 seconds)
    (44/608) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 2.049559116 seconds)
    (45/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.310967163 seconds)
    (46/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.040326904 seconds)
    (47/608) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 7.042821507 seconds)
    (48/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.151801803 seconds)
    (49/608) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.964873332 seconds)
    (50/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 4.327796877 seconds)
    (51/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.156828504 seconds)
    (52/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.037966101 seconds)
    (53/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.07367643 seconds)
    (54/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.471054671 seconds)
    (55/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.158706616 seconds)
    (56/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.281350778 seconds)
    (57/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.042728943 seconds)
    (58/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.086737699 seconds)
    (59/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.095764427 seconds)
    (60/608) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.259072905 seconds)
    (61/608) benchmarking ("sumlinear_view", "Matrix{Float64}")...
    done (took 7.154967578 seconds)
    (62/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.141354043 seconds)
    (63/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.251023601 seconds)
    (64/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.965776192 seconds)
    (65/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.410614263 seconds)
    (66/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.166433837 seconds)
    (67/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 2.041398336 seconds)
    (68/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.044391491 seconds)
    (69/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.738469443 seconds)
    (70/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.282410292 seconds)
    (71/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.120072294 seconds)
    (72/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.33607185 seconds)
    (73/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.803086091 seconds)
    (74/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 2.040365046 seconds)
    (75/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.042095201 seconds)
    (76/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 5.08224295 seconds)
    (77/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.128585179 seconds)
    (78/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 7.039300644 seconds)
    (79/608) benchmarking ("mapr_access", "Matrix{Int64}")...
    done (took 3.336956984 seconds)
    (80/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.014794052 seconds)
    (81/608) benchmarking ("sumcartesian", "Matrix{Float64}")...
    done (took 3.965331817 seconds)
    (82/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.139765011 seconds)
    (83/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.435509838 seconds)
    (84/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.044505422 seconds)
    (85/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 7.038435259 seconds)
    (86/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.045957174 seconds)
    (87/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.886130021 seconds)
    (88/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.968393041 seconds)
    (89/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.136097156 seconds)
    (90/608) benchmarking ("sumlogical_view", "Matrix{Int64}")...
    done (took 4.260653453 seconds)
    (91/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.365818493 seconds)
    (92/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 2.041031501 seconds)
    (93/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.040373803 seconds)
    (94/608) benchmarking ("sum", "3dsubarray")...
    done (took 2.062205808 seconds)
    (95/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.045501688 seconds)
    (96/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.984831871 seconds)
    (97/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.481406787 seconds)
    (98/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.103126354 seconds)
    (99/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.966791247 seconds)
    (100/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.605268567 seconds)
    (101/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.531875853 seconds)
    (102/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.006793328 seconds)
    (103/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.408808664 seconds)
    (104/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.084217 seconds)
    (105/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.324803906 seconds)
    (106/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.202355506 seconds)
    (107/608) benchmarking ("sumcartesian", "Matrix{Int64}")...
    done (took 2.448364073 seconds)
    (108/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.249323919 seconds)
    (109/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.284691737 seconds)
    (110/608) benchmarking "5d"...
    done (took 3.624100563 seconds)
    (111/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.045328245 seconds)
    (112/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.599228763 seconds)
    (113/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.123667551 seconds)
    (114/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.117773833 seconds)
    (115/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.041492068 seconds)
    (116/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.601715583 seconds)
    (117/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.096999336 seconds)
    (118/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.307187518 seconds)
    (119/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.160061219 seconds)
    (120/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.041601583 seconds)
    (121/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.967119677 seconds)
    (122/608) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 2.05325903 seconds)
    (123/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.244169835 seconds)
    (124/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.528616057 seconds)
    (125/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.095212466 seconds)
    (126/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.043827575 seconds)
    (127/608) benchmarking ("sumrange_view", "Matrix{Float64}")...
    done (took 2.046227584 seconds)
    (128/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 7.041612983 seconds)
    (129/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.045962538 seconds)
    (130/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.152920077 seconds)
    (131/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.057628115 seconds)
    (132/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.34110484 seconds)
    (133/608) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 2.11972327 seconds)
    (134/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 2.043970898 seconds)
    (135/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.978444779 seconds)
    (136/608) benchmarking ("sumcolon_view", "Matrix{Float64}")...
    done (took 2.047322145 seconds)
    (137/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.32956763 seconds)
    (138/608) benchmarking ("sumrange", "Matrix{Float64}")...
    done (took 6.503462195 seconds)
    (139/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.100845552 seconds)
    (140/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.303751279 seconds)
    (141/608) benchmarking ("sumeach", "BitMatrix")...
    done (took 5.311926636 seconds)
    (142/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.741697141 seconds)
    (143/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.638946863 seconds)
    (144/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.987332343 seconds)
    (145/608) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.3171752 seconds)
    (146/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.117510555 seconds)
    (147/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.117363303 seconds)
    (148/608) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.627918504 seconds)
    (149/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.183177989 seconds)
    (150/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.138883117 seconds)
    (151/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.042289637 seconds)
    (152/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.178862686 seconds)
    (153/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 7.046771863 seconds)
    (154/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.046331089 seconds)
    (155/608) benchmarking ("sumcolon", "Matrix{Int64}")...
    done (took 6.228422857 seconds)
    (156/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.459732569 seconds)
    (157/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.468027434 seconds)
    (158/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.086507519 seconds)
    (159/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 7.045050923 seconds)
    (160/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 3.99848861 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.095456801 seconds)
    (162/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.283292018 seconds)
    (163/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.112148041 seconds)
    (164/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.075611185 seconds)
    (165/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.048608392 seconds)
    (166/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.127634701 seconds)
    (167/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.270334595 seconds)
    (168/608) benchmarking "ind2sub"...
    done (took 7.043068785 seconds)
    (169/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.970323066 seconds)
    (170/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.295869934 seconds)
    (171/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.293851347 seconds)
    (172/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.346515474 seconds)
    (173/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.464688114 seconds)
    (174/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.104385565 seconds)
    (175/608) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.120538195 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.058607335 seconds)
    (177/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.259109832 seconds)
    (178/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.127464425 seconds)
    (179/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.688922197 seconds)
    (180/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.592679029 seconds)
    (181/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.273431233 seconds)
    (182/608) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.504601595 seconds)
    (183/608) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.007051028 seconds)
    (184/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.687324523 seconds)
    (185/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.277944382 seconds)
    (186/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.43211096 seconds)
    (187/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.062009169 seconds)
    (188/608) benchmarking ("sumcartesian_view", "Matrix{Float64}")...
    done (took 2.50145806 seconds)
    (189/608) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.077097315 seconds)
    (190/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.602238758 seconds)
    (191/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.073865365 seconds)
    (192/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.57437818 seconds)
    (193/608) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.975671189 seconds)
    (194/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.052004429 seconds)
    (195/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.388790407 seconds)
    (196/608) benchmarking ("sumelt_boundscheck", "Matrix{Float64}")...
    done (took 4.007360184 seconds)
    (197/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 2.365589683 seconds)
    (198/608) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 7.144349876 seconds)
    (199/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.064274374 seconds)
    (200/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 2.049498714 seconds)
    (201/608) benchmarking ("sumelt", "1:100000")...
    done (took 2.04971086 seconds)
    (202/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.056242846 seconds)
    (203/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.965505328 seconds)
    (204/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.158366133 seconds)
    (205/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.117490511 seconds)
    (206/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.120784188 seconds)
    (207/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.975871416 seconds)
    (208/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 5.576667085 seconds)
    (209/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 2.084872651 seconds)
    (210/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 2.051311785 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 7.048667994 seconds)
    (212/608) benchmarking ("sumlogical", "Matrix{Float64}")...
    done (took 4.3714596 seconds)
    (213/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.846051748 seconds)
    (214/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.007735086 seconds)
    (215/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.050003032 seconds)
    (216/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.127337763 seconds)
    (217/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 4.800803433 seconds)
    (218/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.596094996 seconds)
    (219/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 2.052447187 seconds)
    (220/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.051624427 seconds)
    (221/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.641690063 seconds)
    (222/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.054771275 seconds)
    (223/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.63834076 seconds)
    (224/608) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 7.184268201 seconds)
    (225/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.805288245 seconds)
    (226/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.077981546 seconds)
    (227/608) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.279243599 seconds)
    (228/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.752675777 seconds)
    (229/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.338176154 seconds)
    (230/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.126088236 seconds)
    (231/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.127555766 seconds)
    (232/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 7.053167855 seconds)
    (233/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.057997441 seconds)
    (234/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.750891868 seconds)
    (235/608) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.059013322 seconds)
    (236/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.752834594 seconds)
    (237/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.343649355 seconds)
    (238/608) benchmarking ("sumlinear", "BitMatrix")...
    done (took 5.328604123 seconds)
    (239/608) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.496265829 seconds)
    (240/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.121237249 seconds)
    (241/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.259864367 seconds)
    (242/608) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 2.063529062 seconds)
    (243/608) benchmarking ("sumeach", "1:100000")...
    done (took 2.051603419 seconds)
    (244/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.563298412 seconds)
    (245/608) benchmarking ("sumvector", "1:100000")...
    done (took 2.08179024 seconds)
    (246/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.053173994 seconds)
    (247/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.254401314 seconds)
    (248/608) benchmarking ("sumlogical", "1:100000")...
    done (took 2.565210784 seconds)
    (249/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.350918597 seconds)
    (250/608) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.697908863 seconds)
    (251/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.13660759 seconds)
    (252/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 7.053362523 seconds)
    (253/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.326424739 seconds)
    (254/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.059657422 seconds)
    (255/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.533831406 seconds)
    (256/608) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 2.75449442 seconds)
    (257/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.062809469 seconds)
    (258/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 7.053202917 seconds)
    (259/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.325448171 seconds)
    (260/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.735526795 seconds)
    (261/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.053417625 seconds)
    (262/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.964156316 seconds)
    (263/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.057859776 seconds)
    (264/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.265765253 seconds)
    (265/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.254139312 seconds)
    (266/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.330573001 seconds)
    (267/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.355298175 seconds)
    (268/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.502407289 seconds)
    (269/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.979097764 seconds)
    (270/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.057381851 seconds)
    (271/608) benchmarking "4d"...
    done (took 3.091415404 seconds)
    (272/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.296041739 seconds)
    (273/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.052220517 seconds)
    (274/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.085078138 seconds)
    (275/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.494816309 seconds)
    (276/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.125887588 seconds)
    (277/608) benchmarking ("sumcartesian_view", "Matrix{Int64}")...
    done (took 2.481260923 seconds)
    (278/608) benchmarking ("sumvector", "Matrix{Float64}")...
    done (took 2.343596493 seconds)
    (279/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.417703592 seconds)
    (280/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.690727117 seconds)
    (281/608) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.320872107 seconds)
    (282/608) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 2.123228701 seconds)
    (283/608) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 2.063058577 seconds)
    (284/608) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 2.723782046 seconds)
    (285/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.185447692 seconds)
    (286/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.985237954 seconds)
    (287/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.171137988 seconds)
    (288/608) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.97875085 seconds)
    (289/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.735082196 seconds)
    (290/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.349030617 seconds)
    (291/608) benchmarking ("sumvector_view", "Matrix{Float64}")...
    done (took 2.071992693 seconds)
    (292/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.32727728 seconds)
    (293/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.036936799 seconds)
    (294/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.400486231 seconds)
    (295/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.355218217 seconds)
    (296/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.27597041 seconds)
    (297/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.104140223 seconds)
    (298/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.081475452 seconds)
    (299/608) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 7.054230161 seconds)
    (300/608) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.105993478 seconds)
    (301/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 7.054860902 seconds)
    (302/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.121153357 seconds)
    (303/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.166321467 seconds)
    (304/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.063867826 seconds)
    (305/608) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.477823525 seconds)
    (306/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.089803911 seconds)
    (307/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.100384832 seconds)
    (308/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.061150757 seconds)
    (309/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.541231214 seconds)
    (310/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.077877513 seconds)
    (311/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.056895691 seconds)
    (312/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.749578807 seconds)
    (313/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.078810345 seconds)
    (314/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.173555209 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.127281612 seconds)
    (316/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.809343764 seconds)
    (317/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.582088609 seconds)
    (318/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 7.078899105 seconds)
    (319/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.935175243 seconds)
    (320/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.702209435 seconds)
    (321/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.331414484 seconds)
    (322/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.111973172 seconds)
    (323/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.519329322 seconds)
    (324/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.098887698 seconds)
    (325/608) benchmarking ("sumlinear", "Matrix{Int64}")...
    done (took 2.461485251 seconds)
    (326/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 7.055967305 seconds)
    (327/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.269288458 seconds)
    (328/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.059156744 seconds)
    (329/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.520295091 seconds)
    (330/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.098957791 seconds)
    (331/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.333058204 seconds)
    (332/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.018226584 seconds)
    (333/608) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.267737283 seconds)
    (334/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.25745001 seconds)
    (335/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.062960009 seconds)
    (336/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.061006115 seconds)
    (337/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.982560445 seconds)
    (338/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.165148042 seconds)
    (339/608) benchmarking ("sumcolon", "1:100000")...
    done (took 2.925507497 seconds)
    (340/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.039533408 seconds)
    (341/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.058384292 seconds)
    (342/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.73841198 seconds)
    (343/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.460416722 seconds)
    (344/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.141540991 seconds)
    (345/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.487214469 seconds)
    (346/608) benchmarking "3d"...
    done (took 2.88053567 seconds)
    (347/608) benchmarking ("sum", "3darray")...
    done (took 2.057985945 seconds)
    (348/608) benchmarking ("sumlogical", "Matrix{Int64}")...
    done (took 4.400076217 seconds)
    (349/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.464768733 seconds)
    (350/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.567720673 seconds)
    (351/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.08647862 seconds)
    (352/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.060377214 seconds)
    (353/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.363667917 seconds)
    (354/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 2.194856277 seconds)
    (355/608) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.344093641 seconds)
    (356/608) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.354312335 seconds)
    (357/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.063991471 seconds)
    (358/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 2.084456245 seconds)
    (359/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.269062214 seconds)
    (360/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.182848168 seconds)
    (361/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.979977094 seconds)
    (362/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.534140119 seconds)
    (363/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.643114098 seconds)
    (364/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.758108888 seconds)
    (365/608) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 2.069921109 seconds)
    (366/608) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.258255836 seconds)
    (367/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.355921885 seconds)
    (368/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.225707197 seconds)
    (369/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.088713807 seconds)
    (370/608) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.136231834 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Matrix{Int64}")...
    done (took 2.462176519 seconds)
    (372/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.332280977 seconds)
    (373/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.131111532 seconds)
    (374/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.983242104 seconds)
    (375/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.057739296 seconds)
    (376/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.457383664 seconds)
    (377/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.455843932 seconds)
    (378/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.153742013 seconds)
    (379/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.299087885 seconds)
    (380/608) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.377765664 seconds)
    (381/608) benchmarking ("sumrange", "Matrix{Int64}")...
    done (took 6.492100338 seconds)
    (382/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.555285736 seconds)
    (383/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.389024743 seconds)
    (384/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.477359614 seconds)
    (385/608) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.476545063 seconds)
    (386/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.452036272 seconds)
    (387/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.278736009 seconds)
    (388/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.434759167 seconds)
    (389/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.39104568 seconds)
    (390/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.942577605 seconds)
    (391/608) benchmarking ("sumelt", "Matrix{Int64}")...
    done (took 2.471466947 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.26993017 seconds)
    (393/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.147057433 seconds)
    (394/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.342404452 seconds)
    (395/608) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.934601711 seconds)
    (396/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.767877521 seconds)
    (397/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.302542206 seconds)
    (398/608) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 2.064414797 seconds)
    (399/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.990259793 seconds)
    (400/608) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.26622089 seconds)
    (401/608) benchmarking ("sumeach_view", "Matrix{Float64}")...
    done (took 7.070448597 seconds)
    (402/608) benchmarking ("sumcolon", "Matrix{Float64}")...
    done (took 6.347102149 seconds)
    (403/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.58667879 seconds)
    (404/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.30602184 seconds)
    (405/608) benchmarking ("sumlogical_view", "Matrix{Float64}")...
    done (took 4.292955094 seconds)
    (406/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.539185019 seconds)
    (407/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.597371458 seconds)
    (408/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.123395071 seconds)
    (409/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.082101656 seconds)
    (410/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 4.027246108 seconds)
    (411/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.083612794 seconds)
    (412/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.079721663 seconds)
    (413/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 7.059647481 seconds)
    (414/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.536874861 seconds)
    (415/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.35187772 seconds)
    (416/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.073401513 seconds)
    (417/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.003011722 seconds)
    (418/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.731680769 seconds)
    (419/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.987214318 seconds)
    (420/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.27588802 seconds)
    (421/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.120266806 seconds)
    (422/608) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 2.094925378 seconds)
    (423/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.617810184 seconds)
    (424/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.293676174 seconds)
    (425/608) benchmarking ("sumcolon_view", "Matrix{Int64}")...
    done (took 2.171316507 seconds)
    (426/608) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.362799082 seconds)
    (427/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.181346302 seconds)
    (428/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.091658172 seconds)
    (429/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.985871863 seconds)
    (430/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.775655402 seconds)
    (431/608) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 4.008535464 seconds)
    (432/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.122028215 seconds)
    (433/608) benchmarking ("sumeach", "Matrix{Int64}")...
    done (took 2.486758123 seconds)
    (434/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.078440219 seconds)
    (435/608) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 2.063615735 seconds)
    (436/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.264596443 seconds)
    (437/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.988508246 seconds)
    (438/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.106446877 seconds)
    (439/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.067118325 seconds)
    (440/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.267708849 seconds)
    (441/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.648460378 seconds)
    (442/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.339117031 seconds)
    (443/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.191017063 seconds)
    (444/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.312973366 seconds)
    (445/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.370446253 seconds)
    (446/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.920318157 seconds)
    (447/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.096442896 seconds)
    (448/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.332105324 seconds)
    (449/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.985689398 seconds)
    (450/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.589990434 seconds)
    (451/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.76447674 seconds)
    (452/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 2.100802731 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.13293051 seconds)
    (454/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.06277353 seconds)
    (455/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.06609466 seconds)
    (456/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.334306259 seconds)
    (457/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.36671869 seconds)
    (458/608) benchmarking ("sumeach_view", "Matrix{Int64}")...
    done (took 7.167158196 seconds)
    (459/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.661389152 seconds)
    (460/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.092993092 seconds)
    (461/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.086540202 seconds)
    (462/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.355975701 seconds)
    (463/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.164511079 seconds)
    (464/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.06510772 seconds)
    (465/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.068870193 seconds)
    (466/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.434620967 seconds)
    (467/608) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.291897518 seconds)
    (468/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 7.061840482 seconds)
    (469/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.057473151 seconds)
    (470/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.2735777 seconds)
    (471/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.144920541 seconds)
    (472/608) benchmarking "sub2ind"...
    done (took 7.262474024 seconds)
    (473/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.139223232 seconds)
    (474/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.576083676 seconds)
    (475/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.067956115 seconds)
    (476/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.920584881 seconds)
    (477/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.173102739 seconds)
    (478/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.012126652 seconds)
    (479/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.062880286 seconds)
    (480/608) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.832500599 seconds)
    (481/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.125572575 seconds)
    (482/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 7.063980887 seconds)
    (483/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.341295681 seconds)
    (484/608) benchmarking "6d"...
    done (took 3.722255054 seconds)
    (485/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.266316156 seconds)
    (486/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.458213281 seconds)
    (487/608) benchmarking ("sumrange", "1:100000")...
    done (took 2.929070849 seconds)
    (488/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.133453831 seconds)
    (489/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.101901681 seconds)
    (490/608) benchmarking ("sumrange_view", "Matrix{Int64}")...
    done (took 2.064919589 seconds)
    (491/608) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 7.065765114 seconds)
    (492/608) benchmarking ("sumvector", "Matrix{Int64}")...
    done (took 2.460554641 seconds)
    (493/608) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.37021943 seconds)
    (494/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 7.060793656 seconds)
    (495/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.337050504 seconds)
    (496/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.118011382 seconds)
    (497/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.067586384 seconds)
    (498/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 2.72442572 seconds)
    (499/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.03107139 seconds)
    (500/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 7.059439154 seconds)
    (501/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.742170229 seconds)
    (502/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.951704882 seconds)
    (503/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.79473757 seconds)
    (504/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.454937915 seconds)
    (505/608) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 7.147944957 seconds)
    (506/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.066789284 seconds)
    (507/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.065404332 seconds)
    (508/608) benchmarking ("sumelt", "Matrix{Float64}")...
    done (took 3.990165291 seconds)
    (509/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 7.122467302 seconds)
    (510/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 5.197182923 seconds)
    (511/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.065031266 seconds)
    (512/608) benchmarking ("sumlinear_view", "Matrix{Int64}")...
    done (took 7.071958927 seconds)
    (513/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.431410987 seconds)
    (514/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.347712744 seconds)
    (515/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.162111096 seconds)
    (516/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.066928421 seconds)
    (517/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 2.066394276 seconds)
    (518/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.071284713 seconds)
    (519/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.275811209 seconds)
    (520/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.580296655 seconds)
    (521/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.080898394 seconds)
    (522/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.765470946 seconds)
    (523/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.264284677 seconds)
    (524/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.071197959 seconds)
    (525/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.540203668 seconds)
    (526/608) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.505471218 seconds)
    (527/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.200109058 seconds)
    (528/608) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 2.104956085 seconds)
    (529/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.135543798 seconds)
    (530/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.308587331 seconds)
    (531/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.608025371 seconds)
    (532/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.131362774 seconds)
    (533/608) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.041975837 seconds)
    (534/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.291414152 seconds)
    (535/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.064736034 seconds)
    (536/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.339263435 seconds)
    (537/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.339811092 seconds)
    (538/608) benchmarking ("sumlinear", "1:100000")...
    done (took 2.066604487 seconds)
    (539/608) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 2.277370057 seconds)
    (540/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.563871062 seconds)
    (541/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.351842417 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.419561028 seconds)
    (543/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.384450779 seconds)
    (544/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.131970743 seconds)
    (545/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 5.138172846 seconds)
    (546/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.962351308 seconds)
    (547/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 7.062207362 seconds)
    (548/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.071338214 seconds)
    (549/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.331767035 seconds)
    (550/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.125586888 seconds)
    (551/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.063991143 seconds)
    (552/608) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.074191506 seconds)
    (553/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.619936092 seconds)
    (554/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.738939327 seconds)
    (555/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.541105926 seconds)
    (556/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.224528108 seconds)
    (557/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.34638246 seconds)
    (558/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.896139639 seconds)
    (559/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.821970384 seconds)
    (560/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 2.068467123 seconds)
    (561/608) benchmarking ("sumeach", "Matrix{Float64}")...
    done (took 3.99249179 seconds)
    (562/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 7.064273419 seconds)
    (563/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.08827846 seconds)
    (564/608) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 2.071248026 seconds)
    (565/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.994856787 seconds)
    (566/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.803702308 seconds)
    (567/608) benchmarking "2d"...
    done (took 2.792069204 seconds)
    (568/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.278892063 seconds)
    (569/608) benchmarking "7d"...
    done (took 2.375133935 seconds)
    (570/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.990974025 seconds)
    (571/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.266699854 seconds)
    (572/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.66620193 seconds)
    (573/608) benchmarking ("sumlinear", "Matrix{Float64}")...
    done (took 3.991140691 seconds)
    (574/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.030709346 seconds)
    (575/608) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 7.062969162 seconds)
    (576/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.327110472 seconds)
    (577/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.99128152 seconds)
    (578/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.066118556 seconds)
    (579/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.021370539 seconds)
    (580/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.308348062 seconds)
    (581/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.863479467 seconds)
    (582/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.333299153 seconds)
    (583/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 7.069191856 seconds)
    (584/608) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.010974805 seconds)
    (585/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.071863563 seconds)
    (586/608) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 7.070268458 seconds)
    (587/608) benchmarking ("mapr_access", "BitMatrix")...
    done (took 7.065991683 seconds)
    (588/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.152548528 seconds)
    (589/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 2.067726409 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.180648641 seconds)
    (591/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.331494628 seconds)
    (592/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.41178044 seconds)
    (593/608) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 2.173641602 seconds)
    (594/608) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.706574118 seconds)
    (595/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.746755125 seconds)
    (596/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.005612124 seconds)
    (597/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.11155399 seconds)
    (598/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.681429303 seconds)
    (599/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.638208188 seconds)
    (600/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.308165764 seconds)
    (601/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.197476054 seconds)
    (602/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.78109937 seconds)
    (603/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.011975443 seconds)
    (604/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.069090372 seconds)
    (605/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.082682317 seconds)
    (606/608) benchmarking ("mapr_access", "Matrix{Float64}")...
    done (took 3.327526884 seconds)
    (607/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.070052329 seconds)
    (608/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.069724727 seconds)
  done (took 2186.171456992 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 7.109947823 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 7.087350637 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 7.145264434 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.085456002 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.160815779 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.119235136 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.115556304 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 7.151563712 seconds)
  done (took 58.971414443 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hcat", 500)...
    done (took 7.067262442 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.583031338 seconds)
    (3/17) benchmarking ("vcat_setind", 5)...
    done (took 2.189397961 seconds)
    (4/17) benchmarking ("catnd_setind", 500)...
    done (took 7.069606305 seconds)
    (5/17) benchmarking ("vcat", 500)...
    done (took 7.06424062 seconds)
    (6/17) benchmarking ("vcat", 5)...
    done (took 2.069047204 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.252977613 seconds)
    (8/17) benchmarking ("hvcat_setind", 5)...
    done (took 2.093578913 seconds)
    (9/17) benchmarking ("vcat_setind", 500)...
    done (took 7.068222899 seconds)
    (10/17) benchmarking ("hvcat", 5)...
    done (took 2.069944527 seconds)
    (11/17) benchmarking ("hcat_setind", 500)...
    done (took 7.056251176 seconds)
    (12/17) benchmarking ("hcat", 5)...
    done (took 2.071099804 seconds)
    (13/17) benchmarking ("hvcat", 500)...
    done (took 7.070699196 seconds)
    (14/17) benchmarking ("catnd", 500)...
    done (took 7.076025305 seconds)
    (15/17) benchmarking ("hcat_setind", 5)...
    done (took 2.084143852 seconds)
    (16/17) benchmarking ("catnd", 5)...
    done (took 2.354331256 seconds)
    (17/17) benchmarking ("hvcat_setind", 500)...
    done (took 7.089338929 seconds)
  done (took 78.334184202 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.123552479 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.942646743 seconds)
    (3/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 7.072198909 seconds)
    (4/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 9.84809304 seconds)
    (5/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.091011831 seconds)
    (6/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.362106883 seconds)
    (7/12) benchmarking ("gramschmidt!", 100)...
    done (took 7.06896233 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 7.073921257 seconds)
    (9/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.386627274 seconds)
    (10/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.360449683 seconds)
    (11/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.130355418 seconds)
    (12/12) benchmarking ("gramschmidt!", 250)...
    done (took 7.078427262 seconds)
  done (took 94.569573527 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 4)...
    done (took 2.07033354 seconds)
    (2/5) benchmarking ("setindex!", 3)...
    done (took 2.070799239 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 2.073886998 seconds)
    (4/5) benchmarking ("setindex!", 1)...
    done (took 2.069037272 seconds)
    (5/5) benchmarking ("setindex!", 2)...
    done (took 2.07126701 seconds)
  done (took 12.354137254 seconds)
done (took 2725.570494803 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 2.32008135 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 2.164396262 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 2.142010758 seconds)
  done (took 6.303265103 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.214292004 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.264597159 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.372700835 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.380787361 seconds)
  done (took 11.234046099 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.352307578 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.452731867 seconds)
  done (took 6.802017111 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 2.423035077 seconds)
  (6/15) benchmarking "18129"...
  done (took 7.077708027 seconds)
  (7/15) benchmarking "20517"...
  done (took 2.460394495 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 7.072957091 seconds)
    (2/3) benchmarking "Float64"...
    done (took 7.074241183 seconds)
    (3/3) benchmarking "Float16"...
    done (took 7.074928938 seconds)
  done (took 23.228405424 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 2.072869242 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 2.070699523 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 2.070045781 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 2.071017821 seconds)
  done (took 10.28410736 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 7.071583997 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.845596258 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 7.073692358 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.086726183 seconds)
  done (took 22.076270009 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 2.278145672 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 3.110576341 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 2.835648409 seconds)
  done (took 10.223735762 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.696577539 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.515635729 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.688160217 seconds)
  done (took 9.899096861 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 3.214980656 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.907949068 seconds)
  done (took 8.124573172 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.216817329 seconds)
  done (took 4.215121022 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.901955532 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.385505886 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.545155669 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.594862559 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.641831631 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.292288238 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.372539544 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.344089579 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.476343946 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.46124464 seconds)
  done (took 27.017268538 seconds)
done (took 155.685481194 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.493328623 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.087996432 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.278157983 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.437535616 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.30287272 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.277765588 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.375104608 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.428011026 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.107550025 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.094297062 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.439738714 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.307533543 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.318161577 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.085013345 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.322824433 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.082641439 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.271973296 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.509457192 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.120028288 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.333538509 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.378357853 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.085585108 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.278283203 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.098969098 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.308768567 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.226163471 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.687318874 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.090186592 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.273913797 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.695568714 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.229711304 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.479069917 seconds)
  done (took 175.507894605 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.935226199 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.072189701 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.072781209 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.07330729 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.530246817 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.07036685 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.073931574 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.072636965 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.27425772 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.246678283 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.073058871 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.519000264 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.078842531 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.073811784 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.075793479 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.072691651 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.387976881 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.970047236 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.075653856 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.07323748 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.075157373 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.387199924 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.075069422 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.391140988 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.359799119 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.072941646 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.074731596 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.074305404 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.07616308 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.075376367 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.074560344 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.07563092 seconds)
  done (took 214.63836101 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.074300265 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.077507258 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.075945511 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.073496106 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.075117663 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.076334916 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.077991559 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.076095056 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.864514229 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.863782694 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.076505343 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.080439402 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.085597253 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.074488049 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.078264312 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.074773674 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.074950108 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.076731027 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.078139095 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.085515369 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.076260605 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.786552659 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.075710309 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.820145935 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.077070796 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.076150399 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.077956391 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.078556341 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.078213775 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.080151788 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.081362349 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.073193554 seconds)
  done (took 227.509778936 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.31460524 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 2.076683907 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.079649162 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 3.085466059 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.079718095 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 2.076841096 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 3.072818003 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.323913122 seconds)
  done (took 21.120181817 seconds)
done (took 640.783562361 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.481277732 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.829189665 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.205687911 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.101941496 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.324523492 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.139006542 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.094719062 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.162934869 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.737721631 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.167957716 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.48423228 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.098739628 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.786855382 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.118877585 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.209334586 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.155455175 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.444796764 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.702342964 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.224773522 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.755274496 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.291662637 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.041626788 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.172406384 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.772701229 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.501772105 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.068680747 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.098831338 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.443057566 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.099866585 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.321978414 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.73240016 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.335875499 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.109035822 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.099453385 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.154193219 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.139984867 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.280866043 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.106099012 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.211330624 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.842672924 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.741181909 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.625646728 seconds)
  done (took 108.420724511 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 2.084658776 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 2.081959781 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 2.083551473 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 2.086060217 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 2.091302616 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 2.084914698 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 2.083218376 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 2.085695903 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 2.086511475 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 2.087218475 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 2.087927064 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 2.091641031 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 2.085102944 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.094323599 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 2.086235489 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 2.085931467 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 2.083736879 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.09160775 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 2.085384083 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 2.086432952 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 2.087579017 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 2.083932408 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 2.085583406 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 2.087426006 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 2.083820021 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 2.084412101 seconds)
  done (took 56.263605995 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 2.082564423 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.233206376 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.362304174 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.10757692 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 2.084507902 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.086719786 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.109344567 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.085964315 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.084819546 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.083960052 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.173810246 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.084640798 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.094352456 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.361085041 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.105997294 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 2.083408471 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 2.083123601 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 2.087142373 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.238327374 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.098319343 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.11166063 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.090720884 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.111499113 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.096204712 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 2.08655088 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.083818105 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.08710386 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.49876857 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.091300498 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.175741512 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.126158763 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.116774692 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.473986401 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.369376268 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.144465967 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.092821377 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 2.0858399 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.222172083 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.091862304 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 2.085641292 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.111860901 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.089865027 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.366695828 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.597528033 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.096042309 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 2.085613617 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.492963956 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.229656355 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.13033465 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.095695303 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.374281546 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.108423051 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 2.084684628 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 2.08639117 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.121661982 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.0960706 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 2.085695252 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.36663154 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.097744268 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.112367266 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.088849935 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.087062379 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.250361982 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.093246938 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.236921877 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.093818858 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.089836101 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 2.087027069 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.368451964 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.109626184 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.600538175 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.099462149 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 2.082711564 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.17903241 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.237794286 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.516557921 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.096279688 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.250797866 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.486074701 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.121324428 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.094645457 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.482087232 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.122201206 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.09325518 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 2.087657522 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.086800236 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.088455291 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.134105128 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.114079997 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.514994371 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.599062612 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.382360045 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.121344642 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.09840799 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 2.09003753 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.369025571 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.097371995 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.088729312 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.36407206 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.622136922 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.098934702 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.09648626 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.585567232 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.101219785 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.114709886 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.096428103 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.382535255 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.11032788 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.13061155 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.09040344 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.095916311 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.089695986 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.118130626 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.095436118 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.091367529 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.575185441 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.238960186 seconds)
  done (took 257.754482569 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 7.091245853 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.08505318 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 7.086541773 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 7.083234366 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 7.088351551 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.086030078 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 7.085635177 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 7.087554269 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.087730485 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 7.087843956 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 7.088665967 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 7.089347998 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 7.089120894 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.089374983 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.593102299 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.103537784 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.592778327 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.10547003 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.105028045 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.094217168 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.716772019 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.110167024 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.10318883 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.104814526 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.103369986 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.103945622 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.104613609 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.142802438 seconds)
  done (took 174.330592134 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.105594753 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.171283914 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.119569547 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.1513516 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.120351245 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.105743948 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.127450094 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.127126193 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.110723847 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.106989882 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.108549517 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.133173042 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.119051129 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.244065769 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.142810416 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.132602415 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.181421619 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.111034223 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.108054327 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.107862267 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.156792074 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.119075038 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.105179816 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.161330238 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.118294038 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.153760668 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.12329347 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.105927508 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.105483724 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.211617882 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.125399737 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.134140101 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.127429386 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.123623554 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.199345575 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.200598614 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.189588223 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.134655549 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.109296273 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.107640873 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.109607153 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.11243905 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.15656625 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.122835594 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.111623809 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.200903419 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.125422025 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.108015637 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.126303734 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.110504 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.119413189 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.12431293 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.137193989 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.207543909 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.155343245 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.13489813 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.128896382 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.12635696 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.105661592 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.180833896 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.11500049 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.20087397 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.130715611 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.113389043 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.110160414 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.114572535 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.156950088 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.145072592 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.18312852 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.116507735 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.183955823 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.16445978 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.124468772 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.108775341 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.10814187 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.157132662 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.198123914 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.162554503 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.172229542 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.148642144 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.118930496 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.10845896 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.110103857 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.13616907 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.112585186 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.198893159 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.1987717 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.117873142 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.109878457 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.11182505 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.109227485 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.129777321 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.165032855 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.150439444 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.196392497 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.142415272 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.148727994 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.117263221 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.125049389 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.113806865 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.139736105 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.117353932 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.122935984 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.448722912 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.14652659 seconds)
  done (took 226.801792912 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.465013054 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.162172789 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.180707273 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.380408962 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.480865884 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.200926529 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.149052518 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.168534475 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.170634354 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.284935182 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.213078722 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.20354771 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.144863917 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.130986377 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.159228016 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.168370813 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.189526158 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.451133848 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.266290447 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.873758195 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.150489669 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.405203542 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.453712034 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.495115318 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.193894647 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.528930265 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.779007891 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.252342546 seconds)
  done (took 68.746374017 seconds)
done (took 894.322975282 seconds)
SAVING RESULT...
DONE!
