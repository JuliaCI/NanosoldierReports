cset: moving following pidspec: 2033940
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.782976933 seconds)
loading group "shootout"... done (took 1.156132085 seconds)
loading group "string"... done (took 0.66446114 seconds)
loading group "linalg"... done (took 8.651094531 seconds)
loading group "parallel"... done (took 0.165668605 seconds)
loading group "find"... done (took 3.052844315 seconds)
loading group "tuple"... done (took 2.102357345 seconds)
loading group "union"... done (took 14.687490746 seconds)
loading group "dates"... done (took 1.484530511 seconds)
loading group "micro"... done (took 0.216880914 seconds)
loading group "simd"... done (took 4.725613144 seconds)
loading group "io"... done (took 1.396768785 seconds)
loading group "random"... done (took 9.955427221 seconds)
loading group "problem"... done (took 1.665098298 seconds)
loading group "array"... done (took 25.721906931 seconds)
loading group "misc"... done (took 1.859528926 seconds)
loading group "scalar"... done (took 42.940120289 seconds)
loading group "sort"... done (took 3.244183229 seconds)
loading group "sparse"... done (took 12.948372372 seconds)
loading group "collection"... done (took 18.709615612 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.444152703 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.116910209 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.163821932 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.111185956 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.230411537 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.125590938 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.128151256 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.088199741 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.052617561 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.141697192 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.136784165 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.425316737 seconds)
done (took 5.61539659 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 0.310175153 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.243594955 seconds)
    (2/2) benchmarking "String"...
    done (took 0.164596248 seconds)
  done (took 1.575780211 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.091168415 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.058405239 seconds)
    (3/3) benchmarking "different"...
    done (took 0.065178126 seconds)
  done (took 1.369944961 seconds)
  (4/7) benchmarking "replace"...
  done (took 0.06379395 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.13989767 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.064998385 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.065117309 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.065010013 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.064908307 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.0646911 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.064667523 seconds)
  done (took 1.692942182 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072383928 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.066094624 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.064639 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.066142843 seconds)
  done (took 1.441144319 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.06640924 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.120933459 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.063945407 seconds)
    (4/4) benchmarking "different"...
    done (took 0.063943288 seconds)
  done (took 1.473524968 seconds)
done (took 9.106851231 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.159077155 seconds)
    (2/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.775695179 seconds)
    (3/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.860943594 seconds)
    (4/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.148127441 seconds)
    (5/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.319214989 seconds)
    (6/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.345582865 seconds)
    (7/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.121753558 seconds)
    (8/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.204873886 seconds)
    (9/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.114190811 seconds)
    (10/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.075733079 seconds)
    (11/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.164505695 seconds)
    (12/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.081178594 seconds)
    (13/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.48390245 seconds)
    (14/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.479174538 seconds)
    (15/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.071867369 seconds)
    (16/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.189456305 seconds)
    (17/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.634958746 seconds)
    (18/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085115712 seconds)
    (19/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.115714839 seconds)
    (20/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.26090194 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.082143114 seconds)
    (22/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.08362436 seconds)
    (23/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.088732 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.072500244 seconds)
    (25/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.174674618 seconds)
    (26/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.178892927 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.629332441 seconds)
    (28/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.098597814 seconds)
    (29/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.06840836 seconds)
    (30/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.19355371 seconds)
    (31/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.070614931 seconds)
    (32/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.074614725 seconds)
  done (took 10.697293134 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.114742284 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.11170263 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.067163534 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.103155645 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.094571693 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068575155 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.073808257 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.06740658 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.087546106 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.132949578 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.090916319 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.123273264 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.067730964 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068034603 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.098089403 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.164693905 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.08292721 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.08105156 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.067255742 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.080629897 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.094138354 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.079811618 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077683927 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077328356 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.113190015 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.136685777 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.089750718 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.110002428 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067733771 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079896981 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.096245177 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.109335757 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.06827604 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066832937 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.1110192 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.086096272 seconds)
  done (took 4.508897918 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.043296006 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.093811018 seconds)
    (2/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.105408872 seconds)
    (3/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.097293041 seconds)
    (4/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.111263874 seconds)
    (5/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.095453734 seconds)
    (6/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.146863452 seconds)
    (7/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.121936228 seconds)
    (8/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.099331542 seconds)
    (9/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.067623296 seconds)
    (10/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.180991461 seconds)
    (11/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.684986306 seconds)
    (12/118) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 2.109685369 seconds)
    (13/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.071604356 seconds)
    (14/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.14676509 seconds)
    (15/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.368266365 seconds)
    (16/118) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 0.92455615 seconds)
    (17/118) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.095599653 seconds)
    (18/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.069407418 seconds)
    (19/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.068390047 seconds)
    (20/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.098048697 seconds)
    (21/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.070280662 seconds)
    (22/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.14132992 seconds)
    (23/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.067480566 seconds)
    (24/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.180922723 seconds)
    (25/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.65246672 seconds)
    (26/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.073974997 seconds)
    (27/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.195633483 seconds)
    (28/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.097433991 seconds)
    (29/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064171004 seconds)
    (30/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.139323513 seconds)
    (31/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.094661091 seconds)
    (32/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.069607666 seconds)
    (33/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.583750199 seconds)
    (34/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066458738 seconds)
    (35/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064054719 seconds)
    (36/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.086127707 seconds)
    (37/118) benchmarking ("3-arg mul!", 2)...
    done (took 0.093117572 seconds)
    (38/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066100048 seconds)
    (39/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.067121681 seconds)
    (40/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.077757978 seconds)
    (41/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.065396798 seconds)
    (42/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.118577602 seconds)
    (43/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.080640371 seconds)
    (44/118) benchmarking ("5-arg mul!", 3)...
    done (took 0.552813287 seconds)
    (45/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.069239244 seconds)
    (46/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.629204088 seconds)
    (47/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.333436965 seconds)
    (48/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.073082943 seconds)
    (49/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.071247315 seconds)
    (50/118) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.101681848 seconds)
    (51/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.063759535 seconds)
    (52/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.070016233 seconds)
    (53/118) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.063853564 seconds)
    (54/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.626495387 seconds)
    (55/118) benchmarking ("5-arg mul!", 2)...
    done (took 0.152138426 seconds)
    (56/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.06693544 seconds)
    (57/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.291006141 seconds)
    (58/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.070563382 seconds)
    (59/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.06782907 seconds)
    (60/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.068758268 seconds)
    (61/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.100346079 seconds)
    (62/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.067443587 seconds)
    (63/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.06842926 seconds)
    (64/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.07265748 seconds)
    (65/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.0846399 seconds)
    (66/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.017091305 seconds)
    (67/118) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.114777943 seconds)
    (68/118) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.149483014 seconds)
    (69/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.08711948 seconds)
    (70/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.068772377 seconds)
    (71/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.428951449 seconds)
    (72/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.078368838 seconds)
    (73/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.071419791 seconds)
    (74/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.072296267 seconds)
    (75/118) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.098656594 seconds)
    (76/118) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.138547537 seconds)
    (77/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.068259298 seconds)
    (78/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.067919925 seconds)
    (79/118) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.114495532 seconds)
    (80/118) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.203904664 seconds)
    (81/118) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.092183654 seconds)
    (82/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.09026402 seconds)
    (83/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.069831329 seconds)
    (84/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.067076818 seconds)
    (85/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.06707386 seconds)
    (86/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.548046341 seconds)
    (87/118) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 0.991944843 seconds)
    (88/118) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.069154625 seconds)
    (89/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.069760628 seconds)
    (90/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.50639131 seconds)
    (91/118) benchmarking ("3-arg mul!", 3)...
    done (took 0.064230147 seconds)
    (92/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.065421359 seconds)
    (93/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.066790167 seconds)
    (94/118) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 0.087614061 seconds)
    (95/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.06598749 seconds)
    (96/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.0627308 seconds)
    (97/118) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.063380749 seconds)
    (98/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.100504671 seconds)
    (99/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.068301375 seconds)
    (100/118) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.593854541 seconds)
    (101/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.069385715 seconds)
    (102/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.502691356 seconds)
    (103/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.070277909 seconds)
    (104/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.09910527 seconds)
    (105/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.123629438 seconds)
    (106/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.067546764 seconds)
    (107/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.105765145 seconds)
    (108/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.067512798 seconds)
    (109/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064796302 seconds)
    (110/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.073245324 seconds)
    (111/118) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.065390223 seconds)
    (112/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064342983 seconds)
    (113/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.069269458 seconds)
    (114/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065634326 seconds)
    (115/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.066597669 seconds)
    (116/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.068636832 seconds)
    (117/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.068485498 seconds)
    (118/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.067882484 seconds)
  done (took 23.529661988 seconds)
done (took 40.943681222 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 512)...
    done (took 0.406847913 seconds)
    (2/5) benchmarking ("identity", 4096)...
    done (took 0.078397735 seconds)
    (3/5) benchmarking ("identity", 2)...
    done (took 0.078530558 seconds)
    (4/5) benchmarking ("identity", 1024)...
    done (took 0.078375329 seconds)
    (5/5) benchmarking ("identity", 64)...
    done (took 0.077710563 seconds)
  done (took 1.938410372 seconds)
done (took 3.264604999 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 0.2565843 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.077642861 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 0.063269681 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.206420343 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 0.088329317 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 0.180518668 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 0.22082013 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 0.293658997 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 0.090716088 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 0.089571928 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 0.090111076 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 0.223868125 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 0.235394107 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 0.09183865 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.163873638 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 0.239538592 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 0.09331449 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 0.065887291 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 0.091920611 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 0.093008801 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 0.093457915 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.065946757 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 0.09188121 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 0.093341318 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.166199691 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 0.089795136 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 0.063670184 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.165675939 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 0.093594019 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.169916621 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 0.093418107 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 0.092315913 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 0.093029196 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.165903574 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 0.094931852 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.166968804 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.066594925 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 0.093455742 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 0.09500359 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 0.098402793 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 0.095634714 seconds)
  done (took 6.447814489 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.077382701 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.080079837 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.08150529 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.060588589 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.069537175 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.079824653 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.060584186 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.079340731 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.101394075 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.080147539 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.079880884 seconds)
  done (took 2.146021171 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.071105343 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.080887096 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.082085184 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.060330766 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.071398916 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.081099962 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.06074388 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.080743829 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.083731407 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.081399297 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.081416881 seconds)
  done (took 2.073039741 seconds)
done (took 11.882106559 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 0.192425464 seconds)
    (2/2) benchmarking "11899"...
    done (took 0.090781037 seconds)
  done (took 1.519619371 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.256888817 seconds)
    (2/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.49782132 seconds)
    (3/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 4.24333888 seconds)
    (4/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.124813341 seconds)
    (5/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.104218934 seconds)
    (6/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.11966226 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.233904447 seconds)
    (8/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.101141707 seconds)
  done (took 7.095363608 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.097600007 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.067860822 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.067099709 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.06894664 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.09582543 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.068959601 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.068027001 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068819251 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.067061377 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.066655506 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.068028752 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.067311384 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.066502036 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.068024739 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.065775697 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.066853476 seconds)
  done (took 2.518502192 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("minimum", (8,))...
    done (took 0.100972009 seconds)
    (2/24) benchmarking ("sumabs", (4,))...
    done (took 0.067900411 seconds)
    (3/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.096761157 seconds)
    (4/24) benchmarking ("minimum", (2,))...
    done (took 0.06020688 seconds)
    (5/24) benchmarking ("sum", (8,))...
    done (took 0.070555219 seconds)
    (6/24) benchmarking ("sumabs", (2,))...
    done (took 0.061563138 seconds)
    (7/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.069361747 seconds)
    (8/24) benchmarking ("minimum", (4, 4))...
    done (took 0.071129635 seconds)
    (9/24) benchmarking ("sumabs", (8,))...
    done (took 0.068598323 seconds)
    (10/24) benchmarking ("sum", (2, 2))...
    done (took 0.068867636 seconds)
    (11/24) benchmarking ("minimum", (2, 2))...
    done (took 0.070324468 seconds)
    (12/24) benchmarking ("sum", (4,))...
    done (took 0.068953457 seconds)
    (13/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.069756466 seconds)
    (14/24) benchmarking ("sumabs", (16,))...
    done (took 0.069727706 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.070825528 seconds)
    (16/24) benchmarking ("sum", (4, 4))...
    done (took 0.071697488 seconds)
    (17/24) benchmarking ("sum", (8, 8))...
    done (took 0.073060763 seconds)
    (18/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.069245588 seconds)
    (19/24) benchmarking ("minimum", (8, 8))...
    done (took 0.071850185 seconds)
    (20/24) benchmarking ("sum", (16, 16))...
    done (took 0.073064836 seconds)
    (21/24) benchmarking ("minimum", (4,))...
    done (took 0.071496185 seconds)
    (22/24) benchmarking ("sum", (16,))...
    done (took 0.072867129 seconds)
    (23/24) benchmarking ("minimum", (16, 16))...
    done (took 0.073908151 seconds)
    (24/24) benchmarking ("sum", (2,))...
    done (took 0.070985737 seconds)
  done (took 3.079664359 seconds)
done (took 15.46197028 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.177797001 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072769301 seconds)
  done (took 1.504180744 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.093410478 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.092314494 seconds)
  done (took 1.456236637 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.073001501 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.058585031 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.075385651 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.067658461 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.059243211 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.059038074 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.074674199 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.059442136 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.059153195 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.05931717 seconds)
  done (took 1.894976721 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.063403514 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.066056328 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.064172639 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.062528029 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.064873841 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.060571507 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.063127836 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.060724371 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.06640862 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.059594869 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.063561351 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.081320322 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.063289575 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.081842338 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.063094942 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.063671924 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.065413186 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.063922057 seconds)
  done (took 2.433293151 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.062815199 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.060875237 seconds)
  done (took 1.396933511 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.064730261 seconds)
    (2/7) benchmarking "second"...
    done (took 0.060265032 seconds)
    (3/7) benchmarking "month"...
    done (took 0.062122561 seconds)
    (4/7) benchmarking "year"...
    done (took 0.062107715 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.062039983 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.060732252 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.060936792 seconds)
  done (took 1.709275698 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.43461541 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.194832836 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.429740389 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.069157122 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.083545288 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.271416402 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064484769 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.068772373 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070071883 seconds)
  done (took 3.014168594 seconds)
done (took 14.672878194 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.086462151 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.187657671 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.114270265 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.431754517 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.081766952 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.069825055 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.100041398 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.217367711 seconds)
done (took 2.621960639 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.288124406 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.223250026 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.261548188 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.148809531 seconds)
  done (took 2.962795516 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.424100572 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.170095089 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.079175697 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068664139 seconds)
  done (took 2.029525189 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.068038468 seconds)
    (2/2) benchmarking "read"...
    done (took 0.07428482 seconds)
  done (took 1.460877765 seconds)
done (took 8.063906833 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074016737 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.095777561 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.059591657 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.060032169 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.06253308 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.061712359 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.061400918 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.061039139 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.06285464 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.059822324 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.060371759 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.062411383 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.061683744 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062317523 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062441419 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062559965 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064092362 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.062007092 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061626983 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062051458 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.061539852 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063415807 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.062309661 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063653124 seconds)
  done (took 2.888294488 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.080383999 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.064977182 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.066563811 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.065038141 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.067523449 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.067270336 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.065774174 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065737008 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.066413123 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.065161938 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066747043 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.066615163 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.065033243 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.066995223 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066730773 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.066811079 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.066008991 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066021938 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065311577 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.067239543 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.068611491 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066527941 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.066841451 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06797067 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.068060442 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06929617 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.06542215 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065760998 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06647968 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.066801898 seconds)
  done (took 3.304854799 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069349417 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.06118317 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.060370474 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.068616541 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.058035695 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.0610446 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.063569188 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.05958971 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063322571 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.062350615 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.061450644 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.061786087 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.060731295 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.062063503 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.060217919 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.060992579 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.065122328 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.082028571 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.062225728 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.061903038 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.064673689 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.059918193 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.059657615 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.059319856 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.059950723 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.059767329 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.059497599 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.060186463 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.060829659 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.0613415 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.060420736 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.064906663 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066332721 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.06022624 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070565763 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.064690019 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.059045255 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.065650139 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.059839461 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.058964297 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.058898965 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.05880021 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.058978381 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.059158082 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069529028 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.059408161 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.060192053 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.062516983 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.059540332 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.059923505 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.060530688 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.063222197 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.065717675 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.062027295 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.059450846 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.061161529 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.059101212 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.059632852 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.060958813 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.061493993 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.059630865 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.063871564 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.063490026 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063242696 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.0823087 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.062968341 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071064835 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062967816 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.06554948 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.06663161 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.061002265 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.079298966 seconds)
  done (took 5.855225745 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.073563261 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.069483164 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080714031 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.070658618 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063773276 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.060464494 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.063767064 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060458836 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06959187 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.063286237 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.059827598 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.063114294 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069710774 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.064416278 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06177138 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.070003196 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.067738797 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067126931 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.061521421 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.064505825 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.061901915 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.064260116 seconds)
  done (took 2.77053326 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.145479546 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069452951 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.116516936 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073265459 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068834366 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072322869 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.067725487 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067083954 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067901489 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068988672 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068921312 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06836471 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069184191 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069452207 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06829141 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069077808 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069672102 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071491411 seconds)
  done (took 2.689262499 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.07778614 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.06426866 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.09073191 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064971356 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.064908046 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.064360201 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067953554 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.068170857 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.063950161 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.064337258 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.06797493 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06418417 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.064247322 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064430929 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064118143 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065740881 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.065499695 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06565949 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069698933 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068434704 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069227383 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069629792 seconds)
  done (took 2.822886387 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079507944 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.065024376 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.080186465 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065843554 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.059088288 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.059237013 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.066410019 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.064442846 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.065863801 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.063974932 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064362241 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.059362003 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.066228101 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064543814 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.066994035 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064912646 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.064330641 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066336457 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065835999 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.059847337 seconds)
  done (took 2.612388195 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.098453798 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.061477752 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063132867 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066412656 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061448745 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.061427831 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067774033 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.075389252 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.062739437 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.085815778 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.061598654 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.061307424 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066200245 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069193105 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.064774798 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067569805 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066491173 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066592926 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.0665432 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06660434 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088683949 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.063413566 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067609657 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063759504 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065128589 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.063598996 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063180134 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.067335896 seconds)
  done (took 3.223321846 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068162532 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064520765 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.064869937 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.067317848 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.069657369 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.068880111 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.06897256 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.071767983 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.068768316 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068677414 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.067995743 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.06875103 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067695611 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.068738353 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068285872 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067893241 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067573634 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.068001102 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069009802 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067696982 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065995248 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0662614 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.066193469 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066438091 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065886456 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066594485 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066380071 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066986532 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06817619 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068014477 seconds)
  done (took 3.364854072 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074607933 seconds)
    (2/2) benchmarking "in"...
    done (took 0.071121545 seconds)
  done (took 1.470782496 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062918355 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076502318 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.060224253 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.074212085 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.06875782 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.064176739 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.068917663 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069971707 seconds)
  done (took 1.874618726 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.094374715 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.118205322 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.061788648 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.062256263 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.094041925 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.12843608 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.103678863 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.074880205 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.07675664 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064467589 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.062278225 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.102654786 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.062432247 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.076678343 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.064221069 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.07231309 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.072187304 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.082111407 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.076971297 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.061483172 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.076035636 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064627624 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062330007 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.065751418 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.06475135 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.071362292 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.08025354 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.077212344 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072226715 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059954897 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.081501392 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.060393831 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.062029459 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070971865 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.093897639 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.062255289 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.100107324 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.061804555 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.06537984 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061495591 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.073749545 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081883291 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.075752287 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.079802585 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.061982613 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.062926718 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060538388 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.062214721 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065509985 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.072452141 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061074573 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068708768 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061023872 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.062231677 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071669805 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.060935705 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.067272894 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.071028216 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07631609 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.072433787 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.074165205 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.077185505 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.071802854 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.070052489 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.06127884 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.082633849 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.063523511 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.07552089 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.077459736 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.062309077 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07659892 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061188359 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060837529 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063385617 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.098555234 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.063933471 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.063075059 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.062138217 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063001982 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.065932782 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075313255 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.071194298 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.073759844 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.067091295 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.080038785 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.072539038 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.062600659 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.071376889 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.083277868 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.06914754 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064638539 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.083105424 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.067925976 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064401672 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.084138135 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.075128722 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.0670983 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065345725 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.069350962 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.080161233 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066155986 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.063757957 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074559858 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.067649942 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.098649776 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.071197847 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.073901477 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.06457606 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.077177131 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.071845126 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.066484391 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062638517 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.068135051 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.065115634 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.063257067 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074131286 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.063527981 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.080999474 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.070270014 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.079643421 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.079412242 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.076952302 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.081592803 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.063707651 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.065033578 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.083039828 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.073141025 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.066402091 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.084602468 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063484873 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.075169005 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062749053 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.064704132 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.072899095 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.06282794 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.06845319 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.066885337 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.072267762 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.066324984 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.068166854 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.0718311 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.077669542 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.08320353 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.06940866 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.076978762 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065886491 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.083341343 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.079355371 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.072423311 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.070843174 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.067340142 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.081862377 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.075201629 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.077910022 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.069040017 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.067787624 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065938632 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.075670231 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.076579714 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.06625567 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074430301 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.06992929 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.065930903 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.066913033 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.065503223 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.069726349 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068523801 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.06476144 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.073016999 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.075752401 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.08215155 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.072409202 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.074971789 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063152529 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.062998701 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.065608223 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062890848 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.070113821 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.075760983 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.080293984 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.076599273 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.086892931 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.063681898 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.073365396 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.064928907 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.080709304 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.077837698 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.064493054 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.069573766 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.06258535 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.0650644 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.072604779 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075715331 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.078461018 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.080255101 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.069774059 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.067614661 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063383505 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.081945956 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.065789728 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.0740718 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.074352523 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070700383 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.064941432 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.06655556 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.073702383 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.068891427 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064806862 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.080587344 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073391527 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063653187 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.078955092 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.065001754 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.075806842 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.06241123 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066431184 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.068496452 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.064908183 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.07280923 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.402450599 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.06046858 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.061630042 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.077714043 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.064826737 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.063371516 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.07047135 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.079571443 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.070203308 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.073081119 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073689595 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.072771914 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.067001227 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.072134128 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.063480827 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.072922278 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.066056831 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.076195543 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.063240861 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.083110107 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.063141478 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.082976168 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065359821 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.074921497 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.063661074 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073830875 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.063589125 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.080658153 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.064438811 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.064576605 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.07476418 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060762771 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.072598902 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062419747 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.069277145 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.070102607 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.073805751 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067882772 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07481568 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.064137161 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.07110699 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066274899 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069657256 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.072469717 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066578013 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.060567591 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.070613556 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075182802 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.07088831 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.063747942 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.062828748 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.061915952 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.071727686 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.066348702 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.0643103 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071224209 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.068406756 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067962463 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.065118368 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.064670714 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.063779058 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071105607 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072265366 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.084564338 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073548805 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.070370321 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.071380822 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.060750231 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07822187 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.061529001 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.071011026 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.060678892 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.069070526 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.071036412 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.061417462 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.081635007 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.063321421 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069880403 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074288892 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070336899 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066003025 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.081558487 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.064828838 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.070536767 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.071056088 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067271553 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.069740994 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.064349737 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.071904466 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.074500158 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.074415516 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.064353154 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.071492524 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.074445464 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.063611915 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.070101767 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.063262188 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.070091665 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.062800079 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060738879 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067351593 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.073347128 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.068664447 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067943019 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.062770584 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.06058457 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.062379325 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.070752864 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.069168446 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.072418326 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.079299756 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061573669 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.063079862 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.061444224 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.066132977 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.244302902 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.070185967 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.068904154 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064964168 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.060246772 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.063101369 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.061829265 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.061398115 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.063249549 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059183883 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.059530619 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071241283 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.061556171 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064847915 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06030949 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.062098254 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.073631184 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.064943922 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.060744538 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.068321789 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.06134098 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066343603 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.059723126 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.062233532 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.065658621 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.060018667 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065067513 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.072651962 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.078037061 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068761884 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.071914361 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.062256779 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069873827 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076673758 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.069432294 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062579064 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.073539761 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.062656069 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.08221195 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.072789303 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071644705 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071681599 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.062146337 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.079616893 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066749958 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.07308847 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.077872507 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063305972 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.069224081 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.061738514 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.079350446 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067938315 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.061613063 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.0713626 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.07005852 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.068010637 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.076573281 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.062939796 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.070190714 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066853428 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.064794246 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.062555113 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.062424369 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070264857 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.078423151 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.061704826 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.066678392 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069889256 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.070383059 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.06678576 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076207238 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070675223 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063394711 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.064135607 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066282537 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.063178662 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074949069 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062944524 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067391018 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.067476871 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.061685956 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069775986 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.079687321 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070726925 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070678868 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.060374834 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.060522614 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.080074841 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065507733 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.064677098 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.070119719 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.072130381 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074362821 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.07153245 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.079365448 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.062388772 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068237034 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074828264 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.06262439 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.061564364 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065885101 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.063300987 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.071652055 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.072155435 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.069272533 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.062873365 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.072014958 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.076278727 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.06340764 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067319869 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.068782828 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.062859015 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.073074477 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.070757933 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.07122165 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.063661868 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061562227 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.228549599 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069148311 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067564433 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068948016 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.0602276 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.066116667 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.073198345 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068309354 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.062888318 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.058929497 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.062377347 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.069397707 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.064766613 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.05928881 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064988349 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063989569 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.066774932 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.069521517 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064938864 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.059620108 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.0776401 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.06896465 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.070179585 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.062000452 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.061986246 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.060770307 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.059841645 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.072438324 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060236875 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.062174604 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.065769188 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.062109703 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.079030518 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070192027 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.078730275 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.061956876 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065716735 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.060181092 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070637688 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065678092 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.06089402 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.07162669 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.059998023 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.076805195 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.072907409 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.067388631 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.06055078 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066870662 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070592129 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.07828431 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071677624 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.071550764 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.065643958 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.072692248 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.064169371 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.074244037 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.062113848 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.061416369 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.072519335 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071391887 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.075282339 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.060079187 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.071134493 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.062503569 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.070382385 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070219735 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.063111859 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.063071373 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.063207299 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071366313 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066547468 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.071400855 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066884675 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.079372074 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.062585459 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.073176704 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.071398638 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.073156923 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.076141661 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074262974 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069652158 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.061633096 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068872886 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.068749355 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.061267112 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.06554467 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.063215352 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.082539201 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.061801779 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.061518048 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.074836499 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.067513367 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.060131169 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.067577936 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065507837 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.07102279 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.061359781 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.071362106 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.065777034 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.061048837 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065345276 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065505728 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.05927517 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.060882475 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.061345177 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.072885937 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.066485296 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.061830147 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.08218364 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.063767723 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.071280607 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073928025 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069092235 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.221398958 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.059071202 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.060606282 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.073305702 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.075292019 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.0632465 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068277206 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.060552653 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069031885 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.058136942 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068422225 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067552764 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068164555 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.058716571 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.059493191 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074633243 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.075247758 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.064860382 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.075529899 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068957738 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.060672671 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.081240041 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.06909505 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.060351588 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.071308258 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061561678 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.060050904 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.060615143 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.061732258 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073760912 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.06108711 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.062968885 seconds)
  done (took 43.501005355 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.10366654 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06092501 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062272618 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.059220699 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066690074 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.060888571 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.059647782 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.060711096 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.060716075 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.061968234 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.059430135 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.059028784 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.06446078 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.074034273 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066835654 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.062597515 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.058956729 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.060074823 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.058927727 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06018241 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.065544113 seconds)
  done (took 2.806935124 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.065277145 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.062767082 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.062303589 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.062871743 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062092701 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.059270211 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.062730067 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.059326292 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.063271341 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.05986179 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.06346126 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.059526944 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.059690799 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.059750764 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.059709524 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.060685196 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.063211148 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062369037 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.059413849 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.062855183 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.061111792 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.063226285 seconds)
  done (took 2.756727035 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.064200269 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.061495885 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.070191818 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.058871453 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.058219736 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.061565381 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.059290867 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.064504582 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.064618138 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.06436022 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.069382261 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.060656972 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.059120414 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.066211152 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.059356937 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.06046329 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.105317609 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.061040169 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.060733405 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.059811728 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.062714236 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.069567343 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.059654143 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.059909621 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064860896 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.062606501 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.059085581 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.061904008 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.059954102 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064143459 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.060393597 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.059377734 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068841109 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068170855 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064258499 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064242185 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.060876373 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.060313566 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.059084941 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.059138451 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068287524 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.060598341 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.059403174 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.060710727 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068988654 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.059296941 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.059044355 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069155602 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.059454794 seconds)
  done (took 4.536578966 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.073503227 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.109627937 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.06544055 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092383999 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.071719399 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.06473708 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.065369461 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.094955846 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.061399956 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.06092395 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.072090748 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.072801098 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.062396777 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.063476034 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.066840204 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.063011904 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064549313 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063511511 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.066407461 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.063793586 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.066646141 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.070343973 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.073211344 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.073337637 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.063478524 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.061764799 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.062255836 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.063763901 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.072188461 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.065327428 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.064307242 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.064570109 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.072354477 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.065595625 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.063080079 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.062540788 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.073827117 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.062862251 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.063532713 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.061336593 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.062246438 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.065268091 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.069702301 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.074513388 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.063253996 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.068343585 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.062923869 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.061603307 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.074233071 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067412086 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.067626869 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.074831264 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.06434437 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.06615369 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.064642829 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.073611565 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.063249667 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.061972336 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.064416994 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.073171512 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.061500121 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.06410162 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.074039392 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.062653225 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.066368337 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.074348288 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.06899368 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.065504086 seconds)
  done (took 6.178957201 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073580856 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.095571704 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076637763 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075774188 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073498028 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073736665 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072416516 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072912906 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.072041521 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.075243759 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074015902 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.137904359 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.068837362 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073016055 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072897811 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.07262394 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.07279602 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072462865 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072609954 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07212569 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.071177321 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.075695191 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.07206297 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.076613486 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076772153 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.068492514 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071761118 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071777043 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077608041 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.07162082 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.07561394 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.0716812 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071966901 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.077033441 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.076193744 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.07167764 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.062056334 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072423438 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072883376 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.073163415 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06873301 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.077986637 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072645698 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.068956195 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072965471 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074325705 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.07756964 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078439984 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074744518 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.078256017 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.076054517 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079774147 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075965835 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.077125833 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.081215275 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.084612896 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081010906 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081610446 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074110793 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.077509377 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078187634 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.081354989 seconds)
  done (took 6.190548836 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077943818 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069150444 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.083402535 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061493683 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.060136821 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069552411 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.060749701 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.06063474 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066736912 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.0667157 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068392699 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07028172 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072145228 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069708643 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070427748 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071840993 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074777119 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073455881 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068662265 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073922713 seconds)
  done (took 2.90706214 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.065273361 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.066923313 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.062036173 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.078775543 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.062763039 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.069794227 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.063203265 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063400231 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063049083 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063587616 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068181475 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068241477 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063310112 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072388952 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.067227511 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070386844 seconds)
  done (took 2.588373422 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.067735912 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.070660742 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.09760899 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.064298439 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.065946503 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.063351531 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.064233756 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062568566 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.065749584 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077775296 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.062928614 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.064380836 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.062481917 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.061327012 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062371884 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.064655265 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063014247 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063390552 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.063713487 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.099310314 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.072456695 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063716411 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.065045826 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.064168359 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.064168863 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.069961335 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064242392 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.064813899 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.06306894 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.064693085 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.064714634 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.073548729 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.065731786 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.068375554 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.062460196 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063419413 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.06300106 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.064851188 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.064493539 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.064253132 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.062305182 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065029397 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.06316645 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.063292239 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.06434115 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065094295 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.064140416 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.073742178 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.062866597 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065117224 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.063515047 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.064224226 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.063144225 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072924889 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.063617367 seconds)
  done (took 5.174287167 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08162864 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067936387 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061425802 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.061507647 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.067199328 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.068077772 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.067900913 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.06786616 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068266607 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.061664392 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067975437 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.067154725 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068202769 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067713111 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067996327 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067680345 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.0616662 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067888066 seconds)
  done (took 2.703276344 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070281105 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067137683 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.067149485 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.062502109 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.061201379 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.065329461 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.060686999 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064796333 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064042905 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06271817 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06186922 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.060840856 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060672014 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.060612845 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.064912005 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06080508 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.060490262 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06043846 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.063283063 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060694874 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.065941317 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.060934609 seconds)
  done (took 2.854363801 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.11976588 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.084484211 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.161464457 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.083770165 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.094010349 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.074552031 seconds)
  done (took 2.092295585 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095650608 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097346161 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065537554 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068071415 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069963355 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067757041 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06876225 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070170557 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072865791 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076553931 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069086184 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071203716 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070588792 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072674786 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069670485 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069120125 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068769546 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068487961 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065452384 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076425424 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068857763 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071919644 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068883222 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068510007 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068220959 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07296081 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07149037 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074262755 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068889259 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072153194 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070554582 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068377444 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071725202 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074241289 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.065653621 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071806433 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068940828 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077099412 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07095402 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074760756 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067261158 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071454844 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072803184 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072490849 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073100947 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069715625 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073956164 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070067623 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069916824 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081415884 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07157498 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075482887 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071499779 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073361492 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073154652 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081475372 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075604406 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074684198 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071452144 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07583743 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074678195 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071104029 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074251559 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075449265 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071467704 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07462414 seconds)
  done (took 6.233815687 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110943124 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067244916 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070331798 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072774657 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072746869 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068920717 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069034216 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069309659 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069861198 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06904337 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108237783 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069466027 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072565297 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072135234 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067475425 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067132169 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067623422 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072841475 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0656167 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078992382 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067771201 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072539796 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072527123 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072364748 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073705386 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069899129 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067858109 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067744202 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067997173 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069004552 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072319511 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070263007 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076617594 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068344334 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07630224 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072539655 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071801016 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07599308 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071830119 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076430316 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076588662 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078208031 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068925416 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069474898 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075513575 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069204122 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072531467 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076702054 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074825152 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067290904 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075456762 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075671954 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075860216 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074202784 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069182478 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068971715 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068838792 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068912371 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069424703 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071016118 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077856165 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074388316 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083737593 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070277472 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069671041 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077415505 seconds)
  done (took 6.314596872 seconds)
done (took 131.062617618 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.266264025 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.22428987 seconds)
  done (took 1.989169396 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.077905155 seconds)
    (2/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.274044432 seconds)
    (3/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.078998267 seconds)
    (4/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.07865057 seconds)
    (5/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.142297056 seconds)
    (6/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.136388327 seconds)
    (7/16) benchmarking ("transpose", (600, 600))...
    done (took 0.110908631 seconds)
    (8/16) benchmarking ("transpose", (600, 400))...
    done (took 0.07411962 seconds)
    (9/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.079205453 seconds)
    (10/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.075066266 seconds)
    (11/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.17442213 seconds)
    (12/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.110641061 seconds)
    (13/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.074059796 seconds)
    (14/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.074380222 seconds)
    (15/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.074171013 seconds)
    (16/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.100538137 seconds)
  done (took 3.268964079 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.126540015 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.219920919 seconds)
    (3/18) benchmarking ("IJV", 10)...
    done (took 0.084776521 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.072481278 seconds)
    (5/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.159544538 seconds)
    (6/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.080369309 seconds)
    (7/18) benchmarking ("IJV", 100)...
    done (took 0.075712537 seconds)
    (8/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.081230875 seconds)
    (9/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.082833719 seconds)
    (10/18) benchmarking ("IV", 1000)...
    done (took 0.348392086 seconds)
    (11/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.123978134 seconds)
    (12/18) benchmarking ("Diagonal", 10)...
    done (took 0.088605746 seconds)
    (13/18) benchmarking ("Diagonal", 100)...
    done (took 0.078643475 seconds)
    (14/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.079747708 seconds)
    (15/18) benchmarking ("IJV", 1000)...
    done (took 0.076173421 seconds)
    (16/18) benchmarking ("Diagonal", 1000)...
    done (took 0.078130756 seconds)
    (17/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.079845474 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.081041064 seconds)
  done (took 3.555249644 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.106985859 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.122600227 seconds)
  done (took 1.765073577 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.181790396 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.11868019 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.159056282 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.364653341 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.145929779 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.156423809 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.160669843 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.161738117 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.13236351 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.154316243 seconds)
  done (took 3.260441198 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.108027642 seconds)
    (2/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.104022911 seconds)
    (3/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.308976734 seconds)
    (4/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.102163766 seconds)
    (5/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.080734652 seconds)
    (6/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075851943 seconds)
    (7/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073589777 seconds)
    (8/54) benchmarking ("spmat", "range", 100)...
    done (took 0.078497985 seconds)
    (9/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073562396 seconds)
    (10/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.075172233 seconds)
    (11/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.121853816 seconds)
    (12/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.074299558 seconds)
    (13/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.071252733 seconds)
    (14/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.124463235 seconds)
    (15/54) benchmarking ("spmat", "array", 100)...
    done (took 0.098375795 seconds)
    (16/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.106093399 seconds)
    (17/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.070756222 seconds)
    (18/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.078503443 seconds)
    (19/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.080160278 seconds)
    (20/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.070768056 seconds)
    (21/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.074942407 seconds)
    (22/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079401282 seconds)
    (23/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.178575329 seconds)
    (24/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.078313741 seconds)
    (25/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.101077057 seconds)
    (26/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.074264613 seconds)
    (27/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.0761805 seconds)
    (28/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.073344163 seconds)
    (29/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.073180799 seconds)
    (30/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077122196 seconds)
    (31/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.07773491 seconds)
    (32/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.100858148 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077687258 seconds)
    (34/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.08350599 seconds)
    (35/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.075436396 seconds)
    (36/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.096760267 seconds)
    (37/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.07141676 seconds)
    (38/54) benchmarking ("spmat", "array", 10)...
    done (took 0.100426328 seconds)
    (39/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073898109 seconds)
    (40/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.071663373 seconds)
    (41/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.073588082 seconds)
    (42/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077562101 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.070927473 seconds)
    (44/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.079828446 seconds)
    (45/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074001066 seconds)
    (46/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075983069 seconds)
    (47/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.079246581 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.06989501 seconds)
    (49/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074127393 seconds)
    (50/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073431666 seconds)
    (51/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.071543626 seconds)
    (52/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.075315737 seconds)
    (53/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.074940883 seconds)
    (54/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.076317116 seconds)
  done (took 6.251613751 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.123543228 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.110385484 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067998192 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.117979236 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111246508 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069481205 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.125167295 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.105213825 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.123916038 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068455865 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068207032 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.06827511 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.075310785 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.079689952 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.120840494 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.115037168 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070355572 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068653522 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.113446333 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.113573039 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068018188 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126284817 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.117330434 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.113536201 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067336152 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068748731 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067305795 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.067861271 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.075848904 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.075624642 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.067750932 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078106634 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.080621722 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.075305592 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067354517 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067293978 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067067064 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.075933418 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077361463 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.077214282 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.074650394 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067161903 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067128241 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.067775257 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068259583 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066753536 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077149334 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.076097944 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.077668889 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068798783 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.068030507 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067406998 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069785497 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077099925 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.076223811 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.075775921 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078766024 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068486841 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067813343 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069230002 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079233112 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.076642161 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.075846446 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069104629 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.077310894 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067875166 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078250682 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080886669 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067811631 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.068315381 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06802715 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067899526 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.06841119 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.074732964 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.075197292 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068703622 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069873268 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06894716 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.076964969 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.075317396 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068020667 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078689461 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068686507 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069258129 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069972209 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072184451 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.081054656 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.078989314 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070198052 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070122838 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069425625 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069404726 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.068832563 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.230979874 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.074907237 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.074087075 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.075506893 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067590366 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077111587 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075146756 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067363439 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.073090477 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.066855298 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067073315 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066975694 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.073390712 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.072951103 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.075293201 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066851169 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.066366854 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.074452744 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.076347436 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.066853577 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.072958004 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076162585 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.073560701 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.066444515 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.076517522 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067757692 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076849385 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068333376 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076272721 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067469252 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.073897103 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067501196 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.066454025 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067682179 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.076377002 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068482982 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066971214 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067439717 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067091722 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.073937796 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.077791002 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067913491 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.074605955 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.076203108 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.068948683 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.077499072 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06916826 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078363845 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069102704 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069107081 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068048216 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079984465 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068026671 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069976408 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073152742 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079808281 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070239459 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078703723 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076465506 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069330755 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080207423 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078379903 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.075857145 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.081610047 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071290031 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.071040319 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07118566 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071181429 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.080575073 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082259991 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072836583 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070151165 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.076654622 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079794254 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.06907257 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.076221763 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.076288621 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.075979759 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068806559 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068771755 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079151736 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080317051 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.075584196 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078258927 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.076495402 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069636208 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076874769 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080129669 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069555138 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083791992 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071037929 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.08125626 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.080508422 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076271469 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080652954 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.235081209 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.077028052 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.075643471 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.078016835 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068356145 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067515846 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.07376172 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.066950043 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06708213 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.073258081 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.067366504 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068736735 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.080513557 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067287646 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.075983061 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067260171 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.073741194 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066428609 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067082772 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078109236 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066882353 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067262186 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.073764366 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.067045008 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.073233205 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.076318956 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.073438735 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067166013 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067795871 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.0768976 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.077045364 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067849959 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067548956 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068425098 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.07776681 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.07714048 seconds)
  done (took 18.670491046 seconds)
done (took 40.307753995 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.17205211 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.114654917 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.225808916 seconds)
    (4/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.204022898 seconds)
  done (took 2.28654175 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 0.101787313 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 0.063966318 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 0.108031759 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 0.118843957 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 0.065299037 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 0.104056535 seconds)
  done (took 2.058475434 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.202201985 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.17839677 seconds)
    (3/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.257266236 seconds)
  done (took 2.129574532 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((10000000,), 2)...
    done (took 0.369022498 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.151857595 seconds)
    (3/4) benchmarking ((1000, 1000), 1)...
    done (took 0.264525342 seconds)
    (4/4) benchmarking ((1000, 1000), 2)...
    done (took 0.526501471 seconds)
  done (took 2.926922602 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 0.137133537 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.134243093 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 0.077098907 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.150135635 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 0.088212286 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 0.064072769 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.148100535 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 0.069214223 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 0.100510258 seconds)
  done (took 2.536468687 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.144924571 seconds)
done (took 13.612094582 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("map", abs, Float32, false)...
    done (took 0.290843043 seconds)
    (2/341) benchmarking ("collect", "filter", Bool, true)...
    done (took 0.307201969 seconds)
    (3/341) benchmarking ("perf_sum", Float32, true)...
    done (took 0.101003423 seconds)
    (4/341) benchmarking ("perf_sum", Float32, false)...
    done (took 0.067259262 seconds)
    (5/341) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.077997638 seconds)
    (6/341) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.318546333 seconds)
    (7/341) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.184767902 seconds)
    (8/341) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.259702975 seconds)
    (9/341) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.322652455 seconds)
    (10/341) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.075656658 seconds)
    (11/341) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.156197592 seconds)
    (12/341) benchmarking ("map", abs, Int8, false)...
    done (took 0.273461159 seconds)
    (13/341) benchmarking ("collect", "all", BigFloat, false)...
    done (took 0.25941926 seconds)
    (14/341) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.0949096 seconds)
    (15/341) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.119341176 seconds)
    (16/341) benchmarking ("map", identity, BigInt, false)...
    done (took 0.167383269 seconds)
    (17/341) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.189629314 seconds)
    (18/341) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.066084311 seconds)
    (19/341) benchmarking ("perf_sum", Bool, true)...
    done (took 0.077446259 seconds)
    (20/341) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.07358822 seconds)
    (21/341) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.073376762 seconds)
    (22/341) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.293785882 seconds)
    (23/341) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.195915992 seconds)
    (24/341) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.125970996 seconds)
    (25/341) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.077482295 seconds)
    (26/341) benchmarking ("collect", "all", BigFloat, true)...
    done (took 0.071447006 seconds)
    (27/341) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.299670749 seconds)
    (28/341) benchmarking ("map", identity, BigInt, true)...
    done (took 0.163980569 seconds)
    (29/341) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.247902759 seconds)
    (30/341) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.077522195 seconds)
    (31/341) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.075700222 seconds)
    (32/341) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.297025815 seconds)
    (33/341) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.108225155 seconds)
    (34/341) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.083661725 seconds)
    (35/341) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.069807738 seconds)
    (36/341) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.097296425 seconds)
    (37/341) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.103486024 seconds)
    (38/341) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.078682348 seconds)
    (39/341) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.079306537 seconds)
    (40/341) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.26509133 seconds)
    (41/341) benchmarking ("collect", "all", Int64, false)...
    done (took 0.158757817 seconds)
    (42/341) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.365406967 seconds)
    (43/341) benchmarking ("map", abs, Float64, false)...
    done (took 0.258900851 seconds)
    (44/341) benchmarking ("map", abs, Int8, true)...
    done (took 0.07310273 seconds)
    (45/341) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.205265072 seconds)
    (46/341) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.088209043 seconds)
    (47/341) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.07994279 seconds)
    (48/341) benchmarking ("map", abs, BigInt, false)...
    done (took 0.155209015 seconds)
    (49/341) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.083530583 seconds)
    (50/341) benchmarking ("perf_sum", Int8, false)...
    done (took 0.077999205 seconds)
    (51/341) benchmarking ("collect", "all", Float32, true)...
    done (took 0.256097359 seconds)
    (52/341) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.221723789 seconds)
    (53/341) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.082129187 seconds)
    (54/341) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.096534483 seconds)
    (55/341) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.197927279 seconds)
    (56/341) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.072527622 seconds)
    (57/341) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.164457196 seconds)
    (58/341) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.105009655 seconds)
    (59/341) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.164052677 seconds)
    (60/341) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.09311456 seconds)
    (61/341) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.076713728 seconds)
    (62/341) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.080117738 seconds)
    (63/341) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.093308574 seconds)
    (64/341) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.274884829 seconds)
    (65/341) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.070686245 seconds)
    (66/341) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.251303701 seconds)
    (67/341) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.09341258 seconds)
    (68/341) benchmarking ("perf_countequals", "Int8")...
    done (took 0.084101868 seconds)
    (69/341) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.087722892 seconds)
    (70/341) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.067907885 seconds)
    (71/341) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.188205583 seconds)
    (72/341) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.134828109 seconds)
    (73/341) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.07332759 seconds)
    (74/341) benchmarking ("collect", "filter", Int8, true)...
    done (took 0.151177734 seconds)
    (75/341) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.213079089 seconds)
    (76/341) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.092611602 seconds)
    (77/341) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.085279545 seconds)
    (78/341) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.217314525 seconds)
    (79/341) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.216051135 seconds)
    (80/341) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.071807497 seconds)
    (81/341) benchmarking ("collect", "filter", Bool, false)...
    done (took 0.161720887 seconds)
    (82/341) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.202834169 seconds)
    (83/341) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.076010266 seconds)
    (84/341) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.065463181 seconds)
    (85/341) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.141676483 seconds)
    (86/341) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.067115501 seconds)
    (87/341) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.072972975 seconds)
    (88/341) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.148227664 seconds)
    (89/341) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.075591264 seconds)
    (90/341) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.073788141 seconds)
    (91/341) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.194541731 seconds)
    (92/341) benchmarking ("collect", "all", Float32, false)...
    done (took 0.070446977 seconds)
    (93/341) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.208103839 seconds)
    (94/341) benchmarking ("collect", "all", Int8, true)...
    done (took 0.141136252 seconds)
    (95/341) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072839943 seconds)
    (96/341) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.073826493 seconds)
    (97/341) benchmarking ("collect", "all", Float64, false)...
    done (took 0.148796091 seconds)
    (98/341) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.087644816 seconds)
    (99/341) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.213236182 seconds)
    (100/341) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.214628412 seconds)
    (101/341) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.109417945 seconds)
    (102/341) benchmarking ("collect", "all", Int8, false)...
    done (took 0.07021803 seconds)
    (103/341) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.279905202 seconds)
    (104/341) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.067572698 seconds)
    (105/341) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.067946075 seconds)
    (106/341) benchmarking ("collect", "filter", Float64, false)...
    done (took 0.193511746 seconds)
    (107/341) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.068030616 seconds)
    (108/341) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066548647 seconds)
    (109/341) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.185035241 seconds)
    (110/341) benchmarking ("collect", "filter", BigInt, true)...
    done (took 0.152134257 seconds)
    (111/341) benchmarking ("map", identity, Float64, true)...
    done (took 0.088936184 seconds)
    (112/341) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.205406077 seconds)
    (113/341) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.089479719 seconds)
    (114/341) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.088658787 seconds)
    (115/341) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.067557166 seconds)
    (116/341) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.073276751 seconds)
    (117/341) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.066138792 seconds)
    (118/341) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.066301722 seconds)
    (119/341) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.07472732 seconds)
    (120/341) benchmarking ("map", identity, Int8, false)...
    done (took 0.085463777 seconds)
    (121/341) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.180891203 seconds)
    (122/341) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.075790084 seconds)
    (123/341) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.070897216 seconds)
    (124/341) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.078485274 seconds)
    (125/341) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.21586229 seconds)
    (126/341) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.083746981 seconds)
    (127/341) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.075037006 seconds)
    (128/341) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.068884083 seconds)
    (129/341) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.126975183 seconds)
    (130/341) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.078844362 seconds)
    (131/341) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.168785269 seconds)
    (132/341) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.067611497 seconds)
    (133/341) benchmarking ("sort", BigFloat, false)...
    done (took 0.148191141 seconds)
    (134/341) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.07760334 seconds)
    (135/341) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.093426549 seconds)
    (136/341) benchmarking ("sort", Float32, false)...
    done (took 0.14061285 seconds)
    (137/341) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.082097345 seconds)
    (138/341) benchmarking ("perf_countequals", "Float32")...
    done (took 0.079423852 seconds)
    (139/341) benchmarking ("collect", "all", Int64, true)...
    done (took 0.072373303 seconds)
    (140/341) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.06775005 seconds)
    (141/341) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.066654425 seconds)
    (142/341) benchmarking ("collect", "filter", Float32, false)...
    done (took 0.152708043 seconds)
    (143/341) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.233262493 seconds)
    (144/341) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.096837116 seconds)
    (145/341) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.069397179 seconds)
    (146/341) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.0677071 seconds)
    (147/341) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.06826056 seconds)
    (148/341) benchmarking ("perf_sum", Int64, false)...
    done (took 0.081993543 seconds)
    (149/341) benchmarking ("collect", "all", BigInt, true)...
    done (took 0.093909653 seconds)
    (150/341) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.081111337 seconds)
    (151/341) benchmarking ("map", abs, Float32, true)...
    done (took 0.070946663 seconds)
    (152/341) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.077837192 seconds)
    (153/341) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.085507631 seconds)
    (154/341) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.138823951 seconds)
    (155/341) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.256431054 seconds)
    (156/341) benchmarking ("perf_countequals", "Int64")...
    done (took 0.079111977 seconds)
    (157/341) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.197114975 seconds)
    (158/341) benchmarking ("perf_sum", Float64, false)...
    done (took 0.07115138 seconds)
    (159/341) benchmarking ("perf_countequals", "Bool")...
    done (took 0.077488471 seconds)
    (160/341) benchmarking ("sort", Bool, false)...
    done (took 0.156213169 seconds)
    (161/341) benchmarking ("sort", Float64, false)...
    done (took 0.145292218 seconds)
    (162/341) benchmarking ("perf_sum", Float64, true)...
    done (took 0.070639683 seconds)
    (163/341) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.06643646 seconds)
    (164/341) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.0670739 seconds)
    (165/341) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.074787035 seconds)
    (166/341) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.080675243 seconds)
    (167/341) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.065859703 seconds)
    (168/341) benchmarking ("perf_sum", Int64, true)...
    done (took 0.071702256 seconds)
    (169/341) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.074157908 seconds)
    (170/341) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.086201539 seconds)
    (171/341) benchmarking ("sort", Int64, false)...
    done (took 0.06797926 seconds)
    (172/341) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.188757728 seconds)
    (173/341) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.072884499 seconds)
    (174/341) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.06555329 seconds)
    (175/341) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.084209584 seconds)
    (176/341) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.068045745 seconds)
    (177/341) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.176428977 seconds)
    (178/341) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.066258108 seconds)
    (179/341) benchmarking ("map", abs, Int64, true)...
    done (took 0.141755367 seconds)
    (180/341) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.187719438 seconds)
    (181/341) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.093629836 seconds)
    (182/341) benchmarking ("collect", "filter", Int64, false)...
    done (took 0.149770801 seconds)
    (183/341) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.090569689 seconds)
    (184/341) benchmarking ("collect", "filter", BigFloat, false)...
    done (took 0.148488891 seconds)
    (185/341) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.121934401 seconds)
    (186/341) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.064228158 seconds)
    (187/341) benchmarking ("collect", "all", Bool, true)...
    done (took 0.139310928 seconds)
    (188/341) benchmarking ("collect", "filter", Float32, true)...
    done (took 0.06685589 seconds)
    (189/341) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.209046264 seconds)
    (190/341) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.176124612 seconds)
    (191/341) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.074334796 seconds)
    (192/341) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.06669435 seconds)
    (193/341) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.184722731 seconds)
    (194/341) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.071170007 seconds)
    (195/341) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.066384305 seconds)
    (196/341) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065997925 seconds)
    (197/341) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.066395999 seconds)
    (198/341) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.066873269 seconds)
    (199/341) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.066938136 seconds)
    (200/341) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.073153359 seconds)
    (201/341) benchmarking ("map", identity, Float64, false)...
    done (took 0.066236372 seconds)
    (202/341) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.066112919 seconds)
    (203/341) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068609998 seconds)
    (204/341) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068462703 seconds)
    (205/341) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.092990818 seconds)
    (206/341) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.084317439 seconds)
    (207/341) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.076799429 seconds)
    (208/341) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.067175287 seconds)
    (209/341) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.064751089 seconds)
    (210/341) benchmarking ("sort", Int8, false)...
    done (took 0.149545005 seconds)
    (211/341) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.157586259 seconds)
    (212/341) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.203005808 seconds)
    (213/341) benchmarking ("map", abs, Int64, false)...
    done (took 0.06594189 seconds)
    (214/341) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.212663577 seconds)
    (215/341) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.066408712 seconds)
    (216/341) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.065261019 seconds)
    (217/341) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.065048245 seconds)
    (218/341) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.064911748 seconds)
    (219/341) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.173826361 seconds)
    (220/341) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.065939443 seconds)
    (221/341) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.093754324 seconds)
    (222/341) benchmarking ("collect", "all", Float64, true)...
    done (took 0.069474686 seconds)
    (223/341) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.072394983 seconds)
    (224/341) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.066366678 seconds)
    (225/341) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.153812825 seconds)
    (226/341) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.146756396 seconds)
    (227/341) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.073213777 seconds)
    (228/341) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068142888 seconds)
    (229/341) benchmarking ("collect", "filter", Float64, true)...
    done (took 0.06786994 seconds)
    (230/341) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.0660504 seconds)
    (231/341) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.06542339 seconds)
    (232/341) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.093809655 seconds)
    (233/341) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.066219381 seconds)
    (234/341) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.065620374 seconds)
    (235/341) benchmarking ("sort", BigInt, false)...
    done (took 0.271111916 seconds)
    (236/341) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072173954 seconds)
    (237/341) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073535353 seconds)
    (238/341) benchmarking ("perf_sum", Bool, false)...
    done (took 0.072559928 seconds)
    (239/341) benchmarking ("map", identity, Int8, true)...
    done (took 0.066115047 seconds)
    (240/341) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.070498981 seconds)
    (241/341) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.065629181 seconds)
    (242/341) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.114450725 seconds)
    (243/341) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.165927635 seconds)
    (244/341) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.067457755 seconds)
    (245/341) benchmarking ("map", abs, Bool, false)...
    done (took 0.142335784 seconds)
    (246/341) benchmarking ("collect", "filter", Int64, true)...
    done (took 0.069318703 seconds)
    (247/341) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.074574854 seconds)
    (248/341) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.232966711 seconds)
    (249/341) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.160084957 seconds)
    (250/341) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.072488427 seconds)
    (251/341) benchmarking ("collect", "all", ComplexF64, false)...
    done (took 0.156109667 seconds)
    (252/341) benchmarking ("map", identity, Int64, false)...
    done (took 0.084123902 seconds)
    (253/341) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.194324122 seconds)
    (254/341) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.268581099 seconds)
    (255/341) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.084960442 seconds)
    (256/341) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.06940029 seconds)
    (257/341) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.06628683 seconds)
    (258/341) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.065057557 seconds)
    (259/341) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.132230076 seconds)
    (260/341) benchmarking ("perf_countequals", "Float64")...
    done (took 0.078521099 seconds)
    (261/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.081058064 seconds)
    (262/341) benchmarking ("map", identity, Float32, false)...
    done (took 0.082492418 seconds)
    (263/341) benchmarking ("map", abs, Bool, true)...
    done (took 0.065178766 seconds)
    (264/341) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.068905617 seconds)
    (265/341) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.064229489 seconds)
    (266/341) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.071720677 seconds)
    (267/341) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.06949289 seconds)
    (268/341) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.220807433 seconds)
    (269/341) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.06636815 seconds)
    (270/341) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.07184376 seconds)
    (271/341) benchmarking ("collect", "all", Bool, false)...
    done (took 0.068860986 seconds)
    (272/341) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.064095155 seconds)
    (273/341) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.066115473 seconds)
    (274/341) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.0692607 seconds)
    (275/341) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.092004185 seconds)
    (276/341) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.064441722 seconds)
    (277/341) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.147749292 seconds)
    (278/341) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.067148008 seconds)
    (279/341) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.071191957 seconds)
    (280/341) benchmarking ("collect", "all", ComplexF64, true)...
    done (took 0.069257002 seconds)
    (281/341) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.173988474 seconds)
    (282/341) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.064825339 seconds)
    (283/341) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.06422278 seconds)
    (284/341) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.065088429 seconds)
    (285/341) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.064564793 seconds)
    (286/341) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.063526584 seconds)
    (287/341) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.075401788 seconds)
    (288/341) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.065083727 seconds)
    (289/341) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.073407986 seconds)
    (290/341) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.07062667 seconds)
    (291/341) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.06482188 seconds)
    (292/341) benchmarking ("collect", "filter", ComplexF64, false)...
    done (took 0.161356634 seconds)
    (293/341) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072440092 seconds)
    (294/341) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.07142679 seconds)
    (295/341) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.064677404 seconds)
    (296/341) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.064500708 seconds)
    (297/341) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.065304811 seconds)
    (298/341) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.160210108 seconds)
    (299/341) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.086445274 seconds)
    (300/341) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.064554362 seconds)
    (301/341) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.064163041 seconds)
    (302/341) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.064689244 seconds)
    (303/341) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.065260201 seconds)
    (304/341) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.067512844 seconds)
    (305/341) benchmarking ("map", identity, Int64, true)...
    done (took 0.065062366 seconds)
    (306/341) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.072708871 seconds)
    (307/341) benchmarking ("collect", "filter", Int8, false)...
    done (took 0.067434254 seconds)
    (308/341) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.065483781 seconds)
    (309/341) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.067265293 seconds)
    (310/341) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.064662161 seconds)
    (311/341) benchmarking ("map", identity, Bool, false)...
    done (took 0.081116843 seconds)
    (312/341) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.083625212 seconds)
    (313/341) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.09241246 seconds)
    (314/341) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.078841031 seconds)
    (315/341) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.131773512 seconds)
    (316/341) benchmarking ("collect", "filter", BigFloat, true)...
    done (took 0.067455146 seconds)
    (317/341) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.086050785 seconds)
    (318/341) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.065102156 seconds)
    (319/341) benchmarking ("collect", "filter", ComplexF64, true)...
    done (took 0.067062069 seconds)
    (320/341) benchmarking ("collect", "filter", BigInt, false)...
    done (took 0.067049811 seconds)
    (321/341) benchmarking ("map", identity, Bool, true)...
    done (took 0.065038422 seconds)
    (322/341) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.065146081 seconds)
    (323/341) benchmarking ("perf_sum", Int8, true)...
    done (took 0.07094829 seconds)
    (324/341) benchmarking ("map", abs, BigInt, true)...
    done (took 0.066459644 seconds)
    (325/341) benchmarking ("map", abs, Float64, true)...
    done (took 0.064963153 seconds)
    (326/341) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.067203342 seconds)
    (327/341) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.11305762 seconds)
    (328/341) benchmarking ("map", identity, Float32, true)...
    done (took 0.065376891 seconds)
    (329/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.076648936 seconds)
    (330/341) benchmarking ("collect", "all", BigInt, false)...
    done (took 0.069474416 seconds)
    (331/341) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.064873351 seconds)
    (332/341) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.071800978 seconds)
    (333/341) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.121911156 seconds)
    (334/341) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.073122426 seconds)
    (335/341) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.065403513 seconds)
    (336/341) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.066585156 seconds)
    (337/341) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.088243532 seconds)
    (338/341) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.065504542 seconds)
    (339/341) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.064606697 seconds)
    (340/341) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.064572923 seconds)
    (341/341) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.065994314 seconds)
  done (took 39.567171016 seconds)
done (took 41.115735823 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.123485906 seconds)
  (2/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.077806607 seconds)
  (3/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.07526667 seconds)
  (4/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072488283 seconds)
  (5/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.076059418 seconds)
  (6/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.076222053 seconds)
  (7/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.075924169 seconds)
  (8/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073796501 seconds)
  (9/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.078311005 seconds)
  (10/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075044374 seconds)
  (11/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.106120087 seconds)
  (12/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063503144 seconds)
  (13/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071458505 seconds)
  (14/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.081914463 seconds)
  (15/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.073361204 seconds)
  (16/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.079394171 seconds)
  (17/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078754037 seconds)
  (18/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.078707749 seconds)
  (19/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064428357 seconds)
  (20/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.079302372 seconds)
  (21/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.089644138 seconds)
  (22/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.077286374 seconds)
  (23/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.07309988 seconds)
  (24/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.079195867 seconds)
  (25/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.064897284 seconds)
  (26/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.07295286 seconds)
  (27/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.119825037 seconds)
  (28/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.084234182 seconds)
  (29/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.069174249 seconds)
  (30/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074081754 seconds)
  (31/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072069006 seconds)
  (32/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.081456035 seconds)
  (33/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.07299317 seconds)
  (34/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072547536 seconds)
  (35/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074435467 seconds)
  (36/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069678125 seconds)
  (37/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.074540929 seconds)
  (38/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070609959 seconds)
  (39/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.120181685 seconds)
  (40/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.069781174 seconds)
  (41/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.064756701 seconds)
  (42/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.076834019 seconds)
  (43/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.071495163 seconds)
  (44/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072975109 seconds)
  (45/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.073191021 seconds)
  (46/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.077060369 seconds)
  (47/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.070541449 seconds)
  (48/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.080110408 seconds)
  (49/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064099127 seconds)
  (50/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075715479 seconds)
  (51/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.120281236 seconds)
  (52/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070219043 seconds)
  (53/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.069360434 seconds)
  (54/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.072969123 seconds)
  (55/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.069628685 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.07397966 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069223699 seconds)
  (58/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.07591394 seconds)
  (59/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.06953745 seconds)
  (60/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.076130694 seconds)
  (61/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.073747529 seconds)
  (62/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072308052 seconds)
  (63/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.064009948 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.07291717 seconds)
  (65/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071307081 seconds)
  (66/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071673494 seconds)
  (67/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.063235754 seconds)
  (68/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069806916 seconds)
  (69/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064133333 seconds)
  (70/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064110312 seconds)
  (71/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.063430205 seconds)
  (72/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073105872 seconds)
  (73/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071407519 seconds)
  (74/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.069926196 seconds)
  (75/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.063726207 seconds)
  (76/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064399876 seconds)
  (77/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.063683657 seconds)
  (78/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.076462966 seconds)
  (79/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071780011 seconds)
  (80/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073663014 seconds)
  (81/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064983121 seconds)
  (82/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.0701472 seconds)
  (83/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.069623127 seconds)
  (84/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065207556 seconds)
  (85/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070180929 seconds)
  (86/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.076292656 seconds)
  (87/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.064634952 seconds)
  (88/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066954116 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064256683 seconds)
  (90/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.079762096 seconds)
  (91/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.071463654 seconds)
  (92/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064977744 seconds)
  (93/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.07695972 seconds)
  (94/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070549484 seconds)
  (95/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070318039 seconds)
  (96/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065000553 seconds)
  (97/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.064625116 seconds)
  (98/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07029684 seconds)
  (99/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.073048195 seconds)
  (100/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.065173599 seconds)
  (101/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.063981436 seconds)
  (102/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070748461 seconds)
  (103/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070212563 seconds)
  (104/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.07722536 seconds)
  (105/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.067999513 seconds)
  (106/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071564332 seconds)
  (107/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071769779 seconds)
  (108/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065971596 seconds)
  (109/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.077218224 seconds)
  (110/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.075271411 seconds)
  (111/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.076413068 seconds)
  (112/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.08081705 seconds)
  (113/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.076055572 seconds)
  (114/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.07998276 seconds)
  (115/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.066723613 seconds)
  (116/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.065061125 seconds)
  (117/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.076363353 seconds)
  (118/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.227743372 seconds)
  (119/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070933027 seconds)
  (120/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.072112401 seconds)
  (121/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069975803 seconds)
  (122/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.07325077 seconds)
  (123/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.065499583 seconds)
  (124/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.063717228 seconds)
  (125/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.07050122 seconds)
  (126/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070425041 seconds)
  (127/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.064695515 seconds)
  (128/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.064292373 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.0642406 seconds)
  (130/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.072494745 seconds)
  (131/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070984624 seconds)
  (132/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.062556248 seconds)
  (133/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.063553344 seconds)
  (134/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.072320168 seconds)
  (135/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073495449 seconds)
  (136/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.062892352 seconds)
  (137/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.062794883 seconds)
  (138/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.072720895 seconds)
  (139/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.065862968 seconds)
  (140/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.070789629 seconds)
  (141/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069269836 seconds)
  (142/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074149561 seconds)
  (143/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.064974711 seconds)
  (144/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.064678332 seconds)
  (145/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.062925688 seconds)
  (146/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.063604487 seconds)
  (147/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.06396251 seconds)
  (148/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.069370593 seconds)
  (149/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069482686 seconds)
  (150/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.065205967 seconds)
  (151/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072566989 seconds)
  (152/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.070899545 seconds)
done (took 12.831767027 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069159212 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.108833736 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.117893975 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.114331619 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.079501143 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.06956917 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.071148925 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.086734566 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.069296244 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.091778053 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.091946672 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.087849614 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.1308608 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064295802 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065546187 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.06618855 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.063711953 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.077646767 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.115439637 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.090442388 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.109008111 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.06567703 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.082487183 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.086576464 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.079526281 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.085712038 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067706607 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.066974726 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069050986 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.085265973 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.09317949 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.065784177 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066820143 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.085213934 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.082550076 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.075095605 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.067140359 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.072770688 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066383419 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065311117 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067362864 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.084227916 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.072440098 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.072567634 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.066267906 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.066128406 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.065662705 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.073484781 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.079500489 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.071629539 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.078574955 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.082283527 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.066925434 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065911604 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.065413003 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.073627514 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065514716 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.066347932 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066084703 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.065660206 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066318972 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.06857958 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.070793388 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.075937282 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069596953 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.072976482 seconds)
  done (took 6.715992672 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085235648 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.096028597 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083047472 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.081918311 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066642758 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068158275 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.067686667 seconds)
  done (took 2.193159899 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069075469 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.105329425 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.112559629 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.114811224 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.121329554 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.110456573 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066536924 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.099108315 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.065527738 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.106823542 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.119591329 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.114448934 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.068678393 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.077761767 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.065935301 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.114619911 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066160872 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072635215 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.110220277 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.115658183 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069909123 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.097988939 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.082857221 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.069163291 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.118229359 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.111711772 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.068455703 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.06621996 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067920273 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.065475091 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065343528 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.088896014 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.106974077 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.080394654 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066041841 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.064737755 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.10441625 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066384804 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.103668123 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.073097722 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.107201517 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.06897574 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.068862712 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066719518 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.067184143 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.110798713 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.069297878 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067613024 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.066665716 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.109272639 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.065539404 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.107186816 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.068265643 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.070663986 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.072611681 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071700565 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.073000994 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066714087 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.109356001 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.076117556 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068088178 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.120070097 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.118226006 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.107078811 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.118565847 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.075753847 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.110596043 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.109608652 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.06740438 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.066212361 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.06686672 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.119231941 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.069937392 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.068861118 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.071144516 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.073489674 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.111496979 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.124530248 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.124387696 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080759728 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070493528 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.067663366 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.237607447 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.119903181 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.06989871 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065408688 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.066168517 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065312346 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069912881 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.066797749 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.069572162 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.064462556 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.074598192 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.067244447 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.066766374 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.111954059 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.065201296 seconds)
  done (took 10.033235204 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069922343 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.067860974 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.066357426 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.066011292 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.066018932 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.065938315 seconds)
  done (took 2.048641445 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.092635142 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.066414138 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.077845243 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.069313871 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.088959845 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.108653086 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.10822485 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.06884987 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083397678 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078622675 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.110831184 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.113215319 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.112712867 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.06828353 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.10926197 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.067792942 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.109798471 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.071662393 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079248067 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072210326 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.083660455 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.069278103 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.06904912 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.118588729 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.070983664 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.069777438 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.068957971 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.087518992 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079326831 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.069138416 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.06839233 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.069944774 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.076198017 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.067990574 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.110643279 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.075728865 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.066810488 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.071230492 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.068232391 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.069242319 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.11428477 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.069237902 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.070962106 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.072944113 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.070847663 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.079475851 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.075265566 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.071649894 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.110627363 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.071132226 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.070949019 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.066860661 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.068422021 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.070908804 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075377951 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.067493887 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.070886118 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.110551005 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.067668974 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.07569052 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.066892362 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.06918484 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.068141849 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.068988672 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.072527511 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.07155682 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075917281 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.06833069 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.068186202 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.067271367 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.071971858 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.067613586 seconds)
  done (took 7.311581161 seconds)
done (took 29.91016154 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.550172462 seconds)
  done (took 2.233289669 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.995794464 seconds)
  done (took 2.701228184 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 10.228857868 seconds)
  done (took 11.934448992 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.339793667 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.453306111 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.771292116 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.141246379 seconds)
  done (took 3.415645974 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.877471086 seconds)
  done (took 2.542357611 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.243470021 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.231110322 seconds)
  done (took 2.167694983 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.463159505 seconds)
  done (took 2.119587367 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.226076845 seconds)
  done (took 2.904647445 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.239394725 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.165393852 seconds)
  done (took 2.097558179 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.640189386 seconds)
  done (took 2.318304621 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.786954586 seconds)
  done (took 6.486894336 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.333040393 seconds)
  done (took 2.062987465 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.241489924 seconds)
  done (took 1.944651263 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 2.625694982 seconds)
  done (took 4.311720678 seconds)
done (took 50.945601621 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.087990695 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.088036144 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.086966054 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081170496 seconds)
  done (took 1.9928614 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.076554699 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.069996856 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.071735108 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.073116655 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.071790541 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.07409733 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.073050127 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.069287499 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.07247477 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.07070021 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.068329864 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.070463694 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.07294863 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.069181299 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.07229056 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.073502824 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.068936429 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.069186627 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.07267649 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.070075727 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.071918156 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.070538329 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.067455551 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.069872489 seconds)
  done (took 3.388182782 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079974368 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072083051 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074302212 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.069423375 seconds)
  done (took 1.993325272 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.078924678 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.077856391 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.085357834 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.089188141 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076596793 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.078266037 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.083998834 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.083923399 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.065876528 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.086335607 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.067063121 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.067398477 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.067749616 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.085117977 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.082700017 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.061300354 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.062353281 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.076290304 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.078284553 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.080552515 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.068913946 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.066357402 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076515277 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.076575691 seconds)
  done (took 3.50374539 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.084451971 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.064787349 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.081396983 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.089208136 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.091575605 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065047234 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.080117803 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.091773972 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.128094806 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064628738 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.074977347 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065360359 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.105099039 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064578291 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.080240644 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.110565156 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113955764 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.069696122 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.099639127 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065134172 seconds)
  done (took 3.401355366 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.078979651 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069282541 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.070641076 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.066089182 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.075565923 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.074337902 seconds)
  done (took 2.128632163 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070859561 seconds)
    (2/12) benchmarking ("push_single!", 256)...
    done (took 0.068167697 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.066179204 seconds)
    (4/12) benchmarking ("push_multiple!", 256)...
    done (took 0.071278511 seconds)
    (5/12) benchmarking ("push_single!", 2048)...
    done (took 0.066585043 seconds)
    (6/12) benchmarking ("push_single!", 8)...
    done (took 0.066313898 seconds)
    (7/12) benchmarking ("prerend!", 2048)...
    done (took 0.065902 seconds)
    (8/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.065930865 seconds)
    (9/12) benchmarking ("push_multiple!", 8)...
    done (took 0.064927395 seconds)
    (10/12) benchmarking ("append!", 2048)...
    done (took 0.066823467 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067916599 seconds)
    (12/12) benchmarking ("prerend!", 8)...
    done (took 0.068921241 seconds)
  done (took 2.51489358 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.218344312 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.07130012 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069168309 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065622612 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.068370456 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.067812727 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.08265229 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.071452649 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.091749991 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066679383 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.067478386 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070400849 seconds)
  done (took 2.709427589 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.108386176 seconds)
    (2/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.110521417 seconds)
    (3/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.142291172 seconds)
    (4/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.114682087 seconds)
    (5/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.117583233 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.095857723 seconds)
    (7/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.165895413 seconds)
    (8/608) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.095425293 seconds)
    (9/608) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.162579419 seconds)
    (10/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.141666561 seconds)
    (11/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.119186424 seconds)
    (12/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.097184457 seconds)
    (13/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089144509 seconds)
    (14/608) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.069810125 seconds)
    (15/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.100056182 seconds)
    (16/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.120847459 seconds)
    (17/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.141842412 seconds)
    (18/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.074679497 seconds)
    (19/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.115372337 seconds)
    (20/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.210665029 seconds)
    (21/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.134543661 seconds)
    (22/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.136474572 seconds)
    (23/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.148682311 seconds)
    (24/608) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.117368248 seconds)
    (25/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.0938634 seconds)
    (26/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.149650453 seconds)
    (27/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.099038238 seconds)
    (28/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.103950476 seconds)
    (29/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.128989098 seconds)
    (30/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.131132714 seconds)
    (31/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.120304748 seconds)
    (32/608) benchmarking ("sumvector_view", "Matrix{Int64}")...
    done (took 0.098030137 seconds)
    (33/608) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.071839651 seconds)
    (34/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070589773 seconds)
    (35/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.152299424 seconds)
    (36/608) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.109948917 seconds)
    (37/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.126081582 seconds)
    (38/608) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.093676152 seconds)
    (39/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.107521253 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.090170115 seconds)
    (41/608) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.11017871 seconds)
    (42/608) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.069884047 seconds)
    (43/608) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.084715792 seconds)
    (44/608) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.114574964 seconds)
    (45/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088941275 seconds)
    (46/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.136898883 seconds)
    (47/608) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.096049544 seconds)
    (48/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.119256473 seconds)
    (49/608) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.082151261 seconds)
    (50/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.315431028 seconds)
    (51/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.128776203 seconds)
    (52/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.136019068 seconds)
    (53/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.085986171 seconds)
    (54/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105437679 seconds)
    (55/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.139262099 seconds)
    (56/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.113884579 seconds)
    (57/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.136492254 seconds)
    (58/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.10592666 seconds)
    (59/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.083089706 seconds)
    (60/608) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.121511001 seconds)
    (61/608) benchmarking ("sumlinear_view", "Matrix{Float64}")...
    done (took 0.108571026 seconds)
    (62/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.101902614 seconds)
    (63/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.10831239 seconds)
    (64/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079876842 seconds)
    (65/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.177640991 seconds)
    (66/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.090427467 seconds)
    (67/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.113007712 seconds)
    (68/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.113735639 seconds)
    (69/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.095482698 seconds)
    (70/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.095408473 seconds)
    (71/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.105777771 seconds)
    (72/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.137113444 seconds)
    (73/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.129160707 seconds)
    (74/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.127283687 seconds)
    (75/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.140745798 seconds)
    (76/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.096014685 seconds)
    (77/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.122984166 seconds)
    (78/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.102929609 seconds)
    (79/608) benchmarking ("mapr_access", "Matrix{Int64}")...
    done (took 0.131336203 seconds)
    (80/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106663499 seconds)
    (81/608) benchmarking ("sumcartesian", "Matrix{Float64}")...
    done (took 0.073118502 seconds)
    (82/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.125381182 seconds)
    (83/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.134439197 seconds)
    (84/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.102151901 seconds)
    (85/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.103486943 seconds)
    (86/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.134851616 seconds)
    (87/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.095025268 seconds)
    (88/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.080710772 seconds)
    (89/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.103193578 seconds)
    (90/608) benchmarking ("sumlogical_view", "Matrix{Int64}")...
    done (took 0.121363517 seconds)
    (91/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.082950872 seconds)
    (92/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.1169766 seconds)
    (93/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081658012 seconds)
    (94/608) benchmarking ("sum", "3dsubarray")...
    done (took 0.113139627 seconds)
    (95/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.141753155 seconds)
    (96/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102921653 seconds)
    (97/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.11432368 seconds)
    (98/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.125884574 seconds)
    (99/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.255933381 seconds)
    (100/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.15289666 seconds)
    (101/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.106942278 seconds)
    (102/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.071975408 seconds)
    (103/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.116601939 seconds)
    (104/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.111261679 seconds)
    (105/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.156089487 seconds)
    (106/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094769247 seconds)
    (107/608) benchmarking ("sumcartesian", "Matrix{Int64}")...
    done (took 0.075769518 seconds)
    (108/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.100564999 seconds)
    (109/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102467531 seconds)
    (110/608) benchmarking "5d"...
    done (took 0.152639894 seconds)
    (111/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.107144445 seconds)
    (112/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.081174184 seconds)
    (113/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.109405213 seconds)
    (114/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.139453661 seconds)
    (115/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094176139 seconds)
    (116/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.218573853 seconds)
    (117/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.095345476 seconds)
    (118/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.14274878 seconds)
    (119/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.109943166 seconds)
    (120/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.086726029 seconds)
    (121/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.075077257 seconds)
    (122/608) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.092970729 seconds)
    (123/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.117149023 seconds)
    (124/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10912169 seconds)
    (125/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.114593971 seconds)
    (126/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.096534868 seconds)
    (127/608) benchmarking ("sumrange_view", "Matrix{Float64}")...
    done (took 0.086084118 seconds)
    (128/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.086800881 seconds)
    (129/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.117181498 seconds)
    (130/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.096076389 seconds)
    (131/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.081492012 seconds)
    (132/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.115946751 seconds)
    (133/608) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.10190472 seconds)
    (134/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.075592237 seconds)
    (135/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088572437 seconds)
    (136/608) benchmarking ("sumcolon_view", "Matrix{Float64}")...
    done (took 0.077581825 seconds)
    (137/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.146139539 seconds)
    (138/608) benchmarking ("sumrange", "Matrix{Float64}")...
    done (took 0.080749757 seconds)
    (139/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.139680647 seconds)
    (140/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.129199153 seconds)
    (141/608) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.079090588 seconds)
    (142/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.112338211 seconds)
    (143/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.103294558 seconds)
    (144/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.113505746 seconds)
    (145/608) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.101386682 seconds)
    (146/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.124230222 seconds)
    (147/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.147713014 seconds)
    (148/608) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.11986612 seconds)
    (149/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.093136754 seconds)
    (150/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.099787583 seconds)
    (151/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.113692645 seconds)
    (152/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154130438 seconds)
    (153/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.137717365 seconds)
    (154/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.272029298 seconds)
    (155/608) benchmarking ("sumcolon", "Matrix{Int64}")...
    done (took 0.078930104 seconds)
    (156/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.102409266 seconds)
    (157/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.113026941 seconds)
    (158/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.097022533 seconds)
    (159/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.127379923 seconds)
    (160/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.097650015 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.108875153 seconds)
    (162/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.105408443 seconds)
    (163/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.142845772 seconds)
    (164/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.143019171 seconds)
    (165/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.100407312 seconds)
    (166/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.103551052 seconds)
    (167/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.109099967 seconds)
    (168/608) benchmarking "ind2sub"...
    done (took 0.124232901 seconds)
    (169/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.079267904 seconds)
    (170/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.159280619 seconds)
    (171/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104878254 seconds)
    (172/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.118207617 seconds)
    (173/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.085284345 seconds)
    (174/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.141578888 seconds)
    (175/608) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.112788735 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089228536 seconds)
    (177/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.087219393 seconds)
    (178/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.099564816 seconds)
    (179/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.105860983 seconds)
    (180/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108201292 seconds)
    (181/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.147887606 seconds)
    (182/608) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.100564188 seconds)
    (183/608) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.075255358 seconds)
    (184/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.095545975 seconds)
    (185/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.148753729 seconds)
    (186/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081596424 seconds)
    (187/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.113028837 seconds)
    (188/608) benchmarking ("sumcartesian_view", "Matrix{Float64}")...
    done (took 0.092467526 seconds)
    (189/608) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.095889045 seconds)
    (190/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.125366202 seconds)
    (191/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.099528685 seconds)
    (192/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.082770713 seconds)
    (193/608) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.070663248 seconds)
    (194/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.132022281 seconds)
    (195/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.164777656 seconds)
    (196/608) benchmarking ("sumelt_boundscheck", "Matrix{Float64}")...
    done (took 0.0710011 seconds)
    (197/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.119028644 seconds)
    (198/608) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.113941234 seconds)
    (199/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.106179068 seconds)
    (200/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.125624833 seconds)
    (201/608) benchmarking ("sumelt", "1:100000")...
    done (took 0.070261135 seconds)
    (202/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.122693943 seconds)
    (203/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.145738124 seconds)
    (204/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.123432369 seconds)
    (205/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.327479297 seconds)
    (206/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.16710524 seconds)
    (207/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.118670191 seconds)
    (208/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.12005655 seconds)
    (209/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.113637433 seconds)
    (210/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106685863 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.080002955 seconds)
    (212/608) benchmarking ("sumlogical", "Matrix{Float64}")...
    done (took 0.127205004 seconds)
    (213/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.136059013 seconds)
    (214/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.094484399 seconds)
    (215/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.093578988 seconds)
    (216/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.13675097 seconds)
    (217/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.121942433 seconds)
    (218/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.137637173 seconds)
    (219/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.118027475 seconds)
    (220/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.120635104 seconds)
    (221/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.106351751 seconds)
    (222/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.110446127 seconds)
    (223/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.10304806 seconds)
    (224/608) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.107156883 seconds)
    (225/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.146408445 seconds)
    (226/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.123254569 seconds)
    (227/608) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.125575834 seconds)
    (228/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.086545037 seconds)
    (229/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106963188 seconds)
    (230/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.12136405 seconds)
    (231/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.13923426 seconds)
    (232/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.082567583 seconds)
    (233/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.144322663 seconds)
    (234/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.086560615 seconds)
    (235/608) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.121900169 seconds)
    (236/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.07846863 seconds)
    (237/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.124857132 seconds)
    (238/608) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.077773906 seconds)
    (239/608) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.109422891 seconds)
    (240/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.079789449 seconds)
    (241/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.102509563 seconds)
    (242/608) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.070148726 seconds)
    (243/608) benchmarking ("sumeach", "1:100000")...
    done (took 0.07470537 seconds)
    (244/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.146499092 seconds)
    (245/608) benchmarking ("sumvector", "1:100000")...
    done (took 0.115916806 seconds)
    (246/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.110158794 seconds)
    (247/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104156433 seconds)
    (248/608) benchmarking ("sumlogical", "1:100000")...
    done (took 0.142703617 seconds)
    (249/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.140977462 seconds)
    (250/608) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.080061346 seconds)
    (251/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.110222242 seconds)
    (252/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.120113778 seconds)
    (253/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.104365822 seconds)
    (254/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.121924623 seconds)
    (255/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.114288753 seconds)
    (256/608) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.270296313 seconds)
    (257/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.097202287 seconds)
    (258/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.111648032 seconds)
    (259/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.084889323 seconds)
    (260/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.079863369 seconds)
    (261/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115553881 seconds)
    (262/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092747562 seconds)
    (263/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.123098238 seconds)
    (264/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.085042733 seconds)
    (265/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.074074644 seconds)
    (266/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.137637978 seconds)
    (267/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102808921 seconds)
    (268/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.095174563 seconds)
    (269/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.080107473 seconds)
    (270/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.107466956 seconds)
    (271/608) benchmarking "4d"...
    done (took 0.12494002 seconds)
    (272/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.094135752 seconds)
    (273/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.086510751 seconds)
    (274/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.119156232 seconds)
    (275/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.107449069 seconds)
    (276/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.141852647 seconds)
    (277/608) benchmarking ("sumcartesian_view", "Matrix{Int64}")...
    done (took 0.093686166 seconds)
    (278/608) benchmarking ("sumvector", "Matrix{Float64}")...
    done (took 0.0971982 seconds)
    (279/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.123845869 seconds)
    (280/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.081021365 seconds)
    (281/608) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.092199538 seconds)
    (282/608) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.070210594 seconds)
    (283/608) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.087773744 seconds)
    (284/608) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.076927166 seconds)
    (285/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129144523 seconds)
    (286/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.077693815 seconds)
    (287/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.118491426 seconds)
    (288/608) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.068634279 seconds)
    (289/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.131857612 seconds)
    (290/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08791656 seconds)
    (291/608) benchmarking ("sumvector_view", "Matrix{Float64}")...
    done (took 0.093375029 seconds)
    (292/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.10339588 seconds)
    (293/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.111336636 seconds)
    (294/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.130804767 seconds)
    (295/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.097027797 seconds)
    (296/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.145567341 seconds)
    (297/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091986907 seconds)
    (298/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.123425172 seconds)
    (299/608) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.111771315 seconds)
    (300/608) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.098689592 seconds)
    (301/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.091857157 seconds)
    (302/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.107479403 seconds)
    (303/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.105649279 seconds)
    (304/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.128913332 seconds)
    (305/608) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.100602164 seconds)
    (306/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.129698995 seconds)
    (307/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.150987615 seconds)
    (308/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108783651 seconds)
    (309/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.151829103 seconds)
    (310/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.096393069 seconds)
    (311/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.133037197 seconds)
    (312/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.118427151 seconds)
    (313/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.309448018 seconds)
    (314/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.112831387 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.167647594 seconds)
    (316/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.139976721 seconds)
    (317/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.112646757 seconds)
    (318/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.113698205 seconds)
    (319/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.07633374 seconds)
    (320/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.09652972 seconds)
    (321/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.107030576 seconds)
    (322/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.114355346 seconds)
    (323/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.175441215 seconds)
    (324/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.127438414 seconds)
    (325/608) benchmarking ("sumlinear", "Matrix{Int64}")...
    done (took 0.075723134 seconds)
    (326/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.110204913 seconds)
    (327/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.097999878 seconds)
    (328/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.110880256 seconds)
    (329/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106804899 seconds)
    (330/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.084426242 seconds)
    (331/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.147549254 seconds)
    (332/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103854525 seconds)
    (333/608) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.089834459 seconds)
    (334/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.114196212 seconds)
    (335/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.093779087 seconds)
    (336/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.107393282 seconds)
    (337/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078863097 seconds)
    (338/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.104908346 seconds)
    (339/608) benchmarking ("sumcolon", "1:100000")...
    done (took 0.109050243 seconds)
    (340/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.098966274 seconds)
    (341/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.101292103 seconds)
    (342/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.122774526 seconds)
    (343/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.13482726 seconds)
    (344/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.11811769 seconds)
    (345/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.150868862 seconds)
    (346/608) benchmarking "3d"...
    done (took 0.10737864 seconds)
    (347/608) benchmarking ("sum", "3darray")...
    done (took 0.097565296 seconds)
    (348/608) benchmarking ("sumlogical", "Matrix{Int64}")...
    done (took 0.125281233 seconds)
    (349/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.118647623 seconds)
    (350/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.117311953 seconds)
    (351/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.092351567 seconds)
    (352/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.092075983 seconds)
    (353/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.145028319 seconds)
    (354/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.130214521 seconds)
    (355/608) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.138129418 seconds)
    (356/608) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.108896218 seconds)
    (357/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.11647081 seconds)
    (358/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.120418162 seconds)
    (359/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106208099 seconds)
    (360/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.132656875 seconds)
    (361/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.115743313 seconds)
    (362/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.135969307 seconds)
    (363/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.086197293 seconds)
    (364/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.256249764 seconds)
    (365/608) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.072149715 seconds)
    (366/608) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.073215213 seconds)
    (367/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.127344789 seconds)
    (368/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.110635568 seconds)
    (369/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.114428825 seconds)
    (370/608) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.100739009 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Matrix{Int64}")...
    done (took 0.073853891 seconds)
    (372/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.104964472 seconds)
    (373/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.112314787 seconds)
    (374/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.077494017 seconds)
    (375/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092325261 seconds)
    (376/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.095956053 seconds)
    (377/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.098450438 seconds)
    (378/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.09543378 seconds)
    (379/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.109053187 seconds)
    (380/608) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.114153629 seconds)
    (381/608) benchmarking ("sumrange", "Matrix{Int64}")...
    done (took 0.092722404 seconds)
    (382/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.105665462 seconds)
    (383/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.10094072 seconds)
    (384/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.148071106 seconds)
    (385/608) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.10354952 seconds)
    (386/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089716432 seconds)
    (387/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.145048823 seconds)
    (388/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.15067161 seconds)
    (389/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089219776 seconds)
    (390/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094409324 seconds)
    (391/608) benchmarking ("sumelt", "Matrix{Int64}")...
    done (took 0.073140158 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.080893694 seconds)
    (393/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.114709655 seconds)
    (394/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.153924752 seconds)
    (395/608) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.155993273 seconds)
    (396/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081049257 seconds)
    (397/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.089904148 seconds)
    (398/608) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.088911255 seconds)
    (399/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089683109 seconds)
    (400/608) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.073914729 seconds)
    (401/608) benchmarking ("sumeach_view", "Matrix{Float64}")...
    done (took 0.09171987 seconds)
    (402/608) benchmarking ("sumcolon", "Matrix{Float64}")...
    done (took 0.091447702 seconds)
    (403/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.109351272 seconds)
    (404/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.105022869 seconds)
    (405/608) benchmarking ("sumlogical_view", "Matrix{Float64}")...
    done (took 0.117994937 seconds)
    (406/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.109498475 seconds)
    (407/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077910558 seconds)
    (408/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.106429379 seconds)
    (409/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.105323616 seconds)
    (410/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.098933765 seconds)
    (411/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.11482499 seconds)
    (412/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.128090628 seconds)
    (413/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.133428646 seconds)
    (414/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.149461972 seconds)
    (415/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.120298265 seconds)
    (416/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.1134187 seconds)
    (417/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080028246 seconds)
    (418/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.084296057 seconds)
    (419/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.079223798 seconds)
    (420/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.082993685 seconds)
    (421/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.107094692 seconds)
    (422/608) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.083006376 seconds)
    (423/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.08099657 seconds)
    (424/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.321653758 seconds)
    (425/608) benchmarking ("sumcolon_view", "Matrix{Int64}")...
    done (took 0.095658084 seconds)
    (426/608) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.107151297 seconds)
    (427/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.110517468 seconds)
    (428/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.089851881 seconds)
    (429/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077166018 seconds)
    (430/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.14078622 seconds)
    (431/608) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.071851177 seconds)
    (432/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.138110363 seconds)
    (433/608) benchmarking ("sumeach", "Matrix{Int64}")...
    done (took 0.073426364 seconds)
    (434/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.085015661 seconds)
    (435/608) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.085844132 seconds)
    (436/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.08223769 seconds)
    (437/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.096301033 seconds)
    (438/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.141186027 seconds)
    (439/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.114458106 seconds)
    (440/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.115095152 seconds)
    (441/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.107984085 seconds)
    (442/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103163848 seconds)
    (443/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.163420037 seconds)
    (444/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.159636938 seconds)
    (445/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081067625 seconds)
    (446/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.142772012 seconds)
    (447/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077076528 seconds)
    (448/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078446605 seconds)
    (449/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.077435111 seconds)
    (450/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.112118123 seconds)
    (451/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092877914 seconds)
    (452/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.118747121 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.145816433 seconds)
    (454/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094007466 seconds)
    (455/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10453697 seconds)
    (456/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081844679 seconds)
    (457/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.150045401 seconds)
    (458/608) benchmarking ("sumeach_view", "Matrix{Int64}")...
    done (took 0.105771015 seconds)
    (459/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.109219115 seconds)
    (460/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.091112722 seconds)
    (461/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.082191467 seconds)
    (462/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.148225453 seconds)
    (463/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.08269178 seconds)
    (464/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.084715202 seconds)
    (465/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.094096852 seconds)
    (466/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.117398657 seconds)
    (467/608) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.077903314 seconds)
    (468/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.110081696 seconds)
    (469/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.090085571 seconds)
    (470/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.083674476 seconds)
    (471/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.170897783 seconds)
    (472/608) benchmarking "sub2ind"...
    done (took 0.712685243 seconds)
    (473/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.096049609 seconds)
    (474/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.079520894 seconds)
    (475/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.099646172 seconds)
    (476/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.149335565 seconds)
    (477/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.139574697 seconds)
    (478/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103382181 seconds)
    (479/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.288549241 seconds)
    (480/608) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.121937555 seconds)
    (481/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.101866614 seconds)
    (482/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.096197448 seconds)
    (483/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.109475272 seconds)
    (484/608) benchmarking "6d"...
    done (took 0.195111257 seconds)
    (485/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.07599399 seconds)
    (486/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.095101922 seconds)
    (487/608) benchmarking ("sumrange", "1:100000")...
    done (took 0.10424739 seconds)
    (488/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.097856039 seconds)
    (489/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.100993481 seconds)
    (490/608) benchmarking ("sumrange_view", "Matrix{Int64}")...
    done (took 0.09952547 seconds)
    (491/608) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.091012107 seconds)
    (492/608) benchmarking ("sumvector", "Matrix{Int64}")...
    done (took 0.094408307 seconds)
    (493/608) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.087773093 seconds)
    (494/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.07992153 seconds)
    (495/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.107936633 seconds)
    (496/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088517083 seconds)
    (497/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.095602342 seconds)
    (498/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.110456438 seconds)
    (499/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.084801351 seconds)
    (500/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.090578921 seconds)
    (501/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.134035678 seconds)
    (502/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.105171521 seconds)
    (503/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.082713943 seconds)
    (504/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088874495 seconds)
    (505/608) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.106274466 seconds)
    (506/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09067672 seconds)
    (507/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104857748 seconds)
    (508/608) benchmarking ("sumelt", "Matrix{Float64}")...
    done (took 0.071052171 seconds)
    (509/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.116329668 seconds)
    (510/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.093435257 seconds)
    (511/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.122270485 seconds)
    (512/608) benchmarking ("sumlinear_view", "Matrix{Int64}")...
    done (took 0.100487032 seconds)
    (513/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.111086032 seconds)
    (514/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.133617128 seconds)
    (515/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.096965367 seconds)
    (516/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.141810552 seconds)
    (517/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.112362254 seconds)
    (518/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.126183143 seconds)
    (519/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.092152241 seconds)
    (520/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080465456 seconds)
    (521/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.12949347 seconds)
    (522/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.092379549 seconds)
    (523/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079597626 seconds)
    (524/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.14930833 seconds)
    (525/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.099684733 seconds)
    (526/608) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.095431087 seconds)
    (527/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.107680481 seconds)
    (528/608) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.098363809 seconds)
    (529/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.117801724 seconds)
    (530/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.123162104 seconds)
    (531/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.117342167 seconds)
    (532/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.101277176 seconds)
    (533/608) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.082822419 seconds)
    (534/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.109115252 seconds)
    (535/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.28450407 seconds)
    (536/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087383955 seconds)
    (537/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079727095 seconds)
    (538/608) benchmarking ("sumlinear", "1:100000")...
    done (took 0.075148372 seconds)
    (539/608) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.076633997 seconds)
    (540/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.109151978 seconds)
    (541/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085795977 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.08363771 seconds)
    (543/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.116280124 seconds)
    (544/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.090078813 seconds)
    (545/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.107425145 seconds)
    (546/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.104374925 seconds)
    (547/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.12442994 seconds)
    (548/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.089994647 seconds)
    (549/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.102965385 seconds)
    (550/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.113411512 seconds)
    (551/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.093258803 seconds)
    (552/608) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.113520239 seconds)
    (553/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.103364951 seconds)
    (554/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.130150222 seconds)
    (555/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.175028343 seconds)
    (556/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.127074926 seconds)
    (557/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.130941309 seconds)
    (558/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.133258733 seconds)
    (559/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.076682139 seconds)
    (560/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.075921097 seconds)
    (561/608) benchmarking ("sumeach", "Matrix{Float64}")...
    done (took 0.06862045 seconds)
    (562/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.115992364 seconds)
    (563/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.079596853 seconds)
    (564/608) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.089400242 seconds)
    (565/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.081092916 seconds)
    (566/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.134964213 seconds)
    (567/608) benchmarking "2d"...
    done (took 0.082678223 seconds)
    (568/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.114366517 seconds)
    (569/608) benchmarking "7d"...
    done (took 0.246032367 seconds)
    (570/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.081440179 seconds)
    (571/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.095409597 seconds)
    (572/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09797934 seconds)
    (573/608) benchmarking ("sumlinear", "Matrix{Float64}")...
    done (took 0.07052061 seconds)
    (574/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.086662253 seconds)
    (575/608) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.110258627 seconds)
    (576/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.089182343 seconds)
    (577/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081763439 seconds)
    (578/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.121229791 seconds)
    (579/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.084147733 seconds)
    (580/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.131601488 seconds)
    (581/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.113620462 seconds)
    (582/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102023724 seconds)
    (583/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.097768709 seconds)
    (584/608) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.082845409 seconds)
    (585/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.117579974 seconds)
    (586/608) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.10684185 seconds)
    (587/608) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.133827058 seconds)
    (588/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.10035624 seconds)
    (589/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.07668033 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.127832717 seconds)
    (591/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.106857026 seconds)
    (592/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.144437 seconds)
    (593/608) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.076345784 seconds)
    (594/608) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085681899 seconds)
    (595/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.310835999 seconds)
    (596/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103263792 seconds)
    (597/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.129578751 seconds)
    (598/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.081092355 seconds)
    (599/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.15017225 seconds)
    (600/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.143919315 seconds)
    (601/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.100439645 seconds)
    (602/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.133746915 seconds)
    (603/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.071692653 seconds)
    (604/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.08761522 seconds)
    (605/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.090216096 seconds)
    (606/608) benchmarking ("mapr_access", "Matrix{Float64}")...
    done (took 0.130092692 seconds)
    (607/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085358004 seconds)
    (608/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.111736041 seconds)
  done (took 70.318845189 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.186461455 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.180631059 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.123575994 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.136523442 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.292273973 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.304248263 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.155525985 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.126269138 seconds)
  done (took 3.372847496 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hcat", 500)...
    done (took 0.071520953 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.084091197 seconds)
    (3/17) benchmarking ("vcat_setind", 5)...
    done (took 0.081724062 seconds)
    (4/17) benchmarking ("catnd_setind", 500)...
    done (took 0.250234869 seconds)
    (5/17) benchmarking ("vcat", 500)...
    done (took 0.10122373 seconds)
    (6/17) benchmarking ("vcat", 5)...
    done (took 0.070654676 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.0754206 seconds)
    (8/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.085328411 seconds)
    (9/17) benchmarking ("vcat_setind", 500)...
    done (took 0.069542512 seconds)
    (10/17) benchmarking ("hvcat", 5)...
    done (took 0.068948125 seconds)
    (11/17) benchmarking ("hcat_setind", 500)...
    done (took 0.104140301 seconds)
    (12/17) benchmarking ("hcat", 5)...
    done (took 0.068425767 seconds)
    (13/17) benchmarking ("hvcat", 500)...
    done (took 0.068085704 seconds)
    (14/17) benchmarking ("catnd", 500)...
    done (took 0.538621754 seconds)
    (15/17) benchmarking ("hcat_setind", 5)...
    done (took 0.068377499 seconds)
    (16/17) benchmarking ("catnd", 5)...
    done (took 0.075351927 seconds)
    (17/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.069022875 seconds)
  done (took 3.857391649 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.358872392 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.549757572 seconds)
    (3/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 1.360262986 seconds)
    (4/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.756760016 seconds)
    (5/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.169078828 seconds)
    (6/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.726816477 seconds)
    (7/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.077688971 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.085710261 seconds)
    (9/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.934010549 seconds)
    (10/12) benchmarking ("gramschmidt!", 1000)...
    done (took 3.406082817 seconds)
    (11/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.163985419 seconds)
    (12/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.094139808 seconds)
  done (took 21.567134209 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 4)...
    done (took 0.079790451 seconds)
    (2/5) benchmarking ("setindex!", 3)...
    done (took 0.123271539 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.123061395 seconds)
    (4/5) benchmarking ("setindex!", 1)...
    done (took 0.076746932 seconds)
    (5/5) benchmarking ("setindex!", 2)...
    done (took 0.075988455 seconds)
  done (took 2.363908516 seconds)
done (took 124.816035903 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 0.088384101 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 0.179669252 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 0.07203538 seconds)
  done (took 2.197525796 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.122958062 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.120691752 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.120353203 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.121754859 seconds)
  done (took 2.405063304 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.079521743 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.079346114 seconds)
  done (took 2.075481626 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 0.236528758 seconds)
  (6/15) benchmarking "18129"...
  done (took 0.221466453 seconds)
  (7/15) benchmarking "20517"...
  done (took 0.096978781 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.086917149 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.084876881 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.085442484 seconds)
  done (took 2.182621202 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.076464328 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.076546598 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.075470461 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.074675558 seconds)
  done (took 2.208966086 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.174538687 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.069222687 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.069885958 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.073120793 seconds)
  done (took 2.292877051 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 0.08988943 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 0.091003606 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 0.120069091 seconds)
  done (took 2.188856649 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.087126347 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.086537255 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080982857 seconds)
  done (took 2.135923596 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.11401955 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.100187191 seconds)
  done (took 2.08454641 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.083694309 seconds)
  done (took 1.964705022 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.095803612 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.10238991 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.187249056 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.153005185 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.191607125 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.17528302 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.079097616 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.080120413 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076081274 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.074602362 seconds)
  done (took 3.090933065 seconds)
done (took 27.372324786 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.087635212 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.196373751 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.320694816 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.087962858 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.654203663 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.315710177 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.738136428 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094383504 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.102162407 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069810711 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086738852 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.634333368 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.737260247 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.150912352 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.722509657 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.138317612 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.810429977 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071959553 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068990395 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069470695 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.72026209 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070556171 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068482441 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069906198 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.806202548 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.336385602 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072842352 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.136736512 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071209557 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075270594 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.315755503 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072591783 seconds)
  done (took 14.833758757 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077569533 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.149283695 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072902089 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083200366 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.07074845 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071249611 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.073656207 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070328688 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.112547942 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069206423 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087255717 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069006186 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.074479533 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072203364 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091724236 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070554803 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071446735 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069286312 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069081299 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071095463 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090218495 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070223611 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.0708432 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070707209 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.07111302 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085970469 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072737978 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070689187 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070225401 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.076693023 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075818101 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071692533 seconds)
  done (took 4.38100725 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.131927182 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.133744323 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075482596 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.111125721 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.120194605 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072205847 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.153992016 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094191016 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.118330564 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071186608 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089730068 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.072177693 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.108953826 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071612581 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.09199299 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070960653 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072764082 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070270598 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069497677 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070076575 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089096175 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069405954 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069634936 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070038114 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070781371 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.086752303 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07156797 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.072922989 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071225617 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075440056 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07650515 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071270879 seconds)
  done (took 4.66188321 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072178969 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.071421389 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.077578093 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.082573715 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069282646 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071672738 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073174845 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.068808814 seconds)
  done (took 2.477872094 seconds)
done (took 28.259187148 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081272634 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.067633649 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.071916802 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.089288464 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.07405763 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.11166204 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.06509556 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075438509 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072033648 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.07163903 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.072674311 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.066782848 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070633228 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.065201395 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.072776564 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067014885 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.114549952 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.070788031 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.112517737 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.114095351 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070624135 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.072283574 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074352458 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.113931051 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.11350618 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.113132994 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.075318878 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.071715598 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.066409477 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.069434305 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.172564893 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.18698592 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.07607701 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.11864212 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.06696862 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068280435 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072696267 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.07185401 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.117709839 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.078147756 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070874718 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.07765941 seconds)
  done (took 5.486911284 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.194959209 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.198197056 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.190852268 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081586593 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.094173877 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081296513 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.196988908 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.07829973 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.076805531 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.196112772 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074658889 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.076931988 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078353532 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.068781292 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.075843447 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.074134091 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.079607986 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.070704056 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.075940381 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.075875063 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.197174027 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.070682152 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.08395198 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079454406 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.07471609 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.079884222 seconds)
  done (took 4.657058746 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.07537179 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.088847008 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.09241069 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.147868156 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.111224321 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.083470025 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.08192158 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.094154658 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.107049316 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069646921 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.072316598 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.099544265 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.100760369 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.07698476 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.108869958 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.086401196 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.079973002 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069268014 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.074556416 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.103601575 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.094404962 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.088185372 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.103937355 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.089343412 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067795154 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.07990974 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.077190602 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.087548683 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.078085274 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.083602116 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.074532917 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071904276 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.068006443 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080123428 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.0725338 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.067082293 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.093915914 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.084287171 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.086562481 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.110166872 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.078486285 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069594581 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.146901953 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.135115584 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.070422536 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.070655467 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.072161217 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.08441559 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.072426572 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.101961972 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.087354062 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068866634 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.087752764 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.070064797 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.070678089 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08526648 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070861272 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070169208 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.080236841 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.074511602 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.089560033 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.074203974 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.089778467 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068399704 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.080792176 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.06987566 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070294954 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067042587 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.102913123 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076014865 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.120602307 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.072972111 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.069250212 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.085300215 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.084610024 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.078666663 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.072232233 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.092336711 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.082425524 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.073864456 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.082001558 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.073887195 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072665185 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.10844674 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070131213 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.067818664 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.066721938 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.071078016 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072923663 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.070993912 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082438029 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.069536421 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.07211849 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084387637 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.069738009 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.070065364 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.071892534 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.070199653 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.068064301 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081442687 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.075160989 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.074149434 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.08541404 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.07319539 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.074882738 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.086017091 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.079635651 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.069179914 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071499673 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072857435 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.073696952 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.076706433 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.076165021 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.074382033 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.07782021 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.079292709 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.077751874 seconds)
  done (took 11.490186452 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.209268616 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.196273273 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070079421 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.192150513 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.07702121 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.125590168 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.19354755 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.132103185 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068627492 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069347674 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.067241761 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.140986132 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.136407797 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.147188902 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.117718348 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070394344 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.096812881 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.146717933 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.199969135 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.194487652 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.097065683 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.080193184 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.073656926 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.07200066 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.073086959 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.081047325 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.088782901 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.081604808 seconds)
  done (took 5.26474765 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.076992552 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.085100874 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.072985946 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.093815145 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.086406663 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069652876 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.072487743 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071947135 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.088944993 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.077534593 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.07124979 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.075491664 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073888051 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.070109796 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070234277 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075920624 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075410269 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.066602394 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.073033377 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.076555348 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.082902529 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.160995954 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.075556855 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.072967627 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.071613639 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.069569665 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.07602523 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.077771426 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069376654 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.103614315 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066537684 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.07374945 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.084346959 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.07055715 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.06971638 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.071396068 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.070933644 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.071422858 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.072424148 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.068328396 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.067990147 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077456042 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.071178224 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.077891572 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.087508298 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.079230273 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.070657121 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.071461312 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072031394 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065804658 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.072853917 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.0752584 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.073715694 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.079124592 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073001172 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.070852527 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069707882 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.099502244 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.074876602 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068266441 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.068035688 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066439052 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.070202619 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.076059991 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.085256965 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.069884572 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066516298 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.068027558 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.075592876 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.083279308 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.06854554 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.075449907 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.066874591 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070983567 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072543533 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.074173066 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.071409739 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.068455948 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.068852748 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.070387049 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.070844566 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068689604 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.070234383 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.073726394 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066619561 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066965313 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.069782662 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.070160528 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.07408497 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069580676 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072051128 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.073184823 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.071116216 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.072546192 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.075689252 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072609852 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.089778286 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.078012796 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.072325329 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067727342 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.08464637 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071470412 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068626336 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.073112195 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075801724 seconds)
  done (took 9.807378298 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.100491286 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.071352974 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.091433382 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.10393339 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.081486135 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.076364455 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.08445819 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.07166426 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.091277461 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.067213533 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.07917143 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.066505569 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.084000382 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.078550421 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.072377402 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.08000348 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.070324464 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.089104582 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082729042 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.066025699 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.07949028 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081344162 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.082943951 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.087415647 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.088413482 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.08893886 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.081999211 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.071348855 seconds)
  done (took 4.221702814 seconds)
done (took 42.805557138 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.96840041 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.176936703 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.959368193 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.392327783 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.029855832 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.000249011 seconds)
  (7/12) benchmarking "nbody"...
  done (took 3.037280188 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.942953551 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.519991009 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 7.040965125 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.791583189 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.502968767 seconds)
done (took 69.342823132 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 7.15101365 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 2.120889804 seconds)
    (2/2) benchmarking "String"...
    done (took 2.189157721 seconds)
  done (took 6.279195526 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 2.395924215 seconds)
    (2/3) benchmarking "different length"...
    done (took 1.951546169 seconds)
    (3/3) benchmarking "different"...
    done (took 2.008394226 seconds)
  done (took 8.250151383 seconds)
  (4/7) benchmarking "replace"...
  done (took 3.242936036 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 6.788350973 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.285399042 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.937532097 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.940251251 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.412419357 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.093269254 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.559229803 seconds)
  done (took 33.899694194 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 7.016805037 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.214273805 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 5.309675799 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 5.435290506 seconds)
  done (took 21.904000767 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 2.431085763 seconds)
    (2/4) benchmarking "equal"...
    done (took 2.335879538 seconds)
    (3/4) benchmarking "different length"...
    done (took 2.313297836 seconds)
    (4/4) benchmarking "different"...
    done (took 2.382968425 seconds)
  done (took 11.480347792 seconds)
done (took 94.247640717 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.921576138 seconds)
    (2/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.43970538 seconds)
    (3/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.960548358 seconds)
    (4/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 2.219036767 seconds)
    (5/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.991880135 seconds)
    (6/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 7.01143708 seconds)
    (7/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 7.011442803 seconds)
    (8/32) benchmarking ("schur", "Matrix", 256)...
    done (took 7.561390367 seconds)
    (9/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.935371389 seconds)
    (10/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.915321856 seconds)
    (11/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.985301912 seconds)
    (12/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.9477173 seconds)
    (13/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.978546288 seconds)
    (14/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.990621192 seconds)
    (15/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 7.004290056 seconds)
    (16/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 7.027937001 seconds)
    (17/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.235400743 seconds)
    (18/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.921104358 seconds)
    (19/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.934032783 seconds)
    (20/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.729234443 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 4.137905064 seconds)
    (22/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.931769764 seconds)
    (23/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.938225456 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.993952561 seconds)
    (25/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.388025992 seconds)
    (26/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.924707005 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.364093626 seconds)
    (28/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.937468532 seconds)
    (29/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.572693442 seconds)
    (30/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.958200479 seconds)
    (31/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.937566399 seconds)
    (32/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.944609191 seconds)
  done (took 210.60993567 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.957954799 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 4.704381151 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 4.706515767 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.919059503 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 5.26055636 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.276671795 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.75917926 seconds)
    (8/36) benchmarking "gemv"...
    done (took 5.26978077 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.916983998 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.937472087 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.781617887 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.950263425 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.896392257 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.527984784 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.990828729 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.979752379 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.787247969 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.669107606 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.96476472 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.878655501 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.946430197 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 4.463625643 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 4.416507983 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.733359245 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.966978531 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.983826886 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.925034939 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.92666042 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.397634509 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.769776684 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.945587781 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.944914817 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.100624744 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 3.181734251 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.923886023 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.943145389 seconds)
  done (took 182.576044263 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.291666492 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.942695322 seconds)
    (2/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.959390931 seconds)
    (3/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 2.331688317 seconds)
    (4/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.93060811 seconds)
    (5/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 4.777477608 seconds)
    (6/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.915497756 seconds)
    (7/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.912372152 seconds)
    (8/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.938301009 seconds)
    (9/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.941076595 seconds)
    (10/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.979435691 seconds)
    (11/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 2.007107528 seconds)
    (12/118) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.275137961 seconds)
    (13/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.943757918 seconds)
    (14/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.916009154 seconds)
    (15/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.913711748 seconds)
    (16/118) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.105156285 seconds)
    (17/118) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.916433625 seconds)
    (18/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.951570531 seconds)
    (19/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.912632402 seconds)
    (20/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.912825182 seconds)
    (21/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 2.016997375 seconds)
    (22/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.257927279 seconds)
    (23/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.034833009 seconds)
    (24/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.915656218 seconds)
    (25/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.969243973 seconds)
    (26/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 2.02388319 seconds)
    (27/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.922346755 seconds)
    (28/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.925509265 seconds)
    (29/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.022096641 seconds)
    (30/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.916958616 seconds)
    (31/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 2.042965751 seconds)
    (32/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 2.025309658 seconds)
    (33/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.99025866 seconds)
    (34/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.970309611 seconds)
    (35/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.922936995 seconds)
    (36/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.119411404 seconds)
    (37/118) benchmarking ("3-arg mul!", 2)...
    done (took 1.969203869 seconds)
    (38/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.958991281 seconds)
    (39/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.934803642 seconds)
    (40/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 2.009630951 seconds)
    (41/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.943414434 seconds)
    (42/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 6.039434361 seconds)
    (43/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 2.017115855 seconds)
    (44/118) benchmarking ("5-arg mul!", 3)...
    done (took 1.916312642 seconds)
    (45/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.94567893 seconds)
    (46/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.367524093 seconds)
    (47/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.487593053 seconds)
    (48/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.920457118 seconds)
    (49/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.929395781 seconds)
    (50/118) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.913658492 seconds)
    (51/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.913509851 seconds)
    (52/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.914096486 seconds)
    (53/118) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.914381212 seconds)
    (54/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.462262924 seconds)
    (55/118) benchmarking ("5-arg mul!", 2)...
    done (took 1.919363612 seconds)
    (56/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.949935926 seconds)
    (57/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.387611993 seconds)
    (58/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.921491494 seconds)
    (59/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.930645549 seconds)
    (60/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.952393159 seconds)
    (61/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.945716912 seconds)
    (62/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.92640735 seconds)
    (63/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.947504165 seconds)
    (64/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 2.041542972 seconds)
    (65/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 3.520531513 seconds)
    (66/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.781005134 seconds)
    (67/118) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.919609672 seconds)
    (68/118) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.287080789 seconds)
    (69/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 3.669111097 seconds)
    (70/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.920456933 seconds)
    (71/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.67776585 seconds)
    (72/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 2.048072171 seconds)
    (73/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.921510565 seconds)
    (74/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 2.093958633 seconds)
    (75/118) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.919732046 seconds)
    (76/118) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.916568055 seconds)
    (77/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.937616211 seconds)
    (78/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.916051171 seconds)
    (79/118) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.966309707 seconds)
    (80/118) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.921292612 seconds)
    (81/118) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.952518511 seconds)
    (82/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.922752817 seconds)
    (83/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 2.025174448 seconds)
    (84/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.920816547 seconds)
    (85/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.933497669 seconds)
    (86/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 22.374775755 seconds)
    (87/118) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.023395157 seconds)
    (88/118) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.92516282 seconds)
    (89/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.936173651 seconds)
    (90/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 2.052687623 seconds)
    (91/118) benchmarking ("3-arg mul!", 3)...
    done (took 1.920075287 seconds)
    (92/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.917660501 seconds)
    (93/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.923924268 seconds)
    (94/118) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.926730935 seconds)
    (95/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.930125518 seconds)
    (96/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.917611995 seconds)
    (97/118) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.916569118 seconds)
    (98/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.238660083 seconds)
    (99/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.922441538 seconds)
    (100/118) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 22.401675965 seconds)
    (101/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.305084085 seconds)
    (102/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 2.018308707 seconds)
    (103/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.366512485 seconds)
    (104/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.812360024 seconds)
    (105/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.943560712 seconds)
    (106/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.941005323 seconds)
    (107/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.936979076 seconds)
    (108/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.920224238 seconds)
    (109/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.918551262 seconds)
    (110/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.974722458 seconds)
    (111/118) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.940033977 seconds)
    (112/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.917889425 seconds)
    (113/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.919814375 seconds)
    (114/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.918970455 seconds)
    (115/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.918540968 seconds)
    (116/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.952378436 seconds)
    (117/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.941559067 seconds)
    (118/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.919632959 seconds)
  done (took 426.002969117 seconds)
done (took 823.413872321 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 512)...
    done (took 2.605872303 seconds)
    (2/5) benchmarking ("identity", 4096)...
    done (took 2.685918362 seconds)
    (3/5) benchmarking ("identity", 2)...
    done (took 2.502198905 seconds)
    (4/5) benchmarking ("identity", 1024)...
    done (took 2.551568489 seconds)
    (5/5) benchmarking ("identity", 64)...
    done (took 2.507121178 seconds)
  done (took 14.707076518 seconds)
done (took 16.556553174 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 1.944799248 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.942453334 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 1.935577854 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.958365983 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 1.941573307 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 1.938778086 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 1.948287474 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 1.957831196 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 1.968794529 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 1.938642483 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 2.001291115 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 1.964944824 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 1.985809145 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 2.010178824 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.019819542 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 1.984994858 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 1.972270938 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 1.957948661 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 1.993224617 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 1.980674757 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 1.968500681 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.968165347 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 1.994377935 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 1.994168056 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.988276099 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 1.967980735 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 1.964151023 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.99535125 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 1.990186431 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.973820336 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 1.98472708 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 1.977458519 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 1.975684464 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.033786597 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 1.993858426 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.98203074 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.988828757 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 2.003354052 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 1.99727487 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 1.993272233 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 1.980377323 seconds)
  done (took 82.917449876 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.957503297 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.142994497 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.248646674 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 2.018995045 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.961320247 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.235262529 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 2.040308147 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 2.13851542 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 2.114941733 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.247928212 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.288932244 seconds)
  done (took 25.284038495 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.959584384 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.135652073 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.24764741 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 2.02790469 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.981305664 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.24149099 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 2.036076064 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 2.119407505 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 2.173433954 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.256654855 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.265367021 seconds)
  done (took 25.356308857 seconds)
done (took 135.416212953 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 2.524582323 seconds)
    (2/2) benchmarking "11899"...
    done (took 2.011674407 seconds)
  done (took 6.434097632 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.955891119 seconds)
    (2/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 2.003061772 seconds)
    (3/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.134990522 seconds)
    (4/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.975554961 seconds)
    (5/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.977853463 seconds)
    (6/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.975187072 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.963019824 seconds)
    (8/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.988706575 seconds)
  done (took 17.854191454 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.969776744 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.949978131 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.980157743 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.973594967 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.950338157 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.973775154 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.961390747 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.970953207 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.98841082 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.963944085 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.966042084 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.976049137 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.96453793 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.995857867 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.961433874 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.953895748 seconds)
  done (took 33.394162882 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("minimum", (8,))...
    done (took 1.960857202 seconds)
    (2/24) benchmarking ("sumabs", (4,))...
    done (took 1.989794981 seconds)
    (3/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.963641706 seconds)
    (4/24) benchmarking ("minimum", (2,))...
    done (took 1.968055266 seconds)
    (5/24) benchmarking ("sum", (8,))...
    done (took 1.973177807 seconds)
    (6/24) benchmarking ("sumabs", (2,))...
    done (took 1.965751574 seconds)
    (7/24) benchmarking ("sumabs", (16, 16))...
    done (took 2.012125013 seconds)
    (8/24) benchmarking ("minimum", (4, 4))...
    done (took 1.967600362 seconds)
    (9/24) benchmarking ("sumabs", (8,))...
    done (took 1.98263283 seconds)
    (10/24) benchmarking ("sum", (2, 2))...
    done (took 1.99084598 seconds)
    (11/24) benchmarking ("minimum", (2, 2))...
    done (took 1.964229971 seconds)
    (12/24) benchmarking ("sum", (4,))...
    done (took 1.976789261 seconds)
    (13/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.967330669 seconds)
    (14/24) benchmarking ("sumabs", (16,))...
    done (took 1.973913112 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.972050177 seconds)
    (16/24) benchmarking ("sum", (4, 4))...
    done (took 1.97225811 seconds)
    (17/24) benchmarking ("sum", (8, 8))...
    done (took 1.98187336 seconds)
    (18/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.986379756 seconds)
    (19/24) benchmarking ("minimum", (8, 8))...
    done (took 1.991434257 seconds)
    (20/24) benchmarking ("sum", (16, 16))...
    done (took 1.954473882 seconds)
    (21/24) benchmarking ("minimum", (4,))...
    done (took 1.97010536 seconds)
    (22/24) benchmarking ("sum", (16,))...
    done (took 1.982507347 seconds)
    (23/24) benchmarking ("minimum", (16, 16))...
    done (took 1.980421502 seconds)
    (24/24) benchmarking ("sum", (2,))...
    done (took 1.984027978 seconds)
  done (took 49.343220633 seconds)
done (took 108.936268859 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.585529666 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.976398112 seconds)
  done (took 9.492078875 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.981954615 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.959816119 seconds)
  done (took 5.941806619 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.96699239 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.979929486 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.969758243 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.996526164 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.967547489 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.976037306 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.955293241 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.951986734 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.97544355 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.953141463 seconds)
  done (took 21.581927171 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.94654843 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.969738917 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 2.012811226 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.980912878 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.975387965 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.973367632 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.961046998 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.971001879 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.954055465 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.981787693 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.96785362 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.973639342 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.984878146 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.972301809 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.968109815 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.972399235 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.953951393 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.988079286 seconds)
  done (took 37.387945007 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.996497682 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 2.038485575 seconds)
  done (took 5.952670128 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 2.002926533 seconds)
    (2/7) benchmarking "second"...
    done (took 1.974098805 seconds)
    (3/7) benchmarking "month"...
    done (took 1.990800295 seconds)
    (4/7) benchmarking "year"...
    done (took 1.984804817 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.955634743 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.976799851 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.947597313 seconds)
  done (took 15.803998339 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.951871145 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.097949093 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.152782519 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.449424916 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.94416204 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.945747414 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.558373835 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.990549028 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.949988093 seconds)
  done (took 20.935440248 seconds)
done (took 118.997644066 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 5.778030743 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.948338776 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.614853528 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 7.058351443 seconds)
  (5/8) benchmarking "pisum"...
  done (took 7.039303979 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.305663181 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.99562207 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.538539301 seconds)
done (took 45.172571112 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 7.030072371 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.988768767 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.987874913 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 7.009186522 seconds)
  done (took 22.89029447 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.974209946 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.642653138 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 7.016823697 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 4.003282349 seconds)
  done (took 23.616033341 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.45293867 seconds)
    (2/2) benchmarking "read"...
    done (took 2.512798622 seconds)
  done (took 6.863466006 seconds)
done (took 62.316647987 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.973295005 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.975198942 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.986081986 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.956476764 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.980369398 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.955466149 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.973349594 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.991205659 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.954444016 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.991539971 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.968741226 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.974692782 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.996575278 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.981766654 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.974861764 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.970318157 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.972173912 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 2.000801329 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.97310823 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.968845122 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.950380858 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.973621874 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.963283305 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.972729118 seconds)
  done (took 49.281266249 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.97422288 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.967767343 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.996973698 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.983452289 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.993112786 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.994339919 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.989884176 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.985145436 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 2.003948809 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.984309798 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.98582842 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.992423437 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.991483126 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.98856774 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.987839895 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.971255535 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.971539621 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.992777778 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.993994535 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.984573268 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.988984735 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.978584181 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.981740037 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.989766432 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.976403454 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.997087882 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.96974756 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.961649599 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.97733513 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.965609045 seconds)
  done (took 61.425904942 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.958334739 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.970852012 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 2.016629998 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.962290685 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.971176827 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.988789601 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.994409742 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.987157693 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.98050955 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.970691274 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.959805291 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.979882569 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.969267596 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.956967766 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.975902316 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.958633548 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.97995836 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.987041802 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.981841638 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.951568843 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.946937691 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.945561031 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.968371927 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.981005939 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.981904083 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.978204775 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.980524833 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.987440531 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.94617387 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.967233457 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.967083948 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.986472999 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.994690271 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.971356199 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.967779811 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.966520178 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.988753648 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.997333763 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 2.01050942 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 2.043701288 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 2.044852655 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 2.043002654 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 2.057076391 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 2.045187841 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 2.044248819 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 2.010141375 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.9378626 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.953316645 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.935298238 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.935827784 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.935870728 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.935910519 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.947159926 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.94603563 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.935606832 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.934958716 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.936027604 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.9371921 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.957509976 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.935722152 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.935640829 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.936474809 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.941222092 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.956002804 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.936922599 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.937707973 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.937361772 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.936059624 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.953981986 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.937691257 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.937331625 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.937195614 seconds)
  done (took 143.694310112 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.965207872 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.937365046 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.938897242 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.937921931 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.936688774 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.958974113 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.936185176 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.938333645 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.938414562 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.93682402 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.950909286 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.942546684 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.937561144 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.937579292 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.937484148 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.938556519 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.955916 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.937842177 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.937712789 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.939339942 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.938316558 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.961908973 seconds)
  done (took 44.610196676 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.938928602 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.938498418 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.940673196 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.960472001 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.938683274 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.937817456 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.937576751 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.939316079 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.960862344 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.938520834 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.937548175 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.937878705 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.938346588 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.958339451 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.938966622 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.93939181 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.937804677 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.938835614 seconds)
  done (took 36.829261071 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.940493176 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.93924793 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.940409984 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.939404727 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.939429448 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.962984515 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.938766859 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.938799858 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.939059329 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.94122628 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.962166928 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.9397839 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.941949067 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.941087507 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.940401315 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.962807377 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.939283378 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.940327785 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.94001721 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.940328525 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.960157155 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.940276297 seconds)
  done (took 44.657089143 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.940299551 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.939848043 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.958045647 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.940422115 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.94014265 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.939005974 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.938851982 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.968821208 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.940787349 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.939785307 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.940852425 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.941038553 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.946634619 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.95383607 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.941644743 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.94088177 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.940734372 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.940497034 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.963451162 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.940552624 seconds)
  done (took 40.76882656 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.94364974 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.943953571 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.96392331 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.943252417 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.943096939 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.943622238 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.943891668 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.960833138 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.944126888 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.943554999 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.943745646 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.944616181 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.971436103 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.944223581 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.943903557 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.943934845 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.944266228 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.965677268 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.945538766 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.94418079 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.945903789 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.945121078 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.967442596 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.950226367 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.94671197 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.950198711 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.945082527 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.955518536 seconds)
  done (took 56.447553256 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.978580092 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.960746185 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.974545042 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.960865154 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.988332663 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.956529963 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.978773653 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.97270573 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.964171222 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.988978318 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.958831893 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.978037001 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.960270131 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.981661999 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.984420715 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.951035221 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.973725852 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.973529789 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.973236891 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.982390684 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.960269267 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.956087133 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.962361965 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.972968738 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.973414553 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.945369667 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.944946124 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.959826477 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.958087799 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.964836906 seconds)
  done (took 60.953721674 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.96528857 seconds)
    (2/2) benchmarking "in"...
    done (took 1.968386767 seconds)
  done (took 5.810495868 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.965342803 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.943988593 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.944032631 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.945078507 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.945008192 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.967413618 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.945293374 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.94417533 seconds)
  done (took 17.476257527 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.94346024 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.950932177 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.953667362 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.943533981 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.946672029 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.954084375 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.945014373 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.975812275 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.9484115 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.946109212 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.950009166 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.951430846 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.977637593 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.95168295 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.944955924 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.946341312 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.949405992 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.970752302 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.948771966 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.944396278 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.949287927 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.946107682 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.964056035 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.947475732 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.945168713 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.949423296 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.958386277 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.966084818 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.948439063 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.944060761 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.955223827 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.945298081 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.973432419 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.949409141 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.947864616 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.944638438 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.954353315 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.965209547 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.953162226 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.945416498 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.950355521 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.949397253 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.952578155 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.972300431 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.947080202 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.945894094 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.946207158 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.948190176 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.96828711 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.952722217 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.956657536 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.949272203 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.946179681 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.960707621 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.951512698 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.948606265 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.948198435 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.951890088 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.98709035 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.955305734 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.952883512 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.972397994 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.961509358 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.969783184 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.94981722 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.962549574 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.97982288 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.94965773 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.975633309 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.945758437 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.956459112 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.947302368 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.946549753 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.967397836 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.965275454 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.959411538 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.949788284 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.947715282 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.965526369 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.949413695 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.950898648 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.950145116 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.950449426 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.959338399 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.973259177 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.980389195 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.949125988 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.949797511 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.952315366 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.972139919 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.95515573 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.953129482 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.949168337 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.94727222 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.974604561 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.950925768 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.950799686 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.950666861 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.949461491 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.979319441 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.948649725 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.947823985 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.955225693 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.960970045 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.966798577 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.951825517 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.952115541 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.951909016 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.959608193 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.976281089 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.95064096 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.950070654 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.951581782 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.95622083 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.975878971 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.957498234 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.960618561 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.958749893 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.95005715 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.97615877 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.956292318 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.955360044 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.964461527 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.982234188 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.97196273 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.955779754 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.959844483 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.967086306 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.955622863 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.96145961 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.957894603 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.950654652 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.950131482 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.954383659 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.949986286 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.976598355 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.950771341 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.953013302 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.950763917 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.952750077 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.974205512 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.953071887 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.956879873 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.954096269 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.957226334 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.977242386 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.95498391 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.960166902 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.952160924 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.953026923 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.974164502 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.955873742 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.953045253 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.954356016 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.950642109 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.968185469 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.953707856 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.953544025 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.958577026 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.952966404 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.980327106 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.955827926 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.958044871 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.953930645 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.953084161 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.975559391 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.955168556 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.954409445 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.956392316 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.955535666 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.978408196 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.95500681 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.960572549 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.951800593 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.951950678 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.971174259 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.956352258 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.952315494 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.95904614 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.967624344 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.959853531 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.977927144 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.951693438 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.962535697 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.952715716 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.956082034 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.982312627 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.956028207 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.956087838 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.952711222 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.953514136 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.978980617 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.979631957 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.966848017 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.95644778 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.956863111 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.982312001 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.958735197 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.961371543 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.953045741 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.956356338 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.974691323 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.955478183 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.956202871 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.954226222 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.961344471 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.982101981 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.954455974 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.960471211 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.956183735 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.953971034 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.982597652 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.95364755 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.958838518 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.954182 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.95502089 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.97553111 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.954261992 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.965628543 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.959008724 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.953791159 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.980114024 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.959611814 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.955990872 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.954518868 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.958437582 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.970304391 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.959658683 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.959155575 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.964903025 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.957529522 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.956280297 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.979774311 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.954816667 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.96046392 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.955142985 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.962640395 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.992350417 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.961896535 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.95600998 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.963678279 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.954998907 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.980677866 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.957089339 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.959017559 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.958387423 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.960596379 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.97989817 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.957075322 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.967441884 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.955456412 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.95857659 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.972227822 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.959188882 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.95795771 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.960165613 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.957715426 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.990404314 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.967707163 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.964736427 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.958193652 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.96316532 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.987007877 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.960438868 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.961878194 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.96001899 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.974826486 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.990877073 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.95824689 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.956822394 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.958683246 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.962428935 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.979179014 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.960477147 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.967609159 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.958080625 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.95964029 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.977265627 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.960690841 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.960562325 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.967123565 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.960891686 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.966250851 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.978637578 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.961052727 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.960481225 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.957667718 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.963143413 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.986462362 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.962808761 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.96293354 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.958525721 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.961509921 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.981773362 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.96921399 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.958789246 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.96234714 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.969278199 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.981220555 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.959815773 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.961571225 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.957837864 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.961233141 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.981405207 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.95949135 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.961047965 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.96019168 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.965572171 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.998321445 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.966366747 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.971727627 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.96477117 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.973691065 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.983886297 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.960192173 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.96221995 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.9668036 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.971382465 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.982948596 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.959103907 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.969401012 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.961631995 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.962526238 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.989322998 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.959905744 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.962034644 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.961421808 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.96269265 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.984042161 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.966312392 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.959658113 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.962757517 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.960382339 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.981844523 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.97055957 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.964425155 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.963264483 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.961589494 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.964861854 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.975265277 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.962404108 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.963841302 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.963001362 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.959303135 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.978572883 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.969969338 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.962660317 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.96372285 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.969881262 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.985207526 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.97280002 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.962328752 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.962535442 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.962038948 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.979102944 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.964756622 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.961511927 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.963676868 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.961783672 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.988279592 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.96454279 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.976489734 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.972015829 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.966362061 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.993031162 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.963929976 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.965462883 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.977191318 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.993049468 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.986845972 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.967612666 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.966270971 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.97145513 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.967874544 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.989413274 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.969925249 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.975223841 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.966472867 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.963505792 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.987786183 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.980984174 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.965007814 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.96239671 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.962975583 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.995719888 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.966877462 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.963283665 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.965014466 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.969212829 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.989127115 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.978221325 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.962324596 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.965473031 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.965589332 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.986930468 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.966144972 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.96297989 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.967120069 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.967477767 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.981790483 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.969210537 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.981184761 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.971856243 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.964533143 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.977235202 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.987739171 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.96644037 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.965652591 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.966389969 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.96635745 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.992931749 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.966338902 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.966437139 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.967576373 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.964487398 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.992116574 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.971056158 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.978818707 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.968656488 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.965071307 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.988881362 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.970680802 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.964907379 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.96709671 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.969353907 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.995864067 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.972242919 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.982431637 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.978758815 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.967286534 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.98332635 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.977259486 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.978299336 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.96733106 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.966042374 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.999283171 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.971323682 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.970027652 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.969333322 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.968172687 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.989740833 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.975589867 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.967474082 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.967497284 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.968535356 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.985196299 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.970709954 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.971287406 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.974460043 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.965977349 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.989705121 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.965952443 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.970278575 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.970314989 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.97221812 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.984866905 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.966740374 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.971269587 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.971055147 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.971293986 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.990766533 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.967828947 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.973943639 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.967779372 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.966260187 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.990368031 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.969423421 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.967385859 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.973851614 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.97768151 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.98657287 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.972512247 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.969259837 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.974784636 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.970215994 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.977781577 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.979513763 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.967101506 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.978797899 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.968139534 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.970607855 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.981591342 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.968828816 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.976221446 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.972209902 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.974779258 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.995722599 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.968650809 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.968912948 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.976002258 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.981292535 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.997056384 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.974501064 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.978604792 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.975909531 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.972676592 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.991100627 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.96839673 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.969213643 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.969848071 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.974853378 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.991108683 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.975063224 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.971301841 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.97336838 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.970550172 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.991667191 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.968153549 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.969153274 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.976504066 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.982278423 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 2.010668231 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.969756404 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.973088101 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.971454641 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.975589624 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 2.005961337 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.971455134 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.971383068 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.970935497 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.97339202 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.992536606 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.982829188 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.983959159 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.976943419 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.971233909 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 2.000802878 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.997527679 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.973905046 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.983880438 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 2.010737286 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.990450867 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.972287976 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.973559454 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.972427701 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.973861912 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 2.002128311 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.972834975 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.981608786 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.972198515 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.970248125 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 2.001666516 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.971383153 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.970169207 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.972670242 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.9735882 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.999215646 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.972968163 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.980349774 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.97292783 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.971570384 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.995542314 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.975186511 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.971789592 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.970683474 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.971452328 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.993731057 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.972324258 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.973917166 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.983761749 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.974762204 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.987365154 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.000387033 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.986989841 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.973679384 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.972525142 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.978009595 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.989783959 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.978751091 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.972736101 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.979570682 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.983003089 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.998744072 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.982799724 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.975972616 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.97646841 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.975792495 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.992756194 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.974243537 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.989706928 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.988803073 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.973804813 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.993268993 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.984444172 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.973373646 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.983853193 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.981512521 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 2.000895833 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.978635075 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.975947116 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.973541482 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.974931762 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.993506423 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.987728803 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 2.045149427 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 2.007642996 seconds)
  done (took 1174.453239605 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 2.014893735 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.975316847 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.981052344 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.99178172 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 2.0149459 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 2.018100466 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.977405639 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.973710828 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.973263744 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.97359576 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 2.00453401 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 2.023098721 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.997217429 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 2.006090732 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 2.002728418 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 2.018433742 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.985551672 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.999058153 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.997595877 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 2.002359754 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 2.006964763 seconds)
  done (took 43.881024133 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.998523157 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.989654852 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 2.012731951 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 2.025172654 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.979804941 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.98850265 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 2.011340906 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 2.018261559 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 2.026863955 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 2.0144457 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 2.009158902 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 2.012946508 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 2.026627435 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 2.034802286 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 2.002378506 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 2.010125124 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.989177667 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.995161154 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 2.015244229 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 2.0227009 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 2.017801986 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 2.020970097 seconds)
  done (took 46.150102519 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 2.019440351 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 2.002271665 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 2.021716302 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 2.015143823 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 2.0033884 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 2.027273897 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.997814037 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 2.0065901 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.997649265 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 2.016943658 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 2.050331889 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 2.040902814 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 2.016810737 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.996971073 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.99762771 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 2.040128723 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.177175939 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.999006801 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 2.02973593 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 2.022477146 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 2.006541637 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.988577296 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.978050489 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.998969146 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 2.015535454 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 2.028373328 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 2.010387429 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 2.011304301 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 2.020327349 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 2.019161413 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 2.043415151 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.997768509 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.993138546 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 2.002607838 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 2.003506225 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 2.001416432 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 2.006622618 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 2.042427064 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.99467954 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 2.059746242 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 2.081950058 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 2.039807528 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 2.013720037 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 2.001431526 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 2.096848911 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 2.040374517 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.993807874 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 2.016650557 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 2.021925768 seconds)
  done (took 100.960465053 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.995805262 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 2.000454231 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 2.0032571 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.993375987 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 2.023695898 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 2.024864804 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 2.041024273 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.989267074 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 2.124784929 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 2.051443939 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.998900295 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 2.005829895 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 2.020080957 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 2.011074725 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 2.033730121 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.98837308 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 2.035218634 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.999400199 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 2.007389325 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 2.011965403 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.980604526 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 2.015185443 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 2.00440533 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 2.000088679 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 2.033447524 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.98058363 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.980684031 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 2.007696261 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 2.008686265 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 2.043252363 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 2.027710001 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 2.013644034 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 2.034914733 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 2.013334173 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 2.026946682 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 2.052164703 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.982056709 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.98103831 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 2.009787691 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 2.027171737 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.998577296 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 2.004233003 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 2.061473747 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 2.051890063 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 2.083150425 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 2.075016131 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 2.067419135 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 2.02513951 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.999248903 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 2.02474551 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 2.006655367 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 2.006390126 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 2.005723192 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 2.00402869 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 2.020244326 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 2.104677758 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 2.02051677 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 2.017168525 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 2.015656764 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 2.021279464 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 2.006746641 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 2.02862952 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 2.024329937 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.983628775 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 2.003930097 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.982196802 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.994914634 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 2.003170492 seconds)
  done (took 139.187756773 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 2.037387155 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 2.031153338 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 2.039961322 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 2.009271341 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 2.017188984 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 2.026821696 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 2.024852382 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 2.021406699 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 2.036336385 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 2.024847317 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 2.051380033 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 2.040720127 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 2.020115196 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 2.045407003 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 2.030253251 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 2.05072745 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 2.032618829 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 2.036141325 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 2.024657326 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 2.037005313 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 2.058949454 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 2.044608188 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 2.05434205 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 2.031980164 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 2.059272086 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 2.06424906 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 2.044641622 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 2.038205803 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 2.032754726 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 2.04600489 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 2.026192186 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 2.029021627 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 2.028035772 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 2.027898504 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 2.047673227 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 2.029012644 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 2.027245405 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 2.026485539 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 2.027251647 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 2.042414841 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 2.029489741 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 2.029765003 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 2.036944163 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 2.031996292 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 2.044213168 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 2.029980168 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 2.02989603 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 2.023065825 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 2.021147987 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 2.041329245 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 2.02300137 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 2.022194097 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 2.022820745 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 2.022819072 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 2.049152862 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 2.02081749 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 2.023696492 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 2.024088882 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 2.023243273 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 2.036776785 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 2.022914142 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 2.021750546 seconds)
  done (took 128.013034346 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 2.020264467 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 2.041423704 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 2.020965037 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 2.019718618 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 2.019948628 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 2.021347621 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 2.039643891 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 2.02193119 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 2.021024872 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 2.021921663 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 2.021680997 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 2.041792041 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 2.023845713 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 2.021589773 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 2.02101233 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 2.024971094 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 2.042094561 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 2.020325262 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 2.020653476 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 2.024348236 seconds)
  done (took 42.463143016 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 2.037551964 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 2.020369357 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 2.02177517 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 2.020570504 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 2.021723405 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 2.032476446 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 2.020777108 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 2.021149577 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 2.020410423 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 2.029760914 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 2.027731652 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 2.020822866 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 2.021334165 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 2.022181744 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 2.042857475 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 2.024864856 seconds)
  done (took 34.358340977 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 2.022304276 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 2.022787371 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 2.047492408 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 2.025069097 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 2.022632464 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 2.020911448 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 2.022107468 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 2.043107768 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 2.032334392 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 2.022417674 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 2.02201529 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 2.022565585 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 2.035945302 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 2.024388389 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 2.022195597 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 2.023077725 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 2.022113133 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 2.044840028 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 2.023719344 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 2.024695416 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 2.02429031 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 2.022872343 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 2.045246771 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 2.022890621 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 2.023250794 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 2.024001559 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 2.022470664 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 2.04184555 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 2.023425853 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 2.024256775 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 2.022797924 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 2.02382244 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 2.03984087 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 2.022640671 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 2.025241586 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 2.022783818 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 2.023772631 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 2.047310774 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 2.024984502 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 2.023143487 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 2.023622903 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 2.026385048 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 2.046018129 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 2.02443914 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 2.024782492 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 2.024552166 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 2.029932364 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 2.036357343 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 2.024155132 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 2.024130023 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 2.028761702 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 2.025064413 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 2.04041526 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 2.030812016 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 2.023446827 seconds)
  done (took 113.487611109 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 2.02476381 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 2.047882181 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 2.025168916 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 2.025499879 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 2.025978252 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 2.024496086 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 2.042158757 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 2.025688524 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 2.025840513 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 2.025788028 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 2.024787168 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 2.04446841 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 2.025048735 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 2.025348247 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 2.026133645 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 2.033487259 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 2.032027121 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 2.02566453 seconds)
  done (took 38.484357762 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 2.026052816 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 2.038775231 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 2.030232862 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 2.027565283 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 2.02658506 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 2.026154877 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 2.044582616 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 2.025376034 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 2.025302394 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 2.026273189 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 2.026220932 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 2.047304718 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 2.026460566 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 2.026246819 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 2.025617485 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 2.026239571 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 2.043863055 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 2.026780415 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 2.026925089 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 2.02620871 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 2.026932532 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 2.048769421 seconds)
  done (took 46.631080034 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 2.027571217 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 2.027517228 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 2.04551673 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 2.076520251 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 2.053790282 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 2.074123277 seconds)
  done (took 14.262543181 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 2.026118423 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.046564934 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 2.027473262 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 2.027913989 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.026754265 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.027452807 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.051143088 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.028057047 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.027926135 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 2.028493434 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.029228927 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.051030427 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.027897143 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.027605411 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.029199931 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.028457718 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.048808997 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.028001879 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 2.029372894 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.02792998 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.027223621 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.048998834 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.027795505 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.028398038 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.028721109 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.028281833 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.04965414 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 2.029066487 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.027510442 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.028413485 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.028196451 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.042441334 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.028661384 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 2.029076994 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 2.028962876 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.039535023 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.037361615 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.027916996 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.028251035 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.02932024 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 2.051777278 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.029137186 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.029784051 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.031832614 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.030914111 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.048857029 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.030139537 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.031453646 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.029478669 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 2.029229062 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.046538641 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.031943728 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.029780265 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.029056058 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.030155439 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 2.049260314 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 2.030959334 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.030153804 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.030026333 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 2.029972354 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.052182008 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.030166213 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.031094908 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 2.030603267 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.030563322 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.046817178 seconds)
  done (took 136.151370085 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.030511798 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 2.030022763 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.030899082 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 2.056025638 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.031550391 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.031435024 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.030711505 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.03164323 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.048003118 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 2.031633012 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.031834357 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.031510789 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.032196291 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.052403109 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.031283802 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.030568104 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.03126571 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.030556886 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 2.049535604 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 2.032316831 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.031330769 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.032207202 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.030603335 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.054997389 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 2.032136585 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.033592361 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.031310327 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.03412044 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.041568089 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.032775758 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.032232737 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.031722834 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.047602951 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 2.037560842 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.033424109 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.031928903 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.033119281 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.05430029 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.032139275 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.036135416 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.035895151 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.033245602 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.048583619 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.033325486 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 2.032664331 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.064224418 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.037890162 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 2.054903454 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.035565042 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 2.032504593 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 2.033938944 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 2.053577161 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 2.074262854 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.049527797 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.072163728 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.058232008 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.037315136 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.091349962 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.042980886 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.048828932 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.049607415 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.065630444 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 2.059332831 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.03475968 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.034874123 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.033555034 seconds)
  done (took 136.642455435 seconds)
done (took 2758.967887336 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 7.119403568 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.307864331 seconds)
  done (took 16.407621668 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.231130033 seconds)
    (2/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 7.134790624 seconds)
    (3/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.241564457 seconds)
    (4/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.206930362 seconds)
    (5/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 7.105324437 seconds)
    (6/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 7.133622138 seconds)
    (7/16) benchmarking ("transpose", (600, 600))...
    done (took 2.086527137 seconds)
    (8/16) benchmarking ("transpose", (600, 400))...
    done (took 2.105969756 seconds)
    (9/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.172828716 seconds)
    (10/16) benchmarking ("transpose", (20000, 10000))...
    done (took 2.086251986 seconds)
    (11/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 7.086853257 seconds)
    (12/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 2.086972095 seconds)
    (13/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 2.086391877 seconds)
    (14/16) benchmarking ("adjoint", (600, 400))...
    done (took 2.084908765 seconds)
    (15/16) benchmarking ("adjoint", (600, 600))...
    done (took 2.08557456 seconds)
    (16/16) benchmarking ("transpose", (20000, 20000))...
    done (took 2.096342676 seconds)
  done (took 56.049104137 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("Tridiagonal", 10)...
    done (took 2.090102767 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 2.063688946 seconds)
    (3/18) benchmarking ("IJV", 10)...
    done (took 2.114911368 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 2.060438236 seconds)
    (5/18) benchmarking ("Bidiagonal", 100)...
    done (took 2.111062747 seconds)
    (6/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.395238332 seconds)
    (7/18) benchmarking ("IJV", 100)...
    done (took 2.117076863 seconds)
    (8/18) benchmarking ("Bidiagonal", 10)...
    done (took 2.111521025 seconds)
    (9/18) benchmarking ("Tridiagonal", 100)...
    done (took 2.112580561 seconds)
    (10/18) benchmarking ("IV", 1000)...
    done (took 2.115425518 seconds)
    (11/18) benchmarking ("SymTridiagonal", 100)...
    done (took 2.11588023 seconds)
    (12/18) benchmarking ("Diagonal", 10)...
    done (took 2.097602433 seconds)
    (13/18) benchmarking ("Diagonal", 100)...
    done (took 2.117413 seconds)
    (14/18) benchmarking ("SymTridiagonal", 10)...
    done (took 2.09563339 seconds)
    (15/18) benchmarking ("IJV", 1000)...
    done (took 2.238994916 seconds)
    (16/18) benchmarking ("Diagonal", 1000)...
    done (took 2.15169003 seconds)
    (17/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.181231389 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.188053582 seconds)
  done (took 40.445258918 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.1906017 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 7.095915124 seconds)
  done (took 11.263434004 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 7.04028866 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 7.049707902 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 7.088136623 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 7.070762033 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 7.061564234 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 7.067123504 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 7.09099325 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 7.069958624 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 7.049709378 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 7.07055341 seconds)
  done (took 72.651481547 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 1000)...
    done (took 2.082649006 seconds)
    (2/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 2.070524397 seconds)
    (3/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.434729652 seconds)
    (4/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 2.07494178 seconds)
    (5/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 2.072860983 seconds)
    (6/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 2.112770397 seconds)
    (7/54) benchmarking ("spvec", "integer", 100000)...
    done (took 2.04075544 seconds)
    (8/54) benchmarking ("spmat", "range", 100)...
    done (took 2.124656741 seconds)
    (9/54) benchmarking ("spmat", "integer", 10)...
    done (took 2.044027805 seconds)
    (10/54) benchmarking ("spvec", "array", 10000)...
    done (took 7.060467835 seconds)
    (11/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 2.074394852 seconds)
    (12/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.441252201 seconds)
    (13/54) benchmarking ("spmat", "logical", 10)...
    done (took 2.122902421 seconds)
    (14/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 2.062928456 seconds)
    (15/54) benchmarking ("spmat", "array", 100)...
    done (took 2.525914377 seconds)
    (16/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 2.082629131 seconds)
    (17/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 2.070036004 seconds)
    (18/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 2.14519013 seconds)
    (19/54) benchmarking ("spvec", "logical", 1000)...
    done (took 2.101010718 seconds)
    (20/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 2.069847244 seconds)
    (21/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 2.0763487 seconds)
    (22/54) benchmarking ("spmat", "range", 10)...
    done (took 2.114119223 seconds)
    (23/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.308930648 seconds)
    (24/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.918866944 seconds)
    (25/54) benchmarking ("spmat", "array", 1000)...
    done (took 7.091501678 seconds)
    (26/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 2.074791537 seconds)
    (27/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 2.071324173 seconds)
    (28/54) benchmarking ("spvec", "integer", 10000)...
    done (took 2.037143875 seconds)
    (29/54) benchmarking ("spvec", "integer", 1000)...
    done (took 2.059575884 seconds)
    (30/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 2.063018847 seconds)
    (31/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 2.067620265 seconds)
    (32/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 7.062530978 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 2.094942787 seconds)
    (34/54) benchmarking ("spvec", "array", 100000)...
    done (took 7.061609173 seconds)
    (35/54) benchmarking ("spvec", "range", 10000)...
    done (took 2.080233205 seconds)
    (36/54) benchmarking ("spmat", "splogical", 10)...
    done (took 2.069539384 seconds)
    (37/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.713295213 seconds)
    (38/54) benchmarking ("spmat", "array", 10)...
    done (took 2.124483097 seconds)
    (39/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 2.080097879 seconds)
    (40/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.178473165 seconds)
    (41/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 2.124838882 seconds)
    (42/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 2.07296666 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 7.081355524 seconds)
    (44/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 2.071047927 seconds)
    (45/54) benchmarking ("spmat", "integer", 100)...
    done (took 2.039860821 seconds)
    (46/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 2.091860806 seconds)
    (47/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.827810656 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 2.130974463 seconds)
    (49/54) benchmarking ("spmat", "integer", 1000)...
    done (took 2.04353474 seconds)
    (50/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.254171876 seconds)
    (51/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.688661725 seconds)
    (52/54) benchmarking ("spvec", "range", 100000)...
    done (took 2.086286876 seconds)
    (53/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.214217315 seconds)
    (54/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.227248719 seconds)
  done (took 145.092684011 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 7.03764659 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.487872482 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.188113803 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 7.043455506 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.384795914 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.251754774 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 5.799062979 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.088867708 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 7.043156575 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.248195241 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.203031406 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.168816572 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 7.065878285 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 7.044001726 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 7.044112972 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 7.042295654 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.215146838 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.128766632 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 7.044891019 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 7.072979997 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.065062183 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.27870993 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.171274714 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 7.044338862 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 2.077420887 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.258621974 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.092797461 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.168431113 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.441777749 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 7.041819724 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.10618256 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 7.061773448 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 7.044635821 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 7.042000683 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.085100762 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.149394152 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.145770467 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 7.044254499 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.657068303 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 7.042852998 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.639640519 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.248491985 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.153157164 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.175792962 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.2883474 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.278315845 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.738722699 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 7.04297831 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.764505262 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.207297904 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.252088266 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.273609552 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.140343916 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 7.046521381 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.643870708 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 7.043122288 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 7.0436188 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.275562064 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.206214128 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.1801098 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 7.04691391 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 7.044433285 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 7.043022723 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.294339142 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 7.046910527 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.155866341 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.05875991 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 7.045779486 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.157647913 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.168826709 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.22338241 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.268735015 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.077145058 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.219498169 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 5.034530039 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.254448725 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.110911361 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.297692176 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 7.047830426 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 7.045737728 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.13593339 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.493979571 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.210602413 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.281026808 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.352353628 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.082340055 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.579295336 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 7.04461326 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.276650492 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.196697937 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.261640656 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.294196478 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.100379841 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.938740079 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 7.044903557 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 7.067594392 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.919020965 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.172917306 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 7.049352721 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.587021553 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.286669148 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.64100305 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.085730089 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.477324104 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.152005951 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 7.048823783 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.679366829 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 7.045914983 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.258620372 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.090655131 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 7.046569326 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 7.047349796 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.198915719 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.782270396 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 7.04772628 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.109375554 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 2.132434104 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 7.050026881 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.221151562 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 7.04997978 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.296178295 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.783840156 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.283597795 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 7.06717275 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.079541663 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.214064754 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.306986305 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 7.050125163 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.442127214 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.289002049 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.143570347 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.261453694 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.617988502 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 7.046918904 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.319395673 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 7.050644261 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 7.048120137 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.234978976 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.049505349 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.209590381 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 7.073038876 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.294181208 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.088100587 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.10370225 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.052176618 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.306604225 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.084393799 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.099103464 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 7.053149967 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.178304383 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 7.051616471 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 3.092891375 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.210747058 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.047730152 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 7.049342869 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.935342081 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 7.052902778 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.198098224 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.278951726 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.084082134 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.119143472 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.447128745 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 7.04749761 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.15008416 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.076487219 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.469899711 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 5.58892765 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.208049799 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.702242293 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.293290337 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 7.049183024 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.301640634 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.224714645 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 7.05135665 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 7.053987329 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.804307871 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 5.514716145 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 7.049222523 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.206789707 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.263898738 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 5.43332075 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.259733488 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 7.074562092 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.100905721 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 7.054879579 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 4.277219061 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.593246621 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.262828685 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 7.074201538 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 7.049845833 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 7.049778217 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 7.052991118 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.255377758 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.10024568 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.679983009 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.189599825 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.316509908 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.28931547 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.357668088 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.11117979 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 7.05572136 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.360336994 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 7.053334427 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 2.113609336 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 7.052315867 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.060938757 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.297259766 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 7.052876368 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.256782183 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.397028316 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 3.187845948 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.097152345 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 7.053710279 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.052267925 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 7.02153666 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.213012983 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.164818806 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 7.069008354 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.208435909 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.094882921 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.171707931 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.24467246 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 5.377032322 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.009681757 seconds)
  done (took 926.4311433 seconds)
done (took 1270.299575443 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 7.049013708 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 7.070776648 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 7.052510566 seconds)
    (4/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 7.052669872 seconds)
  done (took 30.222057965 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 2.052019833 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 2.051687924 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 2.067313548 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 2.095252462 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 2.071597319 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 2.053837953 seconds)
  done (took 14.402110665 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 7.057106371 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 7.052281452 seconds)
    (3/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 7.071603668 seconds)
  done (took 23.162804323 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((10000000,), 2)...
    done (took 2.577675865 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.379531022 seconds)
    (3/4) benchmarking ((1000, 1000), 1)...
    done (took 2.197054028 seconds)
    (4/4) benchmarking ((1000, 1000), 2)...
    done (took 2.266273755 seconds)
  done (took 11.407367907 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 2.097390217 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 2.056422493 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 2.055357996 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 2.067744566 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 2.092409157 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 2.054617631 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 2.094104845 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 2.068198457 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 2.093923076 seconds)
  done (took 20.69291029 seconds)
  (6/6) benchmarking "26942"...
  done (took 6.522136243 seconds)
done (took 108.389840355 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("map", abs, Float32, false)...
    done (took 2.193051109 seconds)
    (2/341) benchmarking ("collect", "filter", Bool, true)...
    done (took 3.505719745 seconds)
    (3/341) benchmarking ("perf_sum", Float32, true)...
    done (took 2.217325369 seconds)
    (4/341) benchmarking ("perf_sum", Float32, false)...
    done (took 2.206863137 seconds)
    (5/341) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 7.072354548 seconds)
    (6/341) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.51507708 seconds)
    (7/341) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.108686554 seconds)
    (8/341) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 7.053558204 seconds)
    (9/341) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.578958566 seconds)
    (10/341) benchmarking ("perf_sum4", Float32, true)...
    done (took 2.064544143 seconds)
    (11/341) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.456168519 seconds)
    (12/341) benchmarking ("map", abs, Int8, false)...
    done (took 2.174210523 seconds)
    (13/341) benchmarking ("collect", "all", BigFloat, false)...
    done (took 2.320977344 seconds)
    (14/341) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.338647365 seconds)
    (15/341) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.190975924 seconds)
    (16/341) benchmarking ("map", identity, BigInt, false)...
    done (took 2.360351275 seconds)
    (17/341) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.057627421 seconds)
    (18/341) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 3.34530158 seconds)
    (19/341) benchmarking ("perf_sum", Bool, true)...
    done (took 2.078872034 seconds)
    (20/341) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.218146029 seconds)
    (21/341) benchmarking ("perf_countnothing", Int8, true)...
    done (took 2.067981142 seconds)
    (22/341) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.434255203 seconds)
    (23/341) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.210190512 seconds)
    (24/341) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 3.08330482 seconds)
    (25/341) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.090523411 seconds)
    (26/341) benchmarking ("collect", "all", BigFloat, true)...
    done (took 2.597230883 seconds)
    (27/341) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.404732458 seconds)
    (28/341) benchmarking ("map", identity, BigInt, true)...
    done (took 2.612266723 seconds)
    (29/341) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.477129486 seconds)
    (30/341) benchmarking ("perf_sum2", Int64, false)...
    done (took 2.078395334 seconds)
    (31/341) benchmarking ("perf_countnothing", Float64, false)...
    done (took 2.066518554 seconds)
    (32/341) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.311701003 seconds)
    (33/341) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.2250977 seconds)
    (34/341) benchmarking ("perf_sum4", BigInt, false)...
    done (took 7.053093999 seconds)
    (35/341) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 4.653724167 seconds)
    (36/341) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.17516372 seconds)
    (37/341) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.472982097 seconds)
    (38/341) benchmarking ("perf_countnothing", Int64, true)...
    done (took 2.10001354 seconds)
    (39/341) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.907466595 seconds)
    (40/341) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.336042747 seconds)
    (41/341) benchmarking ("collect", "all", Int64, false)...
    done (took 2.182097065 seconds)
    (42/341) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 3.006776976 seconds)
    (43/341) benchmarking ("map", abs, Float64, false)...
    done (took 2.20206944 seconds)
    (44/341) benchmarking ("map", abs, Int8, true)...
    done (took 2.249343856 seconds)
    (45/341) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.356194111 seconds)
    (46/341) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.114234156 seconds)
    (47/341) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.36640017 seconds)
    (48/341) benchmarking ("map", abs, BigInt, false)...
    done (took 7.072456442 seconds)
    (49/341) benchmarking ("perf_sum4", Int8, true)...
    done (took 3.084726387 seconds)
    (50/341) benchmarking ("perf_sum", Int8, false)...
    done (took 2.113747239 seconds)
    (51/341) benchmarking ("collect", "all", Float32, true)...
    done (took 2.292142447 seconds)
    (52/341) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.427753499 seconds)
    (53/341) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.958638993 seconds)
    (54/341) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.205909027 seconds)
    (55/341) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 8.626980575 seconds)
    (56/341) benchmarking ("perf_sum4", BigInt, true)...
    done (took 7.152358654 seconds)
    (57/341) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 8.952332312 seconds)
    (58/341) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 7.201125145 seconds)
    (59/341) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 2.09192724 seconds)
    (60/341) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.578899076 seconds)
    (61/341) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.22943862 seconds)
    (62/341) benchmarking ("perf_sum2", Int8, false)...
    done (took 2.059045791 seconds)
    (63/341) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.174110195 seconds)
    (64/341) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.584157472 seconds)
    (65/341) benchmarking ("perf_sum2", BigInt, true)...
    done (took 9.065474645 seconds)
    (66/341) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 3.197479022 seconds)
    (67/341) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.473768579 seconds)
    (68/341) benchmarking ("perf_countequals", "Int8")...
    done (took 2.378338042 seconds)
    (69/341) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.66920966 seconds)
    (70/341) benchmarking ("perf_sum", BigInt, true)...
    done (took 9.04121544 seconds)
    (71/341) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 9.269304595 seconds)
    (72/341) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 3.623617599 seconds)
    (73/341) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.442788655 seconds)
    (74/341) benchmarking ("collect", "filter", Int8, true)...
    done (took 3.508569085 seconds)
    (75/341) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.344153618 seconds)
    (76/341) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.87587316 seconds)
    (77/341) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.330070183 seconds)
    (78/341) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.326813844 seconds)
    (79/341) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.067280511 seconds)
    (80/341) benchmarking ("perf_sum4", Int8, false)...
    done (took 3.744998427 seconds)
    (81/341) benchmarking ("collect", "filter", Bool, false)...
    done (took 2.902758956 seconds)
    (82/341) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.322513362 seconds)
    (83/341) benchmarking ("perf_sum4", Float64, false)...
    done (took 2.077034906 seconds)
    (84/341) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.320372659 seconds)
    (85/341) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.215861402 seconds)
    (86/341) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 7.076913623 seconds)
    (87/341) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 2.329433136 seconds)
    (88/341) benchmarking ("map", abs, BigFloat, false)...
    done (took 7.082091621 seconds)
    (89/341) benchmarking ("perf_countnothing", Bool, true)...
    done (took 2.186522531 seconds)
    (90/341) benchmarking ("perf_sum4", Float32, false)...
    done (took 2.076192603 seconds)
    (91/341) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.628825203 seconds)
    (92/341) benchmarking ("collect", "all", Float32, false)...
    done (took 2.17256526 seconds)
    (93/341) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.50090516 seconds)
    (94/341) benchmarking ("collect", "all", Int8, true)...
    done (took 2.235889741 seconds)
    (95/341) benchmarking ("perf_countnothing", Int64, false)...
    done (took 2.085300545 seconds)
    (96/341) benchmarking ("perf_sum3", BigInt, true)...
    done (took 9.050490926 seconds)
    (97/341) benchmarking ("collect", "all", Float64, false)...
    done (took 2.364121883 seconds)
    (98/341) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.572102952 seconds)
    (99/341) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.339201753 seconds)
    (100/341) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 7.061610547 seconds)
    (101/341) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 3.354059346 seconds)
    (102/341) benchmarking ("collect", "all", Int8, false)...
    done (took 2.157884053 seconds)
    (103/341) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.28070901 seconds)
    (104/341) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.23481974 seconds)
    (105/341) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 8.405296857 seconds)
    (106/341) benchmarking ("collect", "filter", Float64, false)...
    done (took 3.343816822 seconds)
    (107/341) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.068037504 seconds)
    (108/341) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 8.641350826 seconds)
    (109/341) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.403417196 seconds)
    (110/341) benchmarking ("collect", "filter", BigInt, true)...
    done (took 3.26966914 seconds)
    (111/341) benchmarking ("map", identity, Float64, true)...
    done (took 2.424049548 seconds)
    (112/341) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.349177404 seconds)
    (113/341) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 3.406349107 seconds)
    (114/341) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.126664821 seconds)
    (115/341) benchmarking ("perf_sum3", BigInt, false)...
    done (took 9.040465015 seconds)
    (116/341) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.370254901 seconds)
    (117/341) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.520129712 seconds)
    (118/341) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.431711437 seconds)
    (119/341) benchmarking ("perf_countnothing", Bool, false)...
    done (took 2.076948628 seconds)
    (120/341) benchmarking ("map", identity, Int8, false)...
    done (took 2.149503042 seconds)
    (121/341) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.422225611 seconds)
    (122/341) benchmarking ("perf_countnothing", Float32, false)...
    done (took 2.073479415 seconds)
    (123/341) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.201581719 seconds)
    (124/341) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 7.058509579 seconds)
    (125/341) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 7.193614134 seconds)
    (126/341) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 7.065324291 seconds)
    (127/341) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.169331254 seconds)
    (128/341) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.601260214 seconds)
    (129/341) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.063969287 seconds)
    (130/341) benchmarking ("perf_sum", BigFloat, false)...
    done (took 9.360043452 seconds)
    (131/341) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 7.126288695 seconds)
    (132/341) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.490103371 seconds)
    (133/341) benchmarking ("sort", BigFloat, false)...
    done (took 7.065839873 seconds)
    (134/341) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 2.071263395 seconds)
    (135/341) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.177199833 seconds)
    (136/341) benchmarking ("sort", Float32, false)...
    done (took 7.067683527 seconds)
    (137/341) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.347097013 seconds)
    (138/341) benchmarking ("perf_countequals", "Float32")...
    done (took 2.497512971 seconds)
    (139/341) benchmarking ("collect", "all", Int64, true)...
    done (took 2.39056235 seconds)
    (140/341) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 7.061489586 seconds)
    (141/341) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.664948897 seconds)
    (142/341) benchmarking ("collect", "filter", Float32, false)...
    done (took 3.011007891 seconds)
    (143/341) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 3.054852828 seconds)
    (144/341) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.204667557 seconds)
    (145/341) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.47773379 seconds)
    (146/341) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.959587659 seconds)
    (147/341) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.306817738 seconds)
    (148/341) benchmarking ("perf_sum", Int64, false)...
    done (took 2.096203613 seconds)
    (149/341) benchmarking ("collect", "all", BigInt, true)...
    done (took 2.621865441 seconds)
    (150/341) benchmarking ("perf_countnothing", Int8, false)...
    done (took 2.080498937 seconds)
    (151/341) benchmarking ("map", abs, Float32, true)...
    done (took 2.299608071 seconds)
    (152/341) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.20080974 seconds)
    (153/341) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.06421518 seconds)
    (154/341) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.554043872 seconds)
    (155/341) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.152427251 seconds)
    (156/341) benchmarking ("perf_countequals", "Int64")...
    done (took 2.380522097 seconds)
    (157/341) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 7.21813529 seconds)
    (158/341) benchmarking ("perf_sum", Float64, false)...
    done (took 2.216968456 seconds)
    (159/341) benchmarking ("perf_countequals", "Bool")...
    done (took 2.39111253 seconds)
    (160/341) benchmarking ("sort", Bool, false)...
    done (took 2.28512697 seconds)
    (161/341) benchmarking ("sort", Float64, false)...
    done (took 7.064334059 seconds)
    (162/341) benchmarking ("perf_sum", Float64, true)...
    done (took 2.233859093 seconds)
    (163/341) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.492492629 seconds)
    (164/341) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.069609215 seconds)
    (165/341) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 3.93132547 seconds)
    (166/341) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.111780886 seconds)
    (167/341) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.560013649 seconds)
    (168/341) benchmarking ("perf_sum", Int64, true)...
    done (took 2.079736724 seconds)
    (169/341) benchmarking ("perf_sum4", Bool, false)...
    done (took 2.076805908 seconds)
    (170/341) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 3.387473338 seconds)
    (171/341) benchmarking ("sort", Int64, false)...
    done (took 7.095335029 seconds)
    (172/341) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 7.067940828 seconds)
    (173/341) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.502186235 seconds)
    (174/341) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.393845537 seconds)
    (175/341) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.120356503 seconds)
    (176/341) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.61439386 seconds)
    (177/341) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.168349195 seconds)
    (178/341) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.497596739 seconds)
    (179/341) benchmarking ("map", abs, Int64, true)...
    done (took 2.428185093 seconds)
    (180/341) benchmarking ("map", *, BigInt, (false, true))...
    done (took 8.399982234 seconds)
    (181/341) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 2.232875149 seconds)
    (182/341) benchmarking ("collect", "filter", Int64, false)...
    done (took 3.181902855 seconds)
    (183/341) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.237146348 seconds)
    (184/341) benchmarking ("collect", "filter", BigFloat, false)...
    done (took 3.257239636 seconds)
    (185/341) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 7.072298422 seconds)
    (186/341) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.424261103 seconds)
    (187/341) benchmarking ("collect", "all", Bool, true)...
    done (took 2.239111565 seconds)
    (188/341) benchmarking ("collect", "filter", Float32, true)...
    done (took 3.556053864 seconds)
    (189/341) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 7.080298952 seconds)
    (190/341) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.408559991 seconds)
    (191/341) benchmarking ("perf_sum4", Int64, true)...
    done (took 2.080179869 seconds)
    (192/341) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.44659173 seconds)
    (193/341) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.717894229 seconds)
    (194/341) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.189202061 seconds)
    (195/341) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.486147479 seconds)
    (196/341) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.420705641 seconds)
    (197/341) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.31680005 seconds)
    (198/341) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.217495922 seconds)
    (199/341) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 7.068236603 seconds)
    (200/341) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 2.301196151 seconds)
    (201/341) benchmarking ("map", identity, Float64, false)...
    done (took 2.196708135 seconds)
    (202/341) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.482705632 seconds)
    (203/341) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 2.172087004 seconds)
    (204/341) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.135178335 seconds)
    (205/341) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 2.102569524 seconds)
    (206/341) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.794315798 seconds)
    (207/341) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.807334407 seconds)
    (208/341) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.075552401 seconds)
    (209/341) benchmarking ("broadcast", identity, Bool, false)...
    done (took 3.931537779 seconds)
    (210/341) benchmarking ("sort", Int8, false)...
    done (took 5.70354162 seconds)
    (211/341) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 7.06906553 seconds)
    (212/341) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.211509063 seconds)
    (213/341) benchmarking ("map", abs, Int64, false)...
    done (took 2.238642854 seconds)
    (214/341) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 7.100380714 seconds)
    (215/341) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.468228773 seconds)
    (216/341) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.932859306 seconds)
    (217/341) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.419834861 seconds)
    (218/341) benchmarking ("perf_sum", BigFloat, true)...
    done (took 7.07137425 seconds)
    (219/341) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.372444665 seconds)
    (220/341) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.371001291 seconds)
    (221/341) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.960634959 seconds)
    (222/341) benchmarking ("collect", "all", Float64, true)...
    done (took 2.461251303 seconds)
    (223/341) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.444135018 seconds)
    (224/341) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 7.07109584 seconds)
    (225/341) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 7.076900483 seconds)
    (226/341) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.629508934 seconds)
    (227/341) benchmarking ("perf_sum2", Int64, true)...
    done (took 2.085629185 seconds)
    (228/341) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 2.135766785 seconds)
    (229/341) benchmarking ("collect", "filter", Float64, true)...
    done (took 3.866846154 seconds)
    (230/341) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.511861478 seconds)
    (231/341) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.618183055 seconds)
    (232/341) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 7.070141583 seconds)
    (233/341) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 3.097324346 seconds)
    (234/341) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.588356933 seconds)
    (235/341) benchmarking ("sort", BigInt, false)...
    done (took 7.070952735 seconds)
    (236/341) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.23061481 seconds)
    (237/341) benchmarking ("perf_countnothing", Float64, true)...
    done (took 2.083508225 seconds)
    (238/341) benchmarking ("perf_sum", Bool, false)...
    done (took 2.100292462 seconds)
    (239/341) benchmarking ("map", identity, Int8, true)...
    done (took 2.240027803 seconds)
    (240/341) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 2.095724867 seconds)
    (241/341) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.506118572 seconds)
    (242/341) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.228439795 seconds)
    (243/341) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 7.070115289 seconds)
    (244/341) benchmarking ("map", *, BigInt, (true, true))...
    done (took 8.403823212 seconds)
    (245/341) benchmarking ("map", abs, Bool, false)...
    done (took 2.300902351 seconds)
    (246/341) benchmarking ("collect", "filter", Int64, true)...
    done (took 3.745506625 seconds)
    (247/341) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.385758133 seconds)
    (248/341) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 7.084542709 seconds)
    (249/341) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 7.072656202 seconds)
    (250/341) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.250135539 seconds)
    (251/341) benchmarking ("collect", "all", ComplexF64, false)...
    done (took 2.272027657 seconds)
    (252/341) benchmarking ("map", identity, Int64, false)...
    done (took 2.203287044 seconds)
    (253/341) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.21597626 seconds)
    (254/341) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.693393089 seconds)
    (255/341) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.182016252 seconds)
    (256/341) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.234284553 seconds)
    (257/341) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 7.071220604 seconds)
    (258/341) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.419459803 seconds)
    (259/341) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.234422813 seconds)
    (260/341) benchmarking ("perf_countequals", "Float64")...
    done (took 2.514862494 seconds)
    (261/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.864507884 seconds)
    (262/341) benchmarking ("map", identity, Float32, false)...
    done (took 2.182956287 seconds)
    (263/341) benchmarking ("map", abs, Bool, true)...
    done (took 2.244805719 seconds)
    (264/341) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.254408361 seconds)
    (265/341) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.191071505 seconds)
    (266/341) benchmarking ("perf_sum4", Bool, true)...
    done (took 2.09824871 seconds)
    (267/341) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.222641845 seconds)
    (268/341) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 7.071623272 seconds)
    (269/341) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.326304507 seconds)
    (270/341) benchmarking ("perf_sum4", Int64, false)...
    done (took 2.105693241 seconds)
    (271/341) benchmarking ("collect", "all", Bool, false)...
    done (took 2.18200324 seconds)
    (272/341) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.308851381 seconds)
    (273/341) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 7.077640487 seconds)
    (274/341) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.203086737 seconds)
    (275/341) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.969973664 seconds)
    (276/341) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.559714291 seconds)
    (277/341) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 2.101639337 seconds)
    (278/341) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.23245476 seconds)
    (279/341) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 2.084081362 seconds)
    (280/341) benchmarking ("collect", "all", ComplexF64, true)...
    done (took 2.707432193 seconds)
    (281/341) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.4443876 seconds)
    (282/341) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.44487732 seconds)
    (283/341) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.55487227 seconds)
    (284/341) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.61464632 seconds)
    (285/341) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.602683209 seconds)
    (286/341) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.131594549 seconds)
    (287/341) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.081178208 seconds)
    (288/341) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 7.081791567 seconds)
    (289/341) benchmarking ("perf_sum2", Bool, false)...
    done (took 3.836702322 seconds)
    (290/341) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.224554128 seconds)
    (291/341) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.415785442 seconds)
    (292/341) benchmarking ("collect", "filter", ComplexF64, false)...
    done (took 3.502136898 seconds)
    (293/341) benchmarking ("perf_countnothing", Float32, true)...
    done (took 2.091854136 seconds)
    (294/341) benchmarking ("perf_sum4", Float64, true)...
    done (took 2.087362118 seconds)
    (295/341) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.614941568 seconds)
    (296/341) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.205122104 seconds)
    (297/341) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 8.42813199 seconds)
    (298/341) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 7.194823092 seconds)
    (299/341) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 4.0603575 seconds)
    (300/341) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.217196885 seconds)
    (301/341) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.414409358 seconds)
    (302/341) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.317929809 seconds)
    (303/341) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.202211364 seconds)
    (304/341) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 2.145541272 seconds)
    (305/341) benchmarking ("map", identity, Int64, true)...
    done (took 2.394332456 seconds)
    (306/341) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.27985361 seconds)
    (307/341) benchmarking ("collect", "filter", Int8, false)...
    done (took 2.894095521 seconds)
    (308/341) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.502299032 seconds)
    (309/341) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.237080429 seconds)
    (310/341) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.386391503 seconds)
    (311/341) benchmarking ("map", identity, Bool, false)...
    done (took 2.193794656 seconds)
    (312/341) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.733704872 seconds)
    (313/341) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.218250869 seconds)
    (314/341) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.923755973 seconds)
    (315/341) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.253858734 seconds)
    (316/341) benchmarking ("collect", "filter", BigFloat, true)...
    done (took 3.395278385 seconds)
    (317/341) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 2.100544917 seconds)
    (318/341) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.23358337 seconds)
    (319/341) benchmarking ("collect", "filter", ComplexF64, true)...
    done (took 3.974199309 seconds)
    (320/341) benchmarking ("collect", "filter", BigInt, false)...
    done (took 3.250840737 seconds)
    (321/341) benchmarking ("map", identity, Bool, true)...
    done (took 2.259989163 seconds)
    (322/341) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 7.094824467 seconds)
    (323/341) benchmarking ("perf_sum", Int8, true)...
    done (took 2.093140468 seconds)
    (324/341) benchmarking ("map", abs, BigInt, true)...
    done (took 7.097668196 seconds)
    (325/341) benchmarking ("map", abs, Float64, true)...
    done (took 4.158909327 seconds)
    (326/341) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.489817966 seconds)
    (327/341) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.209432988 seconds)
    (328/341) benchmarking ("map", identity, Float32, true)...
    done (took 2.313060692 seconds)
    (329/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.273258555 seconds)
    (330/341) benchmarking ("collect", "all", BigInt, false)...
    done (took 2.392797675 seconds)
    (331/341) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.606435022 seconds)
    (332/341) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.081862122 seconds)
    (333/341) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.093556914 seconds)
    (334/341) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 4.613057897 seconds)
    (335/341) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.341361032 seconds)
    (336/341) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 7.078010408 seconds)
    (337/341) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 2.228965521 seconds)
    (338/341) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 7.07664494 seconds)
    (339/341) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.247956516 seconds)
    (340/341) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.551548939 seconds)
    (341/341) benchmarking ("map", abs, BigFloat, true)...
    done (took 7.078407265 seconds)
  done (took 1204.289847804 seconds)
done (took 1206.40851096 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.103658991 seconds)
  (2/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 2.077262562 seconds)
  (3/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.654593826 seconds)
  (4/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 2.096358759 seconds)
  (5/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 2.076635616 seconds)
  (6/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 2.078488359 seconds)
  (7/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.629619969 seconds)
  (8/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 2.128278002 seconds)
  (9/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 2.086559527 seconds)
  (10/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.625924193 seconds)
  (11/152) benchmarking ("inner", "Int32", 4096)...
  done (took 2.090842835 seconds)
  (12/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 2.07942366 seconds)
  (13/152) benchmarking ("inner", "Int64", 4096)...
  done (took 2.097024039 seconds)
  (14/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 2.095860646 seconds)
  (15/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 2.085211373 seconds)
  (16/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 2.087951742 seconds)
  (17/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 2.100789533 seconds)
  (18/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 2.102944404 seconds)
  (19/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 2.09545901 seconds)
  (20/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 2.081356545 seconds)
  (21/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 2.157727458 seconds)
  (22/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 2.095328154 seconds)
  (23/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 2.076426261 seconds)
  (24/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 2.125474787 seconds)
  (25/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 2.080295331 seconds)
  (26/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 2.085512432 seconds)
  (27/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.12169608 seconds)
  (28/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 2.146426217 seconds)
  (29/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 2.146418232 seconds)
  (30/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 2.081102108 seconds)
  (31/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 2.084442038 seconds)
  (32/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.491435708 seconds)
  (33/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 2.142727548 seconds)
  (34/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 2.084378506 seconds)
  (35/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 2.086279703 seconds)
  (36/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 2.105208847 seconds)
  (37/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 2.082616039 seconds)
  (38/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 2.086824424 seconds)
  (39/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.104587939 seconds)
  (40/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 2.085825297 seconds)
  (41/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 2.100399557 seconds)
  (42/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 2.090826443 seconds)
  (43/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 2.08326959 seconds)
  (44/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 2.080996156 seconds)
  (45/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 2.077332538 seconds)
  (46/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 2.099355624 seconds)
  (47/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 2.08071837 seconds)
  (48/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.174695618 seconds)
  (49/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 2.091930583 seconds)
  (50/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.494619613 seconds)
  (51/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.153860571 seconds)
  (52/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.098882606 seconds)
  (53/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 2.146837996 seconds)
  (54/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 2.082229003 seconds)
  (55/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 2.096961893 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 2.081328942 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 2.148125742 seconds)
  (58/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 2.085357432 seconds)
  (59/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 2.08458253 seconds)
  (60/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.509419253 seconds)
  (61/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 2.196176832 seconds)
  (62/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 2.089641682 seconds)
  (63/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.482971847 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 2.177320512 seconds)
  (65/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 2.092551969 seconds)
  (66/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 2.090959625 seconds)
  (67/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 2.079784732 seconds)
  (68/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.10118487 seconds)
  (69/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.494762403 seconds)
  (70/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.687306034 seconds)
  (71/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 2.117201765 seconds)
  (72/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 2.106333208 seconds)
  (73/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 2.103105509 seconds)
  (74/152) benchmarking ("inner", "Float32", 4096)...
  done (took 2.082634673 seconds)
  (75/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 2.093951088 seconds)
  (76/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.631343726 seconds)
  (77/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 2.098083184 seconds)
  (78/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.781708029 seconds)
  (79/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 2.111966315 seconds)
  (80/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 2.09038056 seconds)
  (81/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 2.085808729 seconds)
  (82/152) benchmarking ("inner", "Int32", 4095)...
  done (took 2.105708895 seconds)
  (83/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 2.081508358 seconds)
  (84/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 2.089925269 seconds)
  (85/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.105804706 seconds)
  (86/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 2.079966807 seconds)
  (87/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 2.107820803 seconds)
  (88/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 2.085786002 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 2.090176046 seconds)
  (90/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.47725893 seconds)
  (91/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 2.150705286 seconds)
  (92/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.66140005 seconds)
  (93/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 2.092952446 seconds)
  (94/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.102248776 seconds)
  (95/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.107374515 seconds)
  (96/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.777267285 seconds)
  (97/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 2.112503465 seconds)
  (98/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.101554084 seconds)
  (99/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 2.083156879 seconds)
  (100/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.500879243 seconds)
  (101/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 2.13642815 seconds)
  (102/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.111648317 seconds)
  (103/152) benchmarking ("inner", "Float32", 4095)...
  done (took 2.085834008 seconds)
  (104/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 2.090571241 seconds)
  (105/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.1988572 seconds)
  (106/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.103277187 seconds)
  (107/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.103290881 seconds)
  (108/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 2.081892165 seconds)
  (109/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 2.104553993 seconds)
  (110/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 2.112526122 seconds)
  (111/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 2.084264272 seconds)
  (112/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 2.095884951 seconds)
  (113/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 2.106015582 seconds)
  (114/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 2.117304619 seconds)
  (115/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 2.09253815 seconds)
  (116/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 2.084179849 seconds)
  (117/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 2.093247466 seconds)
  (118/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 2.088058079 seconds)
  (119/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.123475784 seconds)
  (120/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 2.093585017 seconds)
  (121/152) benchmarking ("inner", "Float64", 4095)...
  done (took 2.090524122 seconds)
  (122/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 2.091408518 seconds)
  (123/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 2.102242537 seconds)
  (124/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 2.157663985 seconds)
  (125/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.108561968 seconds)
  (126/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 2.093034415 seconds)
  (127/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.178597645 seconds)
  (128/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 2.08856688 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.198014623 seconds)
  (130/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 2.093430358 seconds)
  (131/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 2.09118677 seconds)
  (132/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 2.083218531 seconds)
  (133/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.501264671 seconds)
  (134/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 2.140148201 seconds)
  (135/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 2.106610826 seconds)
  (136/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 2.088817174 seconds)
  (137/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 2.107742046 seconds)
  (138/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 2.127221595 seconds)
  (139/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 2.091471509 seconds)
  (140/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 2.088165045 seconds)
  (141/152) benchmarking ("inner", "Int64", 4095)...
  done (took 2.094850814 seconds)
  (142/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 2.085910381 seconds)
  (143/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 2.149380383 seconds)
  (144/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 2.087176015 seconds)
  (145/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 2.109403377 seconds)
  (146/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 2.1321717 seconds)
  (147/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 2.106025891 seconds)
  (148/152) benchmarking ("inner", "Float64", 4096)...
  done (took 2.096821264 seconds)
  (149/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.103277611 seconds)
  (150/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 2.102111245 seconds)
  (151/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 2.110303498 seconds)
  (152/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 2.107469675 seconds)
done (took 329.672033206 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.132299285 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 4.458205136 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.15535835 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 2.08595735 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.15871674 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.143642348 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 2.101990196 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 2.085691821 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 2.085862959 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.505428116 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 2.106587691 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 2.087109049 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 4.453340227 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 2.089024059 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.15785257 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 2.086795734 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 2.088262768 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.345328962 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 2.096030388 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.154469338 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 3.101287149 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 2.087763479 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 2.087106505 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.524410982 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 7.085642516 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 3.118688549 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.14829592 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 2.086638396 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.349385752 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 3.11493614 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 3.103679069 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.35226894 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.148928603 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 2.109175688 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 2.088476187 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 2.087980283 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.159466967 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 2.098846564 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.141679009 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.136102112 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.153835976 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 2.095696181 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 3.124891632 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 3.119960006 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 2.09564509 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 2.089825461 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 2.105497909 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 2.09310099 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 7.086611706 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 2.089791101 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.345718376 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 2.090043561 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 2.088338243 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 2.101821941 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 2.087362279 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 2.09301652 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 2.087877406 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 2.089457549 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.162729001 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 2.090812972 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.136854559 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.511311653 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.532389077 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 2.089506515 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 3.108183143 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 2.089305079 seconds)
  done (took 165.484643057 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.17848884 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.18643721 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.179185119 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 2.094583136 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 2.175193712 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.172567994 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 2.09608998 seconds)
  done (took 17.10644211 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 2.095536146 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.10799104 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 2.120645954 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.116293388 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 2.093009024 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.266091518 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 2.115485899 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 2.090200343 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 2.121784933 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 2.092619246 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.466971924 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 2.124529719 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 2.090346901 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 3.09498612 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 2.125851953 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 2.131589348 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 2.092599629 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.092476148 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.197125594 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.181252747 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 2.092270388 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 2.090713554 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 2.125549428 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 2.102290918 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 2.113254319 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.093701311 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 2.092134678 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 2.098678533 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 2.09034519 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 2.103072708 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.089537249 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 2.106696121 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 2.091170404 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 3.100575161 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 2.093855806 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 2.09269773 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 2.092055593 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 2.091075231 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 2.114915995 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.47748803 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 2.091502961 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 2.091663208 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 2.109705183 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 2.093833762 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 2.090526669 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 2.116592845 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 2.091993501 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 2.107215969 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 2.091603565 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 2.092261342 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 2.126655821 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 2.092461857 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 2.106799841 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 2.092695925 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 2.128433925 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 2.092745098 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 2.096729716 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 2.102596626 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.092120469 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 2.092598688 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.091048536 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.181068887 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 2.124471645 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 2.09325263 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.124360798 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.134819825 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.109562122 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 2.093154556 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 2.093459238 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 2.124526249 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 2.092937896 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.136362206 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 2.092882991 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.182370915 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 2.093018091 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.281181978 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 2.120272075 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 2.098294603 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 2.09680427 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 3.05001207 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 2.122691034 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 2.092468128 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 2.09517959 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 2.100762369 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 2.109078305 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.095670158 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 2.096362634 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 2.121832964 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 2.122803684 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 2.139398053 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 2.164032096 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 2.243801498 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 2.305947847 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.275140894 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 2.138041166 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.226314833 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 2.145875945 seconds)
  done (took 211.200504044 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 2.132119073 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 2.108999123 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 2.11778226 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 2.116085436 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 2.107176694 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 2.118247641 seconds)
  done (took 14.742552113 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 2.101278359 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 2.109957893 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 2.099602359 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 2.119233401 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 2.098829672 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 2.103881493 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 2.099458173 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.10140417 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 2.118466598 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 2.100230998 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 2.101356264 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 2.123479193 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 2.117304847 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 2.100073231 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 2.099146301 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 2.10232428 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 2.106811266 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 2.119932715 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 2.099999725 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.102262981 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.299831795 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 2.102114991 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.11858632 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 2.133319412 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 2.106945466 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 2.099009568 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 2.118563966 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 2.108972157 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 2.100852777 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 2.108446466 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 2.108666044 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 2.119819529 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 2.131903597 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 2.10891138 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 2.104685325 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 2.131852609 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.127424269 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 2.1253037 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 2.100138976 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 2.101796896 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 2.12405591 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.121311664 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 2.100564666 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 2.124348805 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 2.103260593 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 2.156491261 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 2.129004956 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 2.112416104 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 2.103288699 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 2.124500043 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 2.141751373 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 2.101956825 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 2.104371769 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 2.126326501 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 2.138125266 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.119864754 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 2.13001796 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 2.101394844 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 2.104371765 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 2.136171415 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 2.126002825 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 2.103632529 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.104330465 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 2.106075822 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 2.11658848 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 2.126033527 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 2.134058101 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.108811433 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.103774985 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 2.120668327 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 2.12462958 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 2.103209352 seconds)
  done (took 154.392542984 seconds)
done (took 564.934010935 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.134540901 seconds)
  done (took 9.164000158 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.315402898 seconds)
  done (took 9.467939115 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 12.484555255 seconds)
  done (took 14.515864523 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 7.178276429 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 7.145621953 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 7.194510149 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 7.10120046 seconds)
  done (took 30.667951695 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.222816372 seconds)
  done (took 9.256752372 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 7.121210524 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 7.121893814 seconds)
  done (took 16.36052981 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.287484675 seconds)
  done (took 9.323743543 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.494040838 seconds)
  done (took 9.560328154 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 7.118919698 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 7.103417049 seconds)
  done (took 16.283472296 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 7.104185171 seconds)
  done (took 9.138305938 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.738343071 seconds)
  done (took 10.848603358 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 7.113537614 seconds)
  done (took 9.17098694 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 7.17050611 seconds)
  done (took 9.204047446 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.865979396 seconds)
  done (took 9.899489848 seconds)
done (took 174.885676848 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 7.116546225 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 7.101978683 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 7.116224251 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 7.101874974 seconds)
  done (took 30.463702194 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 2.140878716 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 2.142669542 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 2.160011248 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 2.16063354 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 2.132070954 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 2.130696204 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 2.142592793 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 2.166316998 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 2.131560297 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 2.151414358 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 2.142323796 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 2.162513542 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 2.161516062 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 2.146273956 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 2.145120062 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 2.148993701 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 2.172780804 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 2.143082731 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 2.133073441 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 2.146229906 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 2.149001944 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 2.165853556 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 2.103825272 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 2.104290552 seconds)
  done (took 53.518482005 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.331295883 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.192814334 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.255718589 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.148224226 seconds)
  done (took 10.957880865 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 2.120700445 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 2.177617163 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 2.162673615 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 2.161572724 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.164843578 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.278064888 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 2.162727406 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.28543417 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.280093021 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.252822535 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 2.108994442 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 2.120284629 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 2.12055401 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 2.162656599 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.293839375 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 2.103620222 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 2.102719008 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.239679402 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 2.193823368 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.346608694 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 2.104796231 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 2.163899375 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.165213709 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 2.173993593 seconds)
  done (took 54.478487393 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 2.104982234 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 2.116863886 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 2.116424806 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 2.1136142 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 2.106534023 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 2.103562162 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 2.115476403 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 2.11813064 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 2.13321218 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 2.106753625 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 2.105130836 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 2.106505095 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 2.120664027 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 2.106103048 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 2.106473603 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 2.121051749 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 2.12241069 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 2.121806243 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 2.108022179 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 2.116763143 seconds)
  done (took 44.303474128 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 7.107064675 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.34680836 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.344496642 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.270152503 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 7.103394358 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 7.110582348 seconds)
  done (took 33.313450776 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 2.121515347 seconds)
    (2/12) benchmarking ("push_single!", 256)...
    done (took 2.126973175 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 2.113877949 seconds)
    (4/12) benchmarking ("push_multiple!", 256)...
    done (took 2.143025975 seconds)
    (5/12) benchmarking ("push_single!", 2048)...
    done (took 2.19239635 seconds)
    (6/12) benchmarking ("push_single!", 8)...
    done (took 2.115780259 seconds)
    (7/12) benchmarking ("prerend!", 2048)...
    done (took 2.193673902 seconds)
    (8/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.311030788 seconds)
    (9/12) benchmarking ("push_multiple!", 8)...
    done (took 2.149283941 seconds)
    (10/12) benchmarking ("append!", 2048)...
    done (took 2.191824385 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 2.133627532 seconds)
    (12/12) benchmarking ("prerend!", 8)...
    done (took 2.117782073 seconds)
  done (took 27.964687149 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 7.124152411 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 7.103975584 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 7.105292578 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 2.119019618 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 2.119564076 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 2.115503176 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 2.116402138 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 7.116825532 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 2.120686213 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 2.151408775 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 2.117232027 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 2.122279228 seconds)
  done (took 47.473963892 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.302297691 seconds)
    (2/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.270750472 seconds)
    (3/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.429698119 seconds)
    (4/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.829209069 seconds)
    (5/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.621837789 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.172514536 seconds)
    (7/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.51454915 seconds)
    (8/608) benchmarking ("sumelt", "BitMatrix")...
    done (took 5.61756667 seconds)
    (9/608) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 5.154987475 seconds)
    (10/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.205535896 seconds)
    (11/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.598791841 seconds)
    (12/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.151761468 seconds)
    (13/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.613332369 seconds)
    (14/608) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 5.073016844 seconds)
    (15/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.108567194 seconds)
    (16/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.384389335 seconds)
    (17/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.111283643 seconds)
    (18/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.582453979 seconds)
    (19/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.580073253 seconds)
    (20/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 7.204269819 seconds)
    (21/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.17091343 seconds)
    (22/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 2.122580926 seconds)
    (23/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.119597781 seconds)
    (24/608) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.652391608 seconds)
    (25/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.417687608 seconds)
    (26/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.107078655 seconds)
    (27/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.333599647 seconds)
    (28/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.16396763 seconds)
    (29/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 7.107084441 seconds)
    (30/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.328447829 seconds)
    (31/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 7.192392097 seconds)
    (32/608) benchmarking ("sumvector_view", "Matrix{Int64}")...
    done (took 2.126446898 seconds)
    (33/608) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.283064185 seconds)
    (34/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.402987132 seconds)
    (35/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.642286116 seconds)
    (36/608) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 7.193410075 seconds)
    (37/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 7.20555227 seconds)
    (38/608) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 6.151306095 seconds)
    (39/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.162371169 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.178803755 seconds)
    (41/608) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.12921022 seconds)
    (42/608) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 2.17360236 seconds)
    (43/608) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.646450562 seconds)
    (44/608) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 2.145100021 seconds)
    (45/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.354810295 seconds)
    (46/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.11031181 seconds)
    (47/608) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 7.11387224 seconds)
    (48/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.701295984 seconds)
    (49/608) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.064385357 seconds)
    (50/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.234055676 seconds)
    (51/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.286090741 seconds)
    (52/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.751955579 seconds)
    (53/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.156921527 seconds)
    (54/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.044420366 seconds)
    (55/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.249096001 seconds)
    (56/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.384130992 seconds)
    (57/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.121692544 seconds)
    (58/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.143972886 seconds)
    (59/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.181446831 seconds)
    (60/608) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 6.156776197 seconds)
    (61/608) benchmarking ("sumlinear_view", "Matrix{Float64}")...
    done (took 7.278482517 seconds)
    (62/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.209918635 seconds)
    (63/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.307312713 seconds)
    (64/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.073580355 seconds)
    (65/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.585556715 seconds)
    (66/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.307878257 seconds)
    (67/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 2.110516723 seconds)
    (68/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.116374731 seconds)
    (69/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.403021041 seconds)
    (70/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.381416658 seconds)
    (71/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.192614255 seconds)
    (72/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.243931425 seconds)
    (73/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 7.215436565 seconds)
    (74/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 2.136823901 seconds)
    (75/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.113023641 seconds)
    (76/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 5.160221475 seconds)
    (77/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.234270638 seconds)
    (78/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 7.110193211 seconds)
    (79/608) benchmarking ("mapr_access", "Matrix{Int64}")...
    done (took 3.839415388 seconds)
    (80/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.618317204 seconds)
    (81/608) benchmarking ("sumcartesian", "Matrix{Float64}")...
    done (took 5.063250844 seconds)
    (82/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.223817617 seconds)
    (83/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.844824651 seconds)
    (84/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.11682779 seconds)
    (85/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 7.11837809 seconds)
    (86/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.122677007 seconds)
    (87/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 4.692184094 seconds)
    (88/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.06132279 seconds)
    (89/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.192818557 seconds)
    (90/608) benchmarking ("sumlogical_view", "Matrix{Int64}")...
    done (took 6.18705058 seconds)
    (91/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.485677912 seconds)
    (92/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 2.127183549 seconds)
    (93/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.1398098 seconds)
    (94/608) benchmarking ("sum", "3dsubarray")...
    done (took 2.327744008 seconds)
    (95/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.251275407 seconds)
    (96/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.192774166 seconds)
    (97/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.934923963 seconds)
    (98/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.277058385 seconds)
    (99/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.147156566 seconds)
    (100/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.747033514 seconds)
    (101/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.205997901 seconds)
    (102/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.239715908 seconds)
    (103/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 7.200540754 seconds)
    (104/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.307664234 seconds)
    (105/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.59082778 seconds)
    (106/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.239605259 seconds)
    (107/608) benchmarking ("sumcartesian", "Matrix{Int64}")...
    done (took 2.953434705 seconds)
    (108/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.78580247 seconds)
    (109/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.465446637 seconds)
    (110/608) benchmarking "5d"...
    done (took 3.799468788 seconds)
    (111/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.180751628 seconds)
    (112/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.175261217 seconds)
    (113/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.220066423 seconds)
    (114/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.227844999 seconds)
    (115/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.143801977 seconds)
    (116/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.834616292 seconds)
    (117/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.239932269 seconds)
    (118/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.241384347 seconds)
    (119/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.311486574 seconds)
    (120/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.137709137 seconds)
    (121/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.08711886 seconds)
    (122/608) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 2.152828471 seconds)
    (123/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.339921023 seconds)
    (124/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.249276981 seconds)
    (125/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.176811379 seconds)
    (126/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.141003785 seconds)
    (127/608) benchmarking ("sumrange_view", "Matrix{Float64}")...
    done (took 2.141157045 seconds)
    (128/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 7.152958956 seconds)
    (129/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.13539021 seconds)
    (130/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.726628879 seconds)
    (131/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.153226592 seconds)
    (132/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.635784709 seconds)
    (133/608) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 2.267757073 seconds)
    (134/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 2.135360051 seconds)
    (135/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.077339389 seconds)
    (136/608) benchmarking ("sumcolon_view", "Matrix{Float64}")...
    done (took 2.236075833 seconds)
    (137/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.713989079 seconds)
    (138/608) benchmarking ("sumrange", "Matrix{Float64}")...
    done (took 7.285843169 seconds)
    (139/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.289351254 seconds)
    (140/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.607281636 seconds)
    (141/608) benchmarking ("sumeach", "BitMatrix")...
    done (took 5.762387759 seconds)
    (142/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.642897484 seconds)
    (143/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.152917536 seconds)
    (144/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.95672292 seconds)
    (145/608) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.662987521 seconds)
    (146/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.305921943 seconds)
    (147/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.254796742 seconds)
    (148/608) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.780512403 seconds)
    (149/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.345393085 seconds)
    (150/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.292417567 seconds)
    (151/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.168811231 seconds)
    (152/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.325562924 seconds)
    (153/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 7.18102441 seconds)
    (154/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.187043238 seconds)
    (155/608) benchmarking ("sumcolon", "Matrix{Int64}")...
    done (took 7.167478786 seconds)
    (156/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.962036813 seconds)
    (157/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.869211279 seconds)
    (158/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.214057916 seconds)
    (159/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 7.213261612 seconds)
    (160/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.13420189 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.275636412 seconds)
    (162/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.345419692 seconds)
    (163/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.798608232 seconds)
    (164/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.238813003 seconds)
    (165/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.131331061 seconds)
    (166/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.235301546 seconds)
    (167/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.333723616 seconds)
    (168/608) benchmarking "ind2sub"...
    done (took 7.217701653 seconds)
    (169/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.142737204 seconds)
    (170/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.500826106 seconds)
    (171/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.415929075 seconds)
    (172/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.662341608 seconds)
    (173/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.560865743 seconds)
    (174/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.818108926 seconds)
    (175/608) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.2205534 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.129974031 seconds)
    (177/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.325811483 seconds)
    (178/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.203633776 seconds)
    (179/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.799216863 seconds)
    (180/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.319053371 seconds)
    (181/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.477354209 seconds)
    (182/608) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 6.746909153 seconds)
    (183/608) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 5.171436563 seconds)
    (184/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.157827972 seconds)
    (185/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.245458605 seconds)
    (186/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.59751014 seconds)
    (187/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.252481879 seconds)
    (188/608) benchmarking ("sumcartesian_view", "Matrix{Float64}")...
    done (took 2.982239908 seconds)
    (189/608) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 6.317649417 seconds)
    (190/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.834312402 seconds)
    (191/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.218282909 seconds)
    (192/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.734802431 seconds)
    (193/608) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 5.149695952 seconds)
    (194/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.209291701 seconds)
    (195/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.663445201 seconds)
    (196/608) benchmarking ("sumelt_boundscheck", "Matrix{Float64}")...
    done (took 5.190832409 seconds)
    (197/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 2.749033646 seconds)
    (198/608) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 7.289050041 seconds)
    (199/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.313736337 seconds)
    (200/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 2.157532124 seconds)
    (201/608) benchmarking ("sumelt", "1:100000")...
    done (took 2.153672947 seconds)
    (202/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.156961615 seconds)
    (203/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.139645062 seconds)
    (204/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.284144906 seconds)
    (205/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.221502854 seconds)
    (206/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.223119555 seconds)
    (207/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.099310325 seconds)
    (208/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.704116622 seconds)
    (209/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 2.256146666 seconds)
    (210/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 2.197602902 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 7.171581122 seconds)
    (212/608) benchmarking ("sumlogical", "Matrix{Float64}")...
    done (took 6.392411498 seconds)
    (213/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.050366235 seconds)
    (214/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.139825299 seconds)
    (215/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.127368266 seconds)
    (216/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.22934473 seconds)
    (217/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 5.071196553 seconds)
    (218/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.897890404 seconds)
    (219/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 2.219563635 seconds)
    (220/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.161381642 seconds)
    (221/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.661681449 seconds)
    (222/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.151908623 seconds)
    (223/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.164871074 seconds)
    (224/608) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 7.184824044 seconds)
    (225/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.070076597 seconds)
    (226/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.245336238 seconds)
    (227/608) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 6.185248675 seconds)
    (228/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.270600817 seconds)
    (229/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.700545191 seconds)
    (230/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.273819463 seconds)
    (231/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.218993496 seconds)
    (232/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 7.115163543 seconds)
    (233/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.136039707 seconds)
    (234/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.419406764 seconds)
    (235/608) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.143182864 seconds)
    (236/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.403507924 seconds)
    (237/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.641378237 seconds)
    (238/608) benchmarking ("sumlinear", "BitMatrix")...
    done (took 5.791952379 seconds)
    (239/608) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.860169824 seconds)
    (240/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.305518877 seconds)
    (241/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.765841609 seconds)
    (242/608) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 2.203252914 seconds)
    (243/608) benchmarking ("sumeach", "1:100000")...
    done (took 2.191405171 seconds)
    (244/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.753872382 seconds)
    (245/608) benchmarking ("sumvector", "1:100000")...
    done (took 2.227399995 seconds)
    (246/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.194401977 seconds)
    (247/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.339516663 seconds)
    (248/608) benchmarking ("sumlogical", "1:100000")...
    done (took 2.89998568 seconds)
    (249/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.30812497 seconds)
    (250/608) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 6.244334909 seconds)
    (251/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.254034255 seconds)
    (252/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 7.205066275 seconds)
    (253/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.590850867 seconds)
    (254/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.771313173 seconds)
    (255/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 7.175735867 seconds)
    (256/608) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 3.196276391 seconds)
    (257/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.298231036 seconds)
    (258/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 7.23445081 seconds)
    (259/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.263458231 seconds)
    (260/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.995499805 seconds)
    (261/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.157534055 seconds)
    (262/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.137213786 seconds)
    (263/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.131676624 seconds)
    (264/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.38029268 seconds)
    (265/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.328498666 seconds)
    (266/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.551532159 seconds)
    (267/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.68089317 seconds)
    (268/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.940287035 seconds)
    (269/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.123901059 seconds)
    (270/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.218662615 seconds)
    (271/608) benchmarking "4d"...
    done (took 3.298337561 seconds)
    (272/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.490724301 seconds)
    (273/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.17688512 seconds)
    (274/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.24005338 seconds)
    (275/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.845813951 seconds)
    (276/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.816650342 seconds)
    (277/608) benchmarking ("sumcartesian_view", "Matrix{Int64}")...
    done (took 2.946083402 seconds)
    (278/608) benchmarking ("sumvector", "Matrix{Float64}")...
    done (took 2.701200639 seconds)
    (279/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.336573766 seconds)
    (280/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.369086842 seconds)
    (281/608) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.625143532 seconds)
    (282/608) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 2.277054398 seconds)
    (283/608) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 2.228991756 seconds)
    (284/608) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 3.090065359 seconds)
    (285/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.367206644 seconds)
    (286/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.160250388 seconds)
    (287/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.356173676 seconds)
    (288/608) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 5.13989573 seconds)
    (289/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.25588731 seconds)
    (290/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.478634958 seconds)
    (291/608) benchmarking ("sumvector_view", "Matrix{Float64}")...
    done (took 2.190669439 seconds)
    (292/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.627274915 seconds)
    (293/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.230350666 seconds)
    (294/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.668532019 seconds)
    (295/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.505825258 seconds)
    (296/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.219085745 seconds)
    (297/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.306984769 seconds)
    (298/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.212572307 seconds)
    (299/608) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 7.185892754 seconds)
    (300/608) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.261272548 seconds)
    (301/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 7.218021462 seconds)
    (302/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.311248453 seconds)
    (303/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.321930275 seconds)
    (304/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.209810619 seconds)
    (305/608) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 6.733861288 seconds)
    (306/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.216032289 seconds)
    (307/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.220332739 seconds)
    (308/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.231575936 seconds)
    (309/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 4.755712321 seconds)
    (310/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.19128426 seconds)
    (311/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.20709358 seconds)
    (312/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.717609354 seconds)
    (313/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.252048593 seconds)
    (314/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.334056231 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.302302426 seconds)
    (316/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.989338358 seconds)
    (317/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 7.245582851 seconds)
    (318/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 7.295531047 seconds)
    (319/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.690793379 seconds)
    (320/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 7.12746397 seconds)
    (321/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.577463514 seconds)
    (322/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.240688906 seconds)
    (323/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.715400834 seconds)
    (324/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.243827124 seconds)
    (325/608) benchmarking ("sumlinear", "Matrix{Int64}")...
    done (took 2.954473723 seconds)
    (326/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 7.241454162 seconds)
    (327/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.43260592 seconds)
    (328/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.228505501 seconds)
    (329/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.890818837 seconds)
    (330/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.275044351 seconds)
    (331/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.595171978 seconds)
    (332/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.204934785 seconds)
    (333/608) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.387041495 seconds)
    (334/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.525938584 seconds)
    (335/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.314507916 seconds)
    (336/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.195858498 seconds)
    (337/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.191666345 seconds)
    (338/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.782238745 seconds)
    (339/608) benchmarking ("sumcolon", "1:100000")...
    done (took 3.269744313 seconds)
    (340/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.680893776 seconds)
    (341/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.165291791 seconds)
    (342/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.888875437 seconds)
    (343/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.630330743 seconds)
    (344/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.217003039 seconds)
    (345/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 4.667336891 seconds)
    (346/608) benchmarking "3d"...
    done (took 3.104892995 seconds)
    (347/608) benchmarking ("sum", "3darray")...
    done (took 2.137118853 seconds)
    (348/608) benchmarking ("sumlogical", "Matrix{Int64}")...
    done (took 6.476300337 seconds)
    (349/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.883655089 seconds)
    (350/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.922249081 seconds)
    (351/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.172418604 seconds)
    (352/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.160961712 seconds)
    (353/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.259248114 seconds)
    (354/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 2.328498975 seconds)
    (355/608) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 6.285053472 seconds)
    (356/608) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.906224827 seconds)
    (357/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.178719076 seconds)
    (358/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 2.140179134 seconds)
    (359/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.336834861 seconds)
    (360/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.297581264 seconds)
    (361/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.121602396 seconds)
    (362/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.656463138 seconds)
    (363/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.890676866 seconds)
    (364/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.561864088 seconds)
    (365/608) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 2.222743945 seconds)
    (366/608) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.378912988 seconds)
    (367/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.340569456 seconds)
    (368/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.460547659 seconds)
    (369/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.26048151 seconds)
    (370/608) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.281196515 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Matrix{Int64}")...
    done (took 2.980911717 seconds)
    (372/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.720425546 seconds)
    (373/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.334716752 seconds)
    (374/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.156567131 seconds)
    (375/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.225448393 seconds)
    (376/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.883569864 seconds)
    (377/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.664693812 seconds)
    (378/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.300807731 seconds)
    (379/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.503284806 seconds)
    (380/608) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.675288358 seconds)
    (381/608) benchmarking ("sumrange", "Matrix{Int64}")...
    done (took 7.249148612 seconds)
    (382/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 7.219077585 seconds)
    (383/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 7.262680979 seconds)
    (384/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.731772191 seconds)
    (385/608) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.911991896 seconds)
    (386/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.895949824 seconds)
    (387/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.49274386 seconds)
    (388/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.682499191 seconds)
    (389/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.75177965 seconds)
    (390/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.916833066 seconds)
    (391/608) benchmarking ("sumelt", "Matrix{Int64}")...
    done (took 2.865189739 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.370753848 seconds)
    (393/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.312056394 seconds)
    (394/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.54948025 seconds)
    (395/608) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.106351013 seconds)
    (396/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.551649624 seconds)
    (397/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.442647283 seconds)
    (398/608) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 2.202882583 seconds)
    (399/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.201868499 seconds)
    (400/608) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.350514912 seconds)
    (401/608) benchmarking ("sumeach_view", "Matrix{Float64}")...
    done (took 7.215058015 seconds)
    (402/608) benchmarking ("sumcolon", "Matrix{Float64}")...
    done (took 7.207888151 seconds)
    (403/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.023647149 seconds)
    (404/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.529196456 seconds)
    (405/608) benchmarking ("sumlogical_view", "Matrix{Float64}")...
    done (took 6.314927824 seconds)
    (406/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.966226511 seconds)
    (407/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.796537786 seconds)
    (408/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.320267545 seconds)
    (409/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.203650685 seconds)
    (410/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 4.830883968 seconds)
    (411/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.296902292 seconds)
    (412/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.261018425 seconds)
    (413/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 7.217151754 seconds)
    (414/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.754313189 seconds)
    (415/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.566726212 seconds)
    (416/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.228032028 seconds)
    (417/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.160684301 seconds)
    (418/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.976141864 seconds)
    (419/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.144262187 seconds)
    (420/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.388163716 seconds)
    (421/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.246367414 seconds)
    (422/608) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 2.230993097 seconds)
    (423/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.054024358 seconds)
    (424/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.283586565 seconds)
    (425/608) benchmarking ("sumcolon_view", "Matrix{Int64}")...
    done (took 2.333075879 seconds)
    (426/608) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.708852855 seconds)
    (427/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.366144698 seconds)
    (428/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.26550608 seconds)
    (429/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.141184615 seconds)
    (430/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.268770156 seconds)
    (431/608) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 5.172549774 seconds)
    (432/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.830215428 seconds)
    (433/608) benchmarking ("sumeach", "Matrix{Int64}")...
    done (took 2.980186259 seconds)
    (434/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.232645702 seconds)
    (435/608) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 2.225325188 seconds)
    (436/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.349937117 seconds)
    (437/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.214348704 seconds)
    (438/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.221738165 seconds)
    (439/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.147673924 seconds)
    (440/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.449478187 seconds)
    (441/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.860226225 seconds)
    (442/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.58948942 seconds)
    (443/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.298962142 seconds)
    (444/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.507207306 seconds)
    (445/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.507506964 seconds)
    (446/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 7.119338213 seconds)
    (447/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.314155266 seconds)
    (448/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.453640448 seconds)
    (449/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.138479021 seconds)
    (450/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.216751838 seconds)
    (451/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.270277239 seconds)
    (452/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 2.189935321 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.255346136 seconds)
    (454/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.148158214 seconds)
    (455/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.210429594 seconds)
    (456/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.379636741 seconds)
    (457/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.301631672 seconds)
    (458/608) benchmarking ("sumeach_view", "Matrix{Int64}")...
    done (took 7.306882778 seconds)
    (459/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 7.214209426 seconds)
    (460/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.241616993 seconds)
    (461/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.169810021 seconds)
    (462/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.310493169 seconds)
    (463/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.308494402 seconds)
    (464/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.139060554 seconds)
    (465/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.152646357 seconds)
    (466/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.161082951 seconds)
    (467/608) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.401658761 seconds)
    (468/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 7.227817266 seconds)
    (469/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.161246945 seconds)
    (470/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.371611173 seconds)
    (471/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.228381886 seconds)
    (472/608) benchmarking "sub2ind"...
    done (took 7.50490294 seconds)
    (473/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.22173977 seconds)
    (474/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 3.086909763 seconds)
    (475/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.151670118 seconds)
    (476/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 7.092272527 seconds)
    (477/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.400031588 seconds)
    (478/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.731829886 seconds)
    (479/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.234218085 seconds)
    (480/608) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 5.048382073 seconds)
    (481/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.277434706 seconds)
    (482/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 7.245787131 seconds)
    (483/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.656100015 seconds)
    (484/608) benchmarking "6d"...
    done (took 3.858287651 seconds)
    (485/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.349679831 seconds)
    (486/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.406627677 seconds)
    (487/608) benchmarking ("sumrange", "1:100000")...
    done (took 3.185548425 seconds)
    (488/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.348377403 seconds)
    (489/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.211990279 seconds)
    (490/608) benchmarking ("sumrange_view", "Matrix{Int64}")...
    done (took 2.148675968 seconds)
    (491/608) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 7.174529209 seconds)
    (492/608) benchmarking ("sumvector", "Matrix{Int64}")...
    done (took 2.780919598 seconds)
    (493/608) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.596606494 seconds)
    (494/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 7.205720976 seconds)
    (495/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.652841129 seconds)
    (496/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.25142699 seconds)
    (497/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.254579415 seconds)
    (498/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 2.987342755 seconds)
    (499/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.689521653 seconds)
    (500/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 7.242336575 seconds)
    (501/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.224304131 seconds)
    (502/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 3.243440906 seconds)
    (503/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.685932862 seconds)
    (504/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.496559986 seconds)
    (505/608) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 7.269541203 seconds)
    (506/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.35544242 seconds)
    (507/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.265687925 seconds)
    (508/608) benchmarking ("sumelt", "Matrix{Float64}")...
    done (took 5.198066487 seconds)
    (509/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 7.26755636 seconds)
    (510/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 5.251546735 seconds)
    (511/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.744382909 seconds)
    (512/608) benchmarking ("sumlinear_view", "Matrix{Int64}")...
    done (took 7.232740426 seconds)
    (513/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.786448542 seconds)
    (514/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.383256445 seconds)
    (515/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.310398762 seconds)
    (516/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.195352492 seconds)
    (517/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 2.162367397 seconds)
    (518/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.201839865 seconds)
    (519/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.357648909 seconds)
    (520/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 3.328478832 seconds)
    (521/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.169252996 seconds)
    (522/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.454783201 seconds)
    (523/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.322986376 seconds)
    (524/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.156316954 seconds)
    (525/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.673908539 seconds)
    (526/608) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.828661713 seconds)
    (527/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.355646536 seconds)
    (528/608) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 2.193171661 seconds)
    (529/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.271137157 seconds)
    (530/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.60091684 seconds)
    (531/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.058483346 seconds)
    (532/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.308997992 seconds)
    (533/608) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.775880609 seconds)
    (534/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.396742101 seconds)
    (535/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.217892795 seconds)
    (536/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.457096206 seconds)
    (537/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.493918134 seconds)
    (538/608) benchmarking ("sumlinear", "1:100000")...
    done (took 2.225369488 seconds)
    (539/608) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 2.427218494 seconds)
    (540/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.244127513 seconds)
    (541/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.548774691 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.522711028 seconds)
    (543/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.788756542 seconds)
    (544/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.308923295 seconds)
    (545/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.243072152 seconds)
    (546/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 3.43895236 seconds)
    (547/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 7.170434162 seconds)
    (548/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.666995236 seconds)
    (549/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.604611521 seconds)
    (550/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.253985096 seconds)
    (551/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.225852286 seconds)
    (552/608) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.237689506 seconds)
    (553/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 7.234074653 seconds)
    (554/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.24051614 seconds)
    (555/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.739754485 seconds)
    (556/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.32052124 seconds)
    (557/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.272592931 seconds)
    (558/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.422823632 seconds)
    (559/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.673988147 seconds)
    (560/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 2.180234733 seconds)
    (561/608) benchmarking ("sumeach", "Matrix{Float64}")...
    done (took 5.200952876 seconds)
    (562/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 7.175175911 seconds)
    (563/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.192499059 seconds)
    (564/608) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 2.194580329 seconds)
    (565/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.150742678 seconds)
    (566/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.238598679 seconds)
    (567/608) benchmarking "2d"...
    done (took 3.005569211 seconds)
    (568/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.340550114 seconds)
    (569/608) benchmarking "7d"...
    done (took 2.488167152 seconds)
    (570/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.105331846 seconds)
    (571/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.310187669 seconds)
    (572/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.122186323 seconds)
    (573/608) benchmarking ("sumlinear", "Matrix{Float64}")...
    done (took 5.087326324 seconds)
    (574/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.610239048 seconds)
    (575/608) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 7.133288574 seconds)
    (576/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.424293681 seconds)
    (577/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.115780672 seconds)
    (578/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.156700311 seconds)
    (579/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.2278313 seconds)
    (580/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.318351921 seconds)
    (581/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.351159265 seconds)
    (582/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.554931689 seconds)
    (583/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 7.222506354 seconds)
    (584/608) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.895618781 seconds)
    (585/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.21564947 seconds)
    (586/608) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 7.209724096 seconds)
    (587/608) benchmarking ("mapr_access", "BitMatrix")...
    done (took 7.210422302 seconds)
    (588/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.306540775 seconds)
    (589/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 2.211582574 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.448912327 seconds)
    (591/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.665318536 seconds)
    (592/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.46150227 seconds)
    (593/608) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 2.367130621 seconds)
    (594/608) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.046408705 seconds)
    (595/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.277551509 seconds)
    (596/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.179426908 seconds)
    (597/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.249966772 seconds)
    (598/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.014136527 seconds)
    (599/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.779524498 seconds)
    (600/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.320589973 seconds)
    (601/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.397262412 seconds)
    (602/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.001804682 seconds)
    (603/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.183671758 seconds)
    (604/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.730581991 seconds)
    (605/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.233475983 seconds)
    (606/608) benchmarking ("mapr_access", "Matrix{Float64}")...
    done (took 3.913969847 seconds)
    (607/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.230161861 seconds)
    (608/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.206777813 seconds)
  done (took 2480.646155215 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 7.232597242 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 7.273252617 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 7.285957699 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.290691529 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.262300252 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.345892888 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.316819828 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 7.28401778 seconds)
  done (took 60.424262441 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hcat", 500)...
    done (took 7.223875316 seconds)
    (2/17) benchmarking "4467"...
    done (took 5.23572182 seconds)
    (3/17) benchmarking ("vcat_setind", 5)...
    done (took 2.256426737 seconds)
    (4/17) benchmarking ("catnd_setind", 500)...
    done (took 7.246400007 seconds)
    (5/17) benchmarking ("vcat", 500)...
    done (took 7.234687057 seconds)
    (6/17) benchmarking ("vcat", 5)...
    done (took 2.162962231 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.387927655 seconds)
    (8/17) benchmarking ("hvcat_setind", 5)...
    done (took 2.244748372 seconds)
    (9/17) benchmarking ("vcat_setind", 500)...
    done (took 7.220927069 seconds)
    (10/17) benchmarking ("hvcat", 5)...
    done (took 2.185286426 seconds)
    (11/17) benchmarking ("hcat_setind", 500)...
    done (took 7.156946694 seconds)
    (12/17) benchmarking ("hcat", 5)...
    done (took 2.250257732 seconds)
    (13/17) benchmarking ("hvcat", 500)...
    done (took 7.238739218 seconds)
    (14/17) benchmarking ("catnd", 500)...
    done (took 7.243470353 seconds)
    (15/17) benchmarking ("hcat_setind", 5)...
    done (took 2.194039869 seconds)
    (16/17) benchmarking ("catnd", 5)...
    done (took 2.429587745 seconds)
    (17/17) benchmarking ("hvcat_setind", 500)...
    done (took 7.220482405 seconds)
  done (took 83.335985237 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.277870542 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 8.838477079 seconds)
    (3/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 7.227471224 seconds)
    (4/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.421627743 seconds)
    (5/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.27056539 seconds)
    (6/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.441569573 seconds)
    (7/12) benchmarking ("gramschmidt!", 100)...
    done (took 7.220286006 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 7.219008469 seconds)
    (9/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.846304778 seconds)
    (10/12) benchmarking ("gramschmidt!", 1000)...
    done (took 8.815750658 seconds)
    (11/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.142292193 seconds)
    (12/12) benchmarking ("gramschmidt!", 250)...
    done (took 7.158212262 seconds)
  done (took 93.501987953 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 4)...
    done (took 2.129688704 seconds)
    (2/5) benchmarking ("setindex!", 3)...
    done (took 2.148975244 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 2.182905884 seconds)
    (4/5) benchmarking ("setindex!", 1)...
    done (took 2.18045477 seconds)
    (5/5) benchmarking ("setindex!", 2)...
    done (took 2.225104527 seconds)
  done (took 12.938251963 seconds)
done (took 3035.478144744 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 2.385466314 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 2.297234356 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 2.251431594 seconds)
  done (took 6.620174669 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.23422652 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.30455009 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.341115401 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.376243272 seconds)
  done (took 11.39396869 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.48452654 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.648927818 seconds)
  done (took 7.302034173 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 2.693668731 seconds)
  (6/15) benchmarking "18129"...
  done (took 7.222462002 seconds)
  (7/15) benchmarking "20517"...
  done (took 2.730740985 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 7.248016849 seconds)
    (2/3) benchmarking "Float64"...
    done (took 7.178952896 seconds)
    (3/3) benchmarking "Float16"...
    done (took 7.183149463 seconds)
  done (took 23.743564668 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 2.221861614 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 2.197114967 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 2.194478807 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 2.251731362 seconds)
  done (took 11.006634968 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 7.274782573 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 4.197967232 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 7.187609477 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.176034115 seconds)
  done (took 22.988535167 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 2.312196959 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 2.230370857 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 2.893768149 seconds)
  done (took 9.511029753 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.952184063 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.546972376 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.933782017 seconds)
  done (took 10.505327853 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 3.0788362 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.123750164 seconds)
  done (took 8.274005554 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.305275326 seconds)
  done (took 4.3825284 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.653555048 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.66762002 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.980376791 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.991760015 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 3.174180686 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.468368372 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.532321886 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.470074233 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.82672054 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.663126348 seconds)
  done (took 29.494246564 seconds)
done (took 162.315199386 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.008137631 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.585914639 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.333837319 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.853998445 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.242815209 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.413952909 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.307651759 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.698247682 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.457185771 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.419450241 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.309697822 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.253757052 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.233163115 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.550093802 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.234756536 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.566036349 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.33755273 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.968029889 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.085816381 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.721510891 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.306445808 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.485311886 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.052713937 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.462319515 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.362764745 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.364461969 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 4.197115417 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.566091214 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.26041108 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 4.183468369 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.266003891 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.958233225 seconds)
  done (took 186.115193218 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.141587787 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.143706504 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.14926806 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.142646709 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.090104259 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.144727429 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.142013273 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.143737811 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.844848517 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.833288835 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.141201371 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.984347093 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.143414297 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.142295289 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.145628491 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.165006566 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.11744636 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.141342368 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.168298431 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.143194011 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.14396897 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.800659704 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.144566656 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.780644241 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.120474793 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.144568237 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.143482335 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.165993538 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.145366352 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.145735398 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.146047212 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.144536412 seconds)
  done (took 221.170554104 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.143413444 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.146250242 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.146549412 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.158680466 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.144353456 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.142265381 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.16456382 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.142754187 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 7.14483034 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 7.143514307 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.170337317 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.143995598 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.143922376 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.168698496 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.141559044 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.143880836 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.143791394 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.165392573 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.144120986 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.143806378 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.171277745 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 7.144779291 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.146253924 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 7.145062802 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.167273827 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.145311427 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.147802297 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.170709081 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.144208121 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.143352553 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.147033626 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.17504796 seconds)
  done (took 230.912065554 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.468717693 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 2.198607716 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.181654408 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 3.493867428 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.193296898 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 2.191755079 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 3.505834599 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.470851479 seconds)
  done (took 22.806151883 seconds)
done (took 663.08738965 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.911113462 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.07513622 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.341962435 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.192340752 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.809131748 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.264736368 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.185665888 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.290287512 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.955194135 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.31853516 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.687723123 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.185462573 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 3.042971977 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.217895076 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.349333913 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.26625568 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.634512586 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.958527154 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.375719237 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.016256237 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.411437529 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.200637545 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.300978719 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 3.007994637 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.695157304 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.238599495 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.305354393 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.643004835 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.221914923 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.497096833 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.271099138 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.580854704 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.212540189 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.200024462 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.246907856 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.255487751 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.531906786 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.189841299 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.308213242 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.976416731 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.020112849 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.836980869 seconds)
  done (took 116.326992699 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 2.211952277 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 2.208822398 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 2.190502788 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 2.208290079 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 2.194812997 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 2.219924336 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 2.198681403 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 2.163421454 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 2.15347629 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 2.181119083 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 2.154510365 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 2.1548426 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 2.153356577 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.154348303 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 2.172172961 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 2.165375839 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 2.152575061 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.185234466 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 2.182184677 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 2.190413182 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 2.163131945 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 2.163431846 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 2.16280069 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 2.178976519 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 2.157455938 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 2.157375217 seconds)
  done (took 58.707897238 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 2.150229035 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.362688359 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.498802514 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.191654213 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 2.162144369 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.181210324 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.189583801 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.15727178 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.150932727 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.150680729 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.310746261 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.155204082 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.163286087 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.490218384 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.208105159 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 2.148867509 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 2.148740676 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 2.150758599 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.345028714 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.197462366 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.192242031 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.157803697 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.190098025 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.188253453 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 2.155823639 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.150463301 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.153812461 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.633682088 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.188696703 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.282481899 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.25929767 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.198495011 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.604836968 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.504763787 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.227832925 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.160269817 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 2.174198598 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.330013709 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.167535023 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 2.149670067 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.189752576 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.185194479 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.491789384 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.748803852 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.17535898 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 2.174233715 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.636276917 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.349581298 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.209809597 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.192846031 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.499870919 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.190115718 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 2.150987091 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 2.15316761 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.212536617 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.164195085 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 2.152988715 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.44719859 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.197755505 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.192548614 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.162262727 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.154853411 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.354630856 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.186586883 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.339127878 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.166621804 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.159517743 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 2.184715257 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.496102624 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.189879052 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.735257869 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.173999443 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 2.168730248 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.284917438 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.34598438 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.66776176 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.190991183 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.354636644 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.600649789 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.206226954 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.189130409 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.617636861 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.209892366 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.165251742 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 2.162533532 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.159190579 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.153123072 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.197801508 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.192344099 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.685322512 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.749169495 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.470497007 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.207619449 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.193309891 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 2.155607416 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.443718678 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.166852417 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.156929459 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.501423102 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.769004781 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.181165972 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.174058321 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.770561277 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.192995812 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.205890993 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.189488863 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.54483245 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.224194222 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.220456766 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.159529188 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.190734048 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.163003361 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.200745248 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.171457201 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.161436388 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.739086304 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.370271166 seconds)
  done (took 268.907913121 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 7.165563059 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.161393238 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 7.161265012 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 7.161130768 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 7.160284347 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.162671335 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 7.158886126 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 7.160567013 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.182546327 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 7.158943203 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 7.169291089 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 7.161310945 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 7.162298491 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.190666542 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.189073893 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.18969329 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.959714549 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.172288034 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.16871523 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.197310599 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.875626975 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.179848175 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.175746234 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.17162185 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.256065377 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.207977523 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.223374745 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.204948904 seconds)
  done (took 176.586078251 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.209025332 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.231298234 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.185426611 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.279369758 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.190076887 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.119773412 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.17160281 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.235384193 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.192121264 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.14503438 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.147056639 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.18796762 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.232228238 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.278804679 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.215281907 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.199840522 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.272679068 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.191676609 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.196731686 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.193902218 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.249219279 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.228105796 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.225398553 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.268958773 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.214864674 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.256845655 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.214908151 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.178844318 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.18304683 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.312038636 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.324905242 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.384824478 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.430493262 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.435998867 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.406197738 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.382160305 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.486758154 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.290282326 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.240621017 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.323206609 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.253865352 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.245822983 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.304036774 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.309839063 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.261780872 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.340174116 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.216336843 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.215414186 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.235784848 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.200866704 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.205987428 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.226500922 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.377531385 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.422703423 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.301819217 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.302521552 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.387327236 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.475403374 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.396450339 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.386376879 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.217330885 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.296229413 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.19283014 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.175144412 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.166912118 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.178276464 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.234993579 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.207010509 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.272905471 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.203434472 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.298207854 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.392069553 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.239820659 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.179731526 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.175146965 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.235748648 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.277791424 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.238330487 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.241755444 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.21214453 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.249195432 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.282316585 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.358702459 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.244586795 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.212146822 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.3010493 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.308367614 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.17661355 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.165879708 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.183615919 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.164960998 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.199744918 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.266205478 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.27439084 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.305642257 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.247521194 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.25118072 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.181850597 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.224299654 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.189419134 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.228506626 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.200459932 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.23466485 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.541379293 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.232940768 seconds)
  done (took 239.159229802 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.634305656 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.276008626 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.287280535 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.460133422 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.61651609 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.537786487 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.399922062 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.394248998 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.321375731 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.433182913 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.343845752 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.399204674 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.274210758 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.263779767 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.242306909 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.259772442 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.301076194 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.679005093 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.403759464 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 4.202552915 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.285721959 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.558865121 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.584854374 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.672108662 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.379908217 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.758843172 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.979248507 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.403578588 seconds)
  done (took 73.482126199 seconds)
done (took 935.291000615 seconds)
SAVING RESULT...
DONE!
