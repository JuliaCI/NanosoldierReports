cset: moving following pidspec: 19700
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.823257814 seconds)
loading group "shootout"... done (took 1.216021775 seconds)
loading group "string"... done (took 0.672932994 seconds)
loading group "linalg"... done (took 8.697571301 seconds)
loading group "parallel"... done (took 0.170955155 seconds)
loading group "find"... done (took 2.968601974 seconds)
loading group "tuple"... done (took 2.136517653 seconds)
loading group "union"... done (took 15.000133639 seconds)
loading group "dates"... done (took 1.48186251 seconds)
loading group "micro"... done (took 0.221404893 seconds)
loading group "simd"... done (took 4.814948132 seconds)
loading group "io"... done (took 1.069759447 seconds)
loading group "random"... done (took 9.615630609 seconds)
loading group "problem"... done (took 1.529902377 seconds)
loading group "array"... done (took 25.403615442 seconds)
loading group "misc"... done (took 1.910797294 seconds)
loading group "scalar"... done (took 43.999276238 seconds)
loading group "sort"... done (took 3.372879895 seconds)
loading group "sparse"... done (took 12.919628131 seconds)
loading group "collection"... done (took 18.962495169 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.432230555 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.1267955 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.13129034 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.116682689 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.192419972 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.124644747 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.133785132 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.087479915 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.869126328 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.146294783 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.117527084 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.432598224 seconds)
done (took 5.358179907 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 0.172065177 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.095941531 seconds)
    (2/2) benchmarking "String"...
    done (took 0.085479347 seconds)
  done (took 1.404647935 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.074068816 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.065023504 seconds)
    (3/3) benchmarking "different"...
    done (took 0.069135291 seconds)
  done (took 1.432423449 seconds)
  (4/7) benchmarking "replace"...
  done (took 0.066574017 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.138146179 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.067881152 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068234493 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068897206 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.068105129 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067850101 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.068224091 seconds)
  done (took 1.773513274 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074399002 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.06960941 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067563657 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069292448 seconds)
  done (took 1.508252605 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.068030636 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.125012163 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.066919463 seconds)
    (4/4) benchmarking "different"...
    done (took 0.06673846 seconds)
  done (took 1.55057787 seconds)
done (took 9.15376926 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.14365376 seconds)
    (2/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.82285059 seconds)
    (3/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.758416081 seconds)
    (4/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.126090261 seconds)
    (5/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.2499936 seconds)
    (6/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.45090895 seconds)
    (7/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.126148445 seconds)
    (8/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.186987294 seconds)
    (9/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.092269079 seconds)
    (10/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.07717786 seconds)
    (11/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.12478952 seconds)
    (12/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.080319765 seconds)
    (13/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.403497548 seconds)
    (14/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.406318325 seconds)
    (15/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.073763118 seconds)
    (16/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.175801852 seconds)
    (17/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.637926336 seconds)
    (18/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.087309454 seconds)
    (19/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.136616036 seconds)
    (20/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.472097814 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.074110739 seconds)
    (22/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.089614416 seconds)
    (23/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.087392403 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.071864512 seconds)
    (25/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.344331616 seconds)
    (26/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.153641506 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.654394879 seconds)
    (28/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.096903659 seconds)
    (29/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.070318906 seconds)
    (30/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.097004369 seconds)
    (31/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.070899237 seconds)
    (32/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.07907294 seconds)
  done (took 10.78109855 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.096052391 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.093048504 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.07084443 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.126485947 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.094174878 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.072213447 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.077564881 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.069705384 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.092031824 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127321775 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.09243073 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.101261747 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.068713415 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.076967054 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.076442381 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.199581187 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080329015 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.082430487 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.0694982 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.083619052 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.108617402 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078852683 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.078972824 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.080563519 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.135464074 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.169462012 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.096818544 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.099133779 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066492935 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.081137864 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.117808787 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.128109439 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067296784 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066779904 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.122593592 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.096200423 seconds)
  done (took 4.729946966 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.886684543 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.098401235 seconds)
    (2/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.085395314 seconds)
    (3/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.076684529 seconds)
    (4/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.109726123 seconds)
    (5/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113776234 seconds)
    (6/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.121286143 seconds)
    (7/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.125776308 seconds)
    (8/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.103085193 seconds)
    (9/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.07112661 seconds)
    (10/118) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.117158181 seconds)
    (11/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.155834999 seconds)
    (12/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.652983958 seconds)
    (13/118) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 2.152458717 seconds)
    (14/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.071939382 seconds)
    (15/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.120194846 seconds)
    (16/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.362998616 seconds)
    (17/118) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.059570173 seconds)
    (18/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.070443864 seconds)
    (19/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.069048602 seconds)
    (20/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.073237611 seconds)
    (21/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.072096514 seconds)
    (22/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.115126568 seconds)
    (23/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.067724639 seconds)
    (24/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.182040857 seconds)
    (25/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.580160099 seconds)
    (26/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.070651859 seconds)
    (27/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.069795078 seconds)
    (28/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.096481368 seconds)
    (29/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.067323542 seconds)
    (30/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.143743021 seconds)
    (31/118) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.065809218 seconds)
    (32/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.094759757 seconds)
    (33/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.072236829 seconds)
    (34/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.544009336 seconds)
    (35/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067124326 seconds)
    (36/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.065532007 seconds)
    (37/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.09033688 seconds)
    (38/118) benchmarking ("3-arg mul!", 2)...
    done (took 0.093997986 seconds)
    (39/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.181549704 seconds)
    (40/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.070488287 seconds)
    (41/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.081177074 seconds)
    (42/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.068353752 seconds)
    (43/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.111092662 seconds)
    (44/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.082204546 seconds)
    (45/118) benchmarking ("5-arg mul!", 3)...
    done (took 0.496795055 seconds)
    (46/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.072510567 seconds)
    (47/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.567610373 seconds)
    (48/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.228994135 seconds)
    (49/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.075910082 seconds)
    (50/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.074333121 seconds)
    (51/118) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.103766372 seconds)
    (52/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066167941 seconds)
    (53/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.069207436 seconds)
    (54/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.836211614 seconds)
    (55/118) benchmarking ("5-arg mul!", 2)...
    done (took 0.12529693 seconds)
    (56/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.06835159 seconds)
    (57/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.276357799 seconds)
    (58/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.068535805 seconds)
    (59/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.069184371 seconds)
    (60/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.071286324 seconds)
    (61/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.101827955 seconds)
    (62/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.072361659 seconds)
    (63/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.070530467 seconds)
    (64/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.075603587 seconds)
    (65/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.09865921 seconds)
    (66/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 0.78772515 seconds)
    (67/118) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.090097661 seconds)
    (68/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.098504067 seconds)
    (69/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.069138829 seconds)
    (70/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.412488948 seconds)
    (71/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.074103821 seconds)
    (72/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.069693541 seconds)
    (73/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.071333759 seconds)
    (74/118) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.086097584 seconds)
    (75/118) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.113236992 seconds)
    (76/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.068302745 seconds)
    (77/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.067783016 seconds)
    (78/118) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.11043968 seconds)
    (79/118) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.091513855 seconds)
    (80/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.091783322 seconds)
    (81/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.071702344 seconds)
    (82/118) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.06616678 seconds)
    (83/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.068992494 seconds)
    (84/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.068029013 seconds)
    (85/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.323267901 seconds)
    (86/118) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.160388069 seconds)
    (87/118) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.06710036 seconds)
    (88/118) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065545164 seconds)
    (89/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.48166925 seconds)
    (90/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.067769552 seconds)
    (91/118) benchmarking ("3-arg mul!", 3)...
    done (took 0.065777074 seconds)
    (92/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.067872784 seconds)
    (93/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.069444297 seconds)
    (94/118) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 0.091011986 seconds)
    (95/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.068870695 seconds)
    (96/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065137105 seconds)
    (97/118) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065951782 seconds)
    (98/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.101088923 seconds)
    (99/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.070189551 seconds)
    (100/118) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.451854335 seconds)
    (101/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.070280393 seconds)
    (102/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.471308932 seconds)
    (103/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.071620438 seconds)
    (104/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.105851895 seconds)
    (105/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.121437838 seconds)
    (106/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.069771721 seconds)
    (107/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.098542655 seconds)
    (108/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.070095465 seconds)
    (109/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066798567 seconds)
    (110/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.075895411 seconds)
    (111/118) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067321242 seconds)
    (112/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066144176 seconds)
    (113/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.071381612 seconds)
    (114/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.067585235 seconds)
    (115/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.068117305 seconds)
    (116/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.070877817 seconds)
    (117/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.069958328 seconds)
    (118/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.069230285 seconds)
  done (took 22.767959928 seconds)
done (took 40.394617106 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 512)...
    done (took 0.338021866 seconds)
    (2/5) benchmarking ("identity", 4096)...
    done (took 0.080720568 seconds)
    (3/5) benchmarking ("identity", 2)...
    done (took 0.081353398 seconds)
    (4/5) benchmarking ("identity", 1024)...
    done (took 0.081444672 seconds)
    (5/5) benchmarking ("identity", 64)...
    done (took 0.081052201 seconds)
  done (took 1.934127953 seconds)
done (took 3.305716065 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 0.135988608 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.077586598 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 0.066249142 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.103574513 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 0.070822232 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 0.104371822 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 0.11130381 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 0.106981903 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 0.070789976 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 0.070929094 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 0.070852518 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 0.108382901 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 0.108187637 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 0.070841939 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.101032974 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 0.107074615 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 0.071093953 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 0.066318882 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 0.070905045 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 0.070471808 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 0.070686415 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.066224556 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 0.070536703 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 0.070421631 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.102048095 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 0.070893511 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 0.066155999 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.101509611 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 0.070761658 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.101132251 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 0.070694172 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 0.070396718 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 0.070778489 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.222107227 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 0.070805747 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.101740669 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.066404621 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 0.071144886 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 0.070838228 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 0.070830356 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 0.070814214 seconds)
  done (took 4.827012064 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.073690553 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.083522014 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.085054079 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.063314394 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.073629515 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.084233821 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.063832029 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.083538156 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.093404472 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.084737543 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.084128803 seconds)
  done (took 2.194491978 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.072370313 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.084806126 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.086581393 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.063390839 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.07532905 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.084907615 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.063268002 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.084958929 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.088160688 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.085434112 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.085199697 seconds)
  done (took 2.173996635 seconds)
done (took 10.487787276 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 0.099312263 seconds)
    (2/2) benchmarking "11899"...
    done (took 0.067778036 seconds)
  done (took 1.44618195 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.228356082 seconds)
    (2/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.513321991 seconds)
    (3/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.294497549 seconds)
    (4/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.095646131 seconds)
    (5/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.074937492 seconds)
    (6/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.088175889 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.206198177 seconds)
    (8/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.069498849 seconds)
  done (took 8.045156588 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.100281932 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.07179985 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070396035 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.073556344 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069487446 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.069493102 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070072459 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071372266 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.070929067 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.070335684 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070879019 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069941113 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.06990739 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.070533045 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.06949546 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.071369578 seconds)
  done (took 2.566303451 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("minimum", (8,))...
    done (took 0.10607441 seconds)
    (2/24) benchmarking ("sumabs", (4,))...
    done (took 0.071358979 seconds)
    (3/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.101021865 seconds)
    (4/24) benchmarking ("minimum", (2,))...
    done (took 0.063661083 seconds)
    (5/24) benchmarking ("sum", (8,))...
    done (took 0.074050543 seconds)
    (6/24) benchmarking ("sumabs", (2,))...
    done (took 0.064525104 seconds)
    (7/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.072456064 seconds)
    (8/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074957408 seconds)
    (9/24) benchmarking ("sumabs", (8,))...
    done (took 0.072551763 seconds)
    (10/24) benchmarking ("sum", (2, 2))...
    done (took 0.07275599 seconds)
    (11/24) benchmarking ("minimum", (2, 2))...
    done (took 0.074292776 seconds)
    (12/24) benchmarking ("sum", (4,))...
    done (took 0.072796574 seconds)
    (13/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.072933465 seconds)
    (14/24) benchmarking ("sumabs", (16,))...
    done (took 0.073345497 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074756817 seconds)
    (16/24) benchmarking ("sum", (4, 4))...
    done (took 0.075584693 seconds)
    (17/24) benchmarking ("sum", (8, 8))...
    done (took 0.075191519 seconds)
    (18/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072526147 seconds)
    (19/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074655063 seconds)
    (20/24) benchmarking ("sum", (16, 16))...
    done (took 0.075246607 seconds)
    (21/24) benchmarking ("minimum", (4,))...
    done (took 0.074147836 seconds)
    (22/24) benchmarking ("sum", (16,))...
    done (took 0.074920163 seconds)
    (23/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075815675 seconds)
    (24/24) benchmarking ("sum", (2,))...
    done (took 0.073447282 seconds)
  done (took 3.236485439 seconds)
done (took 16.595032115 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.178300255 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.076600936 seconds)
  done (took 1.548685543 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.070565717 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.070392728 seconds)
  done (took 1.454869449 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.07526526 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.062501814 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.080591236 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.072327599 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.063216708 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.062881878 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.079798375 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.063225565 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.063095927 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.063275865 seconds)
  done (took 1.997609955 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.065088173 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.070964675 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.068540707 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.06660121 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.068902359 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064347088 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.067076008 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.064973094 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.070940354 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063787935 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.068199007 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.08559032 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.068193677 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.086446172 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.067921899 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068354431 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070202404 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067785642 seconds)
  done (took 2.566691122 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.063164352 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.063486856 seconds)
  done (took 1.445980522 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067018775 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063536755 seconds)
    (3/7) benchmarking "month"...
    done (took 0.065870915 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066356392 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.06383737 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063022485 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063864378 seconds)
  done (took 1.76465771 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.433311282 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.125503384 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.347187283 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070896852 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.07891254 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.259271748 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065529566 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070563333 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070247031 seconds)
  done (took 2.877632731 seconds)
done (took 14.986169987 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.084936675 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.183813234 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.089870334 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.410804003 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.094266675 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.069331342 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.114719967 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.178590229 seconds)
done (took 2.567641234 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.281081221 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.267930632 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.403701739 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.127652237 seconds)
  done (took 3.119842822 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.341479005 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.080348087 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.07880896 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069354906 seconds)
  done (took 1.90567832 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067062017 seconds)
    (2/2) benchmarking "read"...
    done (took 0.072827217 seconds)
  done (took 1.466769545 seconds)
done (took 8.110227884 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.102492095 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065824374 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065134103 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.069246854 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066002435 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.066046911 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065164858 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.077080557 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.064017034 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.065230237 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.066032538 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.066259484 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066372773 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06577159 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065584359 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06590227 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065837609 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06568163 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.064907971 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.063773943 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065990322 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066263417 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064973696 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.066025908 seconds)
  done (took 2.981354304 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082219544 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067620049 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.068490228 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.067911207 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.068998802 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.068524582 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.068685842 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067490887 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.06876263 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067227611 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068818845 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.068741858 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067070338 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069246117 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067050607 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069190416 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.068874382 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067491287 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067227131 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069159725 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.068554584 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06758382 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.06909903 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068670708 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.06940969 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069370536 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067668151 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.067562237 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06897633 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069004651 seconds)
  done (took 3.413935151 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.068743801 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.06170274 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.062226974 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.07138008 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.061428776 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.062221701 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.062375453 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.06199711 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.062442421 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.063614086 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.062378788 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.062056697 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.062612831 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.061818907 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.061925932 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.062415196 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066507243 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.081250264 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.062105685 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.061702462 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066749261 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.062357273 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062195735 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.062044989 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.062878661 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062273643 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.06204145 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.062277208 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.062146583 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.062859255 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.061899456 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.065720429 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067042804 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.061849065 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071556893 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066774851 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.061816683 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.065961844 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.062974853 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.061809138 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.061655218 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.061775916 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.061927146 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.061720866 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.072052523 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.061850385 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.062901779 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.062297914 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.06227221 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.061899878 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.061910751 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.064193798 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.070268421 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.063089461 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.06138835 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.06270025 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.061545708 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.062608761 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.061428617 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.061400197 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.061370608 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065881672 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.063339196 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.062534187 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.081642731 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.063083767 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071846991 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.061966686 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.062769159 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065473035 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.062135344 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.07951326 seconds)
  done (took 5.964101315 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.07417555 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073991509 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081440582 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.072652533 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066239679 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.062820747 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066808043 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062934491 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072806005 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.066970299 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063347941 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066858001 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072831056 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067099399 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064211397 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.072578655 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.067093708 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066564774 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.062848211 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067513901 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064277862 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066892059 seconds)
  done (took 2.864665129 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.137936663 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067860486 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.107135584 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.076957575 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070733551 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.077582528 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.06862802 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067707498 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068168014 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068168943 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068503058 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067937277 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070333495 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068773712 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068432955 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068289867 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067884835 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068389723 seconds)
  done (took 2.709494589 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079431658 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067583422 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.09095834 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067526748 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.068002928 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067553325 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071432516 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072229776 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067414025 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068110222 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.071846498 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067592801 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067743984 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067431683 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06737271 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067758062 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.06720866 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067760552 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071859511 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071074051 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07151643 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07173327 seconds)
  done (took 2.903474797 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079360842 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066465888 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081909514 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067819944 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061996972 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.062135557 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.067659451 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066900836 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.067587595 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.066579073 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066998033 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.062151022 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068230814 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066913261 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068851642 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067085713 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066496008 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067137185 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066993336 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062197749 seconds)
  done (took 2.705723542 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089107898 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065301194 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.064528993 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084263722 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064949622 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.06523017 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084742164 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.065034843 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.065059779 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08696196 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064852441 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064791615 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084626151 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.084116057 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.065181263 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.084898786 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.084142724 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.084403392 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065444499 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064778882 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086593092 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.06486502 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.084573881 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065137391 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.064986833 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.064952188 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065141215 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.08447297 seconds)
  done (took 3.417804902 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066450474 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064505423 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.065352979 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065299295 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065609802 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.065218905 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065668918 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065742018 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065369008 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066076254 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065493819 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065434818 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068833807 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.06566453 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065767081 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065543279 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065617665 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066243174 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065906943 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065639233 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065695614 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065293376 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065322878 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065795312 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065968634 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065472779 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065706138 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065708348 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065082221 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065653845 seconds)
  done (took 3.332278283 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075349401 seconds)
    (2/2) benchmarking "in"...
    done (took 0.07390204 seconds)
  done (took 1.510192304 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064089067 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079618139 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.061390738 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.07382171 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070273105 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065700546 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.071306757 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070815279 seconds)
  done (took 1.910675756 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.069034492 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.09301637 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.063880885 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.064339168 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.067041136 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.129839917 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.07717361 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.075836322 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.077994639 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.06611912 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.064661995 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.076210646 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.063647953 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.076963657 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.065281283 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.072585565 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070880239 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.081805909 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.076945978 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.062153887 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.076065498 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064980083 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062823201 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.064934652 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.063674044 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.071255919 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.079947554 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.076161048 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072486149 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.06199942 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.082809346 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.062974377 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.063712466 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072072653 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.067406839 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.062725179 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.10053502 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.063482427 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.068100609 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062310925 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.075173726 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084099786 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.077720131 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.081315061 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.064442175 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.064599297 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.062165776 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.06462663 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.066107831 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.072125893 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062459446 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070700436 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061884349 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.064433927 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.073211392 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.062965973 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.068709708 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.072324519 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.076699101 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.073434228 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.071795533 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.0783176 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.07156046 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.070833688 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.063606431 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.082720307 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.064724205 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.076066127 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.077823687 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.063987079 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076398952 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062294983 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061858848 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.062304714 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.097098138 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.064786442 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.063899793 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.06268904 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.062491145 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.064009564 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072339169 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.068169282 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070225219 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.065954552 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078655109 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.072487585 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.062441473 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.069611784 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.080465406 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065935086 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.062637076 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.079428709 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065582458 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.061759599 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.0800903 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.07250877 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.064123588 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.063243144 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.065412743 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.075710523 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.063478401 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060732141 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.0708772 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.064022367 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.064499243 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.066816132 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070580233 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.062456521 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.072496291 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.067111824 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.063797659 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.060878955 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.066384987 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.063488203 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.061146267 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071479434 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.061819902 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.07608018 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.068026685 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.076594703 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.076569115 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.072315735 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.077862081 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.062096326 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.06030302 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.079813625 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.07109977 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.062935179 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.079922365 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061608166 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.075401936 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061366191 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.063295512 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.071117256 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061044326 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.0637965 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.061520012 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.066619821 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.06333568 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.0630418 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067509429 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.070133742 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073785171 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.062605652 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070592215 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.061709457 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.076895142 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.0715088 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065968436 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.064895559 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.062409738 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073443017 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067856488 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070826218 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061321533 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.062466384 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.06138876 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072052282 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.071348145 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.063269911 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.068432898 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066207841 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.062608289 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.062479527 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.063618044 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.06537454 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065489696 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.062427164 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069699918 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070754661 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.075309248 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067971879 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.069077085 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.060926264 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.061187224 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.063370116 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.06073884 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065870379 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.071193804 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.077101618 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.073775454 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.082578778 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.061908015 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071616452 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.063012806 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.078368186 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074785441 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.062942699 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.066328953 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.060976153 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.063175675 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.071056963 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073605286 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.07581337 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.076540173 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065808686 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066163321 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.061333403 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.077166386 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.061920447 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07007542 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.071182144 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.066369431 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.061993201 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.063174491 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070670714 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066066173 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.061492433 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.076991588 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.067451918 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060713051 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.076080409 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.062043657 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.072537315 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061287495 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065064152 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.06693257 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.063761921 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.071255347 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077481323 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.06082681 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.063107971 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.077699765 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.063569781 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.062124496 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068313948 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.07638929 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066601211 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.070339984 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073385625 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.072283003 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.066689941 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.072405643 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.062849759 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.071500067 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.065375008 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.074017754 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.062089356 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.080027447 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061036732 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.077627557 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.062353927 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.073615899 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.063026742 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071564015 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.063110997 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.079247896 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.063884729 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.062758723 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.072957646 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.06089599 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.071036656 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061222964 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.06672404 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067997121 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.071415907 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.063850413 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071427827 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.063478392 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.320747474 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.070803568 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.074282413 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.075850241 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.07015698 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.065296555 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.07405499 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077719205 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.074811426 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.067817525 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.068043379 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.06657692 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.076501582 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.068183679 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.06788136 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.075241012 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.070683054 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.071791978 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.067291904 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.067059693 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.067061257 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.074435464 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075586758 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.083870583 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074633044 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.073158891 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.074810043 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.064550049 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.081677647 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.065287065 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.076625209 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.06389331 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.071235417 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.074612722 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.065057377 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.084836822 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066376583 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.072985512 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077502707 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073592558 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.068096816 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.082765821 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.067450579 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.074492074 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.07227513 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.068892915 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.07023724 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.065739504 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.072892194 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.073676151 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.075110318 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.064564021 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.071234948 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.073150205 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.065320906 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.072020574 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.065572097 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.072271683 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.065406119 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062863863 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.068289247 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.075764111 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.068737749 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.068944566 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064377985 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062540105 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064100019 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.070846181 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.068342525 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.072697622 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.079467508 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.062665202 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.064912928 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063256878 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.067461538 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.082125279 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.074143448 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.071819566 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068286234 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062686983 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.065078191 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.065808564 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.064300888 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.06720496 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.06277835 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062921534 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074644148 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.065502295 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.068333142 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063963744 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065027203 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.07362137 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.068802116 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064039801 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.069921256 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.063601166 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.068346011 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.062622544 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.065261253 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067817854 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.062628784 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.067029907 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.074149817 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.080670723 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.070228644 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.072772934 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.065001891 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.072252086 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.079610991 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.071566907 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064902563 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.073095725 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.062580984 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.082738279 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.073163994 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072181194 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073236295 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.064186424 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.080662339 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067656716 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.073068338 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.07856318 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064280527 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.069579535 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.062398063 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.079040336 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067510124 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.062430019 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071093647 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070704834 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.06897713 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.074892645 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.063026619 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.221856562 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069022927 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066874559 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.064823252 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.064836581 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.072299933 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.079412601 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.063662932 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.067365357 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.071262364 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.071580129 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067481261 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075778747 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.071362073 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064295463 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.065091931 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.067164702 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.064392796 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.075905169 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064353588 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.068453804 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.068599481 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.063268968 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.070282567 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.080466106 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.073410758 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073299377 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063375163 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.062772611 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.081234269 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066801795 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.067091177 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.071776641 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.073029586 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075789027 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.073083758 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.081127362 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064335157 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069102536 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076052444 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.064321087 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.063103097 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.067184584 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.065138765 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.072536006 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.073241997 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.071172825 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065802029 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.070212264 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.077134015 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.064636449 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067543839 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.068211718 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.063866218 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.074156484 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.071358787 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.074690168 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.064658409 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062784901 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.06622768 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.072340072 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.071176242 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.072195873 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064472192 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.070509994 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.077467698 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.071014815 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.066628642 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062666886 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.066645497 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.072386238 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.067711785 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062902824 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.067727912 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.066631714 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.070292866 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.072541688 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.067216823 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062720474 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.080241388 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.071578518 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.072606787 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.06519941 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.065476312 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063790853 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062828393 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.074583906 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062510239 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.065113018 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.067752224 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.065138853 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.08064938 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.071875769 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.079818597 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064623551 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.0675862 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062615051 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072957819 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.067465834 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.063142452 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.073511309 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.061859642 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.07842371 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.074963603 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.068838877 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.0835016 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.068307587 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.071456999 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.078676767 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073180787 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.072129374 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.066773317 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.072914782 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.064867497 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.074243214 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.062775885 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.062180523 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.073254456 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071599952 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.075871232 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062391933 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.072646603 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.064656038 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.07120082 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070678468 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.064916821 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.064467882 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.064237258 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072051053 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067007124 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.072304514 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067505526 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.232320847 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.064364333 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.074382658 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.072448677 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.073973738 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.076852904 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075493595 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.071103002 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.063400463 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070252575 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070931022 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.064625958 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067836212 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.066478743 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.084958641 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.06480399 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.064533315 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.077648759 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.070012022 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.063072809 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.069796825 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067810329 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.07352087 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.064173009 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.073732779 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.067750485 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.064012487 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067956618 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.068240698 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.061985689 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063064873 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.06317514 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.073820178 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.067594345 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.063410239 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.082504377 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.064777515 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.072361502 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074911567 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.070257201 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.065290726 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062080803 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.064362316 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.076601873 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.079051182 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.067014663 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072198475 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.065182261 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.072658427 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.061967451 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.071718888 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.071377731 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071848774 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.062555706 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063134954 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.078022294 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.078854849 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067566047 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.072440353 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.072379687 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.064681853 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.085046401 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.071795932 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064428364 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.074076434 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065426915 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.062149126 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.062098769 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.064760431 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.074711984 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063406634 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.0660064 seconds)
  done (took 43.299694093 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.103614432 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065211306 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063332951 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063247767 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074767536 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064354454 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063782949 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064908377 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.064242409 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066456995 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06394348 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066386658 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07511549 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077408615 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074273024 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067719669 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063682545 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064360153 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063629698 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064388883 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074267783 seconds)
  done (took 2.982227949 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.067859344 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.067849628 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.067785392 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067794742 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066936274 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064323483 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067676802 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063479282 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068204771 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064244898 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.068372191 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064167666 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.064108614 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.064312409 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064053313 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065150674 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.068563838 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06733878 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.063440411 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067614694 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.0651279 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.06803716 seconds)
  done (took 2.94994423 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.065493555 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.064117958 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.072089428 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062903076 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.062996862 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.066662217 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.063058033 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.067699267 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.067697214 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.067389858 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.072411975 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.063764003 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.063078231 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.068740743 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.063038624 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.064142369 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107394762 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.064036877 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.064129026 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.062892551 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.065920133 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.072798516 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062725665 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.06316842 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.067299833 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.066354176 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.062883742 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.066119461 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.063694875 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.067893963 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.064271945 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.062535233 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.072632882 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.071925953 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.067659686 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.06811206 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.064895269 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.064301474 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063330799 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.062943721 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.072091457 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.064833143 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.06322378 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.06483792 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.072566635 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.063133086 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.062709012 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.072566477 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.062976886 seconds)
  done (took 4.772854015 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.074712644 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.11693275 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068943577 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.097621526 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.076214887 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.06974616 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.06926697 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.098426957 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064306395 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.065028264 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.077352672 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.077973757 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066224953 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.068277001 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.069227448 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065988022 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066873094 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06517758 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068947849 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065700695 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069153105 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.070344706 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.076633802 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077108092 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.067334183 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065337374 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065795532 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.067628213 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.076514758 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069858934 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.067970852 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068318323 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.077196842 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.06963154 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065543288 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.065858096 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.077712293 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.066434509 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.065880613 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064247599 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.065765044 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.067398803 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.070888665 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.077816308 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066256953 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071211953 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066274776 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064355216 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077051824 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.065730803 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.070450076 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.077997989 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.067406613 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.066556402 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.067860234 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.077047062 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066585508 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.065415487 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.066384059 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076916238 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.06491386 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.067732725 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.080673407 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066318033 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.069688304 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078151512 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071837544 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.067654309 seconds)
  done (took 6.494370776 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07377349 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.099042238 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074568804 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074654318 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074320668 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.074629975 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.074358415 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074060601 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.073820638 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.074822103 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074416966 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115140113 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070732007 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079042741 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074259307 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.074661346 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074305509 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074160932 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074196733 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074038207 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.073908811 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074973398 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.074471816 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.074699435 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.07717383 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070694338 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074350905 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.074102104 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074550641 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.074213736 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.076738284 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074120613 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.074195163 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075488229 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.076863467 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.074236067 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065001881 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074337086 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.074407533 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.074706456 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070503754 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074723883 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074124316 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070503366 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.074352918 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074212753 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.074739715 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.07962391 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.080389535 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074581804 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074344771 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.074876921 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074209463 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.074508417 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.075020758 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.081668582 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075346903 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074584178 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074331997 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.07461641 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074742224 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.081457651 seconds)
  done (took 6.233483386 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077578493 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070022965 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.083119961 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062997601 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063382647 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.073028527 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063264756 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063122658 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070288626 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.070329796 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07209582 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073619196 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075568408 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072364417 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073439881 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075438793 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073340897 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07294904 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070571099 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072905655 seconds)
  done (took 2.959187043 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.078823865 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082386062 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069008525 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072516223 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068778166 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072948967 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068046643 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068868503 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069292539 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069481827 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073978403 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074212479 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069535952 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073256556 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.074023794 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072945385 seconds)
  done (took 2.675488168 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.067014963 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.07108786 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.069473221 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.064284997 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066375137 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.06360346 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.064307633 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.06299999 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.065702191 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077419046 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.0640177 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.067014564 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.064611049 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.063234924 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063719848 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.067160707 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.066148029 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.064523825 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.064772387 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.068524135 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.073022771 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.065543329 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067172362 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.06435248 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.066830041 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.073297019 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.066125869 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.066552746 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.064387438 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067094472 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066986558 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.071094989 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.066587349 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.064845534 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063230425 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.064501572 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065081428 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.067294106 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.067568919 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.064977058 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063141921 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.070136871 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.064898074 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.065299917 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.066412799 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.067173885 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.065741751 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.070555073 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064775815 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.066661731 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.064662719 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.065938453 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.064928078 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071631976 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.066730793 seconds)
  done (took 5.180210311 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082239375 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068726996 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063204866 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063192484 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068359242 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.068989663 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068992126 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.069039093 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069515141 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.062909409 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069380458 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068682952 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069768858 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068615497 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069095559 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068951417 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063249784 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069075468 seconds)
  done (took 2.768711532 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070402533 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069046556 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.067866087 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065359428 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065205286 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070034449 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.0633844 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.065002231 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064980843 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065476976 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065188044 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.064510047 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064718913 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.064811362 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.06939963 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065079226 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.064871228 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063432095 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065269841 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063215485 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.070048707 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063334473 seconds)
  done (took 2.974857129 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.091592257 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.087242026 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.130813649 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.082502247 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.092031737 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.074014294 seconds)
  done (took 2.086272964 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097115233 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107100372 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067977305 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067729429 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076619728 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071235082 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071551648 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071938231 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077228372 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075723796 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071583444 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077215328 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0777297 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073377456 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077443378 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079871118 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071780392 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071839881 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068771934 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080233584 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071947083 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077507534 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071860227 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071843697 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071819395 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073719784 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080131334 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076032137 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071936597 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077754596 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080257161 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072132388 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077524302 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076027247 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068867285 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07768668 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072036862 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080005675 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077842823 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073809316 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068668955 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077705241 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077844451 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073675061 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080204836 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072174604 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073995327 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072194859 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072319853 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082305702 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078112494 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07377882 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077559852 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080623599 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080321414 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082603197 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076362685 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074210545 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077637563 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076805699 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074019325 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077998914 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073696316 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076386336 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08000644 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073998153 seconds)
  done (took 6.550252823 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105018453 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069133954 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072163736 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075523191 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073600696 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071962184 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072090408 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072184848 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072186537 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069552058 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108790252 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072470081 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074340486 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076744325 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072763778 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072332287 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072437829 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073925171 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069343473 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082730368 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072424565 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074039205 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073839893 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074011274 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075986549 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080181389 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071823892 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072108383 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071882944 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072339675 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07413361 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071953149 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073680556 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068873187 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074085452 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072048214 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07200197 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073510407 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071890966 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077395564 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073954905 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079874947 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07075011 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069957492 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075873911 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072113054 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071983553 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06960563 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071887145 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069028671 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076076767 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076168056 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075986866 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073907559 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072294386 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072491962 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07258103 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07212167 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072434822 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080219621 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074052975 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072095328 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082634843 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072249416 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072262467 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074115579 seconds)
  done (took 6.469614237 seconds)
done (took 133.442437097 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.222315206 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.191435373 seconds)
  done (took 1.922067389 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.077803599 seconds)
    (2/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.170443941 seconds)
    (3/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.07571798 seconds)
    (4/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.076920032 seconds)
    (5/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.111907393 seconds)
    (6/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.108249651 seconds)
    (7/16) benchmarking ("transpose", (600, 600))...
    done (took 0.076927653 seconds)
    (8/16) benchmarking ("transpose", (600, 400))...
    done (took 0.073488815 seconds)
    (9/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.077563695 seconds)
    (10/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.075547254 seconds)
    (11/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.143277348 seconds)
    (12/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.076947151 seconds)
    (13/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.073569641 seconds)
    (14/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.075654368 seconds)
    (15/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.075258295 seconds)
    (16/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.075466063 seconds)
  done (took 2.978027311 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.111552322 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.190469788 seconds)
    (3/18) benchmarking ("IJV", 10)...
    done (took 0.085207172 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.072825345 seconds)
    (5/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.117940887 seconds)
    (6/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.080452207 seconds)
    (7/18) benchmarking ("IJV", 100)...
    done (took 0.075280666 seconds)
    (8/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.078553123 seconds)
    (9/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.080570509 seconds)
    (10/18) benchmarking ("IV", 1000)...
    done (took 0.073027226 seconds)
    (11/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.110921752 seconds)
    (12/18) benchmarking ("Diagonal", 10)...
    done (took 0.084904873 seconds)
    (13/18) benchmarking ("Diagonal", 100)...
    done (took 0.077076496 seconds)
    (14/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.080347433 seconds)
    (15/18) benchmarking ("IJV", 1000)...
    done (took 0.075547372 seconds)
    (16/18) benchmarking ("Diagonal", 1000)...
    done (took 0.076993025 seconds)
    (17/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.078704817 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.080120711 seconds)
  done (took 3.17073616 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.100599833 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.08996316 seconds)
  done (took 1.738127371 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.165430995 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.107961203 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.146431255 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.331388543 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.13303156 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.130059796 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.134700087 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.130486261 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.114955526 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.123902333 seconds)
  done (took 3.056456708 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.108762981 seconds)
    (2/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.108631742 seconds)
    (3/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.312874219 seconds)
    (4/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.106488415 seconds)
    (5/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.085258672 seconds)
    (6/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.08044686 seconds)
    (7/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.07811245 seconds)
    (8/54) benchmarking ("spmat", "range", 100)...
    done (took 0.083671179 seconds)
    (9/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.078904534 seconds)
    (10/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.079414198 seconds)
    (11/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.126462385 seconds)
    (12/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.077807235 seconds)
    (13/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.075241237 seconds)
    (14/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.128554245 seconds)
    (15/54) benchmarking ("spmat", "array", 100)...
    done (took 0.103530896 seconds)
    (16/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.110726987 seconds)
    (17/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.073988031 seconds)
    (18/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.081956774 seconds)
    (19/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.083389269 seconds)
    (20/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.073655877 seconds)
    (21/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.079503573 seconds)
    (22/54) benchmarking ("spmat", "range", 10)...
    done (took 0.083363632 seconds)
    (23/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.183559972 seconds)
    (24/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.081569107 seconds)
    (25/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.104332109 seconds)
    (26/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.078777136 seconds)
    (27/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.080815975 seconds)
    (28/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.077946469 seconds)
    (29/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.077322212 seconds)
    (30/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.082010124 seconds)
    (31/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.08259724 seconds)
    (32/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.102563582 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.081627582 seconds)
    (34/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.085403334 seconds)
    (35/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.080322463 seconds)
    (36/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.100306019 seconds)
    (37/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.074284456 seconds)
    (38/54) benchmarking ("spmat", "array", 10)...
    done (took 0.102757624 seconds)
    (39/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.077612191 seconds)
    (40/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.075341121 seconds)
    (41/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078195585 seconds)
    (42/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.082633553 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.075248407 seconds)
    (44/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.081834381 seconds)
    (45/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.078520845 seconds)
    (46/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.080933355 seconds)
    (47/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.083567062 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.073815012 seconds)
    (49/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.078519904 seconds)
    (50/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.077765822 seconds)
    (51/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.075540769 seconds)
    (52/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.079710487 seconds)
    (53/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.079718775 seconds)
    (54/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.080592549 seconds)
  done (took 6.517096207 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.11390647 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.112490331 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073138779 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.11670688 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109682531 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07329522 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.108401885 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.104336493 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.112898657 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073123035 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072380204 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.07252056 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.08018411 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.084232399 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.1205858 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.109534453 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074524676 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07315675 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.11143838 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.111124744 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072058258 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.105309895 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.103606983 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.110915404 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.072078736 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073000334 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.071630753 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072353951 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077177369 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078416132 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071298653 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079010197 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.088192891 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.07806101 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070771118 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071524149 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071353638 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078901329 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079737307 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.07990708 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.078064649 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071006053 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.071217732 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.072137063 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072208343 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070841164 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077506134 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.079095715 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078029981 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071538759 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072116979 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.071053334 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071750199 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079203191 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078156647 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080658963 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080088876 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072011961 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071574373 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073375438 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08060373 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.08065804 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079739928 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072919712 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.080577286 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071973008 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082572303 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.085901468 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.071922857 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072379749 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.072220359 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071859237 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.072198183 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078220623 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.078543119 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072853108 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071868653 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071869551 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080616659 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078608415 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072040391 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077455552 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071328676 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072159452 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072809881 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072395185 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077830214 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.07943667 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.072943706 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.07187261 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.072053189 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072206907 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.071330218 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.07852004 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079038246 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077411948 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.075955714 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070329858 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.076137282 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075922811 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070162741 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.075417255 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069815832 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072201967 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071769703 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078004569 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.077802347 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.078937394 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071748648 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.071904012 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.077519246 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080120689 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.214295494 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.07939862 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082477706 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079871576 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.072886521 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082809892 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072708365 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081089288 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070458157 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081162256 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072249018 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078464486 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072045315 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.070878087 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.072152614 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.078686548 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072236006 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071784013 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.308103156 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071781949 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.078819652 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082256184 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070665131 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.076281053 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.077293029 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071827318 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.077669099 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070421761 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.077238243 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071147723 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071529947 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071102715 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08123652 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072029439 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071689056 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071938044 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080904707 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07211017 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080207712 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077934689 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070898985 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.085580703 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079791677 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077847902 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079322216 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070197975 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070024204 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070417135 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.072550809 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.076322816 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.076269867 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070151087 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069549045 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.074805666 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.077619956 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.069487187 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.075697009 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.075236396 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.075581574 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069798438 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069635116 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.078876894 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.077789213 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.075378704 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.075494015 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07588087 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069540141 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.075659241 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.075480172 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069509802 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081897828 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069767497 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.079699685 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.075823564 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.07483165 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.076525477 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.0771838 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.078470529 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.077962208 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.079983761 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069423091 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.07164744 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078489315 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071685243 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071774196 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078065917 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.072093606 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.072177414 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.084197517 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069782695 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.077819696 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068747762 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.076269308 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070446573 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072234224 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084254666 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072437578 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072217499 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078072906 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.07154868 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.077791178 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081376254 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.076481553 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071443326 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071939186 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078623971 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079076819 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070852423 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070554943 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070063918 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.074817702 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.074328217 seconds)
  done (took 19.272062441 seconds)
done (took 40.215267776 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.174012112 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.117488628 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.210431962 seconds)
    (4/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.203298306 seconds)
  done (took 2.356414178 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 0.104882288 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 0.068276796 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 0.084585249 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 0.094798886 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 0.068680888 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 0.080119664 seconds)
  done (took 2.100468057 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.204934304 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.178703448 seconds)
    (3/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.24107233 seconds)
  done (took 2.222168066 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((10000000,), 2)...
    done (took 0.373978915 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.153694407 seconds)
    (3/4) benchmarking ((1000, 1000), 1)...
    done (took 0.22269102 seconds)
    (4/4) benchmarking ((1000, 1000), 2)...
    done (took 0.504776034 seconds)
  done (took 2.958082599 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 0.114011209 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.105126461 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 0.081492819 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.116126465 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 0.08960917 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 0.065935031 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.138439377 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 0.073076804 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 0.104636374 seconds)
  done (took 2.554914881 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.134294624 seconds)
done (took 13.944394642 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.112510412 seconds)
    (2/341) benchmarking ("collect", "all", BigInt, false)...
    done (took 0.231826419 seconds)
    (3/341) benchmarking ("collect", "filter", Bool, true)...
    done (took 0.19341447 seconds)
    (4/341) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.299031962 seconds)
    (5/341) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.24077994 seconds)
    (6/341) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.082568626 seconds)
    (7/341) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.066039314 seconds)
    (8/341) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.13000405 seconds)
    (9/341) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.095217317 seconds)
    (10/341) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.213578642 seconds)
    (11/341) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.170896516 seconds)
    (12/341) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.123319453 seconds)
    (13/341) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.235248639 seconds)
    (14/341) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.095108191 seconds)
    (15/341) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.193213896 seconds)
    (16/341) benchmarking ("perf_sum", Bool, true)...
    done (took 0.079818378 seconds)
    (17/341) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.070151538 seconds)
    (18/341) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.095517689 seconds)
    (19/341) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.17693045 seconds)
    (20/341) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.078764294 seconds)
    (21/341) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.081064217 seconds)
    (22/341) benchmarking ("collect", "all", BigFloat, false)...
    done (took 0.089119486 seconds)
    (23/341) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.194061046 seconds)
    (24/341) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.081526881 seconds)
    (25/341) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.194755097 seconds)
    (26/341) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.099099508 seconds)
    (27/341) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.070073352 seconds)
    (28/341) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.078927944 seconds)
    (29/341) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.229637717 seconds)
    (30/341) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.076489119 seconds)
    (31/341) benchmarking ("collect", "all", Int8, true)...
    done (took 0.18382832 seconds)
    (32/341) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.079538859 seconds)
    (33/341) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.258207627 seconds)
    (34/341) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.094403004 seconds)
    (35/341) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.128579718 seconds)
    (36/341) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.113120421 seconds)
    (37/341) benchmarking ("map", abs, Float64, true)...
    done (took 0.182330391 seconds)
    (38/341) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.23347861 seconds)
    (39/341) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.078000508 seconds)
    (40/341) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.077363254 seconds)
    (41/341) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.094774898 seconds)
    (42/341) benchmarking ("perf_sum", Float32, true)...
    done (took 0.074359663 seconds)
    (43/341) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.092403641 seconds)
    (44/341) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.223039497 seconds)
    (45/341) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.086623579 seconds)
    (46/341) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.090058947 seconds)
    (47/341) benchmarking ("collect", "all", Int64, false)...
    done (took 0.147957559 seconds)
    (48/341) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.15884143 seconds)
    (49/341) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.168326673 seconds)
    (50/341) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.080405068 seconds)
    (51/341) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.07732106 seconds)
    (52/341) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.081684901 seconds)
    (53/341) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.093811162 seconds)
    (54/341) benchmarking ("map", identity, Int8, false)...
    done (took 0.086730859 seconds)
    (55/341) benchmarking ("map", identity, Float32, true)...
    done (took 0.186151954 seconds)
    (56/341) benchmarking ("map", abs, Bool, true)...
    done (took 0.144068797 seconds)
    (57/341) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.090008233 seconds)
    (58/341) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.188782986 seconds)
    (59/341) benchmarking ("sort", Int8, false)...
    done (took 0.157873916 seconds)
    (60/341) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.099010173 seconds)
    (61/341) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.069947686 seconds)
    (62/341) benchmarking ("map", abs, Int64, true)...
    done (took 0.148835215 seconds)
    (63/341) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.093828972 seconds)
    (64/341) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.076400048 seconds)
    (65/341) benchmarking ("collect", "filter", Float32, false)...
    done (took 0.163348903 seconds)
    (66/341) benchmarking ("perf_countequals", "Int8")...
    done (took 0.078995135 seconds)
    (67/341) benchmarking ("collect", "filter", BigInt, false)...
    done (took 0.155867752 seconds)
    (68/341) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.206357767 seconds)
    (69/341) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.221136297 seconds)
    (70/341) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.151901425 seconds)
    (71/341) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.069770221 seconds)
    (72/341) benchmarking ("collect", "all", Float32, false)...
    done (took 0.087315265 seconds)
    (73/341) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.168129669 seconds)
    (74/341) benchmarking ("collect", "filter", Bool, false)...
    done (took 0.071630503 seconds)
    (75/341) benchmarking ("sort", Float32, false)...
    done (took 0.140392515 seconds)
    (76/341) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.256737797 seconds)
    (77/341) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.083818616 seconds)
    (78/341) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.080749482 seconds)
    (79/341) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.079221455 seconds)
    (80/341) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.178127692 seconds)
    (81/341) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.08165796 seconds)
    (82/341) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.069239557 seconds)
    (83/341) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.077714113 seconds)
    (84/341) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.081802671 seconds)
    (85/341) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.186797509 seconds)
    (86/341) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.226207266 seconds)
    (87/341) benchmarking ("collect", "filter", Int8, false)...
    done (took 0.160423618 seconds)
    (88/341) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.150470863 seconds)
    (89/341) benchmarking ("map", abs, Int8, true)...
    done (took 0.145569806 seconds)
    (90/341) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.204203994 seconds)
    (91/341) benchmarking ("map", abs, Int8, false)...
    done (took 0.070296325 seconds)
    (92/341) benchmarking ("collect", "filter", ComplexF64, false)...
    done (took 0.202882042 seconds)
    (93/341) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.091831425 seconds)
    (94/341) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.156762248 seconds)
    (95/341) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.170645227 seconds)
    (96/341) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.077988703 seconds)
    (97/341) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.070251503 seconds)
    (98/341) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.079512581 seconds)
    (99/341) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.091230172 seconds)
    (100/341) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.15713379 seconds)
    (101/341) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.08488524 seconds)
    (102/341) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.072814759 seconds)
    (103/341) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.069780578 seconds)
    (104/341) benchmarking ("map", abs, Float64, false)...
    done (took 0.069845442 seconds)
    (105/341) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.078951712 seconds)
    (106/341) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.233184101 seconds)
    (107/341) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.076974842 seconds)
    (108/341) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.069100091 seconds)
    (109/341) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.068996414 seconds)
    (110/341) benchmarking ("map", identity, Int8, true)...
    done (took 0.069389277 seconds)
    (111/341) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.069896594 seconds)
    (112/341) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.076198012 seconds)
    (113/341) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.090271816 seconds)
    (114/341) benchmarking ("collect", "filter", BigFloat, true)...
    done (took 0.157434488 seconds)
    (115/341) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.070025144 seconds)
    (116/341) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.076906461 seconds)
    (117/341) benchmarking ("map", identity, Bool, false)...
    done (took 0.142084005 seconds)
    (118/341) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.176891471 seconds)
    (119/341) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.157269221 seconds)
    (120/341) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.069541666 seconds)
    (121/341) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.159141501 seconds)
    (122/341) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.169988872 seconds)
    (123/341) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.069686917 seconds)
    (124/341) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.169890775 seconds)
    (125/341) benchmarking ("perf_countequals", "Float32")...
    done (took 0.087184461 seconds)
    (126/341) benchmarking ("collect", "all", Int64, true)...
    done (took 0.073362635 seconds)
    (127/341) benchmarking ("perf_sum", Int8, true)...
    done (took 0.078240002 seconds)
    (128/341) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.173253858 seconds)
    (129/341) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.091767401 seconds)
    (130/341) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.080585555 seconds)
    (131/341) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.069847329 seconds)
    (132/341) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.129741874 seconds)
    (133/341) benchmarking ("collect", "filter", BigFloat, false)...
    done (took 0.071563173 seconds)
    (134/341) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.127869245 seconds)
    (135/341) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.076021716 seconds)
    (136/341) benchmarking ("perf_sum", Int64, false)...
    done (took 0.078205163 seconds)
    (137/341) benchmarking ("map", abs, Int64, false)...
    done (took 0.069588365 seconds)
    (138/341) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.075981692 seconds)
    (139/341) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.069504149 seconds)
    (140/341) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.068793053 seconds)
    (141/341) benchmarking ("collect", "filter", Float64, true)...
    done (took 0.200253343 seconds)
    (142/341) benchmarking ("sort", Float64, false)...
    done (took 0.141671996 seconds)
    (143/341) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.136034806 seconds)
    (144/341) benchmarking ("collect", "filter", Float64, false)...
    done (took 0.071887492 seconds)
    (145/341) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.077535383 seconds)
    (146/341) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.095736707 seconds)
    (147/341) benchmarking ("perf_countequals", "Int64")...
    done (took 0.07971819 seconds)
    (148/341) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.072979225 seconds)
    (149/341) benchmarking ("collect", "all", Float32, true)...
    done (took 0.073698646 seconds)
    (150/341) benchmarking ("perf_countequals", "Bool")...
    done (took 0.078228656 seconds)
    (151/341) benchmarking ("sort", Bool, false)...
    done (took 0.149768748 seconds)
    (152/341) benchmarking ("map", abs, BigInt, true)...
    done (took 0.149096608 seconds)
    (153/341) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.259141838 seconds)
    (154/341) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.071109242 seconds)
    (155/341) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.069503336 seconds)
    (156/341) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.180961435 seconds)
    (157/341) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.069007588 seconds)
    (158/341) benchmarking ("perf_sum", Int64, true)...
    done (took 0.07593803 seconds)
    (159/341) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.07838947 seconds)
    (160/341) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.076614555 seconds)
    (161/341) benchmarking ("sort", Int64, false)...
    done (took 0.069721136 seconds)
    (162/341) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.197031124 seconds)
    (163/341) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.069470907 seconds)
    (164/341) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.077630859 seconds)
    (165/341) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.069793915 seconds)
    (166/341) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.155584215 seconds)
    (167/341) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.071606142 seconds)
    (168/341) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.06848018 seconds)
    (169/341) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.071709539 seconds)
    (170/341) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079928973 seconds)
    (171/341) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.215642308 seconds)
    (172/341) benchmarking ("collect", "filter", Int64, false)...
    done (took 0.159905314 seconds)
    (173/341) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.168434076 seconds)
    (174/341) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.233658082 seconds)
    (175/341) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.068909396 seconds)
    (176/341) benchmarking ("perf_sum", Float64, true)...
    done (took 0.074092754 seconds)
    (177/341) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.076623084 seconds)
    (178/341) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.068022585 seconds)
    (179/341) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.068696996 seconds)
    (180/341) benchmarking ("collect", "all", Bool, true)...
    done (took 0.085512441 seconds)
    (181/341) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.401141076 seconds)
    (182/341) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.073466149 seconds)
    (183/341) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.07868499 seconds)
    (184/341) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.207484114 seconds)
    (185/341) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.092911799 seconds)
    (186/341) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.080188176 seconds)
    (187/341) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.079445315 seconds)
    (188/341) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.130903278 seconds)
    (189/341) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.208375988 seconds)
    (190/341) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.067988109 seconds)
    (191/341) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.070012857 seconds)
    (192/341) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.092656349 seconds)
    (193/341) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.077577819 seconds)
    (194/341) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.070431075 seconds)
    (195/341) benchmarking ("map", identity, Float64, false)...
    done (took 0.147589934 seconds)
    (196/341) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.068279602 seconds)
    (197/341) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.069254732 seconds)
    (198/341) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.160962376 seconds)
    (199/341) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.177917973 seconds)
    (200/341) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.070524673 seconds)
    (201/341) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.151677863 seconds)
    (202/341) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.069553502 seconds)
    (203/341) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.068809275 seconds)
    (204/341) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.069118195 seconds)
    (205/341) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.07744251 seconds)
    (206/341) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.06872365 seconds)
    (207/341) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.076450884 seconds)
    (208/341) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.19613297 seconds)
    (209/341) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.06922964 seconds)
    (210/341) benchmarking ("map", identity, BigInt, false)...
    done (took 0.087199318 seconds)
    (211/341) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.069703181 seconds)
    (212/341) benchmarking ("sort", BigFloat, false)...
    done (took 0.137094208 seconds)
    (213/341) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.097348536 seconds)
    (214/341) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.173381756 seconds)
    (215/341) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.068081747 seconds)
    (216/341) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.077409272 seconds)
    (217/341) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.085187735 seconds)
    (218/341) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.070409371 seconds)
    (219/341) benchmarking ("collect", "all", Float64, false)...
    done (took 0.088393202 seconds)
    (220/341) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.07042641 seconds)
    (221/341) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.077338896 seconds)
    (222/341) benchmarking ("perf_sum", Float32, false)...
    done (took 0.071440957 seconds)
    (223/341) benchmarking ("perf_sum", Bool, false)...
    done (took 0.077097558 seconds)
    (224/341) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.069149325 seconds)
    (225/341) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.069784232 seconds)
    (226/341) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.071121169 seconds)
    (227/341) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.070014419 seconds)
    (228/341) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.074606846 seconds)
    (229/341) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.071766255 seconds)
    (230/341) benchmarking ("collect", "filter", Int64, true)...
    done (took 0.069279206 seconds)
    (231/341) benchmarking ("collect", "filter", ComplexF64, true)...
    done (took 0.069723206 seconds)
    (232/341) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.066706711 seconds)
    (233/341) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.079515499 seconds)
    (234/341) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.070289035 seconds)
    (235/341) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.067908644 seconds)
    (236/341) benchmarking ("collect", "filter", Int8, true)...
    done (took 0.069127185 seconds)
    (237/341) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.067786239 seconds)
    (238/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.07921761 seconds)
    (239/341) benchmarking ("perf_countequals", "Float64")...
    done (took 0.077866649 seconds)
    (240/341) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.087878996 seconds)
    (241/341) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.069934599 seconds)
    (242/341) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.069374592 seconds)
    (243/341) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.069890796 seconds)
    (244/341) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.071881554 seconds)
    (245/341) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.177217974 seconds)
    (246/341) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.076748508 seconds)
    (247/341) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.07043154 seconds)
    (248/341) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.115070224 seconds)
    (249/341) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.069188632 seconds)
    (250/341) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.074103247 seconds)
    (251/341) benchmarking ("map", identity, Float32, false)...
    done (took 0.070014233 seconds)
    (252/341) benchmarking ("collect", "filter", Float32, true)...
    done (took 0.071421154 seconds)
    (253/341) benchmarking ("collect", "filter", BigInt, true)...
    done (took 0.071421462 seconds)
    (254/341) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.128006044 seconds)
    (255/341) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.076017163 seconds)
    (256/341) benchmarking ("collect", "all", Bool, false)...
    done (took 0.073364888 seconds)
    (257/341) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.151652224 seconds)
    (258/341) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.080837366 seconds)
    (259/341) benchmarking ("collect", "all", BigInt, true)...
    done (took 0.073111341 seconds)
    (260/341) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.138765129 seconds)
    (261/341) benchmarking ("collect", "all", Float64, true)...
    done (took 0.073439696 seconds)
    (262/341) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.070267901 seconds)
    (263/341) benchmarking ("map", abs, Bool, false)...
    done (took 0.069825192 seconds)
    (264/341) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.067465142 seconds)
    (265/341) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.076260374 seconds)
    (266/341) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.183601603 seconds)
    (267/341) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.081143649 seconds)
    (268/341) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.074574344 seconds)
    (269/341) benchmarking ("map", abs, Float32, true)...
    done (took 0.148650165 seconds)
    (270/341) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.102636541 seconds)
    (271/341) benchmarking ("sort", BigInt, false)...
    done (took 0.268799831 seconds)
    (272/341) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.092645152 seconds)
    (273/341) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.068844104 seconds)
    (274/341) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.070063511 seconds)
    (275/341) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.067851003 seconds)
    (276/341) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.077283148 seconds)
    (277/341) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.067797032 seconds)
    (278/341) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.070511898 seconds)
    (279/341) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.070073106 seconds)
    (280/341) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.082806016 seconds)
    (281/341) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.093202748 seconds)
    (282/341) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067943738 seconds)
    (283/341) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.067751296 seconds)
    (284/341) benchmarking ("map", identity, Float64, true)...
    done (took 0.0675257 seconds)
    (285/341) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.151202402 seconds)
    (286/341) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.067658813 seconds)
    (287/341) benchmarking ("collect", "all", ComplexF64, true)...
    done (took 0.087015988 seconds)
    (288/341) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.067053019 seconds)
    (289/341) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.143680241 seconds)
    (290/341) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.066723588 seconds)
    (291/341) benchmarking ("map", identity, Bool, true)...
    done (took 0.067140876 seconds)
    (292/341) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.117589795 seconds)
    (293/341) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.077611848 seconds)
    (294/341) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.066794359 seconds)
    (295/341) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.077974661 seconds)
    (296/341) benchmarking ("map", abs, BigInt, false)...
    done (took 0.068780732 seconds)
    (297/341) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.066499176 seconds)
    (298/341) benchmarking ("map", abs, Float32, false)...
    done (took 0.068816913 seconds)
    (299/341) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.068492281 seconds)
    (300/341) benchmarking ("perf_sum", Int8, false)...
    done (took 0.074933876 seconds)
    (301/341) benchmarking ("map", identity, Int64, true)...
    done (took 0.084130621 seconds)
    (302/341) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.074969227 seconds)
    (303/341) benchmarking ("collect", "all", BigFloat, true)...
    done (took 0.071994452 seconds)
    (304/341) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.069898997 seconds)
    (305/341) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.067988507 seconds)
    (306/341) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.069116923 seconds)
    (307/341) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.254080075 seconds)
    (308/341) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.145811275 seconds)
    (309/341) benchmarking ("map", identity, Int64, false)...
    done (took 0.071508291 seconds)
    (310/341) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.069744719 seconds)
    (311/341) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.072606718 seconds)
    (312/341) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.071799973 seconds)
    (313/341) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.070262556 seconds)
    (314/341) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.095769061 seconds)
    (315/341) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.069830783 seconds)
    (316/341) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.07011055 seconds)
    (317/341) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.077563984 seconds)
    (318/341) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.077567318 seconds)
    (319/341) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.070054908 seconds)
    (320/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.08181564 seconds)
    (321/341) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.069356023 seconds)
    (322/341) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.070375887 seconds)
    (323/341) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.08884559 seconds)
    (324/341) benchmarking ("map", identity, BigInt, true)...
    done (took 0.070225937 seconds)
    (325/341) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.069472132 seconds)
    (326/341) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.069697265 seconds)
    (327/341) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.069598657 seconds)
    (328/341) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.067516422 seconds)
    (329/341) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.070118075 seconds)
    (330/341) benchmarking ("collect", "all", ComplexF64, false)...
    done (took 0.07398285 seconds)
    (331/341) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.068591435 seconds)
    (332/341) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.095920033 seconds)
    (333/341) benchmarking ("collect", "all", Int8, false)...
    done (took 0.073588387 seconds)
    (334/341) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.069279255 seconds)
    (335/341) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.071284728 seconds)
    (336/341) benchmarking ("perf_sum", Float64, false)...
    done (took 0.072321503 seconds)
    (337/341) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.138300218 seconds)
    (338/341) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.069967132 seconds)
    (339/341) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.078409623 seconds)
    (340/341) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.069979649 seconds)
    (341/341) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.068653235 seconds)
  done (took 38.207584807 seconds)
done (took 39.831323556 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093746961 seconds)
  (2/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.082062463 seconds)
  (3/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.081828991 seconds)
  (4/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.077809875 seconds)
  (5/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.0814423 seconds)
  (6/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079774413 seconds)
  (7/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.082062209 seconds)
  (8/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.080012712 seconds)
  (9/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.080864621 seconds)
  (10/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.08049823 seconds)
  (11/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.080327838 seconds)
  (12/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.068208953 seconds)
  (13/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.077100545 seconds)
  (14/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.08421182 seconds)
  (15/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.077744679 seconds)
  (16/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.085021509 seconds)
  (17/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.081572796 seconds)
  (18/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.085002192 seconds)
  (19/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.06972809 seconds)
  (20/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.084605027 seconds)
  (21/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.09705255 seconds)
  (22/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.081489756 seconds)
  (23/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.077855462 seconds)
  (24/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.083167963 seconds)
  (25/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.069471822 seconds)
  (26/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.078888163 seconds)
  (27/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093988424 seconds)
  (28/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.089151127 seconds)
  (29/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.073755329 seconds)
  (30/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.076447678 seconds)
  (31/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.074365627 seconds)
  (32/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.085746158 seconds)
  (33/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.076977263 seconds)
  (34/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.075304321 seconds)
  (35/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.078854351 seconds)
  (36/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.075541352 seconds)
  (37/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.07911432 seconds)
  (38/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.076533411 seconds)
  (39/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093459603 seconds)
  (40/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.075519179 seconds)
  (41/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.069673313 seconds)
  (42/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.081625893 seconds)
  (43/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.076706465 seconds)
  (44/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.077877248 seconds)
  (45/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.077807088 seconds)
  (46/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.080690813 seconds)
  (47/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074350287 seconds)
  (48/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.082674398 seconds)
  (49/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.068980602 seconds)
  (50/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.080007494 seconds)
  (51/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093063743 seconds)
  (52/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.07430465 seconds)
  (53/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076104913 seconds)
  (54/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.07761654 seconds)
  (55/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.074669752 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.0783197 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.076103138 seconds)
  (58/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.080707976 seconds)
  (59/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.074238502 seconds)
  (60/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.080667297 seconds)
  (61/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.080605775 seconds)
  (62/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.077837926 seconds)
  (63/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.068812082 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.078095256 seconds)
  (65/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.076583266 seconds)
  (66/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.077008677 seconds)
  (67/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.068157597 seconds)
  (68/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.074550507 seconds)
  (69/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.068414357 seconds)
  (70/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.068884977 seconds)
  (71/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.068086077 seconds)
  (72/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.077285618 seconds)
  (73/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.076285718 seconds)
  (74/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.073803234 seconds)
  (75/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067975668 seconds)
  (76/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.068439246 seconds)
  (77/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.068435518 seconds)
  (78/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.080999625 seconds)
  (79/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.075213054 seconds)
  (80/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.07833454 seconds)
  (81/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.068965144 seconds)
  (82/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.074448815 seconds)
  (83/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.07335823 seconds)
  (84/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.069129232 seconds)
  (85/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.074496279 seconds)
  (86/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.080849442 seconds)
  (87/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.067831889 seconds)
  (88/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.069233776 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.067774753 seconds)
  (90/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.083294058 seconds)
  (91/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.075222806 seconds)
  (92/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.068726124 seconds)
  (93/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.08106872 seconds)
  (94/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.074253051 seconds)
  (95/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.074229525 seconds)
  (96/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.068970747 seconds)
  (97/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.068030826 seconds)
  (98/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.074246889 seconds)
  (99/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.077059061 seconds)
  (100/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.069095364 seconds)
  (101/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.068011329 seconds)
  (102/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.074486009 seconds)
  (103/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.074100291 seconds)
  (104/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.078318636 seconds)
  (105/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.069241876 seconds)
  (106/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.074107547 seconds)
  (107/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.074505818 seconds)
  (108/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.068030632 seconds)
  (109/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.078231654 seconds)
  (110/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.076186749 seconds)
  (111/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.077876551 seconds)
  (112/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.082563773 seconds)
  (113/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.078138801 seconds)
  (114/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.081280411 seconds)
  (115/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.069420723 seconds)
  (116/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.068119488 seconds)
  (117/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.079078166 seconds)
  (118/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.069176771 seconds)
  (119/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.074830648 seconds)
  (120/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.077456902 seconds)
  (121/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.074502306 seconds)
  (122/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.077249215 seconds)
  (123/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.069857664 seconds)
  (124/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.068556103 seconds)
  (125/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.07432843 seconds)
  (126/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.07581539 seconds)
  (127/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.069306622 seconds)
  (128/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.069799561 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.069116112 seconds)
  (130/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.078449718 seconds)
  (131/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.076381571 seconds)
  (132/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.06769874 seconds)
  (133/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.068473001 seconds)
  (134/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.078190119 seconds)
  (135/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.077466871 seconds)
  (136/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.067671206 seconds)
  (137/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.068121383 seconds)
  (138/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.07766471 seconds)
  (139/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.068910505 seconds)
  (140/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.074244913 seconds)
  (141/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.07445109 seconds)
  (142/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.077317988 seconds)
  (143/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.067860914 seconds)
  (144/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.068534752 seconds)
  (145/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.218179873 seconds)
  (146/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.068818991 seconds)
  (147/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.069050228 seconds)
  (148/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.074824642 seconds)
  (149/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07456071 seconds)
  (150/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.069070894 seconds)
  (151/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.077838107 seconds)
  (152/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.075141721 seconds)
done (took 13.403360277 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.070224695 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.109337965 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.076857149 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.085489143 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.081597725 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.07071879 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.073853503 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.086952233 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.07342436 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.090084813 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.097938976 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.092131567 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.097061181 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.069045515 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.070454456 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070876017 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.068252955 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.077579903 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.08496151 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.093600886 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.099231918 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.069677397 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.07885752 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.087170952 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.080918864 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.086556738 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.07089121 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070658081 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.07244383 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.130561547 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.09618787 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069777143 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.070911866 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.084016161 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.084221356 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.077285443 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.070840712 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.074368826 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.073418572 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.069851185 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.07159598 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.084205293 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.073701245 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.074176559 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070910577 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.071100723 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.070016246 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.07361129 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.083862677 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.073669945 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.077760664 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.082205696 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.07173521 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.069910879 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.068209744 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.073673579 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.068506886 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068540679 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069796826 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.069606582 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.070083448 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.072248058 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.070657281 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.07017616 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.073306394 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.072393291 seconds)
  done (took 6.820729382 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085473749 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.093876688 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083769445 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.084056673 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.069209317 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.070186406 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.070059257 seconds)
  done (took 2.286737143 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.071208078 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.077864127 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.08265152 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.082363814 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.091843298 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.080063485 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.070324786 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.102762474 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.069053258 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.079153698 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.086093324 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.083496841 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.073629481 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.082636339 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.07082603 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.082458218 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.070520186 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.077995223 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.078012154 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.08403797 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074501233 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.100700417 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.083821711 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.070686413 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.08462428 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.078502498 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.072679663 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.070673778 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071132219 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069907239 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070615964 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.093017723 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.07703905 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.082878479 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070641683 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.069145761 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.074957712 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071426537 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.074518746 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.079260067 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.073749547 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.070008359 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.07059281 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.070263131 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071174573 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.074518691 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.07084407 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.07016905 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.069555693 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.07790296 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.069241096 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.076489379 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.072319368 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.075174168 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.074442807 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07508363 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077129441 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.070413645 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.077683763 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.076947041 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070022159 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.0829252 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.081992728 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.074061604 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.081468562 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.078261026 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.076704971 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.074271134 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069503797 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.06920034 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.070534895 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082004868 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.073325588 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.072194821 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.070820196 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.074803307 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.072799649 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.085085067 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.085321849 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.083200616 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.072041438 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.069731703 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.073691618 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.085466761 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074940875 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069411371 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.070702902 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.068810536 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.074277729 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.069788658 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.07416552 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069736234 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.077156203 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.072992676 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.072792535 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078732524 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.070323486 seconds)
  done (took 9.082625883 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.073468745 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.071843659 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070734242 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.070706435 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.07132764 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070844162 seconds)
  done (took 2.195336468 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.092804005 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.070700488 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.082457252 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.070662038 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.093269923 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.077716563 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.077540374 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072417161 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.087352903 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.081803654 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.077488523 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.080028533 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.076874061 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.07285855 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.077325045 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.0716818 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.07712065 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074438713 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.081107981 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072994636 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.087645911 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072872286 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072891863 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.083244418 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074103689 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.07161586 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071312108 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.081330194 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.080499828 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.072426596 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072084215 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.073598079 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.079241847 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.072409016 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.077559573 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.079195839 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070504344 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.075858154 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.073395103 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.073868795 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.079370261 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072874206 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.072639214 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076366902 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.072734166 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.079312463 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076064139 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074336801 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.076989753 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.075704837 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076224272 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.070912751 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.073540348 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076137757 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.078980487 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072206803 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.075925494 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.076919696 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071549273 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.078980444 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.070540852 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.073605009 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072565354 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.073493253 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.075606758 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.075895015 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.079032632 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072542941 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072765464 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.070576365 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076081022 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.070529394 seconds)
  done (took 7.199809568 seconds)
done (took 29.297078358 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.546618967 seconds)
  done (took 2.241644351 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.594544772 seconds)
  done (took 2.336315381 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.53663058 seconds)
  done (took 10.279937432 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.295649488 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.316713188 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.732422043 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.135508072 seconds)
  done (took 3.25958461 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.748832452 seconds)
  done (took 2.504893683 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.230421174 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.221571818 seconds)
  done (took 2.211888354 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.342556963 seconds)
  done (took 2.088817909 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.154444757 seconds)
  done (took 2.895023808 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.230081579 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.160469916 seconds)
  done (took 2.14371839 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.543928151 seconds)
  done (took 2.291098143 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.284964985 seconds)
  done (took 6.039386783 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.235905102 seconds)
  done (took 2.021589819 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.232818095 seconds)
  done (took 1.985563114 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 2.044397937 seconds)
  done (took 3.791515362 seconds)
done (took 47.847800193 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.087458186 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.089103686 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.088364447 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.082178555 seconds)
  done (took 2.066244262 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.078142474 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.073502756 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.076751022 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.077150082 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074803768 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.075550416 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.076046099 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.073085561 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074925825 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.073374692 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.072168695 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.07312588 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.076362366 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.07323286 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.076154073 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.07706801 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.073430516 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.073520718 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075882788 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.073818595 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.076451321 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.073373981 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.071964079 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.0735163 seconds)
  done (took 3.542628014 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.081762271 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075461 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.078487678 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.074157468 seconds)
  done (took 2.074296238 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.079920003 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.079592174 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.089279424 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.093883488 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.079075713 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.080118534 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.087501434 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.087358671 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068932822 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.090534072 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.071378836 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.070160245 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.070264992 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.088930338 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.087121755 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065752901 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.066948653 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.080139573 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.079444804 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.082435581 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.071779685 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.069046326 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.079326167 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.080114699 seconds)
  done (took 3.661817379 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.082862925 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.068501982 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.081912188 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.094597331 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.095305753 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.068855033 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.083111649 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.09636394 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.131202006 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.069019543 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.074921264 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.068729583 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.109312299 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.067013381 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.081194255 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.108769323 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.11170203 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.070603838 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.098962101 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.066234553 seconds)
  done (took 3.501837242 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.078853129 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071972513 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.073766289 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068516831 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.080070732 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.076238704 seconds)
  done (took 2.224173929 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.071404072 seconds)
    (2/12) benchmarking ("push_single!", 256)...
    done (took 0.070950413 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.072897701 seconds)
    (4/12) benchmarking ("push_multiple!", 256)...
    done (took 0.075127893 seconds)
    (5/12) benchmarking ("push_single!", 2048)...
    done (took 0.070929497 seconds)
    (6/12) benchmarking ("push_single!", 8)...
    done (took 0.0709981 seconds)
    (7/12) benchmarking ("prerend!", 2048)...
    done (took 0.070431208 seconds)
    (8/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.069228176 seconds)
    (9/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068630475 seconds)
    (10/12) benchmarking ("append!", 2048)...
    done (took 0.070094576 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.070127363 seconds)
    (12/12) benchmarking ("prerend!", 8)...
    done (took 0.070539895 seconds)
  done (took 2.61849982 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.156168769 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.071536314 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.070699573 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066404352 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071604107 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.067338516 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.081947076 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.071076217 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.089020496 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.069993581 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.070008328 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.072431965 seconds)
  done (took 2.727169268 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.102605331 seconds)
    (2/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.103494309 seconds)
    (3/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.147218084 seconds)
    (4/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.120511863 seconds)
    (5/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.121185804 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.100329683 seconds)
    (7/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.122347132 seconds)
    (8/608) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.097905241 seconds)
    (9/608) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.16396508 seconds)
    (10/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.141595914 seconds)
    (11/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.121349719 seconds)
    (12/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.098362343 seconds)
    (13/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090772338 seconds)
    (14/608) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.073427522 seconds)
    (15/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.104110311 seconds)
    (16/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.106053667 seconds)
    (17/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.140380524 seconds)
    (18/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.076268456 seconds)
    (19/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.117432498 seconds)
    (20/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.169263328 seconds)
    (21/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.118715092 seconds)
    (22/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.116486334 seconds)
    (23/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.126337817 seconds)
    (24/608) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.121121337 seconds)
    (25/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085105605 seconds)
    (26/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.126254 seconds)
    (27/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.098601521 seconds)
    (28/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.106701216 seconds)
    (29/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.128452681 seconds)
    (30/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.113928751 seconds)
    (31/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.122928968 seconds)
    (32/608) benchmarking ("sumvector_view", "Matrix{Int64}")...
    done (took 0.10222081 seconds)
    (33/608) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.075273012 seconds)
    (34/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.075245265 seconds)
    (35/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.1543322 seconds)
    (36/608) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.104509458 seconds)
    (37/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.112283379 seconds)
    (38/608) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.097389508 seconds)
    (39/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.104102449 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.092652662 seconds)
    (41/608) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.111647406 seconds)
    (42/608) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.073014794 seconds)
    (43/608) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.090984078 seconds)
    (44/608) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.111274523 seconds)
    (45/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088522382 seconds)
    (46/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.119750497 seconds)
    (47/608) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.08975607 seconds)
    (48/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103526739 seconds)
    (49/608) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081583532 seconds)
    (50/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.131612682 seconds)
    (51/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.107842316 seconds)
    (52/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.101130149 seconds)
    (53/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.086176581 seconds)
    (54/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104414018 seconds)
    (55/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.131065246 seconds)
    (56/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.095883717 seconds)
    (57/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.111807733 seconds)
    (58/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.107717485 seconds)
    (59/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.083006403 seconds)
    (60/608) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.119131951 seconds)
    (61/608) benchmarking ("sumlinear_view", "Matrix{Float64}")...
    done (took 0.103709293 seconds)
    (62/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.257535445 seconds)
    (63/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09500343 seconds)
    (64/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081647809 seconds)
    (65/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.16043547 seconds)
    (66/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.091100235 seconds)
    (67/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.114225096 seconds)
    (68/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.11652942 seconds)
    (69/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.086466186 seconds)
    (70/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.093654106 seconds)
    (71/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.106932817 seconds)
    (72/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.13530206 seconds)
    (73/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.111230247 seconds)
    (74/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.111543992 seconds)
    (75/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.118696912 seconds)
    (76/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.098969904 seconds)
    (77/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.114899844 seconds)
    (78/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.096224062 seconds)
    (79/608) benchmarking ("mapr_access", "Matrix{Int64}")...
    done (took 0.1320019 seconds)
    (80/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.097016981 seconds)
    (81/608) benchmarking ("sumcartesian", "Matrix{Float64}")...
    done (took 0.076384462 seconds)
    (82/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.108816807 seconds)
    (83/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.133087 seconds)
    (84/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.089297515 seconds)
    (85/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.104521638 seconds)
    (86/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.133967095 seconds)
    (87/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.09607834 seconds)
    (88/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.081237529 seconds)
    (89/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.09678007 seconds)
    (90/608) benchmarking ("sumlogical_view", "Matrix{Int64}")...
    done (took 0.122594929 seconds)
    (91/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.084558291 seconds)
    (92/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.100487233 seconds)
    (93/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073182014 seconds)
    (94/608) benchmarking ("sum", "3dsubarray")...
    done (took 0.101702749 seconds)
    (95/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.111179251 seconds)
    (96/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101446042 seconds)
    (97/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.116338312 seconds)
    (98/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.11129094 seconds)
    (99/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.081866074 seconds)
    (100/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.129235899 seconds)
    (101/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.112984357 seconds)
    (102/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.076522626 seconds)
    (103/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.121700237 seconds)
    (104/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103348469 seconds)
    (105/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.157381816 seconds)
    (106/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.100310768 seconds)
    (107/608) benchmarking ("sumcartesian", "Matrix{Int64}")...
    done (took 0.080038768 seconds)
    (108/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.105077724 seconds)
    (109/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.098297214 seconds)
    (110/608) benchmarking "5d"...
    done (took 0.151846208 seconds)
    (111/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089111387 seconds)
    (112/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.083753629 seconds)
    (113/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103066045 seconds)
    (114/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.146729687 seconds)
    (115/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.098564395 seconds)
    (116/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.174528234 seconds)
    (117/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.10028872 seconds)
    (118/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.13346776 seconds)
    (119/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101550785 seconds)
    (120/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.091229813 seconds)
    (121/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.079102016 seconds)
    (122/608) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.093622853 seconds)
    (123/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104481514 seconds)
    (124/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108083867 seconds)
    (125/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.10245344 seconds)
    (126/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088525177 seconds)
    (127/608) benchmarking ("sumrange_view", "Matrix{Float64}")...
    done (took 0.077127548 seconds)
    (128/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.086654264 seconds)
    (129/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.095836789 seconds)
    (130/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.255774531 seconds)
    (131/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.083887176 seconds)
    (132/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.115494204 seconds)
    (133/608) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.102592402 seconds)
    (134/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.07625567 seconds)
    (135/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089095481 seconds)
    (136/608) benchmarking ("sumcolon_view", "Matrix{Float64}")...
    done (took 0.080010926 seconds)
    (137/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.125487282 seconds)
    (138/608) benchmarking ("sumrange", "Matrix{Float64}")...
    done (took 0.078806743 seconds)
    (139/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.108848575 seconds)
    (140/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.125945942 seconds)
    (141/608) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.082829221 seconds)
    (142/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.109149521 seconds)
    (143/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.102042367 seconds)
    (144/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.112458847 seconds)
    (145/608) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.101635897 seconds)
    (146/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.111555807 seconds)
    (147/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.144520963 seconds)
    (148/608) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.120474079 seconds)
    (149/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.083522873 seconds)
    (150/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.087925798 seconds)
    (151/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.112208281 seconds)
    (152/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146094751 seconds)
    (153/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.116009951 seconds)
    (154/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.086198032 seconds)
    (155/608) benchmarking ("sumcolon", "Matrix{Int64}")...
    done (took 0.077586948 seconds)
    (156/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.100873144 seconds)
    (157/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.113930768 seconds)
    (158/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.099327819 seconds)
    (159/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.107837617 seconds)
    (160/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.100754048 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.11147516 seconds)
    (162/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.101992108 seconds)
    (163/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.143704657 seconds)
    (164/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.119734812 seconds)
    (165/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091725073 seconds)
    (166/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.095827697 seconds)
    (167/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.097026753 seconds)
    (168/608) benchmarking "ind2sub"...
    done (took 0.123846044 seconds)
    (169/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.077631693 seconds)
    (170/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.156381875 seconds)
    (171/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.097863664 seconds)
    (172/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.122095517 seconds)
    (173/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.088738486 seconds)
    (174/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.145391256 seconds)
    (175/608) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.1189798 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.093745833 seconds)
    (177/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.088964676 seconds)
    (178/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.099400161 seconds)
    (179/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.108736488 seconds)
    (180/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.110166764 seconds)
    (181/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.147360377 seconds)
    (182/608) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.100040132 seconds)
    (183/608) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.076421766 seconds)
    (184/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.096353187 seconds)
    (185/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.133432545 seconds)
    (186/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080153864 seconds)
    (187/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104564152 seconds)
    (188/608) benchmarking ("sumcartesian_view", "Matrix{Float64}")...
    done (took 0.094090536 seconds)
    (189/608) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.097361785 seconds)
    (190/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.122863391 seconds)
    (191/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.088054378 seconds)
    (192/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.08535466 seconds)
    (193/608) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.071824421 seconds)
    (194/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.105676085 seconds)
    (195/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.139953182 seconds)
    (196/608) benchmarking ("sumelt_boundscheck", "Matrix{Float64}")...
    done (took 0.0727511 seconds)
    (197/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.11649676 seconds)
    (198/608) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.284935571 seconds)
    (199/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.104072615 seconds)
    (200/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.107205086 seconds)
    (201/608) benchmarking ("sumelt", "1:100000")...
    done (took 0.073598324 seconds)
    (202/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.104376033 seconds)
    (203/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.142595065 seconds)
    (204/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10970729 seconds)
    (205/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.145202518 seconds)
    (206/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.120890332 seconds)
    (207/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104696944 seconds)
    (208/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.122996453 seconds)
    (209/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.103674139 seconds)
    (210/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109349069 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.083617973 seconds)
    (212/608) benchmarking ("sumlogical", "Matrix{Float64}")...
    done (took 0.129168385 seconds)
    (213/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.139385244 seconds)
    (214/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.100250438 seconds)
    (215/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.094178686 seconds)
    (216/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.139576415 seconds)
    (217/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.122658616 seconds)
    (218/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.139020203 seconds)
    (219/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.100234906 seconds)
    (220/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.118220033 seconds)
    (221/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.109107221 seconds)
    (222/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.105092115 seconds)
    (223/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.108572973 seconds)
    (224/608) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.104519145 seconds)
    (225/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.149267751 seconds)
    (226/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.125015017 seconds)
    (227/608) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.129699049 seconds)
    (228/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.090171152 seconds)
    (229/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.111333579 seconds)
    (230/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.113581136 seconds)
    (231/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.140926242 seconds)
    (232/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.086356614 seconds)
    (233/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.121559665 seconds)
    (234/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.079508985 seconds)
    (235/608) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.116756969 seconds)
    (236/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.081233481 seconds)
    (237/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.112093885 seconds)
    (238/608) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.083433553 seconds)
    (239/608) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.115680319 seconds)
    (240/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.083566869 seconds)
    (241/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.104902902 seconds)
    (242/608) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.073219647 seconds)
    (243/608) benchmarking ("sumeach", "1:100000")...
    done (took 0.078362629 seconds)
    (244/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.146144779 seconds)
    (245/608) benchmarking ("sumvector", "1:100000")...
    done (took 0.117244754 seconds)
    (246/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.093434107 seconds)
    (247/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090348888 seconds)
    (248/608) benchmarking ("sumlogical", "1:100000")...
    done (took 0.139934309 seconds)
    (249/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.136888233 seconds)
    (250/608) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.085166457 seconds)
    (251/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.106713364 seconds)
    (252/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.108654168 seconds)
    (253/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.106011492 seconds)
    (254/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106165835 seconds)
    (255/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.111584655 seconds)
    (256/608) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.088498568 seconds)
    (257/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.098318476 seconds)
    (258/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.2790189 seconds)
    (259/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.083916448 seconds)
    (260/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.086293876 seconds)
    (261/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103557744 seconds)
    (262/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.097675055 seconds)
    (263/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.112560205 seconds)
    (264/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.08927445 seconds)
    (265/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.0786362 seconds)
    (266/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.138795625 seconds)
    (267/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108682225 seconds)
    (268/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.099501317 seconds)
    (269/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.081704896 seconds)
    (270/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.099320508 seconds)
    (271/608) benchmarking "4d"...
    done (took 0.125580858 seconds)
    (272/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.093969142 seconds)
    (273/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.091402158 seconds)
    (274/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.109886863 seconds)
    (275/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.10801221 seconds)
    (276/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.144837637 seconds)
    (277/608) benchmarking ("sumcartesian_view", "Matrix{Int64}")...
    done (took 0.094226635 seconds)
    (278/608) benchmarking ("sumvector", "Matrix{Float64}")...
    done (took 0.101666959 seconds)
    (279/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.121620095 seconds)
    (280/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.084654623 seconds)
    (281/608) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.096126812 seconds)
    (282/608) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.073207439 seconds)
    (283/608) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.088668057 seconds)
    (284/608) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.080028028 seconds)
    (285/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113042129 seconds)
    (286/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.080293454 seconds)
    (287/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.113088566 seconds)
    (288/608) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.072555273 seconds)
    (289/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.134674492 seconds)
    (290/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091629984 seconds)
    (291/608) benchmarking ("sumvector_view", "Matrix{Float64}")...
    done (took 0.097276806 seconds)
    (292/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.107224366 seconds)
    (293/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105510404 seconds)
    (294/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.133106308 seconds)
    (295/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.09619491 seconds)
    (296/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.133508521 seconds)
    (297/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094252643 seconds)
    (298/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.106676086 seconds)
    (299/608) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.113155529 seconds)
    (300/608) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.098836046 seconds)
    (301/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.084384293 seconds)
    (302/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.107999898 seconds)
    (303/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.100852155 seconds)
    (304/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.114321632 seconds)
    (305/608) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.100556007 seconds)
    (306/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.110816028 seconds)
    (307/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.114516949 seconds)
    (308/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.098424815 seconds)
    (309/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.147336063 seconds)
    (310/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094163224 seconds)
    (311/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.126861416 seconds)
    (312/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.110274791 seconds)
    (313/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.112580213 seconds)
    (314/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.108520184 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.12147078 seconds)
    (316/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.141799504 seconds)
    (317/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.115119212 seconds)
    (318/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.114570321 seconds)
    (319/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.07684258 seconds)
    (320/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.084143315 seconds)
    (321/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106268166 seconds)
    (322/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.101145988 seconds)
    (323/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.146315243 seconds)
    (324/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.106056411 seconds)
    (325/608) benchmarking ("sumlinear", "Matrix{Int64}")...
    done (took 0.075822361 seconds)
    (326/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.090104603 seconds)
    (327/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.094505769 seconds)
    (328/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.099482122 seconds)
    (329/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.271838497 seconds)
    (330/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.086153113 seconds)
    (331/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.14421946 seconds)
    (332/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089316793 seconds)
    (333/608) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.088400722 seconds)
    (334/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.117180683 seconds)
    (335/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.093500449 seconds)
    (336/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.102056811 seconds)
    (337/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080193141 seconds)
    (338/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.100174523 seconds)
    (339/608) benchmarking ("sumcolon", "1:100000")...
    done (took 0.104818716 seconds)
    (340/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.099895942 seconds)
    (341/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.099471541 seconds)
    (342/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.111683992 seconds)
    (343/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.121906433 seconds)
    (344/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.118429786 seconds)
    (345/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.13768628 seconds)
    (346/608) benchmarking "3d"...
    done (took 0.103487065 seconds)
    (347/608) benchmarking ("sum", "3darray")...
    done (took 0.097363118 seconds)
    (348/608) benchmarking ("sumlogical", "Matrix{Int64}")...
    done (took 0.122272622 seconds)
    (349/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.114667052 seconds)
    (350/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.114804071 seconds)
    (351/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.090477821 seconds)
    (352/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.090555645 seconds)
    (353/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.12690637 seconds)
    (354/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.106659421 seconds)
    (355/608) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.132702154 seconds)
    (356/608) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.104753265 seconds)
    (357/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.098980828 seconds)
    (358/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.107202067 seconds)
    (359/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094630584 seconds)
    (360/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.103922131 seconds)
    (361/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101073535 seconds)
    (362/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.11415615 seconds)
    (363/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.084645032 seconds)
    (364/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.080001907 seconds)
    (365/608) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.072168424 seconds)
    (366/608) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.076223131 seconds)
    (367/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.122310467 seconds)
    (368/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.113301107 seconds)
    (369/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103511697 seconds)
    (370/608) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.103136059 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Matrix{Int64}")...
    done (took 0.076514507 seconds)
    (372/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.108165912 seconds)
    (373/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.10411131 seconds)
    (374/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.07576113 seconds)
    (375/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091704815 seconds)
    (376/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.09857023 seconds)
    (377/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.104252721 seconds)
    (378/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.088343074 seconds)
    (379/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.096479245 seconds)
    (380/608) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.119206288 seconds)
    (381/608) benchmarking ("sumrange", "Matrix{Int64}")...
    done (took 0.095779102 seconds)
    (382/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.1080391 seconds)
    (383/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.103949801 seconds)
    (384/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.132459428 seconds)
    (385/608) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.104398661 seconds)
    (386/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093360851 seconds)
    (387/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.148701385 seconds)
    (388/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.133313533 seconds)
    (389/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09263748 seconds)
    (390/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.097395766 seconds)
    (391/608) benchmarking ("sumelt", "Matrix{Int64}")...
    done (took 0.075682648 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.083434809 seconds)
    (393/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.107106178 seconds)
    (394/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.14919302 seconds)
    (395/608) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.122438648 seconds)
    (396/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080266278 seconds)
    (397/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.086107066 seconds)
    (398/608) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.081126652 seconds)
    (399/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.25588259 seconds)
    (400/608) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.074474059 seconds)
    (401/608) benchmarking ("sumeach_view", "Matrix{Float64}")...
    done (took 0.088836145 seconds)
    (402/608) benchmarking ("sumcolon", "Matrix{Float64}")...
    done (took 0.090710243 seconds)
    (403/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105046162 seconds)
    (404/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.093427533 seconds)
    (405/608) benchmarking ("sumlogical_view", "Matrix{Float64}")...
    done (took 0.113557963 seconds)
    (406/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.10854241 seconds)
    (407/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079469733 seconds)
    (408/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.107638328 seconds)
    (409/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.10208506 seconds)
    (410/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.096301501 seconds)
    (411/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.100515618 seconds)
    (412/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.106237741 seconds)
    (413/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.110189634 seconds)
    (414/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.128668131 seconds)
    (415/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.105141503 seconds)
    (416/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102500294 seconds)
    (417/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080321523 seconds)
    (418/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.084768976 seconds)
    (419/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.079625778 seconds)
    (420/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.083341032 seconds)
    (421/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.10650619 seconds)
    (422/608) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.081637406 seconds)
    (423/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080175376 seconds)
    (424/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.134844605 seconds)
    (425/608) benchmarking ("sumcolon_view", "Matrix{Int64}")...
    done (took 0.096083803 seconds)
    (426/608) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.108771818 seconds)
    (427/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.114240351 seconds)
    (428/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.089044816 seconds)
    (429/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079626935 seconds)
    (430/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.137714123 seconds)
    (431/608) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.073428161 seconds)
    (432/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.13966994 seconds)
    (433/608) benchmarking ("sumeach", "Matrix{Int64}")...
    done (took 0.075529101 seconds)
    (434/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.086905653 seconds)
    (435/608) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.08509783 seconds)
    (436/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.083595948 seconds)
    (437/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.098673563 seconds)
    (438/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.110247918 seconds)
    (439/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.101031979 seconds)
    (440/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.118207112 seconds)
    (441/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.110932808 seconds)
    (442/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.109621648 seconds)
    (443/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.115099617 seconds)
    (444/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.158715377 seconds)
    (445/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075046845 seconds)
    (446/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.149151327 seconds)
    (447/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080519798 seconds)
    (448/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079723948 seconds)
    (449/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.080115606 seconds)
    (450/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.11918795 seconds)
    (451/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094501705 seconds)
    (452/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.109810342 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.14653602 seconds)
    (454/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093894147 seconds)
    (455/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09735432 seconds)
    (456/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080844631 seconds)
    (457/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.132591325 seconds)
    (458/608) benchmarking ("sumeach_view", "Matrix{Int64}")...
    done (took 0.102699571 seconds)
    (459/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.107986278 seconds)
    (460/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.087213041 seconds)
    (461/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.083012984 seconds)
    (462/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.133250233 seconds)
    (463/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.083640793 seconds)
    (464/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.076155624 seconds)
    (465/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.091058382 seconds)
    (466/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.116600065 seconds)
    (467/608) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.076672448 seconds)
    (468/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.108259046 seconds)
    (469/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.088506663 seconds)
    (470/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.251612304 seconds)
    (471/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.118174621 seconds)
    (472/608) benchmarking "sub2ind"...
    done (took 0.635892403 seconds)
    (473/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.094647452 seconds)
    (474/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.080482388 seconds)
    (475/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.09380041 seconds)
    (476/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.146547495 seconds)
    (477/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.133045192 seconds)
    (478/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.087622105 seconds)
    (479/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.112872002 seconds)
    (480/608) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.12342145 seconds)
    (481/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.094319603 seconds)
    (482/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.088033424 seconds)
    (483/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.112596038 seconds)
    (484/608) benchmarking "6d"...
    done (took 0.187123357 seconds)
    (485/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.077889555 seconds)
    (486/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.098917561 seconds)
    (487/608) benchmarking ("sumrange", "1:100000")...
    done (took 0.107563511 seconds)
    (488/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.101198116 seconds)
    (489/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.096622047 seconds)
    (490/608) benchmarking ("sumrange_view", "Matrix{Int64}")...
    done (took 0.096193039 seconds)
    (491/608) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.090458325 seconds)
    (492/608) benchmarking ("sumvector", "Matrix{Int64}")...
    done (took 0.097043474 seconds)
    (493/608) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.089993677 seconds)
    (494/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.083959256 seconds)
    (495/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.112385396 seconds)
    (496/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092099235 seconds)
    (497/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.096439286 seconds)
    (498/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.102129174 seconds)
    (499/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.087332342 seconds)
    (500/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.083979983 seconds)
    (501/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.135161405 seconds)
    (502/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.108958679 seconds)
    (503/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.086875872 seconds)
    (504/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093030953 seconds)
    (505/608) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.105174625 seconds)
    (506/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090714962 seconds)
    (507/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.095241432 seconds)
    (508/608) benchmarking ("sumelt", "Matrix{Float64}")...
    done (took 0.073254233 seconds)
    (509/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.11844331 seconds)
    (510/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.095470146 seconds)
    (511/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105743525 seconds)
    (512/608) benchmarking ("sumlinear_view", "Matrix{Int64}")...
    done (took 0.095317429 seconds)
    (513/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.112799751 seconds)
    (514/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.124793622 seconds)
    (515/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093381756 seconds)
    (516/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.117379515 seconds)
    (517/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.092967851 seconds)
    (518/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.114331744 seconds)
    (519/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.088862575 seconds)
    (520/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.082383455 seconds)
    (521/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.107286008 seconds)
    (522/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.08247207 seconds)
    (523/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081954639 seconds)
    (524/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.122034675 seconds)
    (525/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.088877195 seconds)
    (526/608) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.097404449 seconds)
    (527/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108941963 seconds)
    (528/608) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.100166061 seconds)
    (529/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.118376304 seconds)
    (530/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.122942511 seconds)
    (531/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.115683163 seconds)
    (532/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.102278543 seconds)
    (533/608) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.083264653 seconds)
    (534/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.091219729 seconds)
    (535/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.091714082 seconds)
    (536/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07880315 seconds)
    (537/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079571483 seconds)
    (538/608) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077683401 seconds)
    (539/608) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.079758485 seconds)
    (540/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.109740984 seconds)
    (541/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.256519952 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.088473697 seconds)
    (543/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.119673982 seconds)
    (544/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.086425263 seconds)
    (545/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.107110493 seconds)
    (546/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.105180273 seconds)
    (547/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.11385937 seconds)
    (548/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.087273538 seconds)
    (549/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.105403331 seconds)
    (550/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.113909887 seconds)
    (551/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.094747861 seconds)
    (552/608) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.107641445 seconds)
    (553/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.104976908 seconds)
    (554/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.133185051 seconds)
    (555/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.15036518 seconds)
    (556/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.104017127 seconds)
    (557/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.128262005 seconds)
    (558/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.13792467 seconds)
    (559/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.085360267 seconds)
    (560/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.079746407 seconds)
    (561/608) benchmarking ("sumeach", "Matrix{Float64}")...
    done (took 0.072553048 seconds)
    (562/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.119664209 seconds)
    (563/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.083566716 seconds)
    (564/608) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.084784071 seconds)
    (565/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.084953908 seconds)
    (566/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.137437406 seconds)
    (567/608) benchmarking "2d"...
    done (took 0.085895478 seconds)
    (568/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.099235331 seconds)
    (569/608) benchmarking "7d"...
    done (took 0.235969022 seconds)
    (570/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.0848309 seconds)
    (571/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.08600336 seconds)
    (572/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101543346 seconds)
    (573/608) benchmarking ("sumlinear", "Matrix{Float64}")...
    done (took 0.073904168 seconds)
    (574/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.088122814 seconds)
    (575/608) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.112566935 seconds)
    (576/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.089614633 seconds)
    (577/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.084720855 seconds)
    (578/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.103543706 seconds)
    (579/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.088240421 seconds)
    (580/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.122491221 seconds)
    (581/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.117025176 seconds)
    (582/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094030245 seconds)
    (583/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.087875414 seconds)
    (584/608) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085634457 seconds)
    (585/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.098647456 seconds)
    (586/608) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.109589142 seconds)
    (587/608) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.13392739 seconds)
    (588/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.093984145 seconds)
    (589/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.079544158 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.111327619 seconds)
    (591/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.108162655 seconds)
    (592/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.128624931 seconds)
    (593/608) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.076826321 seconds)
    (594/608) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085416049 seconds)
    (595/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.134366872 seconds)
    (596/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.096239537 seconds)
    (597/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.108010887 seconds)
    (598/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.084044549 seconds)
    (599/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.127135834 seconds)
    (600/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.137676195 seconds)
    (601/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.094710603 seconds)
    (602/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.138403677 seconds)
    (603/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.075465877 seconds)
    (604/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.088069414 seconds)
    (605/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.094055485 seconds)
    (606/608) benchmarking ("mapr_access", "Matrix{Float64}")...
    done (took 0.129751911 seconds)
    (607/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07826126 seconds)
    (608/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.093123772 seconds)
  done (took 67.187974001 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.15569342 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.147055942 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.083902829 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.098791661 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.1882845 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.197808883 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.121106647 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.0971296 seconds)
  done (took 3.046808621 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hcat", 500)...
    done (took 0.072172534 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.087225949 seconds)
    (3/17) benchmarking ("vcat_setind", 5)...
    done (took 0.084450645 seconds)
    (4/17) benchmarking ("catnd_setind", 500)...
    done (took 0.214249221 seconds)
    (5/17) benchmarking ("vcat", 500)...
    done (took 0.112743534 seconds)
    (6/17) benchmarking ("vcat", 5)...
    done (took 0.069761536 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.076599328 seconds)
    (8/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.085701919 seconds)
    (9/17) benchmarking ("vcat_setind", 500)...
    done (took 0.071623906 seconds)
    (10/17) benchmarking ("hvcat", 5)...
    done (took 0.070840521 seconds)
    (11/17) benchmarking ("hcat_setind", 500)...
    done (took 0.106092501 seconds)
    (12/17) benchmarking ("hcat", 5)...
    done (took 0.071107718 seconds)
    (13/17) benchmarking ("hvcat", 500)...
    done (took 0.071461233 seconds)
    (14/17) benchmarking ("catnd", 500)...
    done (took 0.378933912 seconds)
    (15/17) benchmarking ("hcat_setind", 5)...
    done (took 0.070544944 seconds)
    (16/17) benchmarking ("catnd", 5)...
    done (took 0.076694517 seconds)
    (17/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.071025416 seconds)
  done (took 3.696167962 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.326416582 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.402995327 seconds)
    (3/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 1.224716386 seconds)
    (4/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.638403695 seconds)
    (5/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.141547334 seconds)
    (6/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.485714655 seconds)
    (7/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.077850072 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.082983871 seconds)
    (9/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.631255756 seconds)
    (10/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.371280492 seconds)
    (11/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.134792702 seconds)
    (12/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.091226902 seconds)
  done (took 18.530054657 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 4)...
    done (took 0.079712698 seconds)
    (2/5) benchmarking ("setindex!", 3)...
    done (took 0.082394327 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.080680926 seconds)
    (4/5) benchmarking ("setindex!", 1)...
    done (took 0.075682303 seconds)
    (5/5) benchmarking ("setindex!", 2)...
    done (took 0.076227992 seconds)
  done (took 2.271852134 seconds)
done (took 118.919075848 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 0.088099187 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 0.177347552 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 0.071723545 seconds)
  done (took 2.199679462 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.085470166 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.083000012 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.082518335 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.08153075 seconds)
  done (took 2.257844956 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.078569332 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.080181134 seconds)
  done (took 2.074466324 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 0.22376381 seconds)
  (6/15) benchmarking "18129"...
  done (took 0.178857405 seconds)
  (7/15) benchmarking "20517"...
  done (took 0.095407947 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.086005478 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081554049 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081166059 seconds)
  done (took 2.180680659 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074825184 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.0746887 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073608739 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.073255844 seconds)
  done (took 2.212074292 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.071735972 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.069431475 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.072288541 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074764978 seconds)
  done (took 2.202392598 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 0.088344401 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 0.086171447 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 0.113164797 seconds)
  done (took 2.20759754 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.086936539 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.086757643 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.082038457 seconds)
  done (took 2.177756342 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.111990365 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.097675549 seconds)
  done (took 2.127385828 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084174517 seconds)
  done (took 2.005411059 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.092352875 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.098080366 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.140127677 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.107251447 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.140580637 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.127718147 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.077702791 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.078932078 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.074795752 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.073872934 seconds)
  done (took 2.929093839 seconds)
done (took 27.074143917 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.082887562 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.3735563 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.363421533 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090451947 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.676914232 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.360770413 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.004942099 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095361669 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.102811444 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071210386 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085945331 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.652485251 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.996239159 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.3335626 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.98337912 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.330093173 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.655061255 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072764321 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071153769 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071397155 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.986997195 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071660366 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072816696 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072999697 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.653706888 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.375693002 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070044212 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.327065709 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069651622 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071949878 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.390875333 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070240655 seconds)
  done (took 16.592653016 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074317606 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.12748801 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077197889 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.088776221 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.074790737 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.074409697 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.07545921 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.073379119 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.115858898 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072917161 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.091332887 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.072228027 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.077043316 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.073664501 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090672992 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070500204 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070951265 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073392122 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.07004443 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.07020169 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087526173 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06909677 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069795983 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070259243 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069872648 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08240006 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070447996 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069587024 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069589946 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072215514 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073173691 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070920314 seconds)
  done (took 4.428041946 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.124987289 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.127290694 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074474948 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.109670248 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.118930132 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070971802 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.151606267 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095211885 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.115900595 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072824446 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.091103825 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.07300093 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.109407819 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.074285315 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.094197075 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.073217808 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.074903231 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071905117 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071259217 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072931193 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.092465496 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072294279 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.073510813 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073466184 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.074077159 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.088546275 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07431894 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.072812074 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073256544 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075361392 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.077158768 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074343498 seconds)
  done (took 4.729793889 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.074018462 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075801614 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.083985101 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.085136275 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070575453 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072868198 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073967503 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.070910179 seconds)
  done (took 2.554910148 seconds)
done (took 30.241053879 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.083405695 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.072171629 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.074935068 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.09134271 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.07800069 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.074427445 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.068870684 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.078440931 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.075710293 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.07561433 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.077186018 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.07109357 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.074054867 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.069033957 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.076221655 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.070315256 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.076673881 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.074420854 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.074814199 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.076413521 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.072831289 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.075678262 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.078075674 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.075242552 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.075164508 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.074743409 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077708453 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.07534406 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.067988421 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.0703563 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.071020565 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.082882421 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.073825703 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.073871072 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067528457 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067583888 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072083466 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.069366097 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.073596804 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076784041 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069491784 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076543275 seconds)
  done (took 5.026577255 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.092737452 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.098304302 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.091234887 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.086786982 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.112362846 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.086480856 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.09564862 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.083846938 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.082634911 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.094543333 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.077584363 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.083476575 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.085052613 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.079762308 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.0830754 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.07947923 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.084186398 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.077863207 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.083002086 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.083015529 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.095971605 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.076256885 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.083407445 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.084671321 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.07859051 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.084162231 seconds)
  done (took 4.194897784 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.076897451 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.092292411 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.095485375 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.143655448 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.111637736 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.08385801 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.083286915 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.098660506 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.101672672 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.06929764 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.073589998 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.09561898 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.097980464 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.076314332 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.107064502 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.087205939 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081730258 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.070936162 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.076061186 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.104273832 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.09222423 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.089632499 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.105017519 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.092472249 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.071401085 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.081385357 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.079090028 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.0880307 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.079861644 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.084487602 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.076247134 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.075799119 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.072924983 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.085383472 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.079787779 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.070284484 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.094668861 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.085080939 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.087152694 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.109408654 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.081798768 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.073243385 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.102352448 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.13772353 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.071467076 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074850125 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.076497162 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.084862782 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.073355876 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.101979426 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.090992307 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.071678124 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.091583731 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.073171152 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.072479149 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.087800131 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.073736526 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.073900749 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.084331883 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.077864451 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.09312007 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.077732504 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.093743235 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.071992867 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.083146029 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.073425318 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.073526295 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.070961197 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.108283249 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079546174 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.126285946 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.073056248 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.070541892 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.08440699 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.083646137 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.078659586 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.071528735 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.091756131 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.084529775 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.075502809 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.083676414 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.074910146 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.074980893 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.107770882 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.071389987 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.070005014 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.070213875 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.074909085 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.075201365 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.072692644 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08604386 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.071277707 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.07492865 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.088179026 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.072023343 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.07280501 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074350906 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.073190926 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.070985195 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083304301 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.075919484 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.073393626 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.08464285 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.072850288 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.075069958 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.087442274 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.081726517 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.071622887 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.073461839 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074702857 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.073362985 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.076286162 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.074956756 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.074085736 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.079280301 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.079304472 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.077831992 seconds)
  done (took 11.670095894 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.166759503 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.157577244 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.073050754 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.152432461 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.080617191 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.076707905 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.154725265 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.092025986 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.072848946 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.073601059 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.072064875 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.101741377 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.096387576 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.110642385 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.077776146 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.073605643 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.09848476 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.106583115 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.158077204 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.151750787 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.096856334 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.080613962 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.075589917 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.074178863 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.074168825 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.081987187 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.091503354 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.081478445 seconds)
  done (took 4.797775326 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.078962468 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.085738217 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073646771 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.093654108 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.08834549 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069780886 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.071988373 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070735404 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.086316447 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.076379694 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.069603351 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.07413354 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073638117 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.070308093 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070525447 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.076317879 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.076440235 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068494575 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.073882123 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074223964 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.080350377 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.096325188 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.077313181 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.072733737 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.075490768 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.072471348 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.079206116 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.082378943 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.072224453 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.102915227 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.069549593 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.076694038 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.087000633 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.073124945 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.072473361 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.073012238 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.072820662 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.072515264 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.072582031 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.070432185 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.070525889 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.07747168 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.071275893 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.078688349 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.086950054 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.080666411 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.07397906 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.077985013 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.074848033 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.069151585 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.075815892 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.075826088 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.074570307 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.081016736 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.076695149 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.075083662 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.073653778 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.104069569 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.07875659 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.071988706 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.07131197 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.071050482 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.074470699 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.080318563 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.088886012 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.073842758 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.07097768 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.072648793 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.077348062 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.086328523 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.071755097 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.077873083 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.069483355 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.072494071 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.074374589 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.075111889 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.07359319 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.070859107 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.072225759 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.072120606 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.07245472 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.072325613 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.071861014 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.07478616 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.070374196 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.071112776 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.073124623 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073500322 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079727833 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.071096941 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.075459978 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.073360801 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.070929955 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.075109195 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.07765587 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.075377826 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.092508624 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.081144873 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.073100751 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.070464057 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.086826299 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.074680962 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.071582347 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.079255742 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.07670787 seconds)
  done (took 9.993850452 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.095005164 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.074124487 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.092585368 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.099241496 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.082540285 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.077462402 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.086564096 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.072963645 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.088943322 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.07145878 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.081625028 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.070916988 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.086513688 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.081920243 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.074686133 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.082856363 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.075522013 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.092790726 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.08756594 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.071179369 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.081607547 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.0849705 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.085357675 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.090153795 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.089685615 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.091141205 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.084536355 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.075259595 seconds)
  done (took 4.330806351 seconds)
done (took 41.951700416 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 7.027726935 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.190581888 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 7.016669149 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.291819283 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.073345385 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.249972867 seconds)
  (7/12) benchmarking "nbody"...
  done (took 3.261847402 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 7.017032011 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 8.196641678 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 7.044511559 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.346858555 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.376804662 seconds)
done (took 70.103597229 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 7.035787373 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 2.167424836 seconds)
    (2/2) benchmarking "String"...
    done (took 2.240412927 seconds)
  done (took 6.349019258 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 2.618547974 seconds)
    (2/3) benchmarking "different length"...
    done (took 2.020384606 seconds)
    (3/3) benchmarking "different"...
    done (took 2.066714216 seconds)
  done (took 8.645266246 seconds)
  (4/7) benchmarking "replace"...
  done (took 3.123189867 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 6.776381783 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.264696732 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 7.018131161 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 7.019263278 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.426068069 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.830956333 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.505282079 seconds)
  done (took 33.786597206 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.194858623 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.211245117 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.766774457 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.801489835 seconds)
  done (took 16.956250006 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 2.627501695 seconds)
    (2/4) benchmarking "equal"...
    done (took 2.282639553 seconds)
    (3/4) benchmarking "different length"...
    done (took 2.279569904 seconds)
    (4/4) benchmarking "different"...
    done (took 2.275300173 seconds)
  done (took 11.464766961 seconds)
done (took 89.403888748 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("qr", "Matrix", 256)...
    done (took 7.022376129 seconds)
    (2/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.080784193 seconds)
    (3/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 7.029947476 seconds)
    (4/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 2.172769668 seconds)
    (5/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 7.049635838 seconds)
    (6/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 7.051709705 seconds)
    (7/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 7.029187134 seconds)
    (8/32) benchmarking ("schur", "Matrix", 256)...
    done (took 7.064582911 seconds)
    (9/32) benchmarking ("lu", "Matrix", 256)...
    done (took 7.018745278 seconds)
    (10/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 7.017775859 seconds)
    (11/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.473747894 seconds)
    (12/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 7.017160304 seconds)
    (13/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 7.022723433 seconds)
    (14/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 7.053070979 seconds)
    (15/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 7.015937581 seconds)
    (16/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 7.034899405 seconds)
    (17/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.087759582 seconds)
    (18/32) benchmarking ("svd", "Matrix", 256)...
    done (took 7.029720733 seconds)
    (19/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 7.032607844 seconds)
    (20/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.64804379 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.523059372 seconds)
    (22/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 7.026893678 seconds)
    (23/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 7.024386127 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 2.066924184 seconds)
    (25/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.135437753 seconds)
    (26/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 7.043545447 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.052127289 seconds)
    (28/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 7.026407477 seconds)
    (29/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.639177942 seconds)
    (30/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 7.036736118 seconds)
    (31/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 7.019097962 seconds)
    (32/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 7.017663569 seconds)
  done (took 211.505295637 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 7.022230212 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 4.166002113 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 4.215280239 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 7.05411094 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.697549498 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.210059868 seconds)
    (7/36) benchmarking "scal!"...
    done (took 3.165816341 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.689702492 seconds)
    (9/36) benchmarking "syr!"...
    done (took 7.022020727 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 7.021965972 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.358574433 seconds)
    (12/36) benchmarking "her!"...
    done (took 7.019330183 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.369697334 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.970006311 seconds)
    (15/36) benchmarking "dotu"...
    done (took 3.018050829 seconds)
    (16/36) benchmarking "herk!"...
    done (took 7.027395816 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.273349781 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.366790333 seconds)
    (19/36) benchmarking "dotc"...
    done (took 3.017552814 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.204537732 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 7.036455717 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 4.142170576 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 4.09896636 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.329596801 seconds)
    (25/36) benchmarking "symm"...
    done (took 7.05520389 seconds)
    (26/36) benchmarking "herk"...
    done (took 7.027274347 seconds)
    (27/36) benchmarking "syrk"...
    done (took 7.037048944 seconds)
    (28/36) benchmarking "trsm"...
    done (took 7.023636241 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.203568937 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.257662203 seconds)
    (31/36) benchmarking "gemm"...
    done (took 7.039785956 seconds)
    (32/36) benchmarking "symm!"...
    done (took 7.032690324 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.14823848 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.883245458 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 7.040988573 seconds)
    (36/36) benchmarking "trmm"...
    done (took 7.034897914 seconds)
  done (took 180.226990047 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.190149243 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 2.044287209 seconds)
    (2/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 2.086209702 seconds)
    (3/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 2.244314759 seconds)
    (4/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.779774487 seconds)
    (5/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.75846947 seconds)
    (6/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 2.020168919 seconds)
    (7/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 2.023038104 seconds)
    (8/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 2.022956817 seconds)
    (9/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 2.031782252 seconds)
    (10/118) benchmarking ("cumsum!", Float32, 256)...
    done (took 2.021784843 seconds)
    (11/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 2.028418368 seconds)
    (12/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 2.093935899 seconds)
    (13/118) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.500788836 seconds)
    (14/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 2.033629208 seconds)
    (15/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 2.021725088 seconds)
    (16/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 2.025510225 seconds)
    (17/118) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.410748174 seconds)
    (18/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 2.021839378 seconds)
    (19/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 2.026091393 seconds)
    (20/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 2.024008152 seconds)
    (21/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 2.087714781 seconds)
    (22/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.393716353 seconds)
    (23/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.158397952 seconds)
    (24/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 2.026612716 seconds)
    (25/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 2.035207621 seconds)
    (26/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 2.162826633 seconds)
    (27/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 2.032227988 seconds)
    (28/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 2.025688022 seconds)
    (29/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.161564083 seconds)
    (30/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 2.024514542 seconds)
    (31/118) benchmarking ("cumsum!", Float64, 1024)...
    done (took 2.024130232 seconds)
    (32/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 2.103951134 seconds)
    (33/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 2.159409359 seconds)
    (34/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 2.03298244 seconds)
    (35/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 2.107905902 seconds)
    (36/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 2.029043539 seconds)
    (37/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.521992191 seconds)
    (38/118) benchmarking ("3-arg mul!", 2)...
    done (took 2.022146516 seconds)
    (39/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 2.027975869 seconds)
    (40/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 2.027817414 seconds)
    (41/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 2.090860568 seconds)
    (42/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 2.019398252 seconds)
    (43/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 5.116211659 seconds)
    (44/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 2.114484788 seconds)
    (45/118) benchmarking ("5-arg mul!", 3)...
    done (took 2.021451578 seconds)
    (46/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 2.039860451 seconds)
    (47/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.090351718 seconds)
    (48/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.714955745 seconds)
    (49/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 2.02405029 seconds)
    (50/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 2.027529792 seconds)
    (51/118) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 2.025848012 seconds)
    (52/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 2.026174132 seconds)
    (53/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 2.029569574 seconds)
    (54/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.460155326 seconds)
    (55/118) benchmarking ("5-arg mul!", 2)...
    done (took 2.021665949 seconds)
    (56/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 2.052907962 seconds)
    (57/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.628984621 seconds)
    (58/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 2.026806623 seconds)
    (59/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 2.027047314 seconds)
    (60/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 2.030242055 seconds)
    (61/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 2.027215627 seconds)
    (62/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 2.028655372 seconds)
    (63/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 2.034398323 seconds)
    (64/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 2.066751423 seconds)
    (65/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.830384435 seconds)
    (66/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.152944391 seconds)
    (67/118) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.413134457 seconds)
    (68/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.837452685 seconds)
    (69/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 2.023577785 seconds)
    (70/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.329972613 seconds)
    (71/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 2.068525513 seconds)
    (72/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 2.023510438 seconds)
    (73/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 2.108359208 seconds)
    (74/118) benchmarking ("cumsum!", Int64, 1024)...
    done (took 2.022020844 seconds)
    (75/118) benchmarking ("cumsum!", Int32, 1024)...
    done (took 2.028136539 seconds)
    (76/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 2.027205736 seconds)
    (77/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 2.026993477 seconds)
    (78/118) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 4.150723122 seconds)
    (79/118) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 4.237820158 seconds)
    (80/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 2.03377533 seconds)
    (81/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 2.163714377 seconds)
    (82/118) benchmarking ("cumsum!", Float32, 1024)...
    done (took 2.006291178 seconds)
    (83/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 2.031568088 seconds)
    (84/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 2.030531253 seconds)
    (85/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 22.078951712 seconds)
    (86/118) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.681323911 seconds)
    (87/118) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 2.032807537 seconds)
    (88/118) benchmarking ("cumsum!", Float64, 256)...
    done (took 2.035092002 seconds)
    (89/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 2.091294757 seconds)
    (90/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 2.046829443 seconds)
    (91/118) benchmarking ("3-arg mul!", 3)...
    done (took 2.030211749 seconds)
    (92/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 2.034981315 seconds)
    (93/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 2.041965895 seconds)
    (94/118) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 4.204002539 seconds)
    (95/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 2.035484775 seconds)
    (96/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 2.036162499 seconds)
    (97/118) benchmarking ("cumsum!", Int32, 256)...
    done (took 2.034861234 seconds)
    (98/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.090856917 seconds)
    (99/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 2.032689052 seconds)
    (100/118) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 22.28008433 seconds)
    (101/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.258442178 seconds)
    (102/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 2.105239206 seconds)
    (103/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.288531746 seconds)
    (104/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.27068784 seconds)
    (105/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 2.033431753 seconds)
    (106/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 2.036444855 seconds)
    (107/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 2.052423352 seconds)
    (108/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 2.037390441 seconds)
    (109/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 2.035368924 seconds)
    (110/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 2.041415778 seconds)
    (111/118) benchmarking ("cumsum!", Int64, 256)...
    done (took 2.037677163 seconds)
    (112/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 2.037524698 seconds)
    (113/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 2.038448653 seconds)
    (114/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 2.039895687 seconds)
    (115/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 2.035199003 seconds)
    (116/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 2.037252792 seconds)
    (117/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 2.051288715 seconds)
    (118/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 2.032765168 seconds)
  done (took 439.086456772 seconds)
done (took 834.999246389 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 512)...
    done (took 2.776916435 seconds)
    (2/5) benchmarking ("identity", 4096)...
    done (took 2.842117415 seconds)
    (3/5) benchmarking ("identity", 2)...
    done (took 2.688729691 seconds)
    (4/5) benchmarking ("identity", 1024)...
    done (took 2.723794107 seconds)
    (5/5) benchmarking ("identity", 64)...
    done (took 2.686601427 seconds)
  done (took 15.676772201 seconds)
done (took 17.628880149 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 2.069633683 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 2.055870039 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 2.043877703 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.109025805 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 2.064056154 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 2.050699341 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 2.084563812 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 2.086359849 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 2.068975259 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 2.04964812 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 2.100890973 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 2.054903224 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 2.071714422 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 2.075311429 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.12680084 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 2.079862026 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 2.05333126 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 2.046674698 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 2.108709926 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 2.055695776 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 2.05511804 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 2.051173992 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 2.052994078 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 2.100427505 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.134560484 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 2.062475029 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 2.052390751 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 2.098475814 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 2.062087174 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 2.096873903 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 2.113167157 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 2.074280065 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 2.086258584 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.127293232 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 2.110852716 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.134081234 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 2.061819603 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 2.123898933 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 2.061117621 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 2.141425262 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 2.111948192 seconds)
  done (took 87.331425485 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 2.048680214 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.165801686 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.25365119 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 2.079032921 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 2.047086163 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.262764122 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 2.099588357 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 2.172331869 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 2.177292838 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.261550673 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.261250094 seconds)
  done (took 25.799088765 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 2.047109337 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.180939693 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.257741974 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 2.083824919 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 2.048942478 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.269416122 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 2.111053443 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 2.177590245 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 2.183210751 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.261783673 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.275657916 seconds)
  done (took 25.870823643 seconds)
done (took 140.965245194 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 2.418259479 seconds)
    (2/2) benchmarking "11899"...
    done (took 2.067904739 seconds)
  done (took 6.449068891 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 2.044263746 seconds)
    (2/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 2.06145178 seconds)
    (3/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.196213465 seconds)
    (4/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 2.044217478 seconds)
    (5/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 2.044648084 seconds)
    (6/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 2.044744669 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 2.043553594 seconds)
    (8/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 2.043373166 seconds)
  done (took 18.486592226 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 2.043533655 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 2.042981783 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 2.044253579 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 2.0436865 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 2.044923474 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 2.042144404 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 2.044603378 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 2.044899694 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 2.044436849 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 2.046236958 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 2.042419878 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 2.043283783 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 2.044984523 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 2.045757875 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 2.043504573 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 2.045498004 seconds)
  done (took 34.671061139 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("minimum", (8,))...
    done (took 2.045036151 seconds)
    (2/24) benchmarking ("sumabs", (4,))...
    done (took 2.044015317 seconds)
    (3/24) benchmarking ("sumabs", (2, 2))...
    done (took 2.044048288 seconds)
    (4/24) benchmarking ("minimum", (2,))...
    done (took 2.042861428 seconds)
    (5/24) benchmarking ("sum", (8,))...
    done (took 2.042552684 seconds)
    (6/24) benchmarking ("sumabs", (2,))...
    done (took 2.044916306 seconds)
    (7/24) benchmarking ("sumabs", (16, 16))...
    done (took 2.047417141 seconds)
    (8/24) benchmarking ("minimum", (4, 4))...
    done (took 2.044571393 seconds)
    (9/24) benchmarking ("sumabs", (8,))...
    done (took 2.045674761 seconds)
    (10/24) benchmarking ("sum", (2, 2))...
    done (took 2.044520321 seconds)
    (11/24) benchmarking ("minimum", (2, 2))...
    done (took 2.044455795 seconds)
    (12/24) benchmarking ("sum", (4,))...
    done (took 2.044933417 seconds)
    (13/24) benchmarking ("sumabs", (4, 4))...
    done (took 2.045516581 seconds)
    (14/24) benchmarking ("sumabs", (16,))...
    done (took 2.045144578 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 2.045219585 seconds)
    (16/24) benchmarking ("sum", (4, 4))...
    done (took 2.045077672 seconds)
    (17/24) benchmarking ("sum", (8, 8))...
    done (took 2.045898437 seconds)
    (18/24) benchmarking ("sumabs", (8, 8))...
    done (took 2.047142809 seconds)
    (19/24) benchmarking ("minimum", (8, 8))...
    done (took 2.04901165 seconds)
    (20/24) benchmarking ("sum", (16, 16))...
    done (took 2.047724472 seconds)
    (21/24) benchmarking ("minimum", (4,))...
    done (took 2.045748588 seconds)
    (22/24) benchmarking ("sum", (16,))...
    done (took 2.044824324 seconds)
    (23/24) benchmarking ("minimum", (16, 16))...
    done (took 2.050356949 seconds)
    (24/24) benchmarking ("sum", (2,))...
    done (took 2.045563079 seconds)
  done (took 51.059807767 seconds)
done (took 112.641369165 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.24233866 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.605129733 seconds)
  done (took 8.813329989 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 2.050196059 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.045450715 seconds)
  done (took 6.125029339 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 2.047226549 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 2.0475793 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 2.045741071 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 2.046929263 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 2.045971016 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 2.047891456 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 2.046851358 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 2.046889415 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 2.047788044 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 2.047323503 seconds)
  done (took 22.438166758 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 2.038723169 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 2.048008298 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 2.046749986 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 2.046134498 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 2.04778307 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 2.047550443 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 2.046023711 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 2.047024417 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 2.047501458 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 2.048258071 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 2.048560343 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 2.048577201 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 2.047075506 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 2.048661986 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 2.047878402 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 2.046051976 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 2.047931215 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 2.048549251 seconds)
  done (took 38.808547066 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 2.046111376 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 2.048209774 seconds)
  done (took 6.062313174 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 2.046874919 seconds)
    (2/7) benchmarking "second"...
    done (took 2.047368187 seconds)
    (3/7) benchmarking "month"...
    done (took 2.047742034 seconds)
    (4/7) benchmarking "year"...
    done (took 2.047221668 seconds)
    (5/7) benchmarking "hour"...
    done (took 2.048605651 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 2.049260684 seconds)
    (7/7) benchmarking "minute"...
    done (took 2.048074329 seconds)
  done (took 16.303619075 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 2.049261823 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.199515794 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.254096055 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.659033946 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 2.048972802 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 2.05113711 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.935256826 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 2.051563568 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 2.053557527 seconds)
  done (took 22.270960939 seconds)
done (took 122.789599798 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.893075843 seconds)
  (2/8) benchmarking "printfd"...
  done (took 7.044650102 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.326473798 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 7.181444929 seconds)
  (5/8) benchmarking "pisum"...
  done (took 7.051448218 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.38785614 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 7.05361058 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.598104801 seconds)
done (took 44.507389743 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 7.172126728 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 7.047734911 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 7.078548681 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 7.077295733 seconds)
  done (took 23.175932811 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 7.048580912 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.372924651 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 7.070967473 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 4.078081316 seconds)
  done (took 23.557910159 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.429567337 seconds)
    (2/2) benchmarking "read"...
    done (took 2.3959519 seconds)
  done (took 6.802453466 seconds)
done (took 62.685488773 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 2.050222562 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 2.048709037 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 2.052263108 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 2.050158488 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 2.049725801 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 2.050250509 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 2.049628697 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 2.049018261 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 2.049076961 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 2.049260127 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 2.050071088 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 2.036027217 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 2.050356366 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 2.04929575 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 2.051111194 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 2.04729242 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 2.050408272 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 2.049070153 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 2.050333736 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 2.052400831 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 2.051768009 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 2.052741679 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 2.051286322 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 2.050347119 seconds)
  done (took 51.163714073 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 2.051313029 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 2.052048813 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 2.050533672 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 2.051725887 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 2.052664396 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 2.050531543 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 2.050792748 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 2.052498967 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 2.052953188 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 2.05198568 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 2.052187008 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 2.05225796 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 2.053516957 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 2.053296735 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 2.052642799 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 2.0537665 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 2.052805782 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 2.052032896 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 2.051065808 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 2.054542706 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 2.052144357 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 2.054360636 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 2.053657071 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 2.055041056 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 2.054606758 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 2.051701218 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 2.054542774 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 2.051576041 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 2.052954674 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 2.054085871 seconds)
  done (took 63.554182394 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 2.051708475 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 2.052873639 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 2.054219535 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 2.053816267 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 2.054559145 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 2.054764945 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 2.054528805 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 2.054922137 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 2.040106643 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 2.055663413 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 2.053564594 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 2.054368453 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 2.054943239 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 2.054330544 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 2.055631279 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 2.053673476 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 2.053792821 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 2.055187228 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 2.055299413 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 2.054483414 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 2.054442477 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 2.055001459 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 2.054200342 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 2.055265094 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 2.053465225 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 2.054623985 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 2.054881551 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 2.056807913 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 2.054605212 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 2.055491152 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 2.054679868 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 2.057215806 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 2.054988463 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 2.056349141 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 2.05480136 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 2.055759147 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 2.057528224 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 2.057017276 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 2.054774336 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 2.056420948 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 2.054510952 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 2.055772702 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 2.055517055 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 2.056186459 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 2.055753716 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 2.056258417 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 2.055400316 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 2.055922252 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 2.057348391 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 2.057095453 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 2.056339148 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 2.057496281 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 2.056515083 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 2.056010017 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 2.056746293 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 2.057492135 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 2.057286337 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 2.055715356 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 2.057100338 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 2.057685496 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 2.057714679 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 2.057169033 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 2.057097352 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 2.055670078 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 2.057823478 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 2.057441644 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 2.057350232 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 2.058208568 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 2.057813014 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 2.059893883 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 2.060638007 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 2.059180725 seconds)
  done (took 149.981996602 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 2.057253924 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 2.056732081 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 2.057479108 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 2.058097424 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 2.058575809 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 2.057975072 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 2.058723315 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 2.058940414 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 2.061274599 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 2.059640105 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 2.060137312 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 2.058056879 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 2.06037666 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 2.058019498 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 2.059965352 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 2.059264706 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 2.05979259 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 2.05915632 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 2.058719095 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 2.057333326 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 2.059926627 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 2.060942205 seconds)
  done (took 47.276004385 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 2.058068078 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 2.043768525 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 2.058415539 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 2.057478327 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 2.058758505 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 2.059805722 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 2.058666652 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 2.059443586 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 2.059366148 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 2.059400214 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 2.058942889 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 2.059709706 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 2.060263888 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 2.058930287 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 2.059125391 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 2.058174059 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 2.059705972 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 2.059617087 seconds)
  done (took 39.02723903 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 2.059513965 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 2.059931574 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 2.060853357 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 2.059620467 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 2.061761872 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 2.06128398 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 2.060513694 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 2.061445524 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 2.048591907 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 2.03556916 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 2.062449146 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 2.062850516 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 2.06031884 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 2.060750503 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 2.060827558 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 2.060886742 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 2.060024466 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 2.06020643 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 2.063425273 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 2.059931942 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 2.061084182 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 2.05989332 seconds)
  done (took 47.283300706 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 2.060783293 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 2.060689613 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 2.061625557 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 2.060633609 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 2.062394408 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 2.062841772 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 2.060906517 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 2.061838846 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 2.062259963 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 2.061748388 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 2.062046875 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 2.060486189 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 2.063442222 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 2.062229534 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 2.062589474 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 2.062405035 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 2.058992014 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 2.063333913 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 2.063229922 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 2.061954954 seconds)
  done (took 43.218305983 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 2.062918637 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 2.063777752 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 2.063959609 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 2.062926824 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 2.064982724 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 2.063256398 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 2.06338042 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 2.063831652 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 2.063671066 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 2.062798474 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 2.064200476 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 2.064534436 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 2.064135742 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 2.064032397 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 2.064353602 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 2.063862934 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 2.064899273 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 2.063963497 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 2.063887893 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 2.065043987 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 2.063617343 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 2.064100905 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 2.064121547 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 2.064179569 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 2.066323615 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 2.065057598 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 2.065685867 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 2.066488568 seconds)
  done (took 59.782293601 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 2.06598236 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 2.063814095 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 2.065566847 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 2.06309736 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 2.063926343 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 2.066100445 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 2.066920002 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 2.06488559 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 2.06535452 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 2.063719153 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 2.065617756 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 2.063676536 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 2.064287264 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 2.06516832 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 2.06498822 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 2.066794533 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 2.064957133 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 2.066220564 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 2.064768307 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 2.066416374 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 2.066132137 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 2.065849546 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 2.066148604 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 2.066303611 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 2.06448767 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 2.065364725 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 2.066644262 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 2.065824318 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 2.066835362 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 2.065935819 seconds)
  done (took 63.946782078 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 2.085524239 seconds)
    (2/2) benchmarking "in"...
    done (took 2.083893753 seconds)
  done (took 6.156976925 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 2.065481782 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 2.066157024 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 2.066107217 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 2.065490134 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 2.066304557 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 2.067468898 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 2.065089053 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 2.067071759 seconds)
  done (took 18.516494553 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 2.067797999 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 2.072108569 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 2.066797635 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 2.065761774 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 2.068326425 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 2.076762672 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 2.068330825 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 2.069491213 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 2.058117659 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 2.070112155 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 2.073368661 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 2.03610813 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 2.078549216 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 2.074775642 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 2.06792623 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 2.070008855 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 2.069438949 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 2.071236225 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 2.067978088 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 2.06639572 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 2.073157186 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 2.067630686 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 2.070082433 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 2.067963975 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 2.067656163 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 2.071684137 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 2.079642268 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 2.068904084 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 2.068629812 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 2.06723558 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 2.075583081 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 2.065939309 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 2.070777115 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 2.070899121 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 2.069579491 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 2.07108863 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 2.077118791 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 2.06970648 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 2.070087985 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 2.06978617 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 2.072441006 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 2.070741331 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 2.072140293 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 2.078200911 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 2.07387237 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 2.070095357 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 2.070559934 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 2.071704498 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 2.071649232 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 2.076201384 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 2.082332235 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 2.071352341 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 2.06983747 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 2.071144488 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 2.074448132 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 2.069661366 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 2.072211855 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 2.073752039 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 2.081463806 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 2.077921336 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 2.074693124 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 2.095316753 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 2.081897095 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 2.072240021 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 2.071386432 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.082658549 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 2.098648157 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 2.074152498 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 2.073060571 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 2.068590107 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 2.080461835 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 2.070525215 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 2.070086183 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 2.07027526 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.086362023 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 2.080670583 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 2.073377209 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 2.071594642 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 2.072382534 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 2.0720534 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 2.074615202 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 2.071900231 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 2.073402045 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 2.075155364 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.085052817 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 2.102513423 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 2.072556169 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 2.071482937 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 2.07534761 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 2.073249696 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 2.076017695 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 2.07565678 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 2.070071033 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 2.071077643 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 2.076470255 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 2.076286238 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 2.074331705 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 2.074052376 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 2.072893784 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 2.080706453 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 2.071513822 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 2.072783709 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.078593521 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 2.082496555 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 2.073134545 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 2.073673501 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 2.075715651 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 2.057597078 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 2.062753791 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 2.069743732 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 2.074092524 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 2.07330703 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 2.076122396 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 2.079190282 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 2.074365056 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.07939082 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 2.085533561 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 2.08386864 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 2.076871909 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 2.079019399 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 2.079110395 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 2.078871955 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.086717134 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 2.103922925 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 2.074444096 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 2.080293236 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 2.0817206 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 2.090704276 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 2.080410921 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 2.063900307 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 2.077261578 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 2.074801282 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 2.075318674 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 2.077407565 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 2.074402913 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 2.077640107 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 2.076676943 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 2.077229086 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 2.078002095 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 2.07648499 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 2.079484141 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 2.063929845 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 2.080517807 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 2.077568129 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 2.082328603 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 2.078144519 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 2.081611483 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 2.085114725 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 2.077175013 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 2.078399719 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 2.076722099 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 2.080784395 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 2.078900509 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 2.078632608 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 2.077414122 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 2.076806528 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 2.079170939 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 2.078631236 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 2.081549868 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 2.07987459 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 2.077834135 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 2.079688718 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 2.082112676 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 2.078244397 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 2.076820054 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 2.0780575 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 2.079940997 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 2.079883054 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 2.080090661 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 2.080024162 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 2.081510339 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 2.078647788 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 2.083858962 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 2.075642051 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 2.0788817 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 2.079235731 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 2.079993197 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 2.079133194 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 2.08290658 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 2.092279519 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 2.08329197 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 2.091995657 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 2.077366896 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 2.087232996 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 2.077489244 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 2.080981603 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 2.079410814 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 2.079059142 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 2.07953602 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 2.077850919 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 2.077995165 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 2.084390436 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.103349756 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 2.091328244 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 2.081967544 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 2.080680919 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 2.086181722 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 2.085082642 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 2.086065251 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 2.077714466 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 2.082046884 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 2.084927533 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 2.080903656 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 2.081056396 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 2.07980095 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 2.084435478 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 2.080841689 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 2.078615293 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 2.083211292 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 2.07933322 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 2.077763591 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 2.082000076 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 2.079101173 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 2.084040486 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 2.079397306 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 2.080683215 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 2.081781374 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 2.083047666 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 2.089202292 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 2.084704867 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 2.080901821 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 2.083010204 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 2.08449599 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 2.083387385 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 2.082193673 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 2.084715507 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 2.086439472 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 2.080691661 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 2.083381957 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 2.090274299 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 2.081371835 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 2.083284398 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 2.083074475 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 2.082782951 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 2.08734213 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 2.080876805 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 2.087441445 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 2.091706795 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 2.088190312 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 2.082680321 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 2.090123132 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 2.081091382 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 2.085704991 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 2.082156313 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 2.085601624 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 2.08362371 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 2.085810969 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 2.082001964 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 2.082168804 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 2.092023786 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 2.081688814 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 2.084678564 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 2.080571162 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 2.084800615 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 2.084163846 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 2.085879154 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 2.082520862 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.087978728 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 2.093926795 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 2.08937983 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 2.085001566 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 2.088381618 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 2.071752254 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 2.085263761 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 2.08843277 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 2.085830239 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.09899515 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 2.09638108 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 2.082036774 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 2.083539256 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 2.084912423 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 2.087892724 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 2.084146025 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 2.085671286 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.093466783 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 2.08583622 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 2.085797696 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 2.093923197 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 2.084396014 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 2.087211543 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 2.092215454 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 2.086084984 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 2.088637983 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 2.086563287 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 2.087551058 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 2.087607736 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 2.085088639 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 2.086319894 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 2.085116416 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 2.088161116 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 2.090326518 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 2.08677003 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 2.085252647 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 2.084716055 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 2.093917805 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 2.086109442 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 2.088271931 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 2.093225766 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 2.086751659 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 2.086058797 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 2.088867518 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 2.084716225 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 2.087599994 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 2.086585347 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 2.087202636 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 2.086011883 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 2.083900276 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 2.090856199 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 2.100032442 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 2.09116183 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 2.09526241 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 2.089086447 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 2.096456655 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 2.085312177 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 2.086769375 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 2.086714076 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 2.091549272 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 2.09504354 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 2.085771948 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 2.087452149 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 2.093385591 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 2.087606857 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 2.087307343 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 2.091892468 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 2.086512507 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 2.087664144 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 2.088538933 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 2.090291504 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 2.095562635 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 2.091166511 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 2.086923246 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 2.090767847 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 2.087270366 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 2.088257275 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 2.091919067 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 2.090593676 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 2.088133714 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 2.08672994 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 2.085034675 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 2.085807401 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 2.086143285 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 2.087408786 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 2.08714927 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 2.087848689 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 2.088963595 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 2.095570562 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 2.089158318 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 2.089636747 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 2.09268461 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 2.088657131 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 2.097846321 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 2.088842705 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 2.089319937 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 2.08966784 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 2.087362363 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 2.090142564 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 2.087136208 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 2.088957652 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 2.090048059 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 2.088233077 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 2.090540684 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 2.100985863 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 2.097352791 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 2.093300955 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 2.093332602 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 2.088912971 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 2.092743136 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.101836779 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 2.117325716 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 2.090538658 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 2.093309596 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 2.094095189 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 2.097832141 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 2.091214068 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 2.097307731 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.094488 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 2.101198474 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 2.091703499 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 2.088023427 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 2.09257811 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 2.10149038 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 2.086595456 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 2.086359463 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 2.087376835 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 2.092969317 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 2.090472958 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 2.087301578 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 2.089879759 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 2.090935226 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 2.088211471 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 2.101209838 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 2.087705884 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 2.090166411 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 2.087919067 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 2.087846936 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 2.088595357 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 2.087561507 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 2.089339203 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 2.090210454 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 2.086639174 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 2.088028063 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 2.091435933 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 2.094212915 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 2.088378864 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.092142539 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 2.099933784 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 2.087305312 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 2.088111084 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 2.089610491 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 2.087011925 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 2.091341747 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 2.085798564 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 2.088895685 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 2.092274908 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 2.087432734 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 2.088998482 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.093585184 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 2.100151114 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 2.090958368 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 2.087473533 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 2.088220302 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 2.094567296 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 2.089565664 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 2.090294439 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 2.09042474 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 2.099261064 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.094019169 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 2.104251338 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 2.102330446 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 2.089775869 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 2.090610241 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.099758489 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 2.100494926 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 2.089598776 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 2.088842304 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 2.088268512 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 2.092044212 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 2.092405881 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 2.09147882 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 2.088611885 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 2.089532924 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 2.097267948 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 2.088361877 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 2.08941432 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 2.091008945 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 2.089937671 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 2.091725108 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 2.089929718 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 2.098404506 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 2.087964275 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 2.0905279 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 2.091088207 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 2.091317524 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 2.092165152 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 2.094540793 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 2.075721738 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 2.090025019 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 2.092276525 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 2.093382023 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 2.094395655 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 2.089377607 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 2.090514614 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 2.093356056 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 2.088792055 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 2.089427122 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 2.092100503 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 2.089871422 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 2.090177934 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 2.095135819 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 2.101022355 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 2.089793737 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 2.094318286 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 2.092059578 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 2.09810034 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 2.089835661 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 2.090815931 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 2.089967782 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 2.090476083 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 2.595523806 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 2.087667258 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 2.089106592 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 2.088737668 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 2.092760082 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 2.09468439 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 2.088574876 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 2.093261363 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 2.088778769 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 2.096959991 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 2.086735784 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.094357697 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 2.101705251 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 2.092038745 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 2.095062615 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 2.097993109 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 2.092118062 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 2.091197048 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 2.08825608 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 2.085382799 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 2.090706852 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 2.090571932 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 2.091375407 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 2.092219636 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 2.091228065 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 2.089342948 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 2.092271412 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 2.088040791 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 2.094018771 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 2.08796524 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 2.088798475 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 2.094228 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 2.101674774 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 2.097470319 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 2.090830174 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 2.09233853 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 2.089571098 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 2.094257209 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 2.111280085 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 2.088981581 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 2.091438983 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 2.091189015 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 2.098427203 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 2.088122812 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 2.098831214 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 2.099806263 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 2.093216583 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 2.097865654 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 2.095319663 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 2.108527022 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 2.090460866 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.097416009 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 2.134198992 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 2.088542091 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 2.085020659 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 2.086611967 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 2.086651818 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 2.086784011 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 2.084871045 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 2.080250038 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 2.089400438 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 2.081876713 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 2.084886875 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 2.090957833 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 2.047738524 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 2.081816692 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 2.08577589 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 2.081153813 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 2.087226262 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 2.078729113 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 2.086901213 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 2.085208186 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 2.079350065 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 2.081579844 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 2.081709537 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 2.077074818 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 2.0859546 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 2.078942571 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 2.083068426 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 2.079570425 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 2.081383539 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 2.094614949 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 2.077728647 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 2.084467904 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.094721808 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 2.094068715 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 2.080129617 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 2.080010826 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 2.080498921 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 2.052845767 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 2.088717345 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 2.077718939 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.084795862 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 2.089451264 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 2.082291542 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 2.094345026 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 2.08266337 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 2.079425797 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 2.081885755 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 2.078166468 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 2.090090346 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 2.094736003 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 2.089982888 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 2.077235462 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 2.080117103 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 2.093278958 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 2.07658956 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 2.086097379 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 2.083130944 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 2.080689171 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 2.057475728 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 2.064440759 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 2.07653564 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 2.078729063 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 2.079597408 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 2.081955861 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 2.087719078 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 2.077942793 seconds)
  done (took 1244.816028157 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 2.081489321 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 2.077274285 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 2.078179086 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 2.07692966 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 2.079319159 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 2.078050615 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 2.077140981 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 2.07748214 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 2.077127695 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 2.075944601 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 2.077544761 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 2.076844236 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 2.076433227 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 2.074440403 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 2.076663986 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 2.081159028 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 2.077347859 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 2.077402194 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 2.077008661 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 2.077758831 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 2.077373088 seconds)
  done (took 45.627989759 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 2.077842701 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 2.079005363 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 2.075419016 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 2.076661784 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 2.076821663 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 2.077370994 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 2.076727445 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 2.084672136 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 2.077800984 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 2.077965275 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 2.078355631 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 2.07809233 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 2.085654605 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 2.075864312 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 2.076267421 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 2.077099481 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 2.079009854 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 2.079408478 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 2.078617198 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 2.080248049 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 2.080509553 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 2.07979152 seconds)
  done (took 47.727829054 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 2.079824508 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 2.080202353 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 2.081686345 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 2.088607454 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 2.078943804 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 2.081709067 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 2.081169881 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 2.085223919 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 2.086046614 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 2.083939394 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 2.088990781 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 2.089109667 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 2.081073599 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 2.086629736 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 2.080748133 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 2.081511408 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.223998264 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 2.082159747 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 2.089902043 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 2.086715923 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 2.08956289 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 2.072918153 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 2.071229175 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 2.093046101 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 2.086898751 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 2.085857219 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 2.087098278 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 2.096165824 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 2.07774167 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 2.079323917 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 2.083147425 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 2.079023689 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 2.08754151 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 2.081751951 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 2.076724613 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 2.078936747 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 2.085059764 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 2.086061463 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 2.075694697 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 2.074203838 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 2.086821425 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 2.104832595 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 2.060565796 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 2.059704901 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 2.084839417 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 2.075797238 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 2.077816926 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 2.078825421 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 2.07801064 seconds)
  done (took 104.181892028 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 2.066780445 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 2.068457836 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 2.075360336 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 2.065142685 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 2.068516895 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 2.066562342 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 2.072605993 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 2.068367231 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 2.064492016 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 2.065015455 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 2.064149003 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 2.075130761 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 2.068043066 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 2.068037344 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 2.066668318 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 2.06694843 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 2.069135107 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 2.065187891 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 2.061754143 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 2.065053121 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 2.062734106 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 2.074663052 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 2.065893221 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 2.068703384 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 2.066273219 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 2.064466205 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 2.068765431 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 2.067947382 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 2.068038582 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 2.067757837 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 2.067552949 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 2.068324027 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 2.066488626 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 2.066951937 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 2.067946535 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 2.073254726 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 2.066542294 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 2.068326225 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 2.066532793 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 2.067007609 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 2.073540458 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 2.067083935 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 2.068699305 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 2.068125567 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 2.068127529 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 2.070764758 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 2.066661692 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 2.064046935 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 2.066097366 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 2.066809375 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 2.070462513 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 2.065255287 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 2.065562162 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 2.067756522 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 2.06517403 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 2.069284627 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 2.066254571 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 2.064130195 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 2.06559498 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 2.066728103 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 2.066478135 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 2.064034477 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 2.064947504 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 2.066197073 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 2.069826249 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 2.065709931 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 2.063681634 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 2.062776431 seconds)
  done (took 142.564369512 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 2.067629879 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 2.059841016 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 2.062747093 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 2.062961187 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 2.063590686 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 2.072607524 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 2.063939606 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 2.060163988 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 2.063792737 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 2.063127934 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 2.063716333 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 2.061046819 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 2.063982127 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 2.062386207 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 2.061684301 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 2.068772071 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 2.058926542 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 2.061727138 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 2.059116194 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 2.057681849 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 2.064161496 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 2.058528476 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 2.061412643 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 2.06013209 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 2.061976248 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 2.065530129 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 2.062934677 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 2.063355562 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 2.062721792 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 2.068244489 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 2.05821584 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 2.060015042 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 2.058058432 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 2.062129899 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 2.065439793 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 2.060809252 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 2.061277593 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 2.062180016 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 2.059633184 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 2.066130223 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 2.059545016 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 2.059487177 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 2.057944102 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 2.059954509 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 2.061165408 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 2.060510178 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 2.056818234 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 2.060012788 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 2.060015375 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 2.064128668 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 2.055312433 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 2.058977926 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 2.058451602 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 2.055260767 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 2.063163075 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 2.056073986 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 2.057852457 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 2.055681448 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 2.055712182 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 2.060924913 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 2.061937618 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 2.058320349 seconds)
  done (took 129.788867909 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 2.062403878 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 2.058197929 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 2.059246276 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 2.055874747 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 2.055419831 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 2.059986267 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 2.061433089 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 2.057205513 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 2.05860989 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 2.054483682 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 2.067561624 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 2.057149702 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 2.057376084 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 2.05855925 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 2.056719367 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 2.062580555 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 2.05572417 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 2.059984978 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 2.054431391 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 2.056625061 seconds)
  done (took 43.150154288 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 2.055627808 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 2.056557756 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 2.062366745 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 2.056325518 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 2.05758925 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 2.055298058 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 2.055737379 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 2.057029074 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 2.058818914 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 2.06755593 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 2.059387992 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 2.059615085 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 2.059549372 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 2.064320053 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 2.062141286 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 2.059347797 seconds)
  done (took 34.931456562 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 2.058239247 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 2.067819389 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 2.061703819 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 2.060823477 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 2.062298881 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 2.061217725 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 2.067103371 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 2.059701833 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 2.063746552 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 2.065589 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 2.065676001 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 2.066893278 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 2.060193902 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 2.06010204 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 2.061884716 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 2.059093878 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 2.062066648 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 2.0595449 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 2.060794068 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 2.057309077 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 2.059751459 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 2.062900381 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 2.059563348 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 2.062546245 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 2.063238908 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 2.061391756 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 2.068612664 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 2.060780718 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 2.061026064 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 2.049028124 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 2.055156925 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 2.048650136 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 2.065071066 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 2.060972139 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 2.060956915 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 2.069221152 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 2.05750615 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 2.058236541 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 2.061003793 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 2.061189705 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 2.062514202 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 2.060108562 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 2.059669805 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 2.057645768 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 2.059306385 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 2.064333845 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 2.059022345 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 2.05948965 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 2.0575913 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 2.060138947 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 2.059617296 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 2.058680348 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 2.059150811 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 2.061447084 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 2.059422487 seconds)
  done (took 115.329405277 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 2.059340666 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 2.060939093 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 2.061183276 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 2.060749688 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 2.061598817 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 2.062015639 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 2.060323612 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 2.060036387 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 2.058112748 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 2.068305136 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 2.062986996 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 2.061323218 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 2.059844283 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 2.062229662 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 2.068278318 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 2.060180279 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 2.060433397 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 2.060388351 seconds)
  done (took 39.094822355 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 2.062962006 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 2.061718215 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 2.0563679 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 2.050230504 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 2.063155735 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 2.061511901 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 2.060257946 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 2.061895035 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 2.061416005 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 2.069354694 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 2.062595106 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 2.061110462 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 2.061380141 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 2.062658217 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 2.065308356 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 2.06254733 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 2.063877831 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 2.06652713 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 2.060631013 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 2.064554582 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 2.06301943 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 2.063614819 seconds)
  done (took 47.353833007 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 2.064476223 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 2.063500502 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 2.076298916 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 2.084401285 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 2.079887964 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 2.094511381 seconds)
  done (took 14.44610212 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 2.062506834 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.062936324 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 2.065734569 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 2.068591014 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.061247906 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.060973091 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.064030635 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.061027863 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.062768676 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 2.063213045 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.066466982 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.060288737 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.06495862 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.066046095 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.061029268 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.064928081 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.065553277 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.063423524 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 2.063706459 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.063453345 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.062665818 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.065233061 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.062071225 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.050866379 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.067004673 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.065617927 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.062973663 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 2.063222549 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.063947914 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.06499737 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.06646274 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.063901203 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.066585536 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 2.064047798 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 2.062094455 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.066470643 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.062449148 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.064442624 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.065167526 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.066889453 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 2.064900892 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.064615301 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.066748663 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.062462551 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.068042124 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.063772414 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.065026098 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.065985095 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.065258198 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 2.062705514 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.063840685 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.065904269 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.069406608 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.066581184 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.065668874 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 2.063739106 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 2.069510518 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.064178873 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.066151803 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 2.065815697 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.063804487 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.067158529 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.064502972 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 2.06510426 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.064765787 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.064582371 seconds)
  done (took 138.234581265 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.066482712 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 2.063177371 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.06473187 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 2.069564347 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.065059476 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.065179627 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.066868919 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.066496357 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.064470729 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 2.065870095 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.066167804 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.064664566 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.0672791 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.06487869 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.062446415 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.064479784 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.066576819 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.066592163 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 2.069630822 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 2.067559025 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.068123215 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.068153539 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.068531222 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.067435209 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 2.067937765 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.065733874 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.06903111 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.067616348 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.065236264 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.068216187 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.066423224 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.070077575 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.067274669 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 2.067346144 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.069587628 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.065315258 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.066636072 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.067414171 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.072905852 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.069777766 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.064601225 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.056260766 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.066596672 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 2.077629165 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 2.06994142 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.053972194 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.07041049 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 2.069749831 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 2.06952888 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 2.069576374 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 2.07021839 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 2.065882815 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 2.069554318 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.07599838 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.071152464 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 2.06961083 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.068959775 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 2.078081079 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.069110778 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.070656102 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 2.072384106 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 2.074898934 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 2.072389283 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.070885763 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 2.072344058 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 2.072232023 seconds)
  done (took 138.476110346 seconds)
done (took 2877.611831403 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 7.127885229 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.129972471 seconds)
  done (took 16.255784963 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.236247721 seconds)
    (2/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 7.128599983 seconds)
    (3/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.252064147 seconds)
    (4/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.192345161 seconds)
    (5/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 7.073824724 seconds)
    (6/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 7.079462119 seconds)
    (7/16) benchmarking ("transpose", (600, 600))...
    done (took 2.069961976 seconds)
    (8/16) benchmarking ("transpose", (600, 400))...
    done (took 2.073739091 seconds)
    (9/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.169539849 seconds)
    (10/16) benchmarking ("transpose", (20000, 10000))...
    done (took 2.071393931 seconds)
    (11/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 7.092080734 seconds)
    (12/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 2.068710706 seconds)
    (13/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 2.071231757 seconds)
    (14/16) benchmarking ("adjoint", (600, 400))...
    done (took 2.072011196 seconds)
    (15/16) benchmarking ("adjoint", (600, 600))...
    done (took 2.07405316 seconds)
    (16/16) benchmarking ("transpose", (20000, 20000))...
    done (took 2.078558208 seconds)
  done (took 55.800645671 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("Tridiagonal", 10)...
    done (took 2.074550986 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 2.076580486 seconds)
    (3/18) benchmarking ("IJV", 10)...
    done (took 2.074814822 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 2.07324368 seconds)
    (5/18) benchmarking ("Bidiagonal", 100)...
    done (took 2.083922626 seconds)
    (6/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.150801111 seconds)
    (7/18) benchmarking ("IJV", 100)...
    done (took 2.089155568 seconds)
    (8/18) benchmarking ("Bidiagonal", 10)...
    done (took 2.075608102 seconds)
    (9/18) benchmarking ("Tridiagonal", 100)...
    done (took 2.085962785 seconds)
    (10/18) benchmarking ("IV", 1000)...
    done (took 2.100970086 seconds)
    (11/18) benchmarking ("SymTridiagonal", 100)...
    done (took 2.091380204 seconds)
    (12/18) benchmarking ("Diagonal", 10)...
    done (took 2.077184253 seconds)
    (13/18) benchmarking ("Diagonal", 100)...
    done (took 2.080984512 seconds)
    (14/18) benchmarking ("SymTridiagonal", 10)...
    done (took 2.079816145 seconds)
    (15/18) benchmarking ("IJV", 1000)...
    done (took 2.163985573 seconds)
    (16/18) benchmarking ("Diagonal", 1000)...
    done (took 2.113690633 seconds)
    (17/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.126131822 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.14520225 seconds)
  done (took 39.754563506 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.150958479 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 7.078463554 seconds)
  done (took 11.228017729 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 7.094539403 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 7.079110328 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 7.108028449 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 7.077838263 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 7.098439219 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 7.111861241 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 7.079566741 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 7.078887238 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 7.083313856 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 7.092849 seconds)
  done (took 72.906450759 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 1000)...
    done (took 2.081381448 seconds)
    (2/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 2.084092263 seconds)
    (3/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.378996787 seconds)
    (4/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 2.086357991 seconds)
    (5/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 2.082515679 seconds)
    (6/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 2.102374972 seconds)
    (7/54) benchmarking ("spvec", "integer", 100000)...
    done (took 2.080730905 seconds)
    (8/54) benchmarking ("spmat", "range", 100)...
    done (took 2.110155859 seconds)
    (9/54) benchmarking ("spmat", "integer", 10)...
    done (took 2.078995923 seconds)
    (10/54) benchmarking ("spvec", "array", 10000)...
    done (took 7.07667943 seconds)
    (11/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 2.085137853 seconds)
    (12/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.385544174 seconds)
    (13/54) benchmarking ("spmat", "logical", 10)...
    done (took 2.086709641 seconds)
    (14/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 2.081708263 seconds)
    (15/54) benchmarking ("spmat", "array", 100)...
    done (took 2.426213973 seconds)
    (16/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 2.091254334 seconds)
    (17/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 2.0804659 seconds)
    (18/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 2.109618327 seconds)
    (19/54) benchmarking ("spvec", "logical", 1000)...
    done (took 2.108488175 seconds)
    (20/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 2.077883167 seconds)
    (21/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 2.081544088 seconds)
    (22/54) benchmarking ("spmat", "range", 10)...
    done (took 2.082193621 seconds)
    (23/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.244404391 seconds)
    (24/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.762077421 seconds)
    (25/54) benchmarking ("spmat", "array", 1000)...
    done (took 7.075381432 seconds)
    (26/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 2.079140638 seconds)
    (27/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 2.084831148 seconds)
    (28/54) benchmarking ("spvec", "integer", 10000)...
    done (took 2.078021061 seconds)
    (29/54) benchmarking ("spvec", "integer", 1000)...
    done (took 2.077483788 seconds)
    (30/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 2.080681454 seconds)
    (31/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 2.081771726 seconds)
    (32/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 7.077997153 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 2.084525661 seconds)
    (34/54) benchmarking ("spvec", "array", 100000)...
    done (took 7.086508758 seconds)
    (35/54) benchmarking ("spvec", "range", 10000)...
    done (took 2.085987194 seconds)
    (36/54) benchmarking ("spmat", "splogical", 10)...
    done (took 2.080533303 seconds)
    (37/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.579151603 seconds)
    (38/54) benchmarking ("spmat", "array", 10)...
    done (took 2.091596012 seconds)
    (39/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 2.09058462 seconds)
    (40/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.152048168 seconds)
    (41/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 2.118846334 seconds)
    (42/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 2.081391767 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.893275732 seconds)
    (44/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 2.079071986 seconds)
    (45/54) benchmarking ("spmat", "integer", 100)...
    done (took 2.078652545 seconds)
    (46/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 2.085626915 seconds)
    (47/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.761158921 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 2.203587626 seconds)
    (49/54) benchmarking ("spmat", "integer", 1000)...
    done (took 2.077055653 seconds)
    (50/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.321582906 seconds)
    (51/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.43804962 seconds)
    (52/54) benchmarking ("spvec", "range", 100000)...
    done (took 2.090733645 seconds)
    (53/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.23632682 seconds)
    (54/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.238324586 seconds)
  done (took 144.454045603 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 7.080976865 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.316470515 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.228557671 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 7.082505713 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.332143523 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.288563517 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 7.079246255 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.124821024 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 7.077820071 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.278483714 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.3306699 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.184964875 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 7.079504766 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 7.075059197 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 7.076259845 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 7.081170761 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.223033599 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.149799705 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 7.08072118 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 7.082129227 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.1009687 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.274861445 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.203071407 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 7.083851965 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 2.104185189 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.282598747 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.197417753 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.184134186 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.848917764 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 7.080732654 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.146098557 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 7.079463112 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 7.085900137 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 7.076657109 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.238266136 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.179312859 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.160478924 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 7.096022174 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 7.082697725 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 7.087413969 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.759981462 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.28444055 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.179203274 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.21404 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.338050441 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.299706581 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.694801069 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 7.084195313 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.718112326 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.248716016 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.295193911 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.289158458 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.199371387 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 7.087241975 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.375112039 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 7.086281729 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 7.0863215 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.313788486 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.2998793 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.193996025 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 7.086916193 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 7.085681338 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 7.083634605 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.326760063 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 7.086465126 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.176401789 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.086438361 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 7.086910619 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.179576822 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.190120267 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.313376371 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.31078996 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.115778846 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.405635463 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.579217516 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.292871776 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.150164604 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.306581351 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 7.090976931 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 7.084101324 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.172478171 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.918925293 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.339980724 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.326910947 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.285050523 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.111377747 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.736971782 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 7.085426803 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.275593454 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.274771283 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.321900461 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.333037103 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.32001629 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.442753144 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 7.090514304 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 7.085001207 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.399451149 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.212246923 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 7.036182259 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.438405081 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.314650922 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.576006204 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.114085714 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.375245455 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.214207331 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 7.090176819 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.738303403 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 7.089637867 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.294140774 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.126124093 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 7.092183231 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 7.099666484 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.275277708 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.992709038 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 7.087708935 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.795127447 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 2.152562076 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 7.088997828 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.294882259 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 7.094855928 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.334230512 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 7.09675687 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.318506821 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.701418544 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.119809664 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.263681862 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.335252234 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.722119177 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.378641163 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.330857208 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.200702576 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.312613451 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.896106197 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 7.08977783 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.34909878 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 7.094507744 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 7.09076283 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.258057773 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 7.099051424 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.233386784 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 7.093202064 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.355512604 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.112257638 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.315180455 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.092897003 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.327121647 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.118127336 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.138875309 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 7.091178324 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.214503283 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 7.098215138 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.934713482 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.247045159 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.091276223 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 7.092041102 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.679301842 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 7.088047948 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.242901317 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.317477411 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.100887762 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.158007603 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.655307722 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 7.093409036 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.176786329 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.10509181 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.37369189 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 7.090387364 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.338677674 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 7.05702527 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.568093041 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 7.077717455 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.326765187 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.274321041 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 7.098061784 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 7.09547195 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.934024346 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 7.092019201 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 7.090277865 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.247598886 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.094119315 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.995736607 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.289761313 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 7.093078606 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.216887813 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 7.099880693 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 4.163944646 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.430958312 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 7.091572453 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 7.09368402 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 7.09256445 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 7.095947764 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 7.09174764 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.304396103 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.119721156 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.524636106 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.226298881 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.348630219 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.398815001 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.293135864 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.128749768 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 7.097475731 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.312893404 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 7.095860867 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 2.15756456 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 7.092991012 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.118685836 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.317114378 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 7.094052858 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.296893019 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.323527613 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 3.07270252 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.141961572 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 7.095440689 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.095305085 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 7.010244994 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.239277635 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.176861756 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 7.096422376 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 7.098756665 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.212248411 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.214015853 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.276080764 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.925994691 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.256297374 seconds)
  done (took 949.89458286 seconds)
done (took 1292.288294801 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 7.097535056 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 7.097462277 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 7.097479923 seconds)
    (4/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 7.097138327 seconds)
  done (took 30.406358952 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 2.097597577 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 2.097676726 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 2.100006994 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 2.098502502 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 2.100119748 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 2.097968031 seconds)
  done (took 14.612480465 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 7.093254438 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 7.102196784 seconds)
    (3/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 7.098475453 seconds)
  done (took 23.314301437 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((10000000,), 2)...
    done (took 2.51521806 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.499224468 seconds)
    (3/4) benchmarking ((1000, 1000), 1)...
    done (took 2.171563854 seconds)
    (4/4) benchmarking ((1000, 1000), 2)...
    done (took 2.23556159 seconds)
  done (took 11.443898352 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 2.101564854 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 2.09614373 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 2.097852895 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 2.102212147 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 2.104249909 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 2.103863214 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 2.104484929 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 2.102501248 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 2.105390814 seconds)
  done (took 20.947066422 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.3392457 seconds)
done (took 107.08545649 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.237080516 seconds)
    (2/341) benchmarking ("collect", "all", BigInt, false)...
    done (took 2.446017947 seconds)
    (3/341) benchmarking ("collect", "filter", Bool, true)...
    done (took 3.306069999 seconds)
    (4/341) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 7.123416751 seconds)
    (5/341) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.379479115 seconds)
    (6/341) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 7.121397044 seconds)
    (7/341) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.247750161 seconds)
    (8/341) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 7.114524673 seconds)
    (9/341) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.59417492 seconds)
    (10/341) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.438876116 seconds)
    (11/341) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.256390671 seconds)
    (12/341) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.050652061 seconds)
    (13/341) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.285724523 seconds)
    (14/341) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.423750138 seconds)
    (15/341) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.234418422 seconds)
    (16/341) benchmarking ("perf_sum", Bool, true)...
    done (took 2.136061987 seconds)
    (17/341) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.546469607 seconds)
    (18/341) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.978304132 seconds)
    (19/341) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.381735907 seconds)
    (20/341) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 2.129824197 seconds)
    (21/341) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.126792734 seconds)
    (22/341) benchmarking ("collect", "all", BigFloat, false)...
    done (took 2.370188942 seconds)
    (23/341) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 7.118141631 seconds)
    (24/341) benchmarking ("perf_sum2", Int64, false)...
    done (took 2.160123988 seconds)
    (25/341) benchmarking ("map", *, BigInt, (true, true))...
    done (took 8.093847817 seconds)
    (26/341) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 7.214273336 seconds)
    (27/341) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.352015278 seconds)
    (28/341) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.901336645 seconds)
    (29/341) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.414445615 seconds)
    (30/341) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.386676762 seconds)
    (31/341) benchmarking ("collect", "all", Int8, true)...
    done (took 2.250128603 seconds)
    (32/341) benchmarking ("perf_sum4", Float64, true)...
    done (took 2.144904371 seconds)
    (33/341) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 7.117179724 seconds)
    (34/341) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 2.164115197 seconds)
    (35/341) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.246339213 seconds)
    (36/341) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.796673768 seconds)
    (37/341) benchmarking ("map", abs, Float64, true)...
    done (took 2.401578523 seconds)
    (38/341) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.905382177 seconds)
    (39/341) benchmarking ("perf_countnothing", Int8, true)...
    done (took 2.130491999 seconds)
    (40/341) benchmarking ("perf_countnothing", Int64, true)...
    done (took 2.126570149 seconds)
    (41/341) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.360680884 seconds)
    (42/341) benchmarking ("perf_sum", Float32, true)...
    done (took 2.255573422 seconds)
    (43/341) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.451803555 seconds)
    (44/341) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.31042858 seconds)
    (45/341) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.971669457 seconds)
    (46/341) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 3.151721774 seconds)
    (47/341) benchmarking ("collect", "all", Int64, false)...
    done (took 2.231155943 seconds)
    (48/341) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.145109774 seconds)
    (49/341) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.228714188 seconds)
    (50/341) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.205961303 seconds)
    (51/341) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.352427078 seconds)
    (52/341) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 7.121083512 seconds)
    (53/341) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 7.187580529 seconds)
    (54/341) benchmarking ("map", identity, Int8, false)...
    done (took 3.979981313 seconds)
    (55/341) benchmarking ("map", identity, Float32, true)...
    done (took 2.321563246 seconds)
    (56/341) benchmarking ("map", abs, Bool, true)...
    done (took 2.275902598 seconds)
    (57/341) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.542964234 seconds)
    (58/341) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 7.119931192 seconds)
    (59/341) benchmarking ("sort", Int8, false)...
    done (took 5.063763006 seconds)
    (60/341) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 2.15939785 seconds)
    (61/341) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.53718334 seconds)
    (62/341) benchmarking ("map", abs, Int64, true)...
    done (took 2.38393364 seconds)
    (63/341) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.002535299 seconds)
    (64/341) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.209344686 seconds)
    (65/341) benchmarking ("collect", "filter", Float32, false)...
    done (took 2.889979824 seconds)
    (66/341) benchmarking ("perf_countequals", "Int8")...
    done (took 2.385857917 seconds)
    (67/341) benchmarking ("collect", "filter", BigInt, false)...
    done (took 3.090839223 seconds)
    (68/341) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.477700179 seconds)
    (69/341) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.534144124 seconds)
    (70/341) benchmarking ("map", abs, BigFloat, false)...
    done (took 7.118612961 seconds)
    (71/341) benchmarking ("map", abs, BigFloat, true)...
    done (took 7.164677568 seconds)
    (72/341) benchmarking ("collect", "all", Float32, false)...
    done (took 2.285039614 seconds)
    (73/341) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.397383489 seconds)
    (74/341) benchmarking ("collect", "filter", Bool, false)...
    done (took 2.832579707 seconds)
    (75/341) benchmarking ("sort", Float32, false)...
    done (took 5.777843328 seconds)
    (76/341) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.053978015 seconds)
    (77/341) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.26236623 seconds)
    (78/341) benchmarking ("perf_sum4", Float32, true)...
    done (took 2.131417518 seconds)
    (79/341) benchmarking ("perf_countnothing", Bool, true)...
    done (took 2.13071869 seconds)
    (80/341) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.030010229 seconds)
    (81/341) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.705520406 seconds)
    (82/341) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.566866759 seconds)
    (83/341) benchmarking ("perf_countnothing", Int64, false)...
    done (took 2.137382282 seconds)
    (84/341) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.28065665 seconds)
    (85/341) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.332187967 seconds)
    (86/341) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.433806953 seconds)
    (87/341) benchmarking ("collect", "filter", Int8, false)...
    done (took 2.840942507 seconds)
    (88/341) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 7.129211759 seconds)
    (89/341) benchmarking ("map", abs, Int8, true)...
    done (took 2.27644374 seconds)
    (90/341) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.361065241 seconds)
    (91/341) benchmarking ("map", abs, Int8, false)...
    done (took 2.223999375 seconds)
    (92/341) benchmarking ("collect", "filter", ComplexF64, false)...
    done (took 3.218756981 seconds)
    (93/341) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.821280806 seconds)
    (94/341) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 7.12156125 seconds)
    (95/341) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.326664198 seconds)
    (96/341) benchmarking ("perf_countnothing", Float64, true)...
    done (took 2.142207398 seconds)
    (97/341) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.448653601 seconds)
    (98/341) benchmarking ("perf_sum4", Int8, false)...
    done (took 2.133581792 seconds)
    (99/341) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.367960495 seconds)
    (100/341) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 2.150039458 seconds)
    (101/341) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.979065728 seconds)
    (102/341) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 2.194035805 seconds)
    (103/341) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.322150592 seconds)
    (104/341) benchmarking ("map", abs, Float64, false)...
    done (took 2.22801409 seconds)
    (105/341) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.879381522 seconds)
    (106/341) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.534281029 seconds)
    (107/341) benchmarking ("perf_countnothing", Bool, false)...
    done (took 2.136407904 seconds)
    (108/341) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.512109422 seconds)
    (109/341) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.522423619 seconds)
    (110/341) benchmarking ("map", identity, Int8, true)...
    done (took 2.257734947 seconds)
    (111/341) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.517125143 seconds)
    (112/341) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.355577764 seconds)
    (113/341) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.044798964 seconds)
    (114/341) benchmarking ("collect", "filter", BigFloat, true)...
    done (took 3.144728481 seconds)
    (115/341) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.4297392 seconds)
    (116/341) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.257530218 seconds)
    (117/341) benchmarking ("map", identity, Bool, false)...
    done (took 2.201040207 seconds)
    (118/341) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.620378973 seconds)
    (119/341) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.585821137 seconds)
    (120/341) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.382902255 seconds)
    (121/341) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 7.122837455 seconds)
    (122/341) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.4336653 seconds)
    (123/341) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.819570154 seconds)
    (124/341) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.322052005 seconds)
    (125/341) benchmarking ("perf_countequals", "Float32")...
    done (took 2.431566388 seconds)
    (126/341) benchmarking ("collect", "all", Int64, true)...
    done (took 2.398157707 seconds)
    (127/341) benchmarking ("perf_sum", Int8, true)...
    done (took 2.127031243 seconds)
    (128/341) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 7.123328016 seconds)
    (129/341) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.446058235 seconds)
    (130/341) benchmarking ("perf_sum2", Int8, false)...
    done (took 2.130683549 seconds)
    (131/341) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.208470947 seconds)
    (132/341) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.970011684 seconds)
    (133/341) benchmarking ("collect", "filter", BigFloat, false)...
    done (took 3.191686581 seconds)
    (134/341) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 7.132480287 seconds)
    (135/341) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.474325255 seconds)
    (136/341) benchmarking ("perf_sum", Int64, false)...
    done (took 2.145127911 seconds)
    (137/341) benchmarking ("map", abs, Int64, false)...
    done (took 2.24069117 seconds)
    (138/341) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.523658089 seconds)
    (139/341) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.432954511 seconds)
    (140/341) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.367523734 seconds)
    (141/341) benchmarking ("collect", "filter", Float64, true)...
    done (took 3.493003653 seconds)
    (142/341) benchmarking ("sort", Float64, false)...
    done (took 5.82226236 seconds)
    (143/341) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.255360046 seconds)
    (144/341) benchmarking ("collect", "filter", Float64, false)...
    done (took 3.047305488 seconds)
    (145/341) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.228923097 seconds)
    (146/341) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.842162933 seconds)
    (147/341) benchmarking ("perf_countequals", "Int64")...
    done (took 2.382336163 seconds)
    (148/341) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.184941903 seconds)
    (149/341) benchmarking ("collect", "all", Float32, true)...
    done (took 2.324837266 seconds)
    (150/341) benchmarking ("perf_countequals", "Bool")...
    done (took 2.371619681 seconds)
    (151/341) benchmarking ("sort", Bool, false)...
    done (took 2.339312206 seconds)
    (152/341) benchmarking ("map", abs, BigInt, true)...
    done (took 7.455637965 seconds)
    (153/341) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 8.287969133 seconds)
    (154/341) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.229606846 seconds)
    (155/341) benchmarking ("perf_sum", BigInt, false)...
    done (took 9.600799409 seconds)
    (156/341) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 7.219675646 seconds)
    (157/341) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 7.127468048 seconds)
    (158/341) benchmarking ("perf_sum", Int64, true)...
    done (took 2.21212441 seconds)
    (159/341) benchmarking ("perf_sum4", Bool, false)...
    done (took 2.138697314 seconds)
    (160/341) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 2.203261706 seconds)
    (161/341) benchmarking ("sort", Int64, false)...
    done (took 5.749710562 seconds)
    (162/341) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 7.130535033 seconds)
    (163/341) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.757735188 seconds)
    (164/341) benchmarking ("perf_countnothing", Float32, false)...
    done (took 2.138824618 seconds)
    (165/341) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.439673423 seconds)
    (166/341) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 7.132106338 seconds)
    (167/341) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.129805685 seconds)
    (168/341) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 8.592231937 seconds)
    (169/341) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 2.22512471 seconds)
    (170/341) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.727522695 seconds)
    (171/341) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.900879766 seconds)
    (172/341) benchmarking ("collect", "filter", Int64, false)...
    done (took 3.018031298 seconds)
    (173/341) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.249280953 seconds)
    (174/341) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.525908174 seconds)
    (175/341) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 7.128837227 seconds)
    (176/341) benchmarking ("perf_sum", Float64, true)...
    done (took 2.279869963 seconds)
    (177/341) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 2.136733831 seconds)
    (178/341) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.336908522 seconds)
    (179/341) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.278728302 seconds)
    (180/341) benchmarking ("collect", "all", Bool, true)...
    done (took 2.284643265 seconds)
    (181/341) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.49566746 seconds)
    (182/341) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 7.321849109 seconds)
    (183/341) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.26441287 seconds)
    (184/341) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.327922685 seconds)
    (185/341) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 2.144176778 seconds)
    (186/341) benchmarking ("perf_sum4", Int64, true)...
    done (took 2.143330498 seconds)
    (187/341) benchmarking ("perf_sum3", BigInt, true)...
    done (took 8.035252486 seconds)
    (188/341) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 7.242623091 seconds)
    (189/341) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.610429997 seconds)
    (190/341) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.278519557 seconds)
    (191/341) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.452553639 seconds)
    (192/341) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.582783176 seconds)
    (193/341) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.280054892 seconds)
    (194/341) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.127980366 seconds)
    (195/341) benchmarking ("map", identity, Float64, false)...
    done (took 3.919445597 seconds)
    (196/341) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.134527836 seconds)
    (197/341) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.287320349 seconds)
    (198/341) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.607560739 seconds)
    (199/341) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 7.128163329 seconds)
    (200/341) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 7.133770658 seconds)
    (201/341) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 7.143778645 seconds)
    (202/341) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.25862962 seconds)
    (203/341) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.452819933 seconds)
    (204/341) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.347194019 seconds)
    (205/341) benchmarking ("perf_countnothing", Int8, false)...
    done (took 2.141900522 seconds)
    (206/341) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.378868484 seconds)
    (207/341) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.218095424 seconds)
    (208/341) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 7.134700259 seconds)
    (209/341) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.524673824 seconds)
    (210/341) benchmarking ("map", identity, BigInt, false)...
    done (took 2.371024363 seconds)
    (211/341) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.583598064 seconds)
    (212/341) benchmarking ("sort", BigFloat, false)...
    done (took 7.135047177 seconds)
    (213/341) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 2.142976334 seconds)
    (214/341) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.416115739 seconds)
    (215/341) benchmarking ("perf_sum2", Int64, true)...
    done (took 2.148207444 seconds)
    (216/341) benchmarking ("perf_countnothing", Float32, true)...
    done (took 2.138442669 seconds)
    (217/341) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.417038489 seconds)
    (218/341) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 7.13176548 seconds)
    (219/341) benchmarking ("collect", "all", Float64, false)...
    done (took 2.247790126 seconds)
    (220/341) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.580651447 seconds)
    (221/341) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.276238565 seconds)
    (222/341) benchmarking ("perf_sum", Float32, false)...
    done (took 2.206496435 seconds)
    (223/341) benchmarking ("perf_sum", Bool, false)...
    done (took 2.142435 seconds)
    (224/341) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.366781495 seconds)
    (225/341) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.553074264 seconds)
    (226/341) benchmarking ("map", *, BigInt, (false, true))...
    done (took 8.252276404 seconds)
    (227/341) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.536020064 seconds)
    (228/341) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 2.147624183 seconds)
    (229/341) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.258127312 seconds)
    (230/341) benchmarking ("collect", "filter", Int64, true)...
    done (took 3.441840737 seconds)
    (231/341) benchmarking ("collect", "filter", ComplexF64, true)...
    done (took 3.600474517 seconds)
    (232/341) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.242334149 seconds)
    (233/341) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 7.132563126 seconds)
    (234/341) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 2.261904514 seconds)
    (235/341) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.272944438 seconds)
    (236/341) benchmarking ("collect", "filter", Int8, true)...
    done (took 3.255034843 seconds)
    (237/341) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.478741517 seconds)
    (238/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.78274636 seconds)
    (239/341) benchmarking ("perf_countequals", "Float64")...
    done (took 2.425451438 seconds)
    (240/341) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.290721791 seconds)
    (241/341) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.479816899 seconds)
    (242/341) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.303553307 seconds)
    (243/341) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.562821175 seconds)
    (244/341) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.930265419 seconds)
    (245/341) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.511759687 seconds)
    (246/341) benchmarking ("perf_sum4", Bool, true)...
    done (took 2.147360676 seconds)
    (247/341) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.421839653 seconds)
    (248/341) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.261789688 seconds)
    (249/341) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.539558677 seconds)
    (250/341) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 2.220418433 seconds)
    (251/341) benchmarking ("map", identity, Float32, false)...
    done (took 2.218972454 seconds)
    (252/341) benchmarking ("collect", "filter", Float32, true)...
    done (took 3.353706274 seconds)
    (253/341) benchmarking ("collect", "filter", BigInt, true)...
    done (took 3.176717235 seconds)
    (254/341) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 8.224943488 seconds)
    (255/341) benchmarking ("perf_sum4", Int64, false)...
    done (took 2.276856569 seconds)
    (256/341) benchmarking ("collect", "all", Bool, false)...
    done (took 2.206779836 seconds)
    (257/341) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 2.15783257 seconds)
    (258/341) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.908367495 seconds)
    (259/341) benchmarking ("collect", "all", BigInt, true)...
    done (took 2.518805425 seconds)
    (260/341) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.233005961 seconds)
    (261/341) benchmarking ("collect", "all", Float64, true)...
    done (took 2.415745846 seconds)
    (262/341) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.35411599 seconds)
    (263/341) benchmarking ("map", abs, Bool, false)...
    done (took 2.215103528 seconds)
    (264/341) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.21476752 seconds)
    (265/341) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.319903436 seconds)
    (266/341) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 7.138863128 seconds)
    (267/341) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.739211253 seconds)
    (268/341) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 2.159891143 seconds)
    (269/341) benchmarking ("map", abs, Float32, true)...
    done (took 2.320815157 seconds)
    (270/341) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 3.250736595 seconds)
    (271/341) benchmarking ("sort", BigInt, false)...
    done (took 7.133853701 seconds)
    (272/341) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.084870803 seconds)
    (273/341) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.264640922 seconds)
    (274/341) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 7.202560725 seconds)
    (275/341) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.149771739 seconds)
    (276/341) benchmarking ("perf_countnothing", Float64, false)...
    done (took 2.143213128 seconds)
    (277/341) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.26750415 seconds)
    (278/341) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 8.307211948 seconds)
    (279/341) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 7.240142853 seconds)
    (280/341) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 3.182980735 seconds)
    (281/341) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.855086787 seconds)
    (282/341) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.14116879 seconds)
    (283/341) benchmarking ("map", abs, ComplexF64, false)...
    done (took 5.216432515 seconds)
    (284/341) benchmarking ("map", identity, Float64, true)...
    done (took 2.42599328 seconds)
    (285/341) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 7.133221737 seconds)
    (286/341) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.49426932 seconds)
    (287/341) benchmarking ("collect", "all", ComplexF64, true)...
    done (took 2.600667591 seconds)
    (288/341) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.531157415 seconds)
    (289/341) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.270593329 seconds)
    (290/341) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.553244035 seconds)
    (291/341) benchmarking ("map", identity, Bool, true)...
    done (took 2.288975703 seconds)
    (292/341) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.272141288 seconds)
    (293/341) benchmarking ("perf_sum", BigFloat, false)...
    done (took 7.134902972 seconds)
    (294/341) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.729393523 seconds)
    (295/341) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.944109807 seconds)
    (296/341) benchmarking ("map", abs, BigInt, false)...
    done (took 7.139995147 seconds)
    (297/341) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 4.419156493 seconds)
    (298/341) benchmarking ("map", abs, Float32, false)...
    done (took 2.233607353 seconds)
    (299/341) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.263633014 seconds)
    (300/341) benchmarking ("perf_sum", Int8, false)...
    done (took 2.14244958 seconds)
    (301/341) benchmarking ("map", identity, Int64, true)...
    done (took 2.422120697 seconds)
    (302/341) benchmarking ("perf_sum4", Int8, true)...
    done (took 2.139351103 seconds)
    (303/341) benchmarking ("collect", "all", BigFloat, true)...
    done (took 2.525842001 seconds)
    (304/341) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.134172733 seconds)
    (305/341) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 4.38793167 seconds)
    (306/341) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.889194328 seconds)
    (307/341) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.339549954 seconds)
    (308/341) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.263088302 seconds)
    (309/341) benchmarking ("map", identity, Int64, false)...
    done (took 2.237554923 seconds)
    (310/341) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.218646702 seconds)
    (311/341) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 7.132635945 seconds)
    (312/341) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.918361265 seconds)
    (313/341) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.446516225 seconds)
    (314/341) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.925110227 seconds)
    (315/341) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.29680865 seconds)
    (316/341) benchmarking ("perf_sum", BigFloat, true)...
    done (took 7.140325734 seconds)
    (317/341) benchmarking ("perf_sum4", Float32, false)...
    done (took 2.194557183 seconds)
    (318/341) benchmarking ("perf_sum4", Float64, false)...
    done (took 2.15373781 seconds)
    (319/341) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.331618088 seconds)
    (320/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.033113535 seconds)
    (321/341) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.266273441 seconds)
    (322/341) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.538800921 seconds)
    (323/341) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 3.166599133 seconds)
    (324/341) benchmarking ("map", identity, BigInt, true)...
    done (took 2.527759793 seconds)
    (325/341) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.429627682 seconds)
    (326/341) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.231479769 seconds)
    (327/341) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.585226038 seconds)
    (328/341) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.219673005 seconds)
    (329/341) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.33101052 seconds)
    (330/341) benchmarking ("collect", "all", ComplexF64, false)...
    done (took 2.345065858 seconds)
    (331/341) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.351817616 seconds)
    (332/341) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.247537251 seconds)
    (333/341) benchmarking ("collect", "all", Int8, false)...
    done (took 2.337771738 seconds)
    (334/341) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.269068608 seconds)
    (335/341) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 7.137396361 seconds)
    (336/341) benchmarking ("perf_sum", Float64, false)...
    done (took 2.312876878 seconds)
    (337/341) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.260045109 seconds)
    (338/341) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.556105622 seconds)
    (339/341) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.218996786 seconds)
    (340/341) benchmarking ("perf_sum2", BigInt, true)...
    done (took 8.303849922 seconds)
    (341/341) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.374620706 seconds)
  done (took 1185.300407568 seconds)
done (took 1187.677563876 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.15921407 seconds)
  (2/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 2.13864113 seconds)
  (3/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.655221627 seconds)
  (4/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 2.153712616 seconds)
  (5/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 2.140602692 seconds)
  (6/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 2.146479978 seconds)
  (7/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.663391066 seconds)
  (8/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 2.172254477 seconds)
  (9/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 2.155591524 seconds)
  (10/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.665128714 seconds)
  (11/152) benchmarking ("inner", "Int32", 4096)...
  done (took 2.151235103 seconds)
  (12/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 2.1403519 seconds)
  (13/152) benchmarking ("inner", "Int64", 4096)...
  done (took 2.156398444 seconds)
  (14/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 2.174864846 seconds)
  (15/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 2.149697384 seconds)
  (16/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 2.154337503 seconds)
  (17/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 2.145451813 seconds)
  (18/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 2.16523985 seconds)
  (19/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 2.175041485 seconds)
  (20/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 2.145277357 seconds)
  (21/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 2.192098847 seconds)
  (22/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 2.147585498 seconds)
  (23/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 2.13979748 seconds)
  (24/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 2.191369541 seconds)
  (25/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 2.139000588 seconds)
  (26/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 2.15594408 seconds)
  (27/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.161265953 seconds)
  (28/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 2.192896058 seconds)
  (29/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 2.191989776 seconds)
  (30/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 2.145049265 seconds)
  (31/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 2.146030802 seconds)
  (32/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.506501283 seconds)
  (33/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 2.194515335 seconds)
  (34/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 2.145898733 seconds)
  (35/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 2.152267691 seconds)
  (36/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 2.155539104 seconds)
  (37/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 2.146623239 seconds)
  (38/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 2.155298065 seconds)
  (39/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.160107852 seconds)
  (40/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 2.157720798 seconds)
  (41/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 2.142901365 seconds)
  (42/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 2.154520069 seconds)
  (43/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 2.146886 seconds)
  (44/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 2.145423448 seconds)
  (45/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 2.140727405 seconds)
  (46/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 2.1422986 seconds)
  (47/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 2.141877648 seconds)
  (48/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.265873997 seconds)
  (49/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 2.156974201 seconds)
  (50/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.489274927 seconds)
  (51/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.201842989 seconds)
  (52/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.16195749 seconds)
  (53/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 2.194936281 seconds)
  (54/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 2.144725303 seconds)
  (55/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 2.144025639 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 2.145480101 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 2.193663199 seconds)
  (58/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 2.148819954 seconds)
  (59/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 2.146948372 seconds)
  (60/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.488696726 seconds)
  (61/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 2.23857082 seconds)
  (62/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 2.155101311 seconds)
  (63/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.488751307 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 2.208817533 seconds)
  (65/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 2.153104476 seconds)
  (66/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 2.152804128 seconds)
  (67/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 2.142865079 seconds)
  (68/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.163600569 seconds)
  (69/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.50516003 seconds)
  (70/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.707310239 seconds)
  (71/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 2.176793401 seconds)
  (72/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 2.161022728 seconds)
  (73/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 2.145559037 seconds)
  (74/152) benchmarking ("inner", "Float32", 4096)...
  done (took 2.145923873 seconds)
  (75/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 2.155544041 seconds)
  (76/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.664915781 seconds)
  (77/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 2.160179233 seconds)
  (78/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.732839359 seconds)
  (79/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 2.172023489 seconds)
  (80/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 2.158740425 seconds)
  (81/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 2.149835538 seconds)
  (82/152) benchmarking ("inner", "Int32", 4095)...
  done (took 2.146417094 seconds)
  (83/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 2.14460185 seconds)
  (84/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 2.161802711 seconds)
  (85/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.163893764 seconds)
  (86/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 2.143735885 seconds)
  (87/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 2.151184896 seconds)
  (88/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 2.150139921 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 2.157239032 seconds)
  (90/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.508718789 seconds)
  (91/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 2.192818215 seconds)
  (92/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.655674093 seconds)
  (93/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 2.147758942 seconds)
  (94/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.132242934 seconds)
  (95/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.163789898 seconds)
  (96/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.734738633 seconds)
  (97/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 2.173692853 seconds)
  (98/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.16269966 seconds)
  (99/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 2.146598948 seconds)
  (100/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.508898272 seconds)
  (101/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 2.187810373 seconds)
  (102/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.166123003 seconds)
  (103/152) benchmarking ("inner", "Float32", 4095)...
  done (took 2.146850256 seconds)
  (104/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 2.156765282 seconds)
  (105/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.259239778 seconds)
  (106/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.163809502 seconds)
  (107/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.164857103 seconds)
  (108/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 2.14451969 seconds)
  (109/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 2.16650382 seconds)
  (110/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 2.151291982 seconds)
  (111/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 2.146164197 seconds)
  (112/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 2.159922348 seconds)
  (113/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 2.164775061 seconds)
  (114/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 2.180772034 seconds)
  (115/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 2.162884307 seconds)
  (116/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 2.144047566 seconds)
  (117/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 2.154161727 seconds)
  (118/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 2.150844485 seconds)
  (119/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.164639866 seconds)
  (120/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 2.154699592 seconds)
  (121/152) benchmarking ("inner", "Float64", 4095)...
  done (took 2.153471965 seconds)
  (122/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 2.15769859 seconds)
  (123/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 2.146086575 seconds)
  (124/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 2.197883644 seconds)
  (125/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.165606675 seconds)
  (126/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 2.162616641 seconds)
  (127/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.261277918 seconds)
  (128/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 2.152244821 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.269695005 seconds)
  (130/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 2.160441561 seconds)
  (131/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 2.152787574 seconds)
  (132/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 2.145234206 seconds)
  (133/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.492191181 seconds)
  (134/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 2.194096509 seconds)
  (135/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 2.167836408 seconds)
  (136/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 2.153579048 seconds)
  (137/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 2.169181331 seconds)
  (138/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 2.168150535 seconds)
  (139/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 2.162950262 seconds)
  (140/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 2.14902541 seconds)
  (141/152) benchmarking ("inner", "Int64", 4095)...
  done (took 2.162056107 seconds)
  (142/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 2.149906846 seconds)
  (143/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 2.197835308 seconds)
  (144/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 2.148729892 seconds)
  (145/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 2.173603181 seconds)
  (146/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 2.199980342 seconds)
  (147/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 2.162145191 seconds)
  (148/152) benchmarking ("inner", "Float64", 4096)...
  done (took 2.154247864 seconds)
  (149/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.163930961 seconds)
  (150/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 2.183090385 seconds)
  (151/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 2.168944994 seconds)
  (152/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 2.152846072 seconds)
done (took 337.726967337 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.193235047 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 7.147060501 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.223604664 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 2.145682484 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.214030483 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.200427779 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 2.148138958 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 2.147217759 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 2.147804353 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.577584333 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 2.146280449 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 2.152991453 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 7.146345929 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 2.147899881 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.196926568 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 2.147150708 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 2.146952069 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.382125978 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 2.149879031 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.205106171 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 7.146482595 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 2.147829927 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 2.149222166 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.540637617 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 7.147241509 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 7.148699426 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.207772971 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 2.149371444 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.388823972 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 7.147872916 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 7.148921001 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.390820518 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.20833141 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 2.161712776 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 2.157109631 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 2.156683842 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.216634757 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 2.158541545 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.19651886 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.195095474 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.224694846 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 2.182614643 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 7.148231647 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 7.151575101 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 2.154127161 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 2.151955138 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 2.149112406 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 2.182709456 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 7.148251145 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 2.154783445 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.410866462 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 2.155614452 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 2.155319655 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 2.150208928 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 2.144281725 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 2.134437489 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 2.150474811 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 2.151826441 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.21048933 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 2.152731098 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.196273004 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.543718639 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.541626936 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 2.151248105 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 7.151419588 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 2.15058256 seconds)
  done (took 202.400400674 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.21815297 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.236979007 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.21871247 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 2.158201469 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 2.202370315 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.219610523 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 2.157953686 seconds)
  done (took 17.484332785 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 2.159081113 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.151997222 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 2.174919817 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.174750526 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 2.151646003 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.290394232 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 2.162365356 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 2.156964013 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 2.176943927 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 2.151638812 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.486611662 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 2.176311666 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 2.158814264 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 7.150909473 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 2.163731325 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 2.181635985 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 2.154579191 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.152200581 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.250811595 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.230189653 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 2.156869711 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 2.159010786 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 2.182058873 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 2.16470693 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 2.152741451 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.153472467 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 2.151808611 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 2.160441766 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 2.15261532 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 2.152366744 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.152112254 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 2.165005009 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 2.153485709 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 7.152564233 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 2.15356626 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 2.152415852 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 2.152191412 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 2.152813372 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 2.153023648 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 7.152477586 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 2.154123893 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 2.152982783 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 2.153061593 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 2.153778065 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 2.152928489 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 2.176325368 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 2.153967229 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 2.153320021 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 2.153141997 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 2.154278851 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 2.16965539 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 2.153655128 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 2.156093746 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 2.161726382 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 2.197587377 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 2.163900434 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 2.157678014 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 2.155083084 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.156405987 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 2.156658293 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.155943081 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.23746182 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 2.180603756 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 2.156794658 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.179744395 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.19468897 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.156944459 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 2.156591493 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 2.155859934 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 2.181394231 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 2.157447409 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.180169335 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 2.157019486 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.25412604 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 2.157667931 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.29911335 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 2.180940109 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 2.160870803 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 2.160933205 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 7.156582915 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 2.164586093 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 2.157159402 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 2.159464446 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 2.164242138 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 2.162135551 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.157661567 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 2.160012732 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 2.159628626 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 2.166854827 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 2.157742027 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 2.207447299 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 2.158050876 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 2.144868338 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.256023764 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 2.143100746 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.255117565 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 2.183184618 seconds)
  done (took 232.821776607 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 2.156856818 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 2.133794043 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 2.172327443 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 2.159244254 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 2.159274006 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 2.164004143 seconds)
  done (took 14.991988496 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 2.162397939 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 2.163175125 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 2.158194581 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 2.159452111 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 2.159030437 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 2.159411784 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 2.159190031 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.161750581 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 2.164089687 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 2.160019098 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 2.159834186 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 2.160841472 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 2.161041419 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 2.160275104 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 2.160454321 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 2.159306119 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 2.15974101 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 2.14694277 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 2.159109712 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.160366614 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.405317841 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 2.160849425 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.160426475 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 2.163546224 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 2.164984645 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 2.160141313 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 2.171062726 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 2.160707637 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 2.160018163 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 2.165599218 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 2.16527317 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 2.148060959 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 2.164582974 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 2.168029293 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 2.165540289 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 2.165068751 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.165075373 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 2.15003224 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 2.142843322 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 2.141583551 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 2.146171104 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.161161367 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 2.161406312 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 2.161594044 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 2.163276212 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 2.169513883 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 2.1665765 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 2.170863056 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 2.161332891 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 2.161671798 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 2.16277069 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 2.163517332 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 2.16408595 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 2.164574036 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 2.167222883 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.170143987 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 2.168023947 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 2.16219296 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 2.162339785 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 2.167618989 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 2.166563087 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 2.163144085 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.164861559 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 2.166010379 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 2.170098753 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 2.162331336 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 2.167402938 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.168192005 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.163071798 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 2.162874638 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 2.163551918 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 2.161945831 seconds)
  done (took 158.981414426 seconds)
done (took 628.748140262 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.218091272 seconds)
  done (took 9.301236208 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.303812812 seconds)
  done (took 9.482768164 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 10.827210425 seconds)
  done (took 12.913327809 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 7.177683267 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 7.215719526 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 7.181482161 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 7.165174597 seconds)
  done (took 30.834042125 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.421201069 seconds)
  done (took 9.505813012 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 7.17695395 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 7.16074723 seconds)
  done (took 16.487975085 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.168195859 seconds)
  done (took 9.252909952 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.655117707 seconds)
  done (took 9.763446881 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 7.167478513 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 7.179725949 seconds)
  done (took 16.45182132 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 7.165355742 seconds)
  done (took 9.250988566 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.937762013 seconds)
  done (took 10.107153287 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 7.167975684 seconds)
  done (took 9.270144644 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 7.165876732 seconds)
  done (took 9.251145908 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.26251331 seconds)
  done (took 10.346764564 seconds)
done (took 174.304487808 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 7.171540158 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 7.164200428 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 7.165890018 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 7.164624708 seconds)
  done (took 30.75083698 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 2.19862264 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 2.199887605 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 2.208862906 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 2.198867374 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 2.189637958 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 2.190119462 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 2.199581322 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 2.199140873 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 2.189940185 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 2.197777064 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 2.201161734 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 2.197768423 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 2.200105974 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 2.208554302 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 2.209590394 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 2.198078841 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 2.199772113 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 2.200551602 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 2.190386797 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 2.209456688 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 2.198693048 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 2.198820197 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 2.16641997 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 2.166053105 seconds)
  done (took 54.804170604 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.355611643 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.231513336 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.318850208 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.211051121 seconds)
  done (took 11.203023478 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 2.165650694 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 2.231168005 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 2.216985148 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 2.212620593 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.217097089 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.269250272 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 2.218541434 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.302533161 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.294695459 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.292331684 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 2.172764195 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 2.187627646 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 2.191266745 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 2.213232365 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.268567979 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 2.167381651 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 2.165977291 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.280218125 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 2.22790281 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.344443342 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 2.167032 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 2.222057526 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.218024538 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 2.219713877 seconds)
  done (took 55.553677688 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 2.168702101 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 2.175135629 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 2.174857974 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 2.168449696 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 2.168206912 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 2.168716409 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 2.175013534 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 2.17076211 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 2.190826287 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 2.156910121 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 2.167827139 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 2.169357475 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 2.174748427 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 2.168133697 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 2.169096825 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 2.182529613 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 2.183467435 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 2.169622049 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 2.172771091 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 2.176533273 seconds)
  done (took 45.539030224 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 7.168589503 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.014979128 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.515684102 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.419796122 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 7.168345254 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 7.168824045 seconds)
  done (took 33.546467181 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 2.181676992 seconds)
    (2/12) benchmarking ("push_single!", 256)...
    done (took 2.18795665 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 2.176449777 seconds)
    (4/12) benchmarking ("push_multiple!", 256)...
    done (took 2.195537572 seconds)
    (5/12) benchmarking ("push_single!", 2048)...
    done (took 2.219172185 seconds)
    (6/12) benchmarking ("push_single!", 8)...
    done (took 2.175709488 seconds)
    (7/12) benchmarking ("prerend!", 2048)...
    done (took 2.229909149 seconds)
    (8/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.336066246 seconds)
    (9/12) benchmarking ("push_multiple!", 8)...
    done (took 2.176597111 seconds)
    (10/12) benchmarking ("append!", 2048)...
    done (took 2.228013253 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 2.190790269 seconds)
    (12/12) benchmarking ("prerend!", 8)...
    done (took 2.17664668 seconds)
  done (took 28.563921251 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 7.167267354 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 7.170808649 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 7.169875142 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 2.180849623 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 2.179601947 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 2.179940006 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 2.176836394 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 7.168331484 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 2.182954753 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 2.189825511 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 2.180340612 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 2.181297858 seconds)
  done (took 48.217670722 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.383526404 seconds)
    (2/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.39656957 seconds)
    (3/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.38388122 seconds)
    (4/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.787386327 seconds)
    (5/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.496213304 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.150992172 seconds)
    (7/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.453893058 seconds)
    (8/608) benchmarking ("sumelt", "BitMatrix")...
    done (took 5.383150462 seconds)
    (9/608) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.913002678 seconds)
    (10/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.874445336 seconds)
    (11/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.473416662 seconds)
    (12/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.148821189 seconds)
    (13/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.118015366 seconds)
    (14/608) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 4.096995375 seconds)
    (15/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.089886473 seconds)
    (16/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.41203225 seconds)
    (17/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.171865497 seconds)
    (18/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.027273348 seconds)
    (19/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.438828081 seconds)
    (20/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 7.211531467 seconds)
    (21/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.173810549 seconds)
    (22/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 2.171440883 seconds)
    (23/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.173739477 seconds)
    (24/608) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.471694281 seconds)
    (25/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.497799199 seconds)
    (26/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.170883261 seconds)
    (27/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.382485506 seconds)
    (28/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.187062551 seconds)
    (29/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 7.170018073 seconds)
    (30/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.43552634 seconds)
    (31/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.779305193 seconds)
    (32/608) benchmarking ("sumvector_view", "Matrix{Int64}")...
    done (took 2.225872011 seconds)
    (33/608) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.374906478 seconds)
    (34/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.428252923 seconds)
    (35/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.523745797 seconds)
    (36/608) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 7.317169614 seconds)
    (37/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 7.176339317 seconds)
    (38/608) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.374153724 seconds)
    (39/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.218327911 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.206975909 seconds)
    (41/608) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.18100691 seconds)
    (42/608) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 2.183013687 seconds)
    (43/608) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.721140697 seconds)
    (44/608) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 2.183663273 seconds)
    (45/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.444196842 seconds)
    (46/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.173911351 seconds)
    (47/608) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 7.264582073 seconds)
    (48/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.177320193 seconds)
    (49/608) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.098906755 seconds)
    (50/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 4.463049364 seconds)
    (51/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.284858544 seconds)
    (52/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.172653645 seconds)
    (53/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.20729285 seconds)
    (54/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.605663671 seconds)
    (55/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.293412174 seconds)
    (56/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.416083003 seconds)
    (57/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.177345378 seconds)
    (58/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.38236315 seconds)
    (59/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.231898931 seconds)
    (60/608) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.397911311 seconds)
    (61/608) benchmarking ("sumlinear_view", "Matrix{Float64}")...
    done (took 7.370774256 seconds)
    (62/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.177364021 seconds)
    (63/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.385403604 seconds)
    (64/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.0986206 seconds)
    (65/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.54333386 seconds)
    (66/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.296498222 seconds)
    (67/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 2.1766231 seconds)
    (68/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.177731399 seconds)
    (69/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.87398705 seconds)
    (70/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.416510679 seconds)
    (71/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.260811861 seconds)
    (72/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.470453764 seconds)
    (73/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.93873079 seconds)
    (74/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 2.176246716 seconds)
    (75/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.178647389 seconds)
    (76/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 5.220974579 seconds)
    (77/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.269871301 seconds)
    (78/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 7.176958861 seconds)
    (79/608) benchmarking ("mapr_access", "Matrix{Int64}")...
    done (took 3.469958164 seconds)
    (80/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.172581285 seconds)
    (81/608) benchmarking ("sumcartesian", "Matrix{Float64}")...
    done (took 4.10365136 seconds)
    (82/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.27594757 seconds)
    (83/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.57127608 seconds)
    (84/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.182923475 seconds)
    (85/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 7.175841113 seconds)
    (86/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.184648083 seconds)
    (87/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 4.022774454 seconds)
    (88/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.102609962 seconds)
    (89/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.274861413 seconds)
    (90/608) benchmarking ("sumlogical_view", "Matrix{Int64}")...
    done (took 4.393153199 seconds)
    (91/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.499617171 seconds)
    (92/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 2.177564785 seconds)
    (93/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.178211003 seconds)
    (94/608) benchmarking ("sum", "3dsubarray")...
    done (took 2.199805777 seconds)
    (95/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.181514798 seconds)
    (96/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.124631246 seconds)
    (97/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.767950738 seconds)
    (98/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.245371936 seconds)
    (99/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.104805244 seconds)
    (100/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.743885025 seconds)
    (101/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.796748478 seconds)
    (102/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.145289289 seconds)
    (103/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.715998385 seconds)
    (104/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.222860499 seconds)
    (105/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.470196594 seconds)
    (106/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.322157392 seconds)
    (107/608) benchmarking ("sumcartesian", "Matrix{Int64}")...
    done (took 2.587510681 seconds)
    (108/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.387588783 seconds)
    (109/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.423815746 seconds)
    (110/608) benchmarking "5d"...
    done (took 3.711230096 seconds)
    (111/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.18217346 seconds)
    (112/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.794273214 seconds)
    (113/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.258788407 seconds)
    (114/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.254644131 seconds)
    (115/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.177417278 seconds)
    (116/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.739151299 seconds)
    (117/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.3981864 seconds)
    (118/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.444881372 seconds)
    (119/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.291762595 seconds)
    (120/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.177703069 seconds)
    (121/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.104760251 seconds)
    (122/608) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 2.190493561 seconds)
    (123/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.382245625 seconds)
    (124/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.809146691 seconds)
    (125/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.235060097 seconds)
    (126/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.178580446 seconds)
    (127/608) benchmarking ("sumrange_view", "Matrix{Float64}")...
    done (took 2.184968048 seconds)
    (128/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 7.178590915 seconds)
    (129/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.181575142 seconds)
    (130/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.342399494 seconds)
    (131/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.195616721 seconds)
    (132/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.477454706 seconds)
    (133/608) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 2.250149182 seconds)
    (134/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 2.180304033 seconds)
    (135/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.117489495 seconds)
    (136/608) benchmarking ("sumcolon_view", "Matrix{Float64}")...
    done (took 2.184998459 seconds)
    (137/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.462149249 seconds)
    (138/608) benchmarking ("sumrange", "Matrix{Float64}")...
    done (took 6.88549098 seconds)
    (139/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.240022362 seconds)
    (140/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.450169357 seconds)
    (141/608) benchmarking ("sumeach", "BitMatrix")...
    done (took 5.446028962 seconds)
    (142/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.893713808 seconds)
    (143/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.77981362 seconds)
    (144/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.226852813 seconds)
    (145/608) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.457219383 seconds)
    (146/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.250201515 seconds)
    (147/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.255844909 seconds)
    (148/608) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.749953034 seconds)
    (149/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.314616539 seconds)
    (150/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.277141999 seconds)
    (151/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.181737003 seconds)
    (152/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.305248119 seconds)
    (153/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 7.192735665 seconds)
    (154/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.183880535 seconds)
    (155/608) benchmarking ("sumcolon", "Matrix{Int64}")...
    done (took 6.616430541 seconds)
    (156/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.592816225 seconds)
    (157/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.609735485 seconds)
    (158/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.224154726 seconds)
    (159/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 7.182220758 seconds)
    (160/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.130903413 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.391568884 seconds)
    (162/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.423029149 seconds)
    (163/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.243381514 seconds)
    (164/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.204365782 seconds)
    (165/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.186031205 seconds)
    (166/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.264731288 seconds)
    (167/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.408198785 seconds)
    (168/608) benchmarking "ind2sub"...
    done (took 7.181450328 seconds)
    (169/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.108572737 seconds)
    (170/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.427677218 seconds)
    (171/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.425412111 seconds)
    (172/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.472806445 seconds)
    (173/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.593734991 seconds)
    (174/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.241150372 seconds)
    (175/608) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.255316941 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.193743213 seconds)
    (177/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.395199344 seconds)
    (178/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.263111705 seconds)
    (179/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.840423044 seconds)
    (180/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.730546955 seconds)
    (181/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.400470747 seconds)
    (182/608) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.777409497 seconds)
    (183/608) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.149299841 seconds)
    (184/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.827984371 seconds)
    (185/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.408418949 seconds)
    (186/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.562524764 seconds)
    (187/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.197851104 seconds)
    (188/608) benchmarking ("sumcartesian_view", "Matrix{Float64}")...
    done (took 2.635185739 seconds)
    (189/608) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.389388355 seconds)
    (190/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.893353873 seconds)
    (191/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.215293923 seconds)
    (192/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.712348348 seconds)
    (193/608) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 4.109563357 seconds)
    (194/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.18795786 seconds)
    (195/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.519203703 seconds)
    (196/608) benchmarking ("sumelt_boundscheck", "Matrix{Float64}")...
    done (took 4.140058416 seconds)
    (197/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 2.495777996 seconds)
    (198/608) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 7.239975283 seconds)
    (199/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.238434929 seconds)
    (200/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 2.185211721 seconds)
    (201/608) benchmarking ("sumelt", "1:100000")...
    done (took 2.185029131 seconds)
    (202/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.192298421 seconds)
    (203/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.102015468 seconds)
    (204/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.288435489 seconds)
    (205/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.253714473 seconds)
    (206/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.257351897 seconds)
    (207/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.112130357 seconds)
    (208/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 5.858762524 seconds)
    (209/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 2.223532997 seconds)
    (210/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 2.186369211 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 7.184688381 seconds)
    (212/608) benchmarking ("sumlogical", "Matrix{Float64}")...
    done (took 4.515297803 seconds)
    (213/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.041631948 seconds)
    (214/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.138549216 seconds)
    (215/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.18468715 seconds)
    (216/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.262156835 seconds)
    (217/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 4.930327533 seconds)
    (218/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.738285315 seconds)
    (219/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 2.188820568 seconds)
    (220/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.187520135 seconds)
    (221/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.796779884 seconds)
    (222/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.190638679 seconds)
    (223/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.097221043 seconds)
    (224/608) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 7.297808098 seconds)
    (225/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.946500005 seconds)
    (226/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.213160102 seconds)
    (227/608) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.410022115 seconds)
    (228/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.877233291 seconds)
    (229/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.485443668 seconds)
    (230/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.259800199 seconds)
    (231/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.26020455 seconds)
    (232/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 7.185636201 seconds)
    (233/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.192915935 seconds)
    (234/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.887243474 seconds)
    (235/608) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.195418647 seconds)
    (236/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.887080215 seconds)
    (237/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.469063089 seconds)
    (238/608) benchmarking ("sumlinear", "BitMatrix")...
    done (took 5.459391022 seconds)
    (239/608) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.628039002 seconds)
    (240/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.247827377 seconds)
    (241/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.396315178 seconds)
    (242/608) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 2.201147889 seconds)
    (243/608) benchmarking ("sumeach", "1:100000")...
    done (took 2.187771408 seconds)
    (244/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.712624457 seconds)
    (245/608) benchmarking ("sumvector", "1:100000")...
    done (took 2.211522417 seconds)
    (246/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.189581382 seconds)
    (247/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.390350109 seconds)
    (248/608) benchmarking ("sumlogical", "1:100000")...
    done (took 2.705753347 seconds)
    (249/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.485713548 seconds)
    (250/608) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.828601087 seconds)
    (251/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.272926733 seconds)
    (252/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 7.187094725 seconds)
    (253/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.461992254 seconds)
    (254/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.195449054 seconds)
    (255/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.80341541 seconds)
    (256/608) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 2.874171997 seconds)
    (257/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.190368541 seconds)
    (258/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 7.188171433 seconds)
    (259/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.439702822 seconds)
    (260/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.873403254 seconds)
    (261/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.189066065 seconds)
    (262/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.165612627 seconds)
    (263/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.195601701 seconds)
    (264/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.400758647 seconds)
    (265/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.391748562 seconds)
    (266/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.461178249 seconds)
    (267/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.496466356 seconds)
    (268/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.638797211 seconds)
    (269/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.115510649 seconds)
    (270/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.193513028 seconds)
    (271/608) benchmarking "4d"...
    done (took 3.229010816 seconds)
    (272/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.43210697 seconds)
    (273/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.18843128 seconds)
    (274/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.223608458 seconds)
    (275/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.637435068 seconds)
    (276/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.252793685 seconds)
    (277/608) benchmarking ("sumcartesian_view", "Matrix{Int64}")...
    done (took 2.618040725 seconds)
    (278/608) benchmarking ("sumvector", "Matrix{Float64}")...
    done (took 2.469799016 seconds)
    (279/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.548857079 seconds)
    (280/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.821696969 seconds)
    (281/608) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.466045902 seconds)
    (282/608) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 2.251680963 seconds)
    (283/608) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 2.200451276 seconds)
    (284/608) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 2.840709322 seconds)
    (285/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.316069021 seconds)
    (286/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.122650965 seconds)
    (287/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.306891404 seconds)
    (288/608) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 4.116259294 seconds)
    (289/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.938847255 seconds)
    (290/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.480146394 seconds)
    (291/608) benchmarking ("sumvector_view", "Matrix{Float64}")...
    done (took 2.207920156 seconds)
    (292/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.466360027 seconds)
    (293/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.172256106 seconds)
    (294/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.513375981 seconds)
    (295/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.484669274 seconds)
    (296/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.419450886 seconds)
    (297/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.233979021 seconds)
    (298/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.218742793 seconds)
    (299/608) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 7.190193668 seconds)
    (300/608) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.2271629 seconds)
    (301/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 7.190245164 seconds)
    (302/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.411631972 seconds)
    (303/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.30648658 seconds)
    (304/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.197730435 seconds)
    (305/608) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.760648208 seconds)
    (306/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.231228561 seconds)
    (307/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.236976059 seconds)
    (308/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.19505659 seconds)
    (309/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.716608815 seconds)
    (310/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.210297892 seconds)
    (311/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.194014823 seconds)
    (312/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.898176831 seconds)
    (313/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.21654724 seconds)
    (314/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.31017435 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.262190015 seconds)
    (316/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.943857565 seconds)
    (317/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.810731388 seconds)
    (318/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 7.218769686 seconds)
    (319/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.143206005 seconds)
    (320/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 7.020259293 seconds)
    (321/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.465449237 seconds)
    (322/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.245088148 seconds)
    (323/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.643031989 seconds)
    (324/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.230374223 seconds)
    (325/608) benchmarking ("sumlinear", "Matrix{Int64}")...
    done (took 2.59558954 seconds)
    (326/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 7.191261256 seconds)
    (327/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.40434354 seconds)
    (328/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.196135754 seconds)
    (329/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.789043768 seconds)
    (330/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.238869354 seconds)
    (331/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.461243359 seconds)
    (332/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.152234984 seconds)
    (333/608) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.405395467 seconds)
    (334/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.394338284 seconds)
    (335/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.219472181 seconds)
    (336/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.198715035 seconds)
    (337/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.118977402 seconds)
    (338/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.300446755 seconds)
    (339/608) benchmarking ("sumcolon", "1:100000")...
    done (took 3.071650035 seconds)
    (340/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.176710645 seconds)
    (341/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.195468243 seconds)
    (342/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.874620627 seconds)
    (343/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.598674471 seconds)
    (344/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.425240996 seconds)
    (345/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.633197901 seconds)
    (346/608) benchmarking "3d"...
    done (took 3.013948871 seconds)
    (347/608) benchmarking ("sum", "3darray")...
    done (took 2.195990072 seconds)
    (348/608) benchmarking ("sumlogical", "Matrix{Int64}")...
    done (took 4.558505232 seconds)
    (349/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.594248693 seconds)
    (350/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.84096335 seconds)
    (351/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.226755776 seconds)
    (352/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.194283395 seconds)
    (353/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.487274464 seconds)
    (354/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 2.318578343 seconds)
    (355/608) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.472232856 seconds)
    (356/608) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.485426 seconds)
    (357/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.202847633 seconds)
    (358/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 2.218910892 seconds)
    (359/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.407276698 seconds)
    (360/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.322142049 seconds)
    (361/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.112487371 seconds)
    (362/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.676376715 seconds)
    (363/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.779472888 seconds)
    (364/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.893632358 seconds)
    (365/608) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 2.205531972 seconds)
    (366/608) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.396349527 seconds)
    (367/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.491066881 seconds)
    (368/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.509572776 seconds)
    (369/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.230662743 seconds)
    (370/608) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.267315348 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Matrix{Int64}")...
    done (took 2.598372678 seconds)
    (372/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.469732319 seconds)
    (373/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.262110476 seconds)
    (374/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.120888885 seconds)
    (375/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.194504012 seconds)
    (376/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.590171588 seconds)
    (377/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.59136085 seconds)
    (378/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.292940478 seconds)
    (379/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.435628321 seconds)
    (380/608) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.506147595 seconds)
    (381/608) benchmarking ("sumrange", "Matrix{Int64}")...
    done (took 6.790882153 seconds)
    (382/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.870640073 seconds)
    (383/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.66509078 seconds)
    (384/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.603125157 seconds)
    (385/608) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.643115091 seconds)
    (386/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.599401281 seconds)
    (387/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.408843403 seconds)
    (388/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.565582814 seconds)
    (389/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.519847856 seconds)
    (390/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.080509177 seconds)
    (391/608) benchmarking ("sumelt", "Matrix{Int64}")...
    done (took 2.600565226 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.412239094 seconds)
    (393/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.286401817 seconds)
    (394/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.4897154 seconds)
    (395/608) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.067599712 seconds)
    (396/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.907675423 seconds)
    (397/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.44112352 seconds)
    (398/608) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 2.202643217 seconds)
    (399/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.126820577 seconds)
    (400/608) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.405439948 seconds)
    (401/608) benchmarking ("sumeach_view", "Matrix{Float64}")...
    done (took 7.180964403 seconds)
    (402/608) benchmarking ("sumcolon", "Matrix{Float64}")...
    done (took 6.635098086 seconds)
    (403/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.770217125 seconds)
    (404/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.445700902 seconds)
    (405/608) benchmarking ("sumlogical_view", "Matrix{Float64}")...
    done (took 4.425274349 seconds)
    (406/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.66473502 seconds)
    (407/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.736737057 seconds)
    (408/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.421886686 seconds)
    (409/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.222773172 seconds)
    (410/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 4.164949624 seconds)
    (411/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.221268711 seconds)
    (412/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.217774133 seconds)
    (413/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 7.197468403 seconds)
    (414/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.67840064 seconds)
    (415/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.488937869 seconds)
    (416/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.210230256 seconds)
    (417/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.136961098 seconds)
    (418/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.870475527 seconds)
    (419/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.12554009 seconds)
    (420/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.411199761 seconds)
    (421/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.420198364 seconds)
    (422/608) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 2.235666362 seconds)
    (423/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.753734711 seconds)
    (424/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.422842603 seconds)
    (425/608) benchmarking ("sumcolon_view", "Matrix{Int64}")...
    done (took 2.295810244 seconds)
    (426/608) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.497414658 seconds)
    (427/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.477046733 seconds)
    (428/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.235120982 seconds)
    (429/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.124540719 seconds)
    (430/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.905437431 seconds)
    (431/608) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 4.145348501 seconds)
    (432/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.266675524 seconds)
    (433/608) benchmarking ("sumeach", "Matrix{Int64}")...
    done (took 2.623706561 seconds)
    (434/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.214733802 seconds)
    (435/608) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 2.202097607 seconds)
    (436/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.401816966 seconds)
    (437/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.127271622 seconds)
    (438/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.245300614 seconds)
    (439/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.203871511 seconds)
    (440/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.397815032 seconds)
    (441/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.780426899 seconds)
    (442/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.477680786 seconds)
    (443/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.324327532 seconds)
    (444/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.444002881 seconds)
    (445/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.502085903 seconds)
    (446/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 5.090900376 seconds)
    (447/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.223138109 seconds)
    (448/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.472377126 seconds)
    (449/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.126648842 seconds)
    (450/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.847718082 seconds)
    (451/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.883431286 seconds)
    (452/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 2.234232532 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.244480136 seconds)
    (454/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.198956023 seconds)
    (455/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.202510519 seconds)
    (456/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.471560283 seconds)
    (457/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.502248588 seconds)
    (458/608) benchmarking ("sumeach_view", "Matrix{Int64}")...
    done (took 7.298173711 seconds)
    (459/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.931910535 seconds)
    (460/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.235192391 seconds)
    (461/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.224177841 seconds)
    (462/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.495020743 seconds)
    (463/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.287846929 seconds)
    (464/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.202264618 seconds)
    (465/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.206664722 seconds)
    (466/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.701046603 seconds)
    (467/608) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.437614356 seconds)
    (468/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 7.201256782 seconds)
    (469/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.173631683 seconds)
    (470/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.414329483 seconds)
    (471/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.274898493 seconds)
    (472/608) benchmarking "sub2ind"...
    done (took 7.397731166 seconds)
    (473/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.276822958 seconds)
    (474/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.715195469 seconds)
    (475/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.206573651 seconds)
    (476/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 5.069539027 seconds)
    (477/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.276630555 seconds)
    (478/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.14099764 seconds)
    (479/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.202482188 seconds)
    (480/608) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.957635421 seconds)
    (481/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.262546729 seconds)
    (482/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 7.202770319 seconds)
    (483/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.481573368 seconds)
    (484/608) benchmarking "6d"...
    done (took 3.858630528 seconds)
    (485/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.405233675 seconds)
    (486/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.598733377 seconds)
    (487/608) benchmarking ("sumrange", "1:100000")...
    done (took 3.075093694 seconds)
    (488/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.426133743 seconds)
    (489/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.246336497 seconds)
    (490/608) benchmarking ("sumrange_view", "Matrix{Int64}")...
    done (took 2.206227215 seconds)
    (491/608) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 7.198675261 seconds)
    (492/608) benchmarking ("sumvector", "Matrix{Int64}")...
    done (took 2.590536012 seconds)
    (493/608) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.504700423 seconds)
    (494/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 7.201808003 seconds)
    (495/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.486457568 seconds)
    (496/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.248884081 seconds)
    (497/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.208662702 seconds)
    (498/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 2.864904171 seconds)
    (499/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.172758977 seconds)
    (500/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 7.20291009 seconds)
    (501/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.956796359 seconds)
    (502/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 3.098400559 seconds)
    (503/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.935305746 seconds)
    (504/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.59890859 seconds)
    (505/608) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 7.217452794 seconds)
    (506/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.235193329 seconds)
    (507/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.206520456 seconds)
    (508/608) benchmarking ("sumelt", "Matrix{Float64}")...
    done (took 4.129209522 seconds)
    (509/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 7.203910354 seconds)
    (510/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 5.3774348 seconds)
    (511/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.211364412 seconds)
    (512/608) benchmarking ("sumlinear_view", "Matrix{Int64}")...
    done (took 7.213967462 seconds)
    (513/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.58766135 seconds)
    (514/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.484897693 seconds)
    (515/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.290837345 seconds)
    (516/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.209475534 seconds)
    (517/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 2.204696865 seconds)
    (518/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.211011981 seconds)
    (519/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.416415065 seconds)
    (520/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.719325808 seconds)
    (521/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.219937686 seconds)
    (522/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.904559855 seconds)
    (523/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.408309695 seconds)
    (524/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.213574389 seconds)
    (525/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.686449653 seconds)
    (526/608) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.64766855 seconds)
    (527/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.490664015 seconds)
    (528/608) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 2.247026333 seconds)
    (529/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.421736078 seconds)
    (530/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.449346724 seconds)
    (531/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.745706745 seconds)
    (532/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.430174019 seconds)
    (533/608) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.183866157 seconds)
    (534/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.431557682 seconds)
    (535/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.205929224 seconds)
    (536/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.47761694 seconds)
    (537/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.478470527 seconds)
    (538/608) benchmarking ("sumlinear", "1:100000")...
    done (took 2.205278481 seconds)
    (539/608) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 2.418125636 seconds)
    (540/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.827759704 seconds)
    (541/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.493474451 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.56423616 seconds)
    (543/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.517148393 seconds)
    (544/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.268118456 seconds)
    (545/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 5.428689022 seconds)
    (546/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 3.113673249 seconds)
    (547/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 7.206122269 seconds)
    (548/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.208643433 seconds)
    (549/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.484643617 seconds)
    (550/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.259713768 seconds)
    (551/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.205473083 seconds)
    (552/608) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.214569634 seconds)
    (553/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.765893481 seconds)
    (554/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.970513455 seconds)
    (555/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.67344545 seconds)
    (556/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.362790063 seconds)
    (557/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.502329494 seconds)
    (558/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.993030463 seconds)
    (559/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.961916356 seconds)
    (560/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 2.20817271 seconds)
    (561/608) benchmarking ("sumeach", "Matrix{Float64}")...
    done (took 4.133299161 seconds)
    (562/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 7.206374955 seconds)
    (563/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.232733975 seconds)
    (564/608) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 2.210433834 seconds)
    (565/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.133411545 seconds)
    (566/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.896658342 seconds)
    (567/608) benchmarking "2d"...
    done (took 2.930696695 seconds)
    (568/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.420268733 seconds)
    (569/608) benchmarking "7d"...
    done (took 2.51856538 seconds)
    (570/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.135280149 seconds)
    (571/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.410723096 seconds)
    (572/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.790610274 seconds)
    (573/608) benchmarking ("sumlinear", "Matrix{Float64}")...
    done (took 4.133655833 seconds)
    (574/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.175937302 seconds)
    (575/608) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 7.231245113 seconds)
    (576/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.451101849 seconds)
    (577/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.135235325 seconds)
    (578/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.209602155 seconds)
    (579/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.162029944 seconds)
    (580/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.461663464 seconds)
    (581/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.949993688 seconds)
    (582/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.480298293 seconds)
    (583/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 7.207321266 seconds)
    (584/608) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.153654305 seconds)
    (585/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.21292922 seconds)
    (586/608) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 7.208985109 seconds)
    (587/608) benchmarking ("mapr_access", "BitMatrix")...
    done (took 7.208011567 seconds)
    (588/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.292672698 seconds)
    (589/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 2.209551159 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.325151064 seconds)
    (591/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.48547836 seconds)
    (592/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.552773158 seconds)
    (593/608) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 2.311435018 seconds)
    (594/608) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.847594261 seconds)
    (595/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.974462645 seconds)
    (596/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.147156793 seconds)
    (597/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.252519812 seconds)
    (598/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.825798814 seconds)
    (599/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.778963144 seconds)
    (600/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.457600551 seconds)
    (601/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.338587484 seconds)
    (602/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.901191431 seconds)
    (603/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.154447426 seconds)
    (604/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.209119896 seconds)
    (605/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.225285706 seconds)
    (606/608) benchmarking ("mapr_access", "Matrix{Float64}")...
    done (took 3.449467571 seconds)
    (607/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.214155652 seconds)
    (608/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.212520421 seconds)
  done (took 2276.556307725 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 7.276631165 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 7.257743031 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 7.26986212 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.241405455 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.280430907 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.308342476 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.296519807 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 7.235972061 seconds)
  done (took 60.294714779 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hcat", 500)...
    done (took 7.209266624 seconds)
    (2/17) benchmarking "4467"...
    done (took 4.166278534 seconds)
    (3/17) benchmarking ("vcat_setind", 5)...
    done (took 2.218280247 seconds)
    (4/17) benchmarking ("catnd_setind", 500)...
    done (took 7.210001415 seconds)
    (5/17) benchmarking ("vcat", 500)...
    done (took 7.208795213 seconds)
    (6/17) benchmarking ("vcat", 5)...
    done (took 2.214333711 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.404974506 seconds)
    (8/17) benchmarking ("hvcat_setind", 5)...
    done (took 2.240607706 seconds)
    (9/17) benchmarking ("vcat_setind", 500)...
    done (took 7.21026428 seconds)
    (10/17) benchmarking ("hvcat", 5)...
    done (took 2.215373976 seconds)
    (11/17) benchmarking ("hcat_setind", 500)...
    done (took 7.205575266 seconds)
    (12/17) benchmarking ("hcat", 5)...
    done (took 2.216483435 seconds)
    (13/17) benchmarking ("hvcat", 500)...
    done (took 7.211030768 seconds)
    (14/17) benchmarking ("catnd", 500)...
    done (took 7.209824342 seconds)
    (15/17) benchmarking ("hcat_setind", 5)...
    done (took 2.215832385 seconds)
    (16/17) benchmarking ("catnd", 5)...
    done (took 2.510220256 seconds)
    (17/17) benchmarking ("hvcat_setind", 500)...
    done (took 7.233737314 seconds)
  done (took 82.273723738 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.266472571 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.037471419 seconds)
    (3/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 7.213431134 seconds)
    (4/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.898419876 seconds)
    (5/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.262603471 seconds)
    (6/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.557142167 seconds)
    (7/12) benchmarking ("gramschmidt!", 100)...
    done (took 7.218338776 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 7.213898284 seconds)
    (9/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.330159758 seconds)
    (10/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.509889508 seconds)
    (11/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.253544462 seconds)
    (12/12) benchmarking ("gramschmidt!", 250)...
    done (took 7.22731672 seconds)
  done (took 94.13105711 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 4)...
    done (took 2.212959821 seconds)
    (2/5) benchmarking ("setindex!", 3)...
    done (took 2.212742258 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 2.211810103 seconds)
    (4/5) benchmarking ("setindex!", 1)...
    done (took 2.212452605 seconds)
    (5/5) benchmarking ("setindex!", 2)...
    done (took 2.212102021 seconds)
  done (took 13.192776453 seconds)
done (took 2836.771725629 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 2.451368802 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 2.310243674 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 2.275067554 seconds)
  done (took 6.716126383 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.35576292 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.404612221 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.516317028 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.524469728 seconds)
  done (took 11.91171595 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.492011943 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.580260366 seconds)
  done (took 7.19177709 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 2.58322341 seconds)
  (6/15) benchmarking "18129"...
  done (took 7.224017808 seconds)
  (7/15) benchmarking "20517"...
  done (took 2.60171145 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 7.215015953 seconds)
    (2/3) benchmarking "Float64"...
    done (took 7.216970199 seconds)
    (3/3) benchmarking "Float16"...
    done (took 7.217398616 seconds)
  done (took 23.785882837 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 2.214248436 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 2.214306581 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 2.213837224 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 2.213758307 seconds)
  done (took 10.988012119 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 7.211997902 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.996769483 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 7.215769353 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.225359282 seconds)
  done (took 22.7815508 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 2.39801293 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 3.29977386 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 2.980289757 seconds)
  done (took 10.810434185 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.836635214 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.661543341 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.829439527 seconds)
  done (took 10.460407407 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 3.074654564 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.031377084 seconds)
  done (took 8.238261375 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.357802519 seconds)
  done (took 4.490130067 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 3.047073506 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.527945922 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.697425884 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.729564446 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.796925789 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.429241496 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.540745171 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.485221506 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.614223158 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.653246847 seconds)
  done (took 28.654227924 seconds)
done (took 163.020554156 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.665444744 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.245570692 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.431396133 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.593941785 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.456774784 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.42851574 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.516122657 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.581085793 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.266934027 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.253077329 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.593657609 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.451834566 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.464355979 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.228565139 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.471606716 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.229175839 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.452067654 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.688610226 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.276314624 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.515372879 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.530536717 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.237705825 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.433976716 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.25320217 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.434861687 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.378093247 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.843519625 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.232561323 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.425095052 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.856776868 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.358527245 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.661074918 seconds)
  done (took 180.590448124 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.217045403 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.217024452 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.217823466 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.217955253 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.479280311 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.218876859 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.217410874 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.216544921 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.433512217 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.421828582 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.218202283 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.464506666 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.219050699 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.218196158 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.219990116 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.218051015 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.539729384 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.218209142 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.218084343 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.218278742 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.219955826 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.341081632 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.218939497 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.355808386 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.526670625 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.218190365 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.219065822 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.219336528 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.219542883 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.218618217 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.219497166 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.219091688 seconds)
  done (took 218.942155864 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.219291031 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.219807122 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.21938119 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.220313807 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.219794387 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.219739213 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.223349048 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.219795847 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.911094224 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.899941892 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.220840694 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.220719722 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.222575227 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.220929413 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.218240098 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.220846963 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.21953854 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.221068095 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.220720383 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.220156373 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.221857574 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 7.002128922 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.221819131 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 7.017318815 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.221876997 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.224393342 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.221950649 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.221554717 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.220225654 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.220887174 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.223110634 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.221623093 seconds)
  done (took 232.15495207 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.461598628 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 2.221784857 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.223444412 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 3.231555731 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.222747148 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 2.22089272 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 3.21485948 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.469150765 seconds)
  done (took 22.40617206 seconds)
done (took 656.241153283 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.587982114 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.961233469 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.353730651 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.247398035 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.514728921 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.288798004 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.239902387 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.309549874 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.896380117 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.320283441 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.659415386 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.249818464 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.987126854 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.27087184 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.35735702 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.303628366 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.60642449 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.89737507 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.378703688 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.928717587 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.444619709 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.1964028 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.326838791 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.937543803 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.671864768 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.21741114 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.259059533 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.616714572 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.246999578 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.474630625 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.883498708 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.499479733 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.259299995 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.246950929 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.305737289 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.285926348 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.440693815 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.254413481 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.35405067 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.99023064 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.914686098 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.779441491 seconds)
  done (took 115.106177065 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 2.232085192 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 2.229187869 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 2.229967759 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 2.230206155 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 2.237728742 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 2.229900371 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 2.229768849 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 2.230341365 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 2.23038358 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 2.229979749 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 2.229621007 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 2.238590534 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 2.230508133 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.238344613 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 2.230529344 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 2.230865007 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 2.230543799 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.239310366 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 2.230818239 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 2.23070714 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 2.230332725 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 2.21674025 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 2.226877317 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 2.231429879 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 2.231410293 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 2.231392 seconds)
  done (took 60.158503374 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 2.227228705 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.405962423 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.517623901 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.259732934 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 2.226423298 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.231289051 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.257125326 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.234214664 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.230061684 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.229291821 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.3220561 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.231297177 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.239287878 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.513760398 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.25649801 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 2.227191903 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 2.227515009 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 2.227262172 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.413619747 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.243581858 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.258367785 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.235096136 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.257906996 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.244023604 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 2.229128325 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.228583609 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.231774489 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.63728028 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.241152903 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.32511453 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.272335839 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.262525631 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.567939803 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.526867656 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.296791236 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.236462759 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 2.22858658 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.370101167 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.242307413 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 2.229699534 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.258077941 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.23794941 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.520003389 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.740971829 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.245069858 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 2.229010235 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.632353255 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.38031829 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.277861985 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.242324914 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.525468307 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.26073722 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 2.229111233 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 2.230408989 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.267505037 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.242306 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 2.229720729 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.470678041 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.246824839 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.259366835 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.238272746 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.231254776 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.421779887 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.240112033 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.410357402 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.240519813 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.236039792 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 2.232059176 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.52311827 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.261103308 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.739236538 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.245021893 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 2.22993864 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.328248232 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.414802223 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.659295382 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.247075099 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.421905542 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.588149931 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.269376647 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.242719464 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.621325059 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.271988456 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.241362364 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 2.230607432 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.230236877 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.231548045 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.272227101 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.258186595 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.653046297 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.742243564 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.490614036 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.272616698 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.245585457 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 2.232289057 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.47186319 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.242508935 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.231004217 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.514158163 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.76660624 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.247979209 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.238816463 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.718239581 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.248604965 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.262402909 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.244168595 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.531443063 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.263744121 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.26883271 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.224233896 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.238290383 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.235428116 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.262443106 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.243059675 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.233277332 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.710730221 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.386864047 seconds)
  done (took 274.915934325 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 7.238025055 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.232819706 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 7.233173066 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 7.232497569 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 7.231740216 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.233126251 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 7.231855229 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 7.231473398 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.233748192 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 7.231272486 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 7.231538738 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 7.235278325 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 7.233320793 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.238298932 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.272488452 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.234719903 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.72437244 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.231632169 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.234296974 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.234627169 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.807676396 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.238154048 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.233260714 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.235779137 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.233535647 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.23234349 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.241650142 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.268690351 seconds)
  done (took 177.84847861 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.234819246 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.254590144 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.241815368 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.282335592 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.246343249 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.235376301 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.255523512 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.251048326 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.241202837 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.233583748 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.235103606 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.263081602 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.243826773 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.309280198 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.262711028 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.265595585 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.313407958 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.24165725 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.235833434 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.236106251 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.282516048 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.250426375 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.263691848 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.292004418 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.250694329 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.283241871 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.251719525 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.236410344 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.236374612 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.325842416 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.256897715 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.264560592 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.271295033 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.255622388 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.330386429 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.328048382 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.31667273 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.264527959 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.240335688 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.237117583 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.237501716 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.238651558 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.286118292 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.250771293 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.238173177 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.327657053 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.257044075 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.238121348 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.244298987 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.238923003 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.249624548 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.253942241 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.270758298 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.337322363 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.284234481 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.263765272 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.259757007 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.2565028 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.238786289 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.310478715 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.245315342 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.327552283 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.259794452 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.239098259 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.240477846 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.242115899 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.286767168 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.275623139 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.315434528 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.245615962 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.311478086 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.293314292 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.252326402 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.238760064 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.239488177 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.287661997 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.326835601 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.29363191 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.300272366 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.276835534 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.251089858 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.239916897 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.240102511 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.269447769 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.247361581 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.329064824 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.333057124 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.245386793 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.239982883 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.240036353 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.240020459 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.262376962 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.299548977 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.282943159 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.322055993 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.246972532 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.276335556 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.248271805 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.252788785 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.245250435 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.272718388 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.247806075 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.252222968 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.574044753 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.275964697 seconds)
  done (took 240.392775549 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.619036137 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.291084831 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.312347155 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.516531853 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.629784886 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.404465641 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.280001107 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.299512422 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.303111345 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.412279351 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.351533605 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.332670101 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.278046006 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.263197231 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.290981253 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.30119563 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.324403162 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.595463736 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.386103109 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 4.072751418 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.279070876 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.536629679 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.572344648 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.625379073 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.328342658 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.667459704 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.92956148 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.377425224 seconds)
  done (took 72.743407085 seconds)
done (took 943.305853232 seconds)
SAVING RESULT...
DONE!
