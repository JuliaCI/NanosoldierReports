cset: moving following pidspec: 21394
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.85536284 seconds)
loading group "shootout"... done (took 1.194397392 seconds)
loading group "string"... done (took 0.676271982 seconds)
loading group "linalg"... done (took 8.697910596 seconds)
loading group "parallel"... done (took 0.166741477 seconds)
loading group "find"... done (took 3.073841859 seconds)
loading group "tuple"... done (took 2.155834454 seconds)
loading group "union"... done (took 15.009612739 seconds)
loading group "dates"... done (took 1.460241561 seconds)
loading group "micro"... done (took 0.220896739 seconds)
loading group "simd"... done (took 4.82129074 seconds)
loading group "io"... done (took 1.093390344 seconds)
loading group "random"... done (took 9.621820227 seconds)
loading group "problem"... done (took 1.540679009 seconds)
loading group "array"... done (took 25.500325995 seconds)
loading group "misc"... done (took 1.805030208 seconds)
loading group "scalar"... done (took 44.205453199 seconds)
loading group "sort"... done (took 3.35240213 seconds)
loading group "sparse"... done (took 12.90220479 seconds)
loading group "collection"... done (took 18.973115767 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.425058046 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.11658615 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.128998156 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.115293528 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.18827509 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.121024364 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.130272421 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084627342 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.881115129 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.134564404 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.115679389 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.429006671 seconds)
done (took 5.317743518 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 0.165975342 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.089854442 seconds)
    (2/2) benchmarking "String"...
    done (took 0.084302881 seconds)
  done (took 1.392408611 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.070240491 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.06338351 seconds)
    (3/3) benchmarking "different"...
    done (took 0.067534095 seconds)
  done (took 1.419178905 seconds)
  (4/7) benchmarking "replace"...
  done (took 0.06538981 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.133630097 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066422372 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067080693 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067481579 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065760669 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.06627464 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066181144 seconds)
  done (took 1.754681943 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.070924996 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067451414 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.06527783 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067602065 seconds)
  done (took 1.490167982 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.064150455 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.12229563 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.064594787 seconds)
    (4/4) benchmarking "different"...
    done (took 0.064324559 seconds)
  done (took 1.53320925 seconds)
done (took 9.059602685 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.141002075 seconds)
    (2/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.822031272 seconds)
    (3/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.778836506 seconds)
    (4/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.124703406 seconds)
    (5/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.24877631 seconds)
    (6/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.368804993 seconds)
    (7/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.122948621 seconds)
    (8/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.185260459 seconds)
    (9/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090441022 seconds)
    (10/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.075237657 seconds)
    (11/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.123101012 seconds)
    (12/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.078535239 seconds)
    (13/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.38956429 seconds)
    (14/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.509201917 seconds)
    (15/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.071616926 seconds)
    (16/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.173606851 seconds)
    (17/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.647924105 seconds)
    (18/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085547944 seconds)
    (19/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.136681367 seconds)
    (20/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.444611148 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.07186078 seconds)
    (22/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.087381739 seconds)
    (23/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.086507152 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.070136721 seconds)
    (25/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.333141887 seconds)
    (26/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.154022655 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.666085947 seconds)
    (28/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.093209544 seconds)
    (29/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.068426272 seconds)
    (30/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.094324224 seconds)
    (31/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.071393787 seconds)
    (32/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.078650773 seconds)
  done (took 10.748099788 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.091525896 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.09139045 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068946856 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.124712544 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.095560521 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.07074176 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.075607024 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067939447 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.089817742 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.125373481 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.091876947 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.09973479 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.066934744 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068916004 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.074572731 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.198303877 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.079632656 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.082219434 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.06802192 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.081653168 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.107042241 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.079457243 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.079046052 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.078625176 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.133952505 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.170388854 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.098811608 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.099021743 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066655209 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079775826 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115472011 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.126764353 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067764172 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065392695 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.120961258 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095750055 seconds)
  done (took 4.673119112 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.891570634 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.096483709 seconds)
    (2/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.083723665 seconds)
    (3/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.074683096 seconds)
    (4/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.107731039 seconds)
    (5/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.114238612 seconds)
    (6/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.123184866 seconds)
    (7/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.123848367 seconds)
    (8/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.10121275 seconds)
    (9/118) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.115427497 seconds)
    (10/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.07440924 seconds)
    (11/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.154747844 seconds)
    (12/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.671200563 seconds)
    (13/118) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 2.163088704 seconds)
    (14/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.070930776 seconds)
    (15/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.122008111 seconds)
    (16/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.3613183 seconds)
    (17/118) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.066112256 seconds)
    (18/118) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.071809385 seconds)
    (19/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.068967977 seconds)
    (20/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.068905512 seconds)
    (21/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.071305514 seconds)
    (22/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.070499851 seconds)
    (23/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.114174201 seconds)
    (24/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.069310687 seconds)
    (25/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.177826774 seconds)
    (26/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.581267181 seconds)
    (27/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.070184109 seconds)
    (28/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.069560757 seconds)
    (29/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.096306507 seconds)
    (30/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065224513 seconds)
    (31/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.142249993 seconds)
    (32/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.093625526 seconds)
    (33/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.06986514 seconds)
    (34/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.542581834 seconds)
    (35/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065671372 seconds)
    (36/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.063925957 seconds)
    (37/118) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.177640235 seconds)
    (38/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.089441349 seconds)
    (39/118) benchmarking ("3-arg mul!", 2)...
    done (took 0.095474136 seconds)
    (40/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.067105902 seconds)
    (41/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.068114128 seconds)
    (42/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.079459518 seconds)
    (43/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.066995116 seconds)
    (44/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.109466225 seconds)
    (45/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.081085275 seconds)
    (46/118) benchmarking ("5-arg mul!", 3)...
    done (took 0.518969269 seconds)
    (47/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.070332589 seconds)
    (48/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.586461759 seconds)
    (49/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.228133027 seconds)
    (50/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.073775821 seconds)
    (51/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.072608297 seconds)
    (52/118) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.101644751 seconds)
    (53/118) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064677206 seconds)
    (54/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.063957319 seconds)
    (55/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.068084751 seconds)
    (56/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.926372561 seconds)
    (57/118) benchmarking ("5-arg mul!", 2)...
    done (took 0.145037396 seconds)
    (58/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.06715236 seconds)
    (59/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.274400832 seconds)
    (60/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.068666145 seconds)
    (61/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.06840165 seconds)
    (62/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.071888929 seconds)
    (63/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.100065482 seconds)
    (64/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.067083371 seconds)
    (65/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.068586542 seconds)
    (66/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.072658246 seconds)
    (67/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.096781229 seconds)
    (68/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 0.830296803 seconds)
    (69/118) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.088731804 seconds)
    (70/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.096428975 seconds)
    (71/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.067483581 seconds)
    (72/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.405437007 seconds)
    (73/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.074576896 seconds)
    (74/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.069699315 seconds)
    (75/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.069744857 seconds)
    (76/118) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.069178513 seconds)
    (77/118) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.107529167 seconds)
    (78/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.066840244 seconds)
    (79/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066286932 seconds)
    (80/118) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.112445815 seconds)
    (81/118) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.096587501 seconds)
    (82/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.089972505 seconds)
    (83/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.069970282 seconds)
    (84/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.067701775 seconds)
    (85/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.066109311 seconds)
    (86/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.321269431 seconds)
    (87/118) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.171929988 seconds)
    (88/118) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.065132473 seconds)
    (89/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.0669219 seconds)
    (90/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.478848976 seconds)
    (91/118) benchmarking ("3-arg mul!", 3)...
    done (took 0.063411098 seconds)
    (92/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.066048334 seconds)
    (93/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.067753151 seconds)
    (94/118) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 0.214397721 seconds)
    (95/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.068734111 seconds)
    (96/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064294448 seconds)
    (97/118) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065325977 seconds)
    (98/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.099596896 seconds)
    (99/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.071831587 seconds)
    (100/118) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.333989697 seconds)
    (101/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.067729083 seconds)
    (102/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.488982575 seconds)
    (103/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.069728474 seconds)
    (104/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.104864711 seconds)
    (105/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.122492803 seconds)
    (106/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.068023677 seconds)
    (107/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.103058027 seconds)
    (108/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.069363886 seconds)
    (109/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065538499 seconds)
    (110/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.0740525 seconds)
    (111/118) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066035266 seconds)
    (112/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.06475955 seconds)
    (113/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.069604424 seconds)
    (114/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066170515 seconds)
    (115/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.06673145 seconds)
    (116/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.069676441 seconds)
    (117/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.068464461 seconds)
    (118/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.067773798 seconds)
  done (took 22.892222722 seconds)
done (took 40.428053558 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 512)...
    done (took 0.316500665 seconds)
    (2/5) benchmarking ("identity", 4096)...
    done (took 0.07934947 seconds)
    (3/5) benchmarking ("identity", 2)...
    done (took 0.079727666 seconds)
    (4/5) benchmarking ("identity", 1024)...
    done (took 0.079727471 seconds)
    (5/5) benchmarking ("identity", 64)...
    done (took 0.080060622 seconds)
  done (took 1.905993845 seconds)
done (took 3.273812109 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 0.254362821 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.075952826 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 0.064192896 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.2066887 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 0.089641904 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 0.177978158 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 0.222044864 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 0.169272649 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 0.090120249 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 0.089694866 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 0.089229169 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 0.224253999 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 0.226231187 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 0.090082518 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.160470878 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 0.231630305 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 0.090053129 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 0.064016427 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 0.089475501 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 0.08936857 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 0.08940046 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.064200176 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 0.089162516 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 0.090047196 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.159699376 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 0.089477521 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 0.063833207 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.159355953 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 0.088356546 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.1597992 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 0.088419747 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 0.087512212 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 0.088030835 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.159299313 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 0.088531657 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.157827483 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.063491341 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 0.088504961 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 0.088037407 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 0.088214744 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 0.087212538 seconds)
  done (took 6.249449398 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.073803291 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.202743459 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.085109345 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.062139726 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.071956802 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.082703501 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.061795644 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.082006719 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.091998688 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.082527754 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.082455937 seconds)
  done (took 2.334881832 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.068774987 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.083221541 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.084680794 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.061709248 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.072857461 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.083317276 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.061539832 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.083034303 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.086109119 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.083738451 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.083898422 seconds)
  done (took 2.15969926 seconds)
done (took 12.034912152 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 0.095606936 seconds)
    (2/2) benchmarking "11899"...
    done (took 0.065219265 seconds)
  done (took 1.448211763 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.22628021 seconds)
    (2/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.497750969 seconds)
    (3/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 4.964503444 seconds)
    (4/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.093148292 seconds)
    (5/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.072565455 seconds)
    (6/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.085890733 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.197780202 seconds)
    (8/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.067287244 seconds)
  done (took 7.684030265 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.102784838 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.068031601 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.069167247 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069605785 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.067464389 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.06760367 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068892282 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069327191 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.069733648 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069463625 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.067618665 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.068460032 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.067691837 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.067456134 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.067856243 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.06872408 seconds)
  done (took 2.536042608 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("minimum", (8,))...
    done (took 0.10416996 seconds)
    (2/24) benchmarking ("sumabs", (4,))...
    done (took 0.069385007 seconds)
    (3/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.09958241 seconds)
    (4/24) benchmarking ("minimum", (2,))...
    done (took 0.061845801 seconds)
    (5/24) benchmarking ("sum", (8,))...
    done (took 0.072012329 seconds)
    (6/24) benchmarking ("sumabs", (2,))...
    done (took 0.062430213 seconds)
    (7/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.070929742 seconds)
    (8/24) benchmarking ("minimum", (4, 4))...
    done (took 0.072901646 seconds)
    (9/24) benchmarking ("sumabs", (8,))...
    done (took 0.07052897 seconds)
    (10/24) benchmarking ("sum", (2, 2))...
    done (took 0.071233974 seconds)
    (11/24) benchmarking ("minimum", (2, 2))...
    done (took 0.072376847 seconds)
    (12/24) benchmarking ("sum", (4,))...
    done (took 0.071142924 seconds)
    (13/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071661853 seconds)
    (14/24) benchmarking ("sumabs", (16,))...
    done (took 0.071730863 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073465943 seconds)
    (16/24) benchmarking ("sum", (4, 4))...
    done (took 0.073461065 seconds)
    (17/24) benchmarking ("sum", (8, 8))...
    done (took 0.073430764 seconds)
    (18/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.070836373 seconds)
    (19/24) benchmarking ("minimum", (8, 8))...
    done (took 0.07345874 seconds)
    (20/24) benchmarking ("sum", (16, 16))...
    done (took 0.074095043 seconds)
    (21/24) benchmarking ("minimum", (4,))...
    done (took 0.072506144 seconds)
    (22/24) benchmarking ("sum", (16,))...
    done (took 0.07318388 seconds)
    (23/24) benchmarking ("minimum", (16, 16))...
    done (took 0.073554542 seconds)
    (24/24) benchmarking ("sum", (2,))...
    done (took 0.071261846 seconds)
  done (took 3.194338652 seconds)
done (took 16.167567002 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.174600989 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.0749933 seconds)
  done (took 1.549663774 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.066775515 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.068619562 seconds)
  done (took 1.455382956 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.072171064 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.06021946 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.078693262 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.070472194 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.06163694 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.061060713 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.077354763 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.061414727 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.061120736 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.061422584 seconds)
  done (took 1.983005143 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.062038585 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.068410129 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.066771951 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.064803757 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.067170033 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.062391223 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.065033338 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.062547161 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.069265764 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.061713317 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.065914439 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.083206733 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.06537145 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084303583 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.065450226 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.066010969 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.067692264 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.065136521 seconds)
  done (took 2.533365156 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.059501875 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.061532124 seconds)
  done (took 1.443930017 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.063075343 seconds)
    (2/7) benchmarking "second"...
    done (took 0.061335356 seconds)
    (3/7) benchmarking "month"...
    done (took 0.064129201 seconds)
    (4/7) benchmarking "year"...
    done (took 0.064036059 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.061563789 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.061271038 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.062007366 seconds)
  done (took 1.752830551 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.427243029 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.124645584 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.350419857 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.069346232 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.077506763 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.260375389 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.063524442 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069100868 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069282938 seconds)
  done (took 2.872729882 seconds)
done (took 14.92340781 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080757758 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.182681251 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.08839756 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.383198059 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.092329654 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067052688 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113363415 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.179473804 seconds)
done (took 2.525393562 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.27633187 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.233811393 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.409286932 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.126616548 seconds)
  done (took 3.096052235 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.33122451 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.079018014 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.077166575 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067067686 seconds)
  done (took 1.892303248 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.063515233 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071248719 seconds)
  done (took 1.463886084 seconds)
done (took 8.066887492 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069809401 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.061230582 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.06741285 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.063798987 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.063585305 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063066898 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.064188717 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.061525592 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 0.064305647 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.092113838 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.063836139 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064238084 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063729002 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063829474 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064042264 seconds)
    (16/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063298964 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063530239 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.061710168 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063648641 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.062812734 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064038607 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06419694 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.062991525 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.06383382 seconds)
  done (took 2.918417169 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.077637438 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065572544 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.066415046 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.066610767 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.067327369 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.066474086 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.06681188 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065462285 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.066553677 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.065355209 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067297677 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.067479744 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.06504684 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.067757455 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06535956 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.06737059 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.067222368 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065987757 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065157077 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.067556923 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.066973873 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066001965 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.06718383 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066901352 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.067471464 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067356003 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.065452385 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065932494 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06665864 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.067039915 seconds)
  done (took 3.354277298 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.064685443 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.059512595 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.060121057 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.069617166 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.059670605 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.059994181 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.060367962 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.059442515 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.060095169 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.061490828 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.060710705 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.060195713 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.060982968 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.060096194 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.059953245 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.060637932 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.065172626 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080091802 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.060561849 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.060140964 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.064342675 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.060029941 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.060030075 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.060122497 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.06061686 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.060246913 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.059741576 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.060642048 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.060389866 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.060938298 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.060518606 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.064510003 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.065456091 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.06045354 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070809431 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.065176771 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.060017173 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.064469344 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.061097279 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.059712638 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.05997368 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.059806283 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.060231622 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.060392616 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.07059591 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.060527409 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.061306676 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.060657618 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.060715923 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.059972781 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.060498244 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.062436986 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068975893 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.062028777 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.06024417 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.061933693 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.059968349 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.061185869 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.060075614 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.060317755 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.060087169 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.064171475 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.062029171 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.060916261 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.080485835 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.061689603 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070704048 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.060267298 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.061064818 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.064136971 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.060884529 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.078820629 seconds)
  done (took 5.840230374 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.069498868 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072792538 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079743752 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.070669338 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064368114 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06129842 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.0648688 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061023901 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070506098 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.065176298 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061039905 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064522679 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070800127 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.065662303 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062150965 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.070570117 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.065376917 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064385858 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.06106199 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.065247451 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062355439 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.064942456 seconds)
  done (took 2.814830432 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.137985932 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066121918 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.106468041 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.070662795 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06924864 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.070468571 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.066856185 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066526544 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066963098 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067731035 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067029473 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066730272 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068964124 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067229614 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067148709 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067165285 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066437555 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066683002 seconds)
  done (took 2.671735305 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.075844751 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065519843 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.090523219 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065539423 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065567641 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065337792 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069650155 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.070530439 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.065388185 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.06634868 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.069963569 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065548801 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.065613601 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06609796 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065908112 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066254755 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.06567613 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066540443 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070148569 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069959588 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070162491 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070719118 seconds)
  done (took 2.864799914 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077779798 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06464086 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.080988004 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066417837 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.060201965 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.060160528 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.066081948 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065395013 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.066242164 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.065034337 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065705773 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.060601018 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.067097706 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065533571 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.067619847 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0655746 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.065228123 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065500113 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065175455 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061169094 seconds)
  done (took 2.673930194 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070324489 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063067198 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063299799 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068784722 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063114555 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.063103604 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068681156 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.063612401 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.063398636 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08569105 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063815057 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074647699 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069012619 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.067071942 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.063645434 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069491576 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068844886 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069182064 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.063233835 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063638623 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.085744186 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.063726293 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069501248 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063821847 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063891553 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.063798726 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063670562 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.067157047 seconds)
  done (took 3.238642772 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.063321101 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.062934153 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063965784 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063571445 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063281045 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063190999 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063481953 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063428483 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.062836013 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063224927 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.063019331 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.063221161 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066365437 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.063427332 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.063235948 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.063083996 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063309158 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063630209 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063558228 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06415408 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.063792364 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063214669 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.063414022 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063779921 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063751167 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.063059482 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063449392 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064249079 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063154631 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06328336 seconds)
  done (took 3.264293107 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.071573924 seconds)
    (2/2) benchmarking "in"...
    done (took 0.071464884 seconds)
  done (took 1.499542573 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.060363318 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077993816 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.059498405 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.07212063 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068569128 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.063921845 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.068994638 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070632135 seconds)
  done (took 1.893592924 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.065226277 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.090145246 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.06196101 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.062351317 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.06510312 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.12849533 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.075055723 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.073954902 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.076144798 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064563324 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.062737854 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.074674002 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.061944682 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.076164398 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.0640665 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.071328712 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069263458 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.079747504 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.075120952 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.060232355 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.074233313 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.062832848 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.060697635 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.062944724 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.06265776 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069097934 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.077790166 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.074541088 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070567796 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059798789 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.081246442 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.060779024 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.062505272 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070503936 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.06518327 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.060677636 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.098870026 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.061947551 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.06681254 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.06101388 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.073872826 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.083061242 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.076369448 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.079767612 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.063178144 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.063319138 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060842116 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.063010247 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064847053 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.070295736 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.06062615 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068379919 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.059764665 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.062389796 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.072246156 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.062037218 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.06689702 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070943784 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07604537 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.072655666 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.070764315 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.077800156 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.071136471 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.069509041 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.062624729 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081659399 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.063154109 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.074835499 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.076253619 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.062230944 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074442967 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.06010164 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059416883 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.060247174 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094712107 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.061972247 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.062295528 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.060887672 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.060618531 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.062304442 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071097485 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.066167902 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068268457 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.064156126 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077452583 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069939007 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.060863232 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.067492592 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.079506972 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064102818 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.060401888 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.077518252 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064172739 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.059870673 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078930622 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.070989394 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.062351349 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.061221233 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064176911 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.074468169 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.061978594 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.058984188 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069099907 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.06263013 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.063094701 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.065389035 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068803996 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.06023849 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.070702911 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.065006202 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.0621069 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.058864497 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064642597 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.060965582 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.058726142 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069536382 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.059842109 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.074217217 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066547675 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.074677438 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.075194014 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.070308095 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076046804 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.059703372 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.05845863 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.078005899 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069272852 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.060789805 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.07747234 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.059192556 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.073154229 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.059230791 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.061014935 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.211612819 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061348599 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.064478088 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.06192622 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.067383069 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.063733978 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.063678173 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067353278 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.070126767 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073505611 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.062025668 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069842177 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.061025211 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.076853735 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.07096316 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065820201 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.064709086 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.061491551 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.07326962 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067815885 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070256911 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.060102851 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.061184062 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.060775303 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071859901 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.070675411 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.062473537 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.068160728 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.064967289 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.061620664 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.06137265 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.061834253 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064720249 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064721028 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.061758089 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069085674 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069684191 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.074947875 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068255068 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.07042385 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.059918751 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.059818088 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.062076015 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.059848948 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.064737367 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070031948 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.076229355 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072563441 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.082094007 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.060744173 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.07064974 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.062120368 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.077550067 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073940575 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.061693737 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.065538607 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.059620039 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.061937881 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.07040129 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072626816 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.074664571 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.075910491 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065595283 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065151555 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.060182627 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.076296117 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.06068725 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069575536 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.06992598 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.065391301 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.060735583 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.062219433 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070325979 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065009041 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.060716459 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.076668906 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.066667262 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060069562 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.075383523 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.060973364 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.071630624 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060142266 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063879922 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065731403 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.0625876 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070575561 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076423805 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059315733 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.061553448 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076423583 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.062807961 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.06235179 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.069044979 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.076274076 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065358184 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069187965 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071887981 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070794799 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.065231046 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070549512 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.061615767 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.070287883 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.063329015 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072343158 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.060820834 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.079155378 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.059625438 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.076333353 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.061209796 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.071904027 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.061221269 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070074048 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.061487392 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.077824411 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.062361672 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.061320011 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.072384231 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.058943336 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070200126 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.06005519 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065669943 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.066776895 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.06936399 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.061364678 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069555765 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.061295257 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.06899675 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.064361663 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.068440358 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.069420813 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.064467236 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.059515161 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068514614 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070795376 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068116525 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.061069977 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.061168234 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.060158955 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.215493715 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.064092507 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.063950546 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070890411 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066927219 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067624277 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.063083553 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.063326802 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.063050553 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070093402 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070357476 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.079555691 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069502264 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068554855 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.071008568 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.060327025 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077044466 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.060729116 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.07139887 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.059432232 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.066804042 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.07016425 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.060858456 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.080606348 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.062349692 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068877509 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073494849 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069577667 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.06470196 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079160759 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.063824024 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.069979846 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069148214 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065159165 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067916008 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.062602826 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069432962 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.070990043 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072292728 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.062139722 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068541334 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070577282 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.062497379 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.068668816 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.06234724 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.069258822 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.062154611 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060023026 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065289521 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.07241916 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065515106 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065855997 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.061074152 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.059522475 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.06091629 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.067988232 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065383341 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069279963 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.077099881 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.059886033 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.061739855 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.06014015 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064493486 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.079256281 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.070864559 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.068660412 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065202094 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.059711753 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.062825701 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.062776345 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.0611024 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.064453463 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059866298 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.059995749 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071669327 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.062646533 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064999336 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060937883 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.061701553 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.070499892 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.065355582 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.061542519 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.067620136 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.060514386 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066490851 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.060124584 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.062180266 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.065442752 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.060456569 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064486572 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.071759013 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.077913282 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067515417 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069835719 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.062177078 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068753345 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076338446 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.068058546 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062120105 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.070927333 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.05995974 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.079612149 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.0707015 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069346615 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070560773 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.061307162 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.078075277 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065206305 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.07077253 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.07616375 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.061299443 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.066930769 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.059982722 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.076256451 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065512481 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.060111641 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.06890264 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068526872 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066522565 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072409209 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.060734799 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.068517877 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065183747 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.063675232 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.061390095 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.061534073 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068829391 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076864071 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.060844797 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.064120395 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068218464 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.06872171 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.06418305 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072085194 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068383771 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.060735664 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.061420087 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.063583825 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.210403933 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074778388 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062727655 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066638717 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066153193 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.06098688 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068007268 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078208901 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070808075 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07136311 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.06041002 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.060002549 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.079220893 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064578929 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.064401273 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069158752 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070900991 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073350525 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070200447 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.078108498 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.061134152 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066789767 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073389915 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.061541435 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.060706085 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064350274 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.061815933 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.069470872 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.070832323 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068461746 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.062837377 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067658485 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.074859134 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.062155961 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065542004 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.06546129 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.061776331 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.071482374 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069557784 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.072804381 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.06205623 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.060313217 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.06454095 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069760579 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068803906 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069704183 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.061446752 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.067303696 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.074845806 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068223329 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.063873065 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.05975507 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.063722111 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070260132 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.064981935 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060542902 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065567644 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064206236 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.068037722 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070540609 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065330582 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060276826 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.077947644 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.06894264 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.070165528 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.062232944 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.062387841 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061144382 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060113318 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.07193577 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060180657 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.062360808 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.065832785 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.062296709 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.078898388 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.06921692 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.076770941 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.061816878 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065128262 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.060510765 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070716459 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.06562791 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.061112567 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.072050156 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.059826255 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.076495508 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.072540812 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.066065909 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.060073453 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065759229 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.068925324 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.075750289 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070508801 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.069615028 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.063996919 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.071370123 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.062715215 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.071911169 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.060132068 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.059581465 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070983392 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069633777 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.073737085 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.060504312 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.071275174 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.06290676 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.06901052 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.068873705 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.062490637 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.062382933 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.062580799 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070149331 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065421335 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070206906 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065222771 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.07730375 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.061574246 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071993246 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069908872 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.071646061 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07423646 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073338637 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.068769285 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.061127136 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067892621 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.068231219 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.060809877 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065133461 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.063216273 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.081587477 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.061014674 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.060969423 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.073879251 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.065471466 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.059675321 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.065627243 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.212111154 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.072644224 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.062788684 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.07239176 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.065870951 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.062278114 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065534102 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065410353 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.059828637 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.059851417 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.06047388 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.070824937 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.065386756 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.060748611 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.080291041 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.062501543 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069995733 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072357213 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.06728742 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.062191377 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.05938192 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.061379043 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.073763791 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.076434674 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063882947 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069415932 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.062436619 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070205506 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.059322961 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069537948 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068834756 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070030909 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.060686187 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061212081 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.075699793 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.076833081 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065510981 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070665119 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070752925 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.062338147 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.083006238 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.069612217 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.062090268 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.071639606 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063101117 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.059778169 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.059465007 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.062016389 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.072584127 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.060520893 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.063200915 seconds)
  done (took 41.989018335 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.097252029 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.061517517 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.059862712 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.060318396 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068555933 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061674033 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.060437879 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.061483656 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.061269075 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.062976695 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.060488865 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063590472 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.066884072 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.073463658 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069138987 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06413755 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060320341 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.061232603 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.060408565 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061267322 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.066499614 seconds)
  done (took 2.833169165 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.064765827 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.064409075 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.064378058 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.064619703 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064076844 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.060490987 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.064564318 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060410864 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.0651198 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060655441 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.064919884 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060406836 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.061139116 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.061209357 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061050188 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062252361 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.065012803 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064215354 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.060138957 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06459325 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06205253 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.064410339 seconds)
  done (took 2.835828544 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.062577446 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.061141761 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.069595143 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.059661789 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.059581873 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.063522436 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.059968966 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.064633944 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.064238398 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.064332829 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.069469558 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.060762157 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.059441334 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.065975849 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.059930482 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.060608693 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.103711709 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.061096907 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.061029166 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.059983926 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.063022219 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.069223231 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.059960582 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.059900877 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064142277 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.063556359 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.05975947 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.062533882 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.060734618 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064397768 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.061515402 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.060362076 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069514468 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068888192 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064753599 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064471228 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.06230685 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.061025713 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060646959 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.059841494 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068646498 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.061408056 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.060610741 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.061512424 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069474955 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.059854701 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.059802671 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.070052204 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.059714726 seconds)
  done (took 4.578318913 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.069352041 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.113216603 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.066267713 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.09397914 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.073369183 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.06634885 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.065900116 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.094971776 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.061319572 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.062483685 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.074234298 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.07422987 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.063292884 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.064367407 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.065985089 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.062978206 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.063625184 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.062248797 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.065939362 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06251699 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.066011028 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.067176616 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.073251105 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.07389687 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.064154718 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.062099732 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.062568192 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.06438719 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.073008414 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.06639091 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.064525414 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.065051821 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.073934365 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.06629348 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.062651952 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.062753644 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.074451292 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.063371599 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.062830179 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.061294671 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.062707299 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.064215019 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.067429833 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.074704379 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.063022368 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.067960943 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.063324334 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.061158904 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.074297758 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.063155082 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.067018796 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.07446186 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.064455983 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.06332768 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.064515898 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.074098171 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.063367229 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.062017286 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.063575966 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.073689091 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.061896395 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.064163536 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077521422 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.062713112 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.066489705 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.074661802 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.068512945 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.064591779 seconds)
  done (took 6.226720919 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07053284 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.095862131 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076696119 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07606192 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071348992 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.071458878 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071416097 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.070956581 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071000935 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.074301053 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070927651 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.106571502 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067330946 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.072725567 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071158212 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071226778 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.071066302 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07131747 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071403569 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070770814 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.071704822 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.076454953 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.070847905 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.076647978 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.073341608 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067390885 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.07090481 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071542287 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076402692 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.070771674 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.07349933 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.071086545 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.070947506 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.076222402 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.07338857 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.070729435 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06159577 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070565688 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.070793577 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.070800824 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067139231 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076569297 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071126305 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067198569 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070904563 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070773631 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.076502019 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.0740113 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.072835215 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074664939 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071179797 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.077728497 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071432476 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071348876 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.0770745 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.079136011 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076792139 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076908829 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071514491 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.076525184 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076524011 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.079082852 seconds)
  done (took 6.048811635 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072312148 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066634915 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.079892747 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.059984128 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.059990011 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069924306 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06010438 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.060508554 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067354123 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.06758838 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069376774 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069957505 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071747415 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06868572 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06992688 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072252908 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06986095 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069666442 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067164976 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070011551 seconds)
  done (took 2.84411089 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.073760011 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.079839387 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066203143 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.0694801 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.065803586 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.069646419 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.065050028 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066134093 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06664365 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065962473 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071309186 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070966605 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067045539 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069602399 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.070679783 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069899089 seconds)
  done (took 2.578327437 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.063634441 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.068602181 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.066943028 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.061821601 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.06378208 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.060748175 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.061400889 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.059639329 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.063219126 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.074780531 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.061164794 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.064050499 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.061389314 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.06026559 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.06073222 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.06395058 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063037354 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.061388182 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.061481325 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.065870856 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.069943918 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.062071849 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.064041538 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.06130784 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.063626578 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070225355 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.062684502 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.064200011 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.061358329 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.064058249 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.063502631 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.06832634 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063847744 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.062228092 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.060611919 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.06147713 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.06183456 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.064270876 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.064181952 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.061755181 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.060056956 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066813403 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.061567536 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.061878882 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.063181449 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.064107627 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063204243 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067048123 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.061865197 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.063777139 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.061720477 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.063111751 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.061685964 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.069069053 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.063762353 seconds)
  done (took 4.968786836 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076593054 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.065699729 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.060331054 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.059944449 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.065236332 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066153302 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.065891398 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.065944169 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066242691 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.060179264 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065999081 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.065458404 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066478918 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06562428 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066167719 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06549289 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.059694483 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.065741193 seconds)
  done (took 2.658158348 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.065076776 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064565438 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.064837379 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.062326391 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.06204876 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066986836 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.060431551 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.062275623 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061652109 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.062548375 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061873077 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.061625015 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061349718 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.061670602 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.066180977 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06184063 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.061651468 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.060627657 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.062475382 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06012681 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066968717 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.060447714 seconds)
  done (took 2.85593165 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.086492015 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.08342604 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.128048416 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079587161 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.088615148 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071891403 seconds)
  done (took 2.015096927 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091745666 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097749147 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064989464 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.064934067 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07011389 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068860632 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068285671 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068618904 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071738022 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072130102 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068623132 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072383322 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071700196 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074218696 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07057687 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070444742 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068631252 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068848098 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065403314 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076468876 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068844563 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07238479 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068734331 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068460708 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068743225 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074485953 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072349724 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072812457 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06883608 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072347443 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070686522 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068825656 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072831053 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072659493 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.065266561 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072175645 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068830798 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076775071 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070390767 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074187265 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065418157 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070717593 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072449802 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072076829 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07216032 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068931733 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072118921 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069105912 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068964875 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078415184 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071360174 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074232173 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070938342 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072789801 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072598137 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078566762 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073197122 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074411773 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070498585 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072961409 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074400396 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070963649 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074155956 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073216017 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070740094 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074410576 seconds)
  done (took 6.237017872 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10489107 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065793999 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068553372 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072747832 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074238136 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069555527 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069003018 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068951281 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068938607 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066608964 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104625045 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069288778 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074795313 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077475765 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069180903 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069231605 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068842472 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074284543 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066265617 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078090027 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068613951 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074051715 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074239616 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07428821 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073141803 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070620138 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069057739 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068700571 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068890169 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069068914 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072412488 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068790136 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074264582 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065811047 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074103599 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069061512 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069072758 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072300595 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068805012 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070634315 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074634992 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07691373 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068916475 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068988838 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07300839 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068874559 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068922423 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065679879 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068883475 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066133524 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073066617 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073292459 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073140703 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074663947 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0696335 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069199738 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069133963 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069500525 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06927367 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07109252 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074850859 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06886244 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078437595 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068941066 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069391944 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074840186 seconds)
  done (took 6.254749684 seconds)
done (took 129.291549123 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.219811339 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.187881165 seconds)
  done (took 1.876112302 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.074995702 seconds)
    (2/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.167207577 seconds)
    (3/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.072624974 seconds)
    (4/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.074186016 seconds)
    (5/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.108346618 seconds)
    (6/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.105142339 seconds)
    (7/16) benchmarking ("transpose", (600, 600))...
    done (took 0.073708983 seconds)
    (8/16) benchmarking ("transpose", (600, 400))...
    done (took 0.071206194 seconds)
    (9/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.074467031 seconds)
    (10/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071884743 seconds)
    (11/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.138966942 seconds)
    (12/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.074271482 seconds)
    (13/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.071893526 seconds)
    (14/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.071891105 seconds)
    (15/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071982943 seconds)
    (16/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.071864982 seconds)
  done (took 2.888098134 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.106973978 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.186573456 seconds)
    (3/18) benchmarking ("IJV", 10)...
    done (took 0.102980369 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069550811 seconds)
    (5/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.152534773 seconds)
    (6/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.076582877 seconds)
    (7/18) benchmarking ("IJV", 100)...
    done (took 0.071737713 seconds)
    (8/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.076920916 seconds)
    (9/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.077084241 seconds)
    (10/18) benchmarking ("IV", 1000)...
    done (took 0.069869152 seconds)
    (11/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.107170853 seconds)
    (12/18) benchmarking ("Diagonal", 10)...
    done (took 0.083345075 seconds)
    (13/18) benchmarking ("Diagonal", 100)...
    done (took 0.075701644 seconds)
    (14/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.076584965 seconds)
    (15/18) benchmarking ("IJV", 1000)...
    done (took 0.071736703 seconds)
    (16/18) benchmarking ("Diagonal", 1000)...
    done (took 0.07514117 seconds)
    (17/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.076205586 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.076218242 seconds)
  done (took 3.133091301 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101680858 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.092751527 seconds)
  done (took 1.689080903 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.155384135 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.102934198 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.142627707 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.34427723 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.138690049 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.14021467 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.143372087 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.139252111 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.111591211 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.131086637 seconds)
  done (took 3.035286884 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.106347184 seconds)
    (2/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.105585415 seconds)
    (3/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.309480181 seconds)
    (4/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.103117894 seconds)
    (5/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.082266371 seconds)
    (6/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.077470197 seconds)
    (7/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.074907919 seconds)
    (8/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079736541 seconds)
    (9/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.075087524 seconds)
    (10/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.075813281 seconds)
    (11/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.122715505 seconds)
    (12/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.07513856 seconds)
    (13/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.071862488 seconds)
    (14/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.124439898 seconds)
    (15/54) benchmarking ("spmat", "array", 100)...
    done (took 0.099289354 seconds)
    (16/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.106439127 seconds)
    (17/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.070649901 seconds)
    (18/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077811717 seconds)
    (19/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.079126666 seconds)
    (20/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.070130694 seconds)
    (21/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.075847921 seconds)
    (22/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079806757 seconds)
    (23/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.178930825 seconds)
    (24/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.078265313 seconds)
    (25/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.100400053 seconds)
    (26/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.074794734 seconds)
    (27/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077449727 seconds)
    (28/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.073791525 seconds)
    (29/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.073850436 seconds)
    (30/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.078154486 seconds)
    (31/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.078821576 seconds)
    (32/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.099889987 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.078090454 seconds)
    (34/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.082036917 seconds)
    (35/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.077016577 seconds)
    (36/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.097248822 seconds)
    (37/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.071444451 seconds)
    (38/54) benchmarking ("spmat", "array", 10)...
    done (took 0.099312207 seconds)
    (39/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073971277 seconds)
    (40/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.07167036 seconds)
    (41/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.074832051 seconds)
    (42/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.078797829 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072017037 seconds)
    (44/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.078143175 seconds)
    (45/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074821385 seconds)
    (46/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.077067472 seconds)
    (47/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.079897328 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.070376493 seconds)
    (49/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074874065 seconds)
    (50/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074347326 seconds)
    (51/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.072109299 seconds)
    (52/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076326467 seconds)
    (53/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075978452 seconds)
    (54/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.076907346 seconds)
  done (took 6.271674686 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.106498706 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.106561209 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069861546 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.113398107 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10556293 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069776755 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.104342516 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.100812665 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.109227499 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069677944 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068810441 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.068691545 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07642411 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.080535718 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.113908386 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.106038708 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069938007 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068241816 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.10644308 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.107739324 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068469851 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102048093 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.100268886 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107636383 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.068078857 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069733256 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068128915 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.068605907 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.074069145 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.075094699 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.06849824 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.07638567 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083951607 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.073389756 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067074979 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068127966 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067855924 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.075935006 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07658905 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.076506492 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.074910837 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067860496 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067968414 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068784864 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068853075 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067489129 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.074602149 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.07599328 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.074864315 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06857286 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.068699768 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067963345 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068854913 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.075457323 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.074422294 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.076605597 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.076353759 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068025771 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068440839 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069865184 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076976551 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.077393361 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.076418926 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069363896 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.076912059 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067945697 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078677316 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082816876 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068461602 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.06905184 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068526907 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068297261 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068980922 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.074434045 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.074924942 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069587152 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068648281 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068268824 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.077136209 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.074858715 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068519272 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.074152298 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067757384 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068185303 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068954131 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069301819 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.07410934 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.075765694 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069653288 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068290248 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068624381 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068384783 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067343737 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.074276546 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.075397 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.075975537 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.074779951 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068563031 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.075406409 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.074785339 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068960472 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.074495035 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067986571 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067710581 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067860074 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.073632666 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.073105361 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.075228927 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067571453 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.066917304 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.073182793 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.075914481 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.06747986 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.072977539 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07559064 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.214824701 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069805958 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079499315 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070116679 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.07899886 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06973191 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078168893 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069302203 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.075013302 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068868276 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.06763573 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068325534 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.075213454 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069207385 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069036898 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069068264 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068579691 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.075391097 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.078512818 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067762854 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.075428521 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.07509429 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.068999606 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.074810466 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068527972 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.075877669 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068972966 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068826123 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06779138 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077689872 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068787032 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068557216 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068214722 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.077376225 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068680599 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.076926201 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.074660805 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068042346 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081476959 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.077095675 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.074760525 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.077618175 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069407826 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068499401 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068230961 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070961731 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.073836191 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.075569706 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069062479 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068360672 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.073789328 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.077748897 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.068323595 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.074951206 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.0747704 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.074919122 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069068599 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068295814 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.078182755 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078242469 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.075213981 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.074854831 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.076001187 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068692588 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.07451722 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.075217799 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068708118 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08106872 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068784337 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.079668956 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.075459525 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.074407625 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.075480164 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.076447358 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.077918517 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.077965655 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.080578131 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068298176 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06813697 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.074608575 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068405901 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068575793 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.074522265 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068933061 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068839371 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.080914769 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066837982 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.076936577 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068328399 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.076370835 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067859653 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068793126 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080138777 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069633118 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068976369 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.074166254 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.0682652 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.077395895 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077896376 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.074177569 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067989275 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06831166 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.075018018 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.075598067 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068274702 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067448744 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068126579 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.073536065 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.073092091 seconds)
  done (took 18.329052252 seconds)
done (took 38.735879748 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.171331256 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.115924522 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.211389731 seconds)
    (4/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.195950169 seconds)
  done (took 2.292779847 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 0.098185208 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 0.064742026 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 0.08099982 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 0.089967993 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 0.064671153 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 0.075964894 seconds)
  done (took 2.015235379 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.198165075 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.174363106 seconds)
    (3/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.249029159 seconds)
  done (took 2.157558824 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((10000000,), 2)...
    done (took 0.370418894 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.150008721 seconds)
    (3/4) benchmarking ((1000, 1000), 1)...
    done (took 0.216891506 seconds)
    (4/4) benchmarking ((1000, 1000), 2)...
    done (took 0.504532314 seconds)
  done (took 2.884502575 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 0.109617486 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.101029632 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 0.077482182 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.111598126 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 0.08534145 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 0.062020266 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.134758446 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 0.069258186 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 0.099707713 seconds)
  done (took 2.450040623 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.139814596 seconds)
done (took 13.501891063 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.121574505 seconds)
    (2/341) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.287919285 seconds)
    (3/341) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.103538321 seconds)
    (4/341) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.076646747 seconds)
    (5/341) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.079161507 seconds)
    (6/341) benchmarking ("collect", "filter", Bool, true)...
    done (took 0.44872181 seconds)
    (7/341) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.0920451 seconds)
    (8/341) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.091675546 seconds)
    (9/341) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.23877614 seconds)
    (10/341) benchmarking ("perf_sum", Int8, false)...
    done (took 0.079473497 seconds)
    (11/341) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.20731074 seconds)
    (12/341) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.076723789 seconds)
    (13/341) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.074309932 seconds)
    (14/341) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.223855637 seconds)
    (15/341) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.077569178 seconds)
    (16/341) benchmarking ("collect", "filter", ComplexF64, true)...
    done (took 0.201560918 seconds)
    (17/341) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.100681066 seconds)
    (18/341) benchmarking ("collect", "all", Float64, true)...
    done (took 0.143025792 seconds)
    (19/341) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.221757241 seconds)
    (20/341) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.188197339 seconds)
    (21/341) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.189473736 seconds)
    (22/341) benchmarking ("perf_sum", Bool, true)...
    done (took 0.075738371 seconds)
    (23/341) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.216527352 seconds)
    (24/341) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.073787692 seconds)
    (25/341) benchmarking ("collect", "all", Float64, false)...
    done (took 0.068681669 seconds)
    (26/341) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069237124 seconds)
    (27/341) benchmarking ("sort", BigInt, false)...
    done (took 0.263920611 seconds)
    (28/341) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.233723262 seconds)
    (29/341) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.077134913 seconds)
    (30/341) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.171487292 seconds)
    (31/341) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.076477605 seconds)
    (32/341) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.076947203 seconds)
    (33/341) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.114201871 seconds)
    (34/341) benchmarking ("collect", "all", Int8, false)...
    done (took 0.172493424 seconds)
    (35/341) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.077884903 seconds)
    (36/341) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.165044727 seconds)
    (37/341) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.064678302 seconds)
    (38/341) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.073303703 seconds)
    (39/341) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.067055732 seconds)
    (40/341) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.163426992 seconds)
    (41/341) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.190140055 seconds)
    (42/341) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.217100474 seconds)
    (43/341) benchmarking ("collect", "all", Int64, false)...
    done (took 0.14234883 seconds)
    (44/341) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.076884767 seconds)
    (45/341) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.072278899 seconds)
    (46/341) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.072326471 seconds)
    (47/341) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.090738944 seconds)
    (48/341) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.082502908 seconds)
    (49/341) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.066275776 seconds)
    (50/341) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.134632341 seconds)
    (51/341) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.234030543 seconds)
    (52/341) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.067224733 seconds)
    (53/341) benchmarking ("map", identity, BigInt, true)...
    done (took 0.14431899 seconds)
    (54/341) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.087783047 seconds)
    (55/341) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.15606757 seconds)
    (56/341) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.072542886 seconds)
    (57/341) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.156294579 seconds)
    (58/341) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.065537938 seconds)
    (59/341) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.08783032 seconds)
    (60/341) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.085882675 seconds)
    (61/341) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068462054 seconds)
    (62/341) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.076688349 seconds)
    (63/341) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.073773262 seconds)
    (64/341) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.249186184 seconds)
    (65/341) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.143470534 seconds)
    (66/341) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.153405663 seconds)
    (67/341) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.065004484 seconds)
    (68/341) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.218272651 seconds)
    (69/341) benchmarking ("perf_countequals", "Int8")...
    done (took 0.074258113 seconds)
    (70/341) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.090209954 seconds)
    (71/341) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.173275101 seconds)
    (72/341) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.085013642 seconds)
    (73/341) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.087128899 seconds)
    (74/341) benchmarking ("map", abs, Float32, false)...
    done (took 0.143663984 seconds)
    (75/341) benchmarking ("map", identity, Float32, true)...
    done (took 0.140302944 seconds)
    (76/341) benchmarking ("collect", "filter", Bool, false)...
    done (took 0.066057888 seconds)
    (77/341) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.064259167 seconds)
    (78/341) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.064160532 seconds)
    (79/341) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.08430573 seconds)
    (80/341) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.162165294 seconds)
    (81/341) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.232255897 seconds)
    (82/341) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.076126416 seconds)
    (83/341) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.075453364 seconds)
    (84/341) benchmarking ("collect", "all", ComplexF64, true)...
    done (took 0.087836401 seconds)
    (85/341) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.201194612 seconds)
    (86/341) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.066775337 seconds)
    (87/341) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.184144416 seconds)
    (88/341) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.066336182 seconds)
    (89/341) benchmarking ("sort", Float64, false)...
    done (took 0.139587454 seconds)
    (90/341) benchmarking ("collect", "filter", Int8, true)...
    done (took 0.157188799 seconds)
    (91/341) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.141420402 seconds)
    (92/341) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.074546983 seconds)
    (93/341) benchmarking ("collect", "all", BigInt, true)...
    done (took 0.085106958 seconds)
    (94/341) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.192164912 seconds)
    (95/341) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.088887475 seconds)
    (96/341) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.174364776 seconds)
    (97/341) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.066316308 seconds)
    (98/341) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.072964923 seconds)
    (99/341) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.224382428 seconds)
    (100/341) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.06592932 seconds)
    (101/341) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.065817854 seconds)
    (102/341) benchmarking ("sort", Float32, false)...
    done (took 0.137699702 seconds)
    (103/341) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.065015213 seconds)
    (104/341) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.064715258 seconds)
    (105/341) benchmarking ("map", abs, Float64, false)...
    done (took 0.144417833 seconds)
    (106/341) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.152227281 seconds)
    (107/341) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.123675895 seconds)
    (108/341) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072987051 seconds)
    (109/341) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.064745559 seconds)
    (110/341) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.198278086 seconds)
    (111/341) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069017284 seconds)
    (112/341) benchmarking ("map", identity, Bool, false)...
    done (took 0.142987003 seconds)
    (113/341) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.091655576 seconds)
    (114/341) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.201969479 seconds)
    (115/341) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.066043183 seconds)
    (116/341) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.076524216 seconds)
    (117/341) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073453405 seconds)
    (118/341) benchmarking ("collect", "filter", BigInt, true)...
    done (took 0.15374003 seconds)
    (119/341) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.163261555 seconds)
    (120/341) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.209622144 seconds)
    (121/341) benchmarking ("collect", "all", BigFloat, false)...
    done (took 0.084622158 seconds)
    (122/341) benchmarking ("perf_countequals", "Float32")...
    done (took 0.075104487 seconds)
    (123/341) benchmarking ("collect", "all", Int64, true)...
    done (took 0.069097063 seconds)
    (124/341) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.249287214 seconds)
    (125/341) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.072812191 seconds)
    (126/341) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.067855315 seconds)
    (127/341) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.088443366 seconds)
    (128/341) benchmarking ("collect", "filter", Float64, true)...
    done (took 0.19592503 seconds)
    (129/341) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.150313008 seconds)
    (130/341) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.064502176 seconds)
    (131/341) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.077846014 seconds)
    (132/341) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.065422074 seconds)
    (133/341) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.064736833 seconds)
    (134/341) benchmarking ("map", identity, Float32, false)...
    done (took 0.065274053 seconds)
    (135/341) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.072062051 seconds)
    (136/341) benchmarking ("perf_sum", Int64, false)...
    done (took 0.074263655 seconds)
    (137/341) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.06642644 seconds)
    (138/341) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.065769885 seconds)
    (139/341) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.090359132 seconds)
    (140/341) benchmarking ("collect", "all", ComplexF64, false)...
    done (took 0.069010089 seconds)
    (141/341) benchmarking ("collect", "all", BigFloat, true)...
    done (took 0.069456404 seconds)
    (142/341) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.237001825 seconds)
    (143/341) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.141634939 seconds)
    (144/341) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.07349117 seconds)
    (145/341) benchmarking ("collect", "filter", Int8, false)...
    done (took 0.067530481 seconds)
    (146/341) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.090205673 seconds)
    (147/341) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.065577233 seconds)
    (148/341) benchmarking ("map", identity, Int64, true)...
    done (took 0.082218516 seconds)
    (149/341) benchmarking ("perf_countequals", "Int64")...
    done (took 0.075002284 seconds)
    (150/341) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.081305998 seconds)
    (151/341) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.182019395 seconds)
    (152/341) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.222303408 seconds)
    (153/341) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074800496 seconds)
    (154/341) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.075795406 seconds)
    (155/341) benchmarking ("sort", Bool, false)...
    done (took 0.144000059 seconds)
    (156/341) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.152720468 seconds)
    (157/341) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.084063368 seconds)
    (158/341) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.236932596 seconds)
    (159/341) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065183634 seconds)
    (160/341) benchmarking ("collect", "all", Float32, true)...
    done (took 0.08307534 seconds)
    (161/341) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.065544332 seconds)
    (162/341) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.164524797 seconds)
    (163/341) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.081044497 seconds)
    (164/341) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.147210828 seconds)
    (165/341) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072369486 seconds)
    (166/341) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.075003271 seconds)
    (167/341) benchmarking ("sort", Int64, false)...
    done (took 0.066253756 seconds)
    (168/341) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.064649713 seconds)
    (169/341) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.073098421 seconds)
    (170/341) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072619987 seconds)
    (171/341) benchmarking ("sort", Int8, false)...
    done (took 0.152411599 seconds)
    (172/341) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.082881655 seconds)
    (173/341) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.201731564 seconds)
    (174/341) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.073943403 seconds)
    (175/341) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.089762095 seconds)
    (176/341) benchmarking ("collect", "filter", Int64, false)...
    done (took 0.154016903 seconds)
    (177/341) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.064803434 seconds)
    (178/341) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.150541984 seconds)
    (179/341) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.072503204 seconds)
    (180/341) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.090450134 seconds)
    (181/341) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.065707008 seconds)
    (182/341) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.063814041 seconds)
    (183/341) benchmarking ("collect", "all", Bool, true)...
    done (took 0.081448862 seconds)
    (184/341) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.064725199 seconds)
    (185/341) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.073029326 seconds)
    (186/341) benchmarking ("collect", "filter", ComplexF64, false)...
    done (took 0.066306733 seconds)
    (187/341) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.262421763 seconds)
    (188/341) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.067670868 seconds)
    (189/341) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.068082431 seconds)
    (190/341) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.07994103 seconds)
    (191/341) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.064724395 seconds)
    (192/341) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.199704405 seconds)
    (193/341) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.092258106 seconds)
    (194/341) benchmarking ("perf_sum", Float32, true)...
    done (took 0.067764623 seconds)
    (195/341) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.072724875 seconds)
    (196/341) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.147077207 seconds)
    (197/341) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.164421692 seconds)
    (198/341) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.092878178 seconds)
    (199/341) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.073023455 seconds)
    (200/341) benchmarking ("sort", BigFloat, false)...
    done (took 0.132362111 seconds)
    (201/341) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.065475661 seconds)
    (202/341) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.078228703 seconds)
    (203/341) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073431208 seconds)
    (204/341) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.115665487 seconds)
    (205/341) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065270361 seconds)
    (206/341) benchmarking ("collect", "filter", Float32, false)...
    done (took 0.15728745 seconds)
    (207/341) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.066833608 seconds)
    (208/341) benchmarking ("map", abs, Bool, false)...
    done (took 0.138488802 seconds)
    (209/341) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.065761339 seconds)
    (210/341) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.06549981 seconds)
    (211/341) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.063582678 seconds)
    (212/341) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.065524665 seconds)
    (213/341) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.089085539 seconds)
    (214/341) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.066133999 seconds)
    (215/341) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.065582763 seconds)
    (216/341) benchmarking ("collect", "filter", Float64, false)...
    done (took 0.067424431 seconds)
    (217/341) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.071859309 seconds)
    (218/341) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.069486914 seconds)
    (219/341) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.065386911 seconds)
    (220/341) benchmarking ("map", identity, Int8, false)...
    done (took 0.082283943 seconds)
    (221/341) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065015675 seconds)
    (222/341) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.075685536 seconds)
    (223/341) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.072653671 seconds)
    (224/341) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073509515 seconds)
    (225/341) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.065182295 seconds)
    (226/341) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.06595509 seconds)
    (227/341) benchmarking ("perf_sum", Bool, false)...
    done (took 0.072533295 seconds)
    (228/341) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.065134017 seconds)
    (229/341) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.066739928 seconds)
    (230/341) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.153456029 seconds)
    (231/341) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.065487942 seconds)
    (232/341) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.065794898 seconds)
    (233/341) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.067624541 seconds)
    (234/341) benchmarking ("collect", "filter", Int64, true)...
    done (took 0.067223249 seconds)
    (235/341) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.191675037 seconds)
    (236/341) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.089545354 seconds)
    (237/341) benchmarking ("map", identity, Bool, true)...
    done (took 0.065049019 seconds)
    (238/341) benchmarking ("map", identity, Float64, true)...
    done (took 0.081481789 seconds)
    (239/341) benchmarking ("map", abs, Int64, false)...
    done (took 0.142686895 seconds)
    (240/341) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.146146583 seconds)
    (241/341) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.065974193 seconds)
    (242/341) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.063837758 seconds)
    (243/341) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065042727 seconds)
    (244/341) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.066893466 seconds)
    (245/341) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.111339675 seconds)
    (246/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.076697942 seconds)
    (247/341) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075235192 seconds)
    (248/341) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.076779031 seconds)
    (249/341) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066315126 seconds)
    (250/341) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.171252911 seconds)
    (251/341) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.065850037 seconds)
    (252/341) benchmarking ("collect", "all", BigInt, false)...
    done (took 0.068902674 seconds)
    (253/341) benchmarking ("map", abs, BigInt, false)...
    done (took 0.144752657 seconds)
    (254/341) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072048447 seconds)
    (255/341) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.069540991 seconds)
    (256/341) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.066805928 seconds)
    (257/341) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.071897541 seconds)
    (258/341) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072042115 seconds)
    (259/341) benchmarking ("collect", "all", Bool, false)...
    done (took 0.068773806 seconds)
    (260/341) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.065714911 seconds)
    (261/341) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.064404772 seconds)
    (262/341) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.065016902 seconds)
    (263/341) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090430109 seconds)
    (264/341) benchmarking ("perf_sum", Float64, false)...
    done (took 0.06978663 seconds)
    (265/341) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.066147163 seconds)
    (266/341) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063545541 seconds)
    (267/341) benchmarking ("map", abs, Int8, false)...
    done (took 0.13946883 seconds)
    (268/341) benchmarking ("map", abs, Bool, true)...
    done (took 0.065489686 seconds)
    (269/341) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.176646419 seconds)
    (270/341) benchmarking ("collect", "filter", BigFloat, false)...
    done (took 0.153825416 seconds)
    (271/341) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.06516888 seconds)
    (272/341) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.065097349 seconds)
    (273/341) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.123330323 seconds)
    (274/341) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.08778915 seconds)
    (275/341) benchmarking ("map", identity, Float64, false)...
    done (took 0.065783336 seconds)
    (276/341) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.092097219 seconds)
    (277/341) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.134417372 seconds)
    (278/341) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.06458807 seconds)
    (279/341) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.072645309 seconds)
    (280/341) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.126406818 seconds)
    (281/341) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.063265674 seconds)
    (282/341) benchmarking ("map", abs, BigInt, true)...
    done (took 0.06708293 seconds)
    (283/341) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.074068178 seconds)
    (284/341) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.165912793 seconds)
    (285/341) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.065358742 seconds)
    (286/341) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.073021772 seconds)
    (287/341) benchmarking ("map", identity, BigInt, false)...
    done (took 0.065537617 seconds)
    (288/341) benchmarking ("collect", "filter", Float32, true)...
    done (took 0.067554456 seconds)
    (289/341) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.065717223 seconds)
    (290/341) benchmarking ("collect", "filter", BigFloat, true)...
    done (took 0.067375603 seconds)
    (291/341) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.150161013 seconds)
    (292/341) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.073418411 seconds)
    (293/341) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.063401778 seconds)
    (294/341) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.064730185 seconds)
    (295/341) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.066505569 seconds)
    (296/341) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065245893 seconds)
    (297/341) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.073646931 seconds)
    (298/341) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068232398 seconds)
    (299/341) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.066061127 seconds)
    (300/341) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.084777514 seconds)
    (301/341) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.065461928 seconds)
    (302/341) benchmarking ("perf_sum", Float64, true)...
    done (took 0.067736456 seconds)
    (303/341) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.126670201 seconds)
    (304/341) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.073453935 seconds)
    (305/341) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.067723798 seconds)
    (306/341) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.121360173 seconds)
    (307/341) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.06513216 seconds)
    (308/341) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.064212559 seconds)
    (309/341) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072285474 seconds)
    (310/341) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.064096953 seconds)
    (311/341) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.064095726 seconds)
    (312/341) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.065968491 seconds)
    (313/341) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.06470512 seconds)
    (314/341) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.090764968 seconds)
    (315/341) benchmarking ("collect", "all", Float32, false)...
    done (took 0.067977606 seconds)
    (316/341) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.064341736 seconds)
    (317/341) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.066351175 seconds)
    (318/341) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.092068383 seconds)
    (319/341) benchmarking ("map", abs, Float64, true)...
    done (took 0.251907931 seconds)
    (320/341) benchmarking ("collect", "filter", BigInt, false)...
    done (took 0.072519925 seconds)
    (321/341) benchmarking ("map", abs, Float32, true)...
    done (took 0.067668443 seconds)
    (322/341) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.066607555 seconds)
    (323/341) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.067131428 seconds)
    (324/341) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.066591348 seconds)
    (325/341) benchmarking ("map", identity, Int64, false)...
    done (took 0.066824518 seconds)
    (326/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.078708128 seconds)
    (327/341) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.065410859 seconds)
    (328/341) benchmarking ("perf_sum", Int8, true)...
    done (took 0.07347431 seconds)
    (329/341) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.064672356 seconds)
    (330/341) benchmarking ("map", identity, Int8, true)...
    done (took 0.066869148 seconds)
    (331/341) benchmarking ("collect", "all", Int8, true)...
    done (took 0.070578015 seconds)
    (332/341) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.066688335 seconds)
    (333/341) benchmarking ("map", abs, Int64, true)...
    done (took 0.066328933 seconds)
    (334/341) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.075099865 seconds)
    (335/341) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.065537327 seconds)
    (336/341) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.066322855 seconds)
    (337/341) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.065590126 seconds)
    (338/341) benchmarking ("map", abs, Int8, true)...
    done (took 0.065605605 seconds)
    (339/341) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.085090239 seconds)
    (340/341) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.065321137 seconds)
    (341/341) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.132999471 seconds)
  done (took 36.975786302 seconds)
done (took 38.533730582 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.0870036 seconds)
  (2/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.078151188 seconds)
  (3/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076724114 seconds)
  (4/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073515283 seconds)
  (5/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.077045591 seconds)
  (6/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.076060195 seconds)
  (7/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.077242738 seconds)
  (8/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.075300367 seconds)
  (9/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.076507211 seconds)
  (10/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076002803 seconds)
  (11/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.075888786 seconds)
  (12/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063937408 seconds)
  (13/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.072792047 seconds)
  (14/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.08027206 seconds)
  (15/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.07376218 seconds)
  (16/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.080328512 seconds)
  (17/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077408425 seconds)
  (18/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.080122729 seconds)
  (19/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065815663 seconds)
  (20/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.079269826 seconds)
  (21/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.092648136 seconds)
  (22/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.076498114 seconds)
  (23/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073295399 seconds)
  (24/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.078735108 seconds)
  (25/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065377624 seconds)
  (26/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.074246893 seconds)
  (27/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089544387 seconds)
  (28/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.086359702 seconds)
  (29/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.072016441 seconds)
  (30/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074270412 seconds)
  (31/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072356991 seconds)
  (32/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.083602596 seconds)
  (33/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072320833 seconds)
  (34/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071195029 seconds)
  (35/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074534625 seconds)
  (36/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.070635798 seconds)
  (37/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.074177914 seconds)
  (38/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071792088 seconds)
  (39/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.088644899 seconds)
  (40/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.070817287 seconds)
  (41/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.064989475 seconds)
  (42/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077203768 seconds)
  (43/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072544491 seconds)
  (44/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073516012 seconds)
  (45/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.073972537 seconds)
  (46/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.077104519 seconds)
  (47/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.070599179 seconds)
  (48/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.078946157 seconds)
  (49/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064533754 seconds)
  (50/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075968906 seconds)
  (51/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088975941 seconds)
  (52/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070203453 seconds)
  (53/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.07207473 seconds)
  (54/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.073593532 seconds)
  (55/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070172789 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074339684 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.071475043 seconds)
  (58/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.076511799 seconds)
  (59/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.07027962 seconds)
  (60/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.076178994 seconds)
  (61/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.076073336 seconds)
  (62/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.07375132 seconds)
  (63/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.064326339 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073595941 seconds)
  (65/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.072064527 seconds)
  (66/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.072203114 seconds)
  (67/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.063116551 seconds)
  (68/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070176748 seconds)
  (69/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064305424 seconds)
  (70/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065000602 seconds)
  (71/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.06369415 seconds)
  (72/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073294587 seconds)
  (73/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.07178536 seconds)
  (74/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070233099 seconds)
  (75/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064081267 seconds)
  (76/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064769178 seconds)
  (77/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.063710666 seconds)
  (78/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.0767151 seconds)
  (79/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.07088905 seconds)
  (80/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074349606 seconds)
  (81/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064888308 seconds)
  (82/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.069692493 seconds)
  (83/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.069294373 seconds)
  (84/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064701348 seconds)
  (85/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070286167 seconds)
  (86/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.07662091 seconds)
  (87/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.063612622 seconds)
  (88/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065244422 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.063629428 seconds)
  (90/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.079489267 seconds)
  (91/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.071405453 seconds)
  (92/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064601209 seconds)
  (93/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.076598179 seconds)
  (94/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069794352 seconds)
  (95/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069626093 seconds)
  (96/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064668748 seconds)
  (97/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.063296915 seconds)
  (98/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069777658 seconds)
  (99/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072718113 seconds)
  (100/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.065077051 seconds)
  (101/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.063617024 seconds)
  (102/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070020849 seconds)
  (103/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.069660141 seconds)
  (104/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073744159 seconds)
  (105/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.065072169 seconds)
  (106/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070455585 seconds)
  (107/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069951635 seconds)
  (108/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.06338533 seconds)
  (109/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073559841 seconds)
  (110/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.07200781 seconds)
  (111/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.073505787 seconds)
  (112/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.077884423 seconds)
  (113/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073461477 seconds)
  (114/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.076794492 seconds)
  (115/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.064653304 seconds)
  (116/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063561127 seconds)
  (117/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074146524 seconds)
  (118/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.065088243 seconds)
  (119/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070373792 seconds)
  (120/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.07225613 seconds)
  (121/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.070330974 seconds)
  (122/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073159209 seconds)
  (123/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.064778322 seconds)
  (124/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.063477197 seconds)
  (125/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069987726 seconds)
  (126/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070848294 seconds)
  (127/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065035074 seconds)
  (128/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.064925618 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.064492837 seconds)
  (130/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074278063 seconds)
  (131/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.071435989 seconds)
  (132/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.063556468 seconds)
  (133/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.064497993 seconds)
  (134/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073708148 seconds)
  (135/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074101352 seconds)
  (136/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.063735607 seconds)
  (137/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.063631388 seconds)
  (138/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073982434 seconds)
  (139/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.064547818 seconds)
  (140/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.069530997 seconds)
  (141/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069801832 seconds)
  (142/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.072396558 seconds)
  (143/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.063354946 seconds)
  (144/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.064049675 seconds)
  (145/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.062930389 seconds)
  (146/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.063401931 seconds)
  (147/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063096524 seconds)
  (148/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073364912 seconds)
  (149/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069340946 seconds)
  (150/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.064555111 seconds)
  (151/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072680667 seconds)
  (152/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.222145466 seconds)
done (took 12.674410223 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066695542 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.109067826 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.080410498 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.082433232 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.079080976 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066611116 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.069854342 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.085386511 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068793865 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.090731886 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.091583685 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.087729388 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.096716945 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064030873 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065247664 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.066448623 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.063653836 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.07757609 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.082463431 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.088917381 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.101793783 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.0648838 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.081130021 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.08552428 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.079941493 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.083445203 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067022256 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.066232511 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068536802 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.084683971 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.092042212 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.065496134 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.06658344 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.083645309 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.080919697 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.073770273 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066510382 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.072224448 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.068956857 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065406425 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067566313 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.083502051 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.072622773 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.073053129 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.066542572 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.066487908 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.065861726 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.073169123 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.083463019 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.071318847 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.078063681 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.084991435 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.067944864 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065753453 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.063890341 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.073452582 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.066093984 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.066030497 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065919848 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.065305815 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065853396 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068511486 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.071043033 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.07228378 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069927891 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.072391714 seconds)
  done (took 6.552734936 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.080444178 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.092088663 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.080791099 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.08098268 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.06534205 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066076127 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066027875 seconds)
  done (took 2.198664188 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066111374 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.073799178 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.078617889 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.078275321 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.088020345 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.075917832 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066557558 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.098370535 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.065375554 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.074802603 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.082515945 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079587411 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.069311565 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.078414252 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066524 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.077821881 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066595487 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072673415 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073829278 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079583872 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070337752 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.096199692 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.079655324 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066583319 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.079837632 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.073250804 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.067888582 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066415297 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066186127 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.065337577 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065554511 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.088091807 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.076778569 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.07857263 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066277797 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.064851417 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.070292703 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066305185 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.069773284 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.075259644 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.069367094 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.065237215 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066190839 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.065770621 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.066581145 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.070743339 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066762263 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.065629768 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.065287734 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.073292011 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.064660961 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.072622326 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.068129522 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.070643918 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.070815501 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070485486 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.072910833 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.065850327 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.073173502 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.072130041 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06542148 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.078195143 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.078042675 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.069366 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.077768606 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.07482157 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.072760452 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.069538205 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.065233717 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.064906308 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.065864721 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.077383013 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.069149873 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.06799723 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.066575432 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.070434849 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.069635882 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.081659068 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.081458749 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.079216407 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068251171 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.065198799 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.069377661 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.080977887 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070962949 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065780044 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.066351401 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065112282 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070472125 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.065521473 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.070494851 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.065402461 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.072574563 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.068199082 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.067884277 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.073889565 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.065648526 seconds)
  done (took 8.606594313 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067799909 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.068318491 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067040074 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.066791593 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067192531 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.066659664 seconds)
  done (took 2.101192829 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.090171345 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.066240782 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.07810384 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.066472128 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.088985699 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.072920487 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.074316162 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.068098504 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.082640574 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.076805158 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.072989921 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.076161071 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.076339013 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.068384311 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.073007772 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.066959703 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.0729733 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.069346791 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.076170649 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.06856949 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.082799044 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.068260453 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.069845463 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.078726811 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.069278697 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.067146885 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067204281 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.076555615 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.07627575 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.067959063 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.067655902 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.069185753 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.07486785 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.067621351 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.072439941 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.07516417 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.06610896 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.07168571 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.068503224 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.069266171 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.075240138 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.068120679 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.068071986 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.071674108 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.068013549 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.07486654 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.071761907 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.069596077 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.072635531 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.071339004 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.071482093 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.066858035 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.069121681 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.071374177 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074718025 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.06761197 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.071806346 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.072736922 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.067550384 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.074506441 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.065994576 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.06963243 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.067704914 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.069453191 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.070974601 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.071535629 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.074780204 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.068013203 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072664573 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.066167567 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.071727305 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.066244529 seconds)
  done (took 6.826572617 seconds)
done (took 27.929923586 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.542962183 seconds)
  done (took 2.178332206 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.889592203 seconds)
  done (took 2.567029134 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.044755468 seconds)
  done (took 9.731455115 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.345689427 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.40705761 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.736570631 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.129715254 seconds)
  done (took 3.342423919 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.752552692 seconds)
  done (took 2.438909294 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.228182726 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.223804483 seconds)
  done (took 2.150033275 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.33246788 seconds)
  done (took 2.006971585 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.143337868 seconds)
  done (took 2.815126306 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.230704113 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.163251057 seconds)
  done (took 2.078954823 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.53919032 seconds)
  done (took 2.220401055 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.255024556 seconds)
  done (took 5.939900092 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.230677961 seconds)
  done (took 1.954105681 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.228389279 seconds)
  done (took 1.914762806 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 2.011960484 seconds)
  done (took 3.686565667 seconds)
done (took 46.709467155 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.081592584 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.083977787 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.085925877 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081885735 seconds)
  done (took 1.983549119 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.071510453 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.068282493 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.072424459 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.073057177 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.070695062 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.072074357 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.072856361 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.069544995 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.071242018 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.06979156 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.068178208 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.069496338 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.072412762 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.069724316 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.072276747 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.073633935 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.070237031 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.069787495 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.071954118 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.069640088 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.071866883 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.069308598 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.067566411 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.069125288 seconds)
  done (took 3.37419954 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.076486007 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.071531845 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074671831 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.070713517 seconds)
  done (took 1.972503989 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.074482297 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.075835233 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.084913536 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.089637131 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.075369822 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.076146424 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.083087762 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.08358314 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.064930668 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.086757957 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.067910277 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.066280783 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.06624835 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.085297398 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.082674225 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.061919942 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.063370681 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.076665525 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.075590977 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.078759059 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.067591222 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.065148142 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.075486491 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.07633316 seconds)
  done (took 3.483015616 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.079629491 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.065000823 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.081462177 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.09079125 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.091923822 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064805735 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.079528516 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.09273426 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.12887787 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065268845 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.071325428 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064880406 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.104778995 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065035395 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.08080405 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.108610586 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.112019572 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.069397572 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.098368155 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064914563 seconds)
  done (took 3.366914599 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073672419 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.06913149 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.069999444 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.064787014 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077387204 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073233859 seconds)
  done (took 2.11776287 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.066646212 seconds)
    (2/12) benchmarking ("push_single!", 256)...
    done (took 0.067371997 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.069175461 seconds)
    (4/12) benchmarking ("push_multiple!", 256)...
    done (took 0.07196891 seconds)
    (5/12) benchmarking ("push_single!", 2048)...
    done (took 0.06756825 seconds)
    (6/12) benchmarking ("push_single!", 8)...
    done (took 0.067084335 seconds)
    (7/12) benchmarking ("prerend!", 2048)...
    done (took 0.066457763 seconds)
    (8/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.065724903 seconds)
    (9/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065339858 seconds)
    (10/12) benchmarking ("append!", 2048)...
    done (took 0.065958661 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.065936924 seconds)
    (12/12) benchmarking ("prerend!", 8)...
    done (took 0.066293201 seconds)
  done (took 2.487463897 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.146496665 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069516026 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069818247 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065866392 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.067170214 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065786071 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.081072433 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067955484 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.085027449 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066509798 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066274506 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068873336 seconds)
  done (took 2.602740334 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.102016131 seconds)
    (2/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.111903269 seconds)
    (3/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.145564285 seconds)
    (4/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.11728105 seconds)
    (5/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.117032227 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.096705322 seconds)
    (7/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.12616734 seconds)
    (8/608) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.095626787 seconds)
    (9/608) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.160820551 seconds)
    (10/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.13700595 seconds)
    (11/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.117064332 seconds)
    (12/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.093204123 seconds)
    (13/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.086173743 seconds)
    (14/608) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.06934389 seconds)
    (15/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.100018788 seconds)
    (16/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.11822469 seconds)
    (17/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.137817765 seconds)
    (18/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.072159161 seconds)
    (19/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.113002276 seconds)
    (20/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.165454986 seconds)
    (21/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.132356561 seconds)
    (22/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.135323624 seconds)
    (23/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.149008993 seconds)
    (24/608) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.117646208 seconds)
    (25/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090436593 seconds)
    (26/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.149153592 seconds)
    (27/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.098067438 seconds)
    (28/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.102566393 seconds)
    (29/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.124752862 seconds)
    (30/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.126431234 seconds)
    (31/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.1195036 seconds)
    (32/608) benchmarking ("sumvector_view", "Matrix{Int64}")...
    done (took 0.097770998 seconds)
    (33/608) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.071115014 seconds)
    (34/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070433654 seconds)
    (35/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.149363558 seconds)
    (36/608) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.103400608 seconds)
    (37/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.121291151 seconds)
    (38/608) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.092831923 seconds)
    (39/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.104988159 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.087823958 seconds)
    (41/608) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.107637808 seconds)
    (42/608) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.068909565 seconds)
    (43/608) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.085001091 seconds)
    (44/608) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.113107571 seconds)
    (45/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084676527 seconds)
    (46/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.134936007 seconds)
    (47/608) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.088233117 seconds)
    (48/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.11586847 seconds)
    (49/608) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081257305 seconds)
    (50/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.137907068 seconds)
    (51/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.122555559 seconds)
    (52/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.0977534 seconds)
    (53/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.084515212 seconds)
    (54/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103554664 seconds)
    (55/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.295707616 seconds)
    (56/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.113862458 seconds)
    (57/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.135506053 seconds)
    (58/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.107718784 seconds)
    (59/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.083088052 seconds)
    (60/608) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.119759296 seconds)
    (61/608) benchmarking ("sumlinear_view", "Matrix{Float64}")...
    done (took 0.102955051 seconds)
    (62/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.101234217 seconds)
    (63/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.1078869 seconds)
    (64/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080143358 seconds)
    (65/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.17575347 seconds)
    (66/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.088966607 seconds)
    (67/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.112417178 seconds)
    (68/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.11195011 seconds)
    (69/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.094156384 seconds)
    (70/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.094198571 seconds)
    (71/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.107843363 seconds)
    (72/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.136027093 seconds)
    (73/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.125543566 seconds)
    (74/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.126098089 seconds)
    (75/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.138250425 seconds)
    (76/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.095261503 seconds)
    (77/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.122349342 seconds)
    (78/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.100399672 seconds)
    (79/608) benchmarking ("mapr_access", "Matrix{Int64}")...
    done (took 0.129748006 seconds)
    (80/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105418542 seconds)
    (81/608) benchmarking ("sumcartesian", "Matrix{Float64}")...
    done (took 0.073354455 seconds)
    (82/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.121793151 seconds)
    (83/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.129091261 seconds)
    (84/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.099072257 seconds)
    (85/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.10214187 seconds)
    (86/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.130404239 seconds)
    (87/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.092174796 seconds)
    (88/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.076982758 seconds)
    (89/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.099358577 seconds)
    (90/608) benchmarking ("sumlogical_view", "Matrix{Int64}")...
    done (took 0.118781532 seconds)
    (91/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.080217396 seconds)
    (92/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.112669094 seconds)
    (93/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080923033 seconds)
    (94/608) benchmarking ("sum", "3dsubarray")...
    done (took 0.109574052 seconds)
    (95/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.134322805 seconds)
    (96/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.097191356 seconds)
    (97/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.112011485 seconds)
    (98/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.117268797 seconds)
    (99/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.077983143 seconds)
    (100/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.155891656 seconds)
    (101/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.108706154 seconds)
    (102/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.072236563 seconds)
    (103/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.117320993 seconds)
    (104/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.113155487 seconds)
    (105/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.153391759 seconds)
    (106/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09418899 seconds)
    (107/608) benchmarking ("sumcartesian", "Matrix{Int64}")...
    done (took 0.075496794 seconds)
    (108/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.099707925 seconds)
    (109/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.266098354 seconds)
    (110/608) benchmarking "5d"...
    done (took 0.150656853 seconds)
    (111/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.108384453 seconds)
    (112/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.080131234 seconds)
    (113/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.111617683 seconds)
    (114/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.141237353 seconds)
    (115/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.095567477 seconds)
    (116/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.169964557 seconds)
    (117/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.096397977 seconds)
    (118/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.141676854 seconds)
    (119/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.112640745 seconds)
    (120/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.087567077 seconds)
    (121/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.075248021 seconds)
    (122/608) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.09017045 seconds)
    (123/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.112568869 seconds)
    (124/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.107205573 seconds)
    (125/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.112538716 seconds)
    (126/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09029292 seconds)
    (127/608) benchmarking ("sumrange_view", "Matrix{Float64}")...
    done (took 0.084030004 seconds)
    (128/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.087101728 seconds)
    (129/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.112453497 seconds)
    (130/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.091886585 seconds)
    (131/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.080587033 seconds)
    (132/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.113604207 seconds)
    (133/608) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.102058445 seconds)
    (134/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.07510887 seconds)
    (135/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088724422 seconds)
    (136/608) benchmarking ("sumcolon_view", "Matrix{Float64}")...
    done (took 0.079528873 seconds)
    (137/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.142652065 seconds)
    (138/608) benchmarking ("sumrange", "Matrix{Float64}")...
    done (took 0.077924305 seconds)
    (139/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.138379926 seconds)
    (140/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.125622702 seconds)
    (141/608) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.078588293 seconds)
    (142/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106317944 seconds)
    (143/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.09793657 seconds)
    (144/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.109156096 seconds)
    (145/608) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.097557837 seconds)
    (146/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.116852677 seconds)
    (147/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.140161284 seconds)
    (148/608) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.116328873 seconds)
    (149/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.089950955 seconds)
    (150/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.093711924 seconds)
    (151/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108325209 seconds)
    (152/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145218383 seconds)
    (153/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.127769906 seconds)
    (154/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.093281699 seconds)
    (155/608) benchmarking ("sumcolon", "Matrix{Int64}")...
    done (took 0.076527465 seconds)
    (156/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.100820417 seconds)
    (157/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.112572611 seconds)
    (158/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.097530437 seconds)
    (159/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.126285372 seconds)
    (160/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.099996788 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.109036945 seconds)
    (162/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.103544977 seconds)
    (163/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.141205656 seconds)
    (164/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.143719186 seconds)
    (165/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.099322084 seconds)
    (166/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.101372636 seconds)
    (167/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105251094 seconds)
    (168/608) benchmarking "ind2sub"...
    done (took 0.287539633 seconds)
    (169/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.077096299 seconds)
    (170/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.156609136 seconds)
    (171/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104931294 seconds)
    (172/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.119151276 seconds)
    (173/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.084928647 seconds)
    (174/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.141335847 seconds)
    (175/608) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.114682285 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089384482 seconds)
    (177/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.087881637 seconds)
    (178/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.100681095 seconds)
    (179/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.103457497 seconds)
    (180/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106341263 seconds)
    (181/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.143568716 seconds)
    (182/608) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.095631649 seconds)
    (183/608) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.072052335 seconds)
    (184/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09258743 seconds)
    (185/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.14460131 seconds)
    (186/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076040202 seconds)
    (187/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.109989318 seconds)
    (188/608) benchmarking ("sumcartesian_view", "Matrix{Float64}")...
    done (took 0.090567584 seconds)
    (189/608) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.093039624 seconds)
    (190/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.118614683 seconds)
    (191/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.093444502 seconds)
    (192/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.081000364 seconds)
    (193/608) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.067688376 seconds)
    (194/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.127874746 seconds)
    (195/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.158453699 seconds)
    (196/608) benchmarking ("sumelt_boundscheck", "Matrix{Float64}")...
    done (took 0.069820748 seconds)
    (197/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.114679255 seconds)
    (198/608) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.111329551 seconds)
    (199/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.103601988 seconds)
    (200/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.121710862 seconds)
    (201/608) benchmarking ("sumelt", "1:100000")...
    done (took 0.068922712 seconds)
    (202/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.119291033 seconds)
    (203/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.13852474 seconds)
    (204/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.118290926 seconds)
    (205/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.140972825 seconds)
    (206/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.14809271 seconds)
    (207/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.116789395 seconds)
    (208/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.119425388 seconds)
    (209/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.115005369 seconds)
    (210/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106569699 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.079421561 seconds)
    (212/608) benchmarking ("sumlogical", "Matrix{Float64}")...
    done (took 0.126196711 seconds)
    (213/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.135534479 seconds)
    (214/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.096672328 seconds)
    (215/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092749147 seconds)
    (216/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.136688117 seconds)
    (217/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.118559488 seconds)
    (218/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.133886182 seconds)
    (219/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.114220409 seconds)
    (220/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.112455026 seconds)
    (221/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.103098168 seconds)
    (222/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.271496184 seconds)
    (223/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.10392699 seconds)
    (224/608) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.104186405 seconds)
    (225/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.14474616 seconds)
    (226/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.121456936 seconds)
    (227/608) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.124749342 seconds)
    (228/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.086073536 seconds)
    (229/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106149815 seconds)
    (230/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.117740095 seconds)
    (231/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.13466855 seconds)
    (232/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.081566719 seconds)
    (233/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.141858453 seconds)
    (234/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.084273952 seconds)
    (235/608) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.117938979 seconds)
    (236/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.076792229 seconds)
    (237/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.12357634 seconds)
    (238/608) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.079466851 seconds)
    (239/608) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.110784086 seconds)
    (240/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.079425692 seconds)
    (241/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.100214207 seconds)
    (242/608) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.069214309 seconds)
    (243/608) benchmarking ("sumeach", "1:100000")...
    done (took 0.073398321 seconds)
    (244/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.141014044 seconds)
    (245/608) benchmarking ("sumvector", "1:100000")...
    done (took 0.112031882 seconds)
    (246/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.105909423 seconds)
    (247/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.100298455 seconds)
    (248/608) benchmarking ("sumlogical", "1:100000")...
    done (took 0.13750984 seconds)
    (249/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.137205234 seconds)
    (250/608) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.080720542 seconds)
    (251/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.108521718 seconds)
    (252/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.116190374 seconds)
    (253/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.101745453 seconds)
    (254/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.116869542 seconds)
    (255/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.11011961 seconds)
    (256/608) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.088943574 seconds)
    (257/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.095692041 seconds)
    (258/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.109189206 seconds)
    (259/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.085528967 seconds)
    (260/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.081905749 seconds)
    (261/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115842064 seconds)
    (262/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094538239 seconds)
    (263/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.127598391 seconds)
    (264/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.084148736 seconds)
    (265/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.074743012 seconds)
    (266/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.141657234 seconds)
    (267/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105198247 seconds)
    (268/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.095474833 seconds)
    (269/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.078019825 seconds)
    (270/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.10842374 seconds)
    (271/608) benchmarking "4d"...
    done (took 0.121682736 seconds)
    (272/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.092913901 seconds)
    (273/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.087676383 seconds)
    (274/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.115244492 seconds)
    (275/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105196837 seconds)
    (276/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.141857623 seconds)
    (277/608) benchmarking ("sumcartesian_view", "Matrix{Int64}")...
    done (took 0.089963334 seconds)
    (278/608) benchmarking ("sumvector", "Matrix{Float64}")...
    done (took 0.096887529 seconds)
    (279/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.123792312 seconds)
    (280/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.08000249 seconds)
    (281/608) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.091163614 seconds)
    (282/608) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.068600915 seconds)
    (283/608) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.084618342 seconds)
    (284/608) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.074900715 seconds)
    (285/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.292049541 seconds)
    (286/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.076787524 seconds)
    (287/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.117428081 seconds)
    (288/608) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.068692769 seconds)
    (289/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.130569532 seconds)
    (290/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087154652 seconds)
    (291/608) benchmarking ("sumvector_view", "Matrix{Float64}")...
    done (took 0.093419852 seconds)
    (292/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.102499572 seconds)
    (293/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.111156681 seconds)
    (294/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.127665989 seconds)
    (295/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.094950022 seconds)
    (296/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.140892868 seconds)
    (297/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089303271 seconds)
    (298/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.118149242 seconds)
    (299/608) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.10738357 seconds)
    (300/608) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.093853043 seconds)
    (301/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.088294957 seconds)
    (302/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.103171808 seconds)
    (303/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.101250685 seconds)
    (304/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.122276486 seconds)
    (305/608) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.095813008 seconds)
    (306/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.122783707 seconds)
    (307/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.142393592 seconds)
    (308/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105009007 seconds)
    (309/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.141898875 seconds)
    (310/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091533468 seconds)
    (311/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.122963211 seconds)
    (312/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.107558691 seconds)
    (313/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.124822556 seconds)
    (314/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.112786449 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.147750423 seconds)
    (316/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.138823828 seconds)
    (317/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.117502171 seconds)
    (318/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.112073928 seconds)
    (319/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.075027476 seconds)
    (320/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.095188732 seconds)
    (321/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105715116 seconds)
    (322/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.111904871 seconds)
    (323/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.175830211 seconds)
    (324/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.126520424 seconds)
    (325/608) benchmarking ("sumlinear", "Matrix{Int64}")...
    done (took 0.072269203 seconds)
    (326/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.107044042 seconds)
    (327/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.094533949 seconds)
    (328/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.108677698 seconds)
    (329/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105609662 seconds)
    (330/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.082681714 seconds)
    (331/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.147672636 seconds)
    (332/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102443828 seconds)
    (333/608) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.088390691 seconds)
    (334/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.112037584 seconds)
    (335/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.090479156 seconds)
    (336/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.103305326 seconds)
    (337/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074830347 seconds)
    (338/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.094218622 seconds)
    (339/608) benchmarking ("sumcolon", "1:100000")...
    done (took 0.098157645 seconds)
    (340/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.254838188 seconds)
    (341/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.099325086 seconds)
    (342/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.11606484 seconds)
    (343/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.128850202 seconds)
    (344/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.113837355 seconds)
    (345/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.14408773 seconds)
    (346/608) benchmarking "3d"...
    done (took 0.099038367 seconds)
    (347/608) benchmarking ("sum", "3darray")...
    done (took 0.092697463 seconds)
    (348/608) benchmarking ("sumlogical", "Matrix{Int64}")...
    done (took 0.118688128 seconds)
    (349/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.110482553 seconds)
    (350/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.110216043 seconds)
    (351/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.085952186 seconds)
    (352/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.085993424 seconds)
    (353/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.137426122 seconds)
    (354/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.118663545 seconds)
    (355/608) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.129000238 seconds)
    (356/608) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.100380881 seconds)
    (357/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.109356728 seconds)
    (358/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.111579055 seconds)
    (359/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.099890898 seconds)
    (360/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.125016508 seconds)
    (361/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.107953141 seconds)
    (362/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.126023483 seconds)
    (363/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080416144 seconds)
    (364/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.07543975 seconds)
    (365/608) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.068257783 seconds)
    (366/608) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.071694298 seconds)
    (367/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.123243035 seconds)
    (368/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.108316262 seconds)
    (369/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.112113571 seconds)
    (370/608) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.09887232 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Matrix{Int64}")...
    done (took 0.071954455 seconds)
    (372/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.103805461 seconds)
    (373/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.106443341 seconds)
    (374/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.071270716 seconds)
    (375/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088689457 seconds)
    (376/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.094250392 seconds)
    (377/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.09941762 seconds)
    (378/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.091746498 seconds)
    (379/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.107362589 seconds)
    (380/608) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.114138 seconds)
    (381/608) benchmarking ("sumrange", "Matrix{Int64}")...
    done (took 0.091205661 seconds)
    (382/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.104348259 seconds)
    (383/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.099631687 seconds)
    (384/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.147979089 seconds)
    (385/608) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.100888583 seconds)
    (386/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088886292 seconds)
    (387/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.145616823 seconds)
    (388/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.151602132 seconds)
    (389/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088527304 seconds)
    (390/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093212564 seconds)
    (391/608) benchmarking ("sumelt", "Matrix{Int64}")...
    done (took 0.071417773 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.079600923 seconds)
    (393/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.114534313 seconds)
    (394/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.149886349 seconds)
    (395/608) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.15049714 seconds)
    (396/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.076405802 seconds)
    (397/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.085347418 seconds)
    (398/608) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.085236394 seconds)
    (399/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084910865 seconds)
    (400/608) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.069942547 seconds)
    (401/608) benchmarking ("sumeach_view", "Matrix{Float64}")...
    done (took 0.248083433 seconds)
    (402/608) benchmarking ("sumcolon", "Matrix{Float64}")...
    done (took 0.090968977 seconds)
    (403/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105906748 seconds)
    (404/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.099360803 seconds)
    (405/608) benchmarking ("sumlogical_view", "Matrix{Float64}")...
    done (took 0.11367121 seconds)
    (406/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105357629 seconds)
    (407/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075773403 seconds)
    (408/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.103090517 seconds)
    (409/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.099607601 seconds)
    (410/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.091786821 seconds)
    (411/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.106694592 seconds)
    (412/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.118781179 seconds)
    (413/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.124470541 seconds)
    (414/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.140498125 seconds)
    (415/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.110184695 seconds)
    (416/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.107316365 seconds)
    (417/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076004794 seconds)
    (418/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.080082708 seconds)
    (419/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.075320259 seconds)
    (420/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.078879981 seconds)
    (421/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.102403467 seconds)
    (422/608) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.078552594 seconds)
    (423/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075667873 seconds)
    (424/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.14260108 seconds)
    (425/608) benchmarking ("sumcolon_view", "Matrix{Int64}")...
    done (took 0.092060157 seconds)
    (426/608) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104678743 seconds)
    (427/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108948593 seconds)
    (428/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.088618804 seconds)
    (429/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075188612 seconds)
    (430/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.134106086 seconds)
    (431/608) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.068949603 seconds)
    (432/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.135150836 seconds)
    (433/608) benchmarking ("sumeach", "Matrix{Int64}")...
    done (took 0.071250727 seconds)
    (434/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.082486843 seconds)
    (435/608) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.082796221 seconds)
    (436/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079031893 seconds)
    (437/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.094021724 seconds)
    (438/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.140061093 seconds)
    (439/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.110318398 seconds)
    (440/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.113558869 seconds)
    (441/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106871698 seconds)
    (442/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.10462379 seconds)
    (443/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.142040783 seconds)
    (444/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.156766262 seconds)
    (445/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08032031 seconds)
    (446/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.143854848 seconds)
    (447/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075873852 seconds)
    (448/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075400719 seconds)
    (449/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.075806611 seconds)
    (450/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.113815909 seconds)
    (451/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090851252 seconds)
    (452/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.115802713 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.141911733 seconds)
    (454/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091302325 seconds)
    (455/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104283233 seconds)
    (456/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07703919 seconds)
    (457/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.144182357 seconds)
    (458/608) benchmarking ("sumeach_view", "Matrix{Int64}")...
    done (took 0.098696687 seconds)
    (459/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.103322962 seconds)
    (460/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.086196609 seconds)
    (461/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.077754946 seconds)
    (462/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.305497336 seconds)
    (463/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.080675739 seconds)
    (464/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.080325058 seconds)
    (465/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.090667075 seconds)
    (466/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.111669111 seconds)
    (467/608) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.072143826 seconds)
    (468/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.104146475 seconds)
    (469/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.085154104 seconds)
    (470/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.079977832 seconds)
    (471/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.142193328 seconds)
    (472/608) benchmarking "sub2ind"...
    done (took 0.63019086 seconds)
    (473/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.08990763 seconds)
    (474/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.075097992 seconds)
    (475/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.095865491 seconds)
    (476/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.141618598 seconds)
    (477/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.127813412 seconds)
    (478/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.094714729 seconds)
    (479/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108194583 seconds)
    (480/608) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.118310328 seconds)
    (481/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.099623642 seconds)
    (482/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.095243975 seconds)
    (483/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.108063206 seconds)
    (484/608) benchmarking "6d"...
    done (took 0.183851938 seconds)
    (485/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.073753607 seconds)
    (486/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.094655292 seconds)
    (487/608) benchmarking ("sumrange", "1:100000")...
    done (took 0.103799287 seconds)
    (488/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.097924704 seconds)
    (489/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101937759 seconds)
    (490/608) benchmarking ("sumrange_view", "Matrix{Int64}")...
    done (took 0.09888127 seconds)
    (491/608) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.085241857 seconds)
    (492/608) benchmarking ("sumvector", "Matrix{Int64}")...
    done (took 0.092928204 seconds)
    (493/608) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.086923255 seconds)
    (494/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.079448105 seconds)
    (495/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.108423287 seconds)
    (496/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089274237 seconds)
    (497/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.097633951 seconds)
    (498/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.107767325 seconds)
    (499/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.08314589 seconds)
    (500/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.087492619 seconds)
    (501/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.131400136 seconds)
    (502/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.105021934 seconds)
    (503/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.082620831 seconds)
    (504/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088627267 seconds)
    (505/608) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.106668633 seconds)
    (506/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089496611 seconds)
    (507/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102316098 seconds)
    (508/608) benchmarking ("sumelt", "Matrix{Float64}")...
    done (took 0.068643928 seconds)
    (509/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.113759898 seconds)
    (510/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.090783933 seconds)
    (511/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.117676827 seconds)
    (512/608) benchmarking ("sumlinear_view", "Matrix{Int64}")...
    done (took 0.095329707 seconds)
    (513/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.108140606 seconds)
    (514/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.128051375 seconds)
    (515/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090619559 seconds)
    (516/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.138183677 seconds)
    (517/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.108104643 seconds)
    (518/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.123790441 seconds)
    (519/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.088105744 seconds)
    (520/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.078328939 seconds)
    (521/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.126447831 seconds)
    (522/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.088134749 seconds)
    (523/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077320182 seconds)
    (524/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.309325737 seconds)
    (525/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.096193708 seconds)
    (526/608) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.093510574 seconds)
    (527/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104431895 seconds)
    (528/608) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.096648413 seconds)
    (529/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.1136517 seconds)
    (530/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.117945358 seconds)
    (531/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.111643079 seconds)
    (532/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.098161308 seconds)
    (533/608) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078469816 seconds)
    (534/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.100865538 seconds)
    (535/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.102048394 seconds)
    (536/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084845056 seconds)
    (537/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078375063 seconds)
    (538/608) benchmarking ("sumlinear", "1:100000")...
    done (took 0.07388855 seconds)
    (539/608) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.075859192 seconds)
    (540/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.107433805 seconds)
    (541/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085285498 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.083623007 seconds)
    (543/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.114689914 seconds)
    (544/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.089736337 seconds)
    (545/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.103534252 seconds)
    (546/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.099770698 seconds)
    (547/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.122946718 seconds)
    (548/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.083326766 seconds)
    (549/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.101129226 seconds)
    (550/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.110719528 seconds)
    (551/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092570306 seconds)
    (552/608) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.110107796 seconds)
    (553/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.100715086 seconds)
    (554/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.128787793 seconds)
    (555/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.175248489 seconds)
    (556/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.126371972 seconds)
    (557/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.129346171 seconds)
    (558/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.135140245 seconds)
    (559/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.076539618 seconds)
    (560/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.075614997 seconds)
    (561/608) benchmarking ("sumeach", "Matrix{Float64}")...
    done (took 0.068081904 seconds)
    (562/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.115629274 seconds)
    (563/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.0795304 seconds)
    (564/608) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.089096206 seconds)
    (565/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.08099758 seconds)
    (566/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.134362661 seconds)
    (567/608) benchmarking "2d"...
    done (took 0.081593177 seconds)
    (568/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.11211775 seconds)
    (569/608) benchmarking "7d"...
    done (took 0.230556711 seconds)
    (570/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.079463183 seconds)
    (571/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.094876716 seconds)
    (572/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.096872683 seconds)
    (573/608) benchmarking ("sumlinear", "Matrix{Float64}")...
    done (took 0.070068112 seconds)
    (574/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.083344158 seconds)
    (575/608) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.108355251 seconds)
    (576/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.087611541 seconds)
    (577/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080246496 seconds)
    (578/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.12019434 seconds)
    (579/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.083526656 seconds)
    (580/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.128652045 seconds)
    (581/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.111581195 seconds)
    (582/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.100484013 seconds)
    (583/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.09558973 seconds)
    (584/608) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081592141 seconds)
    (585/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.114347287 seconds)
    (586/608) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.103781317 seconds)
    (587/608) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.126838611 seconds)
    (588/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.093021212 seconds)
    (589/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.073581797 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.279131883 seconds)
    (591/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.103946652 seconds)
    (592/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.138970404 seconds)
    (593/608) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.072579547 seconds)
    (594/608) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080709132 seconds)
    (595/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.129726579 seconds)
    (596/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10391146 seconds)
    (597/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.134767994 seconds)
    (598/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.079677653 seconds)
    (599/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.15028067 seconds)
    (600/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.142480692 seconds)
    (601/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.100547287 seconds)
    (602/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.133833419 seconds)
    (603/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.070562104 seconds)
    (604/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.082994033 seconds)
    (605/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.088968462 seconds)
    (606/608) benchmarking ("mapr_access", "Matrix{Float64}")...
    done (took 0.126206999 seconds)
    (607/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084300909 seconds)
    (608/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.111024154 seconds)
  done (took 68.05320642 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.147165409 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.141570152 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.08013919 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.101231725 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.185579878 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.194503434 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.117951695 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.093711207 seconds)
  done (took 2.914138889 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hcat", 500)...
    done (took 0.06622027 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.081056842 seconds)
    (3/17) benchmarking ("vcat_setind", 5)...
    done (took 0.080665374 seconds)
    (4/17) benchmarking ("catnd_setind", 500)...
    done (took 0.208459445 seconds)
    (5/17) benchmarking ("vcat", 500)...
    done (took 0.096196679 seconds)
    (6/17) benchmarking ("vcat", 5)...
    done (took 0.066865973 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.072676681 seconds)
    (8/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.08123395 seconds)
    (9/17) benchmarking ("vcat_setind", 500)...
    done (took 0.067146629 seconds)
    (10/17) benchmarking ("hvcat", 5)...
    done (took 0.066770286 seconds)
    (11/17) benchmarking ("hcat_setind", 500)...
    done (took 0.101269009 seconds)
    (12/17) benchmarking ("hcat", 5)...
    done (took 0.067685947 seconds)
    (13/17) benchmarking ("hvcat", 500)...
    done (took 0.06712891 seconds)
    (14/17) benchmarking ("catnd", 500)...
    done (took 0.372179967 seconds)
    (15/17) benchmarking ("hcat_setind", 5)...
    done (took 0.065633434 seconds)
    (16/17) benchmarking ("catnd", 5)...
    done (took 0.071930258 seconds)
    (17/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.06643541 seconds)
  done (took 3.526490336 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.331358102 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.015399537 seconds)
    (3/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 1.242188039 seconds)
    (4/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.411452436 seconds)
    (5/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.144177289 seconds)
    (6/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.55334267 seconds)
    (7/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.075267549 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.082844549 seconds)
    (9/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.695300891 seconds)
    (10/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.367169433 seconds)
    (11/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.140375857 seconds)
    (12/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088437768 seconds)
  done (took 19.991582069 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 4)...
    done (took 0.075465705 seconds)
    (2/5) benchmarking ("setindex!", 3)...
    done (took 0.078772089 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.078285862 seconds)
    (4/5) benchmarking ("setindex!", 1)...
    done (took 0.07501953 seconds)
    (5/5) benchmarking ("setindex!", 2)...
    done (took 0.074256235 seconds)
  done (took 2.223660436 seconds)
done (took 119.797395344 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 0.083378616 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 0.172626784 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 0.067362154 seconds)
  done (took 2.114559489 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.080064962 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.078509079 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.078850496 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.07830169 seconds)
  done (took 2.159318152 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.07273685 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.075249975 seconds)
  done (took 1.986706493 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 0.223278236 seconds)
  (6/15) benchmarking "18129"...
  done (took 0.176824611 seconds)
  (7/15) benchmarking "20517"...
  done (took 0.090801018 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.080453902 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079020139 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079856113 seconds)
  done (took 2.091563998 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.069710752 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.070995897 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.071714483 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.071753101 seconds)
  done (took 2.126803556 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.066449086 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.066041788 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.068130568 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.071078977 seconds)
  done (took 2.116719514 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 0.082131324 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 0.086205323 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 0.116888136 seconds)
  done (took 2.130025044 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.083059963 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.081810991 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.077541508 seconds)
  done (took 2.059700514 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.107151349 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.096852443 seconds)
  done (took 2.041295752 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.078043729 seconds)
  done (took 1.919791098 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.087545522 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.097990987 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.139923656 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.10735921 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.140810247 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.126340505 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.076688994 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.077633494 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.072886349 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.072281943 seconds)
  done (took 2.835528162 seconds)
done (took 25.99674506 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.076925586 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.366734797 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360010083 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.087373586 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.672629436 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356826694 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.98493416 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091131876 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.101798849 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068059289 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085665004 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.648467412 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.97574582 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.326411059 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.960144307 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.320810347 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.651725853 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068251943 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067189835 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068086312 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.968969926 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067332524 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067680086 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068302345 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649637254 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.374505771 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069069181 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.320529574 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067974808 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072053899 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.357082351 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069263948 seconds)
  done (took 16.305533884 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.068011752 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124026118 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072454325 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.08456852 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.07021952 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069213801 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.070884694 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068645857 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.112326096 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068471844 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085907569 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067459471 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071425375 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069726121 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088672548 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067983044 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070435282 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070894566 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067954165 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06894517 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.08691721 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067579973 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068485805 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068527401 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068107551 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081378198 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069233417 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067890787 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068234595 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07242143 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07294263 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.0692206 seconds)
  done (took 4.255610709 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120239919 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126907046 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073379249 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.109487065 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11873196 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069864244 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.151731711 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092435682 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.116144259 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068453546 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086310068 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06781564 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.104591586 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069697956 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089241415 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068194341 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070310435 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068903482 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067801327 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068787438 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087680934 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067726089 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068501401 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068812245 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069167659 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083627762 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069325978 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068628447 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068439828 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072434519 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07392533 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070218471 seconds)
  done (took 4.53835625 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.06831974 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.070613262 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.077275313 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.080847709 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.06597433 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.06810398 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.068953368 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.066009508 seconds)
  done (took 2.430153046 seconds)
done (took 29.391136913 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.07910076 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.067101425 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.07045071 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.087248742 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073291322 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.069473936 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.063804983 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.073662659 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.07035395 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.070727287 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.072997977 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.066486466 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.069556912 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.065295901 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.071484351 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.065474746 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.071842011 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.069614116 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.070061141 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.071313213 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.067337283 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.070238045 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073629967 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.069993676 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.070220257 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.069883041 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.074133597 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.071191686 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.065640847 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.068189686 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.067680475 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.080898967 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.072131118 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.0717705 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.065227503 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.065293334 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.069931015 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.06738988 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.071744792 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.07432081 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.067935401 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.074356454 seconds)
  done (took 4.788566032 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.086705589 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.094011495 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.086745243 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081614593 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.107424236 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081012965 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.091039914 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078705798 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.077242283 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.090278553 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.072788441 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.078150757 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.080263624 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.075064738 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077865066 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.073668527 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.078960567 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.072905512 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.077580328 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.077494044 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.091250105 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.070718099 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.078060943 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.07892961 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.072568608 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.07876581 seconds)
  done (took 3.981490563 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.0714438 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.087646447 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.091924957 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.141545685 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.109174943 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.082258296 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.081423183 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092716803 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.100296809 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067268971 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071516811 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.09431801 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096509687 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074576379 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.10635238 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085477583 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.080028215 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069199822 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.074361268 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101827259 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.090214841 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.086071578 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.100104108 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.08799801 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.069742012 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.076784641 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074467828 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.083433512 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.074903543 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.079874404 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071598949 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070796466 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.068073118 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079920227 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.074089799 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.06523213 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089859995 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080539804 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.081792074 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.105914408 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.077508971 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069679192 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.09763905 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.133557277 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066790557 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.069946095 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.071288817 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.080503456 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068327071 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.097103942 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.086127369 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067041151 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.08611689 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068633321 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.06854509 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084243994 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.068888275 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.109969292 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079660363 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.073422243 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.087489508 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072211276 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.088919793 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067182113 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.078647533 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068016068 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068403731 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.065185359 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.103366145 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.074387305 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.120134382 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.067583234 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.0648006 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.079664025 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078636383 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.07437731 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.066986725 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.087329372 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079507452 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070790335 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.079033917 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.06980833 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.06996822 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.103058997 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.066291533 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.064799112 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.064883562 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.069138823 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070617277 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.067940203 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080732837 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066365025 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070240879 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.08316835 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067306607 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.067666308 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.069629227 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.068104699 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066423676 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077875989 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.070558209 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068743628 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079917268 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068140089 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070271152 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.082298261 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.076568041 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.06643988 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.068149128 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.069693387 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068805104 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.071496609 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070043878 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069110198 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.074181334 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074515949 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073576164 seconds)
  done (took 11.117603818 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.160499284 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.153742138 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.067998195 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.148481519 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076052187 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.071691915 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.14994281 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.088060215 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067857267 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.071909657 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.067041199 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.095791572 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.091184756 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.104824349 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.071960114 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068060267 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.09290834 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.101228541 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.151215807 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.146385494 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.091147153 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.075666217 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070233111 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069304539 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.069084408 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.076457214 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086415676 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076686157 seconds)
  done (took 4.576049973 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.073347388 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.081985914 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.071808792 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.091981437 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.086138644 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067528664 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069466648 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.068935016 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.085201932 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.074937793 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067870597 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.072109739 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.071296006 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.068637468 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.06806103 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.073883122 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074193272 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.066406597 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070974611 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072058455 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.07838627 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.093609618 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071549274 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.068196828 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.070605049 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067762756 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.074988749 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.077587457 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067096675 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.098152045 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.064828937 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.072446094 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081868515 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068514312 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067001567 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068069699 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.0674242 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067975874 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.068024689 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.065263217 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.065610004 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.072992307 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066011208 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.073580648 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.081779228 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.075552538 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.068720666 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072494063 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.069868635 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.064161397 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070898966 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071104042 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.069938526 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075917088 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.070838705 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.069966454 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068798739 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.098167151 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.073174743 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.066712236 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.067045077 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.0658104 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.069401294 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.075829608 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.084115477 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.069212479 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065597682 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067575206 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.072564787 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.081207866 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066914545 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.072500601 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064560137 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.067819279 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.070299867 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.070780903 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069115966 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065992554 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067302814 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067985837 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.06814197 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067248082 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.067099688 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070480736 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065290083 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.06591761 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.068161434 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.068992055 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.073621472 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.067740396 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.070335461 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.06888089 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066196729 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070333222 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.073088666 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070814226 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.087571851 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.076450567 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068431877 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065205996 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.08258374 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.069342028 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067021179 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.073302951 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.072145855 seconds)
  done (took 9.455022303 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.089407635 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069124253 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.087549676 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.094544476 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.078003271 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.072857013 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.081606026 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068326708 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.084077554 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.066791331 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076527872 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.06581403 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.081389333 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077153491 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069069364 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078021777 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.069933139 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.088034185 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082423294 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.065672948 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076692492 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080018191 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.080000656 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.085621369 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.085656713 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.085906242 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.079517231 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.069754619 seconds)
  done (took 4.099344261 seconds)
done (took 39.871625783 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.935988658 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.111571593 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.939817058 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.190180098 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.179806125 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.061693564 seconds)
  (7/12) benchmarking "nbody"...
  done (took 3.056155827 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.918552352 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 8.092334831 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.951653592 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.25252044 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.285573528 seconds)
done (took 68.907468022 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 6.96193683 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 2.064925127 seconds)
    (2/2) benchmarking "String"...
    done (took 2.139453034 seconds)
  done (took 6.05789511 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 2.511529312 seconds)
    (2/3) benchmarking "different length"...
    done (took 1.889822806 seconds)
    (3/3) benchmarking "different"...
    done (took 1.952495543 seconds)
  done (took 8.176818506 seconds)
  (4/7) benchmarking "replace"...
  done (took 3.031063192 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 6.553431327 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.1787808 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.9115385 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.916300011 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.329124189 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.719008499 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.388721027 seconds)
  done (took 32.844413679 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.238088686 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.175452517 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.64842818 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.681553635 seconds)
  done (took 16.642225816 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 2.517497341 seconds)
    (2/4) benchmarking "equal"...
    done (took 2.173424951 seconds)
    (3/4) benchmarking "different length"...
    done (took 2.174641379 seconds)
    (4/4) benchmarking "different"...
    done (took 2.166425081 seconds)
  done (took 10.937044845 seconds)
done (took 86.606486111 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.914267985 seconds)
    (2/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 6.950180434 seconds)
    (3/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.927756796 seconds)
    (4/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 2.062065471 seconds)
    (5/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.963997317 seconds)
    (6/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.93720274 seconds)
    (7/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.905998441 seconds)
    (8/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.907134048 seconds)
    (9/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.897839229 seconds)
    (10/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.895323495 seconds)
    (11/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.315002046 seconds)
    (12/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.905298435 seconds)
    (13/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.904754679 seconds)
    (14/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.947296546 seconds)
    (15/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.921504817 seconds)
    (16/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.925249657 seconds)
    (17/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.367441152 seconds)
    (18/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.922523095 seconds)
    (19/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.9223005 seconds)
    (20/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.535253355 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.41330819 seconds)
    (22/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.917148567 seconds)
    (23/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.917748572 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 2.13266396 seconds)
    (25/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.003732635 seconds)
    (26/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.920255687 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.958318658 seconds)
    (28/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.920485988 seconds)
    (29/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.581759859 seconds)
    (30/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.917520446 seconds)
    (31/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.917510578 seconds)
    (32/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.906787955 seconds)
  done (took 208.378442092 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.904787991 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.756998726 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.834569912 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.910024043 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.220383877 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.1016624 seconds)
    (7/36) benchmarking "scal!"...
    done (took 3.042907095 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.315691658 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.908664477 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.928818438 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.032639517 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.906979527 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.065050282 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.844574221 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.897857633 seconds)
    (16/36) benchmarking "herk!"...
    done (took 7.001609887 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.071943852 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.082230185 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.903460775 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.092323099 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.929057302 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.922925805 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.833791791 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.021943079 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.942460233 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.978496147 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.917250744 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.912559207 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.089222117 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.035896607 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.91578464 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.916925024 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.101383345 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.773701732 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.924323076 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.928228916 seconds)
  done (took 173.80858389 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.081574171 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.912577236 seconds)
    (2/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.970864693 seconds)
    (3/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 2.039916898 seconds)
    (4/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.657364502 seconds)
    (5/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.629412069 seconds)
    (6/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.907171963 seconds)
    (7/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.906057769 seconds)
    (8/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.904010403 seconds)
    (9/118) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.904284394 seconds)
    (10/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.911041469 seconds)
    (11/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.908928519 seconds)
    (12/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.972880014 seconds)
    (13/118) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.27243968 seconds)
    (14/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.92317818 seconds)
    (15/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.905266789 seconds)
    (16/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.906217314 seconds)
    (17/118) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.908209086 seconds)
    (18/118) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.227267808 seconds)
    (19/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.908185153 seconds)
    (20/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.906102851 seconds)
    (21/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.905832084 seconds)
    (22/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.970817855 seconds)
    (23/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.278725802 seconds)
    (24/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.041955157 seconds)
    (25/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.910596743 seconds)
    (26/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.916500431 seconds)
    (27/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 2.041454421 seconds)
    (28/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.917785337 seconds)
    (29/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.909413676 seconds)
    (30/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.041811505 seconds)
    (31/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.910826668 seconds)
    (32/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.984147028 seconds)
    (33/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 2.040467631 seconds)
    (34/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.918077086 seconds)
    (35/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.986926796 seconds)
    (36/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.914610626 seconds)
    (37/118) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.910793727 seconds)
    (38/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.391764761 seconds)
    (39/118) benchmarking ("3-arg mul!", 2)...
    done (took 1.910635756 seconds)
    (40/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.907297155 seconds)
    (41/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.908962987 seconds)
    (42/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.969827976 seconds)
    (43/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.907086919 seconds)
    (44/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 5.004338654 seconds)
    (45/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 2.001467789 seconds)
    (46/118) benchmarking ("5-arg mul!", 3)...
    done (took 1.907016885 seconds)
    (47/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.919493882 seconds)
    (48/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.982512479 seconds)
    (49/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.57061801 seconds)
    (50/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.908245665 seconds)
    (51/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.905945098 seconds)
    (52/118) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.90514403 seconds)
    (53/118) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.905465059 seconds)
    (54/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.905608371 seconds)
    (55/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.906265456 seconds)
    (56/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.686915191 seconds)
    (57/118) benchmarking ("5-arg mul!", 2)...
    done (took 1.910361148 seconds)
    (58/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.935217628 seconds)
    (59/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.50902407 seconds)
    (60/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.909686095 seconds)
    (61/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.906073512 seconds)
    (62/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.906372604 seconds)
    (63/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.905839103 seconds)
    (64/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.906960072 seconds)
    (65/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.914254207 seconds)
    (66/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.946573308 seconds)
    (67/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.712645546 seconds)
    (68/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.250576958 seconds)
    (69/118) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.294765685 seconds)
    (70/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.712212436 seconds)
    (71/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.910863453 seconds)
    (72/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.577202482 seconds)
    (73/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.962603099 seconds)
    (74/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.906884748 seconds)
    (75/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.984631066 seconds)
    (76/118) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.905980753 seconds)
    (77/118) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.906717226 seconds)
    (78/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.906078309 seconds)
    (79/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.906860318 seconds)
    (80/118) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.990981127 seconds)
    (81/118) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.98699336 seconds)
    (82/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.907192261 seconds)
    (83/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 2.042174177 seconds)
    (84/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.911526112 seconds)
    (85/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.906849154 seconds)
    (86/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.956745056 seconds)
    (87/118) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.498980678 seconds)
    (88/118) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 2.125225005 seconds)
    (89/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.923230186 seconds)
    (90/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.970031218 seconds)
    (91/118) benchmarking ("3-arg mul!", 3)...
    done (took 1.910646735 seconds)
    (92/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.910116897 seconds)
    (93/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.927876584 seconds)
    (94/118) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 4.057142965 seconds)
    (95/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.912048356 seconds)
    (96/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.910007524 seconds)
    (97/118) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.905362749 seconds)
    (98/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.116507786 seconds)
    (99/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.914893718 seconds)
    (100/118) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.930877404 seconds)
    (101/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.135543378 seconds)
    (102/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.986428482 seconds)
    (103/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.163065871 seconds)
    (104/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.169198153 seconds)
    (105/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.916007272 seconds)
    (106/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.911304905 seconds)
    (107/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.925602094 seconds)
    (108/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.91149916 seconds)
    (109/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.910500724 seconds)
    (110/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.92013904 seconds)
    (111/118) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.910930449 seconds)
    (112/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.880760955 seconds)
    (113/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.909510125 seconds)
    (114/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.911596661 seconds)
    (115/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.912068541 seconds)
    (116/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.912342109 seconds)
    (117/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.925318724 seconds)
    (118/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.910424628 seconds)
  done (took 424.17489231 seconds)
done (took 810.341071658 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 512)...
    done (took 2.607571337 seconds)
    (2/5) benchmarking ("identity", 4096)...
    done (took 2.682393232 seconds)
    (3/5) benchmarking ("identity", 2)...
    done (took 2.526271965 seconds)
    (4/5) benchmarking ("identity", 1024)...
    done (took 2.553357546 seconds)
    (5/5) benchmarking ("identity", 64)...
    done (took 2.525344517 seconds)
  done (took 14.742861306 seconds)
done (took 16.590922839 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 1.932981862 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.932434985 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 1.916157174 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.936166994 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 1.936930866 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 1.910240028 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 1.952436175 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 1.964861551 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 1.954076365 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 1.934989228 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 1.942703215 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 1.938536304 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 1.94101293 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 1.961881659 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.948879493 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 1.942769828 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 1.937760345 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 1.916566245 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 1.930879087 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 1.939774791 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 1.937260259 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.929200963 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 1.917291689 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 1.94316039 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.95101022 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 1.939321272 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 1.932361494 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.928972456 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 1.94049508 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.934205147 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 1.974875145 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 1.946003739 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 1.968729528 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.948097035 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 1.945567523 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.948217168 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.936595323 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 1.966270462 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 1.938193062 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 1.976035933 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 1.945106642 seconds)
  done (took 81.468676442 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.920256169 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.055648845 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.131059344 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.954256097 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.921204575 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.159033174 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.981575515 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 2.047965093 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 2.055279048 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.131645862 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.145340746 seconds)
  done (took 24.356714061 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.914243 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.05399302 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.135424691 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.959902805 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.91383804 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.141258661 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.987166341 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 2.060854159 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 2.057953684 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.136487571 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.148798307 seconds)
  done (took 24.369538054 seconds)
done (took 132.044047043 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 2.294288955 seconds)
    (2/2) benchmarking "11899"...
    done (took 1.948178697 seconds)
  done (took 6.094586928 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.915612118 seconds)
    (2/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.920345432 seconds)
    (3/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.064489041 seconds)
    (4/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.916696502 seconds)
    (5/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.917680677 seconds)
    (6/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.919998369 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.920561628 seconds)
    (8/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.917146849 seconds)
  done (took 17.346263012 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.917808442 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.917022812 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.916664118 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.918299395 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.916907271 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.917343266 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.916441821 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.917041171 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.916847789 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.917906259 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.916587328 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.919232349 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.916596623 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.916926162 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.917813006 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.91820452 seconds)
  done (took 32.530660259 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("minimum", (8,))...
    done (took 1.918209757 seconds)
    (2/24) benchmarking ("sumabs", (4,))...
    done (took 1.917282604 seconds)
    (3/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.917758911 seconds)
    (4/24) benchmarking ("minimum", (2,))...
    done (took 1.917285037 seconds)
    (5/24) benchmarking ("sum", (8,))...
    done (took 1.91885469 seconds)
    (6/24) benchmarking ("sumabs", (2,))...
    done (took 1.917900946 seconds)
    (7/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.919940212 seconds)
    (8/24) benchmarking ("minimum", (4, 4))...
    done (took 1.918341908 seconds)
    (9/24) benchmarking ("sumabs", (8,))...
    done (took 1.918184385 seconds)
    (10/24) benchmarking ("sum", (2, 2))...
    done (took 1.918402922 seconds)
    (11/24) benchmarking ("minimum", (2, 2))...
    done (took 1.918020501 seconds)
    (12/24) benchmarking ("sum", (4,))...
    done (took 1.91755491 seconds)
    (13/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.917895925 seconds)
    (14/24) benchmarking ("sumabs", (16,))...
    done (took 1.918819281 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.918646405 seconds)
    (16/24) benchmarking ("sum", (4, 4))...
    done (took 1.918311793 seconds)
    (17/24) benchmarking ("sum", (8, 8))...
    done (took 1.917844461 seconds)
    (18/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.919230286 seconds)
    (19/24) benchmarking ("minimum", (8, 8))...
    done (took 1.919934435 seconds)
    (20/24) benchmarking ("sum", (16, 16))...
    done (took 1.918677945 seconds)
    (21/24) benchmarking ("minimum", (4,))...
    done (took 1.91940214 seconds)
    (22/24) benchmarking ("sum", (16,))...
    done (took 1.918310138 seconds)
    (23/24) benchmarking ("minimum", (16, 16))...
    done (took 1.924024062 seconds)
    (24/24) benchmarking ("sum", (2,))...
    done (took 1.905933506 seconds)
  done (took 47.890158588 seconds)
done (took 105.721763038 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.130102804 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.506149704 seconds)
  done (took 8.491016117 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.922661038 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.918563732 seconds)
  done (took 5.763935067 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.919700834 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.919830045 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.92001553 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.920335289 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.920807505 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.920552187 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.908137821 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.920839202 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.919811643 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.920057332 seconds)
  done (took 21.043957734 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.918926321 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.920884804 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.91924783 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.919005777 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.919853805 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.919888834 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.919772494 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.920881008 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.919736092 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.920717092 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.920613846 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.919958106 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.920555059 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.919880409 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.920869944 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.919799404 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.920265554 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.920550704 seconds)
  done (took 36.415972278 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.920828183 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.920390558 seconds)
  done (took 5.684052025 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.908324313 seconds)
    (2/7) benchmarking "second"...
    done (took 1.918069501 seconds)
    (3/7) benchmarking "month"...
    done (took 1.920234567 seconds)
    (4/7) benchmarking "year"...
    done (took 1.921044219 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.920647353 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.921064532 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.921517537 seconds)
  done (took 15.270163816 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.921715889 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.085149321 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.136880197 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.502785343 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.908908266 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.923734357 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.801111518 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.92408817 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.924810357 seconds)
  done (took 20.985306465 seconds)
done (took 115.480593771 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.742229386 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.912031566 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.208623915 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.998508403 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.948770359 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.220374118 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.955701555 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.470866596 seconds)
done (took 43.313195912 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 7.038563954 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.917875127 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.95399803 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.955268491 seconds)
  done (took 22.683252356 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.922089636 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.262131563 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.942856036 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.890834425 seconds)
  done (took 22.885478142 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.300352899 seconds)
    (2/2) benchmarking "read"...
    done (took 2.280969516 seconds)
  done (took 6.442081647 seconds)
done (took 60.907692478 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.921475423 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.922529971 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.922248756 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.922583184 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.922876953 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.921950018 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.923007817 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.923008406 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 1.922596138 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.923762417 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.922763548 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.922806774 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.922719393 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.923333742 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.923273256 seconds)
    (16/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.924628308 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.923845883 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.922341292 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.923492709 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.922995984 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.923601762 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.922899045 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.923560735 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.923211169 seconds)
  done (took 48.009907044 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.924510347 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.923401979 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.922804561 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.923941325 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.923940492 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.925224085 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.924160281 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.923532735 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.924492383 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.923866765 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.924320291 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.9237017 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.924007389 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.923408921 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.923672054 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.923122459 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.925422022 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.925309014 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.924456564 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.925005174 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.924877035 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.925748421 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.923566894 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.923811888 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.925107991 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.923555937 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.925834506 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.924997592 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.924817899 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.924888268 seconds)
  done (took 59.589267486 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.92686128 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.924303411 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.925528487 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.924698139 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.925850765 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.924542138 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.927165106 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.925871088 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.926061109 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.925775173 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.926222503 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.926462829 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.926570768 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.89864968 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.926030896 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.926576702 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.926499179 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.927066078 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.92666278 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.926419449 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.925937261 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.927202766 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.926237006 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.926860596 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.927709647 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.92760684 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.926690895 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.927080208 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.926634111 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.926639157 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.927885316 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.926536562 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.92582463 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.927086992 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.927393085 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.926430201 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.927141911 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.92738353 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.927672104 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.927600939 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.92528631 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.926996368 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.927391915 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.927742178 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.927197537 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.927383566 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.927691728 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.928613026 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.927772434 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.929230537 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.928760017 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.927937154 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.927675099 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.929099635 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.928455299 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.92905247 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.9276862 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.928506677 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.92831893 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.92728053 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.927529578 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.927712134 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.929634066 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.929653715 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.929200978 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.928850589 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.928394242 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.928367805 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.927996388 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.931406577 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.927693377 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.928332798 seconds)
  done (took 140.598516224 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.928375998 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.929317552 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.929064645 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.92928684 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.930437778 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.928577002 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.929230506 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.92940837 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.930632329 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.928137302 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.929067733 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.929256379 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.929192898 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.929366903 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.929935574 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.929006928 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.930572848 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.930282779 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.929580084 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.930405955 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.92903342 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.928907992 seconds)
  done (took 44.311518113 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.930186926 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.929871661 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.930022306 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.929578631 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.930354117 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.930068257 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.931000298 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.929102553 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.931421223 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.930337939 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.931486655 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.930542512 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.929681752 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.929629414 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.930487103 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.93046098 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.929626553 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.930409315 seconds)
  done (took 36.609395795 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.931685976 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.930613579 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.931704899 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.931124558 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.930310451 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.93146812 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.930503608 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.931117154 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.931317994 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.931778933 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.931021232 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.93228163 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.931157295 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.930699794 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.93163302 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.931878798 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.931368147 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.931296151 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.931335932 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.931144825 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.933057579 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.931916747 seconds)
  done (took 44.356108676 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.931326849 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.931758077 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.93192909 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.932796334 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.931530577 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.931789843 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.932113126 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.931273796 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.931451576 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.931803958 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.933849503 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.93268 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.932004408 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.932268714 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.932441712 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.932372506 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.933025628 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.933119283 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.932992824 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.933474804 seconds)
  done (took 40.512656907 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.932782957 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.932549338 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.932084909 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.932379079 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.930909212 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.93197433 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.93372554 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.932661486 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.932025662 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.93320161 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.933027049 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.932337756 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.932712213 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.932867713 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.9328781 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.932762626 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.932602789 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.932331362 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.933378672 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.93317608 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.933095941 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.933350382 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.932524915 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.932922038 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.932772308 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.933349804 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.932379192 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.933694404 seconds)
  done (took 55.985101848 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.933280582 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.934251135 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.933922858 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.934542232 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.934729909 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.933708123 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.93481535 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.934887297 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.934412983 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.934690655 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.934405176 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.934851961 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.933464542 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.935218802 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.934597773 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.934699251 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.934161067 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.934406666 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.934066997 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.935616978 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.935473697 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.934961853 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.935212274 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.934395946 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.934673143 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.934747762 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.93519872 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.934950501 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.935322234 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.935241914 seconds)
  done (took 59.90833182 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.956717135 seconds)
    (2/2) benchmarking "in"...
    done (took 1.955417572 seconds)
  done (took 5.781492476 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.935880858 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.935430489 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.935080218 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.935234647 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.935921242 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.935596214 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.936714513 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.936466981 seconds)
  done (took 17.356046923 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.937138061 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.938735399 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.937810596 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.937313491 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.935248209 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.942547405 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.939073371 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.937320012 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.937460943 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.938470775 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.939192264 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.939493708 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.943530972 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.94091196 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.938331903 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.938909557 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.936982844 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.937365099 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.937780357 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.937974001 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.939062228 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.936614813 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.937806471 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.935895145 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.938046102 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.938603424 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.946647798 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.938363784 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.938179599 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.938823485 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.943629343 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.939030879 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.936398809 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.939419355 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.938474704 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.938511497 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.944356777 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.936529559 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.93753447 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.939269486 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.939666674 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.939275509 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.941765098 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.945397906 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.937786926 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.937722992 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.93888747 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.937850673 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.939554897 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.941261722 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.946256936 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.937044423 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.939625311 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.939795031 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.939922041 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.938164343 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.938868491 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.939993737 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.943907148 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.94629734 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.941618307 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.959197705 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.946418775 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.938032109 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.93911296 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.948475699 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.961623143 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.940795067 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.941441608 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.940238902 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.946292821 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.941959963 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.940835351 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.940753703 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.952452891 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.945798183 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.940039381 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.941156926 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.941231275 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.939331144 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.941922214 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.938633158 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.939618405 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.939951849 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.949344528 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.962980534 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.939274068 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.939987512 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.942451254 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.943140546 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.943769781 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.942581929 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.942099969 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.941286313 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.94063429 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.945917007 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.939941612 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.94028902 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.941891084 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.948470912 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.94292867 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.941502024 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.944081903 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.946978656 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.942231614 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.940913494 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.941459867 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.94113028 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.948908912 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.941477898 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.941719678 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.942937866 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.943356133 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.945115986 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.943164795 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.944775168 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.948987385 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.948108128 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.944588379 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.946285536 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.944421105 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.944002178 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.951313081 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.964596342 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.943350743 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.944847106 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.946606784 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.952979794 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.945522064 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.944310841 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.945231422 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.943789073 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.943369116 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.944424593 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.942829269 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.942585611 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.944560185 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.942913417 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.944147452 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.942996451 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.946821825 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.944217357 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.944835262 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.943052501 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.947484508 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.942703223 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.945665363 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.950041866 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.944365532 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.943677971 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.944444212 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.945322093 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.946897962 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.943804823 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.944566232 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.944675527 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.942911627 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.942307967 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.946285912 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.943705738 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.944898625 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.945840211 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.949685426 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.943667717 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.94346034 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.947135228 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.943927029 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.943504905 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.943988641 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.944875095 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.946535171 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.943621695 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.949246959 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.945958241 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.946101002 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.944085228 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.946083274 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.945355882 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.947803452 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.954085031 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.947554549 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.952670925 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.946536265 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.952158883 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.946361357 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.946606086 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.945960455 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.945273186 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.944688427 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.945599966 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.944934859 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.948786516 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.964625141 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.956026748 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.947503818 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.948846379 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.952223797 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.951200173 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.951054769 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.947475926 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.94621429 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.947610203 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.947019827 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.945510187 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.947398107 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.94902719 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.946008305 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.947039798 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.949122728 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.945486505 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.947196562 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.947130739 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.94846317 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.947696729 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.947773589 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.947835841 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.947851898 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.950584669 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.954734902 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.949210534 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.948699579 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.946390751 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.949205163 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.947329584 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.948529996 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.947874742 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.949952251 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.948029734 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.947518328 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.954145285 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.949586302 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.949343552 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.948374555 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.948926036 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.949153659 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.948511409 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.950269629 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.957208406 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.950557689 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.948860565 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.953057415 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.948854033 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.94990139 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.948019191 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.94921684 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.948566612 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.948345309 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.948106084 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.950137321 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.955437065 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.948999461 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.949237323 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.948844135 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.951821594 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.951166688 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.9503015 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.949075501 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.952833073 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.956534985 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.95440046 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.95095673 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.955145781 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.950941973 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.952059051 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.954744464 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.949838168 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.96114655 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.957760342 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.951002673 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.950399462 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.948583258 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.951185754 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.951716295 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.948772486 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.956711963 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.95078624 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.95205836 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.954541813 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.948847835 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.948271074 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.955823367 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.950739501 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.952282954 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.950789454 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.950284274 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.950391096 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.951444893 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.952544704 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.950016694 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.951657589 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.955544959 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.95172485 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.950712125 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.95158845 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.958058517 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.952046685 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.951081532 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.957374674 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.951614396 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.940845018 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.950673632 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.952273128 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.952348886 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.952116258 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.952588757 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.954075695 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.950793381 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.954248955 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.960738843 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.953786566 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.959305735 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.953083775 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.961842723 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.950712791 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.952353895 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.950690186 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.9536803 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.958958196 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.953330993 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.953204027 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.958195808 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.954616677 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.954852561 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.955260379 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.953264735 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.951580921 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.951394525 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.955623574 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.956932106 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.955254847 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.953687232 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.951886743 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.953891347 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.953791885 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.955136773 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.953481255 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.953274545 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.954494342 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.953820753 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.952233991 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.951878434 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.952672361 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.952160203 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.953576848 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.954845606 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.960062257 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.953277198 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.954836723 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.956205805 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.953947866 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.962114947 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.952039884 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.941001184 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.956043887 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.954846471 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.958315672 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.954332406 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.953813258 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.955123065 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.955118848 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.95587574 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.96361556 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.961106666 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.959646676 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.955709831 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.953972287 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.954552974 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.96383707 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.977841952 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.953531986 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.956449417 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.959234422 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.96137459 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.955941969 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.959818006 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.957413695 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.961901339 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.955044496 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.955685912 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.958529323 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.965685932 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.954584427 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.956916809 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.956096767 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.9587619 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.957942923 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.95609117 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.957827099 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.957972408 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.957715518 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.966700136 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.956681012 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.958431465 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.95525488 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.956170882 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.954744183 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.956695435 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.956956327 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.956498426 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.955826898 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.955717048 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.957188501 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.961279737 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.957797963 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.958870105 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.964700591 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.956315064 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.956607745 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.959391131 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.955766796 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.957629391 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.955853792 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.956676172 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.961270992 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.956770731 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.959577588 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.959670332 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.964407269 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.958179772 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.95722089 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.958189612 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.959342091 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.957981055 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.9569288 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.95803664 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.965611541 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.959428498 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.967415315 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.966738217 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.956464667 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.960238991 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.963608007 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.964259381 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.956348304 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.958703639 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.957300571 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.959388523 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.959364826 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.958081264 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.957263187 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.960413891 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.961805711 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.958366116 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.960169081 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.95717072 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.960001962 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.959920861 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.960108457 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.963060671 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.959098763 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.959450709 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.959457444 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.953190474 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.958170596 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.961074697 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.957863019 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.960536619 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.959671011 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.959938293 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.965033186 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.961647801 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.960180855 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.96010076 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.959191846 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.961679416 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.961022762 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.96107382 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.959411177 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.962661455 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.967699241 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.959332835 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.960221794 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.961263242 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.962122148 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.959618585 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.959764894 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.95926951 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.960412286 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.966537658 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.960375279 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.959578778 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.962194245 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.961033689 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.965284213 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.961611387 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.963996626 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.960319232 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.962477803 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.960806026 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.963269776 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.970179124 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.963054086 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.962942131 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.969196705 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.965022883 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.961639586 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.961894868 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.962135177 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.963431746 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.963053838 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.963505961 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.961064886 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.962218544 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.960363451 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.961973772 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.961537033 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.963217335 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.962093018 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.962535458 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.964683152 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.969564297 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.969179454 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.961465981 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.961253263 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.961285395 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.963769198 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.974163666 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.961781665 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.960916831 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.961449194 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.962987448 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.963355508 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.967357419 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.971304249 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.965263064 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.961481948 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.966765686 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.978816015 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.964166863 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.971712908 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.991310559 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.965336422 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.962258965 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.961693743 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.965403741 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.962041865 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.966306658 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.96234446 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.969254834 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.962905404 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.964598702 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.969971486 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.964721636 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.964151697 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.962418323 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.965137286 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.968878344 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.963385919 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.97081691 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.962105196 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.96565856 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.965256207 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.967477706 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.964358383 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.965452509 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.964121864 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.964987468 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.965678947 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.963631824 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.971196748 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.963342131 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.964684628 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.976130335 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.97656003 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.951591829 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.964696441 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.964346653 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.968199869 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.96328932 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.958196479 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.966228677 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.972998437 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.967297547 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.971944807 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.964936637 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.964064504 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.964797806 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.965439768 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.951634772 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.975986854 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.97536589 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.949172816 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.951897048 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.971825584 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.965643823 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.971265147 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.957753281 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.966500186 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.965457598 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.964943828 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.967017269 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.965490335 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.966240866 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.96594497 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.973880342 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.966285501 seconds)
  done (took 1165.971563333 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.967279185 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.966448428 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.966811465 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.966914804 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.966792918 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.966853202 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.966438422 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.966833866 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.966763894 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.966615342 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.967153218 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.967288026 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.967007803 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.96741329 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.966270686 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.967261737 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.968056256 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.96707783 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.966278065 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.967171072 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.966900807 seconds)
  done (took 43.205919615 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.967889349 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.966914296 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.954426334 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.941504377 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.96187486 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.967805028 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.966636459 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.967271099 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.967577911 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.967186185 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.968978559 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.963692268 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.968915826 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.967741067 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.966331258 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.951582048 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.958384964 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.968808404 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.969332755 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.968116181 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.967982288 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.967804698 seconds)
  done (took 45.117168553 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.967565822 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.966427326 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.968244333 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.969562169 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.968715937 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.967794029 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.968908276 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.971259178 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.968894108 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.970447608 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.973148124 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.977967085 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.969944103 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.974384403 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.969079593 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.967599107 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.115030951 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.968241919 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.968890727 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.969001217 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.96747549 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.974586367 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.969328099 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.969114476 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.970242918 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.968615049 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.970257652 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.970832905 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.971288548 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.971792787 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.97249656 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.970306149 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.969444573 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.971697827 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.970347692 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.972454689 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.972796312 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.969374952 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.969717023 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.969710934 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.978543775 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.993002116 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.970678979 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.968582806 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.976177467 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.969869152 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.97036812 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.972867833 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.978603329 seconds)
  done (took 98.63463245 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.970148368 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.971368901 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.968990824 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.970838217 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.970433215 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.970164601 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.970500467 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.970254068 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.970245966 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.970269841 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.970843196 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.97085475 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.970236004 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.970218533 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.970955347 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.969686432 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.971126404 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.970621272 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.97019774 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.971153671 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.970717706 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.970249972 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.97125897 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.970902112 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.971629124 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.971121921 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.972170369 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.970893703 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.972128313 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.968958429 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.965822476 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.961662393 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.971543441 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.971469595 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.971808862 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.972341226 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.971752246 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.972117404 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.972727049 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.972275846 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.971552318 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.971696593 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.972148645 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.972525601 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.971406497 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.972580072 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.971401025 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.972313472 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.971571787 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.971672734 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.973577068 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.972028016 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.972271368 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.973257823 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.971550336 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.972851976 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.972040464 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.972390684 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.973241835 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.973408545 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.973266476 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.972592857 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.972524439 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.972628297 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.972528863 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.972849466 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.972744552 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.973922396 seconds)
  done (took 135.956248533 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.973204415 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.973442924 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.972180697 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.971971683 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.972838114 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.972202205 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.972808591 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.972302077 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.973634242 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.973438477 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.972717667 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.973114414 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.973476583 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.973766775 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.973332921 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.973221176 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.972310623 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.973182222 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.973506399 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.973148829 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.973387301 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.972656462 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.972656495 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.973525636 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.974623643 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.973202342 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.974005076 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.973990152 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.973801502 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.973897234 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.973377153 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.974151948 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.974884998 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.97417431 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.973712918 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.974166505 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.973801452 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.973629696 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.974993647 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.974237312 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.973661605 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.975180749 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.974747386 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.973936228 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.974689324 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.974649684 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.97433625 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.976350706 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.976484024 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.97424502 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.974998802 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.974120673 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.975302526 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.975331535 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.976271193 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.976538446 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.973933472 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.975320433 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.975317826 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.975413254 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.975285064 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.976935125 seconds)
  done (took 124.297056332 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.976705344 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.976009107 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.976999735 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.976912905 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.977636923 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.976443035 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.976900062 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.977402636 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.976821314 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.97683409 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.976908851 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.977764952 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.978403423 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.976671076 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.977054826 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.977897021 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.976964443 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.97796338 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.976266864 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.97738486 seconds)
  done (took 41.452310507 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.977268589 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.977889466 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.977529608 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.977724177 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.97981091 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.977820885 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.978184561 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.977755676 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.978256267 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.976995161 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.978477878 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.977716329 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.977694788 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.977632259 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.977862022 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.977673678 seconds)
  done (took 33.556454623 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.978334579 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.978292664 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.976488911 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.969854772 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.975794431 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.978858268 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.974139997 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.978453736 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.978255562 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.975096247 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.973000884 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.979420169 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.978621368 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.978082124 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.978819482 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.980170793 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.979380035 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.978625933 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.979449907 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.977856303 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.979699747 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.979471079 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.979534656 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.980299821 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.978219567 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.979278182 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.979024406 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.978813823 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.980150064 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.979734469 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.980757718 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.980180549 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.979767299 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.980491406 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.977655059 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.98009805 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.980001488 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.98023261 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.980728141 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.979668817 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.979411519 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.98061057 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.980084707 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.980953613 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.980087135 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.980119913 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.980459989 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.980157169 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.980472726 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.981317364 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.980066639 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.978839131 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.953451468 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.977141 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.954312764 seconds)
  done (took 110.701552111 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.980836745 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.97991523 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.981029684 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.980567104 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.980287243 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.980915746 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.98107393 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.980644359 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.981276834 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.981717255 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.981596575 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.981579381 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.981220344 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.980689644 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.981568516 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.981414985 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.982426481 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.981963627 seconds)
  done (took 37.568236012 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.980628339 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.981972778 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.981376737 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.981938624 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.981821989 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.981077227 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.982302876 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.983008494 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.981805802 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.981415014 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.98247452 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.981747688 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.982697923 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.98230373 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.982702526 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.983041101 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.982597316 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.982704907 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.982176779 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.982085098 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.982418964 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.982713664 seconds)
  done (took 45.522093304 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.982915631 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.982861012 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.996896588 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 2.004230196 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 2.003362937 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 2.016534841 seconds)
  done (took 13.901747306 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.983902675 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.982398388 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.985620827 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.9830914 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.983871833 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.983043861 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.982578499 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.983283597 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.98367727 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.984342584 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.983627116 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.983555679 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.982748339 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.983285236 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.983280889 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.983533967 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.983294961 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.984531335 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.983928267 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.983728258 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.98370255 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.983701146 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.984229289 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.983727943 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.952005185 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.984543579 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.9852269 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.984966682 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.984323052 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.984093526 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.984104501 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.984381217 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.983191463 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.984320879 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.984021039 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.98560761 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.98457241 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.985447754 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.984706449 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.985459393 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.985363787 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.985485282 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.987006542 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.985604648 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.985039528 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.985186607 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.959198079 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.982251603 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.98616662 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.985230904 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.985587934 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.97178786 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.985066472 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.986119952 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.986292871 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.986319715 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.986038096 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.985973328 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.985545239 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.986672604 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.985586824 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.985855091 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.985905442 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.986938966 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.986182545 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.986469323 seconds)
  done (took 132.83425088 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.986617884 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.986956744 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.986112875 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.985978676 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.987476237 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.98607712 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.987381328 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.986547953 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.986339405 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.986113333 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.986358586 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.987130848 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.986156032 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.986097973 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.986291975 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.987391699 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.986270901 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.986739434 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.986398851 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.987102499 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.986905742 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.986864967 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.987614463 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.987095658 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.98695747 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.988728624 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.987214406 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.988347862 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.987219558 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.987208728 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.987571987 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.988386896 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.987782699 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.987272024 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.987955869 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.987422499 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.988154534 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.988209967 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.988637932 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.987953884 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.988181714 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.988568664 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.988040654 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.989027366 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.989583995 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.988629013 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.98834735 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.987591531 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.98826539 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.988232994 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.988788903 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.989073679 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.989039624 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.988225591 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.989187979 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.988263285 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.989316706 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.989507865 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.988996688 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.988330227 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.989612181 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.989687652 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.989952765 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.989017361 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.989393173 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.989584859 seconds)
  done (took 133.116133428 seconds)
done (took 2716.716993162 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 7.049678313 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.056120463 seconds)
  done (took 16.027852362 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.15448722 seconds)
    (2/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 7.053283338 seconds)
    (3/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.177165076 seconds)
    (4/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.109290095 seconds)
    (5/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 7.023481906 seconds)
    (6/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 7.006347488 seconds)
    (7/16) benchmarking ("transpose", (600, 600))...
    done (took 1.991578575 seconds)
    (8/16) benchmarking ("transpose", (600, 400))...
    done (took 1.992705573 seconds)
    (9/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.087819629 seconds)
    (10/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.991572221 seconds)
    (11/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 7.011459276 seconds)
    (12/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.992450418 seconds)
    (13/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.993468394 seconds)
    (14/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.992536661 seconds)
    (15/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.99198893 seconds)
    (16/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.99227943 seconds)
  done (took 54.492574344 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.993953257 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.995972975 seconds)
    (3/18) benchmarking ("IJV", 10)...
    done (took 1.994812838 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.992034397 seconds)
    (5/18) benchmarking ("Bidiagonal", 100)...
    done (took 2.005668876 seconds)
    (6/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.071964809 seconds)
    (7/18) benchmarking ("IJV", 100)...
    done (took 2.015596206 seconds)
    (8/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.99681214 seconds)
    (9/18) benchmarking ("Tridiagonal", 100)...
    done (took 2.008221074 seconds)
    (10/18) benchmarking ("IV", 1000)...
    done (took 2.027547756 seconds)
    (11/18) benchmarking ("SymTridiagonal", 100)...
    done (took 2.01436528 seconds)
    (12/18) benchmarking ("Diagonal", 10)...
    done (took 1.999170598 seconds)
    (13/18) benchmarking ("Diagonal", 100)...
    done (took 1.999366498 seconds)
    (14/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.998616706 seconds)
    (15/18) benchmarking ("IJV", 1000)...
    done (took 2.08127923 seconds)
    (16/18) benchmarking ("Diagonal", 1000)...
    done (took 2.041754915 seconds)
    (17/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.052409514 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.067328884 seconds)
  done (took 38.279299747 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.071577865 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 7.006859501 seconds)
  done (took 11.008829042 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 7.004869578 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 7.0135207 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.999384805 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 7.000780167 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 7.011517793 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 7.020973259 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 7.004486769 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.999947781 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 7.011522251 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.995092199 seconds)
  done (took 71.988247651 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.996130519 seconds)
    (2/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.995743942 seconds)
    (3/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.250477303 seconds)
    (4/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 2.005917193 seconds)
    (5/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 2.000398145 seconds)
    (6/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 2.019467342 seconds)
    (7/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.997066102 seconds)
    (8/54) benchmarking ("spmat", "range", 100)...
    done (took 2.023238358 seconds)
    (9/54) benchmarking ("spmat", "integer", 10)...
    done (took 2.000735166 seconds)
    (10/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.990609664 seconds)
    (11/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 2.00505805 seconds)
    (12/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.2570744 seconds)
    (13/54) benchmarking ("spmat", "logical", 10)...
    done (took 2.006233795 seconds)
    (14/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.993239861 seconds)
    (15/54) benchmarking ("spmat", "array", 100)...
    done (took 2.334535337 seconds)
    (16/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 2.007308011 seconds)
    (17/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 2.000354317 seconds)
    (18/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 2.025558144 seconds)
    (19/54) benchmarking ("spvec", "logical", 1000)...
    done (took 2.025382978 seconds)
    (20/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.99860419 seconds)
    (21/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 2.000828155 seconds)
    (22/54) benchmarking ("spmat", "range", 10)...
    done (took 1.996528012 seconds)
    (23/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.156851968 seconds)
    (24/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.67924899 seconds)
    (25/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.995889758 seconds)
    (26/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.99873893 seconds)
    (27/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.999877444 seconds)
    (28/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.982196638 seconds)
    (29/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.992819507 seconds)
    (30/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.995496131 seconds)
    (31/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.99762522 seconds)
    (32/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.981585655 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.997562003 seconds)
    (34/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.998667094 seconds)
    (35/54) benchmarking ("spvec", "range", 10000)...
    done (took 2.002982379 seconds)
    (36/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.999014529 seconds)
    (37/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.491787932 seconds)
    (38/54) benchmarking ("spmat", "array", 10)...
    done (took 2.015579447 seconds)
    (39/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 2.00251727 seconds)
    (40/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.070879556 seconds)
    (41/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 2.041271898 seconds)
    (42/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 2.001268469 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.803481013 seconds)
    (44/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.998040838 seconds)
    (45/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.993935431 seconds)
    (46/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 2.000009201 seconds)
    (47/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.67875371 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 2.083681736 seconds)
    (49/54) benchmarking ("spmat", "integer", 1000)...
    done (took 2.000950202 seconds)
    (50/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.16656863 seconds)
    (51/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.35683563 seconds)
    (52/54) benchmarking ("spvec", "range", 100000)...
    done (took 2.013082452 seconds)
    (53/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.158828682 seconds)
    (54/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.136693087 seconds)
  done (took 139.649471387 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.995957521 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.230434331 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.147203189 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.997307263 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.252972449 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.205240814 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 7.001683707 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.04216233 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 7.002249802 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.196964541 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.245995816 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.102290702 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.997797053 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.996992907 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.998351914 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.993398102 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.146432947 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.065033582 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.999729793 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.983433297 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.020283023 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.198771565 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.116767326 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 7.001678348 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 2.022077968 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.20418496 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.117436804 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.099836976 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.778834425 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.995139117 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.058017174 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.996939747 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.994497708 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.995219212 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.148568619 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.091080404 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.080527412 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.998382391 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.995977975 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.995538961 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.670089171 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.195983526 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.091602255 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.118431647 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.243553796 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.212967914 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.608038233 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.995045399 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.623429447 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.161842819 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.203500302 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.205369734 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.114605572 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.999268022 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.553502045 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.996879079 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.996801956 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.218583325 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.215006686 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.09608114 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.999175666 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.997821289 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.997390606 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.233401085 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 7.000099732 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.088683918 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.999939477 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.998710364 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.089167973 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.098800438 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.221684015 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.218077491 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.028880209 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.321741243 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.486232144 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.200020634 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.062663815 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.218136482 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 7.002648978 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.9978507 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.07633142 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.834791982 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.249192614 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.241518146 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.196592419 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.027740715 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.649773129 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.998041273 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.185259578 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.188683745 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.233869691 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.243522044 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.233355425 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.354961096 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.998373856 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.998943229 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.306454445 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.11438607 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.953175118 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.356394869 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.227715709 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.487404115 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.024407044 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.284125547 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.127533291 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 7.00252014 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.64602669 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 7.000338737 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.204531312 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.040065726 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 7.001084652 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.999449475 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.187679575 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.909491056 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.999705845 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.943172848 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 2.059737538 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 7.002875829 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.203915507 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 7.001858619 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.243006006 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 7.002940053 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.231497263 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.642417065 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.030882041 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.228710074 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.241801245 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.63054112 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.293492243 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.24195219 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.114896837 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.274746545 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 7.005137843 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 7.001797759 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.26205463 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 7.004724589 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.999565108 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.169946518 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 7.00373143 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.603044179 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 7.004965718 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.264824858 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.024069216 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.227861151 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.008205738 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.238262726 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.035029568 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.050324558 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 7.006597547 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.127919428 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 7.002811361 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.833798538 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.159199917 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.005803251 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 7.001719814 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.755043006 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 7.001694594 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.156500864 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.227037345 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.024008543 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.070948077 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.571168123 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 7.000462282 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.088606332 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.024404649 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.274690037 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 7.003353801 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.248425658 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.984458167 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.483212299 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 7.001596736 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.237000733 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.238687322 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 7.004932814 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 7.002122138 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.84553852 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 7.002491325 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 7.001516927 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.159258536 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.450209008 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.90904669 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.199899747 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 7.008210226 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.13092783 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 7.00840211 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 4.079153041 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.347463979 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 7.001850811 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 7.003002987 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 7.00409873 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 7.002248296 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 7.002989042 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.2622883 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.030510833 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.434490664 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.139335113 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.259264277 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.310035204 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.200058257 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.043135175 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 7.008919299 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.225522214 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 7.00658566 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 2.066758235 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 7.006648489 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.022719068 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.233441286 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 7.009086367 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.208696153 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.236788452 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.983546682 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.050692494 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 7.006174557 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.005490577 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.983573443 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.148383317 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.09294269 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 7.00662423 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 7.003996182 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.117555637 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.124431021 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.190999514 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.820513247 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.14478344 seconds)
  done (took 931.180619615 seconds)
done (took 1264.550146458 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 7.004305133 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 7.010608915 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 7.012335467 seconds)
    (4/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 7.004684449 seconds)
  done (took 29.968903363 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 2.005712886 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 2.006165435 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 2.004791071 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 2.00733386 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 2.006115664 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 2.004853122 seconds)
  done (took 13.971814888 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 7.004622893 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 7.009045517 seconds)
    (3/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 7.011946153 seconds)
  done (took 22.963464048 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((10000000,), 2)...
    done (took 2.429589203 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.408840231 seconds)
    (3/4) benchmarking ((1000, 1000), 1)...
    done (took 2.078880623 seconds)
    (4/4) benchmarking ((1000, 1000), 2)...
    done (took 2.149034993 seconds)
  done (took 11.003478214 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 2.009927954 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 2.005422673 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 2.005583816 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 2.006345655 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 2.006864932 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 2.00595375 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 2.008217052 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 2.007266097 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 2.007355878 seconds)
  done (took 20.007491414 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.679781903 seconds)
done (took 104.531795462 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.266383032 seconds)
    (2/341) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.43359567 seconds)
    (3/341) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.104626628 seconds)
    (4/341) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.265331177 seconds)
    (5/341) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 7.009354405 seconds)
    (6/341) benchmarking ("collect", "filter", Bool, true)...
    done (took 3.256056682 seconds)
    (7/341) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.321540813 seconds)
    (8/341) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 3.118060743 seconds)
    (9/341) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.426339966 seconds)
    (10/341) benchmarking ("perf_sum", Int8, false)...
    done (took 2.010091538 seconds)
    (11/341) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.257345576 seconds)
    (12/341) benchmarking ("perf_sum2", Int8, false)...
    done (took 2.012758594 seconds)
    (13/341) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.110488606 seconds)
    (14/341) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 7.006775084 seconds)
    (15/341) benchmarking ("perf_sum2", BigInt, true)...
    done (took 8.689936245 seconds)
    (16/341) benchmarking ("collect", "filter", ComplexF64, true)...
    done (took 3.597321933 seconds)
    (17/341) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 2.024379539 seconds)
    (18/341) benchmarking ("collect", "all", Float64, true)...
    done (took 2.270845175 seconds)
    (19/341) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.011223117 seconds)
    (20/341) benchmarking ("broadcast", identity, Int8, false)...
    done (took 3.864797063 seconds)
    (21/341) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 7.01296977 seconds)
    (22/341) benchmarking ("perf_sum", Bool, true)...
    done (took 2.041901269 seconds)
    (23/341) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.399494318 seconds)
    (24/341) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 2.090180507 seconds)
    (25/341) benchmarking ("collect", "all", Float64, false)...
    done (took 2.105049119 seconds)
    (26/341) benchmarking ("perf_sum", Float32, false)...
    done (took 2.093170674 seconds)
    (27/341) benchmarking ("sort", BigInt, false)...
    done (took 7.008019519 seconds)
    (28/341) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.227263841 seconds)
    (29/341) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.024018307 seconds)
    (30/341) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.996840841 seconds)
    (31/341) benchmarking ("perf_sum4", BigInt, true)...
    done (took 9.060533322 seconds)
    (32/341) benchmarking ("perf_sum", BigFloat, true)...
    done (took 7.372563439 seconds)
    (33/341) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 3.264828803 seconds)
    (34/341) benchmarking ("collect", "all", Int8, false)...
    done (took 2.108385311 seconds)
    (35/341) benchmarking ("perf_sum2", Int64, false)...
    done (took 2.026846642 seconds)
    (36/341) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.307458834 seconds)
    (37/341) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.320333653 seconds)
    (38/341) benchmarking ("perf_countnothing", Int64, true)...
    done (took 2.011403182 seconds)
    (39/341) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 7.008264807 seconds)
    (40/341) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.13552572 seconds)
    (41/341) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.126230388 seconds)
    (42/341) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.422627813 seconds)
    (43/341) benchmarking ("collect", "all", Int64, false)...
    done (took 2.094103789 seconds)
    (44/341) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.148195644 seconds)
    (45/341) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.097715491 seconds)
    (46/341) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.244825047 seconds)
    (47/341) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.902667029 seconds)
    (48/341) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.635909097 seconds)
    (49/341) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.239424991 seconds)
    (50/341) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.119376985 seconds)
    (51/341) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.328810946 seconds)
    (52/341) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.947996278 seconds)
    (53/341) benchmarking ("map", identity, BigInt, true)...
    done (took 2.498283552 seconds)
    (54/341) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.317133869 seconds)
    (55/341) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 7.015455326 seconds)
    (56/341) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 2.024708504 seconds)
    (57/341) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 7.009965573 seconds)
    (58/341) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.59900398 seconds)
    (59/341) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 2.121098135 seconds)
    (60/341) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.424614205 seconds)
    (61/341) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 2.070985191 seconds)
    (62/341) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.770820941 seconds)
    (63/341) benchmarking ("perf_sum4", Float32, true)...
    done (took 2.033216743 seconds)
    (64/341) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.31789888 seconds)
    (65/341) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.149845476 seconds)
    (66/341) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.228297937 seconds)
    (67/341) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.209340984 seconds)
    (68/341) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.278724024 seconds)
    (69/341) benchmarking ("perf_countequals", "Int8")...
    done (took 2.257272768 seconds)
    (70/341) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.40430458 seconds)
    (71/341) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.457267098 seconds)
    (72/341) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.874433348 seconds)
    (73/341) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.36617834 seconds)
    (74/341) benchmarking ("map", abs, Float32, false)...
    done (took 2.106266319 seconds)
    (75/341) benchmarking ("map", identity, Float32, true)...
    done (took 2.222320754 seconds)
    (76/341) benchmarking ("collect", "filter", Bool, false)...
    done (took 2.733035015 seconds)
    (77/341) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.431072285 seconds)
    (78/341) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.415902402 seconds)
    (79/341) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.278178454 seconds)
    (80/341) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.219687286 seconds)
    (81/341) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.492350959 seconds)
    (82/341) benchmarking ("perf_countnothing", Bool, true)...
    done (took 2.026593685 seconds)
    (83/341) benchmarking ("perf_countnothing", Int64, false)...
    done (took 2.022965468 seconds)
    (84/341) benchmarking ("collect", "all", ComplexF64, true)...
    done (took 2.493021839 seconds)
    (85/341) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.29552577 seconds)
    (86/341) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.408351031 seconds)
    (87/341) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 7.016070626 seconds)
    (88/341) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.103585233 seconds)
    (89/341) benchmarking ("sort", Float64, false)...
    done (took 5.747216214 seconds)
    (90/341) benchmarking ("collect", "filter", Int8, true)...
    done (took 3.238681724 seconds)
    (91/341) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.513086693 seconds)
    (92/341) benchmarking ("perf_countnothing", Float64, true)...
    done (took 2.031374184 seconds)
    (93/341) benchmarking ("collect", "all", BigInt, true)...
    done (took 2.381896379 seconds)
    (94/341) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.239465247 seconds)
    (95/341) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.408847549 seconds)
    (96/341) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 7.015106165 seconds)
    (97/341) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.423648521 seconds)
    (98/341) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 2.101600526 seconds)
    (99/341) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 7.011551852 seconds)
    (100/341) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.431694496 seconds)
    (101/341) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 7.012918784 seconds)
    (102/341) benchmarking ("sort", Float32, false)...
    done (took 5.756769797 seconds)
    (103/341) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.186206262 seconds)
    (104/341) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.32566566 seconds)
    (105/341) benchmarking ("map", abs, Float64, false)...
    done (took 2.12178715 seconds)
    (106/341) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 2.043985583 seconds)
    (107/341) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.140203061 seconds)
    (108/341) benchmarking ("perf_countnothing", Bool, false)...
    done (took 2.02419105 seconds)
    (109/341) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.402611277 seconds)
    (110/341) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.347081482 seconds)
    (111/341) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 2.084915647 seconds)
    (112/341) benchmarking ("map", identity, Bool, false)...
    done (took 2.090584606 seconds)
    (113/341) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.523687086 seconds)
    (114/341) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.326010526 seconds)
    (115/341) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.235650599 seconds)
    (116/341) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 7.017913594 seconds)
    (117/341) benchmarking ("perf_countnothing", Float32, false)...
    done (took 2.077376691 seconds)
    (118/341) benchmarking ("collect", "filter", BigInt, true)...
    done (took 3.006375194 seconds)
    (119/341) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.174595255 seconds)
    (120/341) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.775258681 seconds)
    (121/341) benchmarking ("collect", "all", BigFloat, false)...
    done (took 2.269639901 seconds)
    (122/341) benchmarking ("perf_countequals", "Float32")...
    done (took 2.313720227 seconds)
    (123/341) benchmarking ("collect", "all", Int64, true)...
    done (took 2.286205727 seconds)
    (124/341) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.406938734 seconds)
    (125/341) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.155289629 seconds)
    (126/341) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 2.080719898 seconds)
    (127/341) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.906155325 seconds)
    (128/341) benchmarking ("collect", "filter", Float64, true)...
    done (took 3.478343031 seconds)
    (129/341) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.051202548 seconds)
    (130/341) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.093239583 seconds)
    (131/341) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.702021386 seconds)
    (132/341) benchmarking ("perf_sum", BigFloat, false)...
    done (took 7.028726999 seconds)
    (133/341) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 7.091331678 seconds)
    (134/341) benchmarking ("map", identity, Float32, false)...
    done (took 2.161128524 seconds)
    (135/341) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.42369694 seconds)
    (136/341) benchmarking ("perf_sum", Int64, false)...
    done (took 2.031459161 seconds)
    (137/341) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 7.015215826 seconds)
    (138/341) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.465480055 seconds)
    (139/341) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 2.029981193 seconds)
    (140/341) benchmarking ("collect", "all", ComplexF64, false)...
    done (took 2.21501037 seconds)
    (141/341) benchmarking ("collect", "all", BigFloat, true)...
    done (took 2.402375303 seconds)
    (142/341) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 7.017421745 seconds)
    (143/341) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.167131262 seconds)
    (144/341) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.105607381 seconds)
    (145/341) benchmarking ("collect", "filter", Int8, false)...
    done (took 2.729113594 seconds)
    (146/341) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 7.023744305 seconds)
    (147/341) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 4.001928922 seconds)
    (148/341) benchmarking ("map", identity, Int64, true)...
    done (took 2.297294014 seconds)
    (149/341) benchmarking ("perf_countequals", "Int64")...
    done (took 2.26517045 seconds)
    (150/341) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.87661055 seconds)
    (151/341) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.241043039 seconds)
    (152/341) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.365211638 seconds)
    (153/341) benchmarking ("perf_countequals", "Bool")...
    done (took 2.37054394 seconds)
    (154/341) benchmarking ("perf_sum4", Float64, false)...
    done (took 2.034602859 seconds)
    (155/341) benchmarking ("sort", Bool, false)...
    done (took 2.233139024 seconds)
    (156/341) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 7.018180479 seconds)
    (157/341) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 3.137187719 seconds)
    (158/341) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.029922457 seconds)
    (159/341) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 4.032463451 seconds)
    (160/341) benchmarking ("collect", "all", Float32, true)...
    done (took 2.228328093 seconds)
    (161/341) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.509215972 seconds)
    (162/341) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.132363814 seconds)
    (163/341) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.478779831 seconds)
    (164/341) benchmarking ("map", abs, BigFloat, true)...
    done (took 7.021337894 seconds)
    (165/341) benchmarking ("perf_sum", Int64, true)...
    done (took 2.109419 seconds)
    (166/341) benchmarking ("perf_sum4", Bool, false)...
    done (took 2.032284394 seconds)
    (167/341) benchmarking ("sort", Int64, false)...
    done (took 5.686115219 seconds)
    (168/341) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.221248725 seconds)
    (169/341) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 2.034544805 seconds)
    (170/341) benchmarking ("perf_countnothing", Float64, false)...
    done (took 2.029186608 seconds)
    (171/341) benchmarking ("sort", Int8, false)...
    done (took 4.947916936 seconds)
    (172/341) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.651076815 seconds)
    (173/341) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.407569353 seconds)
    (174/341) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.673773835 seconds)
    (175/341) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.824942336 seconds)
    (176/341) benchmarking ("collect", "filter", Int64, false)...
    done (took 2.920417159 seconds)
    (177/341) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.181476353 seconds)
    (178/341) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 7.021719608 seconds)
    (179/341) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.101573877 seconds)
    (180/341) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.797216539 seconds)
    (181/341) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.278151713 seconds)
    (182/341) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.229919128 seconds)
    (183/341) benchmarking ("collect", "all", Bool, true)...
    done (took 2.152314489 seconds)
    (184/341) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.808710284 seconds)
    (185/341) benchmarking ("perf_sum4", Int64, true)...
    done (took 2.153328514 seconds)
    (186/341) benchmarking ("collect", "filter", ComplexF64, false)...
    done (took 3.116629839 seconds)
    (187/341) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 3.12782438 seconds)
    (188/341) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.356089694 seconds)
    (189/341) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.20219035 seconds)
    (190/341) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.633312279 seconds)
    (191/341) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.184595848 seconds)
    (192/341) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.330779768 seconds)
    (193/341) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.738376997 seconds)
    (194/341) benchmarking ("perf_sum", Float32, true)...
    done (took 2.128503877 seconds)
    (195/341) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.226723674 seconds)
    (196/341) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 7.022376265 seconds)
    (197/341) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.310892761 seconds)
    (198/341) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 7.098126589 seconds)
    (199/341) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.272520823 seconds)
    (200/341) benchmarking ("sort", BigFloat, false)...
    done (took 7.021573672 seconds)
    (201/341) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.715973104 seconds)
    (202/341) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 7.019077972 seconds)
    (203/341) benchmarking ("perf_countnothing", Int8, false)...
    done (took 2.108341708 seconds)
    (204/341) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.147643957 seconds)
    (205/341) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.306102614 seconds)
    (206/341) benchmarking ("collect", "filter", Float32, false)...
    done (took 2.801946954 seconds)
    (207/341) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.351744891 seconds)
    (208/341) benchmarking ("map", abs, Bool, false)...
    done (took 2.113040757 seconds)
    (209/341) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.164120118 seconds)
    (210/341) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.225326853 seconds)
    (211/341) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.026865805 seconds)
    (212/341) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.43537866 seconds)
    (213/341) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.986890895 seconds)
    (214/341) benchmarking ("perf_sum2", Int64, true)...
    done (took 2.046437763 seconds)
    (215/341) benchmarking ("map", abs, BigFloat, false)...
    done (took 7.017958045 seconds)
    (216/341) benchmarking ("collect", "filter", Float64, false)...
    done (took 2.978346751 seconds)
    (217/341) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.116342975 seconds)
    (218/341) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.151343123 seconds)
    (219/341) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.218021178 seconds)
    (220/341) benchmarking ("map", identity, Int8, false)...
    done (took 2.100993413 seconds)
    (221/341) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.360941303 seconds)
    (222/341) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.151968542 seconds)
    (223/341) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.098381593 seconds)
    (224/341) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.164128562 seconds)
    (225/341) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 7.020293938 seconds)
    (226/341) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.854193035 seconds)
    (227/341) benchmarking ("perf_sum", Bool, false)...
    done (took 2.037333946 seconds)
    (228/341) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.137872721 seconds)
    (229/341) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 8.074825998 seconds)
    (230/341) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 2.136334818 seconds)
    (231/341) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.330025982 seconds)
    (232/341) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 7.108455932 seconds)
    (233/341) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.668219833 seconds)
    (234/341) benchmarking ("collect", "filter", Int64, true)...
    done (took 3.543697911 seconds)
    (235/341) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 7.028885652 seconds)
    (236/341) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.958181386 seconds)
    (237/341) benchmarking ("map", identity, Bool, true)...
    done (took 2.164151187 seconds)
    (238/341) benchmarking ("map", identity, Float64, true)...
    done (took 2.287792134 seconds)
    (239/341) benchmarking ("map", abs, Int64, false)...
    done (took 2.142707032 seconds)
    (240/341) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 7.023628003 seconds)
    (241/341) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.63114522 seconds)
    (242/341) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.118900939 seconds)
    (243/341) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.259267082 seconds)
    (244/341) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.025994213 seconds)
    (245/341) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 3.974998975 seconds)
    (246/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.64761005 seconds)
    (247/341) benchmarking ("perf_countequals", "Float64")...
    done (took 2.32137536 seconds)
    (248/341) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.821823692 seconds)
    (249/341) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 7.078574658 seconds)
    (250/341) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.977335126 seconds)
    (251/341) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.024697356 seconds)
    (252/341) benchmarking ("collect", "all", BigInt, false)...
    done (took 3.863758515 seconds)
    (253/341) benchmarking ("map", abs, BigInt, false)...
    done (took 7.024256444 seconds)
    (254/341) benchmarking ("perf_sum4", Bool, true)...
    done (took 4.031434599 seconds)
    (255/341) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.176471119 seconds)
    (256/341) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 8.073221133 seconds)
    (257/341) benchmarking ("perf_sum4", Float32, false)...
    done (took 2.151681392 seconds)
    (258/341) benchmarking ("perf_sum4", Int64, false)...
    done (took 2.038747957 seconds)
    (259/341) benchmarking ("collect", "all", Bool, false)...
    done (took 2.097693302 seconds)
    (260/341) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.314639172 seconds)
    (261/341) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.332645626 seconds)
    (262/341) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.31741665 seconds)
    (263/341) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.902825978 seconds)
    (264/341) benchmarking ("perf_sum", Float64, false)...
    done (took 2.114520335 seconds)
    (265/341) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.756264197 seconds)
    (266/341) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.10132564 seconds)
    (267/341) benchmarking ("map", abs, Int8, false)...
    done (took 2.122208048 seconds)
    (268/341) benchmarking ("map", abs, Bool, true)...
    done (took 2.157884339 seconds)
    (269/341) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 7.030782439 seconds)
    (270/341) benchmarking ("collect", "filter", BigFloat, false)...
    done (took 2.958472759 seconds)
    (271/341) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.223590595 seconds)
    (272/341) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.415923082 seconds)
    (273/341) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 7.011949899 seconds)
    (274/341) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 2.06951898 seconds)
    (275/341) benchmarking ("map", identity, Float64, false)...
    done (took 2.11695469 seconds)
    (276/341) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.85380103 seconds)
    (277/341) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.24763909 seconds)
    (278/341) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.135513122 seconds)
    (279/341) benchmarking ("perf_sum4", Float64, true)...
    done (took 2.045153103 seconds)
    (280/341) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.872491033 seconds)
    (281/341) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.148010796 seconds)
    (282/341) benchmarking ("map", abs, BigInt, true)...
    done (took 7.465421542 seconds)
    (283/341) benchmarking ("perf_sum4", Int8, false)...
    done (took 2.114159267 seconds)
    (284/341) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.145218857 seconds)
    (285/341) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.31578593 seconds)
    (286/341) benchmarking ("perf_countnothing", Float32, true)...
    done (took 2.036734977 seconds)
    (287/341) benchmarking ("map", identity, BigInt, false)...
    done (took 2.261466507 seconds)
    (288/341) benchmarking ("collect", "filter", Float32, true)...
    done (took 3.323125233 seconds)
    (289/341) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.449186767 seconds)
    (290/341) benchmarking ("collect", "filter", BigFloat, true)...
    done (took 3.032595153 seconds)
    (291/341) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 7.033311949 seconds)
    (292/341) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 2.043057999 seconds)
    (293/341) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.126888968 seconds)
    (294/341) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.259865656 seconds)
    (295/341) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 7.054958128 seconds)
    (296/341) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.270550603 seconds)
    (297/341) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.134695402 seconds)
    (298/341) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.083588399 seconds)
    (299/341) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.023929137 seconds)
    (300/341) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.522550332 seconds)
    (301/341) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.334969971 seconds)
    (302/341) benchmarking ("perf_sum", Float64, true)...
    done (took 2.159418687 seconds)
    (303/341) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 7.022598367 seconds)
    (304/341) benchmarking ("perf_sum", BigInt, true)...
    done (took 8.146814328 seconds)
    (305/341) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.491321727 seconds)
    (306/341) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.980458023 seconds)
    (307/341) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.455368549 seconds)
    (308/341) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.193632926 seconds)
    (309/341) benchmarking ("perf_countnothing", Int8, true)...
    done (took 2.034973339 seconds)
    (310/341) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.365719945 seconds)
    (311/341) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.16622135 seconds)
    (312/341) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 7.029742993 seconds)
    (313/341) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.809479639 seconds)
    (314/341) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 2.061880215 seconds)
    (315/341) benchmarking ("collect", "all", Float32, false)...
    done (took 2.104682203 seconds)
    (316/341) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.967120326 seconds)
    (317/341) benchmarking ("map", *, BigInt, (true, true))...
    done (took 8.233803348 seconds)
    (318/341) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 7.134474369 seconds)
    (319/341) benchmarking ("map", abs, Float64, true)...
    done (took 2.364185595 seconds)
    (320/341) benchmarking ("collect", "filter", BigInt, false)...
    done (took 2.958468862 seconds)
    (321/341) benchmarking ("map", abs, Float32, true)...
    done (took 2.215064553 seconds)
    (322/341) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.222126295 seconds)
    (323/341) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 7.034987909 seconds)
    (324/341) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.248778003 seconds)
    (325/341) benchmarking ("map", identity, Int64, false)...
    done (took 2.141549014 seconds)
    (326/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.911654928 seconds)
    (327/341) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.10455428 seconds)
    (328/341) benchmarking ("perf_sum", Int8, true)...
    done (took 2.027736404 seconds)
    (329/341) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.103472219 seconds)
    (330/341) benchmarking ("map", identity, Int8, true)...
    done (took 2.156439123 seconds)
    (331/341) benchmarking ("collect", "all", Int8, true)...
    done (took 2.167115946 seconds)
    (332/341) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.238738248 seconds)
    (333/341) benchmarking ("map", abs, Int64, true)...
    done (took 2.329593816 seconds)
    (334/341) benchmarking ("perf_sum4", Int8, true)...
    done (took 2.029794572 seconds)
    (335/341) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.345349006 seconds)
    (336/341) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.294824546 seconds)
    (337/341) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.725210913 seconds)
    (338/341) benchmarking ("map", abs, Int8, true)...
    done (took 2.178084912 seconds)
    (339/341) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.386615338 seconds)
    (340/341) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.158947367 seconds)
    (341/341) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.124151039 seconds)
  done (took 1148.732327709 seconds)
done (took 1150.777826189 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.048862567 seconds)
  (2/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 2.03379525 seconds)
  (3/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.534343549 seconds)
  (4/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 2.044439472 seconds)
  (5/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 2.03410799 seconds)
  (6/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 2.037094279 seconds)
  (7/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.546186425 seconds)
  (8/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 2.063986848 seconds)
  (9/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 2.050790106 seconds)
  (10/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.548202873 seconds)
  (11/152) benchmarking ("inner", "Int32", 4096)...
  done (took 2.044978822 seconds)
  (12/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 2.034967135 seconds)
  (13/152) benchmarking ("inner", "Int64", 4096)...
  done (took 2.04791563 seconds)
  (14/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 2.067903463 seconds)
  (15/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 2.043685887 seconds)
  (16/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 2.047052056 seconds)
  (17/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 2.039576188 seconds)
  (18/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 2.058889052 seconds)
  (19/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 2.069390506 seconds)
  (20/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 2.040013888 seconds)
  (21/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 2.082430867 seconds)
  (22/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 2.039152118 seconds)
  (23/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 2.034319969 seconds)
  (24/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 2.085704515 seconds)
  (25/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 2.034305793 seconds)
  (26/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 2.0507299 seconds)
  (27/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.049856121 seconds)
  (28/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 2.080996628 seconds)
  (29/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 2.080719775 seconds)
  (30/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 2.037446213 seconds)
  (31/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 2.040733446 seconds)
  (32/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.390289677 seconds)
  (33/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 2.087404975 seconds)
  (34/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 2.039454478 seconds)
  (35/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 2.046571574 seconds)
  (36/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 2.049973825 seconds)
  (37/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 2.040488012 seconds)
  (38/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 2.049990376 seconds)
  (39/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.048542284 seconds)
  (40/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 2.049008009 seconds)
  (41/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 2.035753805 seconds)
  (42/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 2.044842603 seconds)
  (43/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 2.039676261 seconds)
  (44/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 2.038018595 seconds)
  (45/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 2.034013894 seconds)
  (46/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 2.033468107 seconds)
  (47/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 2.036932973 seconds)
  (48/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.15977608 seconds)
  (49/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 2.048913162 seconds)
  (50/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.371718601 seconds)
  (51/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.095582296 seconds)
  (52/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.048898081 seconds)
  (53/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 2.081658976 seconds)
  (54/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 2.037788431 seconds)
  (55/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 2.038985248 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 2.036700193 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 2.08253888 seconds)
  (58/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 2.041063635 seconds)
  (59/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 2.039458141 seconds)
  (60/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.373435047 seconds)
  (61/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 2.128682671 seconds)
  (62/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 2.050600766 seconds)
  (63/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.370258927 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 2.101372006 seconds)
  (65/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 2.046699268 seconds)
  (66/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 2.044041508 seconds)
  (67/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 2.034874753 seconds)
  (68/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.049656795 seconds)
  (69/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.39307353 seconds)
  (70/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.590798119 seconds)
  (71/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 2.069977227 seconds)
  (72/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 2.055782855 seconds)
  (73/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 2.038383761 seconds)
  (74/152) benchmarking ("inner", "Float32", 4096)...
  done (took 2.038526068 seconds)
  (75/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 2.049244881 seconds)
  (76/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.544285771 seconds)
  (77/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 2.051412571 seconds)
  (78/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.612507554 seconds)
  (79/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 2.066045166 seconds)
  (80/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 2.050753274 seconds)
  (81/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 2.042319369 seconds)
  (82/152) benchmarking ("inner", "Int32", 4095)...
  done (took 2.039042229 seconds)
  (83/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 2.038536817 seconds)
  (84/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 2.053593765 seconds)
  (85/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.051893653 seconds)
  (86/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 2.035714296 seconds)
  (87/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 2.042879317 seconds)
  (88/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 2.043231808 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 2.049257789 seconds)
  (90/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.393301283 seconds)
  (91/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 2.083951935 seconds)
  (92/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.535706872 seconds)
  (93/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 2.045632434 seconds)
  (94/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.052373187 seconds)
  (95/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.051794874 seconds)
  (96/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.614559518 seconds)
  (97/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 2.070765283 seconds)
  (98/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.050854914 seconds)
  (99/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 2.040995873 seconds)
  (100/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.392683983 seconds)
  (101/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 2.082515089 seconds)
  (102/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.053092717 seconds)
  (103/152) benchmarking ("inner", "Float32", 4095)...
  done (took 2.040008701 seconds)
  (104/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 2.048373183 seconds)
  (105/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.152821795 seconds)
  (106/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.052334218 seconds)
  (107/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.052859547 seconds)
  (108/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 2.037123235 seconds)
  (109/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 2.059335515 seconds)
  (110/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 2.043856112 seconds)
  (111/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 2.038812941 seconds)
  (112/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 2.051534106 seconds)
  (113/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 2.058278658 seconds)
  (114/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 2.072971466 seconds)
  (115/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 2.055587152 seconds)
  (116/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 2.039124906 seconds)
  (117/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 2.046701517 seconds)
  (118/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 2.044423254 seconds)
  (119/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.051083678 seconds)
  (120/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 2.046071207 seconds)
  (121/152) benchmarking ("inner", "Float64", 4095)...
  done (took 2.046321447 seconds)
  (122/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 2.049151021 seconds)
  (123/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 2.039334053 seconds)
  (124/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 2.090738415 seconds)
  (125/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.052738829 seconds)
  (126/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 2.0557479 seconds)
  (127/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.153923659 seconds)
  (128/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 2.043949006 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.164634221 seconds)
  (130/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 2.053487465 seconds)
  (131/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 2.046337601 seconds)
  (132/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 2.039323757 seconds)
  (133/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.375211141 seconds)
  (134/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 2.08760791 seconds)
  (135/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 2.061657021 seconds)
  (136/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 2.045723047 seconds)
  (137/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 2.062658047 seconds)
  (138/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 2.061456993 seconds)
  (139/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 2.056109767 seconds)
  (140/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 2.043163664 seconds)
  (141/152) benchmarking ("inner", "Int64", 4095)...
  done (took 2.054431525 seconds)
  (142/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 2.042039545 seconds)
  (143/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 2.090976465 seconds)
  (144/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 2.040027399 seconds)
  (145/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 2.06483058 seconds)
  (146/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 2.091606482 seconds)
  (147/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 2.054032001 seconds)
  (148/152) benchmarking ("inner", "Float64", 4096)...
  done (took 2.045954284 seconds)
  (149/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.052637002 seconds)
  (150/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 2.076382832 seconds)
  (151/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 2.060421058 seconds)
  (152/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 2.044450535 seconds)
done (took 321.12645416 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.080928536 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 7.032329103 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.109926085 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 2.034251867 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.10103343 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.089267207 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 2.03341087 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 2.035808746 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 2.033741251 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.416000494 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 2.035470477 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 2.042032889 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 7.034240775 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 2.034734138 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.083919385 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 2.035409798 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 2.03421408 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.266533376 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 2.035323028 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.095139742 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 7.033424749 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 2.034910859 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 2.035723055 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.423665748 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 7.034559214 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 7.035729812 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.094055497 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 2.034997959 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.276720594 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 7.036066033 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 7.036253872 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.277534883 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.095239413 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 2.048842046 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 2.04463565 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 2.045448963 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.103476834 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 2.04436362 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.083395578 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.083092371 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.110803923 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 2.06890268 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 7.035253943 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 7.035630945 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 2.040905525 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 2.036183639 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 2.037250197 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 2.069473828 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 7.034993016 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 2.043755596 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.284984058 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 2.042420556 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 2.044598462 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 2.038430694 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 2.036421279 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 2.049551033 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 2.036091195 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 2.037076053 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.097019545 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 2.035759445 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.084641081 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.42416611 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.417423296 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 2.036901019 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 7.035671787 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 2.037352402 seconds)
  done (took 194.783748749 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.10376927 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.123500371 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.105530812 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 2.043413145 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 2.089296221 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.10399356 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 2.043606856 seconds)
  done (took 16.580181007 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 2.023086326 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.038387032 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 2.050263927 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.059578267 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 2.036569821 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.178964437 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 2.049361379 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 2.045885867 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 2.064575387 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 2.038284643 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.373788809 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 2.060378444 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 2.043412817 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 7.038881408 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 2.050651322 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 2.068982156 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 2.041646654 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.036593555 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.138485107 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.116825563 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 2.043207405 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 2.047607464 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 2.068140878 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 2.051463043 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 2.039209498 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.037725653 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 2.038167324 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 2.046460081 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 2.039976726 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 2.039428682 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.039671862 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 2.05235009 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 2.038975042 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 7.0394164 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 2.040276504 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 2.041060376 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 2.038172937 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 2.039760393 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 2.040476426 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 7.040201826 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 2.03938552 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 2.043883626 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 2.039651053 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 2.039401266 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 2.038844312 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 2.050173752 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 2.04235782 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 2.04022665 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 2.039827137 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 2.040236669 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 2.069513214 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 2.040131323 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 2.040093771 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 2.045329483 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 2.080509239 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 2.048125719 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 2.038897336 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 2.040293339 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.040967367 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 2.039505241 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.041610918 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.121964038 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 2.064455729 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 2.039972339 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.062986377 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.078203391 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.041482408 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 2.040872852 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 2.041284503 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 2.065735139 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 2.041511065 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.064489075 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 2.040629462 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.141662308 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 2.041974461 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.186762653 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 2.065462784 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 2.045556481 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 2.04488486 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 7.0421604 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 2.048849703 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 2.041100974 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 2.0444993 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 2.048370252 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 2.047088508 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.042374812 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 2.042295442 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 2.04462399 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 2.049104917 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 2.042497679 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 2.087268003 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 2.042508207 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 2.041127018 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.140356354 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 2.030904311 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.140523378 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 2.056198933 seconds)
  done (took 221.577891381 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 2.046076511 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 2.02130306 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 2.055975962 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 2.039252986 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 2.039896924 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 2.047498241 seconds)
  done (took 14.222311315 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 2.03766137 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 2.041004177 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 2.044012222 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 2.042525557 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 2.042532237 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 2.041400759 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 2.043421081 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.045737822 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 2.045752799 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 2.043192509 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 2.043592644 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 2.043280504 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 2.042137327 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 2.042280357 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 2.043806104 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 2.043681669 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 2.043602439 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 2.043157875 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 2.043459186 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.02200671 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.288252956 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 2.046725696 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.041833053 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 2.046334248 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 2.046616568 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 2.041475943 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 2.052212033 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 2.04391945 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 2.042877959 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 2.050329468 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 2.047919566 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 2.04278932 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 2.048159253 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 2.050989358 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 2.048261871 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 2.047411656 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.050398463 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 2.045240921 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 2.044425109 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 2.043360903 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 2.044427994 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.043714929 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 2.045774063 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 2.044242357 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 2.046787498 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 2.052402362 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 2.048290804 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 2.052876479 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 2.044945985 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 2.044009516 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 2.046585837 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 2.04439006 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 2.044536334 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 2.043383978 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 2.049267284 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.054023218 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 2.049630424 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 2.045633891 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 2.044108775 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 2.048508053 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 2.050329135 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 2.04453452 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.047765046 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 2.050596513 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 2.052388182 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 2.045305382 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 2.047170207 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.04829703 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.044479998 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 2.046699313 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 2.045545642 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 2.045705361 seconds)
  done (took 150.489291974 seconds)
done (took 599.617805533 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.137108476 seconds)
  done (took 9.112233096 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.15788919 seconds)
  done (took 9.238311043 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 10.391720652 seconds)
  done (took 12.371899002 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 7.063414099 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 7.129687231 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 7.048345076 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 7.054121328 seconds)
  done (took 30.287323758 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.066827799 seconds)
  done (took 9.04373625 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 7.056556471 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 7.041432533 seconds)
  done (took 16.112812083 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.161927462 seconds)
  done (took 9.139669906 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.515105386 seconds)
  done (took 9.517192867 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 7.05644275 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 7.06777532 seconds)
  done (took 16.121516379 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 7.046988007 seconds)
  done (took 9.023099043 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.86088254 seconds)
  done (took 9.92607638 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 7.064588168 seconds)
  done (took 9.061584373 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 7.126213097 seconds)
  done (took 9.102599644 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.992695534 seconds)
  done (took 9.968923802 seconds)
done (took 170.00316613 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 7.054452336 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 7.051937479 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 7.051526754 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 7.050190692 seconds)
  done (took 30.184809752 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 2.083144263 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 2.081967371 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 2.092197055 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 2.081842463 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 2.072801686 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 2.072044498 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 2.082907791 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 2.082858481 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 2.073741992 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 2.080720766 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 2.083685493 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 2.079854978 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 2.082531799 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 2.091645509 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 2.092251963 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 2.080161066 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 2.083375946 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 2.083241544 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 2.06280963 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 2.07041988 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 2.080410877 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 2.082184669 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 2.03075456 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 2.024612574 seconds)
  done (took 51.810587501 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.23846543 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.114540456 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.203167443 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.094630525 seconds)
  done (took 10.628835647 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 2.048793175 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 2.112541161 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 2.099168693 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 2.094094173 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.100236465 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.152290042 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 2.094958288 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.181115462 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.176240226 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.176465261 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 2.057308909 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 2.071523222 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 2.074959661 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 2.095219773 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.152724521 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 2.049485113 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 2.048970931 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.166531043 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 2.113504476 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.288459643 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 2.049432771 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 2.10020656 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.100507383 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 2.101826444 seconds)
  done (took 52.685351047 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 2.05077451 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 2.05842152 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 2.056640865 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 2.050409552 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 2.051357128 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 2.050550819 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 2.057991612 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 2.052681887 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 2.072856304 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 2.052537476 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 2.05061241 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 2.051313483 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 2.058297272 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 2.051124956 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 2.05091377 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 2.063661056 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 2.064146098 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 2.051271662 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 2.054788316 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 2.059049887 seconds)
  done (took 43.088915687 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 7.050522635 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.897387684 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.397045135 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.301787118 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 7.049683627 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 7.054712916 seconds)
  done (took 32.731825994 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 2.063681321 seconds)
    (2/12) benchmarking ("push_single!", 256)...
    done (took 2.068496618 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 2.059883285 seconds)
    (4/12) benchmarking ("push_multiple!", 256)...
    done (took 2.075954036 seconds)
    (5/12) benchmarking ("push_single!", 2048)...
    done (took 2.100573824 seconds)
    (6/12) benchmarking ("push_single!", 8)...
    done (took 2.066406558 seconds)
    (7/12) benchmarking ("prerend!", 2048)...
    done (took 2.112688948 seconds)
    (8/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.219530705 seconds)
    (9/12) benchmarking ("push_multiple!", 8)...
    done (took 2.062569901 seconds)
    (10/12) benchmarking ("append!", 2048)...
    done (took 2.110329159 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 2.078133317 seconds)
    (12/12) benchmarking ("prerend!", 8)...
    done (took 2.061579545 seconds)
  done (took 27.060294103 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 7.050718214 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 7.054453512 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 7.054832343 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 2.065130897 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 2.062664467 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 2.061393359 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 2.059264374 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 7.050206391 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 2.067466265 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 2.071495305 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 2.060407279 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 2.064215596 seconds)
  done (took 46.704378492 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.265918852 seconds)
    (2/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.279223702 seconds)
    (3/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.274606542 seconds)
    (4/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.642655562 seconds)
    (5/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.383819284 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.037412242 seconds)
    (7/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.338515005 seconds)
    (8/608) benchmarking ("sumelt", "BitMatrix")...
    done (took 5.263829759 seconds)
    (9/608) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.789832956 seconds)
    (10/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.817317115 seconds)
    (11/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.345161988 seconds)
    (12/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.031352486 seconds)
    (13/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.996346947 seconds)
    (14/608) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.977865522 seconds)
    (15/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.970096075 seconds)
    (16/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.294816542 seconds)
    (17/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.054851501 seconds)
    (18/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.909498098 seconds)
    (19/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.315516823 seconds)
    (20/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 7.103174714 seconds)
    (21/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.055980508 seconds)
    (22/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 2.052530917 seconds)
    (23/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.0603348 seconds)
    (24/608) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.339718604 seconds)
    (25/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.382182219 seconds)
    (26/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.060270032 seconds)
    (27/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.265799868 seconds)
    (28/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.06858382 seconds)
    (29/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 7.098614395 seconds)
    (30/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.265355576 seconds)
    (31/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.637700453 seconds)
    (32/608) benchmarking ("sumvector_view", "Matrix{Int64}")...
    done (took 2.115360972 seconds)
    (33/608) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.255425364 seconds)
    (34/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.310642885 seconds)
    (35/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.399067271 seconds)
    (36/608) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 7.165604133 seconds)
    (37/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 7.06082409 seconds)
    (38/608) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.220850987 seconds)
    (39/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.108192009 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.088312259 seconds)
    (41/608) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.064022262 seconds)
    (42/608) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 2.06473587 seconds)
    (43/608) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.593802397 seconds)
    (44/608) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 2.063280708 seconds)
    (45/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.312796088 seconds)
    (46/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.053777857 seconds)
    (47/608) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 7.103921275 seconds)
    (48/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.046038476 seconds)
    (49/608) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.979388347 seconds)
    (50/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 4.343066193 seconds)
    (51/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.176325672 seconds)
    (52/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.052512391 seconds)
    (53/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.088465624 seconds)
    (54/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.48891344 seconds)
    (55/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.175592882 seconds)
    (56/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.297331562 seconds)
    (57/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.058541776 seconds)
    (58/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.219008324 seconds)
    (59/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.121573163 seconds)
    (60/608) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.280177087 seconds)
    (61/608) benchmarking ("sumlinear_view", "Matrix{Float64}")...
    done (took 7.215938037 seconds)
    (62/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.060332525 seconds)
    (63/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.267296076 seconds)
    (64/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.980074934 seconds)
    (65/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.42463933 seconds)
    (66/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.186542791 seconds)
    (67/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 2.056418321 seconds)
    (68/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.058650797 seconds)
    (69/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.75532221 seconds)
    (70/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.298084193 seconds)
    (71/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.136281387 seconds)
    (72/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.340891478 seconds)
    (73/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.827183425 seconds)
    (74/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 2.057179475 seconds)
    (75/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.058034124 seconds)
    (76/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 5.098709521 seconds)
    (77/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.144481011 seconds)
    (78/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 7.054770675 seconds)
    (79/608) benchmarking ("mapr_access", "Matrix{Int64}")...
    done (took 3.349621795 seconds)
    (80/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.060643315 seconds)
    (81/608) benchmarking ("sumcartesian", "Matrix{Float64}")...
    done (took 3.981976247 seconds)
    (82/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.154315718 seconds)
    (83/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.450003774 seconds)
    (84/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.060788585 seconds)
    (85/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 7.05579607 seconds)
    (86/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.064397766 seconds)
    (87/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.902281933 seconds)
    (88/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.982594059 seconds)
    (89/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.1523451 seconds)
    (90/608) benchmarking ("sumlogical_view", "Matrix{Int64}")...
    done (took 4.279079677 seconds)
    (91/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.387065254 seconds)
    (92/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 2.056747442 seconds)
    (93/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.056841501 seconds)
    (94/608) benchmarking ("sum", "3dsubarray")...
    done (took 2.078395055 seconds)
    (95/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.058549476 seconds)
    (96/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.005153122 seconds)
    (97/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.605551008 seconds)
    (98/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.113670962 seconds)
    (99/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.983421456 seconds)
    (100/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.621825825 seconds)
    (101/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.643530105 seconds)
    (102/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.030871121 seconds)
    (103/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.522377052 seconds)
    (104/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.10765908 seconds)
    (105/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.333928718 seconds)
    (106/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.204894121 seconds)
    (107/608) benchmarking ("sumcartesian", "Matrix{Int64}")...
    done (took 2.462805651 seconds)
    (108/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.266159773 seconds)
    (109/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.302940402 seconds)
    (110/608) benchmarking "5d"...
    done (took 3.590285181 seconds)
    (111/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.061640771 seconds)
    (112/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.671819015 seconds)
    (113/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.138063133 seconds)
    (114/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.133099627 seconds)
    (115/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.056915495 seconds)
    (116/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.61826826 seconds)
    (117/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.227535966 seconds)
    (118/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.332801266 seconds)
    (119/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.18044647 seconds)
    (120/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.056936667 seconds)
    (121/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.982553354 seconds)
    (122/608) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 2.068148354 seconds)
    (123/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.260780824 seconds)
    (124/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.648359255 seconds)
    (125/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.118369758 seconds)
    (126/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.057173223 seconds)
    (127/608) benchmarking ("sumrange_view", "Matrix{Float64}")...
    done (took 2.061343405 seconds)
    (128/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 7.056539782 seconds)
    (129/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.060071614 seconds)
    (130/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.16579848 seconds)
    (131/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.073693417 seconds)
    (132/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.346985686 seconds)
    (133/608) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 2.132857337 seconds)
    (134/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 2.05865225 seconds)
    (135/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.994996453 seconds)
    (136/608) benchmarking ("sumcolon_view", "Matrix{Float64}")...
    done (took 2.063648417 seconds)
    (137/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.351636102 seconds)
    (138/608) benchmarking ("sumrange", "Matrix{Float64}")...
    done (took 6.706466082 seconds)
    (139/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.121123068 seconds)
    (140/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.310029115 seconds)
    (141/608) benchmarking ("sumeach", "BitMatrix")...
    done (took 5.321670369 seconds)
    (142/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.760401778 seconds)
    (143/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.656559903 seconds)
    (144/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.008239044 seconds)
    (145/608) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.334019842 seconds)
    (146/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.131929367 seconds)
    (147/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.134388307 seconds)
    (148/608) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.628038182 seconds)
    (149/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.195393761 seconds)
    (150/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.155929502 seconds)
    (151/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.059123876 seconds)
    (152/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.19537374 seconds)
    (153/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 7.070261958 seconds)
    (154/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.061424648 seconds)
    (155/608) benchmarking ("sumcolon", "Matrix{Int64}")...
    done (took 6.446352569 seconds)
    (156/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.476868136 seconds)
    (157/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.484347487 seconds)
    (158/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.101796695 seconds)
    (159/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 7.05911378 seconds)
    (160/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.008708414 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.230449393 seconds)
    (162/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.28373732 seconds)
    (163/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.117314133 seconds)
    (164/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.086770438 seconds)
    (165/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.064950334 seconds)
    (166/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.130672608 seconds)
    (167/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.272152196 seconds)
    (168/608) benchmarking "ind2sub"...
    done (took 7.058539919 seconds)
    (169/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.986310019 seconds)
    (170/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.30803019 seconds)
    (171/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.308500978 seconds)
    (172/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.347521682 seconds)
    (173/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.476613342 seconds)
    (174/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.117766653 seconds)
    (175/608) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.13323753 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.070121242 seconds)
    (177/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.273348126 seconds)
    (178/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.143309878 seconds)
    (179/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.73092688 seconds)
    (180/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.607461884 seconds)
    (181/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.280959154 seconds)
    (182/608) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.621782863 seconds)
    (183/608) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.029611128 seconds)
    (184/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.697884931 seconds)
    (185/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.305511518 seconds)
    (186/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.449323358 seconds)
    (187/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.074729145 seconds)
    (188/608) benchmarking ("sumcartesian_view", "Matrix{Float64}")...
    done (took 2.513387871 seconds)
    (189/608) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.234688132 seconds)
    (190/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.723444372 seconds)
    (191/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.084893395 seconds)
    (192/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.589051439 seconds)
    (193/608) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.986013789 seconds)
    (194/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.065873308 seconds)
    (195/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.397984002 seconds)
    (196/608) benchmarking ("sumelt_boundscheck", "Matrix{Float64}")...
    done (took 4.022859234 seconds)
    (197/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 2.372424127 seconds)
    (198/608) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 7.127404362 seconds)
    (199/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.077549903 seconds)
    (200/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 2.063410024 seconds)
    (201/608) benchmarking ("sumelt", "1:100000")...
    done (took 2.062126261 seconds)
    (202/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.068410249 seconds)
    (203/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.966076985 seconds)
    (204/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.172503761 seconds)
    (205/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.130553465 seconds)
    (206/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.134439356 seconds)
    (207/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.989440925 seconds)
    (208/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 5.708427258 seconds)
    (209/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 2.104328571 seconds)
    (210/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 2.065266252 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 7.06156756 seconds)
    (212/608) benchmarking ("sumlogical", "Matrix{Float64}")...
    done (took 4.416275327 seconds)
    (213/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.933450975 seconds)
    (214/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.020131219 seconds)
    (215/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.061683541 seconds)
    (216/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.139139536 seconds)
    (217/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 4.809761061 seconds)
    (218/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.612087431 seconds)
    (219/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 2.066512788 seconds)
    (220/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.065850065 seconds)
    (221/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.670006602 seconds)
    (222/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.067583747 seconds)
    (223/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.976428247 seconds)
    (224/608) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 7.124607318 seconds)
    (225/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.822581645 seconds)
    (226/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.094617398 seconds)
    (227/608) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.287129931 seconds)
    (228/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.770821923 seconds)
    (229/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.347422148 seconds)
    (230/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.140345127 seconds)
    (231/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.139424667 seconds)
    (232/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 7.063808204 seconds)
    (233/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.070139127 seconds)
    (234/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.763884091 seconds)
    (235/608) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.071236874 seconds)
    (236/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.764062191 seconds)
    (237/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.359471097 seconds)
    (238/608) benchmarking ("sumlinear", "BitMatrix")...
    done (took 5.339806163 seconds)
    (239/608) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.498080866 seconds)
    (240/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.131415291 seconds)
    (241/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.273978418 seconds)
    (242/608) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 2.077816154 seconds)
    (243/608) benchmarking ("sumeach", "1:100000")...
    done (took 2.064540136 seconds)
    (244/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.547475116 seconds)
    (245/608) benchmarking ("sumvector", "1:100000")...
    done (took 2.0943148 seconds)
    (246/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.064964678 seconds)
    (247/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.267117473 seconds)
    (248/608) benchmarking ("sumlogical", "1:100000")...
    done (took 2.581887914 seconds)
    (249/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.36021868 seconds)
    (250/608) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.714571572 seconds)
    (251/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.149101194 seconds)
    (252/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 7.064046733 seconds)
    (253/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.336031718 seconds)
    (254/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.074676615 seconds)
    (255/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.651914806 seconds)
    (256/608) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 2.751797076 seconds)
    (257/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.066512063 seconds)
    (258/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 7.063278452 seconds)
    (259/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.333720136 seconds)
    (260/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.75062444 seconds)
    (261/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.066408017 seconds)
    (262/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.040490827 seconds)
    (263/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.072144617 seconds)
    (264/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.277700145 seconds)
    (265/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.268607973 seconds)
    (266/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.339393977 seconds)
    (267/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.363534978 seconds)
    (268/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.519171624 seconds)
    (269/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.990962589 seconds)
    (270/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.070692047 seconds)
    (271/608) benchmarking "4d"...
    done (took 3.086811777 seconds)
    (272/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.309444018 seconds)
    (273/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.063962093 seconds)
    (274/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.100569701 seconds)
    (275/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.512649046 seconds)
    (276/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.119352563 seconds)
    (277/608) benchmarking ("sumcartesian_view", "Matrix{Int64}")...
    done (took 2.49531362 seconds)
    (278/608) benchmarking ("sumvector", "Matrix{Float64}")...
    done (took 2.347153639 seconds)
    (279/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.430539138 seconds)
    (280/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.707789592 seconds)
    (281/608) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.328033525 seconds)
    (282/608) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 2.130360936 seconds)
    (283/608) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 2.077763573 seconds)
    (284/608) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 2.71425557 seconds)
    (285/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.194005943 seconds)
    (286/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.999824944 seconds)
    (287/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.184148176 seconds)
    (288/608) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.992718013 seconds)
    (289/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.818984837 seconds)
    (290/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.362979997 seconds)
    (291/608) benchmarking ("sumvector_view", "Matrix{Float64}")...
    done (took 2.083671548 seconds)
    (292/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.338583651 seconds)
    (293/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.049245166 seconds)
    (294/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.402337682 seconds)
    (295/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.363169717 seconds)
    (296/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.298591892 seconds)
    (297/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.121960767 seconds)
    (298/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.094651877 seconds)
    (299/608) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 7.066469637 seconds)
    (300/608) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.115940479 seconds)
    (301/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 7.066224997 seconds)
    (302/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.236779477 seconds)
    (303/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.184598626 seconds)
    (304/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.069637283 seconds)
    (305/608) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.609347759 seconds)
    (306/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.108475665 seconds)
    (307/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.113772457 seconds)
    (308/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.072692818 seconds)
    (309/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.576890854 seconds)
    (310/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.093209804 seconds)
    (311/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.067171707 seconds)
    (312/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.762085859 seconds)
    (313/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.09169546 seconds)
    (314/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.186161376 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.138522479 seconds)
    (316/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.81421904 seconds)
    (317/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.689219238 seconds)
    (318/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 7.184729392 seconds)
    (319/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.944308613 seconds)
    (320/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.719603763 seconds)
    (321/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.339445958 seconds)
    (322/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.123149745 seconds)
    (323/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.521597275 seconds)
    (324/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.111953312 seconds)
    (325/608) benchmarking ("sumlinear", "Matrix{Int64}")...
    done (took 2.472548503 seconds)
    (326/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 7.067980227 seconds)
    (327/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.285595613 seconds)
    (328/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.074072846 seconds)
    (329/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.634523422 seconds)
    (330/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.119335628 seconds)
    (331/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.341519414 seconds)
    (332/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.032840331 seconds)
    (333/608) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.283469279 seconds)
    (334/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.281118012 seconds)
    (335/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.101578933 seconds)
    (336/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.076120097 seconds)
    (337/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.996652104 seconds)
    (338/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.234255081 seconds)
    (339/608) benchmarking ("sumcolon", "1:100000")...
    done (took 2.951686281 seconds)
    (340/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.051823971 seconds)
    (341/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.074513215 seconds)
    (342/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.75394817 seconds)
    (343/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.479725987 seconds)
    (344/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.271833084 seconds)
    (345/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.516489717 seconds)
    (346/608) benchmarking "3d"...
    done (took 2.902571875 seconds)
    (347/608) benchmarking ("sum", "3darray")...
    done (took 2.073756973 seconds)
    (348/608) benchmarking ("sumlogical", "Matrix{Int64}")...
    done (took 4.39528129 seconds)
    (349/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.473983693 seconds)
    (350/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.682538941 seconds)
    (351/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.107548968 seconds)
    (352/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.073088203 seconds)
    (353/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.370874873 seconds)
    (354/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 2.212892802 seconds)
    (355/608) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.340210186 seconds)
    (356/608) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.36317099 seconds)
    (357/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.079776456 seconds)
    (358/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 2.098098914 seconds)
    (359/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.284088714 seconds)
    (360/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.199153714 seconds)
    (361/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.990332289 seconds)
    (362/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.55202147 seconds)
    (363/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.655649015 seconds)
    (364/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.772235207 seconds)
    (365/608) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 2.082782922 seconds)
    (366/608) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.276701308 seconds)
    (367/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.374769691 seconds)
    (368/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.360424503 seconds)
    (369/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.111534736 seconds)
    (370/608) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.145896347 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Matrix{Int64}")...
    done (took 2.476464957 seconds)
    (372/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.345831482 seconds)
    (373/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.141770389 seconds)
    (374/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.998397419 seconds)
    (375/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.072869639 seconds)
    (376/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.468725721 seconds)
    (377/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.472569115 seconds)
    (378/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.171380228 seconds)
    (379/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.314484785 seconds)
    (380/608) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.3830445 seconds)
    (381/608) benchmarking ("sumrange", "Matrix{Int64}")...
    done (took 6.700788597 seconds)
    (382/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.677832548 seconds)
    (383/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.504416718 seconds)
    (384/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.487150738 seconds)
    (385/608) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.529519368 seconds)
    (386/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.473947156 seconds)
    (387/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.288593046 seconds)
    (388/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.446825314 seconds)
    (389/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.403483592 seconds)
    (390/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.665237113 seconds)
    (391/608) benchmarking ("sumelt", "Matrix{Int64}")...
    done (took 2.485487686 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.286972122 seconds)
    (393/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.16525741 seconds)
    (394/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.353379202 seconds)
    (395/608) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.956476276 seconds)
    (396/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.784025029 seconds)
    (397/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.3170974 seconds)
    (398/608) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 2.0794816 seconds)
    (399/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.003541727 seconds)
    (400/608) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.281655262 seconds)
    (401/608) benchmarking ("sumeach_view", "Matrix{Float64}")...
    done (took 7.078218742 seconds)
    (402/608) benchmarking ("sumcolon", "Matrix{Float64}")...
    done (took 6.563056013 seconds)
    (403/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.603100371 seconds)
    (404/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.323125735 seconds)
    (405/608) benchmarking ("sumlogical_view", "Matrix{Float64}")...
    done (took 4.299052454 seconds)
    (406/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.552068703 seconds)
    (407/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.614121585 seconds)
    (408/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.255490693 seconds)
    (409/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.103362849 seconds)
    (410/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 4.040537119 seconds)
    (411/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.098480501 seconds)
    (412/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.095538145 seconds)
    (413/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 7.074773633 seconds)
    (414/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.55484851 seconds)
    (415/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.362660897 seconds)
    (416/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.075614147 seconds)
    (417/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.013965144 seconds)
    (418/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.748221239 seconds)
    (419/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.001667234 seconds)
    (420/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.287843471 seconds)
    (421/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.247772645 seconds)
    (422/608) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 2.106393914 seconds)
    (423/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.63167023 seconds)
    (424/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.315873611 seconds)
    (425/608) benchmarking ("sumcolon_view", "Matrix{Int64}")...
    done (took 2.190682392 seconds)
    (426/608) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.365911881 seconds)
    (427/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.310088404 seconds)
    (428/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.114332963 seconds)
    (429/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.001693951 seconds)
    (430/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.821819443 seconds)
    (431/608) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 4.002068399 seconds)
    (432/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.133446524 seconds)
    (433/608) benchmarking ("sumeach", "Matrix{Int64}")...
    done (took 2.479972216 seconds)
    (434/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.093128685 seconds)
    (435/608) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 2.079742266 seconds)
    (436/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.278558346 seconds)
    (437/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.99445965 seconds)
    (438/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.123443345 seconds)
    (439/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.082141194 seconds)
    (440/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.277973875 seconds)
    (441/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.662798694 seconds)
    (442/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.351786999 seconds)
    (443/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.200830236 seconds)
    (444/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.321731329 seconds)
    (445/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.38357 seconds)
    (446/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.930213855 seconds)
    (447/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.116952834 seconds)
    (448/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.34921846 seconds)
    (449/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.003514286 seconds)
    (450/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.70381738 seconds)
    (451/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.763848686 seconds)
    (452/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 2.117665002 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.14933655 seconds)
    (454/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.076845542 seconds)
    (455/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.080163128 seconds)
    (456/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.320226417 seconds)
    (457/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.377159937 seconds)
    (458/608) benchmarking ("sumeach_view", "Matrix{Int64}")...
    done (took 7.325313926 seconds)
    (459/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.686214391 seconds)
    (460/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.113792374 seconds)
    (461/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.101865951 seconds)
    (462/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.38320323 seconds)
    (463/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.169799417 seconds)
    (464/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.079955609 seconds)
    (465/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.082465987 seconds)
    (466/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.560976939 seconds)
    (467/608) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.315622105 seconds)
    (468/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 7.07886709 seconds)
    (469/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.06184589 seconds)
    (470/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.29139402 seconds)
    (471/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.151548068 seconds)
    (472/608) benchmarking "sub2ind"...
    done (took 7.274398394 seconds)
    (473/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.153519264 seconds)
    (474/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.591296764 seconds)
    (475/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.082979929 seconds)
    (476/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.924726416 seconds)
    (477/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.190032318 seconds)
    (478/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.022423558 seconds)
    (479/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.075401273 seconds)
    (480/608) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.784738257 seconds)
    (481/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.143906072 seconds)
    (482/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 7.068944672 seconds)
    (483/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.341888362 seconds)
    (484/608) benchmarking "6d"...
    done (took 3.733028249 seconds)
    (485/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.282136487 seconds)
    (486/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.473614426 seconds)
    (487/608) benchmarking ("sumrange", "1:100000")...
    done (took 2.936613481 seconds)
    (488/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.251217949 seconds)
    (489/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.125122181 seconds)
    (490/608) benchmarking ("sumrange_view", "Matrix{Int64}")...
    done (took 2.071028866 seconds)
    (491/608) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 7.08089931 seconds)
    (492/608) benchmarking ("sumvector", "Matrix{Int64}")...
    done (took 2.499157449 seconds)
    (493/608) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.387855748 seconds)
    (494/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 7.079602104 seconds)
    (495/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.351530086 seconds)
    (496/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.126378263 seconds)
    (497/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.085435735 seconds)
    (498/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 2.739183257 seconds)
    (499/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.048932686 seconds)
    (500/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 7.079828762 seconds)
    (501/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.824711702 seconds)
    (502/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.98427814 seconds)
    (503/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.81004062 seconds)
    (504/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.474513428 seconds)
    (505/608) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 7.143320601 seconds)
    (506/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.084306493 seconds)
    (507/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.082579539 seconds)
    (508/608) benchmarking ("sumelt", "Matrix{Float64}")...
    done (took 4.005299149 seconds)
    (509/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 7.080389978 seconds)
    (510/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 5.261160784 seconds)
    (511/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.07729315 seconds)
    (512/608) benchmarking ("sumlinear_view", "Matrix{Int64}")...
    done (took 7.220215584 seconds)
    (513/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.350608506 seconds)
    (514/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.374351127 seconds)
    (515/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.183072321 seconds)
    (516/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.086132126 seconds)
    (517/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 2.080249776 seconds)
    (518/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.086314607 seconds)
    (519/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.294230815 seconds)
    (520/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.59514486 seconds)
    (521/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.096235922 seconds)
    (522/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.781293531 seconds)
    (523/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.283738094 seconds)
    (524/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.064285212 seconds)
    (525/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.559531176 seconds)
    (526/608) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.51849621 seconds)
    (527/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.332107033 seconds)
    (528/608) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 2.114625406 seconds)
    (529/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.260845915 seconds)
    (530/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.331607594 seconds)
    (531/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.62435154 seconds)
    (532/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.268970232 seconds)
    (533/608) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.062605931 seconds)
    (534/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.3029864 seconds)
    (535/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.08311964 seconds)
    (536/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.338226953 seconds)
    (537/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.349165646 seconds)
    (538/608) benchmarking ("sumlinear", "1:100000")...
    done (took 2.082779855 seconds)
    (539/608) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 2.282700251 seconds)
    (540/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.677526242 seconds)
    (541/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.375724499 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.434420074 seconds)
    (543/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.391869527 seconds)
    (544/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.152063297 seconds)
    (545/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 5.258677868 seconds)
    (546/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 3.021167544 seconds)
    (547/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 7.08596677 seconds)
    (548/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.084949237 seconds)
    (549/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.345027886 seconds)
    (550/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.139890415 seconds)
    (551/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.082383511 seconds)
    (552/608) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.090597022 seconds)
    (553/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.639857809 seconds)
    (554/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.77209537 seconds)
    (555/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.5489356 seconds)
    (556/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.244521138 seconds)
    (557/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.361407495 seconds)
    (558/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.932105987 seconds)
    (559/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.843645176 seconds)
    (560/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 2.084910518 seconds)
    (561/608) benchmarking ("sumeach", "Matrix{Float64}")...
    done (took 4.009341008 seconds)
    (562/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 7.083054554 seconds)
    (563/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.10857866 seconds)
    (564/608) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 2.085136674 seconds)
    (565/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.008865936 seconds)
    (566/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.82696693 seconds)
    (567/608) benchmarking "2d"...
    done (took 2.812925723 seconds)
    (568/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.288920445 seconds)
    (569/608) benchmarking "7d"...
    done (took 2.392067056 seconds)
    (570/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.009450415 seconds)
    (571/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.286750891 seconds)
    (572/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.686574776 seconds)
    (573/608) benchmarking ("sumlinear", "Matrix{Float64}")...
    done (took 4.00973403 seconds)
    (574/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.05290685 seconds)
    (575/608) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 7.084574465 seconds)
    (576/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.340995457 seconds)
    (577/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.010568572 seconds)
    (578/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.087014792 seconds)
    (579/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.037413993 seconds)
    (580/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.340115317 seconds)
    (581/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.80516115 seconds)
    (582/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.359815897 seconds)
    (583/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 7.084330088 seconds)
    (584/608) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.028691922 seconds)
    (585/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.088255333 seconds)
    (586/608) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 7.084885246 seconds)
    (587/608) benchmarking ("mapr_access", "BitMatrix")...
    done (took 7.084896438 seconds)
    (588/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.169215421 seconds)
    (589/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 2.084195361 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.201226795 seconds)
    (591/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.347218448 seconds)
    (592/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.433531371 seconds)
    (593/608) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 2.196907969 seconds)
    (594/608) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.724388967 seconds)
    (595/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.772945793 seconds)
    (596/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.028548238 seconds)
    (597/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.128234821 seconds)
    (598/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.699380748 seconds)
    (599/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.655441854 seconds)
    (600/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.33774022 seconds)
    (601/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.22044134 seconds)
    (602/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.776614256 seconds)
    (603/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.036011242 seconds)
    (604/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.087172399 seconds)
    (605/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.101488423 seconds)
    (606/608) benchmarking ("mapr_access", "Matrix{Float64}")...
    done (took 3.344706647 seconds)
    (607/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.092321122 seconds)
    (608/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.088792064 seconds)
  done (took 2200.201408332 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 7.087377747 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 7.152329366 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 7.158939509 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.162359333 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.305703587 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.103783895 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.115331156 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 7.150328575 seconds)
  done (took 59.249477555 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hcat", 500)...
    done (took 7.086133613 seconds)
    (2/17) benchmarking "4467"...
    done (took 4.110284999 seconds)
    (3/17) benchmarking ("vcat_setind", 5)...
    done (took 2.098871668 seconds)
    (4/17) benchmarking ("catnd_setind", 500)...
    done (took 7.08975262 seconds)
    (5/17) benchmarking ("vcat", 500)...
    done (took 7.08584685 seconds)
    (6/17) benchmarking ("vcat", 5)...
    done (took 2.121512319 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.278497736 seconds)
    (8/17) benchmarking ("hvcat_setind", 5)...
    done (took 2.116484773 seconds)
    (9/17) benchmarking ("vcat_setind", 500)...
    done (took 7.085251677 seconds)
    (10/17) benchmarking ("hvcat", 5)...
    done (took 2.089909798 seconds)
    (11/17) benchmarking ("hcat_setind", 500)...
    done (took 7.087103411 seconds)
    (12/17) benchmarking ("hcat", 5)...
    done (took 2.115578711 seconds)
    (13/17) benchmarking ("hvcat", 500)...
    done (took 7.08683448 seconds)
    (14/17) benchmarking ("catnd", 500)...
    done (took 7.101950313 seconds)
    (15/17) benchmarking ("hcat_setind", 5)...
    done (took 2.090819817 seconds)
    (16/17) benchmarking ("catnd", 5)...
    done (took 2.378373444 seconds)
    (17/17) benchmarking ("hvcat_setind", 500)...
    done (took 7.111358319 seconds)
  done (took 80.200909572 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.139913202 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.982525872 seconds)
    (3/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 7.092256841 seconds)
    (4/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 9.875241611 seconds)
    (5/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.133597341 seconds)
    (6/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.384340304 seconds)
    (7/12) benchmarking ("gramschmidt!", 100)...
    done (took 7.091547082 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 7.087047213 seconds)
    (9/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.423925206 seconds)
    (10/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.386420632 seconds)
    (11/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.098648142 seconds)
    (12/12) benchmarking ("gramschmidt!", 250)...
    done (took 7.100762987 seconds)
  done (took 94.811791579 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 4)...
    done (took 2.089775826 seconds)
    (2/5) benchmarking ("setindex!", 3)...
    done (took 2.087826708 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 2.088831218 seconds)
    (4/5) benchmarking ("setindex!", 1)...
    done (took 2.087617382 seconds)
    (5/5) benchmarking ("setindex!", 2)...
    done (took 2.08800946 seconds)
  done (took 12.457812055 seconds)
done (took 2743.858975682 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 2.332440411 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 2.184058008 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 2.164834914 seconds)
  done (took 6.364737308 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.232806719 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.279736863 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.39451601 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.415733346 seconds)
  done (took 11.344488212 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.377336208 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.475061545 seconds)
  done (took 6.867533928 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 2.460052039 seconds)
  (6/15) benchmarking "18129"...
  done (took 7.099905236 seconds)
  (7/15) benchmarking "20517"...
  done (took 2.531090948 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 7.089506828 seconds)
    (2/3) benchmarking "Float64"...
    done (took 7.092555038 seconds)
    (3/3) benchmarking "Float16"...
    done (took 7.092837518 seconds)
  done (took 23.296568672 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 2.088637497 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 2.089022654 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 2.089927559 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 2.090120961 seconds)
  done (took 10.374060203 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 7.088183182 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.862863871 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 7.086941315 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.099847651 seconds)
  done (took 22.154675795 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 2.29992039 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 3.176919124 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 2.853138779 seconds)
  done (took 10.347493581 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.709882039 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.544845722 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.696742717 seconds)
  done (took 9.969424292 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.917410065 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.099719839 seconds)
  done (took 8.035691463 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.228872481 seconds)
  done (took 4.246223315 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.928377933 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.403461399 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.563149689 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.617024195 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.681925154 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.317715942 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.418177217 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.36514234 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.496862796 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.497836555 seconds)
  done (took 27.308137234 seconds)
done (took 156.749695494 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.514817328 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.109364367 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.298569622 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.459662746 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.329833014 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.298209581 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.393140059 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.448706598 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.133989303 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.121761062 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.462472925 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.326050156 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.332725326 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.106564846 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.340100619 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.108867257 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.323834374 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.506265011 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.137279419 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.329872623 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.401946775 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.106611328 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.303412504 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.128605893 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.299674024 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.219188096 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.709936868 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.109941147 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.291931416 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.721783755 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.251692932 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.505161066 seconds)
  done (took 176.151489173 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.969967618 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.092761495 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.095055258 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.092070909 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.448653061 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.081565132 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.095187514 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.063889244 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.30103368 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.282981318 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.093536631 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.427798662 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.094506589 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.092726875 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.096135898 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.093089693 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.399871177 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.005240965 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.093260929 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.092984377 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.093864093 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.297334701 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.092702983 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.310228166 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.384194444 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.094770653 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.093393002 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.093880463 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.094346293 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.093105801 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.096626213 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.094154424 seconds)
  done (took 214.872325501 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.093115441 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.095721079 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.093886929 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.095082979 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.094978291 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.095491742 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.081521768 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.095113903 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.854601565 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.862280979 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.095148264 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.094633295 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.096433584 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.093488018 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.092323325 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.09433492 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.093790626 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.095969233 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.095319244 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.094845918 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.097492687 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.809129886 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.096107161 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.824891995 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.097711316 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.100933358 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.095581828 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.096247728 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.095000059 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.095209105 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.096912262 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.096109869 seconds)
  done (took 228.03312878 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.333867744 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 2.097123736 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.097699437 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 3.100262029 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.097623995 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 2.09616211 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 3.102856008 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.342217025 seconds)
  done (took 21.291761557 seconds)
done (took 642.377568528 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.464609986 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.830217633 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.228996444 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.119719777 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.366061954 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.169146522 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.112107625 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.18215172 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.771973619 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.192695946 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.506798148 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.123943432 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.806459412 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.143743325 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.229045815 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.176843208 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.489865179 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.770880968 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.262367125 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.782284031 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.32404289 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.036783618 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.202105674 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.8002067 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.52353364 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.062298644 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.13237675 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.488686509 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.118274295 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.349256294 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.792856216 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.367017596 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.136284783 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.122533142 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.175421379 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.161276511 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.311857829 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.131819871 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.235318499 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.829649086 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.758939035 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.641840459 seconds)
  done (took 109.457195646 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 2.103639869 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 2.10094483 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 2.100069506 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 2.101443483 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 2.109344273 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 2.101392984 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 2.101436417 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 2.100692204 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 2.101895089 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 2.100651022 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 2.101714271 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 2.109785122 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 2.101795576 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.109766135 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 2.101943076 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 2.101545783 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 2.101550364 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.109501937 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 2.10311499 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 2.102574377 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 2.101795565 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 2.101931211 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 2.099841952 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 2.102793098 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 2.102966233 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 2.103045774 seconds)
  done (took 56.712776517 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 2.09978468 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.251175761 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.389519484 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.138526882 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 2.101286928 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.104489308 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.12926537 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.107574189 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.103039998 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.103452228 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.213960264 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.109626 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.113250007 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.3858045 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.136667894 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 2.101073089 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 2.09998367 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 2.101620206 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.256355219 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.116519765 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.130940423 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.108603441 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.130513699 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.116056133 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 2.103220846 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.102698341 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.104452616 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.517376997 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.113433287 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.215561122 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.148136076 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.13952246 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.484427843 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.398218652 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.175720377 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.113128215 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 2.102587864 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.259467035 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.115272329 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 2.103339873 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.131502408 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.110822008 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.390018339 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.634231586 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.118261753 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 2.103058916 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.512307703 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.272070889 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.151116568 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.117316452 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.397189284 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.139606068 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 2.103131847 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 2.103991698 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.139553699 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.114971101 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 2.103681078 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.384039027 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.119725857 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.131162821 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.111507417 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.10379621 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.269389183 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.113738877 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.256271591 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.114271659 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.110137692 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 2.106110962 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.393555741 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.140919358 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.625805465 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.119113109 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 2.103342698 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.216558167 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.259451879 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.539368186 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.11740029 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.27063589 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.503697305 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.142867435 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.116030732 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.502220504 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.145167369 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.116024963 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 2.1036222 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.104382175 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.104521666 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.146991131 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.132131454 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.545328869 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.629068838 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.402609894 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.145710082 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.118353106 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 2.106413638 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.386303929 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.115669666 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.10472899 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.388135884 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.655202373 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.121624558 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.112317617 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.606798981 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.121789746 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.134486627 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.118341044 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.402542957 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.142811975 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.148577566 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.104184692 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.112083183 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.10868304 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.135323073 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.116652327 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.106198171 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.601188908 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.277662601 seconds)
  done (took 260.312232103 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 7.107623182 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.105466809 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 7.104442269 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 7.105535191 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 7.091979565 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.106481634 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 7.104442403 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 7.105611733 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.106613468 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 7.104043744 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 7.105599254 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 7.104313121 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 7.108629555 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.107226842 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.146272966 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.108145963 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.596039466 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.106391183 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.105181684 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.106593475 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.67129251 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.112248383 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.105974919 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.107911722 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.10606669 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.083391332 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.103756156 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.148603236 seconds)
  done (took 174.116841098 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.106638591 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.142614792 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.102367694 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.143920378 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.121911246 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.094617569 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.127669888 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.111036127 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.114646322 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.107823388 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.105182327 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.135263147 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.115184406 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.180276344 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.13573425 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.141571813 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.184520325 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.113485188 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.107484973 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.107751474 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.154557656 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.124334556 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.139287634 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.163191229 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.127416221 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.156449437 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.126016316 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.108262713 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.108091085 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.197706829 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.12765101 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.136857658 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.14495033 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.128460493 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.205349659 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.198501714 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.18781805 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.135253822 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.113825911 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.109035793 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.108103883 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.110305679 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.157179501 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.126902932 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.110248933 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.19995362 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.129023949 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.108544991 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.131916256 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.109353404 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.121349103 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.129914751 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.144459605 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.209745272 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.154284412 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.135371631 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.131298129 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.127068137 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.108646442 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.182020464 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.116824594 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.199332146 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.131495078 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.112165065 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.110691159 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.11480814 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.158143385 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.15191172 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.186937075 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.117090381 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.183901946 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.164123768 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.130512092 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.110688176 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.098974278 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.158255769 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.203761672 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.164269868 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.166177916 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.152963933 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.120872079 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.110615196 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.10013986 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.138785083 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.117822779 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.198285943 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.201281576 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.116325679 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.112407501 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.107689464 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.111643398 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.134667579 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.168578801 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.157491303 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.193575171 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.145206502 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.147225749 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.11894272 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.123322677 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.117940072 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.141794522 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.11965769 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.124440407 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.463171594 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.150747102 seconds)
  done (took 226.841912236 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.472475712 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.156962748 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.183162019 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.391465721 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.497694098 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.221341798 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.152751336 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.169359226 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.172530724 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.29155866 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.221919261 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.201756158 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.15163631 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.134445741 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.156588945 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.168152305 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.181860757 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.451836314 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.261594273 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.865066425 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.140137544 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.417377132 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.444902086 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.470980106 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.191689396 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.603563808 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.770088976 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.246138507 seconds)
  done (took 68.831936836 seconds)
done (took 898.297500055 seconds)
SAVING RESULT...
DONE!
