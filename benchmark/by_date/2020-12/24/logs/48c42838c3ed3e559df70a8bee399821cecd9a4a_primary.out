cset: moving following pidspec: 7833
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.862769029 seconds)
loading group "shootout"... done (took 1.175314291 seconds)
loading group "string"... done (took 0.672783612 seconds)
loading group "linalg"... done (took 8.656691519 seconds)
loading group "parallel"... done (took 0.165786031 seconds)
loading group "find"... done (took 3.055085194 seconds)
loading group "tuple"... done (took 2.152281858 seconds)
loading group "union"... done (took 14.904820284 seconds)
loading group "dates"... done (took 1.47029137 seconds)
loading group "micro"... done (took 0.218875282 seconds)
loading group "simd"... done (took 4.723688178 seconds)
loading group "io"... done (took 1.066766939 seconds)
loading group "random"... done (took 9.60193317 seconds)
loading group "problem"... done (took 1.52482636 seconds)
loading group "array"... done (took 25.547464787 seconds)
loading group "misc"... done (took 1.899809497 seconds)
loading group "scalar"... done (took 43.726878941 seconds)
loading group "sort"... done (took 3.333984555 seconds)
loading group "sparse"... done (took 12.797238995 seconds)
loading group "collection"... done (took 18.830148166 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.421117413 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.113103794 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.125725388 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.110955876 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.182946535 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.117476631 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.126375218 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.08205554 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.877520418 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.133945047 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.112628868 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.420125113 seconds)
done (took 5.256882081 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 0.164598519 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.089343477 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081907444 seconds)
  done (took 1.375241848 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 0.069636343 seconds)
    (2/3) benchmarking "different length"...
    done (took 0.061129274 seconds)
    (3/3) benchmarking "different"...
    done (took 0.065751111 seconds)
  done (took 1.403016812 seconds)
  (4/7) benchmarking "replace"...
  done (took 0.0649102 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.132165094 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.064777669 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.06609146 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066061839 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065408345 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.06569595 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065339438 seconds)
  done (took 1.737138341 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.070249016 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.065419378 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.063521234 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067099903 seconds)
  done (took 1.477371833 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 0.063364089 seconds)
    (2/4) benchmarking "equal"...
    done (took 0.119370388 seconds)
    (3/4) benchmarking "different length"...
    done (took 0.062996569 seconds)
    (4/4) benchmarking "different"...
    done (took 0.063514956 seconds)
  done (took 1.517073889 seconds)
done (took 8.968471234 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.137143918 seconds)
    (2/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.812539821 seconds)
    (3/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.76945164 seconds)
    (4/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.122116133 seconds)
    (5/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.24293116 seconds)
    (6/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.363819681 seconds)
    (7/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.121261845 seconds)
    (8/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.179915781 seconds)
    (9/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.086606864 seconds)
    (10/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.073318476 seconds)
    (11/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.119071235 seconds)
    (12/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.075461864 seconds)
    (13/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.380720349 seconds)
    (14/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.495106001 seconds)
    (15/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.069019674 seconds)
    (16/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.167308572 seconds)
    (17/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.647119373 seconds)
    (18/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.084733267 seconds)
    (19/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.132671807 seconds)
    (20/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.443324233 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.071134451 seconds)
    (22/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.085720546 seconds)
    (23/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.082664634 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.069067413 seconds)
    (25/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.338733368 seconds)
    (26/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.148731018 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.65716645 seconds)
    (28/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.091064407 seconds)
    (29/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.06623712 seconds)
    (30/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.092563636 seconds)
    (31/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.068113806 seconds)
    (32/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.076279654 seconds)
  done (took 10.613581657 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.091947478 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.088735518 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.067344214 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.123773478 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.091764203 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068422048 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.074397985 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067609924 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.088951301 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.124761033 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088302621 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.097245862 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064243431 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.067625765 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.072081687 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.194752688 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.07818239 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.07953535 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.066707091 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.081365726 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.10666361 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.07838569 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.078430648 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.078599321 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.132411553 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.171066925 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.097331959 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096586526 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.064158243 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.078345657 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114704446 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125748019 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.064973974 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.063383431 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.119534989 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093006381 seconds)
  done (took 4.605919455 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.872003805 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.094553429 seconds)
    (2/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.083238113 seconds)
    (3/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.073901954 seconds)
    (4/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.106616889 seconds)
    (5/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113674285 seconds)
    (6/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.119220388 seconds)
    (7/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.120300467 seconds)
    (8/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.097296922 seconds)
    (9/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.06707756 seconds)
    (10/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.154528049 seconds)
    (11/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.662078059 seconds)
    (12/118) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 2.165364273 seconds)
    (13/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.070332979 seconds)
    (14/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.117874147 seconds)
    (15/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.354528071 seconds)
    (16/118) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.05991904 seconds)
    (17/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.068762354 seconds)
    (18/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.066186164 seconds)
    (19/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.069037268 seconds)
    (20/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.069251588 seconds)
    (21/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.10990618 seconds)
    (22/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.064176046 seconds)
    (23/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.172644864 seconds)
    (24/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.576497879 seconds)
    (25/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.068963678 seconds)
    (26/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.067985478 seconds)
    (27/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.094283067 seconds)
    (28/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.063810621 seconds)
    (29/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.136848411 seconds)
    (30/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.090290761 seconds)
    (31/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.067865653 seconds)
    (32/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.54089202 seconds)
    (33/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.063566983 seconds)
    (34/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.061903036 seconds)
    (35/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.086493307 seconds)
    (36/118) benchmarking ("3-arg mul!", 2)...
    done (took 0.090865923 seconds)
    (37/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.175765882 seconds)
    (38/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.06695499 seconds)
    (39/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.077359928 seconds)
    (40/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.064932689 seconds)
    (41/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.107471638 seconds)
    (42/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.077630817 seconds)
    (43/118) benchmarking ("5-arg mul!", 3)...
    done (took 0.50848042 seconds)
    (44/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.067796865 seconds)
    (45/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.578765714 seconds)
    (46/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.222658727 seconds)
    (47/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.070639852 seconds)
    (48/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.070489995 seconds)
    (49/118) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.098851425 seconds)
    (50/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.062561147 seconds)
    (51/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.06572833 seconds)
    (52/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.885878159 seconds)
    (53/118) benchmarking ("5-arg mul!", 2)...
    done (took 0.145651565 seconds)
    (54/118) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.094384543 seconds)
    (55/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.066101104 seconds)
    (56/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.274421232 seconds)
    (57/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.068676187 seconds)
    (58/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.068164454 seconds)
    (59/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.068530698 seconds)
    (60/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.099643111 seconds)
    (61/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.066762939 seconds)
    (62/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.070528127 seconds)
    (63/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.072917686 seconds)
    (64/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.095837701 seconds)
    (65/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 0.861579577 seconds)
    (66/118) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.088612789 seconds)
    (67/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.096463435 seconds)
    (68/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.067313774 seconds)
    (69/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.396754717 seconds)
    (70/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.072083329 seconds)
    (71/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.067634006 seconds)
    (72/118) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.081566597 seconds)
    (73/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.067924425 seconds)
    (74/118) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.066873669 seconds)
    (75/118) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.106450637 seconds)
    (76/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.065188044 seconds)
    (77/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066023606 seconds)
    (78/118) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.109869546 seconds)
    (79/118) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.09310424 seconds)
    (80/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.086704988 seconds)
    (81/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.068179754 seconds)
    (82/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.065274245 seconds)
    (83/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.065897662 seconds)
    (84/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.332127722 seconds)
    (85/118) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.188058677 seconds)
    (86/118) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.064105338 seconds)
    (87/118) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.061406772 seconds)
    (88/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.064638182 seconds)
    (89/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.469474683 seconds)
    (90/118) benchmarking ("3-arg mul!", 3)...
    done (took 0.061760978 seconds)
    (91/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.063989813 seconds)
    (92/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.066181401 seconds)
    (93/118) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 0.206154929 seconds)
    (94/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.067661849 seconds)
    (95/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.062538786 seconds)
    (96/118) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.06364937 seconds)
    (97/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.097850505 seconds)
    (98/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.066221952 seconds)
    (99/118) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.333731762 seconds)
    (100/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.065499435 seconds)
    (101/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.466530209 seconds)
    (102/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.066718035 seconds)
    (103/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.101282148 seconds)
    (104/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.117909562 seconds)
    (105/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.065872498 seconds)
    (106/118) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064739918 seconds)
    (107/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.100159479 seconds)
    (108/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.066721339 seconds)
    (109/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.063643508 seconds)
    (110/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.072377005 seconds)
    (111/118) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.065457058 seconds)
    (112/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.06412036 seconds)
    (113/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.069288098 seconds)
    (114/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065493388 seconds)
    (115/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.065978226 seconds)
    (116/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.069410638 seconds)
    (117/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.068082192 seconds)
    (118/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.067536492 seconds)
  done (took 22.597736352 seconds)
done (took 39.9032551 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 512)...
    done (took 0.3105899 seconds)
    (2/5) benchmarking ("identity", 4096)...
    done (took 0.076781006 seconds)
    (3/5) benchmarking ("identity", 2)...
    done (took 0.07693966 seconds)
    (4/5) benchmarking ("identity", 1024)...
    done (took 0.077144141 seconds)
    (5/5) benchmarking ("identity", 64)...
    done (took 0.078572941 seconds)
  done (took 1.880467078 seconds)
done (took 3.234686862 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 0.24958862 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.073155413 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 0.062646093 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.200269649 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 0.086165311 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 0.172547689 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 0.214569694 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 0.164190751 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 0.086183603 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 0.086309697 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 0.086208844 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 0.216183487 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 0.222320828 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 0.086389963 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.156835074 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 0.223218032 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 0.086353537 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 0.062368423 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 0.085963679 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 0.085975248 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 0.086238823 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.06201136 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 0.085888135 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 0.08601835 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.154919387 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 0.085917721 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 0.062811444 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.15853023 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 0.086847997 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.154398742 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 0.085263153 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 0.084404142 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 0.085083262 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.154622245 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 0.084664875 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.153349546 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.06226967 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 0.085113306 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 0.086263019 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 0.087994152 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 0.087622952 seconds)
  done (took 6.092481963 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.072798991 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.193393925 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.082136421 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.060436461 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.07013284 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.080224004 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.060469095 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.081869947 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.090986579 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.082135327 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.082251235 seconds)
  done (took 2.300884146 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.068247005 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.081340824 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.082230658 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.060202841 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.071653615 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.081921821 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.061689847 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.082808012 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.085589842 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.083343775 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.083488946 seconds)
  done (took 2.136072738 seconds)
done (took 11.809450188 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 0.095072503 seconds)
    (2/2) benchmarking "11899"...
    done (took 0.063808727 seconds)
  done (took 1.434851912 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.221985246 seconds)
    (2/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.499439392 seconds)
    (3/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 4.931894114 seconds)
    (4/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.090654965 seconds)
    (5/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.070080764 seconds)
    (6/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.083289398 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.195024507 seconds)
    (8/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.064682025 seconds)
  done (took 7.620482851 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.100183036 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.067049103 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.065662638 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.06762879 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.065662867 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.066928511 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.068628744 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069496432 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.067253552 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.068563022 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.067190406 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.067795694 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.06733973 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.067912568 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.068783979 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.068396039 seconds)
  done (took 2.502475715 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("minimum", (8,))...
    done (took 0.101484226 seconds)
    (2/24) benchmarking ("sumabs", (4,))...
    done (took 0.067438401 seconds)
    (3/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.097494463 seconds)
    (4/24) benchmarking ("minimum", (2,))...
    done (took 0.06053258 seconds)
    (5/24) benchmarking ("sum", (8,))...
    done (took 0.070183186 seconds)
    (6/24) benchmarking ("sumabs", (2,))...
    done (took 0.060418899 seconds)
    (7/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.06891456 seconds)
    (8/24) benchmarking ("minimum", (4, 4))...
    done (took 0.070725246 seconds)
    (9/24) benchmarking ("sumabs", (8,))...
    done (took 0.068028134 seconds)
    (10/24) benchmarking ("sum", (2, 2))...
    done (took 0.069444218 seconds)
    (11/24) benchmarking ("minimum", (2, 2))...
    done (took 0.070464839 seconds)
    (12/24) benchmarking ("sum", (4,))...
    done (took 0.068901321 seconds)
    (13/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.069428034 seconds)
    (14/24) benchmarking ("sumabs", (16,))...
    done (took 0.069482719 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.070966397 seconds)
    (16/24) benchmarking ("sum", (4, 4))...
    done (took 0.070691362 seconds)
    (17/24) benchmarking ("sum", (8, 8))...
    done (took 0.071023914 seconds)
    (18/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.068744973 seconds)
    (19/24) benchmarking ("minimum", (8, 8))...
    done (took 0.071114158 seconds)
    (20/24) benchmarking ("sum", (16, 16))...
    done (took 0.071656835 seconds)
    (21/24) benchmarking ("minimum", (4,))...
    done (took 0.070852748 seconds)
    (22/24) benchmarking ("sum", (16,))...
    done (took 0.071141346 seconds)
    (23/24) benchmarking ("minimum", (16, 16))...
    done (took 0.071821041 seconds)
    (24/24) benchmarking ("sum", (2,))...
    done (took 0.069364625 seconds)
  done (took 3.125155455 seconds)
done (took 15.977108701 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.171979258 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.073106053 seconds)
  done (took 1.527919139 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.065894818 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.066251528 seconds)
  done (took 1.430459147 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.070780363 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.058782945 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.076064375 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.068297393 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.05978444 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.060633805 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.077172242 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.061070315 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.060917696 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.060999914 seconds)
  done (took 1.951358133 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.060955788 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.066534435 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.065022691 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.063089047 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.064875285 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.061611718 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.065085619 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.062422765 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.069039102 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.061417714 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.065598293 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.08268822 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.065795 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.083458192 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.065105674 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.065562848 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.067334442 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.064967904 seconds)
  done (took 2.500645617 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.059212009 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.059776975 seconds)
  done (took 1.42491306 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.062541859 seconds)
    (2/7) benchmarking "second"...
    done (took 0.059710027 seconds)
    (3/7) benchmarking "month"...
    done (took 0.062476096 seconds)
    (4/7) benchmarking "year"...
    done (took 0.062327267 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.06009339 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.060904433 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.061582095 seconds)
  done (took 1.728605563 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.41766488 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.12144331 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.347190706 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.068796159 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.077058588 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.257370945 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.063340984 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.068627944 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.06839222 seconds)
  done (took 2.835065683 seconds)
done (took 14.710074922 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080460442 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.178941707 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.086105238 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.378858548 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.092092753 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066914558 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113021275 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.179543638 seconds)
done (took 2.502995407 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.276935761 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.22521314 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.397677415 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.125271713 seconds)
  done (took 3.058253246 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.329739706 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.076931743 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.075455928 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.064708861 seconds)
  done (took 1.870971699 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.063354066 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068965149 seconds)
  done (took 1.447424416 seconds)
done (took 7.980223744 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070069568 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.090519494 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.061004609 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.066735471 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.063410171 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.064204606 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.06326854 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.062777249 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.063495033 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.06147852 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.061231656 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.063660677 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.064162307 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063977893 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063427344 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063131071 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063997221 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063264564 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.062664858 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063438365 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063488524 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063746393 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.062803285 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.06303727 seconds)
  done (took 2.895647054 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.077131008 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.063599367 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.064866607 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.064394382 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.06565049 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.066049089 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.06612277 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.064936543 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.066160013 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.064622965 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066637091 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.067130579 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.065147444 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.066751438 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065031948 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.067085979 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.067002236 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065599919 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065100345 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.067104278 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.066431612 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065179464 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070176791 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066655764 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.066957811 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066819279 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.064694523 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065326586 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066218203 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.067268137 seconds)
  done (took 3.321615484 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.064070957 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.05867146 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.059870097 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.069635367 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.05953923 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.059760519 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.060378193 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.059260277 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.059730808 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.061038796 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.060446061 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.059962 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.060251991 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.059768703 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.059556043 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.060311193 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.064419642 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078959048 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.059989235 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.059695753 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.064073709 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.060095887 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.059900392 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.059687452 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.060499744 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.059550152 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.059367782 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.05985796 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.059526543 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.060787202 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.059676855 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.06385154 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.065039907 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.059198072 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069763509 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.064615921 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.059716878 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.063931202 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.061134513 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.059705499 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.059498226 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.059732803 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.059917824 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.05989616 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.07017484 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.060312873 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.061276953 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.060871617 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.060228776 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.05971283 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.059811417 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.062051873 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068070544 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.061210191 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.059957581 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.061125903 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.060092948 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.060570369 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.059766446 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.060237498 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.060119942 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.063834899 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.061613294 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.060633754 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.079825692 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.061525217 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070772888 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.060387975 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.060993321 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.063822534 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.060522229 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.078243954 seconds)
  done (took 5.796731688 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.069421246 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.070097937 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.077172617 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069466313 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063783579 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06052537 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.064429916 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060642457 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070308035 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.065006702 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060973273 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064447954 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070468065 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.065037219 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062305717 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.070139207 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.064916349 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064076847 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.060409829 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.064932365 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062015757 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.064650985 seconds)
  done (took 2.784222108 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.136939555 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064256219 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.103924013 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.070069941 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068920867 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.070491723 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.06621862 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066575643 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066209099 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066565065 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066623323 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066258289 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068417122 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066751894 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067027205 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066882082 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066314678 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066741042 seconds)
  done (took 2.643588036 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.074566841 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.064037754 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.08712505 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064014677 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.064859475 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065294912 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069340676 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.069948796 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.065325528 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065761128 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.069992595 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065257156 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.065109065 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066350938 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065303336 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065585761 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.065210028 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065561923 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070111892 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069267175 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.06994869 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071278914 seconds)
  done (took 2.831741587 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075018376 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.062687305 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.079066432 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06615541 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.05965328 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.059725541 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.066074796 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065074331 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.066029022 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.064598553 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065063769 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.060028912 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.067287112 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065217152 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.067098105 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064845999 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06473586 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065143172 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064819567 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060043196 seconds)
  done (took 2.640384115 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069720517 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06113327 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061525661 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066566736 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062204223 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.063414949 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068452816 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.062047888 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.061441539 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.083450895 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063155638 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073282852 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068528102 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.06674761 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.062883381 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06890936 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.06868838 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.06872309 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.062975493 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062620302 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.084782074 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.063894036 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068616376 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062955015 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06267253 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.063490087 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063073821 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.06649608 seconds)
  done (took 3.19455408 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06221674 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.061582054 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063036923 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.062591585 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.062652923 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.062464298 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.062737961 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062847509 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.062578394 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063176705 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.062774665 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.062729378 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065362688 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.062872007 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06270013 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.062482915 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062661512 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063041499 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063121365 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063201586 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.062600259 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062934116 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.063233471 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063355511 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063130758 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.062611878 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063269345 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063060787 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062528835 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062951095 seconds)
  done (took 3.22512233 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.070665909 seconds)
    (2/2) benchmarking "in"...
    done (took 0.069273215 seconds)
  done (took 1.478565261 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.059589908 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074919738 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.057897759 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070766015 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.067849943 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.063697842 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.06865975 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070133203 seconds)
  done (took 1.866231061 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.064287653 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.087957242 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.060009931 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.06020498 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.063193149 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.127580017 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.074342288 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.073196069 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.075499388 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064192894 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.062076341 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.073960928 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.061368938 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.075821462 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.063342562 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.070776017 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068908793 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.079499599 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.074297017 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.0600447 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073565368 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.062231861 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.060232593 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.062696354 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.061790745 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069452105 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.078183732 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.074995929 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070459652 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059617427 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.081169972 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.060488862 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.061585541 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070544726 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.065074202 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.060281603 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.097931031 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.060866315 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.065730407 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060034121 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072948533 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081534463 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.075457776 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.07949718 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.062986328 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.063174395 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060801127 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.063189789 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065079819 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.070923925 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060685003 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069055763 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060078039 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.06265426 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.07171134 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.060753206 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.065849886 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.07016946 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074182956 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070879512 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069391566 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.076061951 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.069129233 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.068353188 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.061226484 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.080186991 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.062122183 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073841443 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.075465558 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.061358483 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073976399 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.059721484 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.058915637 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.060023525 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094539016 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.061827099 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.061135874 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.060071512 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.060434834 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.061952716 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070295866 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.065965098 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068003654 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.06411516 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076753367 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.06989573 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.060387114 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.066931017 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.078397243 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063692052 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.060418833 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.076951368 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063791584 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.059502852 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078323371 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.070168619 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.061931695 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.0611373 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063534878 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.074099929 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.061556224 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.058921957 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068790236 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.061676016 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.06258295 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.064778905 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068322855 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.060103368 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.070327548 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.064595731 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.061549245 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.058587262 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064278579 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.060652313 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.058412991 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.06944227 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.05998278 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.074475303 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066056738 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.074232687 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074492353 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.07031247 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075409239 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.059341246 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.058369957 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.077633293 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069270497 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.060855561 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.077736975 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.059011332 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072122843 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.059010926 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.060802575 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.208691093 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060890009 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.063740572 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.061759503 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.066570803 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.062859767 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.063199507 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.06690734 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.069936222 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073631242 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.06198152 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.06979261 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.06083515 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.076415491 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070606414 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.064855605 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.063597881 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.06115182 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072469744 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067370612 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.069492575 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.059601433 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.060809482 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.060631326 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.07118965 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.070308265 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.062365683 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.067630086 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.064571429 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.061017523 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.060856839 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.061729068 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.063899889 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063576903 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.060869505 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068489389 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.06952714 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.074448299 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068850031 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.069477849 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.059349659 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.059640986 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.061990008 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.059886871 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.064511374 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069799654 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.076292094 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071664056 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.081418725 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.059938413 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069593074 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.061747696 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.077197 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.0741819 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.060989274 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.064898683 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.059382261 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.061529212 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.069863867 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072049271 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.074288658 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.075569665 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.064975908 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065174615 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.059963137 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.075379799 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.060892598 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069112625 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.069670604 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.064837285 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.060371206 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.062150258 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.06956589 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064798038 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.060470123 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.076514317 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.066508054 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.059866243 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074833056 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.060782042 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.071352647 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.059984763 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063981807 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065503488 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.062097002 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.07012407 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075719972 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059029094 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.061051872 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076218657 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.062659029 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.062106549 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068755931 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.075694522 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064981752 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.068678824 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071271923 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070796719 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064875813 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070419963 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.061187884 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.069451721 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.063213384 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072325771 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.059935897 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.078604053 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.058824678 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.075757886 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.060363805 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.071695884 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.060661543 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069917963 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.061177329 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.077276776 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.061419327 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.060736114 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.072166422 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.058695458 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069365209 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.059515327 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.06504555 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.066336517 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.069660689 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.061338004 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069233194 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.061232627 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068679954 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.064125268 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.0679278 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.069108175 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.064105638 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.059097365 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068493446 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070615527 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.067651855 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.060720048 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.061042451 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.060094746 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.212923862 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.063207747 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.063172742 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070364036 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.06633347 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067438019 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.062473299 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.063032163 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.062776678 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069399381 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070535824 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.07912971 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069465406 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.0685891 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.070119539 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.059884953 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076234021 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.060538794 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.070571086 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.058872639 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.066487526 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069989069 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.060476221 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.080328212 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.062093368 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068681151 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073144135 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068889723 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.063706602 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.078797807 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.063556032 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.069411655 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068563439 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065029463 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066829751 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.062006034 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069120544 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.070332734 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071194589 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.061462544 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068415385 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069274575 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.062316928 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.06799393 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.062191751 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068741317 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.062034765 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.059356616 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.064729598 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.071602455 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.064901543 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065445344 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.06065727 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.058990974 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.060717053 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.06732576 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.064991301 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069507549 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.075894519 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.059173796 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.061643431 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.059947401 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064060598 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.078814023 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.070097728 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.068653548 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065136193 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.059352774 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.062281955 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.062314341 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.061005843 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.063819201 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059269047 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.060087636 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070849781 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.062525666 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064472328 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060878616 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.061428104 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.070474753 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.065725989 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.060885237 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.067054247 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.059943203 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.065480161 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.059292396 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.062125497 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064877016 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.059606991 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064007382 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.070738158 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.077046177 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066736012 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069328626 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.0614439 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068694417 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075734394 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.067791537 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061571952 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069747041 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.059435694 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.079211978 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.06991997 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068574765 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070196813 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.060996864 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076980717 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.064749614 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070607205 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.075646307 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.061557292 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.066662816 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.059580333 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.075842522 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.064721926 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.059732555 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.068102177 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068102507 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066140045 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072255012 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.061030776 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.067926149 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06538852 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.063356575 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.061683632 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.061047517 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068506428 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075855346 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.060430001 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.063421528 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067500895 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.06821665 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.064169084 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071519771 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068059713 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.060813682 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.061063848 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.063408083 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.208320783 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072967632 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06094438 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065742595 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065673166 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.060668524 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067570033 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07741334 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069968311 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.0703898 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.05997899 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.059585597 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.078763679 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064473554 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.063991964 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068890642 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.07019791 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072560327 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.069934548 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077833293 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.06102475 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066309716 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072779099 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.061248152 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.060393168 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064261306 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.062195702 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.069335109 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.070454426 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067914177 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.062522165 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.06765328 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.074044436 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.06143681 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.064847626 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.065067302 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.061257407 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.071128312 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069090648 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.071799949 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.061858374 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.060019014 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063754966 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069514231 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068354097 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069480467 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.061251694 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.067487662 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.074302295 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067709239 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.063402827 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.059426753 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.063543137 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.069737548 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.064954942 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.059767436 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064924228 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063792509 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.067541678 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070040102 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064784284 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.059763788 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.077404614 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.068446399 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.069427649 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.06216917 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.062344771 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.060702235 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.059736425 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.07196563 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060132681 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.061688914 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.064946734 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.062167753 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.078482216 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.06892512 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.076706606 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06136394 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.064673779 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.060030235 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070523658 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.064896775 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.060570409 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071093867 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.059429491 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.076051927 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.072252739 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.066012686 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.059776167 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065170328 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.068264894 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.075123091 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069899346 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.06939719 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.064319972 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.070300625 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.062145802 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.071450115 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.059740506 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.059072967 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.07096924 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069430691 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.073251061 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.060385587 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.070952641 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.062452427 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.068778909 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.068676508 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.061979401 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.061920465 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.061591714 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069951261 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.064683152 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069522297 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.06500397 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077249291 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.061388434 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071811495 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069314684 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.07155504 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073988324 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073050054 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.068383698 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.060837784 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068031183 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.068020489 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.060796247 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.064505601 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.062603154 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.080824048 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.061134208 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.060806833 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.073704754 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.065516691 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.059399749 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.065356669 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.2083346 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.070732638 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.062866507 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.072308096 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.065259253 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.061719311 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065650397 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065479017 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.059467199 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.060178988 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.060190411 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.070601341 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.064906096 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.060747665 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.079956217 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.062217108 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069260561 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071756821 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066887415 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.061622014 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.05899412 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.061239972 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.07370703 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.07613963 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063773596 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069037124 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.061787048 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069946327 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.059104426 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069350588 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068740028 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069185411 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.059941166 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.060961808 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.075059448 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.076456606 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065494649 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.07012491 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.069866641 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.062056716 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.082428037 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.069320939 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.0616574 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.07200844 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062702981 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.059495999 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.059072324 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.061816196 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071871867 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.059585715 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.062731187 seconds)
  done (took 41.69735096 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.096194596 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.060440788 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.059886206 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.059541782 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068419901 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.060816279 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.059903436 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.060807043 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.060785357 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.062614695 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.060899344 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062611031 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.066887046 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.073641223 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068741826 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.063892944 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060623985 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.060913624 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.059809094 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.060971578 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.066516862 seconds)
  done (took 2.805262947 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.062429506 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.062672377 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.062472224 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.063341976 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061993165 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.058581005 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.063957896 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060122848 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.06469165 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06060674 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.064872402 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060173032 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.060539005 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.060876052 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060690965 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06191508 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.064546564 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063589658 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.060248229 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064612284 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.061717418 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.064335782 seconds)
  done (took 2.799595537 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.060236334 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.059132196 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068653797 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.05914708 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.059424768 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.063234499 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.059443065 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.063950147 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.063972699 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.064281013 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.069098136 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.060564078 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.059429739 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.065508356 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.059672635 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.060807676 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.103418211 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.060921973 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.06098878 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.060008901 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.062431874 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.069520909 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.059496946 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.059592563 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064082791 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.062925738 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.059460794 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.062554155 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.060293012 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.063980971 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.060862897 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.059460611 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068752802 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068398438 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.063967939 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064078777 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.061394634 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.060740856 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.059735709 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.059681167 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.06878238 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.061293304 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.059742941 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.061047896 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069003508 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.059255749 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.059396399 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068940962 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.059431469 seconds)
  done (took 4.533668936 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.068849226 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.110986185 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.065118663 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.093528288 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.072698904 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.066101176 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.065588853 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.094838125 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.060846955 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.061727333 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.073841181 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.074037296 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.062828364 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.064426476 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.065475903 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.062897498 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.063452959 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.061879758 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.065955803 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.062304799 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.065367578 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.066547851 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.072833628 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.073361311 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.063921047 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.062144329 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.062287406 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.064020175 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.072881203 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.066125175 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.063906789 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.064577622 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.073109252 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.067823048 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.062257216 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.062149914 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.073622818 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.062784567 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.062784915 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.060975385 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.062165353 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.064067886 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.066754594 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.074076117 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06279537 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.067431708 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.062951992 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.060848646 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.073275328 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.062210533 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.06677865 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.074349492 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.063704874 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.063334941 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.064386975 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.073499921 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.063163731 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.061538095 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.063304097 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.073152952 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.061254877 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.063856898 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.076434311 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.062765297 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.066901129 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.074560519 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.067743036 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.063946514 seconds)
  done (took 6.180354375 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067488307 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.092782331 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074376878 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073863298 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068854232 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.069400369 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070812656 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.070718976 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.070569055 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.074039071 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070512455 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.10566309 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067100684 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.072757063 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071068724 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070770818 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.070760764 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07073629 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.070462384 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070444287 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.070663687 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.075644026 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.069610136 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.074298736 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.072132988 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066811432 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.070516071 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.070394517 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076036249 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.070726773 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.072846731 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.070336081 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071229002 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075646851 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.072679133 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.070051858 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.060686018 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070863809 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.070628606 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.070505338 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066784497 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075873583 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070267767 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.066624054 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070495262 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070123208 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.076064447 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.073237703 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07427611 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073671916 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.070760825 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.076215062 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070867703 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070644752 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.076169914 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.078779317 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076266078 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076415852 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070855349 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.076349322 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076419392 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.078656833 seconds)
  done (took 5.984032708 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071655458 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065542958 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.076915171 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.05833826 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.058296587 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067580187 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.058492111 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.059055385 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066188644 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.065633078 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068176308 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069614725 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071940897 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068583739 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070065927 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07143671 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069871443 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06947044 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066667154 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069594472 seconds)
  done (took 2.809948317 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.07304976 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.07723825 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.064325653 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067775259 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.063841503 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067664687 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.063357976 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064305507 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064640548 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064305315 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068588649 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068929826 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065484789 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06933671 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.070464874 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.06942206 seconds)
  done (took 2.534296682 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.062321743 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.066150442 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.065109145 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.06024561 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.061585574 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.059187504 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.06005929 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.058915348 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062385527 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.073296574 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.060893525 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.064009154 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.061227671 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.059875396 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.060471395 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.063526099 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062792332 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.061395233 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.061138011 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.065253827 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.069458636 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.061629481 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.063868027 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.060729549 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.063144075 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.069840827 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.062083203 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063250344 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.060641945 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.063537592 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.063461753 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.067768531 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063222365 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.061110404 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.059852642 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063491563 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.061389952 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.063798187 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.063710733 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.061821693 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.059759489 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065597491 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.061238232 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.061569382 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062734192 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.06409248 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062820874 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.066608145 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.061112256 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.063272382 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.061244951 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.063178951 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.061352475 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.068062362 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.063453479 seconds)
  done (took 4.914562205 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075599167 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.063568163 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.057992486 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.058046073 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.06433966 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.065733715 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.065141372 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.065346167 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065787295 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.059433527 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066101945 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.064438499 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065943859 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.065538751 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06578022 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065434938 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.059445533 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.06510993 seconds)
  done (took 2.624462441 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.065250184 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064221293 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.063059041 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.060398513 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.060189661 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.065090854 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.059287183 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.061251201 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061322763 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.061747908 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0617877 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.061484873 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061717816 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.061402033 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.066095135 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062189612 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.0614104 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.060135116 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.062207168 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.059981066 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066929068 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.060215658 seconds)
  done (took 2.825784319 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.085597333 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.081836668 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.124716476 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.077830784 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.086321486 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.070025063 seconds)
  done (took 1.985138004 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091207773 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095303675 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064175287 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.064819361 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069798352 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068031982 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068025841 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068443369 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071611243 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072368358 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068205636 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07238649 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071547504 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073924389 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070016585 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070612813 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068256973 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068341597 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065126123 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075940992 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068920168 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071954231 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068423627 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06832348 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068362778 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073975156 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072160901 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072185016 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068140451 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071823572 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070168083 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068409143 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072307324 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071977091 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.065741055 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071700564 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068289079 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076150033 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070481263 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073545189 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064762972 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069966822 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071829582 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071423502 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072014223 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068332278 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071641825 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068529007 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068903694 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077569667 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070403841 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073904501 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070519486 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072482879 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072032941 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077908392 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072524538 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073942846 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070224952 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072247287 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074102764 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070740801 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074020084 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072633084 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070453436 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074388388 seconds)
  done (took 6.183256458 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101726201 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063944575 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066834889 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070726778 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073891045 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068762487 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068556843 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068643042 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068671224 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065781112 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104251103 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068924038 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074146244 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077007346 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068691035 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068637558 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068948094 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074119665 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0660139 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077848308 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06838076 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073539775 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073830207 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073834021 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072446208 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070278147 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068370201 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068505933 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068381149 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068102836 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071469608 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068335034 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073749928 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065412585 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073847794 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068051184 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068528221 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071701513 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068544815 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070207567 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074290157 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076121448 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068421458 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068603301 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072407647 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06829958 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068394442 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065579265 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068269466 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0656276 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072227137 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073360639 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072882747 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07413425 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068487756 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068669591 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068750058 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068758614 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068752163 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070857021 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074059113 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068990937 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077821568 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069253092 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068765612 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074236587 seconds)
  done (took 6.191430411 seconds)
done (took 128.065742851 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.215467238 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.187880741 seconds)
  done (took 1.849981052 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.072570453 seconds)
    (2/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.163472819 seconds)
    (3/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.072460779 seconds)
    (4/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.072050232 seconds)
    (5/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.105733493 seconds)
    (6/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.10457698 seconds)
    (7/16) benchmarking ("transpose", (600, 600))...
    done (took 0.073268587 seconds)
    (8/16) benchmarking ("transpose", (600, 400))...
    done (took 0.06957416 seconds)
    (9/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.071767775 seconds)
    (10/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.06979293 seconds)
    (11/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.136570211 seconds)
    (12/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.073678687 seconds)
    (13/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069862272 seconds)
    (14/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.069655265 seconds)
    (15/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.070884481 seconds)
    (16/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.071230642 seconds)
  done (took 2.83306108 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104891752 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.199922782 seconds)
    (3/18) benchmarking ("IJV", 10)...
    done (took 0.080355093 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069059016 seconds)
    (5/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.151232462 seconds)
    (6/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.07625829 seconds)
    (7/18) benchmarking ("IJV", 100)...
    done (took 0.071464066 seconds)
    (8/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.076056911 seconds)
    (9/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.076244498 seconds)
    (10/18) benchmarking ("IV", 1000)...
    done (took 0.069271427 seconds)
    (11/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.106440561 seconds)
    (12/18) benchmarking ("Diagonal", 10)...
    done (took 0.083098471 seconds)
    (13/18) benchmarking ("Diagonal", 100)...
    done (took 0.074572468 seconds)
    (14/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.076767353 seconds)
    (15/18) benchmarking ("IJV", 1000)...
    done (took 0.071099562 seconds)
    (16/18) benchmarking ("Diagonal", 1000)...
    done (took 0.074783229 seconds)
    (17/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.075429973 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.075499819 seconds)
  done (took 3.085543188 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.100574059 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.089685246 seconds)
  done (took 1.666947701 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.153537902 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.103132003 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.142347775 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.339868285 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.133342141 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.135255758 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.139640213 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.13753936 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.10802572 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.131465352 seconds)
  done (took 2.992241237 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.103124174 seconds)
    (2/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.102140254 seconds)
    (3/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.302936347 seconds)
    (4/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.101873432 seconds)
    (5/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.081318309 seconds)
    (6/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076716315 seconds)
    (7/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.074069923 seconds)
    (8/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079239831 seconds)
    (9/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074253139 seconds)
    (10/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.075285716 seconds)
    (11/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.12143471 seconds)
    (12/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.073912703 seconds)
    (13/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.071269052 seconds)
    (14/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.12389736 seconds)
    (15/54) benchmarking ("spmat", "array", 100)...
    done (took 0.099177527 seconds)
    (16/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.106380655 seconds)
    (17/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.069835662 seconds)
    (18/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077282478 seconds)
    (19/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.078744501 seconds)
    (20/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.0696382 seconds)
    (21/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.075176312 seconds)
    (22/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079136446 seconds)
    (23/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.178032682 seconds)
    (24/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.076471401 seconds)
    (25/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.097536268 seconds)
    (26/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.072747683 seconds)
    (27/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.074442448 seconds)
    (28/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.07204996 seconds)
    (29/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072396705 seconds)
    (30/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.075786066 seconds)
    (31/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.076602948 seconds)
    (32/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.096565679 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076452121 seconds)
    (34/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.081571391 seconds)
    (35/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.076439309 seconds)
    (36/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.096591532 seconds)
    (37/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.070576384 seconds)
    (38/54) benchmarking ("spmat", "array", 10)...
    done (took 0.098478472 seconds)
    (39/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.075843413 seconds)
    (40/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.071331798 seconds)
    (41/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.074221183 seconds)
    (42/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.078140646 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071272107 seconds)
    (44/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.077795325 seconds)
    (45/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074359951 seconds)
    (46/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076165097 seconds)
    (47/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.079500698 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.069575944 seconds)
    (49/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074044166 seconds)
    (50/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073251755 seconds)
    (51/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.071447796 seconds)
    (52/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.07543941 seconds)
    (53/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075414451 seconds)
    (54/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.076273806 seconds)
  done (took 6.189296712 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.104493566 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.105008414 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.0676648 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112212813 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104670895 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069281681 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.103888023 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.099350612 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.108048835 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068916316 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067644234 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.067986957 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.075623284 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.079910275 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.113040848 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.105090369 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069340278 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068826778 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.106827428 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.106816191 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068289044 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101311564 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.099511928 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.106995543 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067632216 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.0693698 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067882948 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.068299314 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.07367495 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.074166463 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068033523 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.074924236 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.082891254 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.072503298 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066805607 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.066939471 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067426519 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.074933031 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.075375956 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.075308981 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.074505456 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067119487 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067569191 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068046676 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06827853 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067072686 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.07374659 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.075075366 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.074216912 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067623028 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.06788371 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067190878 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.067880151 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.074534381 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.073643218 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.076011188 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.075056997 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067490998 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06767385 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069136283 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.075899356 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.076311983 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.075655218 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068863841 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.076320831 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067800918 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077247149 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080177144 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067857298 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.068653637 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067839293 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067622408 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068329479 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.073634797 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.074191657 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068524531 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.067760146 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067699548 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.07653918 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.073908778 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067618683 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.07320642 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067157506 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067672827 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068350536 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067970608 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.073478195 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.075495764 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068543463 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067465402 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.067578357 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067310381 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067073655 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.072944501 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.074549287 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.07464409 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.074796039 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068311592 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.07404452 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.073772327 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068455057 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.074267857 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067612126 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067863752 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.0678948 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.073107665 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.072661858 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.074443984 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06698924 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.066669306 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.073203755 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.075250854 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067574639 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.072424976 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.075268617 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.213182372 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067171901 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.076051957 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067367795 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.074743778 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067271016 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.074726638 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067195768 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.072436882 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066410388 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.065729948 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067133027 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.073257766 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068284197 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067821117 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068060055 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067572988 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.074044928 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.07824419 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06913965 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.074513804 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.074771542 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.068744959 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.074424143 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068037765 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.075394156 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068170448 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068332626 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06699096 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077057402 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067571945 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.06783545 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.067441042 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076862353 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068234506 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.076310604 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.073898331 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067086599 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080493604 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.0761588 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.073677507 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.075573491 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066973995 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.066175112 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066561408 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070114808 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.072797209 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.074139117 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.0682581 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06756689 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.073287273 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.076078582 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067209581 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.073656838 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.073995293 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.073970248 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068465977 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068084954 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.077173657 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.076925167 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.074352575 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.074051154 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.075094497 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068485026 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.073844695 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.073998151 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067826922 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079750131 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068541212 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.078202429 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.075008953 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.073959594 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.074955817 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.076413444 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.07695838 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.077250332 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.079394944 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068230684 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067898123 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.074601281 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067899772 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068005827 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.074027971 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068507275 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068736947 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.080554944 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066770165 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.07483042 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066210546 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.075556905 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067452933 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068549128 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079241791 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068694256 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068469827 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.074013797 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.067884363 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.073961797 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077133702 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.07190905 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067262841 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067888551 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.074403467 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.075427967 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067923519 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067369469 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06815931 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.073618723 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.073240616 seconds)
  done (took 18.117370855 seconds)
done (took 38.221632667 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.166211761 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.112466979 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.206832994 seconds)
    (4/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.196150949 seconds)
  done (took 2.25771546 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 0.097604313 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 0.062805853 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 0.077907977 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 0.087494881 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 0.062858587 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 0.07391192 seconds)
  done (took 1.982041756 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.19809409 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.17337492 seconds)
    (3/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.241156937 seconds)
  done (took 2.124867718 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((10000000,), 2)...
    done (took 0.36325052 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.150262483 seconds)
    (3/4) benchmarking ((1000, 1000), 1)...
    done (took 0.217060923 seconds)
    (4/4) benchmarking ((1000, 1000), 2)...
    done (took 0.506483424 seconds)
  done (took 2.852901834 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 0.107143115 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.096909591 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 0.07476113 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.108656709 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 0.08445047 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 0.061275345 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.1337721 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 0.068999995 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 0.099324812 seconds)
  done (took 2.411186813 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.140698713 seconds)
done (took 13.310254867 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.106225385 seconds)
    (2/341) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.2198238 seconds)
    (3/341) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.166055147 seconds)
    (4/341) benchmarking ("collect", "filter", Bool, true)...
    done (took 0.238941212 seconds)
    (5/341) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.297072501 seconds)
    (6/341) benchmarking ("collect", "all", Int8, false)...
    done (took 0.176266764 seconds)
    (7/341) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.219138207 seconds)
    (8/341) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.076261052 seconds)
    (9/341) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.236210949 seconds)
    (10/341) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.184119106 seconds)
    (11/341) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.254738516 seconds)
    (12/341) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.200633362 seconds)
    (13/341) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.135791211 seconds)
    (14/341) benchmarking ("collect", "filter", Float32, false)...
    done (took 0.191299389 seconds)
    (15/341) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.123735417 seconds)
    (16/341) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.091678453 seconds)
    (17/341) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.187773518 seconds)
    (18/341) benchmarking ("map", identity, Bool, true)...
    done (took 0.138656078 seconds)
    (19/341) benchmarking ("collect", "filter", Float64, false)...
    done (took 0.230422999 seconds)
    (20/341) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.225217139 seconds)
    (21/341) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.147337567 seconds)
    (22/341) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.223844711 seconds)
    (23/341) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.163167249 seconds)
    (24/341) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.07360507 seconds)
    (25/341) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.072207705 seconds)
    (26/341) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.199103936 seconds)
    (27/341) benchmarking ("perf_sum", Bool, true)...
    done (took 0.075833453 seconds)
    (28/341) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.07346367 seconds)
    (29/341) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.200339064 seconds)
    (30/341) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.107666308 seconds)
    (31/341) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.076769297 seconds)
    (32/341) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.157314708 seconds)
    (33/341) benchmarking ("map", abs, BigInt, true)...
    done (took 0.174094896 seconds)
    (34/341) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.064401961 seconds)
    (35/341) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068331618 seconds)
    (36/341) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.076767644 seconds)
    (37/341) benchmarking ("perf_sum", Float32, true)...
    done (took 0.070267339 seconds)
    (38/341) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.077467718 seconds)
    (39/341) benchmarking ("collect", "filter", BigFloat, true)...
    done (took 0.178391655 seconds)
    (40/341) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.223058563 seconds)
    (41/341) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.0760309 seconds)
    (42/341) benchmarking ("collect", "all", Int8, true)...
    done (took 0.068972994 seconds)
    (43/341) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068282732 seconds)
    (44/341) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.073926299 seconds)
    (45/341) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073299401 seconds)
    (46/341) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.073567183 seconds)
    (47/341) benchmarking ("collect", "all", BigFloat, false)...
    done (took 0.151919418 seconds)
    (48/341) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.073850843 seconds)
    (49/341) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.124033924 seconds)
    (50/341) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.19678239 seconds)
    (51/341) benchmarking ("collect", "all", Int64, false)...
    done (took 0.174053379 seconds)
    (52/341) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.124435536 seconds)
    (53/341) benchmarking ("collect", "filter", Int8, true)...
    done (took 0.156529564 seconds)
    (54/341) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.206082925 seconds)
    (55/341) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.093620105 seconds)
    (56/341) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.072428629 seconds)
    (57/341) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.075846375 seconds)
    (58/341) benchmarking ("perf_sum", Int8, false)...
    done (took 0.078289701 seconds)
    (59/341) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.072146015 seconds)
    (60/341) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.0926878 seconds)
    (61/341) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.07268724 seconds)
    (62/341) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.163712177 seconds)
    (63/341) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.147154048 seconds)
    (64/341) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.075862286 seconds)
    (65/341) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.083320452 seconds)
    (66/341) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.075613311 seconds)
    (67/341) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.072811659 seconds)
    (68/341) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.084575573 seconds)
    (69/341) benchmarking ("map", abs, Int64, true)...
    done (took 0.142969964 seconds)
    (70/341) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.082365777 seconds)
    (71/341) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.151264415 seconds)
    (72/341) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.147541996 seconds)
    (73/341) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.071660029 seconds)
    (74/341) benchmarking ("collect", "filter", BigInt, false)...
    done (took 0.152479253 seconds)
    (75/341) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088243462 seconds)
    (76/341) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.170568987 seconds)
    (77/341) benchmarking ("perf_sum", Float64, true)...
    done (took 0.069017268 seconds)
    (78/341) benchmarking ("perf_countequals", "Int8")...
    done (took 0.073584706 seconds)
    (79/341) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.07653683 seconds)
    (80/341) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.063842424 seconds)
    (81/341) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.222381319 seconds)
    (82/341) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.195738876 seconds)
    (83/341) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.077498902 seconds)
    (84/341) benchmarking ("collect", "all", BigInt, true)...
    done (took 0.144658696 seconds)
    (85/341) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.073587302 seconds)
    (86/341) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.16334149 seconds)
    (87/341) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.06629168 seconds)
    (88/341) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.064641964 seconds)
    (89/341) benchmarking ("collect", "filter", Bool, false)...
    done (took 0.067468296 seconds)
    (90/341) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.065799975 seconds)
    (91/341) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.237840081 seconds)
    (92/341) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.065094989 seconds)
    (93/341) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.073396423 seconds)
    (94/341) benchmarking ("map", abs, Int64, false)...
    done (took 0.065192129 seconds)
    (95/341) benchmarking ("map", identity, Float32, false)...
    done (took 0.143599707 seconds)
    (96/341) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.08796189 seconds)
    (97/341) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.189669361 seconds)
    (98/341) benchmarking ("map", identity, Float32, true)...
    done (took 0.065370244 seconds)
    (99/341) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072899691 seconds)
    (100/341) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.181992564 seconds)
    (101/341) benchmarking ("map", identity, Float64, false)...
    done (took 0.143410976 seconds)
    (102/341) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.074728859 seconds)
    (103/341) benchmarking ("map", abs, BigInt, false)...
    done (took 0.066810972 seconds)
    (104/341) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.063565295 seconds)
    (105/341) benchmarking ("sort", BigInt, false)...
    done (took 0.263355618 seconds)
    (106/341) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.09517413 seconds)
    (107/341) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.07459787 seconds)
    (108/341) benchmarking ("collect", "all", BigInt, false)...
    done (took 0.068874551 seconds)
    (109/341) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.084539835 seconds)
    (110/341) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.06562225 seconds)
    (111/341) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.078710854 seconds)
    (112/341) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.065231809 seconds)
    (113/341) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.220706665 seconds)
    (114/341) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.089606164 seconds)
    (115/341) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.06478614 seconds)
    (116/341) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.065542871 seconds)
    (117/341) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.188888587 seconds)
    (118/341) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072777545 seconds)
    (119/341) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.131263333 seconds)
    (120/341) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.067333257 seconds)
    (121/341) benchmarking ("perf_sum", Float32, false)...
    done (took 0.066600028 seconds)
    (122/341) benchmarking ("map", identity, Int8, false)...
    done (took 0.082176983 seconds)
    (123/341) benchmarking ("collect", "all", BigFloat, true)...
    done (took 0.068955599 seconds)
    (124/341) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.069189945 seconds)
    (125/341) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.249487343 seconds)
    (126/341) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.074835599 seconds)
    (127/341) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.073319609 seconds)
    (128/341) benchmarking ("perf_sum", Int8, true)...
    done (took 0.071801851 seconds)
    (129/341) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.168165081 seconds)
    (130/341) benchmarking ("map", abs, Bool, false)...
    done (took 0.137945425 seconds)
    (131/341) benchmarking ("map", abs, Int8, false)...
    done (took 0.139006595 seconds)
    (132/341) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.065583293 seconds)
    (133/341) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.065275594 seconds)
    (134/341) benchmarking ("collect", "filter", Float32, true)...
    done (took 0.06718523 seconds)
    (135/341) benchmarking ("collect", "all", Int64, true)...
    done (took 0.068980049 seconds)
    (136/341) benchmarking ("perf_countequals", "Float32")...
    done (took 0.08273757 seconds)
    (137/341) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.064062591 seconds)
    (138/341) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.164002607 seconds)
    (139/341) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.065759306 seconds)
    (140/341) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.077837725 seconds)
    (141/341) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.124622529 seconds)
    (142/341) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.093322567 seconds)
    (143/341) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.06593999 seconds)
    (144/341) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.198931586 seconds)
    (145/341) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.236581348 seconds)
    (146/341) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.065585905 seconds)
    (147/341) benchmarking ("perf_sum", Int64, false)...
    done (took 0.074123078 seconds)
    (148/341) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.151416203 seconds)
    (149/341) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.073937223 seconds)
    (150/341) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.064758652 seconds)
    (151/341) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.176634792 seconds)
    (152/341) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.085970475 seconds)
    (153/341) benchmarking ("sort", Float32, false)...
    done (took 0.137089279 seconds)
    (154/341) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.080127009 seconds)
    (155/341) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.190055153 seconds)
    (156/341) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.143769233 seconds)
    (157/341) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.079149267 seconds)
    (158/341) benchmarking ("map", abs, Bool, true)...
    done (took 0.065364052 seconds)
    (159/341) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072726618 seconds)
    (160/341) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.064887414 seconds)
    (161/341) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.0631637 seconds)
    (162/341) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.073100208 seconds)
    (163/341) benchmarking ("perf_countequals", "Int64")...
    done (took 0.07471417 seconds)
    (164/341) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.084402767 seconds)
    (165/341) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.223583928 seconds)
    (166/341) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.172322319 seconds)
    (167/341) benchmarking ("collect", "filter", BigInt, true)...
    done (took 0.067498168 seconds)
    (168/341) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066031269 seconds)
    (169/341) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074854584 seconds)
    (170/341) benchmarking ("sort", Bool, false)...
    done (took 0.147549592 seconds)
    (171/341) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.073688017 seconds)
    (172/341) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.072289365 seconds)
    (173/341) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.065171037 seconds)
    (174/341) benchmarking ("map", identity, Bool, false)...
    done (took 0.065099333 seconds)
    (175/341) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.064578154 seconds)
    (176/341) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.064805655 seconds)
    (177/341) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.06677485 seconds)
    (178/341) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.122119175 seconds)
    (179/341) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.064666979 seconds)
    (180/341) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.06467071 seconds)
    (181/341) benchmarking ("perf_sum", Int64, true)...
    done (took 0.071242719 seconds)
    (182/341) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.073643418 seconds)
    (183/341) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.070939964 seconds)
    (184/341) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.065243776 seconds)
    (185/341) benchmarking ("sort", Int64, false)...
    done (took 0.06573684 seconds)
    (186/341) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.071164297 seconds)
    (187/341) benchmarking ("map", identity, Int8, true)...
    done (took 0.064588759 seconds)
    (188/341) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.149247938 seconds)
    (189/341) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.080019261 seconds)
    (190/341) benchmarking ("collect", "filter", Int64, false)...
    done (took 0.155015452 seconds)
    (191/341) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.065328484 seconds)
    (192/341) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.245384469 seconds)
    (193/341) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.068760449 seconds)
    (194/341) benchmarking ("collect", "all", Bool, true)...
    done (took 0.083447917 seconds)
    (195/341) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.065892473 seconds)
    (196/341) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.074975058 seconds)
    (197/341) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.068959997 seconds)
    (198/341) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.075348736 seconds)
    (199/341) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.065722902 seconds)
    (200/341) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.08929938 seconds)
    (201/341) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.209582997 seconds)
    (202/341) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063828885 seconds)
    (203/341) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.065579628 seconds)
    (204/341) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.191995172 seconds)
    (205/341) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.065704311 seconds)
    (206/341) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.085908281 seconds)
    (207/341) benchmarking ("collect", "filter", Int8, false)...
    done (took 0.067993363 seconds)
    (208/341) benchmarking ("collect", "all", Float64, true)...
    done (took 0.083429083 seconds)
    (209/341) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.064821991 seconds)
    (210/341) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.146619817 seconds)
    (211/341) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.066004546 seconds)
    (212/341) benchmarking ("map", abs, Float64, true)...
    done (took 0.147988817 seconds)
    (213/341) benchmarking ("collect", "all", Float32, true)...
    done (took 0.083706612 seconds)
    (214/341) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.079066774 seconds)
    (215/341) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.082989387 seconds)
    (216/341) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.065650062 seconds)
    (217/341) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.066218448 seconds)
    (218/341) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.088638305 seconds)
    (219/341) benchmarking ("map", abs, Float32, true)...
    done (took 0.143751815 seconds)
    (220/341) benchmarking ("map", abs, Float64, false)...
    done (took 0.065934238 seconds)
    (221/341) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.06806998 seconds)
    (222/341) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.065696476 seconds)
    (223/341) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.063262909 seconds)
    (224/341) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087888699 seconds)
    (225/341) benchmarking ("collect", "filter", ComplexF64, true)...
    done (took 0.16674878 seconds)
    (226/341) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.073806912 seconds)
    (227/341) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.06709858 seconds)
    (228/341) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090066715 seconds)
    (229/341) benchmarking ("collect", "all", ComplexF64, false)...
    done (took 0.084110823 seconds)
    (230/341) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.074369476 seconds)
    (231/341) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.063270156 seconds)
    (232/341) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.071297775 seconds)
    (233/341) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.095595048 seconds)
    (234/341) benchmarking ("perf_sum", Bool, false)...
    done (took 0.070733225 seconds)
    (235/341) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.063669964 seconds)
    (236/341) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.06356351 seconds)
    (237/341) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.084743812 seconds)
    (238/341) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.069778381 seconds)
    (239/341) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.06488374 seconds)
    (240/341) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.065077449 seconds)
    (241/341) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.084855861 seconds)
    (242/341) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.066423157 seconds)
    (243/341) benchmarking ("collect", "filter", Int64, true)...
    done (took 0.067037089 seconds)
    (244/341) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.064724889 seconds)
    (245/341) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.065458484 seconds)
    (246/341) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.065911811 seconds)
    (247/341) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.063638853 seconds)
    (248/341) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.200459531 seconds)
    (249/341) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.065202803 seconds)
    (250/341) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.065191725 seconds)
    (251/341) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.064674299 seconds)
    (252/341) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.066346751 seconds)
    (253/341) benchmarking ("map", identity, BigInt, true)...
    done (took 0.082216649 seconds)
    (254/341) benchmarking ("collect", "filter", Float64, true)...
    done (took 0.067097714 seconds)
    (255/341) benchmarking ("perf_countequals", "Float64")...
    done (took 0.074721565 seconds)
    (256/341) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.084938063 seconds)
    (257/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.076479701 seconds)
    (258/341) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.065160208 seconds)
    (259/341) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.066345553 seconds)
    (260/341) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.093165543 seconds)
    (261/341) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.064939685 seconds)
    (262/341) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.064928035 seconds)
    (263/341) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.071899607 seconds)
    (264/341) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.064936251 seconds)
    (265/341) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.064662265 seconds)
    (266/341) benchmarking ("perf_sum", Float64, false)...
    done (took 0.06705546 seconds)
    (267/341) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.149879751 seconds)
    (268/341) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.121933534 seconds)
    (269/341) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.065143065 seconds)
    (270/341) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072005377 seconds)
    (271/341) benchmarking ("collect", "all", Bool, false)...
    done (took 0.068432829 seconds)
    (272/341) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.091563503 seconds)
    (273/341) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.06445114 seconds)
    (274/341) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.066121495 seconds)
    (275/341) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.110003526 seconds)
    (276/341) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.064975416 seconds)
    (277/341) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.062964606 seconds)
    (278/341) benchmarking ("map", abs, Float32, false)...
    done (took 0.065068075 seconds)
    (279/341) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.077904557 seconds)
    (280/341) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.064609056 seconds)
    (281/341) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.064144922 seconds)
    (282/341) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.091123384 seconds)
    (283/341) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.06536601 seconds)
    (284/341) benchmarking ("map", identity, BigInt, false)...
    done (took 0.064966299 seconds)
    (285/341) benchmarking ("collect", "filter", BigFloat, false)...
    done (took 0.067529643 seconds)
    (286/341) benchmarking ("map", identity, Int64, false)...
    done (took 0.081146219 seconds)
    (287/341) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069778804 seconds)
    (288/341) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.063772479 seconds)
    (289/341) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.064258367 seconds)
    (290/341) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.0772642 seconds)
    (291/341) benchmarking ("collect", "all", Float64, false)...
    done (took 0.068999837 seconds)
    (292/341) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.063263646 seconds)
    (293/341) benchmarking ("collect", "all", Float32, false)...
    done (took 0.068882108 seconds)
    (294/341) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.089071472 seconds)
    (295/341) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.06397234 seconds)
    (296/341) benchmarking ("map", abs, Int8, true)...
    done (took 0.065351782 seconds)
    (297/341) benchmarking ("map", identity, Float64, true)...
    done (took 0.065521888 seconds)
    (298/341) benchmarking ("sort", BigFloat, false)...
    done (took 0.131274739 seconds)
    (299/341) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.180471737 seconds)
    (300/341) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.065523025 seconds)
    (301/341) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.197359605 seconds)
    (302/341) benchmarking ("map", identity, Int64, true)...
    done (took 0.065889592 seconds)
    (303/341) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.065287758 seconds)
    (304/341) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.149829192 seconds)
    (305/341) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.06569306 seconds)
    (306/341) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.149443204 seconds)
    (307/341) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.066715897 seconds)
    (308/341) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.172160719 seconds)
    (309/341) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.079565004 seconds)
    (310/341) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072711823 seconds)
    (311/341) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.072217898 seconds)
    (312/341) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.066330078 seconds)
    (313/341) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.064796447 seconds)
    (314/341) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.06562626 seconds)
    (315/341) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.065702201 seconds)
    (316/341) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.064071219 seconds)
    (317/341) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.064527799 seconds)
    (318/341) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.064251943 seconds)
    (319/341) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.139973965 seconds)
    (320/341) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.063659419 seconds)
    (321/341) benchmarking ("collect", "filter", ComplexF64, false)...
    done (took 0.066585371 seconds)
    (322/341) benchmarking ("sort", Float64, false)...
    done (took 0.135529205 seconds)
    (323/341) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.087023292 seconds)
    (324/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.075698046 seconds)
    (325/341) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.240479152 seconds)
    (326/341) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.171290575 seconds)
    (327/341) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.133398994 seconds)
    (328/341) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.0687711 seconds)
    (329/341) benchmarking ("collect", "all", ComplexF64, true)...
    done (took 0.071602906 seconds)
    (330/341) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.067115014 seconds)
    (331/341) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.07941258 seconds)
    (332/341) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.075362957 seconds)
    (333/341) benchmarking ("sort", Int8, false)...
    done (took 0.153699401 seconds)
    (334/341) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.065001531 seconds)
    (335/341) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.069858853 seconds)
    (336/341) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.093083557 seconds)
    (337/341) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.117850836 seconds)
    (338/341) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.14945434 seconds)
    (339/341) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.128767368 seconds)
    (340/341) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.065585904 seconds)
    (341/341) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065016661 seconds)
  done (took 36.845627507 seconds)
done (took 38.381280448 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.08781105 seconds)
  (2/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.07656501 seconds)
  (3/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075309377 seconds)
  (4/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072498095 seconds)
  (5/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075524542 seconds)
  (6/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.073983073 seconds)
  (7/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.076189607 seconds)
  (8/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.075192891 seconds)
  (9/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.075286428 seconds)
  (10/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074142051 seconds)
  (11/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.075189877 seconds)
  (12/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063864502 seconds)
  (13/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.072881381 seconds)
  (14/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.079669976 seconds)
  (15/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.073508386 seconds)
  (16/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.080273227 seconds)
  (17/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077213351 seconds)
  (18/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.080246264 seconds)
  (19/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065095572 seconds)
  (20/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.079013334 seconds)
  (21/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.093030136 seconds)
  (22/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.076718908 seconds)
  (23/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073312376 seconds)
  (24/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.078606361 seconds)
  (25/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.064762232 seconds)
  (26/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.074292011 seconds)
  (27/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089131848 seconds)
  (28/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.086187973 seconds)
  (29/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.071564808 seconds)
  (30/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074117109 seconds)
  (31/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072284699 seconds)
  (32/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.082660516 seconds)
  (33/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072246225 seconds)
  (34/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.070833473 seconds)
  (35/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074582517 seconds)
  (36/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.07072847 seconds)
  (37/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.074410808 seconds)
  (38/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071650155 seconds)
  (39/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.08833672 seconds)
  (40/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.070029591 seconds)
  (41/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.064829876 seconds)
  (42/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.075118832 seconds)
  (43/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070073913 seconds)
  (44/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071119954 seconds)
  (45/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071556295 seconds)
  (46/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.075263351 seconds)
  (47/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.070288862 seconds)
  (48/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.078000531 seconds)
  (49/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.063448827 seconds)
  (50/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074330478 seconds)
  (51/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.086059147 seconds)
  (52/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068049522 seconds)
  (53/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.06958293 seconds)
  (54/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071522508 seconds)
  (55/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.068672362 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072849454 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069605458 seconds)
  (58/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.074448944 seconds)
  (59/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069192168 seconds)
  (60/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.076602644 seconds)
  (61/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.076365526 seconds)
  (62/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.073245416 seconds)
  (63/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.064481536 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073403148 seconds)
  (65/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071284015 seconds)
  (66/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070745298 seconds)
  (67/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.063573998 seconds)
  (68/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070142762 seconds)
  (69/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.06417504 seconds)
  (70/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064546183 seconds)
  (71/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.063600588 seconds)
  (72/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073335829 seconds)
  (73/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071207577 seconds)
  (74/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.069481787 seconds)
  (75/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.063563867 seconds)
  (76/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064266099 seconds)
  (77/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.063538854 seconds)
  (78/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.076706437 seconds)
  (79/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.070453952 seconds)
  (80/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074028004 seconds)
  (81/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064992421 seconds)
  (82/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.06945399 seconds)
  (83/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.069619924 seconds)
  (84/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064848751 seconds)
  (85/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069940636 seconds)
  (86/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.076065552 seconds)
  (87/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.063435583 seconds)
  (88/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064461619 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.063644762 seconds)
  (90/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.078715516 seconds)
  (91/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.070699335 seconds)
  (92/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064439295 seconds)
  (93/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.075177242 seconds)
  (94/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067852489 seconds)
  (95/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067683119 seconds)
  (96/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.062839135 seconds)
  (97/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.062080846 seconds)
  (98/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067651002 seconds)
  (99/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.071087687 seconds)
  (100/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.063046815 seconds)
  (101/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.061532909 seconds)
  (102/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068369766 seconds)
  (103/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071945937 seconds)
  (104/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072257946 seconds)
  (105/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.063202801 seconds)
  (106/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067780905 seconds)
  (107/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067824739 seconds)
  (108/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.061697634 seconds)
  (109/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.071597953 seconds)
  (110/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.069711776 seconds)
  (111/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.071775537 seconds)
  (112/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075766552 seconds)
  (113/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.071943011 seconds)
  (114/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.076187429 seconds)
  (115/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.065059312 seconds)
  (116/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063086866 seconds)
  (117/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073642282 seconds)
  (118/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.064739242 seconds)
  (119/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.06958944 seconds)
  (120/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.072056546 seconds)
  (121/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.06941762 seconds)
  (122/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071732331 seconds)
  (123/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.064546976 seconds)
  (124/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.062913515 seconds)
  (125/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068981513 seconds)
  (126/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070135233 seconds)
  (127/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.063765404 seconds)
  (128/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.064004598 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.0640169 seconds)
  (130/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.07382494 seconds)
  (131/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.07109977 seconds)
  (132/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.062166975 seconds)
  (133/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.063005074 seconds)
  (134/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.071665506 seconds)
  (135/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.071045281 seconds)
  (136/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.061497541 seconds)
  (137/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.061664189 seconds)
  (138/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.071830409 seconds)
  (139/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.062642403 seconds)
  (140/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.068307621 seconds)
  (141/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.067473746 seconds)
  (142/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.070892541 seconds)
  (143/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.06150792 seconds)
  (144/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.061979933 seconds)
  (145/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.061086664 seconds)
  (146/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.06294643 seconds)
  (147/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067066137 seconds)
  (148/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.069146252 seconds)
  (149/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068673442 seconds)
  (150/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.063626558 seconds)
  (151/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.07225362 seconds)
  (152/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.219042568 seconds)
done (took 12.525570944 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.065064539 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.105773202 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.077641554 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.079587988 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.076451733 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.064783444 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.067310616 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.081816185 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.066669734 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.087790536 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088555787 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084656822 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.09330158 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.062009354 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.063711306 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.063799329 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.061414363 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.075043559 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.079988444 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086190942 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.098482057 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.062659944 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.079091016 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.082520476 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.077202696 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.081021436 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.064522615 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.064332494 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.066169582 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.081941817 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.088611024 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.063202309 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.064513141 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.080979452 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.078296096 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.071435724 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.064262327 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.069641851 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066248941 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.063393462 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.065212487 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.080765548 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.069978793 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.073384119 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.064854503 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.06454265 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.063592823 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.070210334 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.080841544 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.068798394 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.075298568 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.081875027 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.065055607 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.063782185 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.063053673 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.071432479 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064372055 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.065248185 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.063964957 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.063046959 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.063838392 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.065761001 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.068468771 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.069753593 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.066717992 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.069274568 seconds)
  done (took 6.378453225 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.079540037 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.08899967 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.077737152 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.078300951 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.063200935 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.063966788 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.064019501 seconds)
  done (took 2.159138995 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.064312206 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.071694045 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.07764778 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.077678726 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.087050419 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.075046685 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.06506908 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.097320311 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.063530026 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.071782863 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.079269234 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.076878803 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067071872 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.075849951 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.064408766 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.075332429 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.064202978 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070638138 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.071422237 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.077045301 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.06818349 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.092649959 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.076998508 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.06449988 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.077127235 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.071086634 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.06581816 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.064092629 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064220632 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.063486916 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063364358 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.085262907 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.069876101 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075830609 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064076153 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.063144412 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.068392691 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064490549 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.067973546 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.072623383 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.067257703 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.064884259 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.064968729 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064526305 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.066208982 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.069211107 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.065467166 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.064289414 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.063201216 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.071340802 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.063706252 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.071496069 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.066707865 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068536012 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068289642 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068229127 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.07043296 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.064076037 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.071062545 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.069795521 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063917277 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.078145444 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.076970413 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.069019374 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.07703598 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.073835916 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.074508078 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.069002563 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.064672502 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.064242583 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.065411981 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.077162699 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.068720187 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.067288724 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.066042691 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.069867334 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.068663075 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.080817869 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.080673301 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.078620054 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067868116 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.065066956 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.069273438 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.080562319 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070029756 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06480701 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065837958 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.064582005 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069959825 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.065191625 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.070268773 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.065077335 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.071852848 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.066921879 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.067381646 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.073562225 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.064994816 seconds)
  done (took 8.445831073 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.066054559 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.065789347 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.064750081 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.064805847 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.065544436 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.065178515 seconds)
  done (took 2.066244786 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.087081275 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.064575239 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.075992918 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.064171658 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.086054333 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.070343609 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.070905994 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.06585193 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.079857229 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.074524424 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.070403601 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.072896455 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.072832914 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.065453561 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.070152648 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.065043349 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.070001332 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.066871737 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.073713646 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.066140881 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.079715465 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.066997488 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.067756696 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.078127328 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.069098932 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.066694501 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066745112 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.075907888 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.074993062 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.067142238 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.067269426 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.068585542 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.074050851 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.067468135 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.072077313 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.074407849 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.065423133 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.071415043 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.068279998 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.068630167 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.074304166 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.067464876 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.068165494 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.070898111 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.067217552 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074055294 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.071177195 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.068810659 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.071468786 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.070893232 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.07000459 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.064400573 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.066557882 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.069045487 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.072667478 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.065576173 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.070626093 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.071633598 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.067169182 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.075764438 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.065731934 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.068447428 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.06702088 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.06850541 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.070270473 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.071178703 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.074349787 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.069545769 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.0679239 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.065389099 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.070947932 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.06533885 seconds)
  done (took 6.70365639 seconds)
done (took 27.379293239 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.540070518 seconds)
  done (took 2.159023181 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.885571199 seconds)
  done (took 2.543852283 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 7.95264026 seconds)
  done (took 9.614918792 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.342727146 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.406001543 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.725449756 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.129290455 seconds)
  done (took 3.30760652 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.752726719 seconds)
  done (took 2.425548054 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.226845196 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.218715588 seconds)
  done (took 2.131619148 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.335556059 seconds)
  done (took 1.999293672 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.141607627 seconds)
  done (took 2.80160157 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.231100447 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.159754181 seconds)
  done (took 2.061560244 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.535520169 seconds)
  done (took 2.199299856 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.230997258 seconds)
  done (took 5.903499717 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.227855291 seconds)
  done (took 1.938847709 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.227016836 seconds)
  done (took 1.896244783 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.991827085 seconds)
  done (took 3.654110948 seconds)
done (took 46.304269696 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080970279 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.083587991 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.083454362 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.07826276 seconds)
  done (took 1.966571901 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.07134851 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.067556456 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.070711075 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.07075432 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.068467096 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.069616573 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.070195694 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.067619392 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.069551431 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.067902493 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.066372189 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.067805208 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.070219066 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.068609741 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.071491376 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.073045396 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.068159743 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.067466035 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.069876799 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.067204025 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.070071914 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.067410404 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.06670194 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.068724501 seconds)
  done (took 3.320807612 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.075611771 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.069925418 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.072698404 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.069160855 seconds)
  done (took 1.959847457 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.074236878 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.073573467 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.082286262 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.087651253 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.074729146 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.07581105 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.082672637 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.083146194 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.064457605 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.086041686 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.066985443 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.065866261 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.066027042 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.084537759 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.082318898 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.061115025 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.062009464 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.074488839 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.074417322 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.076901762 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.065833924 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.063437304 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.074110239 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.074228019 seconds)
  done (took 3.448173628 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.079790234 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.06259151 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.078391371 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087888609 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.089112703 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.063253535 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.076329524 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089622142 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.124591301 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.063518869 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070849079 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064508545 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.104207233 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064616411 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.080139715 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.107901192 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.11102281 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068874008 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.097997127 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.06456354 seconds)
  done (took 3.329298438 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073264608 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.066785027 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.067912016 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.062870383 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.074462028 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.070192888 seconds)
  done (took 2.100503882 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.065759872 seconds)
    (2/12) benchmarking ("push_single!", 256)...
    done (took 0.065432752 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.066970178 seconds)
    (4/12) benchmarking ("push_multiple!", 256)...
    done (took 0.069863935 seconds)
    (5/12) benchmarking ("push_single!", 2048)...
    done (took 0.065314843 seconds)
    (6/12) benchmarking ("push_single!", 8)...
    done (took 0.065364395 seconds)
    (7/12) benchmarking ("prerend!", 2048)...
    done (took 0.064695303 seconds)
    (8/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.063118332 seconds)
    (9/12) benchmarking ("push_multiple!", 8)...
    done (took 0.064222478 seconds)
    (10/12) benchmarking ("append!", 2048)...
    done (took 0.065632509 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.06539445 seconds)
    (12/12) benchmarking ("prerend!", 8)...
    done (took 0.065933974 seconds)
  done (took 2.463152034 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.144849431 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.066516764 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.067106765 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.063498998 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.065523773 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.063957831 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.078900127 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.066253786 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.081396086 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.063907543 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.065333343 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069079652 seconds)
  done (took 2.574707694 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.10183317 seconds)
    (2/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.108609253 seconds)
    (3/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.142299257 seconds)
    (4/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.1138979 seconds)
    (5/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.11278821 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093950849 seconds)
    (7/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.122500426 seconds)
    (8/608) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.092332551 seconds)
    (9/608) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.156497322 seconds)
    (10/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.132900867 seconds)
    (11/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.1133064 seconds)
    (12/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.089842966 seconds)
    (13/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.083456119 seconds)
    (14/608) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.066600074 seconds)
    (15/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.096885974 seconds)
    (16/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.1147681 seconds)
    (17/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.133744279 seconds)
    (18/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.072415996 seconds)
    (19/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.113108479 seconds)
    (20/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.164850628 seconds)
    (21/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.132082198 seconds)
    (22/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.135334837 seconds)
    (23/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.148122113 seconds)
    (24/608) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.116224488 seconds)
    (25/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089672356 seconds)
    (26/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.14846383 seconds)
    (27/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.097577377 seconds)
    (28/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.102185635 seconds)
    (29/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.1243031 seconds)
    (30/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.126296064 seconds)
    (31/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.119211968 seconds)
    (32/608) benchmarking ("sumvector_view", "Matrix{Int64}")...
    done (took 0.097152059 seconds)
    (33/608) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.070508849 seconds)
    (34/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.069745455 seconds)
    (35/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.148625754 seconds)
    (36/608) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.103280548 seconds)
    (37/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.120700031 seconds)
    (38/608) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.092128697 seconds)
    (39/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.105095948 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.087927206 seconds)
    (41/608) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.107284785 seconds)
    (42/608) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.068761379 seconds)
    (43/608) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.085031427 seconds)
    (44/608) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.113121508 seconds)
    (45/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08445156 seconds)
    (46/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.131758892 seconds)
    (47/608) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.087641877 seconds)
    (48/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.115789784 seconds)
    (49/608) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081030314 seconds)
    (50/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.136658243 seconds)
    (51/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.12130453 seconds)
    (52/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.097393626 seconds)
    (53/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.083777042 seconds)
    (54/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102775253 seconds)
    (55/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.288785303 seconds)
    (56/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.109390283 seconds)
    (57/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.131549383 seconds)
    (58/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.103795308 seconds)
    (59/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.080100533 seconds)
    (60/608) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.115552573 seconds)
    (61/608) benchmarking ("sumlinear_view", "Matrix{Float64}")...
    done (took 0.099717652 seconds)
    (62/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.096879716 seconds)
    (63/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104210275 seconds)
    (64/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077031893 seconds)
    (65/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.172049007 seconds)
    (66/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.085909086 seconds)
    (67/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.10857752 seconds)
    (68/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.108864596 seconds)
    (69/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.090727105 seconds)
    (70/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.09167427 seconds)
    (71/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.104474862 seconds)
    (72/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.135186017 seconds)
    (73/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.125113182 seconds)
    (74/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.125625144 seconds)
    (75/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.138221155 seconds)
    (76/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.094371083 seconds)
    (77/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.120906381 seconds)
    (78/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.099168101 seconds)
    (79/608) benchmarking ("mapr_access", "Matrix{Int64}")...
    done (took 0.128276029 seconds)
    (80/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10413511 seconds)
    (81/608) benchmarking ("sumcartesian", "Matrix{Float64}")...
    done (took 0.072283728 seconds)
    (82/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.121812349 seconds)
    (83/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.128788296 seconds)
    (84/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.098917744 seconds)
    (85/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.099836186 seconds)
    (86/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.12698058 seconds)
    (87/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.088903198 seconds)
    (88/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.074514437 seconds)
    (89/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.095899744 seconds)
    (90/608) benchmarking ("sumlogical_view", "Matrix{Int64}")...
    done (took 0.11537593 seconds)
    (91/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.079001277 seconds)
    (92/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.109767943 seconds)
    (93/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077996773 seconds)
    (94/608) benchmarking ("sum", "3dsubarray")...
    done (took 0.105955666 seconds)
    (95/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.130645085 seconds)
    (96/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09437698 seconds)
    (97/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10850747 seconds)
    (98/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.113527164 seconds)
    (99/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.075032288 seconds)
    (100/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.151715004 seconds)
    (101/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.10598145 seconds)
    (102/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.069987698 seconds)
    (103/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.113502453 seconds)
    (104/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.109953952 seconds)
    (105/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.151868726 seconds)
    (106/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090789144 seconds)
    (107/608) benchmarking ("sumcartesian", "Matrix{Int64}")...
    done (took 0.073284626 seconds)
    (108/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.095401077 seconds)
    (109/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.258507835 seconds)
    (110/608) benchmarking "5d"...
    done (took 0.146953137 seconds)
    (111/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105048237 seconds)
    (112/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.077956453 seconds)
    (113/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.107767523 seconds)
    (114/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.13663492 seconds)
    (115/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092102919 seconds)
    (116/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.165309752 seconds)
    (117/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.093006434 seconds)
    (118/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.136581221 seconds)
    (119/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.109554335 seconds)
    (120/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.084716633 seconds)
    (121/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.07271718 seconds)
    (122/608) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.086913517 seconds)
    (123/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.10895262 seconds)
    (124/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104634661 seconds)
    (125/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.109035266 seconds)
    (126/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08764575 seconds)
    (127/608) benchmarking ("sumrange_view", "Matrix{Float64}")...
    done (took 0.081400064 seconds)
    (128/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.08431445 seconds)
    (129/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108828368 seconds)
    (130/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.089337009 seconds)
    (131/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.077909442 seconds)
    (132/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.110080218 seconds)
    (133/608) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.098935038 seconds)
    (134/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.072129715 seconds)
    (135/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086959614 seconds)
    (136/608) benchmarking ("sumcolon_view", "Matrix{Float64}")...
    done (took 0.078314316 seconds)
    (137/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.141209028 seconds)
    (138/608) benchmarking ("sumrange", "Matrix{Float64}")...
    done (took 0.076047251 seconds)
    (139/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.134436228 seconds)
    (140/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.122569313 seconds)
    (141/608) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.077514368 seconds)
    (142/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.10530187 seconds)
    (143/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.096229173 seconds)
    (144/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.104958328 seconds)
    (145/608) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.09428663 seconds)
    (146/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.115471148 seconds)
    (147/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.138650268 seconds)
    (148/608) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.114523315 seconds)
    (149/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.088486428 seconds)
    (150/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.09151107 seconds)
    (151/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105504169 seconds)
    (152/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140036255 seconds)
    (153/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.124133008 seconds)
    (154/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.089190435 seconds)
    (155/608) benchmarking ("sumcolon", "Matrix{Int64}")...
    done (took 0.073977463 seconds)
    (156/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.097629955 seconds)
    (157/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.108632401 seconds)
    (158/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.094497489 seconds)
    (159/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.123134305 seconds)
    (160/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.097535477 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.108271348 seconds)
    (162/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.103469488 seconds)
    (163/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.1380514 seconds)
    (164/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.141874088 seconds)
    (165/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.097601678 seconds)
    (166/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.096481184 seconds)
    (167/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102409683 seconds)
    (168/608) benchmarking "ind2sub"...
    done (took 0.280029125 seconds)
    (169/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.07449854 seconds)
    (170/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.152303175 seconds)
    (171/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101255779 seconds)
    (172/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.114650168 seconds)
    (173/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.08176382 seconds)
    (174/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.137427412 seconds)
    (175/608) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.110842613 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.086512051 seconds)
    (177/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.084497139 seconds)
    (178/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.097721986 seconds)
    (179/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.100924547 seconds)
    (180/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103171288 seconds)
    (181/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.139499171 seconds)
    (182/608) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.09282238 seconds)
    (183/608) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.069900802 seconds)
    (184/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089715261 seconds)
    (185/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.140270911 seconds)
    (186/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073792118 seconds)
    (187/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.107262287 seconds)
    (188/608) benchmarking ("sumcartesian_view", "Matrix{Float64}")...
    done (took 0.087292568 seconds)
    (189/608) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.090306606 seconds)
    (190/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.115152513 seconds)
    (191/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.090250944 seconds)
    (192/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.078578202 seconds)
    (193/608) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.06550463 seconds)
    (194/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.123878698 seconds)
    (195/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.154513489 seconds)
    (196/608) benchmarking ("sumelt_boundscheck", "Matrix{Float64}")...
    done (took 0.067367399 seconds)
    (197/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.111334194 seconds)
    (198/608) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.108541343 seconds)
    (199/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.099955382 seconds)
    (200/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.11798669 seconds)
    (201/608) benchmarking ("sumelt", "1:100000")...
    done (took 0.06694846 seconds)
    (202/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.116377617 seconds)
    (203/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.13513729 seconds)
    (204/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.114838683 seconds)
    (205/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.137773033 seconds)
    (206/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.143661598 seconds)
    (207/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.1138055 seconds)
    (208/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.115562428 seconds)
    (209/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.111128139 seconds)
    (210/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102833637 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.076958293 seconds)
    (212/608) benchmarking ("sumlogical", "Matrix{Float64}")...
    done (took 0.122595555 seconds)
    (213/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.131674976 seconds)
    (214/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09368281 seconds)
    (215/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090057555 seconds)
    (216/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.133268417 seconds)
    (217/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.11522606 seconds)
    (218/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.130563803 seconds)
    (219/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.111601766 seconds)
    (220/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.109627595 seconds)
    (221/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.100206332 seconds)
    (222/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.102478456 seconds)
    (223/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.098538785 seconds)
    (224/608) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.098391997 seconds)
    (225/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.137027766 seconds)
    (226/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.115365254 seconds)
    (227/608) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.117975915 seconds)
    (228/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.081442015 seconds)
    (229/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102751239 seconds)
    (230/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.114418608 seconds)
    (231/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.130268485 seconds)
    (232/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.078872167 seconds)
    (233/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.136611492 seconds)
    (234/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.078274123 seconds)
    (235/608) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.108151085 seconds)
    (236/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.071220557 seconds)
    (237/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.113127274 seconds)
    (238/608) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.07482148 seconds)
    (239/608) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.104474357 seconds)
    (240/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.074274517 seconds)
    (241/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.092211279 seconds)
    (242/608) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.065166537 seconds)
    (243/608) benchmarking ("sumeach", "1:100000")...
    done (took 0.068840303 seconds)
    (244/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.130363959 seconds)
    (245/608) benchmarking ("sumvector", "1:100000")...
    done (took 0.103992668 seconds)
    (246/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.096476625 seconds)
    (247/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090643209 seconds)
    (248/608) benchmarking ("sumlogical", "1:100000")...
    done (took 0.125837306 seconds)
    (249/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.12620642 seconds)
    (250/608) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.075976126 seconds)
    (251/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.099415222 seconds)
    (252/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.105557826 seconds)
    (253/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.094008048 seconds)
    (254/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105072577 seconds)
    (255/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.101196566 seconds)
    (256/608) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.081728763 seconds)
    (257/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.086347768 seconds)
    (258/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.100680782 seconds)
    (259/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.078634114 seconds)
    (260/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.075217372 seconds)
    (261/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105361323 seconds)
    (262/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085653962 seconds)
    (263/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.114450113 seconds)
    (264/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.079042073 seconds)
    (265/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.070237191 seconds)
    (266/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.127266303 seconds)
    (267/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.097639435 seconds)
    (268/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.087253139 seconds)
    (269/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.073518925 seconds)
    (270/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.097572715 seconds)
    (271/608) benchmarking "4d"...
    done (took 0.115097528 seconds)
    (272/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.086234777 seconds)
    (273/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.081292982 seconds)
    (274/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.105541655 seconds)
    (275/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.096127863 seconds)
    (276/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.128722891 seconds)
    (277/608) benchmarking ("sumcartesian_view", "Matrix{Int64}")...
    done (took 0.083765511 seconds)
    (278/608) benchmarking ("sumvector", "Matrix{Float64}")...
    done (took 0.090552523 seconds)
    (279/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.113979413 seconds)
    (280/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.074357081 seconds)
    (281/608) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.085210038 seconds)
    (282/608) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.064680034 seconds)
    (283/608) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.079446752 seconds)
    (284/608) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.070722704 seconds)
    (285/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.394309648 seconds)
    (286/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.076015385 seconds)
    (287/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.116688686 seconds)
    (288/608) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.069747601 seconds)
    (289/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.133500422 seconds)
    (290/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08733117 seconds)
    (291/608) benchmarking ("sumvector_view", "Matrix{Float64}")...
    done (took 0.093151002 seconds)
    (292/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.102672324 seconds)
    (293/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.111378044 seconds)
    (294/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.127853224 seconds)
    (295/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.09428157 seconds)
    (296/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.140545645 seconds)
    (297/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088920846 seconds)
    (298/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.117529155 seconds)
    (299/608) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.107084699 seconds)
    (300/608) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.094030554 seconds)
    (301/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.087392993 seconds)
    (302/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.103590968 seconds)
    (303/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.099939192 seconds)
    (304/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.121267225 seconds)
    (305/608) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.095366075 seconds)
    (306/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.121704209 seconds)
    (307/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.142864471 seconds)
    (308/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103513757 seconds)
    (309/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.139739401 seconds)
    (310/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090066547 seconds)
    (311/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.120221231 seconds)
    (312/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104711384 seconds)
    (313/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.122603047 seconds)
    (314/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.110126938 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.143995266 seconds)
    (316/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.135813892 seconds)
    (317/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.11016719 seconds)
    (318/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.109858968 seconds)
    (319/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.073333972 seconds)
    (320/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.092819486 seconds)
    (321/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103463555 seconds)
    (322/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.110196386 seconds)
    (323/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.172085506 seconds)
    (324/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.12272798 seconds)
    (325/608) benchmarking ("sumlinear", "Matrix{Int64}")...
    done (took 0.069947878 seconds)
    (326/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.104133232 seconds)
    (327/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.091591965 seconds)
    (328/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.105549292 seconds)
    (329/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102204844 seconds)
    (330/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.080440291 seconds)
    (331/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.143760876 seconds)
    (332/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.099250488 seconds)
    (333/608) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.085248539 seconds)
    (334/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.110890679 seconds)
    (335/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.089518178 seconds)
    (336/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.101013785 seconds)
    (337/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07337482 seconds)
    (338/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.09156547 seconds)
    (339/608) benchmarking ("sumcolon", "1:100000")...
    done (took 0.096489372 seconds)
    (340/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.250375138 seconds)
    (341/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.095516171 seconds)
    (342/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.112088476 seconds)
    (343/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.126412038 seconds)
    (344/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.112863299 seconds)
    (345/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.143132494 seconds)
    (346/608) benchmarking "3d"...
    done (took 0.098408819 seconds)
    (347/608) benchmarking ("sum", "3darray")...
    done (took 0.092471509 seconds)
    (348/608) benchmarking ("sumlogical", "Matrix{Int64}")...
    done (took 0.118377586 seconds)
    (349/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.111232957 seconds)
    (350/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.110534527 seconds)
    (351/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.086055843 seconds)
    (352/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.086521121 seconds)
    (353/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.13856829 seconds)
    (354/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.118530441 seconds)
    (355/608) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.126562118 seconds)
    (356/608) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.097393226 seconds)
    (357/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108811639 seconds)
    (358/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.108558219 seconds)
    (359/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.097660096 seconds)
    (360/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.122450151 seconds)
    (361/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105207451 seconds)
    (362/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.124096059 seconds)
    (363/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077719543 seconds)
    (364/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.073231188 seconds)
    (365/608) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.065946239 seconds)
    (366/608) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.069654234 seconds)
    (367/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.119934552 seconds)
    (368/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105701759 seconds)
    (369/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.108741948 seconds)
    (370/608) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.095865579 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Matrix{Int64}")...
    done (took 0.069946904 seconds)
    (372/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.101048907 seconds)
    (373/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.103583952 seconds)
    (374/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.069582752 seconds)
    (375/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086080181 seconds)
    (376/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091025475 seconds)
    (377/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.096618928 seconds)
    (378/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.088365057 seconds)
    (379/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103768234 seconds)
    (380/608) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.110568969 seconds)
    (381/608) benchmarking ("sumrange", "Matrix{Int64}")...
    done (took 0.088252549 seconds)
    (382/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.100980623 seconds)
    (383/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.096284062 seconds)
    (384/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.143399212 seconds)
    (385/608) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.097217971 seconds)
    (386/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085890609 seconds)
    (387/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.139684394 seconds)
    (388/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.14633465 seconds)
    (389/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085094725 seconds)
    (390/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089947224 seconds)
    (391/608) benchmarking ("sumelt", "Matrix{Int64}")...
    done (took 0.068958055 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.076556474 seconds)
    (393/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.111104784 seconds)
    (394/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.146434221 seconds)
    (395/608) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.148772537 seconds)
    (396/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.074683437 seconds)
    (397/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.08362372 seconds)
    (398/608) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.08212464 seconds)
    (399/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083061712 seconds)
    (400/608) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.068489804 seconds)
    (401/608) benchmarking ("sumeach_view", "Matrix{Float64}")...
    done (took 0.24177514 seconds)
    (402/608) benchmarking ("sumcolon", "Matrix{Float64}")...
    done (took 0.086375859 seconds)
    (403/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101271261 seconds)
    (404/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.096030039 seconds)
    (405/608) benchmarking ("sumlogical_view", "Matrix{Float64}")...
    done (took 0.109598278 seconds)
    (406/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101411511 seconds)
    (407/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.073107136 seconds)
    (408/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.099962796 seconds)
    (409/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.096404662 seconds)
    (410/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.08933334 seconds)
    (411/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.101067955 seconds)
    (412/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.115085575 seconds)
    (413/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.122120073 seconds)
    (414/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.138363332 seconds)
    (415/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.107674916 seconds)
    (416/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104569151 seconds)
    (417/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.073651141 seconds)
    (418/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.078112443 seconds)
    (419/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.073151867 seconds)
    (420/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.076813626 seconds)
    (421/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.099489408 seconds)
    (422/608) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.077014751 seconds)
    (423/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074065866 seconds)
    (424/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.140058496 seconds)
    (425/608) benchmarking ("sumcolon_view", "Matrix{Int64}")...
    done (took 0.089276453 seconds)
    (426/608) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101696799 seconds)
    (427/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106113009 seconds)
    (428/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.086054763 seconds)
    (429/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.073101077 seconds)
    (430/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.130534944 seconds)
    (431/608) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.06702613 seconds)
    (432/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.131634609 seconds)
    (433/608) benchmarking ("sumeach", "Matrix{Int64}")...
    done (took 0.068954095 seconds)
    (434/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.079643275 seconds)
    (435/608) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.079851879 seconds)
    (436/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076547849 seconds)
    (437/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090997312 seconds)
    (438/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.136444647 seconds)
    (439/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.106603188 seconds)
    (440/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.110039227 seconds)
    (441/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103529018 seconds)
    (442/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101468077 seconds)
    (443/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.136940485 seconds)
    (444/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.152172912 seconds)
    (445/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07746097 seconds)
    (446/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.13991893 seconds)
    (447/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.073345095 seconds)
    (448/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073028419 seconds)
    (449/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.073266003 seconds)
    (450/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.110255518 seconds)
    (451/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086889446 seconds)
    (452/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.111548649 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.137348138 seconds)
    (454/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.0881733 seconds)
    (455/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10093594 seconds)
    (456/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074643582 seconds)
    (457/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.141331497 seconds)
    (458/608) benchmarking ("sumeach_view", "Matrix{Int64}")...
    done (took 0.09629403 seconds)
    (459/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.101620575 seconds)
    (460/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.084188148 seconds)
    (461/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.078166474 seconds)
    (462/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.29931029 seconds)
    (463/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.079239768 seconds)
    (464/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.0791612 seconds)
    (465/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.089923813 seconds)
    (466/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.110604281 seconds)
    (467/608) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.071704885 seconds)
    (468/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.10354315 seconds)
    (469/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.084225359 seconds)
    (470/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.078896718 seconds)
    (471/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.141802503 seconds)
    (472/608) benchmarking "sub2ind"...
    done (took 0.629891416 seconds)
    (473/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090297582 seconds)
    (474/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.074680096 seconds)
    (475/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.096010157 seconds)
    (476/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.141087291 seconds)
    (477/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.126754845 seconds)
    (478/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092149577 seconds)
    (479/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105541511 seconds)
    (480/608) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.115754534 seconds)
    (481/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.097179064 seconds)
    (482/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.093258577 seconds)
    (483/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.10540168 seconds)
    (484/608) benchmarking "6d"...
    done (took 0.179628413 seconds)
    (485/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.072088544 seconds)
    (486/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.093880315 seconds)
    (487/608) benchmarking ("sumrange", "1:100000")...
    done (took 0.101589908 seconds)
    (488/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.095727293 seconds)
    (489/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.099181216 seconds)
    (490/608) benchmarking ("sumrange_view", "Matrix{Int64}")...
    done (took 0.095571514 seconds)
    (491/608) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.082678137 seconds)
    (492/608) benchmarking ("sumvector", "Matrix{Int64}")...
    done (took 0.089570708 seconds)
    (493/608) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.084167054 seconds)
    (494/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.079107637 seconds)
    (495/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.1077757 seconds)
    (496/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089115221 seconds)
    (497/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.096871116 seconds)
    (498/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.106973639 seconds)
    (499/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.082704012 seconds)
    (500/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.086902538 seconds)
    (501/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.13063112 seconds)
    (502/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.103565789 seconds)
    (503/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.081651962 seconds)
    (504/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087830786 seconds)
    (505/608) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.105100169 seconds)
    (506/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088342205 seconds)
    (507/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10110213 seconds)
    (508/608) benchmarking ("sumelt", "Matrix{Float64}")...
    done (took 0.068594596 seconds)
    (509/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.113160559 seconds)
    (510/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.090435545 seconds)
    (511/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.117332032 seconds)
    (512/608) benchmarking ("sumlinear_view", "Matrix{Int64}")...
    done (took 0.094160517 seconds)
    (513/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.107075662 seconds)
    (514/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.127296212 seconds)
    (515/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089665474 seconds)
    (516/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.136413388 seconds)
    (517/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.105042763 seconds)
    (518/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.119585877 seconds)
    (519/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.084414522 seconds)
    (520/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.075452385 seconds)
    (521/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.123654599 seconds)
    (522/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.085265645 seconds)
    (523/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075540268 seconds)
    (524/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.300981161 seconds)
    (525/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.091969701 seconds)
    (526/608) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.090567076 seconds)
    (527/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.100901306 seconds)
    (528/608) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.093281972 seconds)
    (529/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.11031324 seconds)
    (530/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.113915803 seconds)
    (531/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.108380297 seconds)
    (532/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.094799915 seconds)
    (533/608) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076487269 seconds)
    (534/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.097814944 seconds)
    (535/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.099787037 seconds)
    (536/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082458562 seconds)
    (537/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076030283 seconds)
    (538/608) benchmarking ("sumlinear", "1:100000")...
    done (took 0.071728663 seconds)
    (539/608) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.074125542 seconds)
    (540/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104726811 seconds)
    (541/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082701415 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.080848763 seconds)
    (543/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.111282387 seconds)
    (544/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.086646696 seconds)
    (545/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.100334644 seconds)
    (546/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.09738927 seconds)
    (547/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.119401156 seconds)
    (548/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.080807803 seconds)
    (549/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.09816757 seconds)
    (550/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.109195454 seconds)
    (551/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.08981256 seconds)
    (552/608) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.107069914 seconds)
    (553/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.097682152 seconds)
    (554/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.124602241 seconds)
    (555/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.170966086 seconds)
    (556/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.122374399 seconds)
    (557/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.125529881 seconds)
    (558/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.131128301 seconds)
    (559/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.075746084 seconds)
    (560/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.074958967 seconds)
    (561/608) benchmarking ("sumeach", "Matrix{Float64}")...
    done (took 0.067606577 seconds)
    (562/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.114740652 seconds)
    (563/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 0.078682561 seconds)
    (564/608) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.088411911 seconds)
    (565/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.080238934 seconds)
    (566/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.13219148 seconds)
    (567/608) benchmarking "2d"...
    done (took 0.081289821 seconds)
    (568/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.111651435 seconds)
    (569/608) benchmarking "7d"...
    done (took 0.228925365 seconds)
    (570/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.077573124 seconds)
    (571/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.09095617 seconds)
    (572/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.093463762 seconds)
    (573/608) benchmarking ("sumlinear", "Matrix{Float64}")...
    done (took 0.067274737 seconds)
    (574/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.08023769 seconds)
    (575/608) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104473857 seconds)
    (576/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.084039842 seconds)
    (577/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077407677 seconds)
    (578/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.115673094 seconds)
    (579/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.080892355 seconds)
    (580/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 0.124802083 seconds)
    (581/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.108135097 seconds)
    (582/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.096660133 seconds)
    (583/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 0.092145975 seconds)
    (584/608) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078401896 seconds)
    (585/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.111402123 seconds)
    (586/608) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.101818262 seconds)
    (587/608) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.125201592 seconds)
    (588/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.091289145 seconds)
    (589/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.072409836 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.110292893 seconds)
    (591/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.099145381 seconds)
    (592/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.132246635 seconds)
    (593/608) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.069630872 seconds)
    (594/608) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076980726 seconds)
    (595/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.123935388 seconds)
    (596/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.098440055 seconds)
    (597/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.126110831 seconds)
    (598/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.075887537 seconds)
    (599/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.142338254 seconds)
    (600/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.135673352 seconds)
    (601/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 0.094143863 seconds)
    (602/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.126775674 seconds)
    (603/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.06707922 seconds)
    (604/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 0.078623605 seconds)
    (605/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.084617212 seconds)
    (606/608) benchmarking ("mapr_access", "Matrix{Float64}")...
    done (took 0.119644118 seconds)
    (607/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079582553 seconds)
    (608/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104485439 seconds)
  done (took 65.981762382 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.151524592 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.142655794 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.081167685 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.102639447 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.190616933 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.209711134 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.134287901 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.107156575 seconds)
  done (took 3.050543259 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hcat", 500)...
    done (took 0.066515477 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.080907616 seconds)
    (3/17) benchmarking ("vcat_setind", 5)...
    done (took 0.07950947 seconds)
    (4/17) benchmarking ("catnd_setind", 500)...
    done (took 0.207418267 seconds)
    (5/17) benchmarking ("vcat", 500)...
    done (took 0.096619094 seconds)
    (6/17) benchmarking ("vcat", 5)...
    done (took 0.066983523 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.072514556 seconds)
    (8/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.080983157 seconds)
    (9/17) benchmarking ("vcat_setind", 500)...
    done (took 0.066490841 seconds)
    (10/17) benchmarking ("hvcat", 5)...
    done (took 0.066820247 seconds)
    (11/17) benchmarking ("hcat_setind", 500)...
    done (took 0.101397279 seconds)
    (12/17) benchmarking ("hcat", 5)...
    done (took 0.067241514 seconds)
    (13/17) benchmarking ("hvcat", 500)...
    done (took 0.066605438 seconds)
    (14/17) benchmarking ("catnd", 500)...
    done (took 0.37031729 seconds)
    (15/17) benchmarking ("hcat_setind", 5)...
    done (took 0.065934021 seconds)
    (16/17) benchmarking ("catnd", 5)...
    done (took 0.07177112 seconds)
    (17/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.066640901 seconds)
  done (took 3.561616433 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.328695534 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.048027153 seconds)
    (3/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 1.234154306 seconds)
    (4/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.483084495 seconds)
    (5/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.14312377 seconds)
    (6/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.552129659 seconds)
    (7/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073675395 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.081756942 seconds)
    (9/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.69523336 seconds)
    (10/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.364178037 seconds)
    (11/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.138995884 seconds)
    (12/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.087938318 seconds)
  done (took 20.093084772 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 4)...
    done (took 0.076074821 seconds)
    (2/5) benchmarking ("setindex!", 3)...
    done (took 0.080005988 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.079230398 seconds)
    (4/5) benchmarking ("setindex!", 1)...
    done (took 0.076077281 seconds)
    (5/5) benchmarking ("setindex!", 2)...
    done (took 0.075939398 seconds)
  done (took 2.332438962 seconds)
done (took 117.87229944 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 0.082445504 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 0.175854648 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 0.068936379 seconds)
  done (took 2.145678482 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.080945195 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.081305302 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.081381869 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.078889361 seconds)
  done (took 2.197904971 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.07408471 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076720969 seconds)
  done (took 2.017153482 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 0.225321026 seconds)
  (6/15) benchmarking "18129"...
  done (took 0.17847924 seconds)
  (7/15) benchmarking "20517"...
  done (took 0.091992832 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.080570191 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080002379 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.080378707 seconds)
  done (took 2.119583397 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.069814342 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.07162506 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.071752044 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.072494591 seconds)
  done (took 2.150184393 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.066554199 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.066259952 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.068643567 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.071408536 seconds)
  done (took 2.138880924 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 0.083237507 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 0.087600859 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 0.117271134 seconds)
  done (took 2.155187877 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.081748046 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.083266984 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078318943 seconds)
  done (took 2.116024206 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.10669798 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.097268904 seconds)
  done (took 2.071894818 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.078036228 seconds)
  done (took 1.951459188 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.088440571 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.098070236 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.139106573 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.107807355 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.141947254 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.126666477 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.077174706 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.078460088 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.073816256 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.072865928 seconds)
  done (took 2.871205723 seconds)
done (took 26.379090857 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077428388 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.37081163 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360493317 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.088124186 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.673559267 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357247505 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.981928958 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092181071 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.102449996 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068439584 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086261548 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649720022 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.973195405 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.327052685 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.956294466 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.325272504 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.652275294 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068910536 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068268246 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068970602 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.960816403 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068168106 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068665014 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069278437 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.652634525 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.375653276 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069988144 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.324786089 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06838295 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072807157 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.358595237 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069840792 seconds)
  done (took 16.350323313 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.06845569 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124217752 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072604661 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084951404 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070587627 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069645159 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071606723 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069156107 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.113105004 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068795449 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086615875 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068149733 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.07285719 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069849847 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089708147 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068256084 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071007708 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072386587 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069432062 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070445074 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088505351 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069224549 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070177588 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069607076 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069700299 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082459366 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070025746 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068880233 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068965164 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073214785 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073943472 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070339164 seconds)
  done (took 4.314385595 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119819848 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.127626907 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07371211 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.110207239 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.1194974 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070349213 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.152734454 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092716103 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.117390632 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069590589 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087479731 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068815933 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.105539229 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070528017 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08985046 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068809359 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071578221 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06986419 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069093196 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069652138 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088670981 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068632286 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069392625 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069300867 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069545968 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083970261 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069972212 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.06860286 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069375009 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072908675 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074289487 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070654356 seconds)
  done (took 4.591322572 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.068321972 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.070869202 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.077721853 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.080640604 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.066086449 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.068557147 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.069404422 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.066330432 seconds)
  done (took 2.462945415 seconds)
done (took 29.606382678 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.076861601 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.06671906 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.070802615 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.087220377 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073855373 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.070164262 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.064397841 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074447651 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071282104 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.070878839 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.072802539 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.066896453 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070050833 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.064823908 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.07189363 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.065921991 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.072974522 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.069895342 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.070273994 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.071805326 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.068109256 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.071510375 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074498903 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.070385371 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.070261804 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.070319467 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.074611514 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.071801142 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.066312091 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.06904491 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.068568737 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.081437592 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.072394388 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.072137317 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.065963519 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.065522607 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.070111389 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.06787025 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.072389675 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.074994944 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.068173858 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.074983043 seconds)
  done (took 4.839413663 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.08652083 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.092417126 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.084300755 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.082305873 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.105582929 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.079706497 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088544141 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.076637666 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.075331209 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088203457 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073327071 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.079502483 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.081123877 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.075710402 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078482563 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.074576571 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.079625432 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.073048065 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.078337948 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.078068565 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.092164655 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.071151409 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.078670576 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.080150597 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.07380099 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.079411618 seconds)
  done (took 4.007236493 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.071294308 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.088345419 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.092154263 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.142372945 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.1103307 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.082507502 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.081929879 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.093434827 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.100749987 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067523121 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071949686 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.095455279 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096710119 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074669017 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.107555345 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.08625828 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.080501074 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069421302 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.07509838 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.103640689 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.090886436 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.086950612 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.100991888 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.088226817 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066918607 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077181722 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.075322363 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.084637005 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.075385337 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.080744736 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.07246954 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071428528 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.068538762 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.081045149 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.074719722 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.065707599 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090439452 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.08118918 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.082834579 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.106793608 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.078034715 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069519232 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.099192336 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.134152793 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.06723622 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.070573604 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.071799977 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.08113714 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069341528 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.098056924 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.086504236 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067536679 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.086626369 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068844234 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068872208 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084739335 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069146638 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.110717535 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079974314 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.073708864 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.088555025 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073117248 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.089633062 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067249594 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.079399756 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068457367 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069010904 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.065968614 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.103646029 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.075156145 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.121002575 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068797051 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.065511821 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.080289227 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.079333891 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074570183 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.069032327 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.088108493 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.080256063 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071214829 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.07940733 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070140519 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070723282 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.103807838 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.066357665 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.065693715 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.065418127 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.069776536 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070734615 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068188072 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081544736 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.06670076 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.071286983 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.083485383 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067460029 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068262804 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.070159365 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.068719131 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.06693994 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078821279 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071419172 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069582694 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.080452806 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068805956 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.071050366 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.08260553 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.077069117 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067025598 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.068514386 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.069998497 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069264035 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.071990768 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070829385 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069715332 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.074791456 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075030841 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073528482 seconds)
  done (took 11.214873416 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.160509776 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.15387809 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.068975023 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.149135769 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076344585 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.07225483 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.151213255 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.089536301 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068511002 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069338745 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.067655421 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.09690487 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.092928698 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.107628959 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.073022655 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068620324 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.094089534 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.101951702 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.1539786 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.146977128 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.092114474 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076315932 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.071072415 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069635268 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.069414291 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.07711327 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.088569149 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076511521 seconds)
  done (took 4.623044114 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.072866666 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.083213765 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.07217031 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.092419023 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.08614785 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069002528 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070309307 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069954758 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.085232998 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.074972471 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.068200352 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.072992661 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.071997795 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.068873595 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068961475 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074609061 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.07518385 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.066905247 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.072006935 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073119484 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078910096 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.094630232 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072876491 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.068864119 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.071019334 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.068423055 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.075288056 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.078032223 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067615854 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.098984683 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065324184 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.072335733 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082929917 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069508481 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067542462 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068833392 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067827197 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.06794675 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.068944707 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.065720259 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.065596034 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.073445011 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066953772 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.07388468 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.08215454 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.075967993 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.069036349 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072652425 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.070611449 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.06493277 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.07149986 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071534354 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070575449 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.076956185 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072012212 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.07075559 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069587985 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.099320342 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.074178539 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067418773 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.067384487 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066143056 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.069602682 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.07670026 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.084842166 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.0697218 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066640654 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.068016834 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.072899015 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.082428546 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067803357 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.073739385 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064870183 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.068142849 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.07038938 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.070885409 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069665143 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066261942 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067694587 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068112391 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.068408015 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067527764 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.067855407 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.07078764 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065721084 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066433626 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.068541903 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.069062633 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.074637599 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.066710742 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.070498685 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069529139 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066605948 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070757776 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.073495653 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071157205 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.088469193 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.077175535 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068977836 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066145963 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.083041723 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.069603861 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066755381 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.073506184 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.072666655 seconds)
  done (took 9.535837457 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.088450949 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.067403505 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085874877 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.094369709 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.07777301 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.07320611 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.082407346 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068941266 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.084463725 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.06708466 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077304517 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.069893649 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.08198233 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077296353 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069616576 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078909078 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.070409148 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.088917388 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082674966 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.0662964 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.077486931 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081227515 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.081205492 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.087387984 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.086490773 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.087073776 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.080719305 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.070940149 seconds)
  done (took 4.153842609 seconds)
done (took 40.259586767 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.963053641 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.138595518 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.972262234 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.247922598 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.027218828 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.144547079 seconds)
  (7/12) benchmarking "nbody"...
  done (took 3.083842481 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.954538749 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 8.167831323 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.990738991 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.296583502 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.319395496 seconds)
done (took 69.26463375 seconds)
(2/20) benchmarking "string"...
  (1/7) benchmarking "join"...
  done (took 7.006182992 seconds)
  (2/7) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 2.093610147 seconds)
    (2/2) benchmarking "String"...
    done (took 2.165045906 seconds)
  done (took 6.160173903 seconds)
  (3/7) benchmarking "==(::SubString, ::String)"...
    (1/3) benchmarking "equal"...
    done (took 2.552917735 seconds)
    (2/3) benchmarking "different length"...
    done (took 1.953242381 seconds)
    (3/3) benchmarking "different"...
    done (took 2.001051448 seconds)
  done (took 8.394473532 seconds)
  (4/7) benchmarking "replace"...
  done (took 3.049014334 seconds)
  (5/7) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 6.599724277 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.208164826 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.952152208 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.95751231 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.33803012 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.771657304 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.439736052 seconds)
  done (took 33.157656912 seconds)
  (6/7) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.281106077 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.219407829 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.703983537 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.738590127 seconds)
  done (took 16.884152577 seconds)
  (7/7) benchmarking "==(::AbstractString, ::AbstractString)"...
    (1/4) benchmarking "identical"...
    done (took 2.569041148 seconds)
    (2/4) benchmarking "equal"...
    done (took 2.21514377 seconds)
    (3/4) benchmarking "different length"...
    done (took 2.214524005 seconds)
    (4/4) benchmarking "different"...
    done (took 2.213455389 seconds)
  done (took 11.16384096 seconds)
done (took 87.802540162 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.953104831 seconds)
    (2/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.004027916 seconds)
    (3/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.957082594 seconds)
    (4/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 2.10835032 seconds)
    (5/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 7.033671104 seconds)
    (6/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.982322277 seconds)
    (7/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.964986382 seconds)
    (8/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.996437556 seconds)
    (9/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.953595167 seconds)
    (10/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.956737445 seconds)
    (11/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.376892857 seconds)
    (12/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.951727182 seconds)
    (13/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.969856031 seconds)
    (14/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 7.007452536 seconds)
    (15/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.956103997 seconds)
    (16/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.978655622 seconds)
    (17/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.496455924 seconds)
    (18/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.973571048 seconds)
    (19/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.958965366 seconds)
    (20/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.53220781 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.463405195 seconds)
    (22/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.952695169 seconds)
    (23/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.954920266 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 2.016572552 seconds)
    (25/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.049462637 seconds)
    (26/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.984716921 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.522733216 seconds)
    (28/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.962597708 seconds)
    (29/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.559905389 seconds)
    (30/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.967124867 seconds)
    (31/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 7.139521236 seconds)
    (32/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.958535756 seconds)
  done (took 210.533904199 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.957461774 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.760583341 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.841994292 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.997631052 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.146049124 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.155800655 seconds)
    (7/36) benchmarking "scal!"...
    done (took 3.098190997 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.345158577 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.964177926 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.976175382 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.09401922 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.96390725 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.134222363 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.956588701 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.952313613 seconds)
    (16/36) benchmarking "herk!"...
    done (took 7.044349188 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.110625093 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.150125884 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.959030838 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.149694878 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.968127593 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.930872933 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.885638629 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.107929108 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.990431038 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.962830169 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.958912612 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.994363705 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.148698143 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.078889368 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.99927917 seconds)
    (32/36) benchmarking "symm!"...
    done (took 7.007258337 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.150225771 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.828613256 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.974045178 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.962505756 seconds)
  done (took 175.600898359 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.149606344 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/118) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.967214383 seconds)
    (2/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 2.021687322 seconds)
    (3/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 2.094081605 seconds)
    (4/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.706501792 seconds)
    (5/118) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.688267702 seconds)
    (6/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.958722879 seconds)
    (7/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.959719594 seconds)
    (8/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.959552527 seconds)
    (9/118) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.966850013 seconds)
    (10/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.961540471 seconds)
    (11/118) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 2.029764085 seconds)
    (12/118) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.299305041 seconds)
    (13/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.975115046 seconds)
    (14/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.959339846 seconds)
    (15/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.962219292 seconds)
    (16/118) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.230417748 seconds)
    (17/118) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.963454287 seconds)
    (18/118) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.960722529 seconds)
    (19/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.959207451 seconds)
    (20/118) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 2.024435634 seconds)
    (21/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.332862156 seconds)
    (22/118) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.094661659 seconds)
    (23/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.963017189 seconds)
    (24/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.969834444 seconds)
    (25/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 2.096226742 seconds)
    (26/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.970657018 seconds)
    (27/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.960364448 seconds)
    (28/118) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.094153614 seconds)
    (29/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.964101822 seconds)
    (30/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 2.040553239 seconds)
    (31/118) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 2.093757355 seconds)
    (32/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.971995453 seconds)
    (33/118) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 2.041980783 seconds)
    (34/118) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.967565264 seconds)
    (35/118) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.446097293 seconds)
    (36/118) benchmarking ("3-arg mul!", 2)...
    done (took 1.95848116 seconds)
    (37/118) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.959463013 seconds)
    (38/118) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.961981496 seconds)
    (39/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 2.022840254 seconds)
    (40/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.960769006 seconds)
    (41/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 5.051732308 seconds)
    (42/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 2.05100498 seconds)
    (43/118) benchmarking ("5-arg mul!", 3)...
    done (took 1.961656021 seconds)
    (44/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.972095334 seconds)
    (45/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.1460384 seconds)
    (46/118) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.633007554 seconds)
    (47/118) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.965216635 seconds)
    (48/118) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.961285788 seconds)
    (49/118) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.9603731 seconds)
    (50/118) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.960286572 seconds)
    (51/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.961390869 seconds)
    (52/118) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.72963632 seconds)
    (53/118) benchmarking ("5-arg mul!", 2)...
    done (took 1.963528222 seconds)
    (54/118) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.960279032 seconds)
    (55/118) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.987752447 seconds)
    (56/118) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.552449614 seconds)
    (57/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.961610678 seconds)
    (58/118) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.9633798 seconds)
    (59/118) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.960940176 seconds)
    (60/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.960842414 seconds)
    (61/118) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.961907648 seconds)
    (62/118) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.968323088 seconds)
    (63/118) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.997624848 seconds)
    (64/118) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.759838623 seconds)
    (65/118) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.658716296 seconds)
    (66/118) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.351462598 seconds)
    (67/118) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.773309435 seconds)
    (68/118) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.961141344 seconds)
    (69/118) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.519323148 seconds)
    (70/118) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 2.023477896 seconds)
    (71/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.961943226 seconds)
    (72/118) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.960760944 seconds)
    (73/118) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 2.039626106 seconds)
    (74/118) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.961402764 seconds)
    (75/118) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.962739591 seconds)
    (76/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.961732584 seconds)
    (77/118) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.96200055 seconds)
    (78/118) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 4.048281664 seconds)
    (79/118) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 4.042668163 seconds)
    (80/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.963592803 seconds)
    (81/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 2.096370491 seconds)
    (82/118) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.967758304 seconds)
    (83/118) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.962188283 seconds)
    (84/118) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 22.249030397 seconds)
    (85/118) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.556421248 seconds)
    (86/118) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.961806373 seconds)
    (87/118) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.962127765 seconds)
    (88/118) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.974564654 seconds)
    (89/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 2.018883502 seconds)
    (90/118) benchmarking ("3-arg mul!", 3)...
    done (took 1.962433782 seconds)
    (91/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.961136544 seconds)
    (92/118) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.968481568 seconds)
    (93/118) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 4.047130819 seconds)
    (94/118) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.963787503 seconds)
    (95/118) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.96156973 seconds)
    (96/118) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.961212769 seconds)
    (97/118) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.056972077 seconds)
    (98/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.961878353 seconds)
    (99/118) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 22.192005576 seconds)
    (100/118) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.183027098 seconds)
    (101/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 2.032894376 seconds)
    (102/118) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.203460057 seconds)
    (103/118) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.186604069 seconds)
    (104/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.96428034 seconds)
    (105/118) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.962079922 seconds)
    (106/118) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.961395168 seconds)
    (107/118) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.976708158 seconds)
    (108/118) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.963302615 seconds)
    (109/118) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.96177622 seconds)
    (110/118) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.972960239 seconds)
    (111/118) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.963166936 seconds)
    (112/118) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.962858768 seconds)
    (113/118) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.961821919 seconds)
    (114/118) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.962549139 seconds)
    (115/118) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.962261066 seconds)
    (116/118) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.964625231 seconds)
    (117/118) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.97435031 seconds)
    (118/118) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.961948132 seconds)
  done (took 430.807384731 seconds)
done (took 821.034348622 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 512)...
    done (took 2.69684442 seconds)
    (2/5) benchmarking ("identity", 4096)...
    done (took 2.759225543 seconds)
    (3/5) benchmarking ("identity", 2)...
    done (took 2.605775218 seconds)
    (4/5) benchmarking ("identity", 1024)...
    done (took 2.64642791 seconds)
    (5/5) benchmarking ("identity", 64)...
    done (took 2.612434442 seconds)
  done (took 15.220437973 seconds)
done (took 17.119232603 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/41) benchmarking ("> q0.8", "Vector{UInt8}")...
    done (took 1.984228537 seconds)
    (2/41) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.98055567 seconds)
    (3/41) benchmarking ("BitVector", "10-90")...
    done (took 1.968951814 seconds)
    (4/41) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.986473948 seconds)
    (5/41) benchmarking ("> q0.95", "Vector{UInt8}")...
    done (took 1.984873376 seconds)
    (6/41) benchmarking ("> q0.99", "Vector{Float64}")...
    done (took 1.983382909 seconds)
    (7/41) benchmarking ("> q0.95", "Vector{UInt64}")...
    done (took 2.015466777 seconds)
    (8/41) benchmarking ("> q0.8", "Vector{Int64}")...
    done (took 2.011900514 seconds)
    (9/41) benchmarking ("> q0.99", "Vector{Int64}")...
    done (took 2.008826081 seconds)
    (10/41) benchmarking ("> q0.99", "Vector{UInt8}")...
    done (took 1.981675406 seconds)
    (11/41) benchmarking ("> q0.5", "Vector{Float64}")...
    done (took 1.990298476 seconds)
    (12/41) benchmarking ("> q0.99", "Vector{Bool}")...
    done (took 1.985536005 seconds)
    (13/41) benchmarking ("> q0.8", "Vector{Float32}")...
    done (took 1.988931292 seconds)
    (14/41) benchmarking ("> q0.95", "Vector{Int64}")...
    done (took 2.008149205 seconds)
    (15/41) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.990408869 seconds)
    (16/41) benchmarking ("> q0.8", "Vector{Int8}")...
    done (took 1.992915057 seconds)
    (17/41) benchmarking ("> q0.99", "Vector{Int8}")...
    done (took 1.985556599 seconds)
    (18/41) benchmarking ("BitVector", "50-50")...
    done (took 1.975474269 seconds)
    (19/41) benchmarking ("> q0.5", "Vector{Bool}")...
    done (took 1.992140204 seconds)
    (20/41) benchmarking ("> q0.95", "Vector{Bool}")...
    done (took 1.98868514 seconds)
    (21/41) benchmarking ("> q0.95", "Vector{Float32}")...
    done (took 1.98880454 seconds)
    (22/41) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.982238821 seconds)
    (23/41) benchmarking ("> q0.8", "Vector{Bool}")...
    done (took 1.983549381 seconds)
    (24/41) benchmarking ("> q0.5", "Vector{Int8}")...
    done (took 1.990614208 seconds)
    (25/41) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.000526117 seconds)
    (26/41) benchmarking ("> q0.95", "Vector{Float64}")...
    done (took 1.987874327 seconds)
    (27/41) benchmarking ("BitVector", "90-10")...
    done (took 1.983013444 seconds)
    (28/41) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.988949029 seconds)
    (29/41) benchmarking ("> q0.95", "Vector{Int8}")...
    done (took 1.991555539 seconds)
    (30/41) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.990384905 seconds)
    (31/41) benchmarking ("> q0.8", "Vector{UInt64}")...
    done (took 2.022721759 seconds)
    (32/41) benchmarking ("> q0.8", "Vector{Float64}")...
    done (took 1.995486945 seconds)
    (33/41) benchmarking ("> q0.99", "Vector{UInt64}")...
    done (took 2.016940359 seconds)
    (34/41) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.993965167 seconds)
    (35/41) benchmarking ("> q0.5", "Vector{Float32}")...
    done (took 1.992197093 seconds)
    (36/41) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.999571518 seconds)
    (37/41) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.98275797 seconds)
    (38/41) benchmarking ("> q0.5", "Vector{Int64}")...
    done (took 2.012936803 seconds)
    (39/41) benchmarking ("> q0.99", "Vector{Float32}")...
    done (took 1.98978019 seconds)
    (40/41) benchmarking ("> q0.5", "Vector{UInt64}")...
    done (took 2.022354085 seconds)
    (41/41) benchmarking ("> q0.5", "Vector{UInt8}")...
    done (took 1.996866794 seconds)
  done (took 83.618689779 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.972954428 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.121680623 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.184133075 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 2.005605631 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.973142126 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.191554349 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 2.028855154 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 2.102198639 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 2.102899011 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.187393825 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.191978926 seconds)
  done (took 24.966663511 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.972355296 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.109211902 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.189418644 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 2.007998498 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.995824053 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.185233408 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 2.036735479 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 2.099414655 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 2.109005038 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.194139573 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.198410261 seconds)
  done (took 25.008282162 seconds)
done (took 135.492918705 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/2) benchmarking "longtuple"...
    done (took 2.348099003 seconds)
    (2/2) benchmarking "11899"...
    done (took 2.212486204 seconds)
  done (took 6.463776079 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.969085138 seconds)
    (2/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.987126377 seconds)
    (3/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.121166482 seconds)
    (4/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.9704578 seconds)
    (5/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.970064064 seconds)
    (6/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.971468583 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.971419031 seconds)
    (8/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.970015416 seconds)
  done (took 17.83356349 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.968553326 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.969903677 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.969796106 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.968965856 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.96947299 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.968788725 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.969554656 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.969085322 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.969324373 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.969723218 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.969792841 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.969937761 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.97018023 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.970566849 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.971459233 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.970796227 seconds)
  done (took 33.421449546 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("minimum", (8,))...
    done (took 1.970059639 seconds)
    (2/24) benchmarking ("sumabs", (4,))...
    done (took 1.969404186 seconds)
    (3/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.970089666 seconds)
    (4/24) benchmarking ("minimum", (2,))...
    done (took 1.970807839 seconds)
    (5/24) benchmarking ("sum", (8,))...
    done (took 1.970450325 seconds)
    (6/24) benchmarking ("sumabs", (2,))...
    done (took 1.970218307 seconds)
    (7/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.971669868 seconds)
    (8/24) benchmarking ("minimum", (4, 4))...
    done (took 1.972027588 seconds)
    (9/24) benchmarking ("sumabs", (8,))...
    done (took 1.970874902 seconds)
    (10/24) benchmarking ("sum", (2, 2))...
    done (took 1.970508965 seconds)
    (11/24) benchmarking ("minimum", (2, 2))...
    done (took 1.970549865 seconds)
    (12/24) benchmarking ("sum", (4,))...
    done (took 1.970880669 seconds)
    (13/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.972829476 seconds)
    (14/24) benchmarking ("sumabs", (16,))...
    done (took 1.970561749 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.970327946 seconds)
    (16/24) benchmarking ("sum", (4, 4))...
    done (took 1.970709244 seconds)
    (17/24) benchmarking ("sum", (8, 8))...
    done (took 1.970482328 seconds)
    (18/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.97211872 seconds)
    (19/24) benchmarking ("minimum", (8, 8))...
    done (took 1.972832713 seconds)
    (20/24) benchmarking ("sum", (16, 16))...
    done (took 1.971432354 seconds)
    (21/24) benchmarking ("minimum", (4,))...
    done (took 1.97129293 seconds)
    (22/24) benchmarking ("sum", (16,))...
    done (took 1.971733005 seconds)
    (23/24) benchmarking ("minimum", (16, 16))...
    done (took 1.975487633 seconds)
    (24/24) benchmarking ("sum", (2,))...
    done (took 1.971196579 seconds)
  done (took 49.213596933 seconds)
done (took 108.843471008 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.202697891 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.603003335 seconds)
  done (took 8.710917703 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.975115467 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.971623614 seconds)
  done (took 5.926705667 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.972739087 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.97221401 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.972678046 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.971681765 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.972980696 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.9722816 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.973429685 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.972206629 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.972874881 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.973095183 seconds)
  done (took 21.632870725 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.972436169 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.972278587 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.97258895 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.973308856 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.973282408 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.972246967 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.972344158 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.972276167 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.974791565 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.973227054 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.972649111 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.973232985 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.972914763 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.973548312 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.973515513 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.973619813 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.973081508 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.973568762 seconds)
  done (took 37.422274307 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.973843897 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.973469921 seconds)
  done (took 5.85547571 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.973775937 seconds)
    (2/7) benchmarking "second"...
    done (took 1.974255736 seconds)
    (3/7) benchmarking "month"...
    done (took 1.973990499 seconds)
    (4/7) benchmarking "year"...
    done (took 1.972631432 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.974284144 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.974626272 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.975042935 seconds)
  done (took 15.726982295 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.973607914 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.143206831 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.185580325 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.593917543 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.975884579 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.976628792 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.859398871 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.975626408 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.979196298 seconds)
  done (took 21.57157433 seconds)
done (took 118.751869232 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.808072762 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.979297686 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.280444328 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 7.125664448 seconds)
  (5/8) benchmarking "pisum"...
  done (took 7.005172064 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.277466422 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 7.002563387 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.528155421 seconds)
done (took 43.913687646 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 7.003651499 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.971782714 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 7.007684506 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 7.006492752 seconds)
  done (took 22.894275129 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.990209409 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.307738861 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.996900479 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.969072174 seconds)
  done (took 23.182886246 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.350337056 seconds)
    (2/2) benchmarking "read"...
    done (took 2.328951318 seconds)
  done (took 6.592911695 seconds)
done (took 61.584065197 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.975678572 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.975633192 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.974917361 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.975179578 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.97619901 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.976556425 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.976222034 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.975604235 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.975814 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.976607479 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.97547682 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.975454209 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.97594983 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.974693401 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.976952995 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.975922964 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.976755799 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.976160235 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.976155971 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.97728748 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.976538529 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.975918231 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.976494914 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.976163038 seconds)
  done (took 49.335492988 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.976974637 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.975349449 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.975688568 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.976345436 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.977006818 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.976293492 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.97677056 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.976113955 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.976283788 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.976509647 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.976728478 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.976832641 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.976724267 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.977238265 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.976975419 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.978733621 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.977399413 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.977328907 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.977992804 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.977566707 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.978906812 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.978324291 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.977544421 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.978264066 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.977571382 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.979324827 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.978139798 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.977500792 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.977041962 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.977306053 seconds)
  done (took 61.229440165 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.978434713 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.978503186 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.979057278 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.976818751 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.979566278 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.978612304 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.977833611 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.978498809 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.978731749 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.979613982 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.978569183 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.979072934 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.97875429 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.979060445 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.979324843 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.979297273 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.97871382 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.978308564 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.979734675 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.979730724 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.979282153 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.978674352 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.979436293 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.979835484 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.979646863 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.979184397 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.978923802 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.979356684 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.979624554 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.97904957 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.979920045 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.979810433 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.979422806 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.979453722 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.980579979 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.979996351 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.979005795 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.979820795 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.980064811 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.980671765 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.979752728 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.979869995 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.980138206 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.979431298 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.981599873 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.979947129 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.97982501 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.980620108 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.98112502 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.980124351 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.980554572 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.981235246 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.980250508 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.980664768 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.981288424 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.980148673 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.980862052 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.980830585 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.980833352 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.983096273 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.981623054 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.98202091 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.981311775 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.981342186 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.981856871 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.981752595 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.981288116 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.980994202 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.981869502 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.983841718 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.981963849 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.981388205 seconds)
  done (took 144.476161015 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.98132873 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.982473817 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.981854056 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.981524895 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.981727523 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.981852666 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.981519031 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.983016866 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.982950318 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.982484937 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.98210743 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.981961149 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.983658457 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.982214707 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.982349805 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.982723569 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.982691418 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.982580867 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.982095051 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.982496866 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.98161347 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.982618074 seconds)
  done (took 45.525797274 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.983488818 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.983180528 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.982192905 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.982219347 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.984228865 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.982745956 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.982963235 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.983496425 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.982053975 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.984572488 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.983052344 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.983826453 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.983142975 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.98402851 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.98424279 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.983307347 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.983551617 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.983535925 seconds)
  done (took 37.618062425 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.984504152 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.983456419 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.983293679 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.984038455 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.985322269 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.98462395 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.983874122 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.984819572 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.983336933 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.983845868 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.985085405 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.983626764 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.98396884 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.984875115 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.984413688 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.983933101 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.984860864 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.984998833 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.98343025 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.984494439 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.984585177 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.984302768 seconds)
  done (took 45.572293626 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.983803745 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.984877454 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.985425803 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.984594318 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.986256745 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.985278117 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.98592609 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.985902498 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.984832304 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.985163566 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.985808653 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.985937793 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.98597577 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.986263159 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.984867297 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.985863687 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.985827083 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.987848054 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.986229505 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.985857128 seconds)
  done (took 41.631583135 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.985782925 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.987454335 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.985297889 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.986111296 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.985554015 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.985847712 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.985830832 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.985463852 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.985394042 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.986669556 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.985915414 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.986529121 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.986227139 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.986663852 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.987085345 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.986222794 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.98691644 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.986729365 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.987238902 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.986561312 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.986579845 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.987650351 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.987634791 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.986780258 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.986785575 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.987448054 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.987478968 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.987594018 seconds)
  done (took 57.543948084 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.986658761 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.987957362 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.987947926 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.987413413 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.986495414 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.988163494 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.987898109 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.98800967 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.987333029 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.986974321 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.987742719 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.987808397 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.988012012 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.988362318 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.987774781 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.987723214 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.987562623 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.987494713 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.988340556 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.988604828 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.988878209 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.987399149 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.988914017 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.988475438 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.98732638 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.988565758 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.989207434 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.988728065 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.988621207 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.9894162 seconds)
  done (took 61.561929318 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 2.007372501 seconds)
    (2/2) benchmarking "in"...
    done (took 2.006553844 seconds)
  done (took 5.936173237 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.989032129 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.987789302 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.988419333 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.98938193 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.989789193 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.988425204 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.988931071 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.989246665 seconds)
  done (took 17.833629344 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.990311113 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.99156525 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.98851309 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.990439638 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.990100814 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.997581062 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.991031696 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.990282893 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.990677969 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.991710805 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.99497844 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.993549314 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.997053483 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.993323685 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.990468382 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.990374792 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.991354698 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.992975782 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.991047656 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.990523173 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.993095894 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.989778395 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.991340118 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.990658116 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.991432001 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.992667234 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.99942142 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.990956482 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.992291092 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.990904919 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.996750741 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.990184427 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.991240274 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.991708544 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.990960623 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.991889314 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.997544179 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.991062035 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.990847057 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.99072925 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.994143503 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.9934782 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.994706411 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 2.000766519 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.991724179 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.992517959 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.99210118 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.991198656 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.992186851 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.995307603 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 2.000290818 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.992038466 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.991865361 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.992243449 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.994637068 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 2.040868316 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.851672513 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.853399639 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.858487778 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.859916594 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.856340467 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.872318982 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.860289989 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.858808916 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.853128465 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.862567054 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.875522159 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.853955193 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.854947501 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.853624305 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.860190856 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.852565529 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.853021349 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.853710508 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.865641647 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.860429672 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.852953662 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.854504279 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.853382002 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.853736479 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.854430462 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.853510209 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.854245711 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.853832576 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.863628219 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.876186915 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.853266259 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.853927094 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.855477405 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.854985173 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.857559539 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.856660309 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.854597122 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.854743402 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.855695989 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.856652387 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.854554152 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.854597327 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.855000391 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.862499958 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.855392837 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.854407849 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.857828646 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.8625659 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.855037605 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.854252424 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.855007034 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.854872634 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.862037966 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.855021914 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.854855878 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.854990666 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.856810189 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.858783676 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.855916544 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.858502081 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.862074214 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.862534853 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.857029475 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.859161334 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.860914648 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.857878377 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.865216784 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.876711213 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.855876966 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.859093019 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.860534744 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.866871507 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.859263859 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.855936835 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.858585583 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.856276387 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.855893563 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.857181113 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.855913655 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.856144738 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.856161557 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.85572915 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.855895181 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.857149711 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.859149042 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.857812399 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.858524486 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.856705897 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.860404313 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.856089849 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.85908001 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.863537438 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.857510135 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.85737638 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.857175828 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.859322373 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.859276813 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.858430134 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.85749639 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.857811777 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.857166818 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.857871982 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.85967414 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.857457714 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.857455382 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.859182707 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.861734646 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.857756687 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.858085596 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.858066999 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.857846066 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.857848219 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.859178989 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.858436302 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.860463115 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.857109049 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.861613454 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.857533734 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.857904917 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.858189415 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.858487263 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.85835938 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.861513502 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.868056807 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.861427829 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.8666826 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.859226449 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.865444584 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.858762097 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.86005873 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.859510013 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.858308538 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.858808125 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.859124011 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.859474612 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.861902951 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.878924253 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.868615367 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.861205789 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.860910168 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.865144259 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.863079385 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.863893564 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.859115175 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.859614724 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.860973945 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.859916203 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.859168115 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.859390863 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.862791375 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.859556081 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.859347911 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.862585583 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.859602896 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.859615888 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.8603862 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.860792203 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.861951259 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.860343031 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.860388012 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.860255141 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.86261578 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.867466927 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.861924171 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.860122885 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.860349922 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.862418182 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.860761142 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.860694597 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.861422354 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.864068044 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.848692148 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.86194712 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.868201643 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.861660951 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.861500478 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.861374806 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.860745767 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.863055388 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.861151927 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.864080369 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.868160957 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.863742501 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.861832778 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.866530883 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.861464524 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.863392588 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.861688035 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.862857197 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.861291643 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.862910104 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.861397622 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.862526945 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.868012834 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.861614825 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.862414449 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.861901098 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.865259165 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.863032162 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.863482984 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.862461936 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.865187451 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.869790237 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.867733056 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.862966607 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.866321793 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.864713737 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.864620142 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.866320596 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.863044487 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.875298469 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.871231544 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.863329517 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.862700791 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.862708129 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.86483075 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.863111568 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.862133334 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.869706827 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.864168946 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.864356886 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.866831749 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.862910228 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.863501365 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.869923328 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.86397837 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.866318238 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.864750634 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.864239409 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.864023804 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.863720042 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.865423712 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.86411248 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.865093594 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.867723228 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.864302324 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.864384213 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.863965406 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.872019108 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.863899577 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.864405857 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.871505889 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.86550858 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.864531061 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.865113489 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.864233092 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.865162188 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.864955815 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.864771696 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.865881544 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.864589045 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.868153127 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.8741335 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.868127778 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.871985991 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.866468286 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.874661815 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.864707689 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.865548664 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.864967037 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.868392235 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.872258985 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.865215295 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.865327511 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.872537468 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.86605724 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.866878002 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.868970316 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.865820071 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.865577696 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.865750708 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.867171547 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.869996738 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.868512512 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.86612113 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.865961721 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.866027087 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.865898865 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.868070696 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.867198208 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.866830314 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.866512696 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.865732892 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.866860726 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.866402325 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.866550187 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.866471837 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.865880072 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.866507113 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.873803971 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.86687122 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.867898922 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.870706243 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.867225524 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.875278047 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.867180405 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.86688907 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.86820242 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.867241422 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.869866145 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.867202982 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.86695144 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.86766429 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.867407911 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.869140113 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.878419317 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.874404591 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.870975909 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.869131203 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.867289381 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.868064484 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.877363542 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.889664479 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.867923063 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.86973523 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.872061554 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.87383071 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.869982091 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.872724604 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.871302371 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.874289308 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.868795387 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.867770197 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.871414641 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.878871741 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.868022921 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.868926352 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.869249135 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.873289754 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.871056201 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.868799034 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.869898441 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.871340037 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.870238069 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.879697506 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.869050592 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.869828057 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.868960712 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.869079484 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.869067889 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.868837302 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.870861382 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.870160689 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.86945577 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.869219882 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.871392457 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.873413289 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.869702559 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.872649816 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.878446349 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.869565019 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.869668183 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.872519638 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.869843406 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.871177851 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.870290038 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.869347816 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.872133506 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.870417363 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.870956434 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.873065844 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.878078999 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.87159257 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.869757411 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.870166166 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.873668784 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.870436016 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.870571333 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.871630379 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.878193359 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.87421095 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.88131276 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.879219128 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.870682295 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.872305414 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.877651056 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.877996076 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.870182521 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.870217677 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.870897595 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.873492914 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.873048535 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.872444167 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.87124512 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.873262424 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.876741261 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.872394038 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.87185527 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.871537788 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.871962159 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.873111936 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.873498466 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.876501084 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.871527204 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.871842109 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.870834551 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.87270573 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.872526089 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.87423087 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.871591145 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.872330604 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.874225586 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.873439642 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.876455477 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.87277991 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.872835825 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.873384455 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.873026875 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.872467312 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.865664811 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.87317283 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.873245378 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.876146934 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.880248608 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.87223416 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.873814454 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.874138157 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.877027895 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.873184736 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.872885807 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.873297874 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.873278279 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.880433471 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.873852426 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.87300262 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.874594494 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.873035127 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.877898959 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.874617695 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.877077577 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.872922942 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.873810936 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.873270667 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.876940571 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.882252862 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.877666343 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.87664087 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.881342473 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.878416509 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.875170824 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.874026175 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.874385649 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.874793438 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.876105714 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.877100083 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.874977038 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.875825543 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.873559321 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.875785493 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.874484291 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.876638573 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.87396725 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.873653289 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.877562854 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.883096749 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.882304359 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.875010496 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.875600332 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.874172865 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.877820787 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.886330856 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.874498485 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.874567094 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.874123774 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.875749168 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.876656999 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.882535442 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.884253402 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.87839489 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.875102846 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.880520054 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.891861593 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.877167475 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.88456753 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.90373149 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.877375612 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.875044846 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.875875506 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.877362247 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.875429983 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.879584839 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.87609946 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.881713894 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.875967171 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.876224069 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.88357362 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.875852235 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.876726511 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.875853799 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.877870828 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.8818981 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.876347711 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.883075783 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.87670129 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.876375038 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.876827268 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.879539311 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.876449178 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.876078331 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.876709527 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.878039103 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.876592241 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.876096183 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.885157813 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.876417043 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.878109231 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.890365241 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.888584568 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.876793862 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.877038055 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.877260843 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.881897472 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.879641099 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.877225816 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.880744284 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.884497398 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.88118344 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.884927834 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.879548487 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.87880133 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.878255175 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.878142218 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.877572629 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.889896943 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.88792453 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.878816309 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.879398308 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.884271432 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.878640211 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.88436504 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.883778437 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.880046799 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.879514507 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.878570733 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.877460437 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.878595059 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.878900826 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.881614719 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.886650653 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.878860155 seconds)
  done (took 1122.260023129 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.879548581 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.878665607 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.878997962 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.878746346 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.878894527 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.879420399 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.879496117 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.879381766 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.878955891 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.87832709 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.879286146 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.879186317 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.878824132 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.87908394 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.879055177 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.879181361 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.879453391 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.879073329 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.879690554 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.879989793 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.879799925 seconds)
  done (took 41.27776887 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.87936145 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.879531399 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.87975083 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.880028755 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.880315471 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.87985915 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.87989664 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.880349438 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.879894149 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.87918946 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.88001599 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.880031967 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.880254316 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.879507581 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.880461799 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.880302739 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.880383039 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.879736677 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.879963442 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.88047626 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.87971731 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.880386388 seconds)
  done (took 43.163832258 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.880378141 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.880376989 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.881953162 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.880703323 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.867197951 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.880311862 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.881040021 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.883039462 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.881593194 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.882441961 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.887964586 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.887953216 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.881372149 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.885114576 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.880879502 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.881892324 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.026622101 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.88140125 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.881902337 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.881458271 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.881421612 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.887971653 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.881844276 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.882243846 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.881574173 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.881899354 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.881691959 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.881752848 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.881792213 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.883166035 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.886451735 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.88257132 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.882745579 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.884652344 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.882691921 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.884012328 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.886123108 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.882102142 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.882565486 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.8826739 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.891763985 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.904156222 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.88251147 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.882447352 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.889353467 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.88243217 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.883067517 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.886048604 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.890621167 seconds)
  done (took 94.24760756 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.882923227 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.883250622 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.882609148 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.882951028 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.882573327 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.883211 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.882924993 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.883317728 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.883814876 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.88380059 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.884244948 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.884492357 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.884318109 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.883287407 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.883119996 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.883834813 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.884293847 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.88371217 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.883800466 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.883949262 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.884249776 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.884131371 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.883975763 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.884136616 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.884609362 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.884058466 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.884406678 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.884016436 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.884414877 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.884243921 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.884720251 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.884756225 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.884911664 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.884573841 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.884393524 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.885088279 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.88487276 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.885294428 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.884782116 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.8847181 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.885513465 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.884603838 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.884804975 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.886226988 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.885271978 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.884972253 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.885139644 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.886062081 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.885720167 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.885493044 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.885727488 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.885858343 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.885555919 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.885884683 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.886188414 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.886141034 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.885846759 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.885796196 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.885863341 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.886036341 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.886064633 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.886768462 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.886419332 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.8859834 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.886322367 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.886531028 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.886200983 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.886522972 seconds)
  done (took 129.985293421 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.886499151 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.886306463 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.886383409 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.885325764 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.886530667 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.886646473 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.886635378 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.886747909 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.886198196 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.885890078 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.886779983 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.886871646 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.886352707 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.887171728 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.886888193 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.886640704 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.886861201 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.886676667 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.88635477 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.887121188 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.887409274 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.887088695 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.887219048 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.886574858 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.887745272 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.887233819 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.887257343 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.886813574 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.887431589 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.887399823 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.887135219 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.887215915 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.888852349 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.887752699 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.88815347 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.887707465 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.887941337 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.887912876 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.888252933 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.888327864 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.887976587 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.888330029 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.887791171 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.888111881 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.887939265 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.888007437 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.888397435 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.888363366 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.888566968 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.8891118 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.888354406 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.889081973 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.888732357 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.888747948 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.88845769 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.889103878 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.888286873 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.888972219 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.888649264 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.888843609 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.889341101 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.889539145 seconds)
  done (took 118.855573346 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.888984068 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.889343776 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.889373005 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.889486776 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.888979259 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.889093639 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.889314121 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.889614718 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.889030521 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.889755134 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.889344897 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.889634869 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.890807835 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.889492838 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.890088609 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.890687269 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.89014078 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.890404586 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.890078515 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.890824714 seconds)
  done (took 39.619840813 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.889695543 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.890154975 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.890315727 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.890832637 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.88995157 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.889987761 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.89055413 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.890379308 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.890318455 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.890615514 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.890559333 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.890617238 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.890514767 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.891243025 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.890397761 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.890703996 seconds)
  done (took 32.073112334 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.890487477 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.890716535 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.891133245 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.89124056 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.891545872 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.89151025 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.891077993 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.890854111 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.891620725 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.891221739 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.892041628 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.891835331 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.891375468 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.890663694 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.89177732 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.891590919 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.891793448 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.892156705 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.891402927 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.891466605 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.892475167 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.892002339 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.892299838 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.892102229 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.892061312 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.892045094 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.892746063 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.892015659 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.891806445 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.891894236 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.892031764 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.892651301 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.892520374 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.892188334 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.892140123 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.892554301 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.894986194 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.892763866 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.892219117 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.892968958 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.892151371 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.892865644 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.895565604 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.893199353 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.893195402 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.892950135 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.893360971 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.896086222 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.8933476 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.893151361 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.892906217 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.893524487 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.894851932 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.893973187 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.893737115 seconds)
  done (took 105.909002583 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.893058035 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.897392975 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.894157532 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.893697414 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.893528997 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.893498577 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.894178697 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.898981335 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.893761932 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.894216309 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.894448928 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.894255157 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.897356094 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.894915848 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.894051998 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.89466996 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.894390184 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.896380329 seconds)
  done (took 35.936283063 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.894082429 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.89403922 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.894917455 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.894203251 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.894929604 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.894477458 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.894678566 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.895037127 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.894979533 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.897066914 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.895068791 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.895452301 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.895252219 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.894944421 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.897118512 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.895396439 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.894522108 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.895018519 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.895463463 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.896112146 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.895319109 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.895036247 seconds)
  done (took 43.524033713 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.896052797 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.895524481 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.912320351 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.916297099 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.915500329 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.929991002 seconds)
  done (took 13.297365947 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.896254653 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.8962561 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.897428942 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.895953382 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.896320494 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.897505529 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.896893676 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.89653069 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.896914442 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.897728369 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.897084401 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.898142217 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.896037483 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.896764085 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.896596665 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.896928579 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.89675627 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.896910553 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.89644531 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.896839886 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.896616436 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.898290824 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.896752069 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.896916236 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.897756934 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.897522777 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.897917705 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.897671743 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.897590221 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.897450143 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.89713231 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.898191336 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.898941363 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.898300027 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.897648237 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.897292212 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.897729166 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.897829406 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.897792413 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.898039331 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.868657018 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.897166785 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.899127544 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.898545608 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.898453477 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.898497536 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.89880518 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.898658426 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.898995582 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.899022954 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.898287996 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.898936434 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.898976919 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.899519513 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.898646404 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.898970412 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.899534575 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.898991821 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.900876635 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.89873186 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.899101495 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.899103557 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.899801295 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.900555825 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.899138738 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.898839522 seconds)
  done (took 127.067373823 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.899846543 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.89910256 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.900753292 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.90014432 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.899599824 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.899218269 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.899364686 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.900588447 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.898881342 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.899248724 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.899772108 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.899494145 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.899758328 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.900001576 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.899848237 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.89972009 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.899866301 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.901300751 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.900773353 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.900423109 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.900000869 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.900661819 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.900202654 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.903178397 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.900643077 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.900488173 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.900402905 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.900900918 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.900256562 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.900535491 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.900890704 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.900325971 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.901311936 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.900921535 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.900285926 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.901303823 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.90062143 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.900721345 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.90113759 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.901033741 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.901003803 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.901410895 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.901130723 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.900865941 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.901654732 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.901119537 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.901883777 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.90061125 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.901253968 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.902640134 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.901647544 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.902479605 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.902236051 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.901587095 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.90198815 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.90152159 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.901397371 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.901968755 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.9020425 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.904242465 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.902515392 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.902193306 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.901851737 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.902319961 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.902339635 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.903338509 seconds)
  done (took 127.30039093 seconds)
done (took 2644.69871087 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.934229848 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.963313282 seconds)
  done (took 15.734734709 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.064460115 seconds)
    (2/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.96216281 seconds)
    (3/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.087916445 seconds)
    (4/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.018479139 seconds)
    (5/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.933049153 seconds)
    (6/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.919297055 seconds)
    (7/16) benchmarking ("transpose", (600, 600))...
    done (took 1.906392079 seconds)
    (8/16) benchmarking ("transpose", (600, 400))...
    done (took 1.907078847 seconds)
    (9/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.998296865 seconds)
    (10/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.906650958 seconds)
    (11/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.939696567 seconds)
    (12/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.907134953 seconds)
    (13/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.906721719 seconds)
    (14/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.907068355 seconds)
    (15/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.907351455 seconds)
    (16/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.907305349 seconds)
  done (took 53.030480344 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.908555585 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.908419223 seconds)
    (3/18) benchmarking ("IJV", 10)...
    done (took 1.907989188 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.905938442 seconds)
    (5/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.919090897 seconds)
    (6/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.984456514 seconds)
    (7/18) benchmarking ("IJV", 100)...
    done (took 1.927611052 seconds)
    (8/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.910534316 seconds)
    (9/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.922947466 seconds)
    (10/18) benchmarking ("IV", 1000)...
    done (took 1.941190938 seconds)
    (11/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.925356092 seconds)
    (12/18) benchmarking ("Diagonal", 10)...
    done (took 1.913637181 seconds)
    (13/18) benchmarking ("Diagonal", 100)...
    done (took 1.914493888 seconds)
    (14/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.912542879 seconds)
    (15/18) benchmarking ("IJV", 1000)...
    done (took 1.994514648 seconds)
    (16/18) benchmarking ("Diagonal", 1000)...
    done (took 1.953783135 seconds)
    (17/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.964341527 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.98262201 seconds)
  done (took 36.637623895 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.986632069 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.915439649 seconds)
  done (took 10.747425959 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.908753921 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.915885965 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.922710381 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.930483458 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.913702027 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.927351587 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.913313426 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.90622251 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.925876881 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.93516998 seconds)
  done (took 71.045636461 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.909038162 seconds)
    (2/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.910050589 seconds)
    (3/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.162938097 seconds)
    (4/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.91742369 seconds)
    (5/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.913188522 seconds)
    (6/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.930046072 seconds)
    (7/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.907042375 seconds)
    (8/54) benchmarking ("spmat", "range", 100)...
    done (took 1.938199242 seconds)
    (9/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.909700944 seconds)
    (10/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.905433559 seconds)
    (11/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.917704228 seconds)
    (12/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.168389919 seconds)
    (13/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.919922924 seconds)
    (14/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.907742848 seconds)
    (15/54) benchmarking ("spmat", "array", 100)...
    done (took 2.255219065 seconds)
    (16/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.920324692 seconds)
    (17/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.913272637 seconds)
    (18/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.93935479 seconds)
    (19/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.9400226 seconds)
    (20/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.912913604 seconds)
    (21/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.914551281 seconds)
    (22/54) benchmarking ("spmat", "range", 10)...
    done (took 1.912397223 seconds)
    (23/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.07019997 seconds)
    (24/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.589104396 seconds)
    (25/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.910893149 seconds)
    (26/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.911997148 seconds)
    (27/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.915062725 seconds)
    (28/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.90629273 seconds)
    (29/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.906037261 seconds)
    (30/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.908716776 seconds)
    (31/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.911082492 seconds)
    (32/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.908472909 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.91238706 seconds)
    (34/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.908438224 seconds)
    (35/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.915428146 seconds)
    (36/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.91240833 seconds)
    (37/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.395008481 seconds)
    (38/54) benchmarking ("spmat", "array", 10)...
    done (took 1.926843302 seconds)
    (39/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.915739739 seconds)
    (40/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.985977845 seconds)
    (41/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.954612515 seconds)
    (42/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.91613987 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.635441292 seconds)
    (44/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.911017108 seconds)
    (45/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.907416392 seconds)
    (46/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.913832997 seconds)
    (47/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.582227924 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.968051887 seconds)
    (49/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.911290952 seconds)
    (50/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.060801998 seconds)
    (51/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.22879536 seconds)
    (52/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.925204038 seconds)
    (53/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.071563658 seconds)
    (54/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.068176309 seconds)
  done (took 134.732718457 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.907938313 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.134289075 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.058439853 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.910534273 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.163267062 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.114707049 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.789018629 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.953291124 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.911834141 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.10657978 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.156815799 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.011288329 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.910197109 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.90692567 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.906802168 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.907253808 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.050623469 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.97474262 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.90949194 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.907736902 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.933068721 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.109930674 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.029012436 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.910315539 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.934470663 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.111225672 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.031341436 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.00914132 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.639693062 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.908036788 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.97008493 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.910165577 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.90865982 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.908402034 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.061786359 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.000660403 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.994425559 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.910759031 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.908521892 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.90941844 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.54758935 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.104377912 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.003277117 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.031176364 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.155371975 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.119971019 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.580711174 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.909147549 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.533628531 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.072470731 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.10308591 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.115121277 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.029403138 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.912483235 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.900051735 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.909693893 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.908795196 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.127050116 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.129085077 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.007444068 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.913006004 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.911322327 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.909632254 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.134637318 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.912527848 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.999847878 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.911617144 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.909723828 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.002393157 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.010054583 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.137957219 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.131750931 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.940885098 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.226739327 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.262507326 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.111638911 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.974193313 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.129562692 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.913629029 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.882066256 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.98874622 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.673024514 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.156982134 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.140390485 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.10891078 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.941172568 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.517155327 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.911076449 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.096267701 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.09562848 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.111954252 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.150181827 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.150950284 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 4.894953493 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.91115091 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.911413867 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.126486122 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.027360797 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.69989282 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.245055589 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.140747425 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.329928202 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.937906099 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.226860656 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.040521912 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.917704673 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.552054349 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.911711165 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.112105726 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.952056082 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.914576885 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.912435922 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.100656292 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.737992637 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.913278092 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.576166044 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.971665332 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.916914471 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.111950568 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.914006313 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.150033682 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.914840889 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.143580498 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.450033001 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.943958299 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.071642131 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.152525228 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.476742064 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.143941798 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.150704643 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.023671288 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.122025189 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.176733985 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.914816197 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.174857269 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.916031647 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.913426175 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.070970029 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.918300146 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.055339058 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 7.340169096 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.145504166 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.934327922 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.143761845 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.919623267 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.146522405 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.945540078 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.964473197 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.891433383 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.042545628 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.917856571 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.835568001 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.063992809 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.917336815 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.889684013 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.458638789 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.914491298 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.062479811 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.13886149 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.920922318 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.983545758 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.435811212 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.914422856 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.996958734 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.936721296 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.127710607 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.914878192 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.158027721 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.41214623 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.133994956 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.914429194 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.135076326 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.084392889 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.919886438 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.915544857 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.756250325 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.551211699 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.915321223 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.065367279 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.284768674 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.629363217 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.11211609 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.918814171 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.042320102 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.921015737 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 4.007135193 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.239138854 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.915957695 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.916441834 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.915556254 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.916842339 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.915673674 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.107429461 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.944856457 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.343268695 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.04385388 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.17144474 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.223348689 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.113387772 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.956212836 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.921081706 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.127296892 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.9206329 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.978782255 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.921507935 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.936205922 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.143729134 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.921995428 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.109721756 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.153912901 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.77440819 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.963225651 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.92346679 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.918031795 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.813904363 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.057956175 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.005846337 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.921190839 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.918383574 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.030360529 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.03695298 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.099559376 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.611760741 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.938847928 seconds)
  done (took 905.755643457 seconds)
done (took 1229.523477815 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.918139021 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.920453354 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.923651767 seconds)
    (4/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.921064813 seconds)
  done (took 29.538117636 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("array", 5)...
    done (took 1.91803085 seconds)
    (2/6) benchmarking ("array", 3)...
    done (took 1.918283444 seconds)
    (3/6) benchmarking ("tuple", 5)...
    done (took 1.921039542 seconds)
    (4/6) benchmarking ("tuple", 10)...
    done (took 1.920479596 seconds)
    (5/6) benchmarking ("array", 10)...
    done (took 1.919096053 seconds)
    (6/6) benchmarking ("tuple", 3)...
    done (took 1.918760375 seconds)
  done (took 13.370652464 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.917010004 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.921626335 seconds)
    (3/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.921902264 seconds)
  done (took 22.614881949 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((10000000,), 2)...
    done (took 2.339683804 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.320273674 seconds)
    (3/4) benchmarking ((1000, 1000), 1)...
    done (took 1.994170961 seconds)
    (4/4) benchmarking ((1000, 1000), 2)...
    done (took 2.060850994 seconds)
  done (took 10.57014594 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (10, "tup_tup")...
    done (took 1.924369634 seconds)
    (2/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.919646445 seconds)
    (3/9) benchmarking (3, "scal_tup")...
    done (took 1.919430866 seconds)
    (4/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.921730544 seconds)
    (5/9) benchmarking (5, "scal_tup")...
    done (took 1.921728225 seconds)
    (6/9) benchmarking (3, "tup_tup")...
    done (took 1.919320806 seconds)
    (7/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.922565302 seconds)
    (8/9) benchmarking (5, "tup_tup")...
    done (took 1.921779555 seconds)
    (9/9) benchmarking (10, "scal_tup")...
    done (took 1.921787354 seconds)
  done (took 19.153450618 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.416583899 seconds)
done (took 101.517455824 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/341) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.083107702 seconds)
    (2/341) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.04902278 seconds)
    (3/341) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.045531769 seconds)
    (4/341) benchmarking ("collect", "filter", Bool, true)...
    done (took 3.129543422 seconds)
    (5/341) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.927846922 seconds)
    (6/341) benchmarking ("collect", "all", Int8, false)...
    done (took 2.069318779 seconds)
    (7/341) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.123611763 seconds)
    (8/341) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.315931955 seconds)
    (9/341) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.136337918 seconds)
    (10/341) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.067561112 seconds)
    (11/341) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.191999296 seconds)
    (12/341) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.134565004 seconds)
    (13/341) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.050179791 seconds)
    (14/341) benchmarking ("collect", "filter", Float32, false)...
    done (took 2.679852024 seconds)
    (15/341) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.878364544 seconds)
    (16/341) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.241475761 seconds)
    (17/341) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.114129363 seconds)
    (18/341) benchmarking ("map", identity, Bool, true)...
    done (took 2.067781742 seconds)
    (19/341) benchmarking ("collect", "filter", Float64, false)...
    done (took 2.808703616 seconds)
    (20/341) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.92659418 seconds)
    (21/341) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.352940172 seconds)
    (22/341) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.235099715 seconds)
    (23/341) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.036335073 seconds)
    (24/341) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.934386722 seconds)
    (25/341) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.029028052 seconds)
    (26/341) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.25718327 seconds)
    (27/341) benchmarking ("perf_sum", Bool, true)...
    done (took 1.940387295 seconds)
    (28/341) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.931150993 seconds)
    (29/341) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.116322901 seconds)
    (30/341) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.696752499 seconds)
    (31/341) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.944478764 seconds)
    (32/341) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.944258876 seconds)
    (33/341) benchmarking ("map", abs, BigInt, true)...
    done (took 7.241311784 seconds)
    (34/341) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.103418015 seconds)
    (35/341) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.980622412 seconds)
    (36/341) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.920715697 seconds)
    (37/341) benchmarking ("perf_sum", Float32, true)...
    done (took 2.10184236 seconds)
    (38/341) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.935445967 seconds)
    (39/341) benchmarking ("collect", "filter", BigFloat, true)...
    done (took 2.904074966 seconds)
    (40/341) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.29224924 seconds)
    (41/341) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.123113838 seconds)
    (42/341) benchmarking ("collect", "all", Int8, true)...
    done (took 2.048787911 seconds)
    (43/341) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.980478203 seconds)
    (44/341) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.999381169 seconds)
    (45/341) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.931181308 seconds)
    (46/341) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.931834942 seconds)
    (47/341) benchmarking ("collect", "all", BigFloat, false)...
    done (took 2.162363054 seconds)
    (48/341) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.934733024 seconds)
    (49/341) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.920910107 seconds)
    (50/341) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.385015442 seconds)
    (51/341) benchmarking ("collect", "all", Int64, false)...
    done (took 2.015419797 seconds)
    (52/341) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.923458675 seconds)
    (53/341) benchmarking ("collect", "filter", Int8, true)...
    done (took 3.188006635 seconds)
    (54/341) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.122889004 seconds)
    (55/341) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.246241906 seconds)
    (56/341) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.01237464 seconds)
    (57/341) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.155802576 seconds)
    (58/341) benchmarking ("perf_sum", Int8, false)...
    done (took 1.927579289 seconds)
    (59/341) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.933659209 seconds)
    (60/341) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.934636764 seconds)
    (61/341) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.932390922 seconds)
    (62/341) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.120210263 seconds)
    (63/341) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.927158774 seconds)
    (64/341) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.206587888 seconds)
    (65/341) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.166823779 seconds)
    (66/341) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.05881351 seconds)
    (67/341) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 2.012329597 seconds)
    (68/341) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.31014468 seconds)
    (69/341) benchmarking ("map", abs, Int64, true)...
    done (took 2.166478937 seconds)
    (70/341) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.542038659 seconds)
    (71/341) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.924213802 seconds)
    (72/341) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.924041064 seconds)
    (73/341) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.097582873 seconds)
    (74/341) benchmarking ("collect", "filter", BigInt, false)...
    done (took 2.824550074 seconds)
    (75/341) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.845136036 seconds)
    (76/341) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.146889858 seconds)
    (77/341) benchmarking ("perf_sum", Float64, true)...
    done (took 2.057063735 seconds)
    (78/341) benchmarking ("perf_countequals", "Int8")...
    done (took 2.166076995 seconds)
    (79/341) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.138824522 seconds)
    (80/341) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.321323114 seconds)
    (81/341) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.323178116 seconds)
    (82/341) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.220272103 seconds)
    (83/341) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.682308927 seconds)
    (84/341) benchmarking ("collect", "all", BigInt, true)...
    done (took 2.283195702 seconds)
    (85/341) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.936619306 seconds)
    (86/341) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.075028686 seconds)
    (87/341) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.251057723 seconds)
    (88/341) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.160320399 seconds)
    (89/341) benchmarking ("collect", "filter", Bool, false)...
    done (took 2.635469756 seconds)
    (90/341) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.268591925 seconds)
    (91/341) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.928018992 seconds)
    (92/341) benchmarking ("broadcast", identity, Int64, true)...
    done (took 3.939419639 seconds)
    (93/341) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.937363487 seconds)
    (94/341) benchmarking ("map", abs, Int64, false)...
    done (took 2.030958922 seconds)
    (95/341) benchmarking ("map", identity, Float32, false)...
    done (took 2.00447455 seconds)
    (96/341) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.321410585 seconds)
    (97/341) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.926134618 seconds)
    (98/341) benchmarking ("map", identity, Float32, true)...
    done (took 2.14574001 seconds)
    (99/341) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.942317036 seconds)
    (100/341) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.076938202 seconds)
    (101/341) benchmarking ("map", identity, Float64, false)...
    done (took 2.029746407 seconds)
    (102/341) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.943574136 seconds)
    (103/341) benchmarking ("map", abs, BigInt, false)...
    done (took 8.176703187 seconds)
    (104/341) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.144080142 seconds)
    (105/341) benchmarking ("sort", BigInt, false)...
    done (took 6.925345043 seconds)
    (106/341) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.928435186 seconds)
    (107/341) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.938003307 seconds)
    (108/341) benchmarking ("collect", "all", BigInt, false)...
    done (took 2.143192808 seconds)
    (109/341) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.857433027 seconds)
    (110/341) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.146943928 seconds)
    (111/341) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.930879263 seconds)
    (112/341) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.445890533 seconds)
    (113/341) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 8.221272675 seconds)
    (114/341) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 8.286538257 seconds)
    (115/341) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.423230512 seconds)
    (116/341) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.20757161 seconds)
    (117/341) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.367612416 seconds)
    (118/341) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.938131883 seconds)
    (119/341) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.048168929 seconds)
    (120/341) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.150526658 seconds)
    (121/341) benchmarking ("perf_sum", Float32, false)...
    done (took 2.132451369 seconds)
    (122/341) benchmarking ("map", identity, Int8, false)...
    done (took 2.000683226 seconds)
    (123/341) benchmarking ("collect", "all", BigFloat, true)...
    done (took 2.290682186 seconds)
    (124/341) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.072449318 seconds)
    (125/341) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.305290917 seconds)
    (126/341) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.290641097 seconds)
    (127/341) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.375367661 seconds)
    (128/341) benchmarking ("perf_sum", Int8, true)...
    done (took 2.037106637 seconds)
    (129/341) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.037679356 seconds)
    (130/341) benchmarking ("map", abs, Bool, false)...
    done (took 2.004896098 seconds)
    (131/341) benchmarking ("map", abs, Int8, false)...
    done (took 2.029130124 seconds)
    (132/341) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.9275306 seconds)
    (133/341) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.36179567 seconds)
    (134/341) benchmarking ("collect", "filter", Float32, true)...
    done (took 3.224719933 seconds)
    (135/341) benchmarking ("collect", "all", Int64, true)...
    done (took 2.211781929 seconds)
    (136/341) benchmarking ("perf_countequals", "Float32")...
    done (took 2.227809538 seconds)
    (137/341) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.109607699 seconds)
    (138/341) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.042403597 seconds)
    (139/341) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 8.161715288 seconds)
    (140/341) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 7.025019324 seconds)
    (141/341) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 7.018011998 seconds)
    (142/341) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.260577241 seconds)
    (143/341) benchmarking ("map", abs, BigFloat, false)...
    done (took 7.014120503 seconds)
    (144/341) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.377214233 seconds)
    (145/341) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.927858741 seconds)
    (146/341) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.635139585 seconds)
    (147/341) benchmarking ("perf_sum", Int64, false)...
    done (took 1.942516351 seconds)
    (148/341) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.92742061 seconds)
    (149/341) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.042515014 seconds)
    (150/341) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.05673636 seconds)
    (151/341) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.926852133 seconds)
    (152/341) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 3.006827674 seconds)
    (153/341) benchmarking ("sort", Float32, false)...
    done (took 5.583553085 seconds)
    (154/341) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.223769771 seconds)
    (155/341) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.930371268 seconds)
    (156/341) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 3.746938221 seconds)
    (157/341) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.773613923 seconds)
    (158/341) benchmarking ("map", abs, Bool, true)...
    done (took 2.085785107 seconds)
    (159/341) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.026424653 seconds)
    (160/341) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.114301724 seconds)
    (161/341) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.008909549 seconds)
    (162/341) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.035585591 seconds)
    (163/341) benchmarking ("perf_countequals", "Int64")...
    done (took 2.168847583 seconds)
    (164/341) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.246848582 seconds)
    (165/341) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.9300581 seconds)
    (166/341) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.951491414 seconds)
    (167/341) benchmarking ("collect", "filter", BigInt, true)...
    done (took 2.926288268 seconds)
    (168/341) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.933749126 seconds)
    (169/341) benchmarking ("perf_countequals", "Bool")...
    done (took 2.171639923 seconds)
    (170/341) benchmarking ("sort", Bool, false)...
    done (took 2.144905652 seconds)
    (171/341) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.194693322 seconds)
    (172/341) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.27297661 seconds)
    (173/341) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.684920021 seconds)
    (174/341) benchmarking ("map", identity, Bool, false)...
    done (took 2.005512187 seconds)
    (175/341) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.190362563 seconds)
    (176/341) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.116466809 seconds)
    (177/341) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.598561844 seconds)
    (178/341) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.4039177 seconds)
    (179/341) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.383462107 seconds)
    (180/341) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.335867053 seconds)
    (181/341) benchmarking ("perf_sum", Int64, true)...
    done (took 1.944985858 seconds)
    (182/341) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.943223498 seconds)
    (183/341) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.937812433 seconds)
    (184/341) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.265224128 seconds)
    (185/341) benchmarking ("sort", Int64, false)...
    done (took 5.553467904 seconds)
    (186/341) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 2.01117774 seconds)
    (187/341) benchmarking ("map", identity, Int8, true)...
    done (took 2.055413648 seconds)
    (188/341) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.937671846 seconds)
    (189/341) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.370587999 seconds)
    (190/341) benchmarking ("collect", "filter", Int64, false)...
    done (took 2.810161897 seconds)
    (191/341) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.934483911 seconds)
    (192/341) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.949059976 seconds)
    (193/341) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.132143272 seconds)
    (194/341) benchmarking ("collect", "all", Bool, true)...
    done (took 2.079009505 seconds)
    (195/341) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.939217458 seconds)
    (196/341) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 2.003602767 seconds)
    (197/341) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.928770822 seconds)
    (198/341) benchmarking ("perf_sum4", Int64, true)...
    done (took 3.660198122 seconds)
    (199/341) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.087310599 seconds)
    (200/341) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.439095002 seconds)
    (201/341) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.684015183 seconds)
    (202/341) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.077503446 seconds)
    (203/341) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.222036772 seconds)
    (204/341) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.933724286 seconds)
    (205/341) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.21018462 seconds)
    (206/341) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 3.031348516 seconds)
    (207/341) benchmarking ("collect", "filter", Int8, false)...
    done (took 2.664028734 seconds)
    (208/341) benchmarking ("collect", "all", Float64, true)...
    done (took 2.210698752 seconds)
    (209/341) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.167763627 seconds)
    (210/341) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.935965955 seconds)
    (211/341) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.302337512 seconds)
    (212/341) benchmarking ("map", abs, Float64, true)...
    done (took 2.17952099 seconds)
    (213/341) benchmarking ("collect", "all", Float32, true)...
    done (took 2.12908845 seconds)
    (214/341) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.935847875 seconds)
    (215/341) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.585578624 seconds)
    (216/341) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.412354861 seconds)
    (217/341) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.961363707 seconds)
    (218/341) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.434363434 seconds)
    (219/341) benchmarking ("map", abs, Float32, true)...
    done (took 2.107471722 seconds)
    (220/341) benchmarking ("map", abs, Float64, false)...
    done (took 2.043823111 seconds)
    (221/341) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.987799297 seconds)
    (222/341) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.69614295 seconds)
    (223/341) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.946813411 seconds)
    (224/341) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.940203806 seconds)
    (225/341) benchmarking ("collect", "filter", ComplexF64, true)...
    done (took 3.448175077 seconds)
    (226/341) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.043100744 seconds)
    (227/341) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.620770926 seconds)
    (228/341) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.873235106 seconds)
    (229/341) benchmarking ("collect", "all", ComplexF64, false)...
    done (took 2.14545051 seconds)
    (230/341) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.062013031 seconds)
    (231/341) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.265220145 seconds)
    (232/341) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.075880045 seconds)
    (233/341) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 3.01693589 seconds)
    (234/341) benchmarking ("perf_sum", Bool, false)...
    done (took 1.954142963 seconds)
    (235/341) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.107816622 seconds)
    (236/341) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.100668679 seconds)
    (237/341) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.118585757 seconds)
    (238/341) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.066838091 seconds)
    (239/341) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.16819865 seconds)
    (240/341) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.938166214 seconds)
    (241/341) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.952451605 seconds)
    (242/341) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.621891602 seconds)
    (243/341) benchmarking ("collect", "filter", Int64, true)...
    done (took 3.405476251 seconds)
    (244/341) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.376588264 seconds)
    (245/341) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.93404214 seconds)
    (246/341) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.721680398 seconds)
    (247/341) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.011703104 seconds)
    (248/341) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.161676487 seconds)
    (249/341) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.066468472 seconds)
    (250/341) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.239487149 seconds)
    (251/341) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.338331732 seconds)
    (252/341) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.255558002 seconds)
    (253/341) benchmarking ("map", identity, BigInt, true)...
    done (took 2.386309749 seconds)
    (254/341) benchmarking ("collect", "filter", Float64, true)...
    done (took 3.388685842 seconds)
    (255/341) benchmarking ("perf_countequals", "Float64")...
    done (took 2.229028659 seconds)
    (256/341) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.265781979 seconds)
    (257/341) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.52822499 seconds)
    (258/341) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.935521789 seconds)
    (259/341) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.993743709 seconds)
    (260/341) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.9846448 seconds)
    (261/341) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.247880555 seconds)
    (262/341) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.153860963 seconds)
    (263/341) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.948788354 seconds)
    (264/341) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.386599539 seconds)
    (265/341) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.129734253 seconds)
    (266/341) benchmarking ("perf_sum", Float64, false)...
    done (took 2.024664574 seconds)
    (267/341) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.933742357 seconds)
    (268/341) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.068072826 seconds)
    (269/341) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.038845954 seconds)
    (270/341) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.962368037 seconds)
    (271/341) benchmarking ("collect", "all", Bool, false)...
    done (took 2.009057095 seconds)
    (272/341) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.7064666 seconds)
    (273/341) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.328681561 seconds)
    (274/341) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.648318487 seconds)
    (275/341) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.138781361 seconds)
    (276/341) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.935120337 seconds)
    (277/341) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.062093313 seconds)
    (278/341) benchmarking ("map", abs, Float32, false)...
    done (took 2.020126759 seconds)
    (279/341) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.925497413 seconds)
    (280/341) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.255961469 seconds)
    (281/341) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.1771346 seconds)
    (282/341) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.648789939 seconds)
    (283/341) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.249474444 seconds)
    (284/341) benchmarking ("map", identity, BigInt, false)...
    done (took 2.169050252 seconds)
    (285/341) benchmarking ("collect", "filter", BigFloat, false)...
    done (took 2.858427826 seconds)
    (286/341) benchmarking ("map", identity, Int64, false)...
    done (took 2.046506535 seconds)
    (287/341) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.952738989 seconds)
    (288/341) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.013816489 seconds)
    (289/341) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.045323513 seconds)
    (290/341) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.62225938 seconds)
    (291/341) benchmarking ("collect", "all", Float64, false)...
    done (took 2.056531717 seconds)
    (292/341) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.953994302 seconds)
    (293/341) benchmarking ("collect", "all", Float32, false)...
    done (took 2.013672724 seconds)
    (294/341) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.832514955 seconds)
    (295/341) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.951117003 seconds)
    (296/341) benchmarking ("map", abs, Int8, true)...
    done (took 2.082169392 seconds)
    (297/341) benchmarking ("map", identity, Float64, true)...
    done (took 2.219169888 seconds)
    (298/341) benchmarking ("sort", BigFloat, false)...
    done (took 6.936290696 seconds)
    (299/341) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.936019768 seconds)
    (300/341) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.208500862 seconds)
    (301/341) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.121692785 seconds)
    (302/341) benchmarking ("map", identity, Int64, true)...
    done (took 2.209531107 seconds)
    (303/341) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.246963764 seconds)
    (304/341) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.943479373 seconds)
    (305/341) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.253920608 seconds)
    (306/341) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.967861542 seconds)
    (307/341) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.342461044 seconds)
    (308/341) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.904632388 seconds)
    (309/341) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.803383124 seconds)
    (310/341) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.958485757 seconds)
    (311/341) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.951730549 seconds)
    (312/341) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.935336377 seconds)
    (313/341) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.288352304 seconds)
    (314/341) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.284806475 seconds)
    (315/341) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.319196277 seconds)
    (316/341) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.047769991 seconds)
    (317/341) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.279407835 seconds)
    (318/341) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.422285856 seconds)
    (319/341) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.061364768 seconds)
    (320/341) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.227258646 seconds)
    (321/341) benchmarking ("collect", "filter", ComplexF64, false)...
    done (took 3.01918409 seconds)
    (322/341) benchmarking ("sort", Float64, false)...
    done (took 5.61274169 seconds)
    (323/341) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.953186612 seconds)
    (324/341) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.815543028 seconds)
    (325/341) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.989059842 seconds)
    (326/341) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.935988568 seconds)
    (327/341) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.074658578 seconds)
    (328/341) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.960987843 seconds)
    (329/341) benchmarking ("collect", "all", ComplexF64, true)...
    done (took 2.411914283 seconds)
    (330/341) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.621557947 seconds)
    (331/341) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.538444049 seconds)
    (332/341) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.950832911 seconds)
    (333/341) benchmarking ("sort", Int8, false)...
    done (took 4.87437931 seconds)
    (334/341) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.018902521 seconds)
    (335/341) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.353056015 seconds)
    (336/341) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.648137829 seconds)
    (337/341) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.077286752 seconds)
    (338/341) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.961214865 seconds)
    (339/341) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.357149679 seconds)
    (340/341) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.454378266 seconds)
    (341/341) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.329840053 seconds)
  done (took 1106.28771527 seconds)
done (took 1108.238575259 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.960373496 seconds)
  (2/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.950290831 seconds)
  (3/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.436399333 seconds)
  (4/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.961011659 seconds)
  (5/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.949896044 seconds)
  (6/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.953919461 seconds)
  (7/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.451073555 seconds)
  (8/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.979822302 seconds)
  (9/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.968359789 seconds)
  (10/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.449076832 seconds)
  (11/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.961269581 seconds)
  (12/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.951188327 seconds)
  (13/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.966353633 seconds)
  (14/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.984937855 seconds)
  (15/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.962619738 seconds)
  (16/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.964459123 seconds)
  (17/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.9565901 seconds)
  (18/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.974079096 seconds)
  (19/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.98519659 seconds)
  (20/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.957160603 seconds)
  (21/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.995653539 seconds)
  (22/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.957324454 seconds)
  (23/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.950470646 seconds)
  (24/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 2.003145564 seconds)
  (25/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.951826801 seconds)
  (26/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.965141804 seconds)
  (27/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.960654545 seconds)
  (28/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.995890525 seconds)
  (29/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.996312386 seconds)
  (30/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.954597039 seconds)
  (31/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.957723871 seconds)
  (32/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.296572272 seconds)
  (33/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 2.000882748 seconds)
  (34/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.95681837 seconds)
  (35/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.962980811 seconds)
  (36/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.966894791 seconds)
  (37/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.95822124 seconds)
  (38/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.966912097 seconds)
  (39/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.960823718 seconds)
  (40/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.966932502 seconds)
  (41/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.951996668 seconds)
  (42/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.962138216 seconds)
  (43/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.957707997 seconds)
  (44/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.954876874 seconds)
  (45/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.951300574 seconds)
  (46/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.951292982 seconds)
  (47/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.954685854 seconds)
  (48/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.077293833 seconds)
  (49/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.966425091 seconds)
  (50/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.280416602 seconds)
  (51/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.00159411 seconds)
  (52/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.961823498 seconds)
  (53/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.997999833 seconds)
  (54/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.956136316 seconds)
  (55/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.954300319 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.955901395 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.997466474 seconds)
  (58/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.958553468 seconds)
  (59/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.957442464 seconds)
  (60/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.282325248 seconds)
  (61/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 2.038931717 seconds)
  (62/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.966967731 seconds)
  (63/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.281596273 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 2.014073055 seconds)
  (65/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.963216748 seconds)
  (66/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.962668962 seconds)
  (67/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.952796054 seconds)
  (68/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.962836917 seconds)
  (69/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.298003496 seconds)
  (70/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.489197666 seconds)
  (71/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.984946156 seconds)
  (72/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.974137287 seconds)
  (73/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.953880503 seconds)
  (74/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.955373456 seconds)
  (75/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.967275088 seconds)
  (76/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.448647205 seconds)
  (77/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.968795028 seconds)
  (78/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.516901728 seconds)
  (79/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.981519245 seconds)
  (80/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.968164726 seconds)
  (81/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.960845918 seconds)
  (82/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.956332944 seconds)
  (83/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.955320281 seconds)
  (84/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.970686778 seconds)
  (85/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.962024765 seconds)
  (86/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.953445569 seconds)
  (87/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.960558498 seconds)
  (88/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.959876266 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.968464658 seconds)
  (90/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.298521158 seconds)
  (91/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.995554728 seconds)
  (92/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.438829349 seconds)
  (93/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.962471191 seconds)
  (94/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.963241894 seconds)
  (95/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.963240427 seconds)
  (96/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.51560611 seconds)
  (97/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.984868326 seconds)
  (98/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.963893379 seconds)
  (99/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.957946382 seconds)
  (100/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.300074026 seconds)
  (101/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.993936829 seconds)
  (102/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.964779242 seconds)
  (103/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.957732544 seconds)
  (104/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.966460756 seconds)
  (105/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.069513697 seconds)
  (106/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.963745705 seconds)
  (107/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.964898683 seconds)
  (108/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.954555035 seconds)
  (109/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.975809079 seconds)
  (110/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.961988108 seconds)
  (111/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.956233126 seconds)
  (112/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.968808259 seconds)
  (113/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.975766818 seconds)
  (114/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.990060597 seconds)
  (115/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.972511335 seconds)
  (116/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.955867019 seconds)
  (117/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.965285416 seconds)
  (118/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.961713689 seconds)
  (119/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.964083375 seconds)
  (120/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.965004615 seconds)
  (121/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.962290441 seconds)
  (122/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.966851132 seconds)
  (123/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.956356368 seconds)
  (124/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 2.007606207 seconds)
  (125/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.964392232 seconds)
  (126/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.971582266 seconds)
  (127/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.070828665 seconds)
  (128/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.962188087 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.080946382 seconds)
  (130/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.970077308 seconds)
  (131/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.962879719 seconds)
  (132/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.955923959 seconds)
  (133/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.284079499 seconds)
  (134/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.999770233 seconds)
  (135/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.977047413 seconds)
  (136/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.963463617 seconds)
  (137/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.979625337 seconds)
  (138/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.977705898 seconds)
  (139/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.974040194 seconds)
  (140/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.958998889 seconds)
  (141/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.971939224 seconds)
  (142/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.960339167 seconds)
  (143/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 2.009035397 seconds)
  (144/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.957621073 seconds)
  (145/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.98076247 seconds)
  (146/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 2.009494019 seconds)
  (147/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.970793033 seconds)
  (148/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.963683369 seconds)
  (149/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.96486254 seconds)
  (150/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.991890171 seconds)
  (151/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.977352896 seconds)
  (152/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.96234792 seconds)
done (took 308.119498728 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.991680194 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.944643165 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.02017905 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.945855376 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.012235366 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.998360077 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.945412791 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.945955321 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.946653046 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.327819408 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.946071343 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.951083297 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.944507422 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.945423021 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.994562928 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.945951661 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.946656232 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.179366768 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.947003719 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.00599152 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.944860653 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.946672259 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.946210067 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.33539943 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.949159494 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.947544294 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.006365611 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.946784577 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.186723585 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.945739691 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.946555132 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.186255873 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.006048186 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.95940943 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.9550713 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.954430022 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.013957848 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.956510096 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.993763146 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.993059869 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.022192892 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.980982413 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.947122242 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.946521275 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.95122872 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.947425285 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.945227723 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.980293905 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.947065824 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.953042987 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.17985075 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.95575593 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.953632194 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.94826197 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.947714838 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.963184536 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.948296258 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.948034707 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.007606684 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.947696746 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.994857383 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.336609097 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.33207592 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.948114546 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.94634961 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.948812626 seconds)
  done (took 188.81540776 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.013762557 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.036423684 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.015847477 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.954396117 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 2.000766924 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.016223376 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.953087453 seconds)
  done (took 15.873450415 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.955885383 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.949029031 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.972601116 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.973775078 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.94784271 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.092018804 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.960935816 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.954802372 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.974488993 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.949050577 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.284606467 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.972969434 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.956613773 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.948812151 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.961086974 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.9782923 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.951417785 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.949134613 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.047697641 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.028594222 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.954607857 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.956990052 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.978917315 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.961627036 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.949711912 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.950141216 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.949642016 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.956747854 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.949158151 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.949668719 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.949581726 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.96597739 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.950346323 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.950475728 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.950208028 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.951027365 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.949769656 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.95006463 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.950441428 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.95035627 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.950167063 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.950057768 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.951210716 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.950899684 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.950158914 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.973889077 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.951020302 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.950770289 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.950131935 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.950291738 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.979880494 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.95167658 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.950378799 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.95564259 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.990626041 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.956464168 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.951017222 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.951659846 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.950549213 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.951345919 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.952265688 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.031920203 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.975097888 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.951610026 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.975054139 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 1.989685631 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.952154053 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.951455262 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.951453762 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 1.977150865 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.952467485 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.975547693 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.95190236 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.049585634 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.951402732 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.097156877 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.975574261 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.955890716 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.955797592 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.952479811 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.959413198 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.95259886 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.954490166 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.959742747 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.957794112 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.952012075 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.953429899 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.953493179 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.960222239 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.953000659 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.998241525 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.952774236 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.953203282 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.048838883 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.952770832 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.051446644 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.97886755 seconds)
  done (took 212.906699096 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.959002269 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.955469093 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.967286168 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.95537973 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.954554316 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.958660217 seconds)
  done (took 13.636791602 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.955913673 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.956739457 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.953717274 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.95382317 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.952980205 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.954079367 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.953734117 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.955952898 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.957484025 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.954151438 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.954383213 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.955475803 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.953839523 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.954170062 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.954192768 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.953876258 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.954643546 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.954299468 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.95453625 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.953948757 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.199237526 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.954092333 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.953845669 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.959056544 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.958811851 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.955130572 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.96390573 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.95418853 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.954800551 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.961125132 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.958845062 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.954832137 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.959401464 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.961850534 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.958865676 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.959547741 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.959593704 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.956629841 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.955674556 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.955132333 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.956771556 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.955080078 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.9556082 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.957313114 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.958786749 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.964267657 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.961342541 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.965113428 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.956339438 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.957147222 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.95720239 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.955523247 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.95659713 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.957060355 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.961505384 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.962717711 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.961526521 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.957068397 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.956026465 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.960730355 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.960026109 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.955853962 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.958746323 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.960685952 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.964135158 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.957847654 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.961636614 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.960267739 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.956462948 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.956449701 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.958307307 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.956729525 seconds)
  done (took 144.057979165 seconds)
done (took 577.170874936 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.008043352 seconds)
  done (took 8.897823006 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.016309185 seconds)
  done (took 9.001256246 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 9.960434408 seconds)
  done (took 11.856141147 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.965788513 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.988726371 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.965830269 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.963573872 seconds)
  done (took 29.789177988 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.267694656 seconds)
  done (took 9.159597186 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.969535452 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.955255878 seconds)
  done (took 15.886139626 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.060620789 seconds)
  done (took 8.951479703 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.045329766 seconds)
  done (took 8.969606366 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.964152745 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.961291296 seconds)
  done (took 15.835979848 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.95912181 seconds)
  done (took 8.850839569 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.635512645 seconds)
  done (took 9.612418644 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.962638411 seconds)
  done (took 8.873869562 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 7.015633974 seconds)
  done (took 8.90770976 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.698256441 seconds)
  done (took 9.589902124 seconds)
done (took 166.072926999 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.965089353 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.962009492 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.960781693 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.962012246 seconds)
  done (took 29.741539736 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.994413971 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.993924993 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.995363681 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.990873837 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.983890467 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.984130321 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.9944686 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.994380031 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.983838845 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.99115781 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.993885377 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.991174251 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.991318286 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.995538265 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.995982579 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.991595599 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.991487011 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.994508096 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.984496155 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.996308791 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.991540825 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.996826302 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.961724455 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.961994411 seconds)
  done (took 49.63784803 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.142223392 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.027051392 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.115593755 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.006663214 seconds)
  done (took 10.185960048 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.961629746 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 2.014999975 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 2.012909493 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 2.006986083 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.012921022 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.066806875 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 2.013570935 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.090365602 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.089778257 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.079415934 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.969319545 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.980204616 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.98200563 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 2.007342361 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.064813061 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.962112011 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.96242692 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.068793984 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 2.017329655 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.120101268 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.963431973 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 2.014942487 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.01365968 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 2.01390671 seconds)
  done (took 50.385135258 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.962632127 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.971741379 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.970458477 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.963616393 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.964948133 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.964007846 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.970650745 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.965080567 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.985699155 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.965447542 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.963577922 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.964133505 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.970313219 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.964516552 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.964059669 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.976871363 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.978376835 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.964629246 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.968013865 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.971035245 seconds)
  done (took 41.265934397 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.96296907 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.808671874 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.309904644 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.214552599 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.96244493 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.967078629 seconds)
  done (took 32.121834482 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.976121968 seconds)
    (2/12) benchmarking ("push_single!", 256)...
    done (took 1.979693514 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.970606235 seconds)
    (4/12) benchmarking ("push_multiple!", 256)...
    done (took 1.987553637 seconds)
    (5/12) benchmarking ("push_single!", 2048)...
    done (took 2.009856377 seconds)
    (6/12) benchmarking ("push_single!", 8)...
    done (took 1.976783096 seconds)
    (7/12) benchmarking ("prerend!", 2048)...
    done (took 2.022849455 seconds)
    (8/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.125247488 seconds)
    (9/12) benchmarking ("push_multiple!", 8)...
    done (took 1.976940356 seconds)
    (10/12) benchmarking ("append!", 2048)...
    done (took 2.021240004 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.987937419 seconds)
    (12/12) benchmarking ("prerend!", 8)...
    done (took 1.970741394 seconds)
  done (took 25.90298808 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.961941024 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.966744835 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.96786951 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.978040894 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.974823131 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.971761658 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.971776897 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.962518478 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.978991965 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.982402804 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.972524058 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.975894892 seconds)
  done (took 45.563305602 seconds)
  (9/13) benchmarking "index"...
    (1/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.176322619 seconds)
    (2/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.190389052 seconds)
    (3/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.175059307 seconds)
    (4/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.336111552 seconds)
    (5/608) benchmarking ("sumvector", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.285550665 seconds)
    (6/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.944063461 seconds)
    (7/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.239905006 seconds)
    (8/608) benchmarking ("sumelt", "BitMatrix")...
    done (took 5.177486549 seconds)
    (9/608) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.705993646 seconds)
    (10/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.732555424 seconds)
    (11/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.263294946 seconds)
    (12/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.945994042 seconds)
    (13/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.916302379 seconds)
    (14/608) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.890814481 seconds)
    (15/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.859591833 seconds)
    (16/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.202165892 seconds)
    (17/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.966471348 seconds)
    (18/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.76565887 seconds)
    (19/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.222786456 seconds)
    (20/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 7.012318125 seconds)
    (21/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.96905934 seconds)
    (22/608) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.9662991 seconds)
    (23/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.972722616 seconds)
    (24/608) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.248967139 seconds)
    (25/608) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.293491897 seconds)
    (26/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.972631853 seconds)
    (27/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.176661454 seconds)
    (28/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.981937477 seconds)
    (29/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.965267317 seconds)
    (30/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.194732613 seconds)
    (31/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.42207123 seconds)
    (32/608) benchmarking ("sumvector_view", "Matrix{Int64}")...
    done (took 2.019705778 seconds)
    (33/608) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.168903302 seconds)
    (34/608) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.22350544 seconds)
    (35/608) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.309411322 seconds)
    (36/608) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 7.115851461 seconds)
    (37/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.96977197 seconds)
    (38/608) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 4.948771135 seconds)
    (39/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.011107432 seconds)
    (40/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.001631245 seconds)
    (41/608) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.975497976 seconds)
    (42/608) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 1.976890006 seconds)
    (43/608) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.513237123 seconds)
    (44/608) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.977501164 seconds)
    (45/608) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.238523865 seconds)
    (46/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.96742016 seconds)
    (47/608) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 7.059296212 seconds)
    (48/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.938185646 seconds)
    (49/608) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.868327208 seconds)
    (50/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 4.317248083 seconds)
    (51/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.080042208 seconds)
    (52/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.879905579 seconds)
    (53/608) benchmarking ("sumelt", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.001931401 seconds)
    (54/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.331884039 seconds)
    (55/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.086526885 seconds)
    (56/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.203705471 seconds)
    (57/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.971958457 seconds)
    (58/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.949611597 seconds)
    (59/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.027318449 seconds)
    (60/608) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.256235505 seconds)
    (61/608) benchmarking ("sumlinear_view", "Matrix{Float64}")...
    done (took 7.123764832 seconds)
    (62/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.971470707 seconds)
    (63/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.178337197 seconds)
    (64/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.892569277 seconds)
    (65/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.3331696 seconds)
    (66/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.091302574 seconds)
    (67/608) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.968900703 seconds)
    (68/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.972081258 seconds)
    (69/608) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.667167892 seconds)
    (70/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.20667574 seconds)
    (71/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.046502921 seconds)
    (72/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.314178461 seconds)
    (73/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.712863316 seconds)
    (74/608) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.968823865 seconds)
    (75/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.971273147 seconds)
    (76/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.858511703 seconds)
    (77/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.05672461 seconds)
    (78/608) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.968513182 seconds)
    (79/608) benchmarking ("mapr_access", "Matrix{Int64}")...
    done (took 3.178448537 seconds)
    (80/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.947390313 seconds)
    (81/608) benchmarking ("sumcartesian", "Matrix{Float64}")...
    done (took 3.894424834 seconds)
    (82/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.068215161 seconds)
    (83/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.267036031 seconds)
    (84/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.973834209 seconds)
    (85/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.967093809 seconds)
    (86/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.97620246 seconds)
    (87/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.774088488 seconds)
    (88/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.893507706 seconds)
    (89/608) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.064758066 seconds)
    (90/608) benchmarking ("sumlogical_view", "Matrix{Int64}")...
    done (took 4.258061821 seconds)
    (91/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.288647424 seconds)
    (92/608) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.969770399 seconds)
    (93/608) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.969718199 seconds)
    (94/608) benchmarking ("sum", "3dsubarray")...
    done (took 1.991018017 seconds)
    (95/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.971298088 seconds)
    (96/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.895869195 seconds)
    (97/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.308159255 seconds)
    (98/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.03756672 seconds)
    (99/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.895032599 seconds)
    (100/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.534343083 seconds)
    (101/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.433340937 seconds)
    (102/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.937950916 seconds)
    (103/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.330839991 seconds)
    (104/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.01530248 seconds)
    (105/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.242082 seconds)
    (106/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.859926178 seconds)
    (107/608) benchmarking ("sumcartesian", "Matrix{Int64}")...
    done (took 2.374051531 seconds)
    (108/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.09577204 seconds)
    (109/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.211797931 seconds)
    (110/608) benchmarking "5d"...
    done (took 3.50854708 seconds)
    (111/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.973257391 seconds)
    (112/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.563863694 seconds)
    (113/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.04855648 seconds)
    (114/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.045578146 seconds)
    (115/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.969194465 seconds)
    (116/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.45245911 seconds)
    (117/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 4.952747209 seconds)
    (118/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.301751037 seconds)
    (119/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.08340924 seconds)
    (120/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.969439829 seconds)
    (121/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.895285334 seconds)
    (122/608) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.979602687 seconds)
    (123/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.173222296 seconds)
    (124/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.426608712 seconds)
    (125/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.027398342 seconds)
    (126/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.969535521 seconds)
    (127/608) benchmarking ("sumrange_view", "Matrix{Float64}")...
    done (took 1.974483562 seconds)
    (128/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.969298057 seconds)
    (129/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.973079738 seconds)
    (130/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.061683301 seconds)
    (131/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.985952427 seconds)
    (132/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.264609949 seconds)
    (133/608) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 2.04203092 seconds)
    (134/608) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.970925434 seconds)
    (135/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.889042978 seconds)
    (136/608) benchmarking ("sumcolon_view", "Matrix{Float64}")...
    done (took 1.975777246 seconds)
    (137/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.258844086 seconds)
    (138/608) benchmarking ("sumrange", "Matrix{Float64}")...
    done (took 6.177559509 seconds)
    (139/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.02950429 seconds)
    (140/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.228174768 seconds)
    (141/608) benchmarking ("sumeach", "BitMatrix")...
    done (took 5.23617029 seconds)
    (142/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.550791036 seconds)
    (143/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.54555582 seconds)
    (144/608) benchmarking ("mapr_access", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.854934543 seconds)
    (145/608) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.240941649 seconds)
    (146/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.043903157 seconds)
    (147/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.045743792 seconds)
    (148/608) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.544747912 seconds)
    (149/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.103284639 seconds)
    (150/608) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.067793774 seconds)
    (151/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.829923461 seconds)
    (152/608) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.112751319 seconds)
    (153/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.985200983 seconds)
    (154/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.973858057 seconds)
    (155/608) benchmarking ("sumcolon", "Matrix{Int64}")...
    done (took 5.996102863 seconds)
    (156/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.280949607 seconds)
    (157/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.362569202 seconds)
    (158/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.013967163 seconds)
    (159/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.97122499 seconds)
    (160/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 3.901361949 seconds)
    (161/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.951488731 seconds)
    (162/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.212464163 seconds)
    (163/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.010166395 seconds)
    (164/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.997982854 seconds)
    (165/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.976916206 seconds)
    (166/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.054164617 seconds)
    (167/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.197954882 seconds)
    (168/608) benchmarking "ind2sub"...
    done (took 6.97207949 seconds)
    (169/608) benchmarking ("sumeach", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.897716764 seconds)
    (170/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.213341047 seconds)
    (171/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.18427759 seconds)
    (172/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.265909243 seconds)
    (173/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.281164975 seconds)
    (174/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.017464435 seconds)
    (175/608) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.044456052 seconds)
    (176/608) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.983047763 seconds)
    (177/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.182842081 seconds)
    (178/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.053215678 seconds)
    (179/608) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.627938164 seconds)
    (180/608) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.463701763 seconds)
    (181/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.189676058 seconds)
    (182/608) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.345794788 seconds)
    (183/608) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 3.935119431 seconds)
    (184/608) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.539634715 seconds)
    (185/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.263681441 seconds)
    (186/608) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.352822624 seconds)
    (187/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.986956148 seconds)
    (188/608) benchmarking ("sumcartesian_view", "Matrix{Float64}")...
    done (took 2.424480375 seconds)
    (189/608) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 4.95380066 seconds)
    (190/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 5.490202639 seconds)
    (191/608) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.002799444 seconds)
    (192/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.325094328 seconds)
    (193/608) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.899227507 seconds)
    (194/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.978142018 seconds)
    (195/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.305665431 seconds)
    (196/608) benchmarking ("sumelt_boundscheck", "Matrix{Float64}")...
    done (took 3.931246436 seconds)
    (197/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 2.287867094 seconds)
    (198/608) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 7.031075871 seconds)
    (199/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.993361453 seconds)
    (200/608) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.97407458 seconds)
    (201/608) benchmarking ("sumelt", "1:100000")...
    done (took 1.974129114 seconds)
    (202/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.98136723 seconds)
    (203/608) benchmarking ("sumlogical", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.870035333 seconds)
    (204/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.082303512 seconds)
    (205/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.042181929 seconds)
    (206/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.046150591 seconds)
    (207/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.900227324 seconds)
    (208/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 5.489943429 seconds)
    (209/608) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 2.010890649 seconds)
    (210/608) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.976067729 seconds)
    (211/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.974111856 seconds)
    (212/608) benchmarking ("sumlogical", "Matrix{Float64}")...
    done (took 4.311394932 seconds)
    (213/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.827328574 seconds)
    (214/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.926615766 seconds)
    (215/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.974138039 seconds)
    (216/608) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.051189857 seconds)
    (217/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 4.669505522 seconds)
    (218/608) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.520960276 seconds)
    (219/608) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.977932136 seconds)
    (220/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.977600357 seconds)
    (221/608) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.578809124 seconds)
    (222/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.983265218 seconds)
    (223/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.870022569 seconds)
    (224/608) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 7.046104209 seconds)
    (225/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.722858313 seconds)
    (226/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.007219896 seconds)
    (227/608) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.264238568 seconds)
    (228/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.649434823 seconds)
    (229/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.269595572 seconds)
    (230/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.039343284 seconds)
    (231/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.045135818 seconds)
    (232/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.974653528 seconds)
    (233/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.978020401 seconds)
    (234/608) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.675229931 seconds)
    (235/608) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.983438913 seconds)
    (236/608) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.675642392 seconds)
    (237/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.265261824 seconds)
    (238/608) benchmarking ("sumlinear", "BitMatrix")...
    done (took 5.247793967 seconds)
    (239/608) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.415892763 seconds)
    (240/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.037847259 seconds)
    (241/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.101932596 seconds)
    (242/608) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 1.989322654 seconds)
    (243/608) benchmarking ("sumeach", "1:100000")...
    done (took 1.976522753 seconds)
    (244/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.452795973 seconds)
    (245/608) benchmarking ("sumvector", "1:100000")...
    done (took 2.003332411 seconds)
    (246/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.977290993 seconds)
    (247/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.178572377 seconds)
    (248/608) benchmarking ("sumlogical", "1:100000")...
    done (took 2.488530051 seconds)
    (249/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.329653347 seconds)
    (250/608) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.617535877 seconds)
    (251/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.057572004 seconds)
    (252/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.975916875 seconds)
    (253/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.246213225 seconds)
    (254/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.982785242 seconds)
    (255/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.467472614 seconds)
    (256/608) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 2.663492179 seconds)
    (257/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.976912179 seconds)
    (258/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.976779177 seconds)
    (259/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.220736514 seconds)
    (260/608) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.66141544 seconds)
    (261/608) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.977656542 seconds)
    (262/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.858203891 seconds)
    (263/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.983940793 seconds)
    (264/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.187387673 seconds)
    (265/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.179484823 seconds)
    (266/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.244908438 seconds)
    (267/608) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.27716709 seconds)
    (268/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.426029579 seconds)
    (269/608) benchmarking ("sumelt_boundscheck", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.902582048 seconds)
    (270/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.981405634 seconds)
    (271/608) benchmarking "4d"...
    done (took 3.012178769 seconds)
    (272/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.215629887 seconds)
    (273/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.976754047 seconds)
    (274/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.012288691 seconds)
    (275/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.291189057 seconds)
    (276/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.018200437 seconds)
    (277/608) benchmarking ("sumcartesian_view", "Matrix{Int64}")...
    done (took 2.410667404 seconds)
    (278/608) benchmarking ("sumvector", "Matrix{Float64}")...
    done (took 2.265489224 seconds)
    (279/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.399245673 seconds)
    (280/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.436491031 seconds)
    (281/608) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.244866653 seconds)
    (282/608) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 2.042035473 seconds)
    (283/608) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.988552179 seconds)
    (284/608) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 2.628780282 seconds)
    (285/608) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.106940569 seconds)
    (286/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.912708169 seconds)
    (287/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.096401603 seconds)
    (288/608) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.903991223 seconds)
    (289/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.64057619 seconds)
    (290/608) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.270748777 seconds)
    (291/608) benchmarking ("sumvector_view", "Matrix{Float64}")...
    done (took 1.99292599 seconds)
    (292/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.248595424 seconds)
    (293/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.959262641 seconds)
    (294/608) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.320793136 seconds)
    (295/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.271578277 seconds)
    (296/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.258575303 seconds)
    (297/608) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.004595854 seconds)
    (298/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.007570412 seconds)
    (299/608) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.856886681 seconds)
    (300/608) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.038540227 seconds)
    (301/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.978245603 seconds)
    (302/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.959318979 seconds)
    (303/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.094614092 seconds)
    (304/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.986161081 seconds)
    (305/608) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.321445822 seconds)
    (306/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.018818249 seconds)
    (307/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.024008392 seconds)
    (308/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.983061348 seconds)
    (309/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.453645567 seconds)
    (310/608) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.000941272 seconds)
    (311/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.98213851 seconds)
    (312/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.55526621 seconds)
    (313/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.004155256 seconds)
    (314/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.09803619 seconds)
    (315/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.0498336 seconds)
    (316/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.726065851 seconds)
    (317/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.480620861 seconds)
    (318/608) benchmarking ("sumrange", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 7.011433173 seconds)
    (319/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.809923213 seconds)
    (320/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.796072435 seconds)
    (321/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.247894637 seconds)
    (322/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.035429735 seconds)
    (323/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.431280015 seconds)
    (324/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.018515043 seconds)
    (325/608) benchmarking ("sumlinear", "Matrix{Int64}")...
    done (took 2.383304462 seconds)
    (326/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.979734218 seconds)
    (327/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.191403956 seconds)
    (328/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.984540203 seconds)
    (329/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.329973264 seconds)
    (330/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.024796211 seconds)
    (331/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.244476204 seconds)
    (332/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.935601951 seconds)
    (333/608) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.191881532 seconds)
    (334/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.179656644 seconds)
    (335/608) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.003758094 seconds)
    (336/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.98529692 seconds)
    (337/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.906909175 seconds)
    (338/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.011720184 seconds)
    (339/608) benchmarking ("sumcolon", "1:100000")...
    done (took 2.843450555 seconds)
    (340/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.949939762 seconds)
    (341/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.98330625 seconds)
    (342/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.611751926 seconds)
    (343/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.421141482 seconds)
    (344/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.99036721 seconds)
    (345/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.449079359 seconds)
    (346/608) benchmarking "3d"...
    done (took 2.82799013 seconds)
    (347/608) benchmarking ("sum", "3darray")...
    done (took 1.982702155 seconds)
    (348/608) benchmarking ("sumlogical", "Matrix{Int64}")...
    done (took 4.276528891 seconds)
    (349/608) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.373505299 seconds)
    (350/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.375875797 seconds)
    (351/608) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.01359285 seconds)
    (352/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.982983081 seconds)
    (353/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.340269357 seconds)
    (354/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 2.113681892 seconds)
    (355/608) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.316436565 seconds)
    (356/608) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.152909995 seconds)
    (357/608) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.989386622 seconds)
    (358/608) benchmarking ("sumcolon_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 2.008581794 seconds)
    (359/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.192265152 seconds)
    (360/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.106380949 seconds)
    (361/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.900308139 seconds)
    (362/608) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.469579317 seconds)
    (363/608) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.528289213 seconds)
    (364/608) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.682281799 seconds)
    (365/608) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 1.991979378 seconds)
    (366/608) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.184763007 seconds)
    (367/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.338667384 seconds)
    (368/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.07400626 seconds)
    (369/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.016036864 seconds)
    (370/608) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.059507363 seconds)
    (371/608) benchmarking ("sumelt_boundscheck", "Matrix{Int64}")...
    done (took 2.385875236 seconds)
    (372/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.25087669 seconds)
    (373/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.049364215 seconds)
    (374/608) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.907915451 seconds)
    (375/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.981312071 seconds)
    (376/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.376890927 seconds)
    (377/608) benchmarking ("sumcartesian", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.205038203 seconds)
    (378/608) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.079545536 seconds)
    (379/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.219240984 seconds)
    (380/608) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.294526275 seconds)
    (381/608) benchmarking ("sumrange", "Matrix{Int64}")...
    done (took 6.154491794 seconds)
    (382/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.475596404 seconds)
    (383/608) benchmarking ("sumcolon", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 6.331581713 seconds)
    (384/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.381333984 seconds)
    (385/608) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.279790702 seconds)
    (386/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.321161588 seconds)
    (387/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.193639419 seconds)
    (388/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.346523717 seconds)
    (389/608) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.236671482 seconds)
    (390/608) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.85857768 seconds)
    (391/608) benchmarking ("sumelt", "Matrix{Int64}")...
    done (took 2.393384975 seconds)
    (392/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.194478529 seconds)
    (393/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.075019451 seconds)
    (394/608) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.25671728 seconds)
    (395/608) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.853803878 seconds)
    (396/608) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.692621638 seconds)
    (397/608) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.222145609 seconds)
    (398/608) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.98880523 seconds)
    (399/608) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.909620817 seconds)
    (400/608) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.189936601 seconds)
    (401/608) benchmarking ("sumeach_view", "Matrix{Float64}")...
    done (took 6.99088947 seconds)
    (402/608) benchmarking ("sumcolon", "Matrix{Float64}")...
    done (took 6.113248953 seconds)
    (403/608) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.414041802 seconds)
    (404/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.226771761 seconds)
    (405/608) benchmarking ("sumlogical_view", "Matrix{Float64}")...
    done (took 4.266904796 seconds)
    (406/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.349624555 seconds)
    (407/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.462508552 seconds)
    (408/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.975604479 seconds)
    (409/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.008952791 seconds)
    (410/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 3.917448817 seconds)
    (411/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.00771699 seconds)
    (412/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.006779326 seconds)
    (413/608) benchmarking ("sumlinear_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.984602724 seconds)
    (414/608) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.472562974 seconds)
    (415/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.265908695 seconds)
    (416/608) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.996793264 seconds)
    (417/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.910474712 seconds)
    (418/608) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.656871943 seconds)
    (419/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.910508564 seconds)
    (420/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.195519149 seconds)
    (421/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.978373305 seconds)
    (422/608) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 2.019266781 seconds)
    (423/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.510563627 seconds)
    (424/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.27549686 seconds)
    (425/608) benchmarking ("sumcolon_view", "Matrix{Int64}")...
    done (took 2.091378425 seconds)
    (426/608) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.278039393 seconds)
    (427/608) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.0307192 seconds)
    (428/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.019401574 seconds)
    (429/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.91082626 seconds)
    (430/608) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.731226702 seconds)
    (431/608) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.933728881 seconds)
    (432/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.034642253 seconds)
    (433/608) benchmarking ("sumeach", "Matrix{Int64}")...
    done (took 2.411444005 seconds)
    (434/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.001578547 seconds)
    (435/608) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.987597461 seconds)
    (436/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.188126798 seconds)
    (437/608) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.911784338 seconds)
    (438/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.03172136 seconds)
    (439/608) benchmarking ("sumrange_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 1.990680264 seconds)
    (440/608) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.182918167 seconds)
    (441/608) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.507100573 seconds)
    (442/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.258521739 seconds)
    (443/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.110690612 seconds)
    (444/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.240869172 seconds)
    (445/608) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.289261292 seconds)
    (446/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.821017128 seconds)
    (447/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.015756097 seconds)
    (448/608) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.258280675 seconds)
    (449/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.912080589 seconds)
    (450/608) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.491307595 seconds)
    (451/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.657370745 seconds)
    (452/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 2.026133546 seconds)
    (453/608) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.057171651 seconds)
    (454/608) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.985870639 seconds)
    (455/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.989488983 seconds)
    (456/608) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.256713254 seconds)
    (457/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.342753696 seconds)
    (458/608) benchmarking ("sumeach_view", "Matrix{Int64}")...
    done (took 7.084978137 seconds)
    (459/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.572824207 seconds)
    (460/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.018230044 seconds)
    (461/608) benchmarking ("sumeach", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.009265692 seconds)
    (462/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.337296187 seconds)
    (463/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.082160299 seconds)
    (464/608) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.98913288 seconds)
    (465/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.992170408 seconds)
    (466/608) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.365789183 seconds)
    (467/608) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.218549404 seconds)
    (468/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.986849856 seconds)
    (469/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 3.926470953 seconds)
    (470/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.198170226 seconds)
    (471/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.067813841 seconds)
    (472/608) benchmarking "sub2ind"...
    done (took 7.182665 seconds)
    (473/608) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.059567479 seconds)
    (474/608) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.500981268 seconds)
    (475/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.991901791 seconds)
    (476/608) benchmarking ("sumlogical", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.835302147 seconds)
    (477/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.092800388 seconds)
    (478/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.939272419 seconds)
    (479/608) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.859936038 seconds)
    (480/608) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.698241696 seconds)
    (481/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.048232838 seconds)
    (482/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 6.987304161 seconds)
    (483/608) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.261151925 seconds)
    (484/608) benchmarking "6d"...
    done (took 3.667742159 seconds)
    (485/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.190739055 seconds)
    (486/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.382309638 seconds)
    (487/608) benchmarking ("sumrange", "1:100000")...
    done (took 2.844114643 seconds)
    (488/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.988263421 seconds)
    (489/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.028740411 seconds)
    (490/608) benchmarking ("sumrange_view", "Matrix{Int64}")...
    done (took 1.991276485 seconds)
    (491/608) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.997608865 seconds)
    (492/608) benchmarking ("sumvector", "Matrix{Int64}")...
    done (took 2.386650443 seconds)
    (493/608) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.287524565 seconds)
    (494/608) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.988057366 seconds)
    (495/608) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.261637672 seconds)
    (496/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.035882561 seconds)
    (497/608) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.993287342 seconds)
    (498/608) benchmarking ("sumcartesian_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 2.590158063 seconds)
    (499/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.95266548 seconds)
    (500/608) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.987900294 seconds)
    (501/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.73621934 seconds)
    (502/608) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.868019121 seconds)
    (503/608) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.723779523 seconds)
    (504/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.382392218 seconds)
    (505/608) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.99254081 seconds)
    (506/608) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.992246232 seconds)
    (507/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.991412846 seconds)
    (508/608) benchmarking ("sumelt", "Matrix{Float64}")...
    done (took 3.91512371 seconds)
    (509/608) benchmarking ("sumrange", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.988488461 seconds)
    (510/608) benchmarking ("sumelt", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.949925634 seconds)
    (511/608) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.98369688 seconds)
    (512/608) benchmarking ("sumlinear_view", "Matrix{Int64}")...
    done (took 6.988144711 seconds)
    (513/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.370053872 seconds)
    (514/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 4.330228898 seconds)
    (515/608) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.077589415 seconds)
    (516/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.99450158 seconds)
    (517/608) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.990424581 seconds)
    (518/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.9965261 seconds)
    (519/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.201210066 seconds)
    (520/608) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.502726564 seconds)
    (521/608) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.005149991 seconds)
    (522/608) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.689892399 seconds)
    (523/608) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.192528558 seconds)
    (524/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.994409338 seconds)
    (525/608) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.476182063 seconds)
    (526/608) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.431929771 seconds)
    (527/608) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.054103686 seconds)
    (528/608) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 2.029899295 seconds)
    (529/608) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.989112975 seconds)
    (530/608) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.230370236 seconds)
    (531/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.463027066 seconds)
    (532/608) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.985069424 seconds)
    (533/608) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.971477964 seconds)
    (534/608) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.216745857 seconds)
    (535/608) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.991391658 seconds)
    (536/608) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.261989373 seconds)
    (537/608) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.26408874 seconds)
    (538/608) benchmarking ("sumlinear", "1:100000")...
    done (took 1.991173889 seconds)
    (539/608) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 2.202146023 seconds)
    (540/608) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.461189233 seconds)
    (541/608) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.27633042 seconds)
    (542/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.243257255 seconds)
    (543/608) benchmarking ("sumvector", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.304052519 seconds)
    (544/608) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.055961237 seconds)
    (545/608) benchmarking ("sumcolon", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 4.970663261 seconds)
    (546/608) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.882913859 seconds)
    (547/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.998886614 seconds)
    (548/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.910633107 seconds)
    (549/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.259215971 seconds)
    (550/608) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.046224715 seconds)
    (551/608) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.990324136 seconds)
    (552/608) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.999387558 seconds)
    (553/608) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.470934919 seconds)
    (554/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.677078586 seconds)
    (555/608) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.4603552 seconds)
    (556/608) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.145481884 seconds)
    (557/608) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.335929558 seconds)
    (558/608) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.830639832 seconds)
    (559/608) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.746586111 seconds)
    (560/608) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.993494687 seconds)
    (561/608) benchmarking ("sumeach", "Matrix{Float64}")...
    done (took 3.917302029 seconds)
    (562/608) benchmarking ("mapr_access", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 6.991649851 seconds)
    (563/608) benchmarking ("sumlinear", "Base.ReinterpretArray{Int32, 3, Float64, Array{Float64, 3}, false}")...
    done (took 2.01698387 seconds)
    (564/608) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.994214657 seconds)
    (565/608) benchmarking ("sumelt", "Base.ReinterpretArray{Float32, 2, Int32, Matrix{Int32}, false}")...
    done (took 3.917224619 seconds)
    (566/608) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.739653786 seconds)
    (567/608) benchmarking "2d"...
    done (took 2.712250827 seconds)
    (568/608) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.202587615 seconds)
    (569/608) benchmarking "7d"...
    done (took 2.300839538 seconds)
    (570/608) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.917743374 seconds)
    (571/608) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.19496491 seconds)
    (572/608) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.559971049 seconds)
    (573/608) benchmarking ("sumlinear", "Matrix{Float64}")...
    done (took 3.918139561 seconds)
    (574/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 2.955064449 seconds)
    (575/608) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.88275865 seconds)
    (576/608) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.258751163 seconds)
    (577/608) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.918230071 seconds)
    (578/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.995181682 seconds)
    (579/608) benchmarking ("sumeach", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 3.919044188 seconds)
    (580/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float64, Matrix{Float64}, false}")...
    done (took 4.29450481 seconds)
    (581/608) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.593899441 seconds)
    (582/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.259963554 seconds)
    (583/608) benchmarking ("sumeach_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Float32}, 2, Float32, Matrix{Float32}, false}")...
    done (took 6.992920129 seconds)
    (584/608) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.918970763 seconds)
    (585/608) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.9970997 seconds)
    (586/608) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.99430962 seconds)
    (587/608) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.991990407 seconds)
    (588/608) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.076521695 seconds)
    (589/608) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.994063944 seconds)
    (590/608) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.108837224 seconds)
    (591/608) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.261188531 seconds)
    (592/608) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.392669029 seconds)
    (593/608) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 2.097717951 seconds)
    (594/608) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.596110865 seconds)
    (595/608) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.679031561 seconds)
    (596/608) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.933842785 seconds)
    (597/608) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.037316059 seconds)
    (598/608) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.588011677 seconds)
    (599/608) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.56292558 seconds)
    (600/608) benchmarking ("sumlogical_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 4.298029533 seconds)
    (601/608) benchmarking ("sumvector_view", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int64, Matrix{Int64}, false}")...
    done (took 2.122610702 seconds)
    (602/608) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.677845234 seconds)
    (603/608) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.940359616 seconds)
    (604/608) benchmarking ("sumlinear", "Base.ReinterpretArray{BaseBenchmarks.ArrayBenchmarks.PairVals{Int32}, 2, Int32, Matrix{Int32}, false}")...
    done (took 2.915290325 seconds)
    (605/608) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.009975909 seconds)
    (606/608) benchmarking ("mapr_access", "Matrix{Float64}")...
    done (took 3.186144033 seconds)
    (607/608) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.998250028 seconds)
    (608/608) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.996248546 seconds)
  done (took 2133.660826965 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 7.017483662 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 7.048396714 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 7.066335599 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.076828104 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.074537789 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.042067177 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.031049776 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 7.078578022 seconds)
  done (took 58.361643666 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hcat", 500)...
    done (took 6.99339324 seconds)
    (2/17) benchmarking "4467"...
    done (took 3.960280719 seconds)
    (3/17) benchmarking ("vcat_setind", 5)...
    done (took 2.003688111 seconds)
    (4/17) benchmarking ("catnd_setind", 500)...
    done (took 7.003141201 seconds)
    (5/17) benchmarking ("vcat", 500)...
    done (took 6.994047148 seconds)
    (6/17) benchmarking ("vcat", 5)...
    done (took 1.998414548 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.180562526 seconds)
    (8/17) benchmarking ("hvcat_setind", 5)...
    done (took 2.023809867 seconds)
    (9/17) benchmarking ("vcat_setind", 500)...
    done (took 6.995176698 seconds)
    (10/17) benchmarking ("hvcat", 5)...
    done (took 1.999146084 seconds)
    (11/17) benchmarking ("hcat_setind", 500)...
    done (took 6.995124637 seconds)
    (12/17) benchmarking ("hcat", 5)...
    done (took 1.997686942 seconds)
    (13/17) benchmarking ("hvcat", 500)...
    done (took 6.995878457 seconds)
    (14/17) benchmarking ("catnd", 500)...
    done (took 6.995153945 seconds)
    (15/17) benchmarking ("hcat_setind", 5)...
    done (took 1.999908287 seconds)
    (16/17) benchmarking ("catnd", 5)...
    done (took 2.276326146 seconds)
    (17/17) benchmarking ("hvcat_setind", 500)...
    done (took 7.01640933 seconds)
  done (took 78.385395798 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.023842703 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.394208553 seconds)
    (3/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.995602282 seconds)
    (4/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 9.498007543 seconds)
    (5/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.010860872 seconds)
    (6/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.095916382 seconds)
    (7/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.998089794 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.995998735 seconds)
    (9/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.100632882 seconds)
    (10/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.29019532 seconds)
    (11/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.043258629 seconds)
    (12/12) benchmarking ("gramschmidt!", 250)...
    done (took 7.011026333 seconds)
  done (took 92.413216486 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 4)...
    done (took 1.996918734 seconds)
    (2/5) benchmarking ("setindex!", 3)...
    done (took 1.99578106 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.996137457 seconds)
    (4/5) benchmarking ("setindex!", 1)...
    done (took 1.99620314 seconds)
    (5/5) benchmarking ("setindex!", 2)...
    done (took 1.996391944 seconds)
  done (took 11.909708585 seconds)
done (took 2661.491343715 seconds)
(18/20) benchmarking "misc"...
  (1/15) benchmarking "fastmath many args"...
  done (took 2.386515662 seconds)
  (2/15) benchmarking "repeat"...
    (1/2) benchmarking (200, 24, 1)...
    done (took 2.091545217 seconds)
    (2/2) benchmarking (200, 1, 24)...
    done (took 2.067234827 seconds)
  done (took 6.087178815 seconds)
  (3/15) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.141819785 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.188146368 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.302295491 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.332182548 seconds)
  done (took 10.898334867 seconds)
  (4/15) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.278822488 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.373676303 seconds)
  done (took 6.582611362 seconds)
  (5/15) benchmarking "perf highdim generator"...
  done (took 2.366763126 seconds)
  (6/15) benchmarking "18129"...
  done (took 7.017874863 seconds)
  (7/15) benchmarking "20517"...
  done (took 2.401403069 seconds)
  (8/15) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.998881909 seconds)
    (2/3) benchmarking "Float64"...
    done (took 7.001383733 seconds)
    (3/3) benchmarking "Float16"...
    done (took 7.000972602 seconds)
  done (took 22.936485496 seconds)
  (9/15) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.995354541 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.997566019 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.997409001 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.997909588 seconds)
  done (took 9.918470491 seconds)
  (10/15) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.99610012 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.778763566 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.994810957 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.005696269 seconds)
  done (took 21.705531552 seconds)
  (11/15) benchmarking "foldl"...
    (1/3) benchmarking "foldl(+, filter(...))"...
    done (took 2.139966159 seconds)
    (2/3) benchmarking "foldl(+, filter(...); init = 0.0)"...
    done (took 5.616930386 seconds)
    (3/3) benchmarking "foldl(+, flatten(filter(...)))"...
    done (took 2.762132671 seconds)
  done (took 12.449311 seconds)
  (12/15) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.619278096 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.446904575 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.60567063 seconds)
  done (took 9.602697522 seconds)
  (13/15) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.831099584 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.007732354 seconds)
  done (took 7.769251924 seconds)
  (14/15) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.143537944 seconds)
  done (took 4.073496395 seconds)
  (15/15) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.827022159 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.310069499 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.477048825 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.515833237 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.597751548 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.214416242 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.309766088 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.253976086 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.400957296 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.390986021 seconds)
  done (took 26.22859828 seconds)
done (took 154.353798252 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.410786038 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.345412839 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.066759023 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.308806442 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.074271173 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.066131836 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.259520464 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.286329186 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.022355827 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.01060829 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.310711305 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.072743889 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.208318493 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.340658457 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.209825963 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.340046145 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.069911667 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.420261156 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.813749885 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 3.927443766 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.234312109 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.995892007 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.154198875 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.009486392 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.071857878 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.019720686 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.497496591 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.341687003 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.959062299 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.518302927 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.025856697 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.120739042 seconds)
  done (took 171.445310466 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.000056231 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.00028267 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.004653651 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.00043552 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.27003311 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.004666914 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.999273606 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.000445342 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.162807197 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.163882701 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.000289713 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.262818061 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.00056692 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.001360017 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.002569986 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.001156583 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.276795752 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.001081207 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.001266804 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.001657974 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.00564819 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.150016063 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.0015882 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.142471185 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.2722988 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.00223085 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.001906401 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.001442667 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.001050049 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.00213018 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.007174212 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.002295263 seconds)
  done (took 211.689301038 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.002575734 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.002935625 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.001178772 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.002772045 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.003234974 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.003097611 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.001777666 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.002009486 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.717012567 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.714013988 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.003323512 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.002931404 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.00583983 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.002592553 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.006816854 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.002495136 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.005845204 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.00638943 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.007746805 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.010702369 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.005476565 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.570361903 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.003690522 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.589225225 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.004046601 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.009542205 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.003541978 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.006525895 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.008640102 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.009613095 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.005295458 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.003865039 seconds)
  done (took 224.664222486 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.233807964 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 2.004330381 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.004949969 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.925573311 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.004327381 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 2.003758973 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.910567336 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.237133378 seconds)
  done (took 20.263596755 seconds)
done (took 630.001067841 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.363741771 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.183391353 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.14158001 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.032155906 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.319797773 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.084302938 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.025076652 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.1024285 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.668048177 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.107559117 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.442998851 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.035984927 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.814559888 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.055922869 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.142210482 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.093151803 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.396201541 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.682447758 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.162752484 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.692148997 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.230461053 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.037183273 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.112607567 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.693045241 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.455828976 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.005585489 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.027760137 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.402850606 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.031997135 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.268139266 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.677667472 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.273260383 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.044477436 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.02887127 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.08634388 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.069856815 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.207620809 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.039150237 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.138217646 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.768011381 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.671814557 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.550264955 seconds)
  done (took 106.303280968 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 2.015019042 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 2.013237804 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 2.013384608 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 2.013779897 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 2.021428747 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 2.014206904 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 2.01404882 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 2.012923189 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 2.013814253 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 2.013572503 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 2.013756238 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 2.02156225 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 2.01407175 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.021363492 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 2.013916213 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 2.014554473 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 2.013987508 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.021914026 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 2.014563279 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 2.014506953 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 2.01390143 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 2.01356245 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 2.010975203 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 2.01490893 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 2.014211444 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 2.014553641 seconds)
  done (took 54.344017252 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 2.010375217 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.189318278 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.295367788 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.028558694 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 2.011672441 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.014135434 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.040473237 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.018879825 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.014029926 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.014008527 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.123625768 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.016347103 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.024146571 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.294604462 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.043065024 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 2.010861888 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 2.010884515 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 2.01219249 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.195974987 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.027725376 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.041847199 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.018667032 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.041676169 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.0276972 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 2.014979698 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.012662859 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.01494976 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.471869875 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.024160828 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.125967178 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.109804516 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.052530633 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.361788702 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.307918587 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.091432658 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.021286809 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 2.012165428 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.171045299 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.025828114 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 2.01271728 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.041927576 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.020716165 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.296543897 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.535484174 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.029123519 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 2.011528439 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.4679507 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.181003554 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.062040327 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.027466906 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.302367337 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.045921493 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 2.012934776 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 2.012948335 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.049804802 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.025700578 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 2.014366414 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.292706344 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.030315935 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.042542074 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.021661768 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.014352604 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.202726004 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.023937335 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.191473088 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.024849017 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.021000352 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 2.013460625 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.301758925 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.045669535 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.530171621 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.030402823 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 2.01336171 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.128204203 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.196802597 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.493378421 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.028931792 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.20421492 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.380263741 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.052704419 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.028565319 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.456128691 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.056539244 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.026447266 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 2.014812197 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.014658944 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.014101684 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.054967516 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.041580284 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.45089908 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.534150356 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.310828435 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.056076895 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.028503387 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 2.015915412 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.291953719 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.030486749 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.014453515 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.292067416 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.559566643 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.031069323 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.02267582 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.512643423 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.033187192 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.044596335 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.032564218 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.309036299 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.046607906 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.055487176 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.014715795 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.021571157 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.018770326 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.044605372 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.030460633 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.01589897 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.506907734 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.189157309 seconds)
  done (took 249.94834088 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 7.019328969 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.016092763 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 7.016325455 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 7.015936917 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 7.015030614 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.017249397 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 7.015352054 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 7.015182787 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.017326146 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 7.015009837 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 7.015278599 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 7.018096648 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 7.017805479 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.021549783 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.065313159 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.018020541 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.490518546 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.017196021 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.016377841 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.01847831 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.552661774 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.024091146 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.015673326 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.019106571 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.016984221 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.017971138 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.021480077 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.06460055 seconds)
  done (took 171.547890658 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.018109929 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.065079222 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.031994859 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.065453782 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.031120506 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.01728628 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.039063505 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.034359267 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.023978743 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.017404723 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.018350878 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.046017302 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.026939172 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.094507123 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.048053048 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.048011118 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.103401666 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.034943279 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.01853301 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.018502088 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.066070087 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.032615505 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.057059145 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.076339839 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.033411627 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.066373282 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.032918673 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.031376657 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.019331276 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.11081152 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.036822796 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.046678506 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.064119901 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.03928332 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.113329304 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.116923153 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.101219209 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.052882085 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.028396837 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.019416017 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.019877312 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.019957452 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.222330919 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.182513815 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.170237096 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.260927618 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.193844567 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.16898086 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.189669642 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.168521282 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.181292526 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.191045975 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.203499424 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.271958266 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.215991161 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.202123793 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.191990908 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.189657809 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.168841922 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.244716056 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.178302938 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.260973025 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.188810889 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.171219928 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.178345533 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.173674845 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.217993115 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.205729223 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.252429465 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.181438145 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.245016148 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.224976464 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.185071453 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.174157384 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.170452099 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.219013859 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.260793538 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.226126239 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.237600703 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.20889106 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.179196917 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.169573664 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.176619848 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.198688888 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.179716299 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.261880769 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.263986614 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.180118672 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.171014476 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.172100658 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.172014317 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.194696563 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.230126469 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.213110385 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.256353566 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.206801897 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.210191252 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.179468276 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.183772172 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.176266481 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.202087196 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.181167692 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.183938275 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.512537106 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.209618562 seconds)
  done (took 226.982739344 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.552922804 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.219521424 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.242960607 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.442635516 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.562945623 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.243284545 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.213341498 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.230274633 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.231389062 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.338605729 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.284148049 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.262942607 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.210569961 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.195140973 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.218382572 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.229560987 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.249244572 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.537118813 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.318770443 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.917092675 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.219420066 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.503987895 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.508226566 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.590420409 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.265475431 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.658772559 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.849830348 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.309634213 seconds)
  done (took 70.708899809 seconds)
done (took 881.771955606 seconds)
SAVING RESULT...
DONE!
