Julia Version 1.4.0-DEV.649
Commit 3c034d085a (2019-12-20 23:49 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed Parsers ──────── v0.3.10
 Installed BenchmarkTools ─ v0.4.3
 Installed LLLplus ──────── v1.2.3
 Installed JSON ─────────── v0.21.0
  Updating `~/.julia/environments/v1.4/Project.toml`
  [142c1900] + LLLplus v1.2.3
  Updating `~/.julia/environments/v1.4/Manifest.toml`
  [6e4b80f9] + BenchmarkTools v0.4.3
  [682c06a0] + JSON v0.21.0
  [142c1900] + LLLplus v1.2.3
  [69de0a69] + Parsers v0.3.10
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [de0858da] + Printf 
  [9a3f8284] + Random 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [4ec0a83e] + Unicode 
   Testing LLLplus
Path `/home/pkgeval/.julia/packages/LLLplus/AhAPL` exists and looks like the correct package. Using existing path.
  Updating `/tmp/jl_pJr38c/Project.toml`
  [142c1900] + LLLplus v1.2.3 [`~/.julia/packages/LLLplus/AhAPL`]
  Updating `/tmp/jl_pJr38c/Manifest.toml`
  [142c1900] ~ LLLplus v1.2.3 ⇒ v1.2.3 [`~/.julia/packages/LLLplus/AhAPL`]
Running sandbox
Status `/tmp/jl_pJr38c/Project.toml`
  [6e4b80f9] BenchmarkTools v0.4.3
  [142c1900] LLLplus v1.2.3 [`~/.julia/packages/LLLplus/AhAPL`]
  [8bb1440f] DelimitedFiles 
  [37e2e46d] LinearAlgebra 
  [de0858da] Printf 
  [9a3f8284] Random 
  [8dfed614] Test 
tests with small matrices...
...done

In all the following tests, the first time includes the JIT compilation; 
for the second execution the compilation is already done and the time
should be faster.

Testing LLL on 1000x1000 real matrix...
  5.916680 seconds (4.08 M allocations: 535.749 MiB, 10.89% gc time)
  2.122931 seconds (140.08 k allocations: 351.881 MiB, 6.00% gc time)

Testing LLL on 10x10 complex matrix...
  8.156887 seconds (11.40 M allocations: 525.414 MiB, 3.92% gc time)
  0.010443 seconds (1.39 k allocations: 142.156 KiB)
Testing Seysen on same 10x10 complex matrix...
  2.707429 seconds (2.66 M allocations: 131.088 MiB, 4.60% gc time)
  0.009065 seconds (466 allocations: 194.797 KiB)
Testing VBLAST on same 10x10 complex matrix...
  2.642587 seconds (2.24 M allocations: 103.592 MiB, 2.02% gc time)
  0.013463 seconds (230 allocations: 122.219 KiB)
Testing Brun on real part of same 10x10 matrix...
  1.737306 seconds (1.80 M allocations: 89.411 MiB, 4.70% gc time)
  0.000130 seconds (28 allocations: 12.297 KiB)

Testing sphere decoder on 100000 samples of 3x3 BPSK system...
  2.593843 seconds (4.32 M allocations: 322.420 MiB, 5.83% gc time)
  0.589256 seconds (2.00 M allocations: 209.814 MiB, 8.65% gc time)
Error Rate is 0.0. It should be zero or very small.

Testing now with 200x200 matrix from latticechallenge.org.
The min norm of the input should be 30, min norm of the reduced bases should be smaller.
min norm of input is 30.0
  1.352897 seconds (857.22 k allocations: 361.541 MiB, 10.84% gc time)
min norm of lll-reduced basis is 29.30870177950569
  6.260780 seconds (5.14 M allocations: 1.251 GiB, 5.25% gc time)
min norm of seysen-reduced basis is 30.0
   Testing LLLplus tests passed 
