Running tests with Julia v1.3.0
   Cloning default registries into `~/.julia`
   Cloning registry from "https://github.com/JuliaRegistries/General.git"
[?25l    Fetching: [>                                        ]  0.0 %    Fetching: [=============>                           ]  30.8 %    Fetching: [==============================>          ]  72.9 %[2K[?25h     Added registry `General` to `~/.julia/registries/General`
 Resolving package versions...
 Installed Clp â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.7.0
 Installed Compat â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v2.2.0
 Installed OrderedCollections â”€ v1.1.0
 Installed BenchmarkTools â”€â”€â”€â”€â”€ v0.4.3
 Installed BinaryProvider â”€â”€â”€â”€â”€ v0.5.8
 Installed MathProgBase â”€â”€â”€â”€â”€â”€â”€ v0.7.7
 Installed JSON â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.21.0
 Installed MathOptInterface â”€â”€â”€ v0.9.7
 Installed Parsers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.10
  Updating `~/.julia/environments/v1.3/Project.toml`
  [e2554f3b] + Clp v0.7.0
  Updating `~/.julia/environments/v1.3/Manifest.toml`
  [6e4b80f9] + BenchmarkTools v0.4.3
  [b99e7846] + BinaryProvider v0.5.8
  [e2554f3b] + Clp v0.7.0
  [34da2185] + Compat v2.2.0
  [682c06a0] + JSON v0.21.0
  [b8f27783] + MathOptInterface v0.9.7
  [fdba3010] + MathProgBase v0.7.7
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
  Building Clp â†’ `~/.julia/packages/Clp/4DejL/deps/build.log`
   Testing Clp
 Resolving package versions...
    Status `/tmp/jl_4n4JOD/Manifest.toml`
  [6e4b80f9] BenchmarkTools v0.4.3
  [b99e7846] BinaryProvider v0.5.8
  [e2554f3b] Clp v0.7.0
  [34da2185] Compat v2.2.0
  [682c06a0] JSON v0.21.0
  [b8f27783] MathOptInterface v0.9.7
  [fdba3010] MathProgBase v0.7.7
  [bac558e1] OrderedCollections v1.1.0
  [69de0a69] Parsers v0.3.10
  [2a0f44e3] Base64  [`@stdlib/Base64`]
  [ade2ca70] Dates  [`@stdlib/Dates`]
  [8bb1440f] DelimitedFiles  [`@stdlib/DelimitedFiles`]
  [8ba89e20] Distributed  [`@stdlib/Distributed`]
  [b77e0a4c] InteractiveUtils  [`@stdlib/InteractiveUtils`]
  [76f85450] LibGit2  [`@stdlib/LibGit2`]
  [8f399da3] Libdl  [`@stdlib/Libdl`]
  [37e2e46d] LinearAlgebra  [`@stdlib/LinearAlgebra`]
  [56ddb016] Logging  [`@stdlib/Logging`]
  [d6f4376e] Markdown  [`@stdlib/Markdown`]
  [a63ad114] Mmap  [`@stdlib/Mmap`]
  [44cfe95a] Pkg  [`@stdlib/Pkg`]
  [de0858da] Printf  [`@stdlib/Printf`]
  [3fa0cd96] REPL  [`@stdlib/REPL`]
  [9a3f8284] Random  [`@stdlib/Random`]
  [ea8e919c] SHA  [`@stdlib/SHA`]
  [9e88b42a] Serialization  [`@stdlib/Serialization`]
  [1a1011a3] SharedArrays  [`@stdlib/SharedArrays`]
  [6462fe0b] Sockets  [`@stdlib/Sockets`]
  [2f01184e] SparseArrays  [`@stdlib/SparseArrays`]
  [10745b16] Statistics  [`@stdlib/Statistics`]
  [8dfed614] Test  [`@stdlib/Test`]
  [cf7118a7] UUIDs  [`@stdlib/UUIDs`]
  [4ec0a83e] Unicode  [`@stdlib/Unicode`]
â”Œ Warning: Element type Int64 does not have an infinite value. Note that this may artifically introduce ranged (two-sided) constraints. To avoid this, consider casting the problem data to Float64.
â”” @ MathProgBase.HighLevelInterface ~/.julia/packages/MathProgBase/rVlFR/src/HighLevelInterface/HighLevelInterface.jl:9
â”Œ Warning: Element type Int64 does not have an infinite value. Note that this may artifically introduce ranged (two-sided) constraints. To avoid this, consider casting the problem data to Float64.
â”” @ MathProgBase.HighLevelInterface ~/.julia/packages/MathProgBase/rVlFR/src/HighLevelInterface/HighLevelInterface.jl:9
â”Œ Warning: Element type Int64 does not have an infinite value. Note that this may artifically introduce ranged (two-sided) constraints. To avoid this, consider casting the problem data to Float64.
â”” @ MathProgBase.HighLevelInterface ~/.julia/packages/MathProgBase/rVlFR/src/HighLevelInterface/HighLevelInterface.jl:9
â”Œ Warning: Element type Int64 does not have an infinite value. Note that this may artifically introduce ranged (two-sided) constraints. To avoid this, consider casting the problem data to Float64.
â”” @ MathProgBase.HighLevelInterface ~/.julia/packages/MathProgBase/rVlFR/src/HighLevelInterface/HighLevelInterface.jl:9
â”Œ Warning: Element type Int64 does not have an infinite value. Note that this may artifically introduce ranged (two-sided) constraints. To avoid this, consider casting the problem data to Float64.
â”” @ MathProgBase.HighLevelInterface ~/.julia/packages/MathProgBase/rVlFR/src/HighLevelInterface/HighLevelInterface.jl:9
â”Œ Warning: Element type Int64 does not have an infinite value. Note that this may artifically introduce ranged (two-sided) constraints. To avoid this, consider casting the problem data to Float64.
â”” @ MathProgBase.HighLevelInterface ~/.julia/packages/MathProgBase/rVlFR/src/HighLevelInterface/HighLevelInterface.jl:9
Test Summary: | Pass  Total
MathProgBase  |  126    126
Test Summary:    | Pass  Total
MathOptInterface | 1000   1000
   Testing Clp tests passed 
