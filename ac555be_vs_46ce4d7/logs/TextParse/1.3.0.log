Julia Version 1.3.0
Commit 46ce4d7933 (2019-11-26 06:09 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-6.0.1 (ORCJIT, skylake)

   Cloning default registries into `~/.julia`
   Cloning registry from "https://github.com/JuliaRegistries/General.git"
[?25l    Fetching: [>                                        ]  0.0 %    Fetching: [==============>                          ]  32.7 %    Fetching: [================================>        ]  77.6 %[2K[?25h     Added registry `General` to `~/.julia/registries/General`
 Resolving package versions...
 Installed RecipesBase â”€â”€â”€â”€â”€â”€â”€â”€ v0.7.0
 Installed Requires â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.2
 Installed GenericSVD â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.2.2
 Installed Quadmath â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.2
 Installed CodecZlib â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.6.0
 Installed Polynomials â”€â”€â”€â”€â”€â”€â”€â”€ v0.6.0
 Installed TextParse â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.9.1
 Installed DoubleFloats â”€â”€â”€â”€â”€â”€â”€ v1.0.1
 Installed PooledArrays â”€â”€â”€â”€â”€â”€â”€ v0.5.2
 Installed OrderedCollections â”€ v1.1.0
 Installed DataStructures â”€â”€â”€â”€â”€ v0.17.6
 Installed Nullables â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.0
 Installed WeakRefStrings â”€â”€â”€â”€â”€ v0.6.1
 Installed OpenSpecFun_jll â”€â”€â”€â”€ v0.5.3+1
 Installed TranscodingStreams â”€ v0.9.5
 Installed SpecialFunctions â”€â”€â”€ v0.9.0
 Installed BinaryProvider â”€â”€â”€â”€â”€ v0.5.8
 Installed GenericSchur â”€â”€â”€â”€â”€â”€â”€ v0.3.0
  Updating `~/.julia/environments/v1.3/Project.toml`
  [e0df1984] + TextParse v0.9.1
  Updating `~/.julia/environments/v1.3/Manifest.toml`
  [b99e7846] + BinaryProvider v0.5.8
  [944b1d66] + CodecZlib v0.6.0
  [864edb3b] + DataStructures v0.17.6
  [497a8b3b] + DoubleFloats v1.0.1
  [01680d73] + GenericSVD v0.2.2
  [c145ed77] + GenericSchur v0.3.0
  [4d1e1d77] + Nullables v1.0.0
  [efe28fd5] + OpenSpecFun_jll v0.5.3+1
  [bac558e1] + OrderedCollections v1.1.0
  [f27b6e38] + Polynomials v0.6.0
  [2dfb63ee] + PooledArrays v0.5.2
  [be4d8f0f] + Quadmath v0.5.2
  [3cdcf5f2] + RecipesBase v0.7.0
  [ae029012] + Requires v0.5.2
  [276daf66] + SpecialFunctions v0.9.0
  [e0df1984] + TextParse v0.9.1
  [3bb67fe8] + TranscodingStreams v0.9.5
  [ea10d353] + WeakRefStrings v0.6.1
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
  Building CodecZlib â†’ `~/.julia/packages/CodecZlib/5t9zO/deps/build.log`
   Testing TextParse
 Resolving package versions...
    Status `/tmp/jl_Q0us2x/Manifest.toml`
  [b99e7846] BinaryProvider v0.5.8
  [944b1d66] CodecZlib v0.6.0
  [864edb3b] DataStructures v0.17.6
  [497a8b3b] DoubleFloats v1.0.1
  [01680d73] GenericSVD v0.2.2
  [c145ed77] GenericSchur v0.3.0
  [4d1e1d77] Nullables v1.0.0
  [efe28fd5] OpenSpecFun_jll v0.5.3+1
  [bac558e1] OrderedCollections v1.1.0
  [f27b6e38] Polynomials v0.6.0
  [2dfb63ee] PooledArrays v0.5.2
  [be4d8f0f] Quadmath v0.5.2
  [3cdcf5f2] RecipesBase v0.7.0
  [ae029012] Requires v0.5.2
  [276daf66] SpecialFunctions v0.9.0
  [e0df1984] TextParse v0.9.1
  [3bb67fe8] TranscodingStreams v0.9.5
  [ea10d353] WeakRefStrings v0.6.1
  [2a0f44e3] Base64  [`@stdlib/Base64`]
  [ade2ca70] Dates  [`@stdlib/Dates`]
  [8ba89e20] Distributed  [`@stdlib/Distributed`]
  [b77e0a4c] InteractiveUtils  [`@stdlib/InteractiveUtils`]
  [76f85450] LibGit2  [`@stdlib/LibGit2`]
  [8f399da3] Libdl  [`@stdlib/Libdl`]
  [37e2e46d] LinearAlgebra  [`@stdlib/LinearAlgebra`]
  [56ddb016] Logging  [`@stdlib/Logging`]
  [d6f4376e] Markdown  [`@stdlib/Markdown`]
  [a63ad114] Mmap  [`@stdlib/Mmap`]
  [44cfe95a] Pkg  [`@stdlib/Pkg`]
  [de0858da] Printf  [`@stdlib/Printf`]
  [3fa0cd96] REPL  [`@stdlib/REPL`]
  [9a3f8284] Random  [`@stdlib/Random`]
  [ea8e919c] SHA  [`@stdlib/SHA`]
  [9e88b42a] Serialization  [`@stdlib/Serialization`]
  [6462fe0b] Sockets  [`@stdlib/Sockets`]
  [8dfed614] Test  [`@stdlib/Test`]
  [cf7118a7] UUIDs  [`@stdlib/UUIDs`]
  [4ec0a83e] Unicode  [`@stdlib/Unicode`]
MethodError: Cannot `convert` an object of type Int64 to an object of type StrRange
Closest candidates are:
  convert(::Type{T}, !Matched::T) where T at essentials.jl:168
  StrRange(::Int64, !Matched::Int64, !Matched::Int64) at /home/pkgeval/.julia/packages/TextParse/tFXtC/src/util.jl:334
  StrRange(::Any, !Matched::Any, !Matched::Any) at /home/pkgeval/.julia/packages/TextParse/tFXtC/src/util.jl:334
Test Summary: | Pass  Broken  Total
TextParse     |  277       2    279
   Testing TextParse tests passed 
