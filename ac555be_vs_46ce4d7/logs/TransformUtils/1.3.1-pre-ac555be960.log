Julia Version 1.3.1-pre.12
Commit ac555be960 (2019-12-04 10:45 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-6.0.1 (ORCJIT, skylake)

   Cloning default registries into `~/.julia`
   Cloning registry from "https://github.com/JuliaRegistries/General.git"
[?25l    Fetching: [>                                        ]  0.0 %    Fetching: [=============>                           ]  30.5 %    Fetching: [=========================>               ]  60.2 %    Fetching: [=======================================> ]  96.6 %[2K[?25h     Added registry `General` to `~/.julia/registries/General`
 Resolving package versions...
 Installed TransformUtils â”€ v0.2.2
  Updating `~/.julia/environments/v1.3/Project.toml`
  [9b8138ad] + TransformUtils v0.2.2
  Updating `~/.julia/environments/v1.3/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.2
  [2a0f44e3] + Base64 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [de0858da] + Printf 
  [9abbd945] + Profile 
  [9a3f8284] + Random 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [8dfed614] + Test 
  [4ec0a83e] + Unicode 
   Testing TransformUtils
    Status `/tmp/jl_ZNv4xM/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.2
  [2a0f44e3] Base64  [`@stdlib/Base64`]
  [8ba89e20] Distributed  [`@stdlib/Distributed`]
  [b77e0a4c] InteractiveUtils  [`@stdlib/InteractiveUtils`]
  [8f399da3] Libdl  [`@stdlib/Libdl`]
  [37e2e46d] LinearAlgebra  [`@stdlib/LinearAlgebra`]
  [56ddb016] Logging  [`@stdlib/Logging`]
  [d6f4376e] Markdown  [`@stdlib/Markdown`]
  [de0858da] Printf  [`@stdlib/Printf`]
  [9abbd945] Profile  [`@stdlib/Profile`]
  [9a3f8284] Random  [`@stdlib/Random`]
  [9e88b42a] Serialization  [`@stdlib/Serialization`]
  [6462fe0b] Sockets  [`@stdlib/Sockets`]
  [8dfed614] Test  [`@stdlib/Test`]
  [4ec0a83e] Unicode  [`@stdlib/Unicode`]
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
â”Œ Warning: Need better coverage on convert function tests
â”” @ Main ~/.julia/packages/TransformUtils/x61q0/test/runtests.jl:67
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.08370057020470234 -0.029097506931102066; -0.08370057020470234 0.0 -0.015388290744579534; 0.029097506931102066 0.015388290744579534 0.0])
dAA = so3([0.0 0.08788097912365855 -0.1717940792644238; -0.08788097912365855 0.0 -0.1890318850017535; 0.1717940792644238 0.1890318850017535 0.0])
dAA = so3([0.0 0.05374567821219104 -0.10949485992961472; -0.05374567821219104 0.0 0.0006292040818402463; 0.10949485992961472 -0.0006292040818402463 0.0])
dAA = Quaternion(0.9951291496871476, [0.094731560751947, -0.027257158819169222, 0.0009767975950253276])
dAA = SO3([0.9935837164493969 0.10612466034669518 0.03910185255078405; -0.10538729411943079 0.9942206455406443 -0.020465244169796476; -0.04104773617130744 0.016213094924886637 0.9990256347602736])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.887992338090242 0.10569531096650318 -0.44754676709000984; -0.3010639218996246 0.8692828761144044 -0.3920558585516685; 0.3476062750058493 0.4828827834308895 0.8037375784686159]), [0.15388290744579533, -0.29097506931102063, -0.8370057020470233])
xj = SE3(SO3([0.9908864217124961 -0.023929834732836122 -0.13255739238331668; -0.03940670805269989 0.8895399586868364 -0.45515466960130213; 0.12880687336572808 0.45623023234884424 0.8804900706224147]), [-0.0062920408184024635, -1.0949485992961472, -0.5374567821219104])
Dx = SE3(SO3([0.9365375659196631 -0.1304694069313784 0.32538457473618354; 0.13267509349700915 0.9910383068644488 0.015504641008627307; -0.32449145934343565 0.028649750124929818 0.945454644407095]), [0.20393838146539295, -0.5711631472039939, 0.6276470363490853])
Test Summary:         | Pass  Total
SE3 âŠ• and âŠ– mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
   Testing TransformUtils tests passed 
