Julia Version 1.3.0
Commit 46ce4d7933 (2019-11-26 06:09 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-6.0.1 (ORCJIT, skylake)

   Cloning default registries into `~/.julia`
   Cloning registry from "https://github.com/JuliaRegistries/General.git"
[?25l    Fetching: [>                                        ]  0.0 %    Fetching: [============>                            ]  29.4 %    Fetching: [==============================>          ]  73.3 %[2K[?25h     Added registry `General` to `~/.julia/registries/General`
 Resolving package versions...
 Installed TransformUtils â”€ v0.2.2
  Updating `~/.julia/environments/v1.3/Project.toml`
  [9b8138ad] + TransformUtils v0.2.2
  Updating `~/.julia/environments/v1.3/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.2
  [2a0f44e3] + Base64 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [de0858da] + Printf 
  [9abbd945] + Profile 
  [9a3f8284] + Random 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [8dfed614] + Test 
  [4ec0a83e] + Unicode 
   Testing TransformUtils
    Status `/tmp/jl_6sWYIp/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.2
  [2a0f44e3] Base64  [`@stdlib/Base64`]
  [8ba89e20] Distributed  [`@stdlib/Distributed`]
  [b77e0a4c] InteractiveUtils  [`@stdlib/InteractiveUtils`]
  [8f399da3] Libdl  [`@stdlib/Libdl`]
  [37e2e46d] LinearAlgebra  [`@stdlib/LinearAlgebra`]
  [56ddb016] Logging  [`@stdlib/Logging`]
  [d6f4376e] Markdown  [`@stdlib/Markdown`]
  [de0858da] Printf  [`@stdlib/Printf`]
  [9abbd945] Profile  [`@stdlib/Profile`]
  [9a3f8284] Random  [`@stdlib/Random`]
  [9e88b42a] Serialization  [`@stdlib/Serialization`]
  [6462fe0b] Sockets  [`@stdlib/Sockets`]
  [8dfed614] Test  [`@stdlib/Test`]
  [4ec0a83e] Unicode  [`@stdlib/Unicode`]
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
â”Œ Warning: Need better coverage on convert function tests
â”” @ Main ~/.julia/packages/TransformUtils/x61q0/test/runtests.jl:67
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.21794353665336771 -0.042516695719879816; 0.21794353665336771 0.0 -0.15923509495057517; 0.042516695719879816 0.15923509495057517 0.0])
dAA = so3([0.0 0.04385135822807829 -0.05883498066621645; -0.04385135822807829 0.0 -0.01341988723653844; 0.05883498066621645 0.01341988723653844 0.0])
dAA = so3([0.0 -0.1708485981884774 0.03953414763313279; 0.1708485981884774 0.0 -0.0649773444452264; -0.03953414763313279 0.0649773444452264 0.0])
dAA = Quaternion(0.9922663361802181, [0.0831244848479112, 0.0014875389121713199, -0.0921717165416844])
dAA = SO3([0.9833133729148975 0.168355704293796 -0.06892871301908733; -0.16869547035490526 0.9856678049665737 0.0009036227718803979; 0.06809294330887054 0.010739417308052798 0.9976211785980782])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9832221588384957 0.10653381583260482 -0.14807002550520673; -0.11145427295170882 0.9934470406652692 -0.02531644592404159; 0.14440267106177063 0.041394727654177996 0.988652793003015]), [1.5923509495057515, -0.4251669571987981, 2.179435366533677])
xj = SE3(SO3([0.8968305865501984 0.4396315715601135 -0.049183130396629006; -0.4213275983487302 0.8149819407841958 -0.39785360506763856; -0.13482564258225585 0.3775294922032055 0.91612964618501]), [0.649773444452264, 0.3953414763313279, 1.7084859818847737])
Dx = SE3(SO3([0.9092732836522305 0.39593855028275704 0.12827610859501143; -0.32860494194505735 0.8721047566576525 -0.3625632159284528; -0.25542295857180886 0.2875168826609754 0.9230889201043088]), [-1.0862186093793378, 0.695220475283631, -0.34681030666997104])
Test Summary:         | Pass  Total
SE3 âŠ• and âŠ– mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
   Testing TransformUtils tests passed 
