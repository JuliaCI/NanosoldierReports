Julia Version 1.3.1-pre.12
Commit ac555be960 (2019-12-04 10:45 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-6.0.1 (ORCJIT, skylake)

   Cloning default registries into `~/.julia`
   Cloning registry from "https://github.com/JuliaRegistries/General.git"
[?25l    Fetching: [>                                        ]  0.0 %    Fetching: [=============>                           ]  30.3 %    Fetching: [============================>            ]  67.6 %[2K[?25h     Added registry `General` to `~/.julia/registries/General`
 Resolving package versions...
 Installed Rotations â”€â”€â”€â”€ v0.12.0
 Installed StaticArrays â”€ v0.12.1
  Updating `~/.julia/environments/v1.3/Project.toml`
  [6038ab10] + Rotations v0.12.0
  Updating `~/.julia/environments/v1.3/Manifest.toml`
  [6038ab10] + Rotations v0.12.0
  [90137ffa] + StaticArrays v0.12.1
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [9a3f8284] + Random 
  [9e88b42a] + Serialization 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
   Testing Rotations
 Resolving package versions...
 Installed CommonSubexpressions â”€ v0.2.0
 Installed DiffResults â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.0.4
 Installed OpenSpecFun_jll â”€â”€â”€â”€â”€â”€ v0.5.3+1
 Installed BenchmarkTools â”€â”€â”€â”€â”€â”€â”€ v0.4.3
 Installed JSON â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.21.0
 Installed Compat â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v2.2.0
 Installed ForwardDiff â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.10.7
 Installed SpecialFunctions â”€â”€â”€â”€â”€ v0.9.0
 Installed DiffRules â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.1.0
 Installed NaNMath â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.3
 Installed Parsers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.10
    Status `/tmp/jl_fqbuSA/Manifest.toml`
  [6e4b80f9] BenchmarkTools v0.4.3
  [bbf7d656] CommonSubexpressions v0.2.0
  [34da2185] Compat v2.2.0
  [163ba53b] DiffResults v0.0.4
  [b552c78f] DiffRules v0.1.0
  [f6369f11] ForwardDiff v0.10.7
  [682c06a0] JSON v0.21.0
  [77ba4419] NaNMath v0.3.3
  [efe28fd5] OpenSpecFun_jll v0.5.3+1
  [69de0a69] Parsers v0.3.10
  [6038ab10] Rotations v0.12.0
  [276daf66] SpecialFunctions v0.9.0
  [90137ffa] StaticArrays v0.12.1
  [2a0f44e3] Base64  [`@stdlib/Base64`]
  [ade2ca70] Dates  [`@stdlib/Dates`]
  [8bb1440f] DelimitedFiles  [`@stdlib/DelimitedFiles`]
  [8ba89e20] Distributed  [`@stdlib/Distributed`]
  [b77e0a4c] InteractiveUtils  [`@stdlib/InteractiveUtils`]
  [76f85450] LibGit2  [`@stdlib/LibGit2`]
  [8f399da3] Libdl  [`@stdlib/Libdl`]
  [37e2e46d] LinearAlgebra  [`@stdlib/LinearAlgebra`]
  [56ddb016] Logging  [`@stdlib/Logging`]
  [d6f4376e] Markdown  [`@stdlib/Markdown`]
  [a63ad114] Mmap  [`@stdlib/Mmap`]
  [44cfe95a] Pkg  [`@stdlib/Pkg`]
  [de0858da] Printf  [`@stdlib/Printf`]
  [3fa0cd96] REPL  [`@stdlib/REPL`]
  [9a3f8284] Random  [`@stdlib/Random`]
  [ea8e919c] SHA  [`@stdlib/SHA`]
  [9e88b42a] Serialization  [`@stdlib/Serialization`]
  [1a1011a3] SharedArrays  [`@stdlib/SharedArrays`]
  [6462fe0b] Sockets  [`@stdlib/Sockets`]
  [2f01184e] SparseArrays  [`@stdlib/SparseArrays`]
  [10745b16] Statistics  [`@stdlib/Statistics`]
  [8dfed614] Test  [`@stdlib/Test`]
  [cf7118a7] UUIDs  [`@stdlib/UUIDs`]
  [4ec0a83e] Unicode  [`@stdlib/Unicode`]
Skipping Base.active_repl
Skipping Base.active_repl_backend
Skipping Base.active_repl
Skipping Base.active_repl_backend
Test Summary: | Pass  Total
Util          |  201    201
Test Summary: | Pass  Total
2d Rotations  | 3524   3524
Test Summary:   |   Pass   Total
Rotations Tests | 190108  190108
â”Œ Warning: `a::Number - b::StaticArray` is deprecated, use `a .- b` instead.
â”‚   caller = jacobian(::Type{Quat}, ::SPQuat{Float64}) at derivatives.jl:115
â”” @ Rotations ~/.julia/packages/Rotations/4nmAE/src/derivatives.jl:115
Test Summary:     | Pass  Total
Derivative checks |   73     73
Test Summary:            | Pass  Total
Principal Value (SPQuat) | 2000   2000
Test Summary:          | Pass  Total
Principal Value (Quat) | 2000   2000
Test Summary:                | Pass  Total
Principal Value (Angle Axis) | 2000   2000
Test Summary:                      | Pass  Total
Principal Value (Rodrigues Vector) | 2002   2002
Test Summary:          | Pass  Total
Principal Value (RotX) | 2000   2000
Test Summary:          | Pass  Total
Principal Value (RotY) | 2000   2000
Test Summary:          | Pass  Total
Principal Value (RotZ) | 2000   2000
Test Summary:           | Pass  Total
Principal Value (RotXY) | 3000   3000
Test Summary:           | Pass  Total
Principal Value (RotYX) | 3000   3000
Test Summary:           | Pass  Total
Principal Value (RotZX) | 3000   3000
Test Summary:           | Pass  Total
Principal Value (RotXZ) | 3000   3000
Test Summary:           | Pass  Total
Principal Value (RotYZ) | 3000   3000
Test Summary:           | Pass  Total
Principal Value (RotZY) | 3000   3000
Test Summary:            | Pass  Total
Principal Value (RotXYX) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotYXY) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotZXZ) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotXZX) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotYZY) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotZYZ) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotXYZ) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotYXZ) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotZXY) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotXZY) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotYZX) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotZYX) | 4000   4000
(1/3) tuning "Composition"...
  (1/1) tuning "RotMatrix{3} * RotMatrix{3}"...
  done (took 1.663091407 seconds)
done (took 2.343305506 seconds)
(2/3) tuning "Euler conversions"...
  (1/21) tuning "RotZXZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.905258493 seconds)
  (2/21) tuning "RotZYX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.841634263 seconds)
  (3/21) tuning "RotXZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.940112786 seconds)
  (4/21) tuning "RotYZX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.006205393 seconds)
  (5/21) tuning "RotZY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.929051085 seconds)
  (6/21) tuning "RotZYZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.94800699 seconds)
  (7/21) tuning "RotYZY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.935260835 seconds)
  (8/21) tuning "RotZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.929280954 seconds)
  (9/21) tuning "RotYXY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.978771179 seconds)
  (10/21) tuning "RotXZY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.104944616 seconds)
  (11/21) tuning "RotYX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.910667526 seconds)
  (12/21) tuning "RotXYX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.241139867 seconds)
  (13/21) tuning "RotXY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.016540876 seconds)
  (14/21) tuning "RotZX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.971741511 seconds)
  (15/21) tuning "RotXYZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.184752709 seconds)
  (16/21) tuning "RotX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.923660652 seconds)
  (17/21) tuning "RotYZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.994337672 seconds)
  (18/21) tuning "RotZXY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.054902109 seconds)
  (19/21) tuning "RotXZX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.953742127 seconds)
  (20/21) tuning "RotY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.96362805 seconds)
  (21/21) tuning "RotYXZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.968580953 seconds)
done (took 21.311281721 seconds)
(3/3) tuning "Non-Euler conversions"...
  (1/20) tuning "RotMatrix{3,Float64,9} -> SPQuat{Float64}"...
  done (took 0.948410391 seconds)
  (2/20) tuning "AngleAxis{Float64} -> Quat{Float64}"...
  done (took 0.912781217 seconds)
  (3/20) tuning "Quat{Float64} -> RodriguesVec{Float64}"...
  done (took 0.870785632 seconds)
  (4/20) tuning "RodriguesVec{Float64} -> AngleAxis{Float64}"...
  done (took 0.882690974 seconds)
  (5/20) tuning "SPQuat{Float64} -> RodriguesVec{Float64}"...
  done (took 1.080157539 seconds)
  (6/20) tuning "AngleAxis{Float64} -> SPQuat{Float64}"...
  done (took 0.919634099 seconds)
  (7/20) tuning "AngleAxis{Float64} -> RodriguesVec{Float64}"...
  done (took 0.833538075 seconds)
  (8/20) tuning "RodriguesVec{Float64} -> Quat{Float64}"...
  done (took 0.858592558 seconds)
  (9/20) tuning "AngleAxis{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.886264398 seconds)
  (10/20) tuning "Quat{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.023341183 seconds)
  (11/20) tuning "RodriguesVec{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.945736629 seconds)
  (12/20) tuning "SPQuat{Float64} -> AngleAxis{Float64}"...
  done (took 0.935207922 seconds)
  (13/20) tuning "Quat{Float64} -> SPQuat{Float64}"...
  done (took 0.804654093 seconds)
  (14/20) tuning "RodriguesVec{Float64} -> SPQuat{Float64}"...
  done (took 0.982618022 seconds)
  (15/20) tuning "RotMatrix{3,Float64,9} -> Quat{Float64}"...
  done (took 0.890736437 seconds)
  (16/20) tuning "RotMatrix{3,Float64,9} -> RodriguesVec{Float64}"...
  done (took 0.914638304 seconds)
  (17/20) tuning "SPQuat{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.925202971 seconds)
  (18/20) tuning "Quat{Float64} -> AngleAxis{Float64}"...
  done (took 0.874408311 seconds)
  (19/20) tuning "RotMatrix{3,Float64,9} -> AngleAxis{Float64}"...
  done (took 0.8099608 seconds)
  (20/20) tuning "SPQuat{Float64} -> Quat{Float64}"...
  done (took 0.904221921 seconds)
done (took 18.817150293 seconds)
(1/3) benchmarking "Composition"...
  (1/1) benchmarking "RotMatrix{3} * RotMatrix{3}"...
  done (took 1.292109464 seconds)
done (took 1.887392895 seconds)
(2/3) benchmarking "Euler conversions"...
  (1/21) benchmarking "RotZXZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.853689927 seconds)
  (2/21) benchmarking "RotZYX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 2.211678106 seconds)
  (3/21) benchmarking "RotXZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.478864581 seconds)
  (4/21) benchmarking "RotYZX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.818375062 seconds)
  (5/21) benchmarking "RotZY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.891908738 seconds)
  (6/21) benchmarking "RotZYZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.819128843 seconds)
  (7/21) benchmarking "RotYZY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.849911844 seconds)
  (8/21) benchmarking "RotZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.17885298 seconds)
  (9/21) benchmarking "RotYXY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.836062557 seconds)
  (10/21) benchmarking "RotXZY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.844962416 seconds)
  (11/21) benchmarking "RotYX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.527912505 seconds)
  (12/21) benchmarking "RotXYX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.820996705 seconds)
  (13/21) benchmarking "RotXY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.638139658 seconds)
  (14/21) benchmarking "RotZX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.868338201 seconds)
  (15/21) benchmarking "RotXYZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 2.045756715 seconds)
  (16/21) benchmarking "RotX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.205750965 seconds)
  (17/21) benchmarking "RotYZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.554399713 seconds)
  (18/21) benchmarking "RotZXY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 2.080677399 seconds)
  (19/21) benchmarking "RotXZX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.927642376 seconds)
  (20/21) benchmarking "RotY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.441866558 seconds)
  (21/21) benchmarking "RotYXZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.660217178 seconds)
done (took 37.166990664 seconds)
(3/3) benchmarking "Non-Euler conversions"...
  (1/20) benchmarking "RotMatrix{3,Float64,9} -> SPQuat{Float64}"...
  done (took 1.422011581 seconds)
  (2/20) benchmarking "AngleAxis{Float64} -> Quat{Float64}"...
  done (took 1.244666788 seconds)
  (3/20) benchmarking "Quat{Float64} -> RodriguesVec{Float64}"...
  done (took 1.526784505 seconds)
  (4/20) benchmarking "RodriguesVec{Float64} -> AngleAxis{Float64}"...
  done (took 1.016343946 seconds)
  (5/20) benchmarking "SPQuat{Float64} -> RodriguesVec{Float64}"...
  done (took 2.036094477 seconds)
  (6/20) benchmarking "AngleAxis{Float64} -> SPQuat{Float64}"...
  done (took 1.768692159 seconds)
  (7/20) benchmarking "AngleAxis{Float64} -> RodriguesVec{Float64}"...
  done (took 1.094504631 seconds)
  (8/20) benchmarking "RodriguesVec{Float64} -> Quat{Float64}"...
  done (took 1.573504513 seconds)
  (9/20) benchmarking "AngleAxis{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.324788909 seconds)
  (10/20) benchmarking "Quat{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.973034624 seconds)
  (11/20) benchmarking "RodriguesVec{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.914385947 seconds)
  (12/20) benchmarking "SPQuat{Float64} -> AngleAxis{Float64}"...
  done (took 2.23078245 seconds)
  (13/20) benchmarking "Quat{Float64} -> SPQuat{Float64}"...
  done (took 0.89591595 seconds)
  (14/20) benchmarking "RodriguesVec{Float64} -> SPQuat{Float64}"...
  done (took 2.138242599 seconds)
  (15/20) benchmarking "RotMatrix{3,Float64,9} -> Quat{Float64}"...
  done (took 1.188539663 seconds)
  (16/20) benchmarking "RotMatrix{3,Float64,9} -> RodriguesVec{Float64}"...
  done (took 1.909919099 seconds)
  (17/20) benchmarking "SPQuat{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.11113824 seconds)
  (18/20) benchmarking "Quat{Float64} -> AngleAxis{Float64}"...
  done (took 1.500429188 seconds)
  (19/20) benchmarking "RotMatrix{3,Float64,9} -> AngleAxis{Float64}"...
  done (took 2.220867897 seconds)
  (20/20) benchmarking "SPQuat{Float64} -> Quat{Float64}"...
  done (took 0.922775484 seconds)
done (took 30.573582902 seconds)

Group: Composition
RotMatrix{3} * RotMatrix{3} 12.773 ns

Group: Euler conversions
RotZXZ{Float64} -> RotMatrix{3,Float64,9} 49.445 ns
RotZYX{Float64} -> RotMatrix{3,Float64,9} 48.631 ns
RotXZ{Float64} -> RotMatrix{3,Float64,9}  25.169 ns
RotYZX{Float64} -> RotMatrix{3,Float64,9} 50.992 ns
RotZY{Float64} -> RotMatrix{3,Float64,9}  37.488 ns
RotZYZ{Float64} -> RotMatrix{3,Float64,9} 49.416 ns
RotYZY{Float64} -> RotMatrix{3,Float64,9} 56.291 ns
RotZ{Float64} -> RotMatrix{3,Float64,9}   19.962 ns
RotYXY{Float64} -> RotMatrix{3,Float64,9} 50.210 ns
RotXZY{Float64} -> RotMatrix{3,Float64,9} 49.894 ns
RotYX{Float64} -> RotMatrix{3,Float64,9}  31.180 ns
RotXYX{Float64} -> RotMatrix{3,Float64,9} 49.785 ns
RotXY{Float64} -> RotMatrix{3,Float64,9}  36.616 ns
RotZX{Float64} -> RotMatrix{3,Float64,9}  40.800 ns
RotXYZ{Float64} -> RotMatrix{3,Float64,9} 65.053 ns
RotX{Float64} -> RotMatrix{3,Float64,9}   20.709 ns
RotYZ{Float64} -> RotMatrix{3,Float64,9}  36.431 ns
RotZXY{Float64} -> RotMatrix{3,Float64,9} 51.528 ns
RotXZX{Float64} -> RotMatrix{3,Float64,9} 49.710 ns
RotY{Float64} -> RotMatrix{3,Float64,9}   14.209 ns
RotYXZ{Float64} -> RotMatrix{3,Float64,9} 74.424 ns

Group: Non-Euler conversions
RotMatrix{3,Float64,9} -> SPQuat{Float64}       23.427 ns
AngleAxis{Float64} -> Quat{Float64}             13.727 ns
Quat{Float64} -> RodriguesVec{Float64}          35.982 ns
RodriguesVec{Float64} -> AngleAxis{Float64}     13.788 ns
SPQuat{Float64} -> RodriguesVec{Float64}        93.649 ns
AngleAxis{Float64} -> SPQuat{Float64}           49.919 ns
AngleAxis{Float64} -> RodriguesVec{Float64}     2.461 ns
RodriguesVec{Float64} -> Quat{Float64}          46.784 ns
AngleAxis{Float64} -> RotMatrix{3,Float64,9}    20.501 ns
Quat{Float64} -> RotMatrix{3,Float64,9}         8.499 ns
RodriguesVec{Float64} -> RotMatrix{3,Float64,9} 72.272 ns
SPQuat{Float64} -> AngleAxis{Float64}           100.169 ns
Quat{Float64} -> SPQuat{Float64}                3.206 ns
RodriguesVec{Float64} -> SPQuat{Float64}        106.377 ns
RotMatrix{3,Float64,9} -> Quat{Float64}         21.874 ns
RotMatrix{3,Float64,9} -> RodriguesVec{Float64} 87.962 ns
SPQuat{Float64} -> RotMatrix{3,Float64,9}       27.120 ns
Quat{Float64} -> AngleAxis{Float64}             31.590 ns
RotMatrix{3,Float64,9} -> AngleAxis{Float64}    85.953 ns
SPQuat{Float64} -> Quat{Float64}                6.764 ns

   Testing Rotations tests passed 
