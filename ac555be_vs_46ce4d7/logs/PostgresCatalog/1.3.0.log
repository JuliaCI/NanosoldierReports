Julia Version 1.3.0
Commit 46ce4d7933 (2019-11-26 06:09 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-6.0.1 (ORCJIT, skylake)

   Cloning default registries into `~/.julia`
   Cloning registry from "https://github.com/JuliaRegistries/General.git"
[?25l    Fetching: [>                                        ]  0.0 %    Fetching: [=============>                           ]  31.7 %    Fetching: [==============================>          ]  73.0 %[2K[?25h     Added registry `General` to `~/.julia/registries/General`
 Resolving package versions...
 Installed DataAPI â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.0
 Installed Tables â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.2.11
 Installed IteratorInterfaceExtensions â”€ v1.0.0
 Installed PostgresCatalog â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.1.0
 Installed IterTools â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.3.0
 Installed EzXML â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.9.5
 Installed Syslogs â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.0
 Installed LibPQ â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.9.1
 Installed TableTraits â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.0
 Installed OffsetArrays â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.11.2
 Installed DataValueInterfaces â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.0
 Installed DocStringExtensions â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.8.1
 Installed BinaryProvider â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.8
 Installed Mocking â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.7.0
 Installed Memento â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.12.1
 Installed JSON â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.21.0
 Installed Decimals â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.0
 Installed Parsers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.10
 Installed TimeZones â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.9.2
 Installed LayerDicts â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.0
  Updating `~/.julia/environments/v1.3/Project.toml`
  [972fa324] + PostgresCatalog v0.1.0
  Updating `~/.julia/environments/v1.3/Manifest.toml`
  [b99e7846] + BinaryProvider v0.5.8
  [9a962f9c] + DataAPI v1.1.0
  [e2d170a0] + DataValueInterfaces v1.0.0
  [abce61dc] + Decimals v0.4.0
  [ffbed154] + DocStringExtensions v0.8.1
  [8f5d6c58] + EzXML v0.9.5
  [c8e1da08] + IterTools v1.3.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [6f188dcb] + LayerDicts v1.0.0
  [194296ae] + LibPQ v0.9.1
  [f28f55f0] + Memento v0.12.1
  [78c3b35d] + Mocking v0.7.0
  [6fe1bfb0] + OffsetArrays v0.11.2
  [69de0a69] + Parsers v0.3.10
  [972fa324] + PostgresCatalog v0.1.0
  [cea106d9] + Syslogs v0.3.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [f269a46b] + TimeZones v0.9.2
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
  Building EzXML â”€â”€â”€â”€â†’ `~/.julia/packages/EzXML/QtGgF/deps/build.log`
  Building TimeZones â†’ `~/.julia/packages/TimeZones/M8H2J/deps/build.log`
  Building LibPQ â”€â”€â”€â”€â†’ `~/.julia/packages/LibPQ/B13dX/deps/build.log`
   Testing PostgresCatalog
 Resolving package versions...
 Installed Coverage â”€â”€â”€â”€â”€â”€ v1.0.0
 Installed IniFile â”€â”€â”€â”€â”€â”€â”€ v0.5.0
 Installed HTTP â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.8.8
 Installed CoverageTools â”€ v1.0.0
 Installed MbedTLS â”€â”€â”€â”€â”€â”€â”€ v0.7.0
 Installed NarrativeTest â”€ v0.2.0
  Building MbedTLS â†’ `~/.julia/packages/MbedTLS/a1JFn/deps/build.log`
    Status `/tmp/jl_3J5sI7/Manifest.toml`
  [b99e7846] BinaryProvider v0.5.8
  [a2441757] Coverage v1.0.0
  [c36e975a] CoverageTools v1.0.0
  [9a962f9c] DataAPI v1.1.0
  [e2d170a0] DataValueInterfaces v1.0.0
  [abce61dc] Decimals v0.4.0
  [ffbed154] DocStringExtensions v0.8.1
  [8f5d6c58] EzXML v0.9.5
  [cd3eb016] HTTP v0.8.8
  [83e8ac13] IniFile v0.5.0
  [c8e1da08] IterTools v1.3.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [6f188dcb] LayerDicts v1.0.0
  [194296ae] LibPQ v0.9.1
  [739be429] MbedTLS v0.7.0
  [f28f55f0] Memento v0.12.1
  [78c3b35d] Mocking v0.7.0
  [9563631e] NarrativeTest v0.2.0
  [6fe1bfb0] OffsetArrays v0.11.2
  [69de0a69] Parsers v0.3.10
  [972fa324] PostgresCatalog v0.1.0
  [cea106d9] Syslogs v0.3.0
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v0.2.11
  [f269a46b] TimeZones v0.9.2
  [2a0f44e3] Base64  [`@stdlib/Base64`]
  [ade2ca70] Dates  [`@stdlib/Dates`]
  [8ba89e20] Distributed  [`@stdlib/Distributed`]
  [b77e0a4c] InteractiveUtils  [`@stdlib/InteractiveUtils`]
  [76f85450] LibGit2  [`@stdlib/LibGit2`]
  [8f399da3] Libdl  [`@stdlib/Libdl`]
  [37e2e46d] LinearAlgebra  [`@stdlib/LinearAlgebra`]
  [56ddb016] Logging  [`@stdlib/Logging`]
  [d6f4376e] Markdown  [`@stdlib/Markdown`]
  [a63ad114] Mmap  [`@stdlib/Mmap`]
  [44cfe95a] Pkg  [`@stdlib/Pkg`]
  [de0858da] Printf  [`@stdlib/Printf`]
  [3fa0cd96] REPL  [`@stdlib/REPL`]
  [9a3f8284] Random  [`@stdlib/Random`]
  [ea8e919c] SHA  [`@stdlib/SHA`]
  [9e88b42a] Serialization  [`@stdlib/Serialization`]
  [6462fe0b] Sockets  [`@stdlib/Sockets`]
  [8dfed614] Test  [`@stdlib/Test`]
  [cf7118a7] UUIDs  [`@stdlib/UUIDs`]
  [4ec0a83e] Unicode  [`@stdlib/Unicode`]
[error | LibPQ]: could not connect to server: No such file or directory
	Is the server running locally and accepting
	connections on Unix domain socket "/tmp/.s.PGSQL.5432"?

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/index.md, line 24:
    using LibPQ

    conn = LibPQ.Connection("")

    execute(conn, "BEGIN")

    execute(conn,
            """
            CREATE TYPE patient_sex_enum AS ENUM ('male', 'female', 'other', 'unknown');

            CREATE TABLE patient (
                id int4 NOT NULL,
                mrn text NOT NULL,
                sex patient_sex_enum NOT NULL DEFAULT 'unknown',
                mother_id int4,
                father_id int4,
                CONSTRAINT patient_uk UNIQUE (id),
                CONSTRAINT patient_pk PRIMARY KEY (mrn),
                CONSTRAINT patient_mother_fk FOREIGN KEY (mother_id) REFERENCES patient (id),
                CONSTRAINT patient_father_fk FOREIGN KEY (father_id) REFERENCES patient (id)
            );
            """)
Expected output:

Actual output:
    ERROR: could not connect to server: No such file or directory
    	Is the server running locally and accepting
    	connections on Unix domain socket "/tmp/.s.PGSQL.5432"?
    Stacktrace:
     [1] #handle_new_connection#8(::Bool, ::typeof(LibPQ.handle_new_connection), ::LibPQ.Connection) at /home/pkgeval/.julia/packages/LibPQ/B13dX/src/LibPQ.jl:153
     [2] #handle_new_connection at ./none:0 [inlined]
     [3] #Connection#9(::Bool, ::Dict{String,String}, ::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::Type{LibPQ.Connection}, ::String) at /home/pkgeval/.julia/packages/LibPQ/B13dX/src/LibPQ.jl:229
     [4] LibPQ.Connection(::String) at /home/pkgeval/.julia/packages/LibPQ/B13dX/src/LibPQ.jl:189
     [5] top-level scope at index.md:26
     [6] eval at ./boot.jl:330 [inlined]
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/index.md, line 50:
    using PostgresCatalog

    cat = PostgresCatalog.introspect(conn)
Expected output:
    DATABASE " â€¦ "
Actual output:
    ERROR: UndefVarError: conn not defined
    Stacktrace:
     [1] top-level scope at index.md:52
     [2] eval at ./boot.jl:330 [inlined]
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/index.md, line 58:
    scm = cat["public"]
Expected output:
    SCHEMA "public"
Actual output:
    ERROR: MethodError: no method matching getindex(::typeof(cat), ::String)
    Stacktrace:
     [1] top-level scope at index.md:58
     [2] eval at ./boot.jl:330 [inlined]
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/index.md, line 61:
    tbl = scm["patient"]
Expected output:
    TABLE "patient"
Actual output:
    ERROR: UndefVarError: scm not defined
    Stacktrace:
     [1] top-level scope at index.md:61
     [2] eval at ./boot.jl:330 [inlined]
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/index.md, line 67:
    foreach(println, tbl)
Expected output:
    COLUMN "patient"."id" "int4" NOT NULL
    COLUMN "patient"."mrn" "text" NOT NULL
    COLUMN "patient"."sex" "patient_sex_enum" NOT NULL
    COLUMN "patient"."mother_id" "int4" NULL
    COLUMN "patient"."father_id" "int4" NULL
Actual output:
    ERROR: UndefVarError: tbl not defined
    Stacktrace:
     [1] top-level scope at index.md:67
     [2] eval at ./boot.jl:330 [inlined]
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/index.md, line 78:
    col = tbl["sex"]
Expected output:
    COLUMN "patient"."sex" "patient_sex_enum" NOT NULL
Actual output:
    ERROR: UndefVarError: tbl not defined
    Stacktrace:
     [1] top-level scope at index.md:78
     [2] eval at ./boot.jl:330 [inlined]
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/index.md, line 81:
    col.name
Expected output:
    "sex"
Actual output:
    ERROR: UndefVarError: col not defined
    Stacktrace:
     [1] top-level scope
     [2] eval at ./boot.jl:330 [inlined]
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/index.md, line 84:
    col.type
Expected output:
    TYPE "patient_sex_enum"
Actual output:
    ERROR: UndefVarError: col not defined
    Stacktrace:
     [1] top-level scope
     [2] eval at ./boot.jl:330 [inlined]
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/index.md, line 87:
    col.type.labels
Expected output:
    ["male", "female", "other", "unknown"]
Actual output:
    ERROR: UndefVarError: col not defined
    Stacktrace:
     [1] top-level scope
     [2] eval at ./boot.jl:330 [inlined]
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/index.md, line 90:
    col.not_null
Expected output:
    true
Actual output:
    ERROR: UndefVarError: col not defined
    Stacktrace:
     [1] top-level scope
     [2] eval at ./boot.jl:330 [inlined]
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/index.md, line 93:
    col.default
Expected output:
    "'unknown'::patient_sex_enum"
Actual output:
    ERROR: UndefVarError: col not defined
    Stacktrace:
     [1] top-level scope
     [2] eval at ./boot.jl:330 [inlined]
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/index.md, line 98:
    tbl.primary_key
Expected output:
    CONSTRAINT "patient"."patient_pk" PRIMARY KEY ("mrn")
Actual output:
    ERROR: UndefVarError: tbl not defined
    Stacktrace:
     [1] top-level scope
     [2] eval at ./boot.jl:330 [inlined]
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/index.md, line 101:
    tbl.primary_key.name
Expected output:
    "patient_pk"
Actual output:
    ERROR: UndefVarError: tbl not defined
    Stacktrace:
     [1] top-level scope
     [2] eval at ./boot.jl:330 [inlined]
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/index.md, line 104:
    foreach(println, tbl.primary_key.columns)
Expected output:
    COLUMN "patient"."mrn" "text" NOT NULL
Actual output:
    ERROR: UndefVarError: tbl not defined
    Stacktrace:
     [1] top-level scope at index.md:104
     [2] eval at ./boot.jl:330 [inlined]
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/index.md, line 107:
    foreach(println, tbl.unique_keys)
Expected output:
    CONSTRAINT "patient"."patient_pk" PRIMARY KEY ("mrn")
    CONSTRAINT "patient"."patient_uk" UNIQUE ("id")
Actual output:
    ERROR: UndefVarError: tbl not defined
    Stacktrace:
     [1] top-level scope at index.md:107
     [2] eval at ./boot.jl:330 [inlined]
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Test failed at ../doc/src/index.md, line 113:
    foreach(println, tbl.foreign_keys)
Expected output:
    CONSTRAINT "patient"."patient_father_fk" FOREIGN KEY ("father_id") REFERENCES "patient" ("id")
    CONSTRAINT "patient"."patient_mother_fk" FOREIGN KEY ("mother_id") REFERENCES "patient" ("id")
Actual output:
    ERROR: UndefVarError: tbl not defined
    Stacktrace:
     [1] top-level scope at index.md:113
     [2] eval at ./boot.jl:330 [inlined]
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Tests failed: 16
TESTING UNSUCCESSFUL!
ERROR: Package PostgresCatalog errored during testing
Stacktrace:
 [1] pkgerror(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.3/Pkg/src/Types.jl:113
 [2] #test#131(::Bool, ::Nothing, ::Cmd, ::Cmd, ::typeof(Pkg.Operations.test), ::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.3/Pkg/src/Operations.jl:1370
 [3] #test at ./none:0 [inlined]
 [4] #test#62(::Bool, ::Nothing, ::Cmd, ::Cmd, ::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::typeof(Pkg.API.test), ::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.3/Pkg/src/API.jl:253
 [5] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.3/Pkg/src/API.jl:239
 [6] #test#61 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.3/Pkg/src/API.jl:233 [inlined]
 [7] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.3/Pkg/src/API.jl:233 [inlined]
 [8] #test#60 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.3/Pkg/src/API.jl:232 [inlined]
 [9] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.3/Pkg/src/API.jl:232 [inlined]
 [10] #test#59(::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::typeof(Pkg.API.test), ::String) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.3/Pkg/src/API.jl:231
 [11] test(::String) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.3/Pkg/src/API.jl:231
 [12] top-level scope at none:12
