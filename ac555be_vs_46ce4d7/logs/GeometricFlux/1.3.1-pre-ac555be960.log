Running tests with Julia v1.3.1-pre.12
 Resolving package versions...
 Installed TimerOutputs ───────── v0.5.3
 Installed NaNMath ────────────── v0.3.3
 Installed FixedPointNumbers ──── v0.6.1
 Installed Inflate ────────────── v0.1.1
 Installed Juno ───────────────── v0.7.2
 Installed AbstractFFTs ───────── v0.4.1
 Installed BinaryProvider ─────── v0.5.8
 Installed GeometricFlux ──────── v0.1.1
 Installed URIParser ──────────── v0.4.0
 Installed Requires ───────────── v0.5.2
 Installed CommonSubexpressions ─ v0.2.0
 Installed SimpleWeightedGraphs ─ v1.1.0
 Installed CuArrays ───────────── v1.5.0
 Installed IRTools ────────────── v0.3.0
 Installed FFTW ───────────────── v1.0.1
 Installed Reexport ───────────── v0.2.0
 Installed FileIO ─────────────── v1.1.0
 Installed ArnoldiMethod ──────── v0.0.4
 Installed NNlib ──────────────── v0.6.0
 Installed LightGraphs ────────── v1.3.0
 Installed AbstractTrees ──────── v0.2.1
 Installed TranscodingStreams ─── v0.9.5
 Installed GPUArrays ──────────── v2.0.0
 Installed MetaGraphs ─────────── v0.6.4
 Installed ColorTypes ─────────── v0.8.0
 Installed SortingAlgorithms ──── v0.3.1
 Installed OrderedCollections ─── v1.1.0
 Installed Colors ─────────────── v0.9.6
 Installed Compat ─────────────── v2.2.0
 Installed CUDAapi ────────────── v2.0.0
 Installed VersionParsing ─────── v1.1.3
 Installed StatsBase ──────────── v0.32.0
 Installed Conda ──────────────── v1.3.0
 Installed JSON ───────────────── v0.21.0
 Installed BinDeps ────────────── v0.8.10
 Installed ForwardDiff ────────── v0.10.7
 Installed DiffRules ──────────── v0.1.0
 Installed FillArrays ─────────── v0.8.2
 Installed ZipFile ────────────── v0.8.3
 Installed LLVM ───────────────── v1.3.2
 Installed CUDAdrv ────────────── v4.0.4
 Installed DataStructures ─────── v0.17.6
 Installed JLD2 ───────────────── v0.1.9
 Installed Flux ───────────────── v0.10.0
 Installed DataAPI ────────────── v1.1.0
 Installed Zygote ─────────────── v0.4.1
 Installed ZygoteRules ────────── v0.2.0
 Installed MacroTools ─────────── v0.5.3
 Installed Media ──────────────── v0.5.0
 Installed Missings ───────────── v0.4.3
 Installed StaticArrays ───────── v0.12.1
 Installed CodecZlib ──────────── v0.6.0
 Installed DiffResults ────────── v0.0.4
 Installed CEnum ──────────────── v0.2.0
 Installed Adapt ──────────────── v1.0.0
 Installed Parsers ────────────── v0.3.10
 Installed CUDAnative ─────────── v2.6.0
 Installed SimpleTraits ───────── v0.9.1
 Installed SpecialFunctions ───── v0.8.0
  Updating `~/.julia/environments/v1.3/Project.toml`
  [7e08b658] + GeometricFlux v0.1.1
  Updating `~/.julia/environments/v1.3/Manifest.toml`
  [621f4979] + AbstractFFTs v0.4.1
  [1520ce14] + AbstractTrees v0.2.1
  [79e6a3ab] + Adapt v1.0.0
  [ec485272] + ArnoldiMethod v0.0.4
  [9e28174c] + BinDeps v0.8.10
  [b99e7846] + BinaryProvider v0.5.8
  [fa961155] + CEnum v0.2.0
  [3895d2a7] + CUDAapi v2.0.0
  [c5f51814] + CUDAdrv v4.0.4
  [be33ccc6] + CUDAnative v2.6.0
  [944b1d66] + CodecZlib v0.6.0
  [3da002f7] + ColorTypes v0.8.0
  [5ae59095] + Colors v0.9.6
  [bbf7d656] + CommonSubexpressions v0.2.0
  [34da2185] + Compat v2.2.0
  [8f4d0f93] + Conda v1.3.0
  [3a865a2d] + CuArrays v1.5.0
  [9a962f9c] + DataAPI v1.1.0
  [864edb3b] + DataStructures v0.17.6
  [163ba53b] + DiffResults v0.0.4
  [b552c78f] + DiffRules v0.1.0
  [7a1cc6ca] + FFTW v1.0.1
  [5789e2e9] + FileIO v1.1.0
  [1a297f60] + FillArrays v0.8.2
  [53c48c17] + FixedPointNumbers v0.6.1
  [587475ba] + Flux v0.10.0
  [f6369f11] + ForwardDiff v0.10.7
  [0c68f7d7] + GPUArrays v2.0.0
  [7e08b658] + GeometricFlux v0.1.1
  [7869d1d1] + IRTools v0.3.0
  [d25df0c9] + Inflate v0.1.1
  [033835bb] + JLD2 v0.1.9
  [682c06a0] + JSON v0.21.0
  [e5e0dc1b] + Juno v0.7.2
  [929cbde3] + LLVM v1.3.2
  [093fc24a] + LightGraphs v1.3.0
  [1914dd2f] + MacroTools v0.5.3
  [e89f7d12] + Media v0.5.0
  [626554b9] + MetaGraphs v0.6.4
  [e1d29d7a] + Missings v0.4.3
  [872c559c] + NNlib v0.6.0
  [77ba4419] + NaNMath v0.3.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v0.5.2
  [699a6c99] + SimpleTraits v0.9.1
  [47aef6b3] + SimpleWeightedGraphs v1.1.0
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.8.0
  [90137ffa] + StaticArrays v0.12.1
  [2913bbd2] + StatsBase v0.32.0
  [a759f4b9] + TimerOutputs v0.5.3
  [3bb67fe8] + TranscodingStreams v0.9.5
  [30578b45] + URIParser v0.4.0
  [81def892] + VersionParsing v1.1.3
  [a5390f91] + ZipFile v0.8.3
  [e88e6eb3] + Zygote v0.4.1
  [700de1a5] + ZygoteRules v0.2.0
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [9abbd945] + Profile 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
  Building Conda ───────────→ `~/.julia/packages/Conda/kLXeC/deps/build.log`
  Building FFTW ────────────→ `~/.julia/packages/FFTW/MJ7kl/deps/build.log`
  Building ZipFile ─────────→ `~/.julia/packages/ZipFile/oD4uG/deps/build.log`
  Building SpecialFunctions → `~/.julia/packages/SpecialFunctions/ne2iw/deps/build.log`
  Building CodecZlib ───────→ `~/.julia/packages/CodecZlib/5t9zO/deps/build.log`
   Testing GeometricFlux
    Status `/tmp/jl_Wch1gl/Manifest.toml`
  [621f4979] AbstractFFTs v0.4.1
  [1520ce14] AbstractTrees v0.2.1
  [79e6a3ab] Adapt v1.0.0
  [ec485272] ArnoldiMethod v0.0.4
  [9e28174c] BinDeps v0.8.10
  [b99e7846] BinaryProvider v0.5.8
  [fa961155] CEnum v0.2.0
  [3895d2a7] CUDAapi v2.0.0
  [c5f51814] CUDAdrv v4.0.4
  [be33ccc6] CUDAnative v2.6.0
  [944b1d66] CodecZlib v0.6.0
  [3da002f7] ColorTypes v0.8.0
  [5ae59095] Colors v0.9.6
  [bbf7d656] CommonSubexpressions v0.2.0
  [34da2185] Compat v2.2.0
  [8f4d0f93] Conda v1.3.0
  [3a865a2d] CuArrays v1.5.0
  [9a962f9c] DataAPI v1.1.0
  [864edb3b] DataStructures v0.17.6
  [163ba53b] DiffResults v0.0.4
  [b552c78f] DiffRules v0.1.0
  [7a1cc6ca] FFTW v1.0.1
  [5789e2e9] FileIO v1.1.0
  [1a297f60] FillArrays v0.8.2
  [53c48c17] FixedPointNumbers v0.6.1
  [587475ba] Flux v0.10.0
  [f6369f11] ForwardDiff v0.10.7
  [0c68f7d7] GPUArrays v2.0.0
  [7e08b658] GeometricFlux v0.1.1
  [7869d1d1] IRTools v0.3.0
  [d25df0c9] Inflate v0.1.1
  [033835bb] JLD2 v0.1.9
  [682c06a0] JSON v0.21.0
  [e5e0dc1b] Juno v0.7.2
  [929cbde3] LLVM v1.3.2
  [093fc24a] LightGraphs v1.3.0
  [1914dd2f] MacroTools v0.5.3
  [e89f7d12] Media v0.5.0
  [626554b9] MetaGraphs v0.6.4
  [e1d29d7a] Missings v0.4.3
  [872c559c] NNlib v0.6.0
  [77ba4419] NaNMath v0.3.3
  [bac558e1] OrderedCollections v1.1.0
  [69de0a69] Parsers v0.3.10
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v0.5.2
  [699a6c99] SimpleTraits v0.9.1
  [47aef6b3] SimpleWeightedGraphs v1.1.0
  [a2af1166] SortingAlgorithms v0.3.1
  [276daf66] SpecialFunctions v0.8.0
  [90137ffa] StaticArrays v0.12.1
  [2913bbd2] StatsBase v0.32.0
  [a759f4b9] TimerOutputs v0.5.3
  [3bb67fe8] TranscodingStreams v0.9.5
  [30578b45] URIParser v0.4.0
  [81def892] VersionParsing v1.1.3
  [a5390f91] ZipFile v0.8.3
  [e88e6eb3] Zygote v0.4.1
  [700de1a5] ZygoteRules v0.2.0
  [2a0f44e3] Base64  [`@stdlib/Base64`]
  [ade2ca70] Dates  [`@stdlib/Dates`]
  [8bb1440f] DelimitedFiles  [`@stdlib/DelimitedFiles`]
  [8ba89e20] Distributed  [`@stdlib/Distributed`]
  [b77e0a4c] InteractiveUtils  [`@stdlib/InteractiveUtils`]
  [76f85450] LibGit2  [`@stdlib/LibGit2`]
  [8f399da3] Libdl  [`@stdlib/Libdl`]
  [37e2e46d] LinearAlgebra  [`@stdlib/LinearAlgebra`]
  [56ddb016] Logging  [`@stdlib/Logging`]
  [d6f4376e] Markdown  [`@stdlib/Markdown`]
  [a63ad114] Mmap  [`@stdlib/Mmap`]
  [44cfe95a] Pkg  [`@stdlib/Pkg`]
  [de0858da] Printf  [`@stdlib/Printf`]
  [9abbd945] Profile  [`@stdlib/Profile`]
  [3fa0cd96] REPL  [`@stdlib/REPL`]
  [9a3f8284] Random  [`@stdlib/Random`]
  [ea8e919c] SHA  [`@stdlib/SHA`]
  [9e88b42a] Serialization  [`@stdlib/Serialization`]
  [1a1011a3] SharedArrays  [`@stdlib/SharedArrays`]
  [6462fe0b] Sockets  [`@stdlib/Sockets`]
  [2f01184e] SparseArrays  [`@stdlib/SparseArrays`]
  [10745b16] Statistics  [`@stdlib/Statistics`]
  [8dfed614] Test  [`@stdlib/Test`]
  [cf7118a7] UUIDs  [`@stdlib/UUIDs`]
  [4ec0a83e] Unicode  [`@stdlib/Unicode`]
[ Info: CUDAdrv.jl failed to initialize, GPU functionality unavailable (set JULIA_CUDA_SILENT or JULIA_CUDA_VERBOSE to silence or expand this message)
WARNING: import of LightGraphs.neighbors into GeometricFlux conflicts with an existing identifier; ignored.
WARNING: import of LightGraphs.laplacian_matrix into GeometricFlux conflicts with an existing identifier; ignored.
WARNING: using LightGraphs.neighbors in module Main conflicts with an existing identifier.
WARNING: ignoring conflicting import of LightGraphs.neighbors into Main
WARNING: ignoring conflicting import of LightGraphs.laplacian_matrix into Main
┌ Warning: `param(x)` is deprecated, use `x` instead.
│   caller = #GCNConv#22(::typeof(Flux.glorot_uniform), ::DataType, ::Bool, ::Type{GCNConv}, ::Array{Float64,2}, ::Pair{Int64,Int64}, ::Function) at conv.jl:11
└ @ GeometricFlux ~/.julia/packages/GeometricFlux/eoDhT/src/layers/conv.jl:11
┌ Warning: `param(x)` is deprecated, use `x` instead.
│   caller = #GCNConv#22(::typeof(Flux.glorot_uniform), ::DataType, ::Bool, ::Type{GCNConv}, ::Array{Float64,2}, ::Pair{Int64,Int64}, ::Function) at conv.jl:12
└ @ GeometricFlux ~/.julia/packages/GeometricFlux/eoDhT/src/layers/conv.jl:12
┌ Warning: `param(x)` is deprecated, use `x` instead.
│   caller = #ChebConv#25(::typeof(Flux.glorot_uniform), ::DataType, ::Bool, ::Type{ChebConv}, ::Array{Float64,2}, ::Pair{Int64,Int64}, ::Int64) at conv.jl:33
└ @ GeometricFlux ~/.julia/packages/GeometricFlux/eoDhT/src/layers/conv.jl:33
┌ Warning: `param(x)` is deprecated, use `x` instead.
│   caller = #ChebConv#25(::typeof(Flux.glorot_uniform), ::DataType, ::Bool, ::Type{ChebConv}, ::Array{Float64,2}, ::Pair{Int64,Int64}, ::Int64) at conv.jl:35
└ @ GeometricFlux ~/.julia/packages/GeometricFlux/eoDhT/src/layers/conv.jl:35
┌ Warning: `param(x)` is deprecated, use `x` instead.
│   caller = #GraphConv#29(::typeof(Flux.glorot_uniform), ::Bool, ::Type{GraphConv}, ::Array{Float64,2}, ::Pair{Int64,Int64}, ::Symbol) at conv.jl:83
└ @ GeometricFlux ~/.julia/packages/GeometricFlux/eoDhT/src/layers/conv.jl:83
┌ Warning: `param(x)` is deprecated, use `x` instead.
│   caller = #GraphConv#29(::typeof(Flux.glorot_uniform), ::Bool, ::Type{GraphConv}, ::Array{Float64,2}, ::Pair{Int64,Int64}, ::Symbol) at conv.jl:84
└ @ GeometricFlux ~/.julia/packages/GeometricFlux/eoDhT/src/layers/conv.jl:84
┌ Warning: `param(x)` is deprecated, use `x` instead.
│   caller = #GraphConv#29(::typeof(Flux.glorot_uniform), ::Bool, ::Type{GraphConv}, ::Array{Float64,2}, ::Pair{Int64,Int64}, ::Symbol) at conv.jl:84
└ @ GeometricFlux ~/.julia/packages/GeometricFlux/eoDhT/src/layers/conv.jl:84
┌ Warning: `param(x)` is deprecated, use `x` instead.
│   caller = #GATConv#34(::Int64, ::Bool, ::Float64, ::typeof(Flux.glorot_uniform), ::Bool, ::Type{GATConv}, ::Array{Float64,2}, ::Pair{Int64,Int64}) at conv.jl:106
└ @ GeometricFlux ~/.julia/packages/GeometricFlux/eoDhT/src/layers/conv.jl:106
┌ Warning: `param(x)` is deprecated, use `x` instead.
│   caller = #GATConv#34(::Int64, ::Bool, ::Float64, ::typeof(Flux.glorot_uniform), ::Bool, ::Type{GATConv}, ::Array{Float64,2}, ::Pair{Int64,Int64}) at conv.jl:107
└ @ GeometricFlux ~/.julia/packages/GeometricFlux/eoDhT/src/layers/conv.jl:107
┌ Warning: `param(x)` is deprecated, use `x` instead.
│   caller = #GATConv#34(::Int64, ::Bool, ::Float64, ::typeof(Flux.glorot_uniform), ::Bool, ::Type{GATConv}, ::Array{Float64,2}, ::Pair{Int64,Int64}) at conv.jl:107
└ @ GeometricFlux ~/.julia/packages/GeometricFlux/eoDhT/src/layers/conv.jl:107
┌ Warning: `param(x)` is deprecated, use `x` instead.
│   caller = #GatedGraphConv#43 at conv.jl:142 [inlined]
└ @ Core ~/.julia/packages/GeometricFlux/eoDhT/src/layers/conv.jl:142
┌ Warning: `param(x)` is deprecated, use `x` instead.
│   caller = #GCNConv#83(::typeof(Flux.glorot_uniform), ::DataType, ::Bool, ::Type{GCNConv}, ::SimpleGraph{Int64}, ::Pair{Int64,Int64}, ::Function) at simplegraphs.jl:7
└ @ GeometricFlux ~/.julia/packages/GeometricFlux/eoDhT/src/graph/simplegraphs.jl:7
┌ Warning: `param(x)` is deprecated, use `x` instead.
│   caller = #GCNConv#83(::typeof(Flux.glorot_uniform), ::DataType, ::Bool, ::Type{GCNConv}, ::SimpleGraph{Int64}, ::Pair{Int64,Int64}, ::Function) at simplegraphs.jl:9
└ @ GeometricFlux ~/.julia/packages/GeometricFlux/eoDhT/src/graph/simplegraphs.jl:9
┌ Warning: `param(x)` is deprecated, use `x` instead.
│   caller = #ChebConv#84(::typeof(Flux.glorot_uniform), ::DataType, ::Bool, ::Type{ChebConv}, ::SimpleGraph{Int64}, ::Pair{Int64,Int64}, ::Int64) at simplegraphs.jl:16
└ @ GeometricFlux ~/.julia/packages/GeometricFlux/eoDhT/src/graph/simplegraphs.jl:16
┌ Warning: `param(x)` is deprecated, use `x` instead.
│   caller = #ChebConv#84(::typeof(Flux.glorot_uniform), ::DataType, ::Bool, ::Type{ChebConv}, ::SimpleGraph{Int64}, ::Pair{Int64,Int64}, ::Int64) at simplegraphs.jl:19
└ @ GeometricFlux ~/.julia/packages/GeometricFlux/eoDhT/src/graph/simplegraphs.jl:19
┌ Warning: `param(x)` is deprecated, use `x` instead.
│   caller = #GraphConv#85(::typeof(Flux.glorot_uniform), ::Bool, ::Type{GraphConv}, ::SimpleGraph{Int64}, ::Pair{Int64,Int64}, ::Symbol) at simplegraphs.jl:26
└ @ GeometricFlux ~/.julia/packages/GeometricFlux/eoDhT/src/graph/simplegraphs.jl:26
┌ Warning: `param(x)` is deprecated, use `x` instead.
│   caller = #GraphConv#85(::typeof(Flux.glorot_uniform), ::Bool, ::Type{GraphConv}, ::SimpleGraph{Int64}, ::Pair{Int64,Int64}, ::Symbol) at simplegraphs.jl:27
└ @ GeometricFlux ~/.julia/packages/GeometricFlux/eoDhT/src/graph/simplegraphs.jl:27
┌ Warning: `param(x)` is deprecated, use `x` instead.
│   caller = #GraphConv#85(::typeof(Flux.glorot_uniform), ::Bool, ::Type{GraphConv}, ::SimpleGraph{Int64}, ::Pair{Int64,Int64}, ::Symbol) at simplegraphs.jl:27
└ @ GeometricFlux ~/.julia/packages/GeometricFlux/eoDhT/src/graph/simplegraphs.jl:27
┌ Warning: `param(x)` is deprecated, use `x` instead.
│   caller = #GATConv#86(::Int64, ::Bool, ::Float64, ::typeof(Flux.glorot_uniform), ::Bool, ::Type{GATConv}, ::SimpleGraph{Int64}, ::Pair{Int64,Int64}) at simplegraphs.jl:34
└ @ GeometricFlux ~/.julia/packages/GeometricFlux/eoDhT/src/graph/simplegraphs.jl:34
┌ Warning: `param(x)` is deprecated, use `x` instead.
│   caller = #GATConv#86(::Int64, ::Bool, ::Float64, ::typeof(Flux.glorot_uniform), ::Bool, ::Type{GATConv}, ::SimpleGraph{Int64}, ::Pair{Int64,Int64}) at simplegraphs.jl:35
└ @ GeometricFlux ~/.julia/packages/GeometricFlux/eoDhT/src/graph/simplegraphs.jl:35
┌ Warning: `param(x)` is deprecated, use `x` instead.
│   caller = #GATConv#86(::Int64, ::Bool, ::Float64, ::typeof(Flux.glorot_uniform), ::Bool, ::Type{GATConv}, ::SimpleGraph{Int64}, ::Pair{Int64,Int64}) at simplegraphs.jl:35
└ @ GeometricFlux ~/.julia/packages/GeometricFlux/eoDhT/src/graph/simplegraphs.jl:35
┌ Warning: `param(x)` is deprecated, use `x` instead.
│   caller = #GatedGraphConv#87 at simplegraphs.jl:42 [inlined]
└ @ Core ~/.julia/packages/GeometricFlux/eoDhT/src/graph/simplegraphs.jl:42
┌ Warning: `param(x)` is deprecated, use `x` instead.
│   caller = #GCNConv#89(::typeof(Flux.glorot_uniform), ::DataType, ::Bool, ::Type{GCNConv}, ::SimpleWeightedGraph{Int64,Float64}, ::Pair{Int64,Int64}, ::Function) at weightedgraphs.jl:6
└ @ GeometricFlux ~/.julia/packages/GeometricFlux/eoDhT/src/graph/weightedgraphs.jl:6
┌ Warning: `param(x)` is deprecated, use `x` instead.
│   caller = #GCNConv#89(::typeof(Flux.glorot_uniform), ::DataType, ::Bool, ::Type{GCNConv}, ::SimpleWeightedGraph{Int64,Float64}, ::Pair{Int64,Int64}, ::Function) at weightedgraphs.jl:8
└ @ GeometricFlux ~/.julia/packages/GeometricFlux/eoDhT/src/graph/weightedgraphs.jl:8
┌ Warning: `param(x)` is deprecated, use `x` instead.
│   caller = #ChebConv#90(::typeof(Flux.glorot_uniform), ::DataType, ::Bool, ::Type{ChebConv}, ::SimpleWeightedGraph{Int64,Float64}, ::Pair{Int64,Int64}, ::Int64) at weightedgraphs.jl:15
└ @ GeometricFlux ~/.julia/packages/GeometricFlux/eoDhT/src/graph/weightedgraphs.jl:15
┌ Warning: `param(x)` is deprecated, use `x` instead.
│   caller = #ChebConv#90(::typeof(Flux.glorot_uniform), ::DataType, ::Bool, ::Type{ChebConv}, ::SimpleWeightedGraph{Int64,Float64}, ::Pair{Int64,Int64}, ::Int64) at weightedgraphs.jl:18
└ @ GeometricFlux ~/.julia/packages/GeometricFlux/eoDhT/src/graph/weightedgraphs.jl:18
┌ Warning: `param(x)` is deprecated, use `x` instead.
│   caller = #GraphConv#91(::typeof(Flux.glorot_uniform), ::Bool, ::Type{GraphConv}, ::SimpleWeightedGraph{Int64,Float64}, ::Pair{Int64,Int64}, ::Symbol) at weightedgraphs.jl:25
└ @ GeometricFlux ~/.julia/packages/GeometricFlux/eoDhT/src/graph/weightedgraphs.jl:25
┌ Warning: `param(x)` is deprecated, use `x` instead.
│   caller = #GraphConv#91(::typeof(Flux.glorot_uniform), ::Bool, ::Type{GraphConv}, ::SimpleWeightedGraph{Int64,Float64}, ::Pair{Int64,Int64}, ::Symbol) at weightedgraphs.jl:26
└ @ GeometricFlux ~/.julia/packages/GeometricFlux/eoDhT/src/graph/weightedgraphs.jl:26
┌ Warning: `param(x)` is deprecated, use `x` instead.
│   caller = #GraphConv#91(::typeof(Flux.glorot_uniform), ::Bool, ::Type{GraphConv}, ::SimpleWeightedGraph{Int64,Float64}, ::Pair{Int64,Int64}, ::Symbol) at weightedgraphs.jl:26
└ @ GeometricFlux ~/.julia/packages/GeometricFlux/eoDhT/src/graph/weightedgraphs.jl:26
┌ Warning: `param(x)` is deprecated, use `x` instead.
│   caller = #GATConv#92(::Int64, ::Bool, ::Float64, ::typeof(Flux.glorot_uniform), ::Bool, ::Type{GATConv}, ::SimpleWeightedGraph{Int64,Float64}, ::Pair{Int64,Int64}) at weightedgraphs.jl:33
└ @ GeometricFlux ~/.julia/packages/GeometricFlux/eoDhT/src/graph/weightedgraphs.jl:33
┌ Warning: `param(x)` is deprecated, use `x` instead.
│   caller = #GATConv#92(::Int64, ::Bool, ::Float64, ::typeof(Flux.glorot_uniform), ::Bool, ::Type{GATConv}, ::SimpleWeightedGraph{Int64,Float64}, ::Pair{Int64,Int64}) at weightedgraphs.jl:34
└ @ GeometricFlux ~/.julia/packages/GeometricFlux/eoDhT/src/graph/weightedgraphs.jl:34
┌ Warning: `param(x)` is deprecated, use `x` instead.
│   caller = #GATConv#92(::Int64, ::Bool, ::Float64, ::typeof(Flux.glorot_uniform), ::Bool, ::Type{GATConv}, ::SimpleWeightedGraph{Int64,Float64}, ::Pair{Int64,Int64}) at weightedgraphs.jl:34
└ @ GeometricFlux ~/.julia/packages/GeometricFlux/eoDhT/src/graph/weightedgraphs.jl:34
┌ Warning: `param(x)` is deprecated, use `x` instead.
│   caller = #GatedGraphConv#93 at weightedgraphs.jl:41 [inlined]
└ @ Core ~/.julia/packages/GeometricFlux/eoDhT/src/graph/weightedgraphs.jl:41
Test Summary: | Pass  Total
GeometricFlux |  248    248
   Testing GeometricFlux tests passed 
