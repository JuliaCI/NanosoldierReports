Julia Version 1.3.0
Commit 46ce4d7933 (2019-11-26 06:09 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-6.0.1 (ORCJIT, skylake)

   Cloning default registries into `~/.julia`
   Cloning registry from "https://github.com/JuliaRegistries/General.git"
[?25l    Fetching: [>                                        ]  0.0 %    Fetching: [==============>                          ]  33.3 %    Fetching: [=================================>       ]  81.8 %[2K[?25h     Added registry `General` to `~/.julia/registries/General`
 Resolving package versions...
 Installed AbstractTrees â”€ v0.2.1
 Installed Parsers â”€â”€â”€â”€â”€â”€â”€ v0.3.10
 Installed D3Trees â”€â”€â”€â”€â”€â”€â”€ v0.3.1
 Installed JSON â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.21.0
  Updating `~/.julia/environments/v1.3/Project.toml`
  [e3df1716] + D3Trees v0.3.1
  Updating `~/.julia/environments/v1.3/Manifest.toml`
  [1520ce14] + AbstractTrees v0.2.1
  [e3df1716] + D3Trees v0.3.1
  [682c06a0] + JSON v0.21.0
  [69de0a69] + Parsers v0.3.10
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [de0858da] + Printf 
  [9a3f8284] + Random 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [8dfed614] + Test 
  [4ec0a83e] + Unicode 
   Testing D3Trees
 Resolving package versions...
 Installed NBInclude â”€â”€â”€â”€â”€â”€â”€ v2.1.0
 Installed SoftGlobalScope â”€ v1.0.10
 Installed Compat â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v2.2.0
    Status `/tmp/jl_0iDag3/Manifest.toml`
  [1520ce14] AbstractTrees v0.2.1
  [34da2185] Compat v2.2.0
  [e3df1716] D3Trees v0.3.1
  [682c06a0] JSON v0.21.0
  [0db19996] NBInclude v2.1.0
  [69de0a69] Parsers v0.3.10
  [b85f4697] SoftGlobalScope v1.0.10
  [2a0f44e3] Base64  [`@stdlib/Base64`]
  [ade2ca70] Dates  [`@stdlib/Dates`]
  [8bb1440f] DelimitedFiles  [`@stdlib/DelimitedFiles`]
  [8ba89e20] Distributed  [`@stdlib/Distributed`]
  [b77e0a4c] InteractiveUtils  [`@stdlib/InteractiveUtils`]
  [76f85450] LibGit2  [`@stdlib/LibGit2`]
  [8f399da3] Libdl  [`@stdlib/Libdl`]
  [37e2e46d] LinearAlgebra  [`@stdlib/LinearAlgebra`]
  [56ddb016] Logging  [`@stdlib/Logging`]
  [d6f4376e] Markdown  [`@stdlib/Markdown`]
  [a63ad114] Mmap  [`@stdlib/Mmap`]
  [44cfe95a] Pkg  [`@stdlib/Pkg`]
  [de0858da] Printf  [`@stdlib/Printf`]
  [3fa0cd96] REPL  [`@stdlib/REPL`]
  [9a3f8284] Random  [`@stdlib/Random`]
  [ea8e919c] SHA  [`@stdlib/SHA`]
  [9e88b42a] Serialization  [`@stdlib/Serialization`]
  [1a1011a3] SharedArrays  [`@stdlib/SharedArrays`]
  [6462fe0b] Sockets  [`@stdlib/Sockets`]
  [2f01184e] SparseArrays  [`@stdlib/SparseArrays`]
  [10745b16] Statistics  [`@stdlib/Statistics`]
  [8dfed614] Test  [`@stdlib/Test`]
  [cf7118a7] UUIDs  [`@stdlib/UUIDs`]
  [4ec0a83e] Unicode  [`@stdlib/Unicode`]
json(t1) = "{\"children\":[[2,3],[],[4],[]],\"text\":[\"one\\n(second line)\",\"2\",\"III\",\"four\"],\"tooltip\":[\"pops\",\"up\",\"on\",\"hover\"],\"style\":[\"\",\"fill:red\",\"r:14\",\"opacity:0.7\"],\"link_style\":[\"\",\"stroke:blue\",\"\",\"stroke-width:10px\"],\"title\":\"Julia D3Tree\",\"options\":{\"tooltip\":[\"pops\",\"up\",\"on\",\"hover\"],\"link_style\":[\"\",\"stroke:blue\",\"\",\"stroke-width:10px\"],\"text\":[\"one\\n(second line)\",\"2\",\"III\",\"four\"],\"style\":[\"\",\"fill:red\",\"r:14\",\"opacity:0.7\"]}}"
D3Trees.children(D3TreeNode(t1, 1)) = Base.Generator{Array{Int64,1},D3Trees.var"#3#4"{D3TreeNode}}(D3Trees.var"#3#4"{D3TreeNode}(D3TreeNode(D3Tree(Array{Int64,1}[[2, 3], [], [4], []], ["one\n(second line)", "2", "III", "four"], ["pops", "up", "on", "hover"], ["", "fill:red", "r:14", "opacity:0.7"], ["", "stroke:blue", "", "stroke-width:10px"], "Julia D3Tree", Dict{Symbol,Any}(:tooltip => ["pops", "up", "on", "hover"],:link_style => ["", "stroke:blue", "", "stroke-width:10px"],:text => ["one\n(second line)", "2", "III", "four"],:style => ["", "fill:red", "r:14", "opacity:0.7"])), 1)), [2, 3])
one
(second line)
â”œâ”€â”€2
â””â”€â”€III
   â””â”€â”€four
generating 1000000 children
  0.296659 seconds (1.05 M allocations: 109.345 MiB, 28.35% gc time)
creating tree object
  0.659240 seconds (2.17 M allocations: 130.735 MiB, 43.15% gc time)
html string
  1.808265 seconds (6.00 M allocations: 261.244 MiB, 13.11% gc time)
AbstractTrees constructor
  0.341306 seconds (356.66 k allocations: 16.540 MiB, 4.79% gc time)
  0.115216 seconds (8.82 k allocations: 502.121 KiB)
   Testing D3Trees tests passed 
