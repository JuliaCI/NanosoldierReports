Running tests with Julia v1.3.1-pre.12
 Resolving package versions...
 Installed RecipesBase ───────── v0.7.0
 Installed URIParser ─────────── v0.4.0
 Installed FixedPointNumbers ─── v0.5.3
 Installed EzXML ─────────────── v0.9.5
 Installed BufferedStreams ───── v1.0.0
 Installed BinaryProvider ────── v0.5.8
 Installed BioTools ──────────── v1.0.0
 Installed GenomicFeatures ───── v1.0.0
 Installed Combinatorics ─────── v0.7.0
 Installed TranscodingStreams ── v0.9.5
 Installed ColorTypes ────────── v0.8.0
 Installed Compat ────────────── v2.2.0
 Installed OrderedCollections ── v1.1.0
 Installed BioCore ───────────── v2.0.5
 Installed IntervalTrees ─────── v1.0.0
 Installed Automa ────────────── v0.8.0
 Installed Codecs ────────────── v0.5.0
 Installed BioSequences ──────── v1.1.0
 Installed DataStructures ────── v0.17.6
 Installed IndexableBitVectors ─ v1.0.0
 Installed Polynomials ───────── v0.6.0
 Installed YAML ──────────────── v0.3.2
 Installed Twiddle ───────────── v1.1.1
 Installed CodecZlib ─────────── v0.6.0
 Installed Libz ──────────────── v1.0.0
 Installed BGZFStreams ───────── v0.3.0
 Installed BioAlignments ─────── v1.0.0
 Installed BioSymbols ────────── v3.1.0
  Updating `~/.julia/environments/v1.3/Project.toml`
  [fa51a905] + BioTools v1.0.0
  Updating `~/.julia/environments/v1.3/Manifest.toml`
  [67c07d97] + Automa v0.8.0
  [28d598bf] + BGZFStreams v0.3.0
  [b99e7846] + BinaryProvider v0.5.8
  [00701ae9] + BioAlignments v1.0.0
  [37cfa864] + BioCore v2.0.5
  [7e6ae17a] + BioSequences v1.1.0
  [3c28c6f8] + BioSymbols v3.1.0
  [fa51a905] + BioTools v1.0.0
  [e1450e63] + BufferedStreams v1.0.0
  [944b1d66] + CodecZlib v0.6.0
  [19ecbf4d] + Codecs v0.5.0
  [3da002f7] + ColorTypes v0.8.0
  [861a8166] + Combinatorics v0.7.0
  [34da2185] + Compat v2.2.0
  [864edb3b] + DataStructures v0.17.6
  [8f5d6c58] + EzXML v0.9.5
  [53c48c17] + FixedPointNumbers v0.5.3
  [899a7d2d] + GenomicFeatures v1.0.0
  [1cb3b9ac] + IndexableBitVectors v1.0.0
  [524e6230] + IntervalTrees v1.0.0
  [2ec943e9] + Libz v1.0.0
  [bac558e1] + OrderedCollections v1.1.0
  [f27b6e38] + Polynomials v0.6.0
  [3cdcf5f2] + RecipesBase v0.7.0
  [3bb67fe8] + TranscodingStreams v0.9.5
  [7200193e] + Twiddle v1.1.1
  [30578b45] + URIParser v0.4.0
  [ddb6d928] + YAML v0.3.2
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [9abbd945] + Profile 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
  Building EzXML ────→ `~/.julia/packages/EzXML/QtGgF/deps/build.log`
  Building CodecZlib → `~/.julia/packages/CodecZlib/5t9zO/deps/build.log`
   Testing BioTools
 Resolving package versions...
    Status `/tmp/jl_ceDqhI/Manifest.toml`
  [67c07d97] Automa v0.8.0
  [28d598bf] BGZFStreams v0.3.0
  [b99e7846] BinaryProvider v0.5.8
  [00701ae9] BioAlignments v1.0.0
  [37cfa864] BioCore v2.0.5
  [7e6ae17a] BioSequences v1.1.0
  [3c28c6f8] BioSymbols v3.1.0
  [fa51a905] BioTools v1.0.0
  [e1450e63] BufferedStreams v1.0.0
  [944b1d66] CodecZlib v0.6.0
  [19ecbf4d] Codecs v0.5.0
  [3da002f7] ColorTypes v0.8.0
  [861a8166] Combinatorics v0.7.0
  [34da2185] Compat v2.2.0
  [864edb3b] DataStructures v0.17.6
  [8f5d6c58] EzXML v0.9.5
  [53c48c17] FixedPointNumbers v0.5.3
  [899a7d2d] GenomicFeatures v1.0.0
  [1cb3b9ac] IndexableBitVectors v1.0.0
  [524e6230] IntervalTrees v1.0.0
  [2ec943e9] Libz v1.0.0
  [bac558e1] OrderedCollections v1.1.0
  [f27b6e38] Polynomials v0.6.0
  [3cdcf5f2] RecipesBase v0.7.0
  [3bb67fe8] TranscodingStreams v0.9.5
  [7200193e] Twiddle v1.1.1
  [30578b45] URIParser v0.4.0
  [ddb6d928] YAML v0.3.2
  [2a0f44e3] Base64  [`@stdlib/Base64`]
  [ade2ca70] Dates  [`@stdlib/Dates`]
  [8bb1440f] DelimitedFiles  [`@stdlib/DelimitedFiles`]
  [8ba89e20] Distributed  [`@stdlib/Distributed`]
  [b77e0a4c] InteractiveUtils  [`@stdlib/InteractiveUtils`]
  [76f85450] LibGit2  [`@stdlib/LibGit2`]
  [8f399da3] Libdl  [`@stdlib/Libdl`]
  [37e2e46d] LinearAlgebra  [`@stdlib/LinearAlgebra`]
  [56ddb016] Logging  [`@stdlib/Logging`]
  [d6f4376e] Markdown  [`@stdlib/Markdown`]
  [a63ad114] Mmap  [`@stdlib/Mmap`]
  [44cfe95a] Pkg  [`@stdlib/Pkg`]
  [de0858da] Printf  [`@stdlib/Printf`]
  [9abbd945] Profile  [`@stdlib/Profile`]
  [3fa0cd96] REPL  [`@stdlib/REPL`]
  [9a3f8284] Random  [`@stdlib/Random`]
  [ea8e919c] SHA  [`@stdlib/SHA`]
  [9e88b42a] Serialization  [`@stdlib/Serialization`]
  [1a1011a3] SharedArrays  [`@stdlib/SharedArrays`]
  [6462fe0b] Sockets  [`@stdlib/Sockets`]
  [2f01184e] SparseArrays  [`@stdlib/SparseArrays`]
  [10745b16] Statistics  [`@stdlib/Statistics`]
  [8dfed614] Test  [`@stdlib/Test`]
  [cf7118a7] UUIDs  [`@stdlib/UUIDs`]
  [4ec0a83e] Unicode  [`@stdlib/Unicode`]
Cloning into '/root/.julia/packages/BioCore/YBJvb/BioFmtSpecimens'...
Note: checking out 'v1.0.0-7-g1babfbc'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b <new-branch-name>

HEAD is now at 1babfbc Merge pull request #28 from tanhevg/bugfix/BioStructures#11
BLAST+ blastn: Error During Test at /root/.julia/packages/BioTools/wXGId/test/runtests.jl:30
  Test threw exception
  Expression: typeof(blastn(na1, na2)) == Array{BLASTResult, 1}
  IOError: could not spawn `blastn -query /tmp/jl_9j4kXt -subject /tmp/jl_kDciOJ -outfmt 5`: no such file or directory (ENOENT)
  Stacktrace:
   [1] _spawn_primitive(::String, ::Cmd, ::Array{Any,1}) at ./process.jl:99
   [2] #554 at ./process.jl:112 [inlined]
   [3] setup_stdios(::Base.var"#554#555"{Cmd}, ::Array{Any,1}) at ./process.jl:196
   [4] _spawn at ./process.jl:111 [inlined]
   [5] #open#563(::Bool, ::Bool, ::typeof(open), ::Cmd, ::Base.DevNull) at ./process.jl:370
   [6] open at ./process.jl:361 [inlined]
   [7] open(::Cmd, ::String, ::Base.DevNull) at ./process.jl:341
   [8] read(::Cmd) at ./process.jl:410
   [9] read(::Cmd, ::Type{String}) at ./process.jl:421
   [10] #readblastXML#2(::String, ::typeof(BioTools.BLAST.readblastXML), ::Cmd) at /root/.julia/packages/BioTools/wXGId/src/blast/blastcommandline.jl:67
   [11] readblastXML at /root/.julia/packages/BioTools/wXGId/src/blast/blastcommandline.jl:67 [inlined]
   [12] #blastn#3 at /root/.julia/packages/BioTools/wXGId/src/blast/blastcommandline.jl:82 [inlined]
   [13] blastn at /root/.julia/packages/BioTools/wXGId/src/blast/blastcommandline.jl:79 [inlined]
   [14] blastn at /root/.julia/packages/BioTools/wXGId/src/blast/blastcommandline.jl:89 [inlined]
   [15] blastn(::BioSequences.BioSequence{BioSequences.DNAAlphabet{4}}, ::BioSequences.BioSequence{BioSequences.DNAAlphabet{4}}) at /root/.julia/packages/BioTools/wXGId/src/blast/blastcommandline.jl:88
   [16] top-level scope at /root/.julia/packages/BioTools/wXGId/test/runtests.jl:30
   [17] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [18] top-level scope at /root/.julia/packages/BioTools/wXGId/test/runtests.jl:16
  
BLAST+ blastn: Error During Test at /root/.julia/packages/BioTools/wXGId/test/runtests.jl:31
  Test threw exception
  Expression: typeof(blastn(na1, [na1, na2])) == Array{BLASTResult, 1}
  IOError: could not spawn `blastn -query /tmp/jl_136unc -subject /tmp/jl_OVfKWE -outfmt 5`: no such file or directory (ENOENT)
  Stacktrace:
   [1] _spawn_primitive(::String, ::Cmd, ::Array{Any,1}) at ./process.jl:99
   [2] #554 at ./process.jl:112 [inlined]
   [3] setup_stdios(::Base.var"#554#555"{Cmd}, ::Array{Any,1}) at ./process.jl:196
   [4] _spawn at ./process.jl:111 [inlined]
   [5] #open#563(::Bool, ::Bool, ::typeof(open), ::Cmd, ::Base.DevNull) at ./process.jl:370
   [6] open at ./process.jl:361 [inlined]
   [7] open(::Cmd, ::String, ::Base.DevNull) at ./process.jl:341
   [8] read(::Cmd) at ./process.jl:410
   [9] read(::Cmd, ::Type{String}) at ./process.jl:421
   [10] #readblastXML#2(::String, ::typeof(BioTools.BLAST.readblastXML), ::Cmd) at /root/.julia/packages/BioTools/wXGId/src/blast/blastcommandline.jl:67
   [11] readblastXML at /root/.julia/packages/BioTools/wXGId/src/blast/blastcommandline.jl:67 [inlined]
   [12] #blastn#3 at /root/.julia/packages/BioTools/wXGId/src/blast/blastcommandline.jl:82 [inlined]
   [13] blastn at /root/.julia/packages/BioTools/wXGId/src/blast/blastcommandline.jl:79 [inlined]
   [14] blastn at /root/.julia/packages/BioTools/wXGId/src/blast/blastcommandline.jl:94 [inlined]
   [15] blastn(::BioSequences.BioSequence{BioSequences.DNAAlphabet{4}}, ::Array{BioSequences.BioSequence{BioSequences.DNAAlphabet{4}},1}) at /root/.julia/packages/BioTools/wXGId/src/blast/blastcommandline.jl:93
   [16] top-level scope at /root/.julia/packages/BioTools/wXGId/test/runtests.jl:31
   [17] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [18] top-level scope at /root/.julia/packages/BioTools/wXGId/test/runtests.jl:16
  
BLAST+ blastn: Error During Test at /root/.julia/packages/BioTools/wXGId/test/runtests.jl:32
  Test threw exception
  Expression: typeof(blastn([na1, na2], [na1, na2])) == Array{BLASTResult, 1}
  IOError: could not spawn `blastn -query /tmp/jl_NAlOT7 -subject /tmp/jl_SPIxVA -outfmt 5`: no such file or directory (ENOENT)
  Stacktrace:
   [1] _spawn_primitive(::String, ::Cmd, ::Array{Any,1}) at ./process.jl:99
   [2] #554 at ./process.jl:112 [inlined]
   [3] setup_stdios(::Base.var"#554#555"{Cmd}, ::Array{Any,1}) at ./process.jl:196
   [4] _spawn at ./process.jl:111 [inlined]
   [5] #open#563(::Bool, ::Bool, ::typeof(open), ::Cmd, ::Base.DevNull) at ./process.jl:370
   [6] open at ./process.jl:361 [inlined]
   [7] open(::Cmd, ::String, ::Base.DevNull) at ./process.jl:341
   [8] read(::Cmd) at ./process.jl:410
   [9] read(::Cmd, ::Type{String}) at ./process.jl:421
   [10] #readblastXML#2(::String, ::typeof(BioTools.BLAST.readblastXML), ::Cmd) at /root/.julia/packages/BioTools/wXGId/src/blast/blastcommandline.jl:67
   [11] readblastXML at /root/.julia/packages/BioTools/wXGId/src/blast/blastcommandline.jl:67 [inlined]
   [12] #blastn#3 at /root/.julia/packages/BioTools/wXGId/src/blast/blastcommandline.jl:82 [inlined]
   [13] blastn at /root/.julia/packages/BioTools/wXGId/src/blast/blastcommandline.jl:79 [inlined]
   [14] blastn at /root/.julia/packages/BioTools/wXGId/src/blast/blastcommandline.jl:108 [inlined]
   [15] blastn(::Array{BioSequences.BioSequence{BioSequences.DNAAlphabet{4}},1}, ::Array{BioSequences.BioSequence{BioSequences.DNAAlphabet{4}},1}) at /root/.julia/packages/BioTools/wXGId/src/blast/blastcommandline.jl:107
   [16] top-level scope at /root/.julia/packages/BioTools/wXGId/test/runtests.jl:32
   [17] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [18] top-level scope at /root/.julia/packages/BioTools/wXGId/test/runtests.jl:16
  
BLAST+ blastn: Error During Test at /root/.julia/packages/BioTools/wXGId/test/runtests.jl:33
  Test threw exception
  Expression: typeof(blastn(na1, nucldb, db=true)) == Array{BLASTResult, 1}
  IOError: could not spawn `blastn -query /tmp/jl_ZStRf4 -db /root/.julia/packages/BioCore/YBJvb/BioFmtSpecimens/BLASTDB/f002 -outfmt 5`: no such file or directory (ENOENT)
  Stacktrace:
   [1] _spawn_primitive(::String, ::Cmd, ::Array{Any,1}) at ./process.jl:99
   [2] #554 at ./process.jl:112 [inlined]
   [3] setup_stdios(::Base.var"#554#555"{Cmd}, ::Array{Any,1}) at ./process.jl:196
   [4] _spawn at ./process.jl:111 [inlined]
   [5] #open#563(::Bool, ::Bool, ::typeof(open), ::Cmd, ::Base.DevNull) at ./process.jl:370
   [6] open at ./process.jl:361 [inlined]
   [7] open(::Cmd, ::String, ::Base.DevNull) at ./process.jl:341
   [8] read(::Cmd) at ./process.jl:410
   [9] read(::Cmd, ::Type{String}) at ./process.jl:421
   [10] #readblastXML#2(::String, ::typeof(BioTools.BLAST.readblastXML), ::Cmd) at /root/.julia/packages/BioTools/wXGId/src/blast/blastcommandline.jl:67
   [11] readblastXML at /root/.julia/packages/BioTools/wXGId/src/blast/blastcommandline.jl:67 [inlined]
   [12] #blastn#3 at /root/.julia/packages/BioTools/wXGId/src/blast/blastcommandline.jl:80 [inlined]
   [13] #blastn at ./none:0 [inlined]
   [14] #blastn#4(::Bool, ::typeof(BioTools.BLAST.blastn), ::BioSequences.BioSequence{BioSequences.DNAAlphabet{4}}, ::String, ::Array{Any,1}) at /root/.julia/packages/BioTools/wXGId/src/blast/blastcommandline.jl:100
   [15] #blastn at ./none:0 [inlined] (repeats 2 times)
   [16] top-level scope at /root/.julia/packages/BioTools/wXGId/test/runtests.jl:33
   [17] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [18] top-level scope at /root/.julia/packages/BioTools/wXGId/test/runtests.jl:16
  
BLAST+ blastn: Error During Test at /root/.julia/packages/BioTools/wXGId/test/runtests.jl:34
  Test threw exception
  Expression: typeof(blastn(na1, fna)) == Array{BLASTResult, 1}
  IOError: could not spawn `blastn -query /tmp/jl_WNXfXx -subject /root/.julia/packages/BioCore/YBJvb/BioFmtSpecimens/FASTA/f002.fasta -outfmt 5`: no such file or directory (ENOENT)
  Stacktrace:
   [1] _spawn_primitive(::String, ::Cmd, ::Array{Any,1}) at ./process.jl:99
   [2] #554 at ./process.jl:112 [inlined]
   [3] setup_stdios(::Base.var"#554#555"{Cmd}, ::Array{Any,1}) at ./process.jl:196
   [4] _spawn at ./process.jl:111 [inlined]
   [5] #open#563(::Bool, ::Bool, ::typeof(open), ::Cmd, ::Base.DevNull) at ./process.jl:370
   [6] open at ./process.jl:361 [inlined]
   [7] open(::Cmd, ::String, ::Base.DevNull) at ./process.jl:341
   [8] read(::Cmd) at ./process.jl:410
   [9] read(::Cmd, ::Type{String}) at ./process.jl:421
   [10] #readblastXML#2(::String, ::typeof(BioTools.BLAST.readblastXML), ::Cmd) at /root/.julia/packages/BioTools/wXGId/src/blast/blastcommandline.jl:67
   [11] readblastXML at /root/.julia/packages/BioTools/wXGId/src/blast/blastcommandline.jl:67 [inlined]
   [12] #blastn#3 at /root/.julia/packages/BioTools/wXGId/src/blast/blastcommandline.jl:82 [inlined]
   [13] blastn at /root/.julia/packages/BioTools/wXGId/src/blast/blastcommandline.jl:79 [inlined]
   [14] #blastn#4(::Bool, ::typeof(BioTools.BLAST.blastn), ::BioSequences.BioSequence{BioSequences.DNAAlphabet{4}}, ::String, ::Array{Any,1}) at /root/.julia/packages/BioTools/wXGId/src/blast/blastcommandline.jl:102
   [15] blastn at /root/.julia/packages/BioTools/wXGId/src/blast/blastcommandline.jl:98 [inlined] (repeats 2 times)
   [16] top-level scope at /root/.julia/packages/BioTools/wXGId/test/runtests.jl:34
   [17] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [18] top-level scope at /root/.julia/packages/BioTools/wXGId/test/runtests.jl:16
  
BLAST+ blastn: Error During Test at /root/.julia/packages/BioTools/wXGId/test/runtests.jl:35
  Test threw exception
  Expression: typeof(blastn(fna, nucldb, db=true)) == Array{BLASTResult, 1}
  IOError: could not spawn `blastn -query /root/.julia/packages/BioCore/YBJvb/BioFmtSpecimens/FASTA/f002.fasta -db /root/.julia/packages/BioCore/YBJvb/BioFmtSpecimens/BLASTDB/f002 -outfmt 5`: no such file or directory (ENOENT)
  Stacktrace:
   [1] _spawn_primitive(::String, ::Cmd, ::Array{Any,1}) at ./process.jl:99
   [2] #554 at ./process.jl:112 [inlined]
   [3] setup_stdios(::Base.var"#554#555"{Cmd}, ::Array{Any,1}) at ./process.jl:196
   [4] _spawn at ./process.jl:111 [inlined]
   [5] #open#563(::Bool, ::Bool, ::typeof(open), ::Cmd, ::Base.DevNull) at ./process.jl:370
   [6] open at ./process.jl:361 [inlined]
   [7] open(::Cmd, ::String, ::Base.DevNull) at ./process.jl:341
   [8] read(::Cmd) at ./process.jl:410
   [9] read(::Cmd, ::Type{String}) at ./process.jl:421
   [10] #readblastXML#2(::String, ::typeof(BioTools.BLAST.readblastXML), ::Cmd) at /root/.julia/packages/BioTools/wXGId/src/blast/blastcommandline.jl:67
   [11] readblastXML at /root/.julia/packages/BioTools/wXGId/src/blast/blastcommandline.jl:67 [inlined]
   [12] #blastn#3 at /root/.julia/packages/BioTools/wXGId/src/blast/blastcommandline.jl:80 [inlined]
   [13] #blastn at ./none:0 [inlined] (repeats 2 times)
   [14] top-level scope at /root/.julia/packages/BioTools/wXGId/test/runtests.jl:35
   [15] top-level scope at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
   [16] top-level scope at /root/.julia/packages/BioTools/wXGId/test/runtests.jl:16
  
Test Summary: | Error  Total
BLAST+ blastn |     6      6
ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored, 0 broken.
in expression starting at /root/.julia/packages/BioTools/wXGId/test/runtests.jl:13
ERROR: Package BioTools errored during testing
Stacktrace:
 [1] pkgerror(::String, ::Vararg{String,N} where N) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Pkg/src/Types.jl:113
 [2] #test#131(::Bool, ::Nothing, ::Cmd, ::Cmd, ::typeof(Pkg.Operations.test), ::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Pkg/src/Operations.jl:1370
 [3] #test at ./none:0 [inlined]
 [4] #test#62(::Bool, ::Nothing, ::Cmd, ::Cmd, ::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::typeof(Pkg.API.test), ::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Pkg/src/API.jl:253
 [5] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Pkg/src/API.jl:239
 [6] #test#61 at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Pkg/src/API.jl:233 [inlined]
 [7] test at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Pkg/src/API.jl:233 [inlined]
 [8] #test#60 at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Pkg/src/API.jl:232 [inlined]
 [9] test at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Pkg/src/API.jl:232 [inlined]
 [10] #test#59(::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::typeof(Pkg.API.test), ::String) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Pkg/src/API.jl:231
 [11] test(::String) at /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Pkg/src/API.jl:231
 [12] top-level scope at none:12
