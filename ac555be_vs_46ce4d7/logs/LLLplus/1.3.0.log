Running tests with Julia v1.3.0
   Cloning default registries into `~/.julia`
   Cloning registry from "https://github.com/JuliaRegistries/General.git"
[?25l    Fetching: [>                                        ]  0.0 %    Fetching: [============>                            ]  29.7 %    Fetching: [============================>            ]  68.6 %[2K[?25h     Added registry `General` to `~/.julia/registries/General`
 Resolving package versions...
 Installed Parsers â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.10
 Installed BenchmarkTools â”€ v0.4.3
 Installed LLLplus â”€â”€â”€â”€â”€â”€â”€â”€ v1.2.3
 Installed JSON â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.21.0
  Updating `~/.julia/environments/v1.3/Project.toml`
  [142c1900] + LLLplus v1.2.3
  Updating `~/.julia/environments/v1.3/Manifest.toml`
  [6e4b80f9] + BenchmarkTools v0.4.3
  [682c06a0] + JSON v0.21.0
  [142c1900] + LLLplus v1.2.3
  [69de0a69] + Parsers v0.3.10
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [de0858da] + Printf 
  [9a3f8284] + Random 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [4ec0a83e] + Unicode 
   Testing LLLplus
    Status `/tmp/jl_Ahqe50/Manifest.toml`
  [6e4b80f9] BenchmarkTools v0.4.3
  [682c06a0] JSON v0.21.0
  [142c1900] LLLplus v1.2.3
  [69de0a69] Parsers v0.3.10
  [2a0f44e3] Base64  [`@stdlib/Base64`]
  [ade2ca70] Dates  [`@stdlib/Dates`]
  [8bb1440f] DelimitedFiles  [`@stdlib/DelimitedFiles`]
  [8ba89e20] Distributed  [`@stdlib/Distributed`]
  [b77e0a4c] InteractiveUtils  [`@stdlib/InteractiveUtils`]
  [8f399da3] Libdl  [`@stdlib/Libdl`]
  [37e2e46d] LinearAlgebra  [`@stdlib/LinearAlgebra`]
  [56ddb016] Logging  [`@stdlib/Logging`]
  [d6f4376e] Markdown  [`@stdlib/Markdown`]
  [a63ad114] Mmap  [`@stdlib/Mmap`]
  [de0858da] Printf  [`@stdlib/Printf`]
  [9a3f8284] Random  [`@stdlib/Random`]
  [9e88b42a] Serialization  [`@stdlib/Serialization`]
  [6462fe0b] Sockets  [`@stdlib/Sockets`]
  [2f01184e] SparseArrays  [`@stdlib/SparseArrays`]
  [10745b16] Statistics  [`@stdlib/Statistics`]
  [8dfed614] Test  [`@stdlib/Test`]
  [4ec0a83e] Unicode  [`@stdlib/Unicode`]
tests with small matrices...
...done

In all the following tests, the first time includes the JIT compilation; 
for the second execution the compilation is already done and the time
should be faster.

Testing LLL on 1000x1000 real matrix...
  5.955188 seconds (4.15 M allocations: 677.506 MiB, 11.24% gc time)
  2.587563 seconds (206.51 k allocations: 493.032 MiB, 0.96% gc time)

Testing LLL on 10x10 complex matrix...
 12.910642 seconds (15.62 M allocations: 703.263 MiB, 5.20% gc time)
  0.036811 seconds (1.22 k allocations: 128.656 KiB)
Testing Seysen on same 10x10 complex matrix...
  3.776504 seconds (4.36 M allocations: 206.602 MiB, 4.61% gc time)
  0.011479 seconds (332 allocations: 141.875 KiB)
Testing VBLAST on same 10x10 complex matrix...
  2.364847 seconds (1.95 M allocations: 91.234 MiB, 3.22% gc time)
  0.147544 seconds (244 allocations: 122.531 KiB)
Testing Brun on real part of same 10x10 matrix...
  3.595608 seconds (3.29 M allocations: 158.167 MiB, 4.09% gc time)
  0.000151 seconds (35 allocations: 12.547 KiB)

Testing sphere decoder on 100000 samples of 3x3 BPSK system...
  2.412809 seconds (5.26 M allocations: 354.163 MiB, 4.94% gc time)
  0.612446 seconds (3.00 M allocations: 244.905 MiB, 11.41% gc time)
Error Rate is 0.0. It should be zero or very small.

Testing now with 200x200 matrix from latticechallenge.org.
The min norm of the input should be 30, min norm of the reduced bases should be smaller.
min norm of input is 30.0
  1.310880 seconds (859.61 k allocations: 361.664 MiB, 13.75% gc time)
min norm of lll-reduced basis is 29.30870177950569
  7.010215 seconds (5.15 M allocations: 1.251 GiB, 8.05% gc time)
min norm of seysen-reduced basis is 30.0
   Testing LLLplus tests passed 
