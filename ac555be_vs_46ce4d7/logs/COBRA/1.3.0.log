Julia Version 1.3.0
Commit 46ce4d7933 (2019-11-26 06:09 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-6.0.1 (ORCJIT, skylake)

   Cloning default registries into `~/.julia`
   Cloning registry from "https://github.com/JuliaRegistries/General.git"
[?25l    Fetching: [>                                        ]  0.0 %    Fetching: [============>                            ]  29.5 %    Fetching: [=========================>               ]  62.5 %[2K[?25h     Added registry `General` to `~/.julia/registries/General`
 Resolving package versions...
 Installed IniFile â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.0
 Installed URIParser â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.0
 Installed CMakeWrapper â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.2.3
 Installed Compat â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v2.2.0
 Installed Parsers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.10
 Installed BinaryProvider â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.8
 Installed CPLEX â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.6.1
 Installed COBRA â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.0
 Installed Parameters â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.12.0
 Installed MathOptInterface â”€â”€â”€â”€â”€â”€ v0.9.7
 Installed OrderedCollections â”€â”€â”€â”€ v1.1.0
 Installed BinDeps â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.0
 Installed MbedTLS â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.7.0
 Installed GLPKMathProgInterface â”€ v0.4.4
 Installed CMake â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.2
 Installed JSON â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.21.0
 Installed Blosc â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.1
 Installed MathProgBase â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.7.7
 Installed MAT â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.7.0
 Installed HDF5 â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.12.5
 Installed HTTP â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.8.8
 Installed CodecZlib â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.6.0
 Installed TranscodingStreams â”€â”€â”€â”€ v0.9.5
 Installed BenchmarkTools â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.3
 Installed BufferedStreams â”€â”€â”€â”€â”€â”€â”€ v1.0.0
 Installed GLPK â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.12.0
  Updating `~/.julia/environments/v1.3/Project.toml`
  [58298e0b] + COBRA v0.3.0
  Updating `~/.julia/environments/v1.3/Manifest.toml`
  [6e4b80f9] + BenchmarkTools v0.4.3
  [9e28174c] + BinDeps v1.0.0
  [b99e7846] + BinaryProvider v0.5.8
  [a74b3585] + Blosc v0.5.1
  [e1450e63] + BufferedStreams v1.0.0
  [631607c0] + CMake v1.1.2
  [d5fb7624] + CMakeWrapper v0.2.3
  [58298e0b] + COBRA v0.3.0
  [a076750e] + CPLEX v0.6.1
  [944b1d66] + CodecZlib v0.6.0
  [34da2185] + Compat v2.2.0
  [60bf3e95] + GLPK v0.12.0
  [3c7084bd] + GLPKMathProgInterface v0.4.4
  [f67ccb44] + HDF5 v0.12.5
  [cd3eb016] + HTTP v0.8.8
  [83e8ac13] + IniFile v0.5.0
  [682c06a0] + JSON v0.21.0
  [23992714] + MAT v0.7.0
  [b8f27783] + MathOptInterface v0.9.7
  [fdba3010] + MathProgBase v0.7.7
  [739be429] + MbedTLS v0.7.0
  [bac558e1] + OrderedCollections v1.1.0
  [d96e819e] + Parameters v0.12.0
  [69de0a69] + Parsers v0.3.10
  [3bb67fe8] + TranscodingStreams v0.9.5
  [30578b45] + URIParser v0.4.0
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
  Building CPLEX â”€â”€â”€â”€â†’ `~/.julia/packages/CPLEX/iAQQk/deps/build.log`
â”Œ Error: Error building `CPLEX`: 
â”‚ ERROR: LoadError: Unable to locate CPLEX installation. Note this must be downloaded separately. See the CPLEX.jl README for further instructions.
â”‚ Stacktrace:
â”‚  [1] error(::String) at ./error.jl:33
â”‚  [2] try_local_installation() at /home/pkgeval/.julia/packages/CPLEX/iAQQk/deps/build.jl:64
â”‚  [3] top-level scope at /home/pkgeval/.julia/packages/CPLEX/iAQQk/deps/build.jl:86
â”‚  [4] include at ./boot.jl:328 [inlined]
â”‚  [5] include_relative(::Module, ::String) at ./loading.jl:1105
â”‚  [6] include(::Module, ::String) at ./Base.jl:31
â”‚  [7] include(::String) at ./client.jl:424
â”‚  [8] top-level scope at none:5
â”‚ in expression starting at /home/pkgeval/.julia/packages/CPLEX/iAQQk/deps/build.jl:77
â”” @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.3/Pkg/src/backwards_compatible_isolation.jl:649
  Building MbedTLS â”€â”€â†’ `~/.julia/packages/MbedTLS/a1JFn/deps/build.log`
  Building CMake â”€â”€â”€â”€â†’ `~/.julia/packages/CMake/nSK2r/deps/build.log`
  Building Blosc â”€â”€â”€â”€â†’ `~/.julia/packages/Blosc/lzFr0/deps/build.log`
  Building HDF5 â”€â”€â”€â”€â”€â†’ `~/.julia/packages/HDF5/Zh9on/deps/build.log`
  Building CodecZlib â†’ `~/.julia/packages/CodecZlib/5t9zO/deps/build.log`
  Building GLPK â”€â”€â”€â”€â”€â†’ `~/.julia/packages/GLPK/J1b5G/deps/build.log`
   Testing COBRA
 Resolving package versions...
    Status `/tmp/jl_tL0s1n/Manifest.toml`
  [6e4b80f9] BenchmarkTools v0.4.3
  [9e28174c] BinDeps v1.0.0
  [b99e7846] BinaryProvider v0.5.8
  [a74b3585] Blosc v0.5.1
  [e1450e63] BufferedStreams v1.0.0
  [631607c0] CMake v1.1.2
  [d5fb7624] CMakeWrapper v0.2.3
  [58298e0b] COBRA v0.3.0
  [a076750e] CPLEX v0.6.1
  [944b1d66] CodecZlib v0.6.0
  [34da2185] Compat v2.2.0
  [60bf3e95] GLPK v0.12.0
  [3c7084bd] GLPKMathProgInterface v0.4.4
  [f67ccb44] HDF5 v0.12.5
  [cd3eb016] HTTP v0.8.8
  [83e8ac13] IniFile v0.5.0
  [682c06a0] JSON v0.21.0
  [23992714] MAT v0.7.0
  [b8f27783] MathOptInterface v0.9.7
  [fdba3010] MathProgBase v0.7.7
  [739be429] MbedTLS v0.7.0
  [bac558e1] OrderedCollections v1.1.0
  [d96e819e] Parameters v0.12.0
  [69de0a69] Parsers v0.3.10
  [3bb67fe8] TranscodingStreams v0.9.5
  [30578b45] URIParser v0.4.0
  [2a0f44e3] Base64  [`@stdlib/Base64`]
  [ade2ca70] Dates  [`@stdlib/Dates`]
  [8bb1440f] DelimitedFiles  [`@stdlib/DelimitedFiles`]
  [8ba89e20] Distributed  [`@stdlib/Distributed`]
  [b77e0a4c] InteractiveUtils  [`@stdlib/InteractiveUtils`]
  [76f85450] LibGit2  [`@stdlib/LibGit2`]
  [8f399da3] Libdl  [`@stdlib/Libdl`]
  [37e2e46d] LinearAlgebra  [`@stdlib/LinearAlgebra`]
  [56ddb016] Logging  [`@stdlib/Logging`]
  [d6f4376e] Markdown  [`@stdlib/Markdown`]
  [a63ad114] Mmap  [`@stdlib/Mmap`]
  [44cfe95a] Pkg  [`@stdlib/Pkg`]
  [de0858da] Printf  [`@stdlib/Printf`]
  [3fa0cd96] REPL  [`@stdlib/REPL`]
  [9a3f8284] Random  [`@stdlib/Random`]
  [ea8e919c] SHA  [`@stdlib/SHA`]
  [9e88b42a] Serialization  [`@stdlib/Serialization`]
  [1a1011a3] SharedArrays  [`@stdlib/SharedArrays`]
  [6462fe0b] Sockets  [`@stdlib/Sockets`]
  [2f01184e] SparseArrays  [`@stdlib/SparseArrays`]
  [10745b16] Statistics  [`@stdlib/Statistics`]
  [8dfed614] Test  [`@stdlib/Test`]
  [cf7118a7] UUIDs  [`@stdlib/UUIDs`]
  [4ec0a83e] Unicode  [`@stdlib/Unicode`]
ERROR: LoadError: CPLEX not properly installed. Please run Pkg.build("CPLEX")
Stacktrace:
 [1] error(::String) at ./error.jl:33
 [2] top-level scope at /home/pkgeval/.julia/packages/CPLEX/iAQQk/src/CPLEX.jl:13
 [3] include at ./boot.jl:328 [inlined]
 [4] include_relative(::Module, ::String) at ./loading.jl:1105
 [5] include(::Module, ::String) at ./Base.jl:31
 [6] top-level scope at none:2
 [7] eval at ./boot.jl:330 [inlined]
 [8] eval(::Expr) at ./client.jl:425
 [9] top-level scope at ./none:3
in expression starting at /home/pkgeval/.julia/packages/CPLEX/iAQQk/src/CPLEX.jl:10

 >> Checking the system's configuration ...

GLPKMathProgInterface is installed.
Package Gurobi is not installed. In order to use Gurobi, you must first run `Pkg.add("Gurobi")`
ERROR: LoadError: CPLEX not properly installed. Please run Pkg.build("CPLEX")
Stacktrace:
 [1] error(::String) at ./error.jl:33
 [2] top-level scope at /home/pkgeval/.julia/packages/CPLEX/iAQQk/src/CPLEX.jl:13
 [3] include at ./boot.jl:328 [inlined]
 [4] include_relative(::Module, ::String) at ./loading.jl:1105
 [5] include(::Module, ::String) at ./Base.jl:31
 [6] top-level scope at none:2
 [7] eval at ./boot.jl:330 [inlined]
 [8] eval(::Expr) at ./client.jl:425
 [9] top-level scope at ./none:3
in expression starting at /home/pkgeval/.julia/packages/CPLEX/iAQQk/src/CPLEX.jl:10
Package CPLEX is not installed. In order to use CPLEX, you must first run `Pkg.add("CPLEX")`

 >> Done. 1 solvers are installed and ready to use.
[ Info: Parallel version - Connecting the 4 workers ...
4 local workers are connected. (+1) on host: 27f1562705b5
Downloading the ecoli_core model ...Done.
â”Œ Warning: The MATLAB package is not present. The tests for PALM.jl will not be run.
â”” @ Main ~/.julia/packages/COBRA/fOo2U/test/runtests.jl:97
 > Testing GLPKMathProgInterface ... Done.
 > Testing CPLEX ... Not supported.
 > Testing Gurobi ... Not supported.


 -- Running 13 tests using the GLPKMathProgInterface solver. -- 


Running s_all.jl ...

[ Info: The ecoli_core model already exists.
[ Info: The model named model loaded from /home/pkgeval/.julia/packages/COBRA/fOo2U/src/../test/ecoli_core_model.mat is a uncoupled model.
[ Info: The model objective is set to be maximized.
[ Info: All constraints assumed equality constaints.

 >> Size of stoichiometric matrix: (72, 95)

preFBA! [osenseStr = max]: FBAobj = 0.8739215069685174, optPercentage = 90.0, objValue = optPercentage * FBAobj = 0.7865289, norm(fbaSol) = 106.8373155300231.

Original FBA solved. Solution time: 3.1218690872192383 s.

 >> All 95 reactions of the model will be solved (100 %).

 -- Minimization (iRound = 0). Block 1 [95/95].
 -- Maximization (iRound = 1). Block 1 [95/95].
Saving minFlux (T:> Array{Float64,1}) ...Done.
Saving maxFlux (T:> Array{Float64,1}) ...Done.
Saving optSol (T:> Float64) ...Done.
Saving fbaSol (T:> Array{Float64,1}) ...Done.
Saving fvamin (T:> Array{Float64,2}) ...Done.
Saving fvamax (T:> Array{Float64,2}) ...Done.
Saving statussolmin (T:> Array{Float64,1}) ...Done.
Saving statussolmax (T:> Array{Float64,1}) ...Done.
Saving rxnsList (T:> UnitRange{Int64}) ...Done.
All available variables saved to testFile.mat.

-- Solution summary --

/home/pkgeval/.julia/packages/COBRA/fOo2U/test/s_all.jl
 Original FBA obj.val         0.8739215069685174
 Maximum of maxFlux:          1000.0
 Minimum of maxFlux:          -20.93588573353488
 Maximum of minFlux:          35.98482480548924
 Minimum of minFlux:          -32.258260515219455
 Norm of maxFlux:             1427.0738873421458
 Norm of minFlux:             93.66619388260854
 Solution time [s]:           9.142964839935303
 Number of workers:           1
 Solver:                      GLPKMathProgInterface
 Distribution strategy:       0
 Saving individual files:     false


Running s_core.jl ...

[ Info: The ecoli_core model already exists.
[ Info: The model named model loaded from /home/pkgeval/.julia/packages/COBRA/fOo2U/src/../test/ecoli_core_model.mat is a uncoupled model.
[ Info: The model objective is set to be maximized.
[ Info: All constraints assumed equality constaints.

 >> Size of stoichiometric matrix: (72, 95)

preFBA! [osenseStr = max]: FBAobj = 0.8739215069685174, optPercentage = 90.0, objValue = optPercentage * FBAobj = 0.7865289, norm(fbaSol) = 106.8373155300231.

Original FBA solved. Solution time: 0.0019369125366210938 s.

 >> All 95 reactions of the model will be solved (100 %).

 -- Minimization (iRound = 0). Block 1 [95/95].
 -- Maximization (iRound = 1). Block 1 [95/95].
Saving minFlux (T:> Array{Float64,1}) ...Done.
Saving maxFlux (T:> Array{Float64,1}) ...Done.
Saving optSol (T:> Float64) ...Done.
Saving fbaSol (T:> Array{Float64,1}) ...Done.
Saving fvamin (T:> Array{Float64,2}) ...Done.
Saving fvamax (T:> Array{Float64,2}) ...Done.
Saving statussolmin (T:> Array{Float64,1}) ...Done.
Saving statussolmax (T:> Array{Float64,1}) ...Done.
Saving rxnsList (T:> UnitRange{Int64}) ...Done.
All available variables saved to testFile.mat.
[ Info: The model named modelCoupled loaded from modelCoupled.mat is a coupled model.
[ Info: The model objective is set to be maximized.
[ Info: The model named modelCoupled loaded from modelCoupled.mat is a coupled model.
[ Info: The model objective is set to be maximized.

-- Solution summary --

/home/pkgeval/.julia/packages/COBRA/fOo2U/test/s_core.jl
 Original FBA obj.val         0.8739215069685174
 Maximum of maxFlux:          1000.0
 Minimum of maxFlux:          -20.93588573353488
 Maximum of minFlux:          35.98482480548924
 Minimum of minFlux:          -32.258260515219455
 Norm of maxFlux:             1427.0738873421458
 Norm of minFlux:             93.66619388260854
 Solution time [s]:           0.2016599178314209
 Number of workers:           1
 Solver:                      GLPKMathProgInterface
 Distribution strategy:       0
 Saving individual files:     false


Running s_distinct.jl ...

[ Info: The ecoli_core model already exists.
[ Info: The model named model loaded from /home/pkgeval/.julia/packages/COBRA/fOo2U/src/../test/ecoli_core_model.mat is a uncoupled model.
[ Info: The model objective is set to be maximized.
[ Info: All constraints assumed equality constaints.

 >> Size of stoichiometric matrix: (72, 95)

preFBA! [osenseStr = max]: FBAobj = 0.8739215069685174, optPercentage = 90.0, objValue = optPercentage * FBAobj = 0.7865289, norm(fbaSol) = 106.8373155300231.

Original FBA solved. Solution time: 0.002415895462036133 s.

 >> All 95 reactions of the model will be solved (100 %).

 -- Minimization (iRound = 0). Block 1 [95/95].
 -- Maximization (iRound = 1). Block 1 [95/95].

 >> Size of stoichiometric matrix: (73, 95)

preFBA! [osenseStr = max]: FBAobj = 0.8739215069685877, optPercentage = 90.0, objValue = optPercentage * FBAobj = 0.7865289, norm(fbaSol) = 106.83731553002139.

Original FBA solved. Solution time: 0.0021851062774658203 s.

 >> Only 17 reactions of 95 will be solved (~ 17.894736842105264 %).

 -- Minimization (iRound = 0). Block 1 [17/95].
 -- Maximization (iRound = 1). Block 1 [17/95].

 >> Size of stoichiometric matrix: (74, 95)

preFBA! [osenseStr = max]: FBAobj = 0.8739215069685877, optPercentage = 90.0, objValue = optPercentage * FBAobj = 0.7865289, norm(fbaSol) = 106.83731553002139.

Original FBA solved. Solution time: 0.0015139579772949219 s.

 >> Only 17 reactions of 95 will be solved (~ 17.894736842105264 %).

 -- Minimization (iRound = 0). Block 1 [17/95].
 -- Maximization (iRound = 1). Block 1 [17/95].
Saving minFlux (T:> Array{Float64,1}) ...Done.
Saving maxFlux (T:> Array{Float64,1}) ...Done.
Saving optSol (T:> Float64) ...Done.
Saving fbaSol (T:> Array{Float64,1}) ...Done.
Saving fvamin (T:> Array{Float64,2}) ...Done.
Saving fvamax (T:> Array{Float64,2}) ...Done.
Saving statussolmin (T:> Array{Float64,1}) ...Done.
Saving statussolmax (T:> Array{Float64,1}) ...Done.
Saving rxnsList (T:> Array{Int64,1}) ...Done.
All available variables saved to testFile.mat.

-- Solution summary --

/home/pkgeval/.julia/packages/COBRA/fOo2U/test/s_distinct.jl
 Original FBA obj.val         0.8739215069685877
 Maximum of maxFlux:          26.528869396061772
 Minimum of maxFlux:          -9.04660613349818
 Maximum of minFlux:          15.206494614374979
 Minimum of minFlux:          -10.0
 Norm of maxFlux:             37.02464689379309
 Norm of minFlux:             22.00443371346725
 Solution time [s]:           0.1555318832397461
 Number of workers:           1
 Solver:                      GLPKMathProgInterface
 Distribution strategy:       0
 Saving individual files:     false


Running s_fba.jl ...

[ Info: The ecoli_core model already exists.
[ Info: The model named model loaded from /home/pkgeval/.julia/packages/COBRA/fOo2U/src/../test/ecoli_core_model.mat is a uncoupled model.
[ Info: The model objective is set to be maximized.
[ Info: All constraints assumed equality constaints.
â”Œ Warning: The value of optPercentage is > 0%, but preFBA = false. Set preFBA = true in order to take optPercentage into account.
â”‚ 
â”” @ COBRA ~/.julia/packages/COBRA/fOo2U/src/distributedFBA.jl:547
Original FBA. No additional constraints have been added.
 >> Only 1 reaction of 95 will be solved (~ 1.0526315789473684 %).

 -- Maximization (iRound = 1). Block 1 [1/95].

-- Solution summary --

/home/pkgeval/.julia/packages/COBRA/fOo2U/test/s_fba.jl
 Maximum of maxFlux:          0.8739215069685174
 Minimum of maxFlux:          0.0
 Maximum of minFlux:          0.0
 Minimum of minFlux:          0.0
 Norm of maxFlux:             0.8739215069685174
 Norm of minFlux:             0.0
 Solution time [s]:           1.4223878383636475
 Number of workers:           1
 Solver:                      GLPKMathProgInterface
 Distribution strategy:       0
 Saving individual files:     false

â”Œ Warning: The value of optPercentage is > 0%, but preFBA = false. Set preFBA = true in order to take optPercentage into account.
â”‚ 
â”” @ COBRA ~/.julia/packages/COBRA/fOo2U/src/distributedFBA.jl:547
Original FBA. No additional constraints have been added.
 >> Only 1 reaction of 95 will be solved (~ 1.0526315789473684 %).

 -- Maximization (iRound = 1). Block 1 [1/95].

-- Solution summary --

/home/pkgeval/.julia/packages/COBRA/fOo2U/test/s_fba.jl
 Maximum of maxFlux:          0.8739215069685174
 Minimum of maxFlux:          0.0
 Maximum of minFlux:          0.0
 Minimum of minFlux:          0.0
 Norm of maxFlux:             0.8739215069685174
 Norm of minFlux:             0.0
 Solution time [s]:           0.002774953842163086
 Number of workers:           1
 Solver:                      GLPKMathProgInterface
 Distribution strategy:       0
 Saving individual files:     false

Original FBA. No additional constraints have been added.
â”Œ Warning: The value of optPercentage is > 0%, but preFBA = false. Set preFBA = true in order to take optPercentage into account.
â”‚ 
â”” @ COBRA ~/.julia/packages/COBRA/fOo2U/src/distributedFBA.jl:547
 >> Only 1 reaction of 95 will be solved (~ 1.0526315789473684 %).

 -- Maximization (iRound = 1). Block 1 [1/95].

-- Solution summary --

/home/pkgeval/.julia/packages/COBRA/fOo2U/test/s_fba.jl
 Maximum of maxFlux:          0.8739215069685174
 Minimum of maxFlux:          0.0
 Maximum of minFlux:          0.0
 Minimum of minFlux:          0.0
 Norm of maxFlux:             0.8739215069685174
 Norm of minFlux:             0.0
 Solution time [s]:           0.002460956573486328
 Number of workers:           1
 Solver:                      GLPKMathProgInterface
 Distribution strategy:       0
 Saving individual files:     false

Original FBA. No additional constraints have been added.
 >> Only 1 reaction of 95 will be solved (~ 1.0526315789473684 %).

 -- Maximization (iRound = 1). Block 1 [1/95].

-- Solution summary --

/home/pkgeval/.julia/packages/COBRA/fOo2U/test/s_fba.jl
 Maximum of maxFlux:          0.8739215069685174
 Minimum of maxFlux:          0.0
 Maximum of minFlux:          0.0
 Minimum of minFlux:          0.0
 Norm of maxFlux:             0.8739215069685174
 Norm of minFlux:             0.0
 Solution time [s]:           0.03854703903198242
 Number of workers:           1
 Solver:                      GLPKMathProgInterface
 Distribution strategy:       0
 Saving individual files:     false

Original FBA. No additional constraints have been added.
 >> Only 1 reaction of 95 will be solved (~ 1.0526315789473684 %).

Saving minFlux (T:> Array{Float64,1}) ...Done.
Saving maxFlux (T:> Array{Float64,1}) ...Done.
Saving optSol (T:> Float64) ...Done.
Saving fbaSol (T:> Array{Float64,1}) ...Done.
Saving fvamin (T:> Array{Float64,2}) ...Done.
Saving fvamax (T:> Array{Float64,2}) ...Done.
Saving statussolmin (T:> Array{Float64,1}) ...Done.
Saving statussolmax (T:> Array{Float64,1}) ...Done.
Saving rxnsList (T:> Int64) ...Done.
All available variables saved to testFile.mat.

-- Solution summary --

/home/pkgeval/.julia/packages/COBRA/fOo2U/test/s_fba.jl
 Maximum of maxFlux:          0.0
 Minimum of maxFlux:          0.0
 Maximum of minFlux:          0.0
 Minimum of minFlux:          0.0
 Norm of maxFlux:             0.0
 Norm of minFlux:             0.0
 Solution time [s]:           0.004252910614013672
 Number of workers:           1
 Solver:                      GLPKMathProgInterface
 Distribution strategy:       0
 Saving individual files:     false


Running s_tools.jl ...

[ Info: The model named model loaded from /home/pkgeval/.julia/packages/COBRA/fOo2U/src/../test/ecoli_core_model.mat is a uncoupled model.
[ Info: The model objective is set to be maximized.
[ Info: All constraints assumed equality constaints.
â”Œ Warning: Some reaction names are not in the model; their indices in the `rxnsList` are reported in `rxnIDsNE`.
â”” @ COBRA ~/.julia/packages/COBRA/fOo2U/src/tools.jl:88

Running z_all.jl ...

[ Info: The ecoli_core model already exists.

>> The following tests throw warning messages for testing purposes. <<

[ Info: Sequential version - Depending on the model size, expect long execution times.
Loading SSH connection details from /home/pkgeval/.julia/packages/COBRA/fOo2U/src/../config/sshCfg.jl ...Done.
[ Info: Parallel version - Connecting the 56 workers ...
[ Info: Connecting SSH nodes ...
 >> Connecting 8 workers on first.last@server1.com
[ Info: Parallel version - Connecting the 4 workers ...
4 workers already connected. No further workers to connect.
[ Info: Parallel version - Connecting the 2 workers ...
2 workers already connected. No further workers to connect.
[ Info: The model named model loaded from /home/pkgeval/.julia/packages/COBRA/fOo2U/src/../test/ecoli_core_model.mat is a uncoupled model.
[ Info: The model objective is set to be maximized.
[ Info: All constraints assumed equality constaints.
â”Œ Warning: The value of optPercentage is > 0%, but preFBA = false. Set preFBA = true in order to take optPercentage into account.
â”‚ 
â”” @ COBRA ~/.julia/packages/COBRA/fOo2U/src/distributedFBA.jl:547
Original FBA. No additional constraints have been added.
â”Œ Warning: The `rxnsList` has more reactions than in the model. `rxnsList` shorted to the maximum number of reactions.
â”” @ COBRA ~/.julia/packages/COBRA/fOo2U/src/distributedFBA.jl:637
 >> Only 96 reactions of 95 will be solved (~ 101.05263157894737 %).

 -- Minimization (iRound = 0). Block 1 [95/95].
 -- Maximization (iRound = 1). Block 1 [95/95].

 >> Size of stoichiometric matrix: (72, 95)

preFBA! [osenseStr = min]: FBAobj = 0.8739215069685174, optPercentage = 90.0, objValue = optPercentage * FBAobj = 0.7865298, norm(fbaSol) = 106.8373155300231.


 >> Size of stoichiometric matrix: (73, 95)

No objective set (`c` is zero). objValue and fbaSol not defined. optPercentage = 90.0.

[ Info: The model named model loaded from /home/pkgeval/.julia/packages/COBRA/fOo2U/src/../test/ecoli_core_model.mat is a uncoupled model.
[ Info: The model objective is set to be maximized.
[ Info: All constraints assumed equality constaints.
 -- Minimization (iRound = 0). Block 1 [1/2].
[ Info: The model named modelTest loaded from /home/pkgeval/.julia/packages/COBRA/fOo2U/src/../test/testData.mat is a uncoupled model.
 -- Maximization (iRound = 1). Block 1 [1/2].

 >> Note: Warnings above are thrown for testing purposes and can be safely ignored.

 -- All tests passed. -- 

   Testing COBRA tests passed 
