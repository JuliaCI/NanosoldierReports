Running tests with Julia v1.3.0
   Cloning default registries into `~/.julia`
   Cloning registry from "https://github.com/JuliaRegistries/General.git"
[?25l    Fetching: [>                                        ]  0.0 %    Fetching: [==============>                          ]  34.1 %    Fetching: [=================================>       ]  81.7 %[2K[?25h     Added registry `General` to `~/.julia/registries/General`
 Resolving package versions...
 Installed Compat â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v2.2.0
 Installed Parsers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.10
 Installed FFTW â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.0
 Installed StaticArrays â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.12.1
 Installed BinaryProvider â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.8
 Installed ProximalOperators â”€â”€â”€â”€â”€â”€ v0.10.3
 Installed AbstractOperators â”€â”€â”€â”€â”€â”€ v0.2.2
 Installed StructuredOptimization â”€ v0.2.3
 Installed OrderedCollections â”€â”€â”€â”€â”€ v1.1.0
 Installed Adapt â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.0
 Installed RecipesBase â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.7.0
 Installed Polynomials â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.6.0
 Installed JSON â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.21.0
 Installed SpecialFunctions â”€â”€â”€â”€â”€â”€â”€ v0.9.0
 Installed MathOptInterface â”€â”€â”€â”€â”€â”€â”€ v0.9.7
 Installed DSP â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.6.2
 Installed Conda â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.3.0
 Installed ArrayInterface â”€â”€â”€â”€â”€â”€â”€â”€â”€ v2.0.0
 Installed OpenSpecFun_jll â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.3+1
 Installed OSQP â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.6.0
 Installed ProximalAlgorithms â”€â”€â”€â”€â”€ v0.3.1
 Installed VersionParsing â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.3
 Installed Requires â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.2
 Installed MathProgBase â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.7.7
 Installed Reexport â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.2.0
 Installed RecursiveArrayTools â”€â”€â”€â”€ v1.2.0
 Installed BenchmarkTools â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.3
 Installed TSVD â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.0
 Installed IterativeSolvers â”€â”€â”€â”€â”€â”€â”€ v0.8.1
 Installed AbstractFFTs â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.0
  Updating `~/.julia/environments/v1.3/Project.toml`
  [46cd3e9d] + StructuredOptimization v0.2.3
  Updating `~/.julia/environments/v1.3/Manifest.toml`
  [621f4979] + AbstractFFTs v0.5.0
  [d9c5613a] + AbstractOperators v0.2.2
  [79e6a3ab] + Adapt v1.0.0
  [4fba245c] + ArrayInterface v2.0.0
  [6e4b80f9] + BenchmarkTools v0.4.3
  [b99e7846] + BinaryProvider v0.5.8
  [34da2185] + Compat v2.2.0
  [8f4d0f93] + Conda v1.3.0
  [717857b8] + DSP v0.6.2
  [7a1cc6ca] + FFTW v1.1.0
  [42fd0dbc] + IterativeSolvers v0.8.1
  [682c06a0] + JSON v0.21.0
  [b8f27783] + MathOptInterface v0.9.7
  [fdba3010] + MathProgBase v0.7.7
  [ab2f91bb] + OSQP v0.6.0
  [efe28fd5] + OpenSpecFun_jll v0.5.3+1
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [f27b6e38] + Polynomials v0.6.0
  [140ffc9f] + ProximalAlgorithms v0.3.1
  [a725b495] + ProximalOperators v0.10.3
  [3cdcf5f2] + RecipesBase v0.7.0
  [731186ca] + RecursiveArrayTools v1.2.0
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v0.5.2
  [276daf66] + SpecialFunctions v0.9.0
  [90137ffa] + StaticArrays v0.12.1
  [46cd3e9d] + StructuredOptimization v0.2.3
  [9449cd9e] + TSVD v0.4.0
  [81def892] + VersionParsing v1.1.3
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [4607b0f0] + SuiteSparse 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
  Building Conda â†’ `~/.julia/packages/Conda/kLXeC/deps/build.log`
  Building FFTW â”€â†’ `~/.julia/packages/FFTW/loJ3F/deps/build.log`
  Building OSQP â”€â†’ `~/.julia/packages/OSQP/BU4WO/deps/build.log`
   Testing StructuredOptimization
 Resolving package versions...
    Status `/tmp/jl_1QTRim/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [d9c5613a] AbstractOperators v0.2.2
  [79e6a3ab] Adapt v1.0.0
  [4fba245c] ArrayInterface v2.0.0
  [6e4b80f9] BenchmarkTools v0.4.3
  [b99e7846] BinaryProvider v0.5.8
  [34da2185] Compat v2.2.0
  [8f4d0f93] Conda v1.3.0
  [717857b8] DSP v0.6.2
  [7a1cc6ca] FFTW v1.1.0
  [42fd0dbc] IterativeSolvers v0.8.1
  [682c06a0] JSON v0.21.0
  [b8f27783] MathOptInterface v0.9.7
  [fdba3010] MathProgBase v0.7.7
  [ab2f91bb] OSQP v0.6.0
  [efe28fd5] OpenSpecFun_jll v0.5.3+1
  [bac558e1] OrderedCollections v1.1.0
  [69de0a69] Parsers v0.3.10
  [f27b6e38] Polynomials v0.6.0
  [140ffc9f] ProximalAlgorithms v0.3.1
  [a725b495] ProximalOperators v0.10.3
  [3cdcf5f2] RecipesBase v0.7.0
  [731186ca] RecursiveArrayTools v1.2.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v0.5.2
  [276daf66] SpecialFunctions v0.9.0
  [90137ffa] StaticArrays v0.12.1
  [46cd3e9d] StructuredOptimization v0.2.3
  [9449cd9e] TSVD v0.4.0
  [81def892] VersionParsing v1.1.3
  [2a0f44e3] Base64  [`@stdlib/Base64`]
  [ade2ca70] Dates  [`@stdlib/Dates`]
  [8bb1440f] DelimitedFiles  [`@stdlib/DelimitedFiles`]
  [8ba89e20] Distributed  [`@stdlib/Distributed`]
  [b77e0a4c] InteractiveUtils  [`@stdlib/InteractiveUtils`]
  [76f85450] LibGit2  [`@stdlib/LibGit2`]
  [8f399da3] Libdl  [`@stdlib/Libdl`]
  [37e2e46d] LinearAlgebra  [`@stdlib/LinearAlgebra`]
  [56ddb016] Logging  [`@stdlib/Logging`]
  [d6f4376e] Markdown  [`@stdlib/Markdown`]
  [a63ad114] Mmap  [`@stdlib/Mmap`]
  [44cfe95a] Pkg  [`@stdlib/Pkg`]
  [de0858da] Printf  [`@stdlib/Printf`]
  [3fa0cd96] REPL  [`@stdlib/REPL`]
  [9a3f8284] Random  [`@stdlib/Random`]
  [ea8e919c] SHA  [`@stdlib/SHA`]
  [9e88b42a] Serialization  [`@stdlib/Serialization`]
  [1a1011a3] SharedArrays  [`@stdlib/SharedArrays`]
  [6462fe0b] Sockets  [`@stdlib/Sockets`]
  [2f01184e] SparseArrays  [`@stdlib/SparseArrays`]
  [10745b16] Statistics  [`@stdlib/Statistics`]
  [4607b0f0] SuiteSparse  [`@stdlib/SuiteSparse`]
  [8dfed614] Test  [`@stdlib/Test`]
  [cf7118a7] UUIDs  [`@stdlib/UUIDs`]
  [4ec0a83e] Unicode  [`@stdlib/Unicode`]

Testing variables


Testing linear expressions


Testing AbstractOperators binding


Testing cost terms


Testing extraction from Terms


Testing splitting Terms


Testing extracting Proximable functions


Testing @minimize 


Testing @minimize nonlinear 

Testing: regularized least squares, with two variable blocks to make things weird
  5.694195 seconds (11.00 M allocations: 349.160 MiB, 7.34% gc time)
  2.598727 seconds (2.78 M allocations: 119.389 MiB, 4.08% gc time)
  3.009929 seconds (3.13 M allocations: 132.355 MiB, 2.97% gc time)
  0.036953 seconds (349.74 k allocations: 6.824 MiB)
Testing: lasso problem with known solution
  0.852683 seconds (51.74 k allocations: 3.117 MiB)
  0.324650 seconds (74.19 k allocations: 4.818 MiB)
  1.941215 seconds (1.24 M allocations: 59.128 MiB, 3.66% gc time)
  0.179343 seconds (833 allocations: 365.406 KiB)
Testing: problem with smooth, non-quadratic term
  8.180145 seconds (2.08 M allocations: 126.838 MiB, 2.75% gc time)
  7.064885 seconds (32.28 k allocations: 19.427 MiB)
  2.657198 seconds (1.27 M allocations: 62.040 MiB, 3.40% gc time)
  2.022286 seconds (1.39 M allocations: 69.202 MiB, 4.58% gc time)
â”Œ Warning: parameter `gamma` became too small (7.092001659840556e-8), stopping the iterations
â”” @ ProximalAlgorithms ~/.julia/packages/ProximalAlgorithms/CBRo1/src/algorithms/panoc.jl:98
  0.776643 seconds (344.06 k allocations: 19.431 MiB)
Testing: box-constrained least-squares
  2.328679 seconds (1.60 M allocations: 82.500 MiB, 2.81% gc time)
  1.431167 seconds (2.75 k allocations: 3.881 MiB)
  2.391730 seconds (1.26 M allocations: 60.649 MiB, 7.10% gc time)
  2.691681 seconds (1.46 M allocations: 70.146 MiB, 2.77% gc time)
  0.499395 seconds (1.14 k allocations: 1.100 MiB)
Testing: non-negative least-squares from a known solution
  0.239938 seconds (1.78 k allocations: 2.062 MiB)
  0.114577 seconds (2.38 k allocations: 3.335 MiB)
  0.008420 seconds (406 allocations: 340.422 KiB)
  0.010925 seconds (876 allocations: 886.016 KiB)
  0.013984 seconds (904 allocations: 886.578 KiB)
Test Summary:          | Pass  Total
StructuredOptimization |  397    397
   Testing StructuredOptimization tests passed 
