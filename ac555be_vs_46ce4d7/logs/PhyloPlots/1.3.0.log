Julia Version 1.3.0
Commit 46ce4d7933 (2019-11-26 06:09 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-6.0.1 (ORCJIT, skylake)

   Cloning default registries into `~/.julia`
   Cloning registry from "https://github.com/JuliaRegistries/General.git"
[?25l    Fetching: [>                                        ]  0.0 %    Fetching: [=============>                           ]  31.6 %    Fetching: [==================================>      ]  83.1 %[2K[?25h     Added registry `General` to `~/.julia/registries/General`
 Resolving package versions...
 Installed Ratios â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.1
 Installed KernelDensity â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.1
 Installed URIParser â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.0
 Installed SortingAlgorithms â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.1
 Installed Arpack â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.0
 Installed DiffResults â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.0.4
 Installed PhyloPlots â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.2.1
 Installed BufferedStreams â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.0
 Installed DataStructures â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.17.6
 Installed YAML â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.2
 Installed AxisAlgorithms â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.0
 Installed Juno â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.7.2
 Installed LazyArrays â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.14.10
 Installed LineSearches â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v7.0.1
 Installed StaticArrays â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.12.1
 Installed FFTW â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.0
 Installed Compose â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.7.3
 Installed QuadGK â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v2.2.0
 Installed CategoricalArrays â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.7.3
 Installed Compat â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v2.2.0
 Installed InvertedIndices â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.0
 Installed StatsFuns â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.9.2
 Installed BinaryProvider â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.8
 Installed Parsers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.10
 Installed CSV â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.18
 Installed DocStringExtensions â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.8.1
 Installed WinReg â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.1
 Installed NLSolversBase â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v7.5.0
 Installed IterTools â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.3.0
 Installed Missings â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.3
 Installed MacroTools â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.3
 Installed Hexagons â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.2.0
 Installed Distributions â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.21.11
 Installed Rmath â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.6.0
 Installed Combinatorics â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.7.0
 Installed NLopt â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.1
 Installed IndexableBitVectors â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.0
 Installed TableTraits â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.0
 Installed Loess â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.0
 Installed CMakeWrapper â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.2.3
 Installed OrderedCollections â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.0
 Installed PositiveFactorizations â”€â”€â”€â”€â”€â”€ v0.2.3
 Installed Parameters â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.12.0
 Installed FixedPointNumbers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.6.1
 Installed BioSequences â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.0
 Installed Showoff â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.1
 Installed SpecialFunctions â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.9.0
 Installed OpenBLAS_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.7+1
 Installed IndirectArrays â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.0
 Installed ArrayLayouts â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.1.5
 Installed Arpack_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v3.5.0+2
 Installed CommonSubexpressions â”€â”€â”€â”€â”€â”€â”€â”€ v0.2.0
 Installed Gadfly â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.1
 Installed BinDeps â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.0
 Installed ColorTypes â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.8.0
 Installed JSON â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.21.0
 Installed RecipesBase â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.7.0
 Installed DataAPI â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.0
 Installed Interpolations â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.12.5
 Installed RCall â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.13.4
 Installed Distances â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.8.2
 Installed Codecs â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.0
 Installed ShiftedArrays â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.0
 Installed Tables â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.2.11
 Installed Automa â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.8.0
 Installed NaNMath â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.3
 Installed Polynomials â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.6.0
 Installed ForwardDiff â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.10.7
 Installed PhyloNetworks â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.11.0
 Installed DataValueInterfaces â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.0
 Installed CMake â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.2
 Installed DiffEqDiffTools â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.5.0
 Installed IntervalTrees â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.0
 Installed StatsModels â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.6.7
 Installed Optim â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.19.6
 Installed DiffRules â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.1.0
 Installed OpenSpecFun_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.3+1
 Installed Colors â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.9.6
 Installed Calculus â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.1
 Installed Conda â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.3.0
 Installed ArrayInterface â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v2.0.0
 Installed VersionParsing â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.3
 Installed GLM â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.3.5
 Installed MathProgBase â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.7.7
 Installed FilePathsBase â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.7.0
 Installed Measures â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.0
 Installed Contour â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.1
 Installed Requires â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.2
 Installed IteratorInterfaceExtensions â”€ v1.0.0
 Installed WeakRefStrings â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.6.1
 Installed PooledArrays â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.2
 Installed DataFrames â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.19.4
 Installed Media â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.0
 Installed Twiddle â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.1
 Installed OffsetArrays â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.11.2
 Installed Reexport â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.2.0
 Installed FillArrays â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.8.2
 Installed TranscodingStreams â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.9.5
 Installed PDMats â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.9.10
 Installed WoodburyMatrices â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.1
 Installed CoupledFields â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.1.0
 Installed BioCore â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v2.0.5
 Installed AbstractFFTs â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.0
 Installed StatsBase â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.32.0
 Installed BioSymbols â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v3.1.0
  Updating `~/.julia/environments/v1.3/Project.toml`
  [c0d5b6db] + PhyloPlots v0.2.1
  Updating `~/.julia/environments/v1.3/Manifest.toml`
  [621f4979] + AbstractFFTs v0.5.0
  [7d9fca2a] + Arpack v0.4.0
  [68821587] + Arpack_jll v3.5.0+2
  [4fba245c] + ArrayInterface v2.0.0
  [4c555306] + ArrayLayouts v0.1.5
  [67c07d97] + Automa v0.8.0
  [13072b0f] + AxisAlgorithms v1.0.0
  [9e28174c] + BinDeps v1.0.0
  [b99e7846] + BinaryProvider v0.5.8
  [37cfa864] + BioCore v2.0.5
  [7e6ae17a] + BioSequences v1.1.0
  [3c28c6f8] + BioSymbols v3.1.0
  [e1450e63] + BufferedStreams v1.0.0
  [631607c0] + CMake v1.1.2
  [d5fb7624] + CMakeWrapper v0.2.3
  [336ed68f] + CSV v0.5.18
  [49dc2e85] + Calculus v0.5.1
  [324d7699] + CategoricalArrays v0.7.3
  [19ecbf4d] + Codecs v0.5.0
  [3da002f7] + ColorTypes v0.8.0
  [5ae59095] + Colors v0.9.6
  [861a8166] + Combinatorics v0.7.0
  [bbf7d656] + CommonSubexpressions v0.2.0
  [34da2185] + Compat v2.2.0
  [a81c6b42] + Compose v0.7.3
  [8f4d0f93] + Conda v1.3.0
  [d38c429a] + Contour v0.5.1
  [7ad07ef1] + CoupledFields v0.1.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.19.4
  [864edb3b] + DataStructures v0.17.6
  [e2d170a0] + DataValueInterfaces v1.0.0
  [01453d9d] + DiffEqDiffTools v1.5.0
  [163ba53b] + DiffResults v0.0.4
  [b552c78f] + DiffRules v0.1.0
  [b4f34e82] + Distances v0.8.2
  [31c24e10] + Distributions v0.21.11
  [ffbed154] + DocStringExtensions v0.8.1
  [7a1cc6ca] + FFTW v1.1.0
  [48062228] + FilePathsBase v0.7.0
  [1a297f60] + FillArrays v0.8.2
  [53c48c17] + FixedPointNumbers v0.6.1
  [f6369f11] + ForwardDiff v0.10.7
  [38e38edf] + GLM v1.3.5
  [c91e804a] + Gadfly v1.0.1
  [a1b4810d] + Hexagons v0.2.0
  [1cb3b9ac] + IndexableBitVectors v1.0.0
  [9b13fd28] + IndirectArrays v0.5.0
  [a98d9a8b] + Interpolations v0.12.5
  [524e6230] + IntervalTrees v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [c8e1da08] + IterTools v1.3.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [e5e0dc1b] + Juno v0.7.2
  [5ab0869b] + KernelDensity v0.5.1
  [5078a376] + LazyArrays v0.14.10
  [d3d80556] + LineSearches v7.0.1
  [4345ca2d] + Loess v0.5.0
  [1914dd2f] + MacroTools v0.5.3
  [fdba3010] + MathProgBase v0.7.7
  [442fdcdd] + Measures v0.3.0
  [e89f7d12] + Media v0.5.0
  [e1d29d7a] + Missings v0.4.3
  [d41bc354] + NLSolversBase v7.5.0
  [76087f3c] + NLopt v0.5.1
  [77ba4419] + NaNMath v0.3.3
  [6fe1bfb0] + OffsetArrays v0.11.2
  [4536629a] + OpenBLAS_jll v0.3.7+1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+1
  [429524aa] + Optim v0.19.6
  [bac558e1] + OrderedCollections v1.1.0
  [90014a1f] + PDMats v0.9.10
  [d96e819e] + Parameters v0.12.0
  [69de0a69] + Parsers v0.3.10
  [33ad39ac] + PhyloNetworks v0.11.0
  [c0d5b6db] + PhyloPlots v0.2.1
  [f27b6e38] + Polynomials v0.6.0
  [2dfb63ee] + PooledArrays v0.5.2
  [85a6dd25] + PositiveFactorizations v0.2.3
  [1fd47b50] + QuadGK v2.2.0
  [6f49c342] + RCall v0.13.4
  [c84ed2f1] + Ratios v0.3.1
  [3cdcf5f2] + RecipesBase v0.7.0
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v0.5.2
  [79098fc4] + Rmath v0.6.0
  [1277b4bf] + ShiftedArrays v1.0.0
  [992d4aef] + Showoff v0.3.1
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.9.0
  [90137ffa] + StaticArrays v0.12.1
  [2913bbd2] + StatsBase v0.32.0
  [4c63d2b9] + StatsFuns v0.9.2
  [3eaba693] + StatsModels v0.6.7
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [3bb67fe8] + TranscodingStreams v0.9.5
  [7200193e] + Twiddle v1.1.1
  [30578b45] + URIParser v0.4.0
  [81def892] + VersionParsing v1.1.3
  [ea10d353] + WeakRefStrings v0.6.1
  [1b915085] + WinReg v0.3.1
  [efce3f68] + WoodburyMatrices v0.4.1
  [ddb6d928] + YAML v0.3.2
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [9abbd945] + Profile 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [4607b0f0] + SuiteSparse 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
  Building Conda â†’ `~/.julia/packages/Conda/kLXeC/deps/build.log`
  Building FFTW â”€â†’ `~/.julia/packages/FFTW/loJ3F/deps/build.log`
  Building Rmath â†’ `~/.julia/packages/Rmath/BoBag/deps/build.log`
  Building CMake â†’ `~/.julia/packages/CMake/nSK2r/deps/build.log`
  Building NLopt â†’ `~/.julia/packages/NLopt/eqN9a/deps/build.log`
  Building RCall â†’ `~/.julia/packages/RCall/g7dhB/deps/build.log`
   Testing PhyloPlots
 Resolving package versions...
    Status `/tmp/jl_ZJsHXf/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [7d9fca2a] Arpack v0.4.0
  [68821587] Arpack_jll v3.5.0+2
  [4fba245c] ArrayInterface v2.0.0
  [4c555306] ArrayLayouts v0.1.5
  [67c07d97] Automa v0.8.0
  [13072b0f] AxisAlgorithms v1.0.0
  [9e28174c] BinDeps v1.0.0
  [b99e7846] BinaryProvider v0.5.8
  [37cfa864] BioCore v2.0.5
  [7e6ae17a] BioSequences v1.1.0
  [3c28c6f8] BioSymbols v3.1.0
  [e1450e63] BufferedStreams v1.0.0
  [631607c0] CMake v1.1.2
  [d5fb7624] CMakeWrapper v0.2.3
  [336ed68f] CSV v0.5.18
  [49dc2e85] Calculus v0.5.1
  [324d7699] CategoricalArrays v0.7.3
  [19ecbf4d] Codecs v0.5.0
  [3da002f7] ColorTypes v0.8.0
  [5ae59095] Colors v0.9.6
  [861a8166] Combinatorics v0.7.0
  [bbf7d656] CommonSubexpressions v0.2.0
  [34da2185] Compat v2.2.0
  [a81c6b42] Compose v0.7.3
  [8f4d0f93] Conda v1.3.0
  [d38c429a] Contour v0.5.1
  [7ad07ef1] CoupledFields v0.1.0
  [9a962f9c] DataAPI v1.1.0
  [a93c6f00] DataFrames v0.19.4
  [864edb3b] DataStructures v0.17.6
  [e2d170a0] DataValueInterfaces v1.0.0
  [01453d9d] DiffEqDiffTools v1.5.0
  [163ba53b] DiffResults v0.0.4
  [b552c78f] DiffRules v0.1.0
  [b4f34e82] Distances v0.8.2
  [31c24e10] Distributions v0.21.11
  [ffbed154] DocStringExtensions v0.8.1
  [7a1cc6ca] FFTW v1.1.0
  [48062228] FilePathsBase v0.7.0
  [1a297f60] FillArrays v0.8.2
  [53c48c17] FixedPointNumbers v0.6.1
  [f6369f11] ForwardDiff v0.10.7
  [38e38edf] GLM v1.3.5
  [c91e804a] Gadfly v1.0.1
  [a1b4810d] Hexagons v0.2.0
  [1cb3b9ac] IndexableBitVectors v1.0.0
  [9b13fd28] IndirectArrays v0.5.0
  [a98d9a8b] Interpolations v0.12.5
  [524e6230] IntervalTrees v1.0.0
  [41ab1584] InvertedIndices v1.0.0
  [c8e1da08] IterTools v1.3.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [e5e0dc1b] Juno v0.7.2
  [5ab0869b] KernelDensity v0.5.1
  [5078a376] LazyArrays v0.14.10
  [d3d80556] LineSearches v7.0.1
  [4345ca2d] Loess v0.5.0
  [1914dd2f] MacroTools v0.5.3
  [fdba3010] MathProgBase v0.7.7
  [442fdcdd] Measures v0.3.0
  [e89f7d12] Media v0.5.0
  [e1d29d7a] Missings v0.4.3
  [d41bc354] NLSolversBase v7.5.0
  [76087f3c] NLopt v0.5.1
  [77ba4419] NaNMath v0.3.3
  [6fe1bfb0] OffsetArrays v0.11.2
  [4536629a] OpenBLAS_jll v0.3.7+1
  [efe28fd5] OpenSpecFun_jll v0.5.3+1
  [429524aa] Optim v0.19.6
  [bac558e1] OrderedCollections v1.1.0
  [90014a1f] PDMats v0.9.10
  [d96e819e] Parameters v0.12.0
  [69de0a69] Parsers v0.3.10
  [33ad39ac] PhyloNetworks v0.11.0
  [c0d5b6db] PhyloPlots v0.2.1
  [f27b6e38] Polynomials v0.6.0
  [2dfb63ee] PooledArrays v0.5.2
  [85a6dd25] PositiveFactorizations v0.2.3
  [1fd47b50] QuadGK v2.2.0
  [6f49c342] RCall v0.13.4
  [c84ed2f1] Ratios v0.3.1
  [3cdcf5f2] RecipesBase v0.7.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v0.5.2
  [79098fc4] Rmath v0.6.0
  [1277b4bf] ShiftedArrays v1.0.0
  [992d4aef] Showoff v0.3.1
  [a2af1166] SortingAlgorithms v0.3.1
  [276daf66] SpecialFunctions v0.9.0
  [90137ffa] StaticArrays v0.12.1
  [2913bbd2] StatsBase v0.32.0
  [4c63d2b9] StatsFuns v0.9.2
  [3eaba693] StatsModels v0.6.7
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v0.2.11
  [3bb67fe8] TranscodingStreams v0.9.5
  [7200193e] Twiddle v1.1.1
  [30578b45] URIParser v0.4.0
  [81def892] VersionParsing v1.1.3
  [ea10d353] WeakRefStrings v0.6.1
  [1b915085] WinReg v0.3.1
  [efce3f68] WoodburyMatrices v0.4.1
  [ddb6d928] YAML v0.3.2
  [2a0f44e3] Base64  [`@stdlib/Base64`]
  [ade2ca70] Dates  [`@stdlib/Dates`]
  [8bb1440f] DelimitedFiles  [`@stdlib/DelimitedFiles`]
  [8ba89e20] Distributed  [`@stdlib/Distributed`]
  [9fa8497b] Future  [`@stdlib/Future`]
  [b77e0a4c] InteractiveUtils  [`@stdlib/InteractiveUtils`]
  [76f85450] LibGit2  [`@stdlib/LibGit2`]
  [8f399da3] Libdl  [`@stdlib/Libdl`]
  [37e2e46d] LinearAlgebra  [`@stdlib/LinearAlgebra`]
  [56ddb016] Logging  [`@stdlib/Logging`]
  [d6f4376e] Markdown  [`@stdlib/Markdown`]
  [a63ad114] Mmap  [`@stdlib/Mmap`]
  [44cfe95a] Pkg  [`@stdlib/Pkg`]
  [de0858da] Printf  [`@stdlib/Printf`]
  [9abbd945] Profile  [`@stdlib/Profile`]
  [3fa0cd96] REPL  [`@stdlib/REPL`]
  [9a3f8284] Random  [`@stdlib/Random`]
  [ea8e919c] SHA  [`@stdlib/SHA`]
  [9e88b42a] Serialization  [`@stdlib/Serialization`]
  [1a1011a3] SharedArrays  [`@stdlib/SharedArrays`]
  [6462fe0b] Sockets  [`@stdlib/Sockets`]
  [2f01184e] SparseArrays  [`@stdlib/SparseArrays`]
  [10745b16] Statistics  [`@stdlib/Statistics`]
  [4607b0f0] SuiteSparse  [`@stdlib/SuiteSparse`]
  [8dfed614] Test  [`@stdlib/Test`]
  [cf7118a7] UUIDs  [`@stdlib/UUIDs`]
  [4ec0a83e] Unicode  [`@stdlib/Unicode`]
[ Info: Loading DataFrames support into Gadfly.jl
Test setup for plotting PhyloNetworks objects: Log Test Failed at /home/pkgeval/.julia/packages/PhyloPlots/aMMN1/test/test_phylonetworkPlots.jl:29
  Expression: PhyloPlots.checkNodeDataFrame(net, dat)
  Log Pattern: (:warn, "Some node numbers in the nodeLabel data frame are not found in the network:\n 100")
  Captured Logs: 
    Test.LogRecord(Warn, "`T` is deprecated, use `nonmissingtype` instead.", PhyloPlots, :depwarn, (Ptr{Nothing} @0x00007f3b3a38f3db, :T), "/home/pkgeval/.julia/packages/PhyloPlots/aMMN1/src/phylonetworksPlots.jl", 175, Base.Iterators.Pairs{Symbol,Any,Tuple{Symbol,Symbol},NamedTuple{(:caller, :maxlog),Tuple{Base.StackTraces.StackFrame,Int64}}}(:caller => checkNodeDataFrame(::HybridNetwork, ::DataFrame) at phylonetworksPlots.jl:175,:maxlog => 1))
    Test.LogRecord(Warn, "Some node numbers in the nodeLabel data frame are not found in the network:\n 100", PhyloPlots, "phylonetworksPlots", :PhyloPlots_55f24fbe, "/home/pkgeval/.julia/packages/PhyloPlots/aMMN1/src/phylonetworksPlots.jl", 188, Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}}())

Stacktrace:
 [1] record(::Test.DefaultTestSet, ::Test.LogTestFailure) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.3/Test/src/logging.jl:89
 [2] top-level scope at /home/pkgeval/.julia/packages/PhyloPlots/aMMN1/test/test_phylonetworkPlots.jl:29
 [3] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
 [4] top-level scope at /home/pkgeval/.julia/packages/PhyloPlots/aMMN1/test/test_phylonetworkPlots.jl:3
Test setup for plotting PhyloNetworks objects: Log Test Failed at /home/pkgeval/.julia/packages/PhyloPlots/aMMN1/test/test_phylonetworkPlots.jl:30
  Expression: PhyloPlots.checkNodeDataFrame(net, dat[!, 2:3])
  Log Pattern: (:warn, "nodeLabel should have 2+ columns, the first one giving the node numbers (Integer)")
  Captured Logs: 
    Test.LogRecord(Warn, "`T` is deprecated, use `nonmissingtype` instead.", PhyloPlots, :depwarn, (Ptr{Nothing} @0x00007f3b3a38f3db, :T), "/home/pkgeval/.julia/packages/PhyloPlots/aMMN1/src/phylonetworksPlots.jl", 175, Base.Iterators.Pairs{Symbol,Any,Tuple{Symbol,Symbol},NamedTuple{(:caller, :maxlog),Tuple{Base.StackTraces.StackFrame,Int64}}}(:caller => checkNodeDataFrame(::HybridNetwork, ::DataFrame) at phylonetworksPlots.jl:175,:maxlog => 1))
    Test.LogRecord(Warn, "nodeLabel should have 2+ columns, the first one giving the node numbers (Integer)", PhyloPlots, "phylonetworksPlots", :PhyloPlots_91ca88c2, "/home/pkgeval/.julia/packages/PhyloPlots/aMMN1/src/phylonetworksPlots.jl", 176, Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}}())

Stacktrace:
 [1] record(::Test.DefaultTestSet, ::Test.LogTestFailure) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.3/Test/src/logging.jl:89
 [2] top-level scope at /home/pkgeval/.julia/packages/PhyloPlots/aMMN1/test/test_phylonetworkPlots.jl:30
 [3] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
 [4] top-level scope at /home/pkgeval/.julia/packages/PhyloPlots/aMMN1/test/test_phylonetworkPlots.jl:3
â”Œ Warning: `T` is deprecated, use `nonmissingtype` instead.
â”‚   caller = checkNodeDataFrame(::HybridNetwork, ::DataFrame) at phylonetworksPlots.jl:175
â”” @ PhyloPlots ~/.julia/packages/PhyloPlots/aMMN1/src/phylonetworksPlots.jl:175
â”Œ Warning: `T` is deprecated, use `nonmissingtype` instead.
â”‚   caller = prepareNodeDataFrame(::HybridNetwork, ::DataFrame, ::Bool, ::Bool, ::Bool, ::Array{Float64,1}, ::Array{Float64,1}) at phylonetworksPlots.jl:222
â”” @ PhyloPlots ~/.julia/packages/PhyloPlots/aMMN1/src/phylonetworksPlots.jl:222
Test setup for plotting PhyloNetworks objects: Test Failed at /home/pkgeval/.julia/packages/PhyloPlots/aMMN1/test/test_phylonetworkPlots.jl:36
  Expression: PhyloPlots.prepareNodeDataFrame(net, dat, true, true, true, collect(1.0:9), collect(10.0:18)) == DataFrame(name=["A", "B", "", "C", "D", "#H1", "", "", ""], num=["1", "2", "-4", "4", "5", "3", "-5", "-3", "-2"], lab=["", "", "99", "", "mytips", "", "90", "95", ""], lea=[true, true, false, true, true, false, false, false, false], x=collect(1.0:9), y=collect(10.0:18))
   Evaluated: 9Ã—6 DataFrame
â”‚ Row â”‚ name   â”‚ num    â”‚ lab    â”‚ lea  â”‚ x       â”‚ y       â”‚
â”‚     â”‚ String â”‚ String â”‚ String â”‚ Bool â”‚ Float64 â”‚ Float64 â”‚
â”œâ”€â”€â”€â”€â”€â”¼â”€â”€â”€â”€â”€â”€â”€â”€â”¼â”€â”€â”€â”€â”€â”€â”€â”€â”¼â”€â”€â”€â”€â”€â”€â”€â”€â”¼â”€â”€â”€â”€â”€â”€â”¼â”€â”€â”€â”€â”€â”€â”€â”€â”€â”¼â”€â”€â”€â”€â”€â”€â”€â”€â”€â”¤
â”‚ 1   â”‚ A      â”‚ 1      â”‚        â”‚ 1    â”‚ 1.0     â”‚ 10.0    â”‚
â”‚ 2   â”‚ B      â”‚ 2      â”‚        â”‚ 1    â”‚ 2.0     â”‚ 11.0    â”‚
â”‚ 3   â”‚        â”‚ -4     â”‚ 99     â”‚ 0    â”‚ 3.0     â”‚ 12.0    â”‚
â”‚ 4   â”‚ C      â”‚ 4      â”‚        â”‚ 1    â”‚ 4.0     â”‚ 13.0    â”‚
â”‚ 5   â”‚ D      â”‚ 5      â”‚ mytips â”‚ 1    â”‚ 5.0     â”‚ 14.0    â”‚
â”‚ 6   â”‚ H1     â”‚ 3      â”‚        â”‚ 0    â”‚ 6.0     â”‚ 15.0    â”‚
â”‚ 7   â”‚        â”‚ -5     â”‚ 90     â”‚ 0    â”‚ 7.0     â”‚ 16.0    â”‚
â”‚ 8   â”‚        â”‚ -3     â”‚ 95     â”‚ 0    â”‚ 8.0     â”‚ 17.0    â”‚
â”‚ 9   â”‚        â”‚ -2     â”‚        â”‚ 0    â”‚ 9.0     â”‚ 18.0    â”‚ == 9Ã—6 DataFrame
â”‚ Row â”‚ name   â”‚ num    â”‚ lab    â”‚ lea  â”‚ x       â”‚ y       â”‚
â”‚     â”‚ String â”‚ String â”‚ String â”‚ Bool â”‚ Float64 â”‚ Float64 â”‚
â”œâ”€â”€â”€â”€â”€â”¼â”€â”€â”€â”€â”€â”€â”€â”€â”¼â”€â”€â”€â”€â”€â”€â”€â”€â”¼â”€â”€â”€â”€â”€â”€â”€â”€â”¼â”€â”€â”€â”€â”€â”€â”¼â”€â”€â”€â”€â”€â”€â”€â”€â”€â”¼â”€â”€â”€â”€â”€â”€â”€â”€â”€â”¤
â”‚ 1   â”‚ A      â”‚ 1      â”‚        â”‚ 1    â”‚ 1.0     â”‚ 10.0    â”‚
â”‚ 2   â”‚ B      â”‚ 2      â”‚        â”‚ 1    â”‚ 2.0     â”‚ 11.0    â”‚
â”‚ 3   â”‚        â”‚ -4     â”‚ 99     â”‚ 0    â”‚ 3.0     â”‚ 12.0    â”‚
â”‚ 4   â”‚ C      â”‚ 4      â”‚        â”‚ 1    â”‚ 4.0     â”‚ 13.0    â”‚
â”‚ 5   â”‚ D      â”‚ 5      â”‚ mytips â”‚ 1    â”‚ 5.0     â”‚ 14.0    â”‚
â”‚ 6   â”‚ #H1    â”‚ 3      â”‚        â”‚ 0    â”‚ 6.0     â”‚ 15.0    â”‚
â”‚ 7   â”‚        â”‚ -5     â”‚ 90     â”‚ 0    â”‚ 7.0     â”‚ 16.0    â”‚
â”‚ 8   â”‚        â”‚ -3     â”‚ 95     â”‚ 0    â”‚ 8.0     â”‚ 17.0    â”‚
â”‚ 9   â”‚        â”‚ -2     â”‚        â”‚ 0    â”‚ 9.0     â”‚ 18.0    â”‚
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/PhyloPlots/aMMN1/test/test_phylonetworkPlots.jl:36
 [2] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
 [3] top-level scope at /home/pkgeval/.julia/packages/PhyloPlots/aMMN1/test/test_phylonetworkPlots.jl:3
Test setup for plotting PhyloNetworks objects: Log Test Failed at /home/pkgeval/.julia/packages/PhyloPlots/aMMN1/test/test_phylonetworkPlots.jl:43
  Expression: PhyloPlots.prepareEdgeDataFrame(net, dat, true, collect(1.0:9), collect(10.0:18), collect(19.0:27), collect(28.0:36))
  Log Pattern: (:warn, "Some edge numbers in the edgeLabel data frame are not found in the network:\n 200")
  Captured Logs: 
    Test.LogRecord(Warn, "`T` is deprecated, use `nonmissingtype` instead.", PhyloPlots, :depwarn, (Ptr{Nothing} @0x00007f3b3a3ee2e0, :T), "/home/pkgeval/.julia/packages/PhyloPlots/aMMN1/src/phylonetworksPlots.jl", 259, Base.Iterators.Pairs{Symbol,Any,Tuple{Symbol,Symbol},NamedTuple{(:caller, :maxlog),Tuple{Base.StackTraces.StackFrame,Int64}}}(:caller => prepareEdgeDataFrame(::HybridNetwork, ::DataFrame, ::Bool, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at phylonetworksPlots.jl:259,:maxlog => 1))
    Test.LogRecord(Warn, "Some edge numbers in the edgeLabel data frame are not found in the network:\n 200", PhyloPlots, "phylonetworksPlots", :PhyloPlots_55f24fbf, "/home/pkgeval/.julia/packages/PhyloPlots/aMMN1/src/phylonetworksPlots.jl", 272, Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}}())
    Test.LogRecord(Warn, "`T` is deprecated, use `nonmissingtype` instead.", PhyloPlots, :depwarn, (Ptr{Nothing} @0x00007f3b3a3ef65e, :T), "/home/pkgeval/.julia/packages/PhyloPlots/aMMN1/src/phylonetworksPlots.jl", 284, Base.Iterators.Pairs{Symbol,Any,Tuple{Symbol,Symbol},NamedTuple{(:caller, :maxlog),Tuple{Base.StackTraces.StackFrame,Int64}}}(:caller => prepareEdgeDataFrame(::HybridNetwork, ::DataFrame, ::Bool, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at phylonetworksPlots.jl:284,:maxlog => 1))
    Test.LogRecord(Warn, "`T` is deprecated, use `nonmissingtype` instead.", PhyloPlots, :depwarn, (Ptr{Nothing} @0x00007f3b3a3ef65e, :T), "/home/pkgeval/.julia/packages/PhyloPlots/aMMN1/src/phylonetworksPlots.jl", 284, Base.Iterators.Pairs{Symbol,Any,Tuple{Symbol,Symbol},NamedTuple{(:caller, :maxlog),Tuple{Base.StackTraces.StackFrame,Int64}}}(:caller => prepareEdgeDataFrame(::HybridNetwork, ::DataFrame, ::Bool, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at phylonetworksPlots.jl:284,:maxlog => 1))
    Test.LogRecord(Warn, "`T` is deprecated, use `nonmissingtype` instead.", PhyloPlots, :depwarn, (Ptr{Nothing} @0x00007f3b3a3ef65e, :T), "/home/pkgeval/.julia/packages/PhyloPlots/aMMN1/src/phylonetworksPlots.jl", 284, Base.Iterators.Pairs{Symbol,Any,Tuple{Symbol,Symbol},NamedTuple{(:caller, :maxlog),Tuple{Base.StackTraces.StackFrame,Int64}}}(:caller => prepareEdgeDataFrame(::HybridNetwork, ::DataFrame, ::Bool, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at phylonetworksPlots.jl:284,:maxlog => 1))
    Test.LogRecord(Warn, "`T` is deprecated, use `nonmissingtype` instead.", PhyloPlots, :depwarn, (Ptr{Nothing} @0x00007f3b3a3ef65e, :T), "/home/pkgeval/.julia/packages/PhyloPlots/aMMN1/src/phylonetworksPlots.jl", 284, Base.Iterators.Pairs{Symbol,Any,Tuple{Symbol,Symbol},NamedTuple{(:caller, :maxlog),Tuple{Base.StackTraces.StackFrame,Int64}}}(:caller => prepareEdgeDataFrame(::HybridNetwork, ::DataFrame, ::Bool, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at phylonetworksPlots.jl:284,:maxlog => 1))

Stacktrace:
 [1] record(::Test.DefaultTestSet, ::Test.LogTestFailure) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.3/Test/src/logging.jl:89
 [2] top-level scope at /home/pkgeval/.julia/packages/PhyloPlots/aMMN1/test/test_phylonetworkPlots.jl:43
 [3] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
 [4] top-level scope at /home/pkgeval/.julia/packages/PhyloPlots/aMMN1/test/test_phylonetworkPlots.jl:3
â”Œ Warning: `T` is deprecated, use `nonmissingtype` instead.
â”‚   caller = prepareEdgeDataFrame(::HybridNetwork, ::DataFrame, ::Bool, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at phylonetworksPlots.jl:259
â”” @ PhyloPlots ~/.julia/packages/PhyloPlots/aMMN1/src/phylonetworksPlots.jl:259
â”Œ Warning: `T` is deprecated, use `nonmissingtype` instead.
â”‚   caller = prepareEdgeDataFrame(::HybridNetwork, ::DataFrame, ::Bool, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at phylonetworksPlots.jl:284
â”” @ PhyloPlots ~/.julia/packages/PhyloPlots/aMMN1/src/phylonetworksPlots.jl:284
RCall-based plot Test: Log Test Failed at /home/pkgeval/.julia/packages/PhyloPlots/aMMN1/test/test_plotRCall.jl:15
  Expression: plot(net, :RCall, nodeLabel=dat)
  Log Pattern: (:warn, "Some node numbers in the nodeLabel data frame are not found in the network:\n -1")
  Captured Logs: 
    Test.LogRecord(Warn, "`T` is deprecated, use `nonmissingtype` instead.", PhyloPlots, :depwarn, (Ptr{Nothing} @0x00007f3b3a38f3db, :T), "/home/pkgeval/.julia/packages/PhyloPlots/aMMN1/src/phylonetworksPlots.jl", 175, Base.Iterators.Pairs{Symbol,Any,Tuple{Symbol,Symbol},NamedTuple{(:caller, :maxlog),Tuple{Base.StackTraces.StackFrame,Int64}}}(:caller => checkNodeDataFrame(::HybridNetwork, ::DataFrame) at phylonetworksPlots.jl:175,:maxlog => 1))
    Test.LogRecord(Warn, "Some node numbers in the nodeLabel data frame are not found in the network:\n -1", PhyloPlots, "phylonetworksPlots", :PhyloPlots_55f24fbe, "/home/pkgeval/.julia/packages/PhyloPlots/aMMN1/src/phylonetworksPlots.jl", 188, Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}}())
    Test.LogRecord(Warn, "`T` is deprecated, use `nonmissingtype` instead.", PhyloPlots, :depwarn, (Ptr{Nothing} @0x00007f3b3a3d2495, :T), "/home/pkgeval/.julia/packages/PhyloPlots/aMMN1/src/phylonetworksPlots.jl", 222, Base.Iterators.Pairs{Symbol,Any,Tuple{Symbol,Symbol},NamedTuple{(:caller, :maxlog),Tuple{Base.StackTraces.StackFrame,Int64}}}(:caller => prepareNodeDataFrame(::HybridNetwork, ::DataFrame, ::Bool, ::Bool, ::Bool, ::Array{Float64,1}, ::Array{Float64,1}) at phylonetworksPlots.jl:222,:maxlog => 1))
    Test.LogRecord(Warn, "`T` is deprecated, use `nonmissingtype` instead.", PhyloPlots, :depwarn, (Ptr{Nothing} @0x00007f3b3a3d2495, :T), "/home/pkgeval/.julia/packages/PhyloPlots/aMMN1/src/phylonetworksPlots.jl", 222, Base.Iterators.Pairs{Symbol,Any,Tuple{Symbol,Symbol},NamedTuple{(:caller, :maxlog),Tuple{Base.StackTraces.StackFrame,Int64}}}(:caller => prepareNodeDataFrame(::HybridNetwork, ::DataFrame, ::Bool, ::Bool, ::Bool, ::Array{Float64,1}, ::Array{Float64,1}) at phylonetworksPlots.jl:222,:maxlog => 1))

Stacktrace:
 [1] record(::Test.DefaultTestSet, ::Test.LogTestFailure) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.3/Test/src/logging.jl:89
 [2] top-level scope at /home/pkgeval/.julia/packages/PhyloPlots/aMMN1/test/test_plotRCall.jl:15
 [3] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
 [4] top-level scope at /home/pkgeval/.julia/packages/PhyloPlots/aMMN1/test/test_plotRCall.jl:5
RCall-based plot Test: Log Test Failed at /home/pkgeval/.julia/packages/PhyloPlots/aMMN1/test/test_plotRCall.jl:16
  Expression: plot(net, :RCall, edgeLabel=dat[!, [:edge, :bs]])
  Log Pattern: 
  Captured Logs: 
    Test.LogRecord(Warn, "`T` is deprecated, use `nonmissingtype` instead.", PhyloPlots, :depwarn, (Ptr{Nothing} @0x00007f3b3a3ee2e0, :T), "/home/pkgeval/.julia/packages/PhyloPlots/aMMN1/src/phylonetworksPlots.jl", 259, Base.Iterators.Pairs{Symbol,Any,Tuple{Symbol,Symbol},NamedTuple{(:caller, :maxlog),Tuple{Base.StackTraces.StackFrame,Int64}}}(:caller => prepareEdgeDataFrame(::HybridNetwork, ::DataFrame, ::Bool, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at phylonetworksPlots.jl:259,:maxlog => 1))
    Test.LogRecord(Warn, "`T` is deprecated, use `nonmissingtype` instead.", PhyloPlots, :depwarn, (Ptr{Nothing} @0x00007f3b3a3ef65e, :T), "/home/pkgeval/.julia/packages/PhyloPlots/aMMN1/src/phylonetworksPlots.jl", 284, Base.Iterators.Pairs{Symbol,Any,Tuple{Symbol,Symbol},NamedTuple{(:caller, :maxlog),Tuple{Base.StackTraces.StackFrame,Int64}}}(:caller => prepareEdgeDataFrame(::HybridNetwork, ::DataFrame, ::Bool, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at phylonetworksPlots.jl:284,:maxlog => 1))
    Test.LogRecord(Warn, "`T` is deprecated, use `nonmissingtype` instead.", PhyloPlots, :depwarn, (Ptr{Nothing} @0x00007f3b3a3ef65e, :T), "/home/pkgeval/.julia/packages/PhyloPlots/aMMN1/src/phylonetworksPlots.jl", 284, Base.Iterators.Pairs{Symbol,Any,Tuple{Symbol,Symbol},NamedTuple{(:caller, :maxlog),Tuple{Base.StackTraces.StackFrame,Int64}}}(:caller => prepareEdgeDataFrame(::HybridNetwork, ::DataFrame, ::Bool, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at phylonetworksPlots.jl:284,:maxlog => 1))
    Test.LogRecord(Warn, "`T` is deprecated, use `nonmissingtype` instead.", PhyloPlots, :depwarn, (Ptr{Nothing} @0x00007f3b3a3ef65e, :T), "/home/pkgeval/.julia/packages/PhyloPlots/aMMN1/src/phylonetworksPlots.jl", 284, Base.Iterators.Pairs{Symbol,Any,Tuple{Symbol,Symbol},NamedTuple{(:caller, :maxlog),Tuple{Base.StackTraces.StackFrame,Int64}}}(:caller => prepareEdgeDataFrame(::HybridNetwork, ::DataFrame, ::Bool, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at phylonetworksPlots.jl:284,:maxlog => 1))

Stacktrace:
 [1] record(::Test.DefaultTestSet, ::Test.LogTestFailure) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.3/Test/src/logging.jl:89
 [2] top-level scope at /home/pkgeval/.julia/packages/PhyloPlots/aMMN1/test/test_plotRCall.jl:16
 [3] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.3/Test/src/Test.jl:1107
 [4] top-level scope at /home/pkgeval/.julia/packages/PhyloPlots/aMMN1/test/test_plotRCall.jl:5
Test Summary:                                      | Pass  Fail  Total
PhyloPlots Tests                                   |   38     6     44
  Test setup for plotting PhyloNetworks objects    |    8     4     12
  Gadfly-based plot Test                           |   10           10
  RCall-based plot Test                            |    7     2      9
  test of substitution model plot, 2 binary traits |    1            1
  rexport and sexp tests                           |   12           12
ERROR: LoadError: Some tests did not pass: 38 passed, 6 failed, 0 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/PhyloPlots/aMMN1/test/runtests.jl:9
ERROR: Package PhyloPlots errored during testing
Stacktrace:
 [1] pkgerror(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.3/Pkg/src/Types.jl:113
 [2] #test#131(::Bool, ::Nothing, ::Cmd, ::Cmd, ::typeof(Pkg.Operations.test), ::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.3/Pkg/src/Operations.jl:1370
 [3] #test at ./none:0 [inlined]
 [4] #test#62(::Bool, ::Nothing, ::Cmd, ::Cmd, ::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::typeof(Pkg.API.test), ::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.3/Pkg/src/API.jl:253
 [5] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.3/Pkg/src/API.jl:239
 [6] #test#61 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.3/Pkg/src/API.jl:233 [inlined]
 [7] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.3/Pkg/src/API.jl:233 [inlined]
 [8] #test#60 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.3/Pkg/src/API.jl:232 [inlined]
 [9] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.3/Pkg/src/API.jl:232 [inlined]
 [10] #test#59(::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::typeof(Pkg.API.test), ::String) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.3/Pkg/src/API.jl:231
 [11] test(::String) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.3/Pkg/src/API.jl:231
 [12] top-level scope at none:12
