Running tests with Julia v1.3.1-pre.12
   Cloning default registries into `~/.julia`
   Cloning registry from "https://github.com/JuliaRegistries/General.git"
[?25l    Fetching: [>                                        ]  0.0 %    Fetching: [=============>                           ]  31.1 %    Fetching: [======================>                  ]  54.5 %[2K[?25h     Added registry `General` to `~/.julia/registries/General`
 Resolving package versions...
 Installed Expokit â”€ v0.2.0
  Updating `~/.julia/environments/v1.3/Project.toml`
  [a1e7a1ef] + Expokit v0.2.0
  Updating `~/.julia/environments/v1.3/Manifest.toml`
  [a1e7a1ef] + Expokit v0.2.0
  [2a0f44e3] + Base64 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [9a3f8284] + Random 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [8dfed614] + Test 
   Testing Expokit
    Status `/tmp/jl_ix4GBF/Manifest.toml`
  [a1e7a1ef] Expokit v0.2.0
  [2a0f44e3] Base64  [`@stdlib/Base64`]
  [8ba89e20] Distributed  [`@stdlib/Distributed`]
  [b77e0a4c] InteractiveUtils  [`@stdlib/InteractiveUtils`]
  [8f399da3] Libdl  [`@stdlib/Libdl`]
  [37e2e46d] LinearAlgebra  [`@stdlib/LinearAlgebra`]
  [56ddb016] Logging  [`@stdlib/Logging`]
  [d6f4376e] Markdown  [`@stdlib/Markdown`]
  [9a3f8284] Random  [`@stdlib/Random`]
  [9e88b42a] Serialization  [`@stdlib/Serialization`]
  [6462fe0b] Sockets  [`@stdlib/Sockets`]
  [2f01184e] SparseArrays  [`@stdlib/SparseArrays`]
  [8dfed614] Test  [`@stdlib/Test`]
testing real n=100 (first expmv, then expm)
residuum: 6.886768459469841e-15
time dif: -0.341105817

testing complex n=100 (first expmv, then expm)
residuum: 1.5378208643752784e-15
time dif: -1.002793396

testing real n=1000 (first expmv, then expm)
residuum: 6.950531958492403e-11
time dif: -5.275015504

testing complex n=1000 (first expmv, then expm)
residuum: 2.0687000456960622e-14
time dif: -12.816056107

testing linear operator n=1000 (first expmv, then expm)
â”Œ Warning: opnorm(LinearOp, Inf) is not defined, fall back to using `anorm = 1.0`.
â”‚ To suppress this warning, please specify the `anorm` keyword manually.
â”” @ Expokit ~/.julia/packages/Expokit/fQbKs/src/expmv.jl:8
residuum: 2.3317507401114906e-14
time dif: 0.22729561599999992

testing 2x2 cases
residua: 1.1102230246251565e-16, 0.0

testing real n=1000 (first padm, then expm)
residuum: 1.6772689605868033e-16
time dif: 0.6917524290000001

testing complex n=100 (first padm, then expm)
residuum: 1.4723693443373073e-16
time dif: 2.260960303

testing real n=100 (first chbv, then expm)
residuum: 2.8287201472376947e-12
time dif: 1.322069463

testing complex n=100 (first chbv, then expm)
residuum: 2.9174696615174503e-12
time dif: 3.349845058

testing real n=1000 (first chbv, then expm)
residuum: 4.5215014418614646e-12
time dif: 2.6899623819999996

testing real n=100 (first phimv, then expm)
residuum: 3.190788921697174e-15
time dif: -0.09154842599999999

testing complex n=100 (first phimv, then expm)
residuum: 5.698382092587675e-15
time dif: -0.121002999

testing real n=1000 (first phimv, then expm)
residuum: 6.928480267348412e-14
time dif: -2.459472947

testing complex n=1000 (first phimv, then expm)
residuum: 1.5391655413874675e-14
time dif: -7.221624866

testing real n=1000 (first phimv, then expm), the linear operator version.
â”Œ Warning: opnorm(LinearOp, Inf) is not defined, fall back to using `anorm = 1.0`.
â”‚ To suppress this warning, please specify the `anorm` keyword manually.
â”” @ Expokit ~/.julia/packages/Expokit/fQbKs/src/expmv.jl:8
â”Œ Warning: opnorm(LinearOp, Inf) is not defined, fall back to using `anorm = 1.0`.
â”‚ To suppress this warning, please specify the `anorm` keyword manually.
â”” @ Expokit ~/.julia/packages/Expokit/fQbKs/src/expmv.jl:8
residuum: 4.30696530566166e-14
time dif: -3.8555853789999994

   Testing Expokit tests passed 
