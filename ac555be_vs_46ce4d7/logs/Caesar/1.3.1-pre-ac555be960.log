Running tests with Julia v1.3.1-pre.12
 Resolving package versions...
 Installed DataValueInterfaces ───────── v1.0.0
 Installed RecipesBase ───────────────── v0.7.0
 Installed UnsafeArrays ──────────────── v1.0.0
 Installed Graphs ────────────────────── v0.10.3
 Installed ApproxManifoldProducts ────── v0.1.2
 Installed GraphPlot ─────────────────── v0.3.1
 Installed Compose ───────────────────── v0.7.3
 Installed Neo4j ─────────────────────── v2.0.0
 Installed PaddedViews ───────────────── v0.4.2
 Installed IniFile ───────────────────── v0.5.0
 Installed Distances ─────────────────── v0.8.2
 Installed PDMats ────────────────────── v0.9.10
 Installed Parameters ────────────────── v0.12.0
 Installed NaNMath ───────────────────── v0.3.3
 Installed DocStringExtensions ───────── v0.8.1
 Installed AbstractFFTs ──────────────── v0.5.0
 Installed Rotations ─────────────────── v0.12.0
 Installed JSON2 ─────────────────────── v0.3.1
 Installed BinaryProvider ────────────── v0.5.8
 Installed Inflate ───────────────────── v0.1.1
 Installed Requires ──────────────────── v0.5.2
 Installed FFTW ──────────────────────── v1.1.0
 Installed Caesar ────────────────────── v0.4.2
 Installed FixedPointNumbers ─────────── v0.6.1
 Installed URIParser ─────────────────── v0.4.0
 Installed FileIO ────────────────────── v1.1.0
 Installed HTTP ──────────────────────── v0.8.8
 Installed ArnoldiMethod ─────────────── v0.0.4
 Installed CoordinateTransformations ─── v0.5.0
 Installed ProtoBuf ──────────────────── v0.7.0
 Installed KernelDensityEstimate ─────── v0.5.2
 Installed Reexport ──────────────────── v0.2.0
 Installed Mongoc ────────────────────── v0.2.1
 Installed DataFrames ────────────────── v0.19.4
 Installed OffsetArrays ──────────────── v0.11.2
 Installed Arpack_jll ────────────────── v3.5.0+2
 Installed Combinatorics ─────────────── v1.0.0
 Installed FunctionalStateMachine ────── v0.1.3
 Installed LightGraphs ───────────────── v1.3.0
 Installed Measures ──────────────────── v0.3.0
 Installed PooledArrays ──────────────── v0.5.2
 Installed QuadGK ────────────────────── v2.1.1
 Installed Colors ────────────────────── v0.9.6
 Installed RoME ──────────────────────── v0.4.4
 Installed ColorTypes ────────────────── v0.8.0
 Installed ProgressMeter ─────────────── v1.2.0
 Installed DiffEqDiffTools ───────────── v1.5.0
 Installed Graphics ──────────────────── v0.4.0
 Installed OrderedCollections ────────── v1.1.0
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed Conda ─────────────────────── v1.3.0
 Installed StatsBase ─────────────────── v0.32.0
 Installed SortingAlgorithms ─────────── v0.3.1
 Installed ForwardDiff ───────────────── v0.10.7
 Installed BinDeps ───────────────────── v0.8.10
 Installed CloudGraphs ───────────────── v0.1.2
 Installed Codecs ────────────────────── v0.5.0
 Installed TranscodingStreams ────────── v0.9.5
 Installed Nullables ─────────────────── v1.0.0
 Installed DiffRules ─────────────────── v0.1.0
 Installed JSON ──────────────────────── v0.21.0
 Installed VersionParsing ────────────── v1.1.3
 Installed JLD2 ──────────────────────── v0.1.9
 Installed Arpack ────────────────────── v0.4.0
 Installed ArrayInterface ────────────── v2.0.0
 Installed MappedArrays ──────────────── v0.2.2
 Installed CommonSubexpressions ──────── v0.2.0
 Installed DataStructures ────────────── v0.17.6
 Installed MetaGraphs ────────────────── v0.6.4
 Installed ImageMagick ───────────────── v0.7.5
 Installed StatsFuns ─────────────────── v0.9.1
 Installed Polynomials ───────────────── v0.6.0
 Installed NLsolve ───────────────────── v4.2.0
 Installed Calculus ──────────────────── v0.5.1
 Installed ZMQ ───────────────────────── v1.0.0
 Installed FillArrays ────────────────── v0.8.2
 Installed FastIOBuffers ─────────────── v0.3.1
 Installed Tables ────────────────────── v0.2.11
 Installed PositiveFactorizations ────── v0.2.3
 Installed Compat ────────────────────── v2.2.0
 Installed NLSolversBase ─────────────── v7.5.0
 Installed DataAPI ───────────────────── v1.1.0
 Installed MacroTools ────────────────── v0.5.3
 Installed Missings ──────────────────── v0.4.3
 Installed ImageCore ─────────────────── v0.8.5
 Installed DistributedFactorGraphs ───── v0.4.2
 Installed SpecialFunctions ──────────── v0.8.0
 Installed StaticArrays ──────────────── v0.12.1
 Installed CodecZlib ─────────────────── v0.6.0
 Installed IterTools ─────────────────── v1.3.0
 Installed YAML ──────────────────────── v0.3.2
 Installed Rmath ─────────────────────── v0.5.1
 Installed LineSearches ──────────────── v7.0.1
 Installed IncrementalInference ──────── v0.7.11
 Installed DiffResults ───────────────── v0.0.4
 Installed TransformUtils ────────────── v0.2.2
 Installed Distributions ─────────────── v0.21.10
 Installed CategoricalArrays ─────────── v0.7.3
 Installed Parsers ───────────────────── v0.3.10
 Installed Unmarshal ─────────────────── v0.2.1
 Installed TableTraits ───────────────── v1.0.0
 Installed MbedTLS ───────────────────── v0.7.0
 Installed OpenBLAS_jll ──────────────── v0.3.7+1
 Installed Optim ─────────────────────── v0.19.5
 Installed SimpleTraits ──────────────── v0.9.1
 Installed InvertedIndices ───────────── v1.0.0
 Installed LCMCore ───────────────────── v0.6.1
  Updating `~/.julia/environments/v1.3/Project.toml`
  [62eebf14] + Caesar v0.4.2
  Updating `~/.julia/environments/v1.3/Manifest.toml`
  [621f4979] + AbstractFFTs v0.5.0
  [9bbbb610] + ApproxManifoldProducts v0.1.2
  [ec485272] + ArnoldiMethod v0.0.4
  [7d9fca2a] + Arpack v0.4.0
  [68821587] + Arpack_jll v3.5.0+2
  [4fba245c] + ArrayInterface v2.0.0
  [9e28174c] + BinDeps v0.8.10
  [b99e7846] + BinaryProvider v0.5.8
  [62eebf14] + Caesar v0.4.2
  [49dc2e85] + Calculus v0.5.1
  [324d7699] + CategoricalArrays v0.7.3
  [39d38320] + CloudGraphs v0.1.2
  [944b1d66] + CodecZlib v0.6.0
  [19ecbf4d] + Codecs v0.5.0
  [3da002f7] + ColorTypes v0.8.0
  [5ae59095] + Colors v0.9.6
  [861a8166] + Combinatorics v1.0.0
  [bbf7d656] + CommonSubexpressions v0.2.0
  [34da2185] + Compat v2.2.0
  [a81c6b42] + Compose v0.7.3
  [8f4d0f93] + Conda v1.3.0
  [150eb455] + CoordinateTransformations v0.5.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.19.4
  [864edb3b] + DataStructures v0.17.6
  [e2d170a0] + DataValueInterfaces v1.0.0
  [01453d9d] + DiffEqDiffTools v1.5.0
  [163ba53b] + DiffResults v0.0.4
  [b552c78f] + DiffRules v0.1.0
  [b4f34e82] + Distances v0.8.2
  [b5cc3c7e] + DistributedFactorGraphs v0.4.2
  [31c24e10] + Distributions v0.21.10
  [ffbed154] + DocStringExtensions v0.8.1
  [7a1cc6ca] + FFTW v1.1.0
  [6ccb8d0d] + FastIOBuffers v0.3.1
  [5789e2e9] + FileIO v1.1.0
  [1a297f60] + FillArrays v0.8.2
  [53c48c17] + FixedPointNumbers v0.6.1
  [f6369f11] + ForwardDiff v0.10.7
  [3e9e306e] + FunctionalStateMachine v0.1.3
  [a2cc645c] + GraphPlot v0.3.1
  [a2bd30eb] + Graphics v0.4.0
  [86223c79] + Graphs v0.10.3
  [cd3eb016] + HTTP v0.8.8
  [a09fc81d] + ImageCore v0.8.5
  [6218d12a] + ImageMagick v0.7.5
  [904591bb] + IncrementalInference v0.7.11
  [d25df0c9] + Inflate v0.1.1
  [83e8ac13] + IniFile v0.5.0
  [41ab1584] + InvertedIndices v1.0.0
  [c8e1da08] + IterTools v1.3.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [033835bb] + JLD2 v0.1.9
  [682c06a0] + JSON v0.21.0
  [2535ab7d] + JSON2 v0.3.1
  [2472808a] + KernelDensityEstimate v0.5.2
  [0ea44823] + LCMCore v0.6.1
  [093fc24a] + LightGraphs v1.3.0
  [d3d80556] + LineSearches v7.0.1
  [1914dd2f] + MacroTools v0.5.3
  [dbb5928d] + MappedArrays v0.2.2
  [739be429] + MbedTLS v0.7.0
  [442fdcdd] + Measures v0.3.0
  [626554b9] + MetaGraphs v0.6.4
  [e1d29d7a] + Missings v0.4.3
  [4fe8b98c] + Mongoc v0.2.1
  [d41bc354] + NLSolversBase v7.5.0
  [2774e3e8] + NLsolve v4.2.0
  [77ba4419] + NaNMath v0.3.3
  [d2adbeaf] + Neo4j v2.0.0
  [4d1e1d77] + Nullables v1.0.0
  [6fe1bfb0] + OffsetArrays v0.11.2
  [4536629a] + OpenBLAS_jll v0.3.7+1
  [429524aa] + Optim v0.19.5
  [bac558e1] + OrderedCollections v1.1.0
  [90014a1f] + PDMats v0.9.10
  [5432bcbf] + PaddedViews v0.4.2
  [d96e819e] + Parameters v0.12.0
  [69de0a69] + Parsers v0.3.10
  [f27b6e38] + Polynomials v0.6.0
  [2dfb63ee] + PooledArrays v0.5.2
  [85a6dd25] + PositiveFactorizations v0.2.3
  [92933f4c] + ProgressMeter v1.2.0
  [3349acd9] + ProtoBuf v0.7.0
  [1fd47b50] + QuadGK v2.1.1
  [3cdcf5f2] + RecipesBase v0.7.0
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v0.5.2
  [79098fc4] + Rmath v0.5.1
  [91fb55c2] + RoME v0.4.4
  [6038ab10] + Rotations v0.12.0
  [699a6c99] + SimpleTraits v0.9.1
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.8.0
  [90137ffa] + StaticArrays v0.12.1
  [2913bbd2] + StatsBase v0.32.0
  [4c63d2b9] + StatsFuns v0.9.1
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [3bb67fe8] + TranscodingStreams v0.9.5
  [9b8138ad] + TransformUtils v0.2.2
  [30578b45] + URIParser v0.4.0
  [cbff2730] + Unmarshal v0.2.1
  [c4a57d5a] + UnsafeArrays v1.0.0
  [81def892] + VersionParsing v1.1.3
  [ddb6d928] + YAML v0.3.2
  [c2297ded] + ZMQ v1.0.0
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [7b1f6079] + FileWatching 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [9abbd945] + Profile 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [4607b0f0] + SuiteSparse 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
  Building Conda ───────────→ `~/.julia/packages/Conda/kLXeC/deps/build.log`
  Building FFTW ────────────→ `~/.julia/packages/FFTW/loJ3F/deps/build.log`
  Building Mongoc ──────────→ `~/.julia/packages/Mongoc/N4NkA/deps/build.log`
  Building ImageMagick ─────→ `~/.julia/packages/ImageMagick/vMfoS/deps/build.log`
  Building ZMQ ─────────────→ `~/.julia/packages/ZMQ/ABGOx/deps/build.log`
  Building MbedTLS ─────────→ `~/.julia/packages/MbedTLS/a1JFn/deps/build.log`
  Building SpecialFunctions → `~/.julia/packages/SpecialFunctions/ne2iw/deps/build.log`
  Building CodecZlib ───────→ `~/.julia/packages/CodecZlib/5t9zO/deps/build.log`
  Building Rmath ───────────→ `~/.julia/packages/Rmath/4wt82/deps/build.log`
  Building LCMCore ─────────→ `~/.julia/packages/LCMCore/cPbOB/deps/build.log`
 Resolving package versions...
 Installed CMakeWrapper ─ v0.2.3
 Installed Homebrew ───── v0.7.1
 Installed CMake ──────── v1.1.2
  Updating `/tmp/jl_FoHV5q/Project.toml`
  [d5fb7624] + CMakeWrapper v0.2.3
  [d9be37ee] + Homebrew v0.7.1
  [0ea44823] + LCMCore v0.6.1
  Updating `/tmp/jl_FoHV5q/Manifest.toml`
  [631607c0] + CMake v1.1.2
  [d5fb7624] + CMakeWrapper v0.2.3
  [d9be37ee] + Homebrew v0.7.1
  [682c06a0] + JSON v0.21.0
  [bac558e1] + OrderedCollections v1.1.0
  [d96e819e] + Parameters v0.12.0
  [69de0a69] + Parsers v0.3.10
  Building Homebrew → `~/.julia/packages/Homebrew/s09IX/deps/build.log`
  Building CMake ───→ `~/.julia/packages/CMake/nSK2r/deps/build.log`
┌ Error: Error building `LCMCore`: 
│ ┌ Warning: Some registries failed to update:
│ │     — /root/.julia/registries/General — failed to fetch from repo
│ └ @ Pkg.Types /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Pkg/src/Types.jl:1199
│ ERROR: LoadError: None of the selected providers can install dependency glib.
│ Use BinDeps.debug(package_name) to see available providers
│ 
│ Stacktrace:
│  [1] error(::String) at ./error.jl:33
│  [2] satisfy!(::BinDeps.LibraryDependency, ::Array{DataType,1}) at /root/.julia/packages/BinDeps/ZEval/src/dependencies.jl:949
│  [3] satisfy!(::BinDeps.LibraryDependency) at /root/.julia/packages/BinDeps/ZEval/src/dependencies.jl:922
│  [4] top-level scope at /root/.julia/packages/BinDeps/ZEval/src/dependencies.jl:977
│  [5] include at ./boot.jl:328 [inlined]
│  [6] include_relative(::Module, ::String) at ./loading.jl:1105
│  [7] include(::Module, ::String) at ./Base.jl:31
│  [8] include(::String) at ./client.jl:424
│  [9] top-level scope at none:5
│ in expression starting at /root/.julia/packages/LCMCore/cPbOB/deps/build.jl:75
│ Activating environment at `~/.julia/packages/LCMCore/cPbOB/deps/Project.toml`
│   Updating registry at `~/.julia/registries/General`
│   Updating git-repo `https://github.com/JuliaRegistries/General.git`
│ [?25l[2K[?25h Installed Compat ───── v2.1.0
│  Installed CMake ────── v1.1.1
│  Installed Parameters ─ v0.10.3
│  Installed JSON ─────── v0.20.0
│   Building CMake → `~/.julia/packages/CMake/ZGawK/deps/build.log`
└ @ Pkg.Operations /workspace/srcdir/julia/usr/share/julia/stdlib/v1.3/Pkg/src/Operations.jl:865
   Testing Caesar
    Status `/tmp/jl_1cGkGi/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [9bbbb610] ApproxManifoldProducts v0.1.2
  [ec485272] ArnoldiMethod v0.0.4
  [7d9fca2a] Arpack v0.4.0
  [68821587] Arpack_jll v3.5.0+2
  [4fba245c] ArrayInterface v2.0.0
  [9e28174c] BinDeps v0.8.10
  [b99e7846] BinaryProvider v0.5.8
  [62eebf14] Caesar v0.4.2
  [49dc2e85] Calculus v0.5.1
  [324d7699] CategoricalArrays v0.7.3
  [39d38320] CloudGraphs v0.1.2
  [944b1d66] CodecZlib v0.6.0
  [19ecbf4d] Codecs v0.5.0
  [3da002f7] ColorTypes v0.8.0
  [5ae59095] Colors v0.9.6
  [861a8166] Combinatorics v1.0.0
  [bbf7d656] CommonSubexpressions v0.2.0
  [34da2185] Compat v2.2.0
  [a81c6b42] Compose v0.7.3
  [8f4d0f93] Conda v1.3.0
  [150eb455] CoordinateTransformations v0.5.0
  [9a962f9c] DataAPI v1.1.0
  [a93c6f00] DataFrames v0.19.4
  [864edb3b] DataStructures v0.17.6
  [e2d170a0] DataValueInterfaces v1.0.0
  [01453d9d] DiffEqDiffTools v1.5.0
  [163ba53b] DiffResults v0.0.4
  [b552c78f] DiffRules v0.1.0
  [b4f34e82] Distances v0.8.2
  [b5cc3c7e] DistributedFactorGraphs v0.4.2
  [31c24e10] Distributions v0.21.10
  [ffbed154] DocStringExtensions v0.8.1
  [7a1cc6ca] FFTW v1.1.0
  [6ccb8d0d] FastIOBuffers v0.3.1
  [5789e2e9] FileIO v1.1.0
  [1a297f60] FillArrays v0.8.2
  [53c48c17] FixedPointNumbers v0.6.1
  [f6369f11] ForwardDiff v0.10.7
  [3e9e306e] FunctionalStateMachine v0.1.3
  [a2cc645c] GraphPlot v0.3.1
  [a2bd30eb] Graphics v0.4.0
  [86223c79] Graphs v0.10.3
  [cd3eb016] HTTP v0.8.8
  [a09fc81d] ImageCore v0.8.5
  [6218d12a] ImageMagick v0.7.5
  [904591bb] IncrementalInference v0.7.11
  [d25df0c9] Inflate v0.1.1
  [83e8ac13] IniFile v0.5.0
  [41ab1584] InvertedIndices v1.0.0
  [c8e1da08] IterTools v1.3.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [033835bb] JLD2 v0.1.9
  [682c06a0] JSON v0.21.0
  [2535ab7d] JSON2 v0.3.1
  [2472808a] KernelDensityEstimate v0.5.2
  [0ea44823] LCMCore v0.6.1
  [093fc24a] LightGraphs v1.3.0
  [d3d80556] LineSearches v7.0.1
  [1914dd2f] MacroTools v0.5.3
  [dbb5928d] MappedArrays v0.2.2
  [739be429] MbedTLS v0.7.0
  [442fdcdd] Measures v0.3.0
  [626554b9] MetaGraphs v0.6.4
  [e1d29d7a] Missings v0.4.3
  [4fe8b98c] Mongoc v0.2.1
  [d41bc354] NLSolversBase v7.5.0
  [2774e3e8] NLsolve v4.2.0
  [77ba4419] NaNMath v0.3.3
  [d2adbeaf] Neo4j v2.0.0
  [4d1e1d77] Nullables v1.0.0
  [6fe1bfb0] OffsetArrays v0.11.2
  [4536629a] OpenBLAS_jll v0.3.7+1
  [429524aa] Optim v0.19.5
  [bac558e1] OrderedCollections v1.1.0
  [90014a1f] PDMats v0.9.10
  [5432bcbf] PaddedViews v0.4.2
  [d96e819e] Parameters v0.12.0
  [69de0a69] Parsers v0.3.10
  [f27b6e38] Polynomials v0.6.0
  [2dfb63ee] PooledArrays v0.5.2
  [85a6dd25] PositiveFactorizations v0.2.3
  [92933f4c] ProgressMeter v1.2.0
  [3349acd9] ProtoBuf v0.7.0
  [1fd47b50] QuadGK v2.1.1
  [3cdcf5f2] RecipesBase v0.7.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v0.5.2
  [79098fc4] Rmath v0.5.1
  [91fb55c2] RoME v0.4.4
  [6038ab10] Rotations v0.12.0
  [699a6c99] SimpleTraits v0.9.1
  [a2af1166] SortingAlgorithms v0.3.1
  [276daf66] SpecialFunctions v0.8.0
  [90137ffa] StaticArrays v0.12.1
  [2913bbd2] StatsBase v0.32.0
  [4c63d2b9] StatsFuns v0.9.1
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v0.2.11
  [3bb67fe8] TranscodingStreams v0.9.5
  [9b8138ad] TransformUtils v0.2.2
  [30578b45] URIParser v0.4.0
  [cbff2730] Unmarshal v0.2.1
  [c4a57d5a] UnsafeArrays v1.0.0
  [81def892] VersionParsing v1.1.3
  [ddb6d928] YAML v0.3.2
  [c2297ded] ZMQ v1.0.0
  [2a0f44e3] Base64  [`@stdlib/Base64`]
  [ade2ca70] Dates  [`@stdlib/Dates`]
  [8bb1440f] DelimitedFiles  [`@stdlib/DelimitedFiles`]
  [8ba89e20] Distributed  [`@stdlib/Distributed`]
  [7b1f6079] FileWatching  [`@stdlib/FileWatching`]
  [9fa8497b] Future  [`@stdlib/Future`]
  [b77e0a4c] InteractiveUtils  [`@stdlib/InteractiveUtils`]
  [76f85450] LibGit2  [`@stdlib/LibGit2`]
  [8f399da3] Libdl  [`@stdlib/Libdl`]
  [37e2e46d] LinearAlgebra  [`@stdlib/LinearAlgebra`]
  [56ddb016] Logging  [`@stdlib/Logging`]
  [d6f4376e] Markdown  [`@stdlib/Markdown`]
  [a63ad114] Mmap  [`@stdlib/Mmap`]
  [44cfe95a] Pkg  [`@stdlib/Pkg`]
  [de0858da] Printf  [`@stdlib/Printf`]
  [9abbd945] Profile  [`@stdlib/Profile`]
  [3fa0cd96] REPL  [`@stdlib/REPL`]
  [9a3f8284] Random  [`@stdlib/Random`]
  [ea8e919c] SHA  [`@stdlib/SHA`]
  [9e88b42a] Serialization  [`@stdlib/Serialization`]
  [1a1011a3] SharedArrays  [`@stdlib/SharedArrays`]
  [6462fe0b] Sockets  [`@stdlib/Sockets`]
  [2f01184e] SparseArrays  [`@stdlib/SparseArrays`]
  [10745b16] Statistics  [`@stdlib/Statistics`]
  [4607b0f0] SuiteSparse  [`@stdlib/SuiteSparse`]
  [8dfed614] Test  [`@stdlib/Test`]
  [cf7118a7] UUIDs  [`@stdlib/UUIDs`]
  [4ec0a83e] Unicode  [`@stdlib/Unicode`]
[ Info: Multithreaded  convolutions possible, Threads.nthreads()=1.  See `addFactor!(.;threadmodel=MultiThreaded)`.
[ Info: KernelDensityEstimate.FORCE_EVAL_DIRECT = true
[ Info: KernelDensityEstimate.FORCE_EVAL_DIRECT = true
WARNING: ignoring conflicting import of IncrementalInference.compare into RoME
WARNING: Method definition convert(Type{Base.Dict{String, Any}}, IncrementalInference.Prior{T} where T) in module IncrementalInference at /root/.julia/packages/IncrementalInference/7z9j0/src/DefaultNodeTypes.jl:89 overwritten in module ZmqCaesar at /root/.julia/packages/Caesar/lM6pI/src/zmq/services/factors/factorSerialization.jl:11.
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition convert(Type{IncrementalInference.Prior{T} where T}, Base.Dict{String, Any}) in module IncrementalInference at /root/.julia/packages/IncrementalInference/7z9j0/src/DefaultNodeTypes.jl:98 overwritten in module ZmqCaesar at /root/.julia/packages/Caesar/lM6pI/src/zmq/services/factors/factorSerialization.jl:20.
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition convert(Type{RoME.Pose2Point2BearingRange{B, R} where R<:Union{IncrementalInference.AliasingScalarSampler, KernelDensityEstimate.BallTreeDensity, Distributions.Distribution{F, S} where S<:Distributions.ValueSupport where F<:Distributions.VariateForm} where B<:Union{IncrementalInference.AliasingScalarSampler, KernelDensityEstimate.BallTreeDensity, Distributions.Distribution{F, S} where S<:Distributions.ValueSupport where F<:Distributions.VariateForm}}, Base.Dict{String, Any}) in module ZmqCaesar at /root/.julia/packages/Caesar/lM6pI/src/zmq/services/factors/factorSerialization.jl:60 overwritten at /root/.julia/packages/Caesar/lM6pI/src/zmq/services/factors/factorSerialization.jl:72.
  ** incremental compilation may be fatally broken for this module **

┌ Warning: Replacing docs for `Base.convert :: Tuple{Type{RoME.Pose2Point2BearingRange},Dict{String,Any}}` in module `Caesar.ZmqCaesar`
└ @ Base.Docs docs/Docs.jl:223
WARNING: Method definition convert(Type{RoME.PartialPose3XYYaw{T1, T2} where T2 where T1}, Base.Dict{String, Any}) in module RoME at /root/.julia/packages/RoME/iDAXw/src/factors/PartialPose3.jl:237 overwritten in module ZmqCaesar at /root/.julia/packages/Caesar/lM6pI/src/zmq/services/factors/factorSerialization.jl:94.
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition convert(Type{RoME.PartialPriorRollPitchZ{T1, T2} where T2 where T1}, Base.Dict{String, Any}) in module RoME at /root/.julia/packages/RoME/iDAXw/src/factors/PartialPose3.jl:90 overwritten in module ZmqCaesar at /root/.julia/packages/Caesar/lM6pI/src/zmq/services/factors/factorSerialization.jl:106.
  ** incremental compilation may be fatally broken for this module **

[ Info: [ZMQ Server] Plotting endpoints are disabled in ZMQ server. Please call 'using RoMEPlotting' before 'using Caesar' if you would like to enable them.
WARNING: Method definition isopen(ZMQ.Socket) in module ZMQ at /root/.julia/packages/ZMQ/ABGOx/src/socket.jl:23 overwritten in module ZmqCaesar at /root/.julia/packages/Caesar/lM6pI/src/zmq/services/ZmqServer.jl:66.
  ** incremental compilation may be fatally broken for this module **

WARNING: could not import Base.compare into Caesar
[ Info: Adding graph visualization tools.
[ Info: Adding variable of type 'Pose2' with id 'x0'...
requestDict = Dict{String,Any}("payload" => Dict{String,Any}("variables" => "true","factors" => "true"),"request" => "ls")
[ Info: Adding factor of type 'Prior' to variables 'Any["x0"]'...
[ Info: try doautoinit! of x0
requestDict = Dict{String,Any}("payload" => Dict{String,Any}("variables" => "true","factors" => "true"),"request" => "ls")
[ Info: Adding variable of type 'Pose2' with id 'x1'...
odoFactCmd = Dict{String, Any}("request" => "addFactor", "payload" => JSON.parse(JSON.json(FactorRequest(["x$(i - 1)", "x$(i)"], "Pose2Pose2", factor)))) = Dict{String,Any}("payload" => Dict{String,Any}("variables" => Any["x0", "x1"],"factorType" => "Pose2Pose2","factor" => Dict{String,Any}("measurement" => Any[Dict{String,Any}("distType" => "MvNormal","mean" => Any[10.0, 0.0, 1.0471975511965976],"cov" => Any[0.1, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.1])])),"request" => "addFactor")
[ Info: Adding factor of type 'Pose2Pose2' to variables 'Any["x0", "x1"]'...
[ Info: try doautoinit! of x0
[ Info: init with useinitfct Symbol[:x0f1]
[ Info: do init of x0
[ Info: try doautoinit! of x1
[ Info: Adding variable of type 'Pose2' with id 'x2'...
[ Info: Adding factor of type 'Pose2Pose2' to variables 'Any["x1", "x2"]'...
odoFactCmd = Dict{String, Any}("request" => "addFactor", "payload" => JSON.parse(JSON.json(FactorRequest(["x$(i - 1)", "x$(i)"], "Pose2Pose2", factor)))) = Dict{String,Any}("payload" => Dict{String,Any}("variables" => Any["x1", "x2"],"factorType" => "Pose2Pose2","factor" => Dict{String,Any}("measurement" => Any[Dict{String,Any}("distType" => "MvNormal","mean" => Any[10.0, 0.0, 1.0471975511965976],"cov" => Any[0.1, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.1])])),"request" => "addFactor")
[ Info: try doautoinit! of x1
[ Info: init with useinitfct Symbol[:x0x1f1]
[ Info: do init of x1
[ Info: try doautoinit! of x2
[ Info: Adding variable of type 'Pose2' with id 'x3'...
odoFactCmd = Dict{String, Any}("request" => "addFactor", "payload" => JSON.parse(JSON.json(FactorRequest(["x$(i - 1)", "x$(i)"], "Pose2Pose2", factor)))) = Dict{String,Any}("payload" => Dict{String,Any}("variables" => Any["x2", "x3"],"factorType" => "Pose2Pose2","factor" => Dict{String,Any}("measurement" => Any[Dict{String,Any}("distType" => "MvNormal","mean" => Any[10.0, 0.0, 1.0471975511965976],"cov" => Any[0.1, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.1])])),"request" => "addFactor")
[ Info: Adding factor of type 'Pose2Pose2' to variables 'Any["x2", "x3"]'...
[ Info: try doautoinit! of x2
[ Info: init with useinitfct Symbol[:x1x2f1]
[ Info: do init of x2
[ Info: try doautoinit! of x3
[ Info: Adding variable of type 'Pose2' with id 'x4'...
odoFactCmd = Dict{String, Any}("request" => "addFactor", "payload" => JSON.parse(JSON.json(FactorRequest(["x$(i - 1)", "x$(i)"], "Pose2Pose2", factor)))) = Dict{String,Any}("payload" => Dict{String,Any}("variables" => Any["x3", "x4"],"factorType" => "Pose2Pose2","factor" => Dict{String,Any}("measurement" => Any[Dict{String,Any}("distType" => "MvNormal","mean" => Any[10.0, 0.0, 1.0471975511965976],"cov" => Any[0.1, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.1])])),"request" => "addFactor")
[ Info: Adding factor of type 'Pose2Pose2' to variables 'Any["x3", "x4"]'...
[ Info: try doautoinit! of x3
[ Info: init with useinitfct Symbol[:x2x3f1]
[ Info: do init of x3
[ Info: try doautoinit! of x4
[ Info: Adding variable of type 'Pose2' with id 'x5'...
odoFactCmd = Dict{String, Any}("request" => "addFactor", "payload" => JSON.parse(JSON.json(FactorRequest(["x$(i - 1)", "x$(i)"], "Pose2Pose2", factor)))) = Dict{String,Any}("payload" => Dict{String,Any}("variables" => Any["x4", "x5"],"factorType" => "Pose2Pose2","factor" => Dict{String,Any}("measurement" => Any[Dict{String,Any}("distType" => "MvNormal","mean" => Any[10.0, 0.0, 1.0471975511965976],"cov" => Any[0.1, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.1])])),"request" => "addFactor")
[ Info: Adding factor of type 'Pose2Pose2' to variables 'Any["x4", "x5"]'...
[ Info: try doautoinit! of x4
[ Info: init with useinitfct Symbol[:x3x4f1]
[ Info: do init of x4
[ Info: try doautoinit! of x5
[ Info: Adding variable of type 'Pose2' with id 'x6'...
[ Info: Adding factor of type 'Pose2Pose2' to variables 'Any["x5", "x6"]'...
[ Info: try doautoinit! of x5
odoFactCmd = Dict{String, Any}("request" => "addFactor", "payload" => JSON.parse(JSON.json(FactorRequest(["x$(i - 1)", "x$(i)"], "Pose2Pose2", factor)))) = Dict{String,Any}("payload" => Dict{String,Any}("variables" => Any["x5", "x6"],"factorType" => "Pose2Pose2","factor" => Dict{String,Any}("measurement" => Any[Dict{String,Any}("distType" => "MvNormal","mean" => Any[10.0, 0.0, 1.0471975511965976],"cov" => Any[0.1, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.1])])),"request" => "addFactor")
[ Info: init with useinitfct Symbol[:x4x5f1]
[ Info: do init of x5
requestDict = Dict{String,Any}("payload" => Dict{String,Any}("variables" => "true","factors" => "true"),"request" => "ls")
[ Info: try doautoinit! of x6
┌ Warning: deprecated batchSolve! in favor of new solveTree! interface with the same and more functionality.
└ @ IncrementalInference ~/.julia/packages/IncrementalInference/7z9j0/src/SolverAPI.jl:228

Building Bayes net...
[ Info: 
[ Info: Eliminating x5
[ Info: ===============
[ Info: 
[ Info:  - Removing x5
Si = Symbol[:x6, :x4]
[ Info: 
[ Info: Eliminating x3
[ Info: ===============
[ Info: 
[ Info:  - Removing x3
Si = Symbol[:x4, :x2]
[ Info: 
[ Info: Eliminating x1
[ Info: ===============
[ Info: 
[ Info:  - Removing x1
Si = Symbol[:x2, :x0]
[ Info: 
[ Info: Eliminating x0
[ Info: ===============
[ Info: 
[ Info:  - Removing x0
[ Info: Looking at x2x0f1
[ Info:    - Breaking link x2x0f1->x0...
[ Info:      - Original links: Symbol[:x2, :x0]
[ Info:      - New links: Symbol[:x2]
[ Info: x2x0f1 still has links to other variables, readding it back...
Si = Symbol[:x2]
[ Info: 
[ Info: Eliminating x4
[ Info: ===============
[ Info: 
[ Info:  - Removing x4
[ Info: Looking at x4x2f1
[ Info:    - Breaking link x4x2f1->x4...
[ Info:      - Original links: Symbol[:x4, :x2]
[ Info:      - New links: Symbol[:x2]
[ Info: x4x2f1 still has links to other variables, readding it back...
[ Info: Looking at x6x4f1
[ Info:    - Breaking link x6x4f1->x4...
[ Info:      - Original links: Symbol[:x6, :x4]
[ Info:      - New links: Symbol[:x6]
[ Info: x6x4f1 still has links to other variables, readding it back...
Si = Symbol[:x2, :x6]
[ Info: 
[ Info: Eliminating x2
[ Info: ===============
[ Info: 
[ Info:  - Removing x2
[ Info: Looking at x2f1
[ Info:    - Breaking link x2f1->x2...
[ Info:      - Original links: Symbol[:x2]
[ Info:      - New links: Symbol[]
[ Info: x2f1 doesn't have any other links, not adding it back...
[ Info: Looking at x2f2
[ Info:    - Breaking link x2f2->x2...
[ Info:      - Original links: Symbol[:x2]
[ Info:      - New links: Symbol[]
[ Info: x2f2 doesn't have any other links, not adding it back...
[ Info: Looking at x2x6f1
[ Info:    - Breaking link x2x6f1->x2...
[ Info:      - Original links: Symbol[:x2, :x6]
[ Info:      - New links: Symbol[:x6]
[ Info: x2x6f1 still has links to other variables, readding it back...
[ Info: Looking at x2f3
[ Info:    - Breaking link x2f3->x2...
[ Info:      - Original links: Symbol[:x2]
[ Info:      - New links: Symbol[]
[ Info: x2f3 doesn't have any other links, not adding it back...
Si = Symbol[:x6]
[ Info: 
[ Info: Eliminating x6
[ Info: ===============
[ Info: 
[ Info:  - Removing x6
[ Info: Looking at x6f1
[ Info:    - Breaking link x6f1->x6...
[ Info:      - Original links: Symbol[:x6]
[ Info:      - New links: Symbol[]
[ Info: x6f1 doesn't have any other links, not adding it back...
[ Info: Looking at x6f3
[ Info:    - Breaking link x6f3->x6...
[ Info:      - Original links: Symbol[:x6]
[ Info:      - New links: Symbol[]
[ Info: x6f3 doesn't have any other links, not adding it back...
[ Info: Looking at x6f2
[ Info:    - Breaking link x6f2->x6...
[ Info:      - Original links: Symbol[:x6]
[ Info:      - New links: Symbol[]
[ Info: x6f2 doesn't have any other links, not adding it back...
Find potential functions for each clique
[ Info: Get potentials x0,x1,: x2,
[ Info: using all factors among cliq variables
[ Info: finding all frontals for down WIP
[ Info: Get potentials x3,: x4,x2,
[ Info: using all factors among cliq variables
[ Info: finding all frontals for down WIP
[ Info: Get potentials x5,: x6,x4,
[ Info: using all factors among cliq variables
[ Info: finding all frontals for down WIP
[ Info: Get potentials x6,x2,x4,: 
[ Info: using all factors among cliq variables
[ Info: finding all frontals for down WIP
[ Info: cliq=1 adding factor that is no in separator, x5
[ Info: cliq=1 adding factor that is no in separator, x3
[ Info: cliq=1 adding factor that is no in separator, x1
[ Info: cliq=1 adding factor that is no in separator, x3
[ Info: cliq=1 adding factor that is no in separator, x5
Bayes Tree
[ Info: Solving over the Bayes (Junction) tree.
[ Info: Do tree based init-inference on tree
State machine iter=1
State machine iter=2
State machine iter=3
State machine iter=4
State machine iter=1
State machine iter=2
State machine iter=3
State machine iter=4
State machine iter=5
State machine iter=6
State machine iter=7
State machine iter=8
[ Info: up w 0 msgs
[ Info: ---------- successive fnc approx ------------x0,x1,: x2,
[ Info: #1	 -- 
State machine iter=1
State machine iter=2[ Info: ---------- successive fnc approx ------------x0,x1,: x2,

[ Info: #1	 -- 
State machine iter=3[ Info: [2x0p,d3,N100],

[ Info: [2x0p,d3,N100],
State machine iter=4[ Info: #2	 -- 

[ Info: [2x0p,d3,N100],
State machine iter=5[ Info: [2x0p,d3,N100],

[ Info: #3	 -- 
State machine iter=6[ Info: [2x0p,d3,N100],

[ Info: [2x0p,d3,N100],
State machine iter=7[ Info: fmcmc! -- solverData(vert=x2).inferdim=9.0

[ Info: fmcmc! -- solverData(vert=x0).inferdim=12.0
State machine iter=8[ Info: fmcmc! -- solverData(vert=x1).inferdim=18.0

[ Info: Outgoing msg density on: 
[ Info: up w 0 msgs
[ Info: prepCliqInitMsgsUp, seps=Symbol[:x2]
State machine iter=1[ Info: ---------- successive fnc approx ------------x3,: x4,x2,

[ Info: #1	 -- 
State machine iter=2[ Info: ---------- successive fnc approx ------------x3,: x4,x2,
[ Info: #1	 -- 

State machine iter=3[ Info: [2x0p,d3,N100],

[ Info: #2	 -- 
State machine iter=4[ Info: [2x0p,d3,N100],

[ Info: #3	 -- 
State machine iter=5[ Info: [2x0p,d3,N100],

[ Info: fmcmc! -- solverData(vert=x4).inferdim=9.0
State machine iter=6[ Info: fmcmc! -- solverData(vert=x2).inferdim=9.0

[ Info: fmcmc! -- solverData(vert=x3).inferdim=18.0
State machine iter=7[ Info: Outgoing msg density on: 

[ Info: prepCliqInitMsgsUp, seps=Symbol[:x4, :x2]
State machine iter=8
[ Info: up w 0 msgs
State machine iter=9
[ Info: ---------- successive fnc approx ------------x5,: x6,x4,
[ Info: #1	 -- 
State machine iter=10[ Info: ---------- successive fnc approx ------------x5,: x6,x4,

[ Info: #1	 -- 
[ Info: [2x0p,d3,N100],
State machine iter=9
[ Info: #2	 -- 
[ Info: [2x0p,d3,N100],
State machine iter=10[ Info: #3	 -- 

[ Info: [2x0p,d3,N100],
[ Info: fmcmc! -- solverData(vert=x6).inferdim=9.0
[ Info: fmcmc! -- solverData(vert=x4).inferdim=9.0
[ Info: fmcmc! -- solverData(vert=x5).inferdim=18.0
[ Info: Outgoing msg density on: 
[ Info: prepCliqInitMsgsUp, seps=Symbol[:x6, :x4]
State machine iter=5
State machine iter=6
[ Info: up w 3 msgs
State machine iter=9
[ Info: inp.sendmsgs[x2].inferdim=9.0
[ Info: inp.sendmsgs[x2].inferdim=9.0
State machine iter=10[ Info: inp.sendmsgs[x4].inferdim=9.0
[ Info: inp.sendmsgs[x6].inferdim=9.0

[ Info: inp.sendmsgs[x4].inferdim=9.0
[ Info: ---------- successive fnc approx ------------x6,x2,x4,: 
[ Info: #1	 -- 
[ Info: fmcmc! -- solverData(vert=x6).inferdim=9.0
[ Info: ---------- successive fnc approx ------------x6,x2,x4,: 
[ Info: #1	 -- 
[ Info: [2x0p,d3,N100],
[ Info: [2x0p,d3,N100],
[ Info: fmcmc! -- solverData(vert=x6).inferdim=9.0
[ Info: fmcmc! -- solverData(vert=x2).inferdim=18.0
[ Info: fmcmc! -- solverData(vert=x4).inferdim=18.0
[ Info: Outgoing msg density on: 
[ Info: prepCliqInitMsgsUp, seps=Symbol[]
State machine iter=7
State machine iter=8
varMax = getKDEMax(bel, addop=ops[1], diffop=ops[2]) = [-0.1207111091087191, -2.1231043007050343, -0.22695903537009882]
varMean = getKDEMean(bel) = [0.039246362746340996, -0.8178986786799268, -0.2914750187503662]
varPpe = deepcopy(varMax) = [-0.1207111091087191, -2.1231043007050343, -0.22695903537009882]
varMax = getKDEMax(bel, addop=ops[1], diffop=ops[2]) = [13.441490927554973, 8.28855473196621, 2.139802190245107]
varMean = getKDEMean(bel) = [13.013744203429592, 8.667137519386774, 1.839221953221582]
varPpe = deepcopy(varMax) = [13.441490927554973, 8.28855473196621, 2.139802190245107]
varMax = getKDEMax(bel, addop=ops[1], diffop=ops[2]) = [-0.07070432406626097, 12.51649464741411, -1.9916466035053895]
varMean = getKDEMean(bel) = [2.224347614441604, 12.933701112074033, -1.5956497876936675]
varPpe = deepcopy(varMax) = [-0.07070432406626097, 12.51649464741411, -1.9916466035053895]
[ Info: transferUpdateSubGraph! -- syms=Symbol[:x6, :x2, :x4]
[ Info: sym=x6, mem size of val=(3, 100) and (3, 100)
┌ Warning: Deprecated
└ @ IncrementalInference ~/.julia/packages/IncrementalInference/7z9j0/src/FactorGraphTypes.jl:362
┌ Warning: hasVariable() deprecated, please use exists()
└ @ DistributedFactorGraphs ~/.julia/packages/DistributedFactorGraphs/DCZjB/src/services/AbstractDFG.jl:461
[ Info: sym=x2, mem size of val=(3, 100) and (3, 100)
┌ Warning: Deprecated
└ @ IncrementalInference ~/.julia/packages/IncrementalInference/7z9j0/src/FactorGraphTypes.jl:362
┌ Warning: hasVariable() deprecated, please use exists()
└ @ DistributedFactorGraphs ~/.julia/packages/DistributedFactorGraphs/DCZjB/src/services/AbstractDFG.jl:461
[ Info: sym=x4, mem size of val=(3, 100) and (3, 100)
┌ Warning: Deprecated
└ @ IncrementalInference ~/.julia/packages/IncrementalInference/7z9j0/src/FactorGraphTypes.jl:362
┌ Warning: hasVariable() deprecated, please use exists()
└ @ DistributedFactorGraphs ~/.julia/packages/DistributedFactorGraphs/DCZjB/src/services/AbstractDFG.jl:461
State machine iter=11
[ Info: [2x0p,d3,N100],
State machine iter=11[ Info: [2x0p,d3,N100],

[ Info: [2x0p,d3,N100],
[ Info: [2x0p,d3,N100],
State machine iter=11[ Info: [2x0p,d3,N100],
[ Info: [2x0p,d3,N100],

[ Info: [2x0p,d3,N100],
varMax = getKDEMax(bel, addop=ops[1], diffop=ops[2]) = [ Info: [2x0p,d3,N100],
[7.685658186292229, 15.386735161140264, -2.784355400870759]
varMean = getKDEMean(bel) = [8.36101688635478, 15.688361905397583, -0.734888777106019]
varPpe = deepcopy(varMax) = [7.685658186292229, 15.386735161140264, -2.784355400870759]
varMax = getKDEMax(bel, addop=ops[1], diffop=ops[2]) = [0.15675298285272585, -0.03534597269337742, -0.04532006023087802]
varMean = getKDEMean(bel) = [0.02903445649893324, 0.021931262498998953, -0.045435587331660685]
varPpe = deepcopy(varMax) = [0.15675298285272585, -0.03534597269337742, -0.04532006023087802]
varMax = getKDEMax(bel, addop=ops[1], diffop=ops[2]) = [9.769586758735679, 0.11268210071860534, 1.0735047852620858]
varMean = getKDEMean(bel) = [9.412068687538055, 0.3732950347853032, 1.1118162242234546]
varPpe = deepcopy(varMax) = [9.769586758735679, 0.11268210071860534, 1.0735047852620858]
State machine iter=9
varMax = getKDEMax(bel, addop=ops[1], diffop=ops[2]) = [-1.569745540574116, 6.728763687290853, -1.255984071962478]
varMean = getKDEMean(bel) = [-2.273926476257092, 5.5627311912391155, -1.1619956937222518]
varPpe = deepcopy(varMax) = [-1.569745540574116, 6.728763687290853, -1.255984071962478]
State machine iter=12
State machine iter=12
State machine iter=12
[ Info: Finished tree based init-inference
[ Info: Adding factor of type 'IDontExistAsAFactor' to variables 'Any["x0"]'...
Test Summary: | Pass  Total
ZMQ Interface |   40     40
   Testing Caesar tests passed 
