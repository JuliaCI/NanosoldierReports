Running tests with Julia v1.3.1-pre.12
   Cloning default registries into `~/.julia`
   Cloning registry from "https://github.com/JuliaRegistries/General.git"
[?25l    Fetching: [>                                        ]  0.0 %    Fetching: [=============>                           ]  31.8 %    Fetching: [==========================>              ]  63.6 %[2K[?25h     Added registry `General` to `~/.julia/registries/General`
 Resolving package versions...
 Installed RecipesBase â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.7.0
 Installed DataValueInterfaces â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.0
 Installed Trajectories â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.1.0
 Installed DataAPI â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.1.0
 Installed Tables â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.2.11
 Installed TableTraits â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.0
 Installed DynamicIterators â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.0
 Installed IteratorInterfaceExtensions â”€ v1.0.0
  Updating `~/.julia/environments/v1.3/Project.toml`
  [6c76993d] + DynamicIterators v0.3.0
  Updating `~/.julia/environments/v1.3/Manifest.toml`
  [9a962f9c] + DataAPI v1.1.0
  [e2d170a0] + DataValueInterfaces v1.0.0
  [6c76993d] + DynamicIterators v0.3.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [3cdcf5f2] + RecipesBase v0.7.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2c80a279] + Trajectories v0.1.0
  [2a0f44e3] + Base64 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [9a3f8284] + Random 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [8dfed614] + Test 
   Testing DynamicIterators
 Resolving package versions...
 Installed OrderedCollections â”€ v1.1.0
 Installed URIParser â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.0
 Installed SpecialFunctions â”€â”€â”€ v0.8.0
 Installed BinDeps â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.0
 Installed StatsFuns â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.9.2
 Installed FillArrays â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.8.2
 Installed Distributions â”€â”€â”€â”€â”€â”€ v0.21.10
 Installed Arpack_jll â”€â”€â”€â”€â”€â”€â”€â”€â”€ v3.5.0+2
 Installed Missings â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.3
 Installed StatsBase â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.32.0
 Installed QuadGK â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v2.1.1
 Installed BinaryProvider â”€â”€â”€â”€â”€ v0.5.8
 Installed OpenBLAS_jll â”€â”€â”€â”€â”€â”€â”€ v0.3.7+1
 Installed SortingAlgorithms â”€â”€ v0.3.1
 Installed Arpack â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.0
 Installed DataStructures â”€â”€â”€â”€â”€ v0.17.6
 Installed PDMats â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.9.10
 Installed Rmath â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.6.0
  Building SpecialFunctions â†’ `~/.julia/packages/SpecialFunctions/ne2iw/deps/build.log`
  Building Rmath â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â†’ `~/.julia/packages/Rmath/BoBag/deps/build.log`
    Status `/tmp/jl_g3gA53/Manifest.toml`
  [7d9fca2a] Arpack v0.4.0
  [68821587] Arpack_jll v3.5.0+2
  [9e28174c] BinDeps v1.0.0
  [b99e7846] BinaryProvider v0.5.8
  [9a962f9c] DataAPI v1.1.0
  [864edb3b] DataStructures v0.17.6
  [e2d170a0] DataValueInterfaces v1.0.0
  [31c24e10] Distributions v0.21.10
  [6c76993d] DynamicIterators v0.3.0
  [1a297f60] FillArrays v0.8.2
  [82899510] IteratorInterfaceExtensions v1.0.0
  [e1d29d7a] Missings v0.4.3
  [4536629a] OpenBLAS_jll v0.3.7+1
  [bac558e1] OrderedCollections v1.1.0
  [90014a1f] PDMats v0.9.10
  [1fd47b50] QuadGK v2.1.1
  [3cdcf5f2] RecipesBase v0.7.0
  [79098fc4] Rmath v0.6.0
  [a2af1166] SortingAlgorithms v0.3.1
  [276daf66] SpecialFunctions v0.8.0
  [2913bbd2] StatsBase v0.32.0
  [4c63d2b9] StatsFuns v0.9.2
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v0.2.11
  [2c80a279] Trajectories v0.1.0
  [30578b45] URIParser v0.4.0
  [2a0f44e3] Base64  [`@stdlib/Base64`]
  [ade2ca70] Dates  [`@stdlib/Dates`]
  [8ba89e20] Distributed  [`@stdlib/Distributed`]
  [b77e0a4c] InteractiveUtils  [`@stdlib/InteractiveUtils`]
  [76f85450] LibGit2  [`@stdlib/LibGit2`]
  [8f399da3] Libdl  [`@stdlib/Libdl`]
  [37e2e46d] LinearAlgebra  [`@stdlib/LinearAlgebra`]
  [56ddb016] Logging  [`@stdlib/Logging`]
  [d6f4376e] Markdown  [`@stdlib/Markdown`]
  [44cfe95a] Pkg  [`@stdlib/Pkg`]
  [de0858da] Printf  [`@stdlib/Printf`]
  [3fa0cd96] REPL  [`@stdlib/REPL`]
  [9a3f8284] Random  [`@stdlib/Random`]
  [ea8e919c] SHA  [`@stdlib/SHA`]
  [9e88b42a] Serialization  [`@stdlib/Serialization`]
  [6462fe0b] Sockets  [`@stdlib/Sockets`]
  [2f01184e] SparseArrays  [`@stdlib/SparseArrays`]
  [10745b16] Statistics  [`@stdlib/Statistics`]
  [4607b0f0] SuiteSparse  [`@stdlib/SuiteSparse`]
  [8dfed614] Test  [`@stdlib/Test`]
  [cf7118a7] UUIDs  [`@stdlib/UUIDs`]
  [4ec0a83e] Unicode  [`@stdlib/Unicode`]
collect(bind(1:5, Summed())) = Any[1, 3, 6, 10, 15]
Test Summary: |
Examples      | No tests
Test Summary: | Pass  Total
Evolve        |   12     12
Test Summary: | Pass  Total
time          |    2      2
(x, s) = iterate(F) = ((2, 1), (2, 1))
(x, s) = iterate(F, s) = ((5, 2), (5, 2))
(x, s) = iterate(F, s) = ((9, 3), (9, 3))
Test Summary: | Pass  Total
Mix           |    3      3
collectfrom(WhiteNoise(), Sample(Start(0 => 0.0)), 10) = Pair{Int64,Float64}[1 => 0.048344718003438855, 2 => 0.47467161996917406, 3 => 0.15328661672791744, 4 => 1.305810270750767, 5 => -0.8413648705008027, 6 => 2.244013855461185, 7 => -1.7495111169901796, 8 => 1.318848921140702, 9 => 1.1334775517477402, 10 => 1.3099924635088003]
Test Summary: | Pass  Total
random        |   10     10
Test Summary: | Pass  Total
control       |    5      5
Test Summary: | Pass  Total
TimeLift      |    1      1
u = (0.0 => (0, 0), (1.0911803090907055 => 1, 0.5132655194494781 => 1))
collectfrom(PP, u, 10) = Tuple{Pair{Float64,Tuple{Int64,Int64}},Tuple{Pair{Float64,Int64},Pair{Float64,Int64}}}[(0.5132655194494781 => (0, 1), (1.0911803090907055 => 1, 0.8310426275907643 => 2)), (0.8310426275907643 => (0, 2), (1.0911803090907055 => 1, 2.5399634957569934 => 3)), (1.0911803090907055 => (1, 2), (2.7859022313715633 => 2, 2.5399634957569934 => 3)), (2.5399634957569934 => (1, 3), (2.7859022313715633 => 2, 2.849113447610489 => 4)), (2.7859022313715633 => (2, 3), (2.812616647561658 => 3, 2.849113447610489 => 4)), (2.812616647561658 => (3, 3), (5.4074753962662045 => 4, 2.849113447610489 => 4)), (2.849113447610489 => (3, 4), (5.4074753962662045 => 4, 3.2153008958391545 => 5)), (3.2153008958391545 => (3, 5), (5.4074753962662045 => 4, 3.592360643337213 => 6)), (3.592360643337213 => (3, 6), (5.4074753962662045 => 4, 6.934637342333274 => 7)), (5.4074753962662045 => (4, 6), (7.812688901585341 => 5, 6.934637342333274 => 7))]
Test Summary: |
Synchronize   | No tests
  0.000023 seconds (6 allocations: 224 bytes)
  0.000031 seconds (6 allocations: 224 bytes)
  0.000020 seconds (4 allocations: 160 bytes)
Done   Testing DynamicIterators tests passed 
