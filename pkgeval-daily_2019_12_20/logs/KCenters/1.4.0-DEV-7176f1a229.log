Julia Version 1.4.0-DEV.634
Commit 7176f1a229 (2019-12-18 18:55 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed InvertedIndices ───────────── v1.0.0
 Installed MappedArrays ──────────────── v0.2.2
 Installed KCenters ──────────────────── v0.1.8
 Installed Parsers ───────────────────── v0.3.10
 Installed OrderedCollections ────────── v1.1.0
 Installed MLLabelUtils ──────────────── v0.5.1
 Installed MLDataPattern ─────────────── v0.5.0
 Installed JSON ──────────────────────── v0.21.0
 Installed Reexport ──────────────────── v0.2.0
 Installed DataAPI ───────────────────── v1.1.0
 Installed Compat ────────────────────── v3.0.0
 Installed TableTraits ───────────────── v1.0.0
 Installed StatsBase ─────────────────── v0.32.0
 Installed DataStructures ────────────── v0.17.6
 Installed LearnBase ─────────────────── v0.2.2
 Installed SimilaritySearch ──────────── v0.3.17
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed Missings ──────────────────── v0.4.3
 Installed SortingAlgorithms ─────────── v0.3.1
 Installed PooledArrays ──────────────── v0.5.2
 Installed DataValueInterfaces ───────── v1.0.0
 Installed MLDataUtils ───────────────── v0.5.0
 Installed CategoricalArrays ─────────── v0.7.4
 Installed Tables ────────────────────── v0.2.11
 Installed DataFrames ────────────────── v0.20.0
  Updating `~/.julia/environments/v1.4/Project.toml`
  [5d8de97f] + KCenters v0.1.8
  Updating `~/.julia/environments/v1.4/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.4
  [34da2185] + Compat v3.0.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.6
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.8
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [2dfb63ee] + PooledArrays v0.5.2
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing KCenters
Path `/home/pkgeval/.julia/packages/KCenters/ME2xN` exists and looks like the correct package. Using existing path.
  Updating `/tmp/jl_6EpxWs/Project.toml`
  [5d8de97f] + KCenters v0.1.8 [`~/.julia/packages/KCenters/ME2xN`]
  Updating `/tmp/jl_6EpxWs/Manifest.toml`
  [5d8de97f] ~ KCenters v0.1.8 ⇒ v0.1.8 [`~/.julia/packages/KCenters/ME2xN`]
Running sandbox
Status `/tmp/jl_6EpxWs/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.8 [`~/.julia/packages/KCenters/ME2xN`]
  [cc2ba9b6] MLDataUtils v0.5.0
  [053f045d] SimilaritySearch v0.3.17
  [2913bbd2] StatsBase v0.32.0
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [2f01184e] SparseArrays 
  [8dfed614] Test 
WARNING: Compat.Statistics is deprecated, use Statistics instead.
  likely near /home/pkgeval/.julia/packages/CategoricalArrays/u89s1/src/extras.jl:1
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 144.89000000000001
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 76.25999999999993
[ Info: 43.79999999999999
[ Info: 24.540000000000006
Test Summary:        |
Clustering with dnet | No tests
[ Info: 313.64000338064864
[ Info: 547.7999992523
[ Info: 146.2399983987154
[ Info: 76.90000120870405
inertia(cfft.distances) = 19.004517414385244
inertia(cdnet.distances) = 23.53266228622997
inertia(crand.distances) = 20.19537115060326
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1123046875, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.1123046875,"f1":null,"seconds":3.129243850708008e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":3.796875,"distances_sum":332.08399255399064}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.1123046875,"state":{"ssize":4,"bsize":1},"perf":{"precision":null,"recall":0.1123046875,"f1":null,"seconds":3.129243850708008e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":3.796875,"distances_sum":332.08399255399064}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.1123046875,"state":{"ssize":4,"bsize":1},"perf":{"precision":null,"recall":0.1123046875,"f1":null,"seconds":3.129243850708008e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":3.796875,"distances_sum":332.08399255399064}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.43359375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.43359375,"f1":null,"seconds":3.380700945854187e-6,"exhaustive_search_seconds":1.5925616025924683e-6,"evaluations":6.4375,"distances_sum":956.8111583882143}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7021484375, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.7021484375,"f1":0.8152514152514161,"seconds":4.6174973249435425e-6,"exhaustive_search_seconds":1.5925616025924683e-6,"evaluations":7.78125,"distances_sum":1703.3492141311685}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7021484375,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.7021484375,"f1":0.8152514152514161,"seconds":4.6174973249435425e-6,"exhaustive_search_seconds":1.5925616025924683e-6,"evaluations":7.78125,"distances_sum":1703.3492141311685}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8759765625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8759765625,"f1":0.9288435522810529,"seconds":5.580484867095947e-6,"exhaustive_search_seconds":1.5925616025924683e-6,"evaluations":8.7265625,"distances_sum":2297.9403147307703}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.775390625, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.775390625,"f1":0.863185252247753,"seconds":5.21540641784668e-6,"exhaustive_search_seconds":1.5925616025924683e-6,"evaluations":8.1953125,"distances_sum":1935.1358681462652}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9569253663003667,"seconds":5.867332220077515e-6,"exhaustive_search_seconds":1.5925616025924683e-6,"evaluations":8.84375,"distances_sum":2529.4514421440167}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.923828125,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.9569253663003667,"seconds":5.867332220077515e-6,"exhaustive_search_seconds":1.5925616025924683e-6,"evaluations":8.84375,"distances_sum":2529.4514421440167}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9647722069597073,"seconds":6.146728992462158e-6,"exhaustive_search_seconds":1.5925616025924683e-6,"evaluations":8.921875,"distances_sum":2569.083880364556}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":6,"bsize":12}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9765109890109892,"seconds":5.843117833137512e-6,"exhaustive_search_seconds":1.5925616025924683e-6,"evaluations":8.9296875,"distances_sum":2673.332507536142}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9631353021978026,"seconds":5.668029189109802e-6,"exhaustive_search_seconds":1.5925616025924683e-6,"evaluations":8.90625,"distances_sum":2555.8492937691403}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9689617673992676,"seconds":6.38328492641449e-6,"exhaustive_search_seconds":1.5925616025924683e-6,"evaluations":8.8828125,"distances_sum":2607.7707300526004}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9580078125,"state":{"ssize":6,"bsize":12},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9765109890109892,"seconds":5.843117833137512e-6,"exhaustive_search_seconds":1.5925616025924683e-6,"evaluations":8.9296875,"distances_sum":2673.332507536142}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9580078125,"state":{"ssize":6,"bsize":12},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9765109890109892,"seconds":5.843117833137512e-6,"exhaustive_search_seconds":1.5925616025924683e-6,"evaluations":8.9296875,"distances_sum":2673.332507536142}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1630859375, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.1630859375,"f1":null,"seconds":2.603977918624878e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":4.4453125,"distances_sum":433.24172610611987}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6162109375, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6162109375,"f1":0.7469913766788773,"seconds":4.082918167114258e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":6.921875,"distances_sum":1542.2303810261726}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6162109375,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.6162109375,"f1":0.7469913766788773,"seconds":4.082918167114258e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":6.921875,"distances_sum":1542.2303810261726}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7294921875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7294921875,"f1":0.8313009906759915,"seconds":4.969537258148193e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.765625,"distances_sum":1875.6248157546365}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9460482226107232,"seconds":5.319714546203613e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.734375,"distances_sum":2546.0050435087132}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9052734375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9052734375,"f1":0.9460482226107232,"seconds":5.319714546203613e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.734375,"distances_sum":2546.0050435087132}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9625400641025643,"seconds":5.666166543960571e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.84375,"distances_sum":2653.7880711005864}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9742387820512824,"seconds":5.60469925403595e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.90625,"distances_sum":2731.8207995657754}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.953125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9742387820512824,"seconds":5.60469925403595e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.90625,"distances_sum":2731.8207995657754}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.953125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9742387820512824,"seconds":5.60469925403595e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.90625,"distances_sum":2731.8207995657754}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6748046875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6748046875,"f1":0.7899517149517159,"seconds":4.656612873077393e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":7.7578125,"distances_sum":1636.5528744969545}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7373046875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7373046875,"f1":0.8373855311355322,"seconds":5.036592483520508e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":7.96875,"distances_sum":1792.094886585693}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4287109375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4287109375,"f1":null,"seconds":3.952533006668091e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":6.4609375,"distances_sum":941.612626647091}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7373046875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7373046875,"f1":0.8373855311355322,"seconds":5.036592483520508e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":7.96875,"distances_sum":1792.094886585693}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9477392399267406,"seconds":5.833804607391357e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.828125,"distances_sum":2444.22614855644}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8681640625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8681640625,"f1":0.9226565101565105,"seconds":5.563721060752869e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.796875,"distances_sum":2295.4246886670567}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.908203125,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.908203125,"f1":0.9477392399267406,"seconds":5.833804607391357e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.828125,"distances_sum":2444.22614855644}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9506181318681324,"seconds":5.424022674560547e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.8125,"distances_sum":2487.715334571991}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9638671875, conf: {"ssize":2,"bsize":13}, perf: {"precision":1.0,"recall":0.9638671875,"f1":0.9801167582417584,"seconds":6.016343832015991e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.953125,"distances_sum":2679.637641606219}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9638671875,"state":{"ssize":2,"bsize":13},"perf":{"precision":1.0,"recall":0.9638671875,"f1":0.9801167582417584,"seconds":6.016343832015991e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.953125,"distances_sum":2679.637641606219}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9638671875,"state":{"ssize":2,"bsize":13},"perf":{"precision":1.0,"recall":0.9638671875,"f1":0.9801167582417584,"seconds":6.016343832015991e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.953125,"distances_sum":2679.637641606219}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7841796875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7841796875,"f1":0.8735634157509164,"seconds":5.075708031654358e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.359375,"distances_sum":2032.4678239683637}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7841796875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7841796875,"f1":0.8735634157509164,"seconds":5.075708031654358e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.359375,"distances_sum":2032.4678239683637}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8271484375, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8271484375,"f1":0.8985665376290383,"seconds":5.358830094337463e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.5546875,"distances_sum":2188.4184609908643}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8271484375,"state":{"ssize":2,"bsize":6},"perf":{"precision":1.0,"recall":0.8271484375,"f1":0.8985665376290383,"seconds":5.358830094337463e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.5546875,"distances_sum":2188.4184609908643}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9535771520146525,"seconds":6.025657057762146e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.890625,"distances_sum":2582.8570328635974}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.970335393772894,"seconds":6.020069122314453e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.9609375,"distances_sum":2716.0535838253854}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9572802197802204,"seconds":6.038695573806763e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.9375,"distances_sum":2576.0495562664837}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8642578125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8642578125,"f1":0.921777701465202,"seconds":5.511566996574402e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.65625,"distances_sum":2344.8751686112273}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.947265625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.970335393772894,"seconds":6.020069122314453e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.9609375,"distances_sum":2716.0535838253854}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.947265625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.970335393772894,"seconds":6.020069122314453e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.9609375,"distances_sum":2716.0535838253854}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.220703125, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.220703125,"f1":null,"seconds":3.2633543014526367e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":6.078125,"distances_sum":540.9080729381081}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5390625, conf: {"ssize":4,"bsize":3}, perf: {"precision":null,"recall":0.5390625,"f1":null,"seconds":4.215165972709656e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":7.0234375,"distances_sum":1288.389938188714}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6884765625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6884765625,"f1":0.8032767579642589,"seconds":4.813075065612793e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":7.75,"distances_sum":1722.067672214134}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6884765625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6884765625,"f1":0.8032767579642589,"seconds":4.813075065612793e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":7.75,"distances_sum":1722.067672214134}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6953125, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6953125,"f1":0.8103271728271737,"seconds":4.827976226806641e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":7.84375,"distances_sum":1760.2801968728004}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6953125,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.6953125,"f1":0.8103271728271737,"seconds":4.827976226806641e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":7.84375,"distances_sum":1760.2801968728004}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.6953125,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.6953125,"f1":0.8103271728271737,"seconds":4.827976226806641e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":7.84375,"distances_sum":1760.2801968728004}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6982421875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6982421875,"f1":0.8124557733932742,"seconds":5.055218935012817e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":7.75,"distances_sum":1677.536595519241}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6982421875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6982421875,"f1":0.8124557733932742,"seconds":5.055218935012817e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":7.75,"distances_sum":1677.536595519241}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7626953125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7626953125,"f1":0.8560704920079928,"seconds":5.085021257400513e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.0390625,"distances_sum":1925.7152119013801}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7626953125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7626953125,"f1":0.8560704920079928,"seconds":5.085021257400513e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.0390625,"distances_sum":1925.7152119013801}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.845703125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.845703125,"f1":0.9103968947718958,"seconds":5.632638931274414e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.4609375,"distances_sum":2216.807466071264}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9588427197802201,"seconds":6.254762411117554e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.8359375,"distances_sum":2539.7053450610097}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9594894688644693,"seconds":6.163492798805237e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.8203125,"distances_sum":2563.713308700292}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.9318598068598075,"seconds":5.902722477912903e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.609375,"distances_sum":2381.4912058961577}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8837890625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8837890625,"f1":0.933416583416584,"seconds":5.558133125305176e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.6640625,"distances_sum":2341.968281537385}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.765625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.765625,"f1":0.8595701173826181,"seconds":3.810971975326538e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.078125,"distances_sum":1902.0065573030813}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7890625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7890625,"f1":0.8747002997003004,"seconds":3.6973506212234497e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.0703125,"distances_sum":2017.237093953275}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9267578125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9267578125,"f1":0.9588427197802201,"seconds":6.254762411117554e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.8359375,"distances_sum":2539.7053450610097}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9267578125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9267578125,"f1":0.9588427197802201,"seconds":6.254762411117554e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.8359375,"distances_sum":2539.7053450610097}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.201171875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.201171875,"f1":null,"seconds":3.4365803003311157e-6,"exhaustive_search_seconds":1.7024576663970947e-6,"evaluations":5.0,"distances_sum":506.37241213066255}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.201171875,"state":{"ssize":2,"bsize":1},"perf":{"precision":null,"recall":0.201171875,"f1":null,"seconds":3.4365803003311157e-6,"exhaustive_search_seconds":1.7024576663970947e-6,"evaluations":5.0,"distances_sum":506.37241213066255}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.201171875,"state":{"ssize":2,"bsize":1},"perf":{"precision":null,"recall":0.201171875,"f1":null,"seconds":3.4365803003311157e-6,"exhaustive_search_seconds":1.7024576663970947e-6,"evaluations":5.0,"distances_sum":506.37241213066255}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3896484375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3896484375,"f1":null,"seconds":3.913417458534241e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":5.5859375,"distances_sum":720.3531342017791}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6669921875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6669921875,"f1":0.7868650446775455,"seconds":5.0067901611328125e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":7.390625,"distances_sum":1404.0104938842974}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6669921875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6669921875,"f1":0.7868650446775455,"seconds":5.0067901611328125e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":7.390625,"distances_sum":1404.0104938842974}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.81640625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.81640625,"f1":0.8917218198468208,"seconds":5.638226866722107e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":8.46875,"distances_sum":1831.7907290364649}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6689453125, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6689453125,"f1":0.7889457764457771,"seconds":4.259869456291199e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":7.359375,"distances_sum":1383.508596279371}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.81640625,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.81640625,"f1":0.8917218198468208,"seconds":5.638226866722107e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":8.46875,"distances_sum":1831.7907290364649}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9450320512820518,"seconds":6.008893251419067e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":8.75,"distances_sum":2183.0291392131094}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.822265625, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.822265625,"f1":0.8946579462204473,"seconds":5.15766441822052e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":8.46875,"distances_sum":1838.181161779419}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.904296875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.9450320512820518,"seconds":6.008893251419067e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":8.75,"distances_sum":2183.0291392131094}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.904296875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.9450320512820518,"seconds":6.008893251419067e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":8.75,"distances_sum":2183.0291392131094}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4296875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4296875,"f1":null,"seconds":3.887340426445007e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":5.890625,"distances_sum":881.2546645443293}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4267578125, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.4267578125,"f1":null,"seconds":3.6638230085372925e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":5.796875,"distances_sum":871.1374813981904}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.693359375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.693359375,"f1":0.8064206626706634,"seconds":4.6622008085250854e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":7.625,"distances_sum":1530.240104846471}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.693359375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.693359375,"f1":0.8064206626706634,"seconds":4.6622008085250854e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":7.625,"distances_sum":1530.240104846471}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.9400386072261079,"seconds":5.608424544334412e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.7265625,"distances_sum":2210.0727911764766}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.806640625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.806640625,"f1":0.8857574716949724,"seconds":5.472451448440552e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.2265625,"distances_sum":1889.1655874976}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.818359375, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.818359375,"f1":0.8938046328671336,"seconds":5.127862095832825e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.2890625,"distances_sum":1904.8696072710093}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8125,"f1":0.8904049075924086,"seconds":5.453824996948242e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.3125,"distances_sum":1893.05430974123}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7451171875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7451171875,"f1":0.8468214077589087,"seconds":5.027279257774353e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":7.703125,"distances_sum":1638.5732315823748}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8095703125, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8095703125,"f1":0.8898179945054953,"seconds":5.42961061000824e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.3125,"distances_sum":1834.6261893365984}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8955078125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8955078125,"f1":0.9400386072261079,"seconds":5.608424544334412e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.7265625,"distances_sum":2210.0727911764766}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9523637820512826,"seconds":5.37186861038208e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.765625,"distances_sum":2321.2198477768557}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.948597756410257,"seconds":5.6568533182144165e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.796875,"distances_sum":2281.1090028895337}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9668555402930407,"seconds":5.880370736122131e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.90625,"distances_sum":2380.070576270546}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.964548992673993,"seconds":5.910173058509827e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.8671875,"distances_sum":2379.494634759944}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9734203296703301,"seconds":5.822628736495972e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.90625,"distances_sum":2419.4792239309973}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9521484375,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9734203296703301,"seconds":5.822628736495972e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.90625,"distances_sum":2419.4792239309973}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9521484375,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9734203296703301,"seconds":5.822628736495972e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.90625,"distances_sum":2419.4792239309973}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2783203125,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2783203125,"f1":null,"seconds":3.384426236152649e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":5.890625,"distances_sum":584.5946580744301}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.2783203125,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2783203125,"f1":null,"seconds":3.384426236152649e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":5.890625,"distances_sum":584.5946580744301}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.236328125, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.236328125,"f1":null,"seconds":3.168359398841858e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":5.5234375,"distances_sum":581.2839360472633}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7626953125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7626953125,"f1":0.858090347152848,"seconds":5.334615707397461e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.0546875,"distances_sum":1877.285685306312}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7626953125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7626953125,"f1":0.858090347152848,"seconds":5.334615707397461e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.0546875,"distances_sum":1877.285685306312}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84765625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.84765625,"f1":0.9104686979686988,"seconds":5.3960829973220825e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.6875,"distances_sum":2116.8112174752227}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.9380437271062276,"seconds":5.513429641723633e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.7109375,"distances_sum":2338.091958348153}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.892578125,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.892578125,"f1":0.9380437271062276,"seconds":5.513429641723633e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.7109375,"distances_sum":2338.091958348153}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9690132783882788,"seconds":5.010515451431274e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.8515625,"distances_sum":2542.8969626194935}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9697573260073264,"seconds":6.433576345443726e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.9140625,"distances_sum":2516.970674964532}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9599609375, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9599609375,"f1":0.9779761904761906,"seconds":6.668269634246826e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.9375,"distances_sum":2590.4020092871037}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9599609375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.9779761904761906,"seconds":6.668269634246826e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.9375,"distances_sum":2590.4020092871037}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9599609375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.9779761904761906,"seconds":6.668269634246826e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.9375,"distances_sum":2590.4020092871037}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2578125, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2578125,"f1":null,"seconds":3.170222043991089e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":6.1640625,"distances_sum":598.0045138032615}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2568359375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2568359375,"f1":null,"seconds":3.259629011154175e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":6.234375,"distances_sum":612.1217092266243}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2353515625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2353515625,"f1":null,"seconds":3.030523657798767e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":5.859375,"distances_sum":523.0408450536353}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2578125,"state":{"ssize":4,"bsize":1},"perf":{"precision":null,"recall":0.2578125,"f1":null,"seconds":3.170222043991089e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":6.1640625,"distances_sum":598.0045138032615}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76171875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.76171875,"f1":0.8557021103896112,"seconds":5.1781535148620605e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.7578125,"distances_sum":1952.362063918028}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.671875, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.671875,"f1":0.7932276057276065,"seconds":4.595145583152771e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.4765625,"distances_sum":1635.8109894534246}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6044921875, conf: {"ssize":6,"bsize":3}, perf: {"precision":1.0,"recall":0.6044921875,"f1":0.738300588300589,"seconds":4.371628165245056e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.2265625,"distances_sum":1448.3914605019866}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3759765625, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.3759765625,"f1":null,"seconds":3.4496188163757324e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":5.71875,"distances_sum":817.8262720873383}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6796875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6796875,"f1":0.798384428071929,"seconds":4.675239324569702e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.59375,"distances_sum":1669.5838636877047}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5673828125, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.5673828125,"f1":0.7096982878232885,"seconds":4.073604941368103e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.0078125,"distances_sum":1339.3701037288874}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.76171875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.76171875,"f1":0.8557021103896112,"seconds":5.1781535148620605e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.7578125,"distances_sum":1952.362063918028}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8935546875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.8935546875,"f1":0.9385931776556782,"seconds":5.653128027915955e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.65625,"distances_sum":2529.3970911008437}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8896484375, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8896484375,"f1":0.9360035797535804,"seconds":5.634501576423645e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.6875,"distances_sum":2448.1849945252243}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8798828125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8798828125,"f1":0.9296307858807865,"seconds":5.548819899559021e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.5703125,"distances_sum":2426.4895330539393}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.9300595238095244,"seconds":5.295500159263611e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.59375,"distances_sum":2448.50655383736}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8935546875,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.8935546875,"f1":0.9385931776556782,"seconds":5.653128027915955e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.65625,"distances_sum":2529.3970911008437}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8935546875,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.8935546875,"f1":0.9385931776556782,"seconds":5.653128027915955e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.65625,"distances_sum":2529.3970911008437}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.666015625, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.666015625,"f1":0.7887520465645473,"seconds":4.820525646209717e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":7.5078125,"distances_sum":1555.5882928134758}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.666015625,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.666015625,"f1":0.7887520465645473,"seconds":4.820525646209717e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":7.5078125,"distances_sum":1555.5882928134758}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":9,"bsize":7}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9474046786546793,"seconds":6.727874279022217e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.71875,"distances_sum":2446.4380392484}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8291015625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8291015625,"f1":0.9002435064935074,"seconds":6.310641765594482e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.4296875,"distances_sum":2113.972994805786}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.66796875, conf: {"ssize":9,"bsize":4}, perf: {"precision":1.0,"recall":0.66796875,"f1":0.7908206376956384,"seconds":5.500391125679016e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":7.5625,"distances_sum":1541.267683318675}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.759765625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.759765625,"f1":0.8531858766233775,"seconds":5.856156349182129e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.0703125,"distances_sum":1886.9749787790165}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.908203125,"state":{"ssize":9,"bsize":7},"perf":{"precision":1.0,"recall":0.908203125,"f1":0.9474046786546793,"seconds":6.727874279022217e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.71875,"distances_sum":2446.4380392484}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9661858974358979,"seconds":6.029382348060608e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.8828125,"distances_sum":2585.0055074910733}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9673935439560443,"seconds":5.89713454246521e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.9375,"distances_sum":2559.797084307791}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9677655677655682,"seconds":5.692243576049805e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.8984375,"distances_sum":2578.5029714763605}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94140625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9673935439560443,"seconds":5.89713454246521e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.9375,"distances_sum":2559.797084307791}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94140625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9673935439560443,"seconds":5.89713454246521e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.9375,"distances_sum":2559.797084307791}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7978515625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7978515625,"f1":0.8814393939393949,"seconds":5.012378096580505e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":7.9765625,"distances_sum":2033.0055677351922}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3818359375, conf: {"ssize":4,"bsize":2}, perf: {"precision":1.0,"recall":0.3818359375,"f1":0.5380799755799756,"seconds":3.7942081689834595e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":6.3125,"distances_sum":854.659870350421}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7119140625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.7119140625,"f1":0.8207943098568107,"seconds":6.316788494586945e-5,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":7.6640625,"distances_sum":1742.129170984741}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7978515625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7978515625,"f1":0.8814393939393949,"seconds":5.012378096580505e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":7.9765625,"distances_sum":2033.0055677351922}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9419184981684988,"seconds":5.548819899559021e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.71875,"distances_sum":2443.6585418194295}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.884765625,"f1":0.9330471611721618,"seconds":5.636364221572876e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.609375,"distances_sum":2400.1208631012582}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8310546875, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8310546875,"f1":0.9015973609723616,"seconds":5.2656978368759155e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.53125,"distances_sum":2178.713497208943}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8134765625, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8134765625,"f1":0.8909829753579761,"seconds":5.165114998817444e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.3671875,"distances_sum":2130.513664332379}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8994140625,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.8994140625,"f1":0.9419184981684988,"seconds":5.548819899559021e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.71875,"distances_sum":2443.6585418194295}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9599587912087917,"seconds":5.973502993583679e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.875,"distances_sum":2566.1392017216112}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.945747481684982,"seconds":5.5730342864990234e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.7109375,"distances_sum":2515.1300958616534}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9628205128205132,"seconds":5.712732672691345e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.7890625,"distances_sum":2643.039173245408}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9345703125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9628205128205132,"seconds":5.712732672691345e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.7890625,"distances_sum":2643.039173245408}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9345703125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9628205128205132,"seconds":5.712732672691345e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.7890625,"distances_sum":2643.039173245408}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2470703125,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2470703125,"f1":null,"seconds":3.341585397720337e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":6.53125,"distances_sum":598.5141374577925}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.2470703125,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2470703125,"f1":null,"seconds":3.341585397720337e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":6.53125,"distances_sum":598.5141374577925}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.419921875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.419921875,"f1":null,"seconds":3.4384429454803467e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":5.8984375,"distances_sum":951.6342470959228}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.419921875,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.419921875,"f1":null,"seconds":3.4384429454803467e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":5.8984375,"distances_sum":951.6342470959228}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7568359375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7568359375,"f1":0.8504276973026983,"seconds":4.9211084842681885e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.7421875,"distances_sum":1986.3340855190686}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7548828125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7548828125,"f1":0.8516138375513383,"seconds":5.114823579788208e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.734375,"distances_sum":1945.1256256184965}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7568359375,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7568359375,"f1":0.8504276973026983,"seconds":4.9211084842681885e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.7421875,"distances_sum":1986.3340855190686}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9442250457875465,"seconds":5.453824996948242e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.734375,"distances_sum":2548.4265768663054}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9421474358974364,"seconds":5.3551048040390015e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.6796875,"distances_sum":2577.8656576845324}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.798828125, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.798828125,"f1":0.8818686521811531,"seconds":5.295500159263611e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.1875,"distances_sum":2103.208110387957}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78125, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.78125,"f1":0.8677031302031311,"seconds":4.777684807777405e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.8359375,"distances_sum":2085.011279641949}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9033203125,"state":{"ssize":6,"bsize":8},"perf":{"precision":1.0,"recall":0.9033203125,"f1":0.9442250457875465,"seconds":5.453824996948242e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.734375,"distances_sum":2548.4265768663054}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9033203125,"state":{"ssize":6,"bsize":8},"perf":{"precision":1.0,"recall":0.9033203125,"f1":0.9442250457875465,"seconds":5.453824996948242e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.734375,"distances_sum":2548.4265768663054}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5498046875, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5498046875,"f1":null,"seconds":4.153698682785034e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":6.640625,"distances_sum":1263.23305172929}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5498046875,"state":{"ssize":1,"bsize":3},"perf":{"precision":null,"recall":0.5498046875,"f1":null,"seconds":4.153698682785034e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":6.640625,"distances_sum":1263.23305172929}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.869140625, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.869140625,"f1":0.9227225899100903,"seconds":5.280598998069763e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.5078125,"distances_sum":2355.607531792542}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6533203125, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6533203125,"f1":0.7806453962703971,"seconds":4.213303327560425e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":7.1640625,"distances_sum":1548.231434076376}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6865234375, conf: {"ssize":7,"bsize":4}, perf: {"precision":1.0,"recall":0.6865234375,"f1":0.8037002927627935,"seconds":4.49642539024353e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":7.34375,"distances_sum":1648.9006747537753}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.869140625,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.869140625,"f1":0.9227225899100903,"seconds":5.280598998069763e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.5078125,"distances_sum":2355.607531792542}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9708733974358978,"seconds":5.884096026420593e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.90625,"distances_sum":2652.497522484733}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.89453125,"f1":0.9395260989010995,"seconds":5.3998082876205444e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.5859375,"distances_sum":2494.6080523761084}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9371909340659346,"seconds":5.628913640975952e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.6171875,"distances_sum":2418.75141175439}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8779296875, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.8779296875,"f1":0.929181235431236,"seconds":5.364418029785156e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.5859375,"distances_sum":2396.120363364738}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.947265625,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9708733974358978,"seconds":5.884096026420593e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.90625,"distances_sum":2652.497522484733}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.947265625,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9708733974358978,"seconds":5.884096026420593e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.90625,"distances_sum":2652.497522484733}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78515625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.78515625,"f1":0.8726882492507498,"seconds":5.213543772697449e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.3046875,"distances_sum":1992.2325082065963}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5712890625, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5712890625,"f1":null,"seconds":4.673376679420471e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":7.875,"distances_sum":1355.297614282441}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7099609375, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.7099609375,"f1":0.8190937534687542,"seconds":4.7292560338974e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.0234375,"distances_sum":1776.2933352776163}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.78515625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.78515625,"f1":0.8726882492507498,"seconds":5.213543772697449e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.3046875,"distances_sum":1992.2325082065963}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8486328125, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8486328125,"f1":0.9127778471528479,"seconds":5.379319190979004e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.703125,"distances_sum":2284.3849239394276}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9681375915750918,"seconds":6.0442835092544556e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.9140625,"distances_sum":2661.2647998497173}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9535428113553116,"seconds":5.58607280254364e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.7890625,"distances_sum":2543.6157077646717}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8017578125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.8017578125,"f1":0.8838115009990017,"seconds":5.243346095085144e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.3828125,"distances_sum":2057.6007595513197}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9423828125,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9681375915750918,"seconds":6.0442835092544556e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.9140625,"distances_sum":2661.2647998497173}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9697265625, conf: {"ssize":1,"bsize":13}, perf: {"precision":1.0,"recall":0.9697265625,"f1":0.9836309523809526,"seconds":5.977228283882141e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.96875,"distances_sum":2773.1312251166005}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9697265625,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.9697265625,"f1":0.9836309523809526,"seconds":5.977228283882141e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.96875,"distances_sum":2773.1312251166005}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9697265625,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.9697265625,"f1":0.9836309523809526,"seconds":5.977228283882141e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.96875,"distances_sum":2773.1312251166005}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.521484375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.521484375,"f1":0.6686445498945505,"seconds":4.712492227554321e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.0390625,"distances_sum":1239.7273862019845}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1982421875, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.1982421875,"f1":null,"seconds":3.21120023727417e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":4.703125,"distances_sum":507.57539445511384}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.193359375, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.193359375,"f1":null,"seconds":3.248453140258789e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":4.6796875,"distances_sum":500.6811564236359}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.521484375,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.521484375,"f1":0.6686445498945505,"seconds":4.712492227554321e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.0390625,"distances_sum":1239.7273862019845}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.869140625, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.869140625,"f1":0.9237325174825181,"seconds":5.593523383140564e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.6484375,"distances_sum":2319.411702234732}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.86328125, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.86328125,"f1":0.9175614316239321,"seconds":5.451962351799011e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.5390625,"distances_sum":2303.746825966211}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.646484375, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.646484375,"f1":0.7706708222333231,"seconds":4.801899194717407e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.796875,"distances_sum":1589.8687679931754}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7763671875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7763671875,"f1":0.8642326423576431,"seconds":4.800036549568176e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.3828125,"distances_sum":2001.6371543033074}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7314453125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7314453125,"f1":0.8336075382950391,"seconds":4.883855581283569e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.2734375,"distances_sum":1810.8709352835233}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.869140625,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.869140625,"f1":0.9237325174825181,"seconds":5.593523383140564e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.6484375,"distances_sum":2319.411702234732}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.884765625,"f1":0.9330471611721616,"seconds":5.2265822887420654e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.6328125,"distances_sum":2402.976389851327}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9635073260073262,"seconds":5.427747964859009e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.8203125,"distances_sum":2599.081077257528}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.88671875,"f1":0.934975961538462,"seconds":5.15766441822052e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.6328125,"distances_sum":2439.8353368105345}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9734375000000004,"seconds":5.690380930900574e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.8984375,"distances_sum":2642.917867919524}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9413404304029311,"seconds":5.304813385009766e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.7265625,"distances_sum":2423.476482520699}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9414039085914089,"seconds":5.48921525478363e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.703125,"distances_sum":2481.616538280547}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.951171875,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9734375000000004,"seconds":5.690380930900574e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.8984375,"distances_sum":2642.917867919524}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.951171875,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9734375000000004,"seconds":5.690380930900574e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.8984375,"distances_sum":2642.917867919524}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5146484375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5146484375,"f1":0.6599875818625821,"seconds":4.036352038383484e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":6.9140625,"distances_sum":810.1846610084982}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5146484375,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5146484375,"f1":0.6599875818625821,"seconds":4.036352038383484e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":6.9140625,"distances_sum":810.1846610084982}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5263671875, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5263671875,"f1":0.6727536352536357,"seconds":4.144385457038879e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":6.8359375,"distances_sum":859.1023634842866}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.689453125, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.689453125,"f1":0.8029267607392616,"seconds":4.902482032775879e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":7.828125,"distances_sum":1155.0894692834668}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7978515625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7978515625,"f1":0.8775765900765911,"seconds":5.19677996635437e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.234375,"distances_sum":1371.39582770092}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7978515625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7978515625,"f1":0.8775765900765911,"seconds":5.19677996635437e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.234375,"distances_sum":1371.39582770092}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9536343864468869,"seconds":5.62518835067749e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.6953125,"distances_sum":1746.1053337930953}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.798828125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.798828125,"f1":0.8788243006993016,"seconds":5.077570676803589e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.2265625,"distances_sum":1343.273180248396}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8515625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8515625,"f1":0.9115702006327014,"seconds":5.532056093215942e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.40625,"distances_sum":1513.393666180899}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84765625, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.84765625,"f1":0.9086855852480857,"seconds":5.619600415229797e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.3359375,"distances_sum":1499.2456179287449}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91796875,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.91796875,"f1":0.9536343864468869,"seconds":5.62518835067749e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.6953125,"distances_sum":1746.1053337930953}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.91796875,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.91796875,"f1":0.9536343864468869,"seconds":5.62518835067749e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.6953125,"distances_sum":1746.1053337930953}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7490234375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7490234375,"f1":0.8459576881451889,"seconds":5.183741450309753e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.265625,"distances_sum":1331.3930954968844}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.453125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.453125,"f1":null,"seconds":3.855675458908081e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":6.6640625,"distances_sum":802.7292773728781}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.580078125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.580078125,"f1":0.7166671869796876,"seconds":4.250556230545044e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":7.359375,"distances_sum":977.367815767589}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7490234375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7490234375,"f1":0.8459576881451889,"seconds":5.183741450309753e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.265625,"distances_sum":1331.3930954968844}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8701171875, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8701171875,"f1":0.9245827089577097,"seconds":5.60469925403595e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.5859375,"distances_sum":1637.9187994920824}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8037109375, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8037109375,"f1":0.8847329753579762,"seconds":5.3513795137405396e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.484375,"distances_sum":1453.1513247540713}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8740234375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8740234375,"f1":0.9288633241758247,"seconds":5.446374416351318e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.5546875,"distances_sum":1653.8700047252833}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8271484375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8271484375,"f1":0.898806922244423,"seconds":5.807727575302124e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.578125,"distances_sum":1542.1621626263081}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8740234375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8740234375,"f1":0.9288633241758247,"seconds":5.446374416351318e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.5546875,"distances_sum":1653.8700047252833}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9598989552114559,"seconds":5.900859832763672e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.828125,"distances_sum":1846.1171749925306}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9557520604395607,"seconds":6.226822733879089e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.796875,"distances_sum":1811.124494360236}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9731627747252748,"seconds":5.910173058509827e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.8984375,"distances_sum":1927.7230442077278}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9529850357975362,"seconds":5.496665835380554e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.7734375,"distances_sum":1814.235972895732}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9521484375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9731627747252748,"seconds":5.910173058509827e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.8984375,"distances_sum":1927.7230442077278}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9521484375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9731627747252748,"seconds":5.910173058509827e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.8984375,"distances_sum":1927.7230442077278}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7568359375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7568359375,"f1":0.8528851356976364,"seconds":5.280598998069763e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.34375,"distances_sum":1320.768308120806}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7568359375,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7568359375,"f1":0.8528851356976364,"seconds":5.280598998069763e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.34375,"distances_sum":1320.768308120806}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.82421875, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.82421875,"f1":0.8952989718614726,"seconds":5.709007382392883e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.8359375,"distances_sum":1488.9585751196903}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9663003663003669,"seconds":5.796551704406738e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.9296875,"distances_sum":1852.8214809531894}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.954281135531136,"seconds":5.725771188735962e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.9296875,"distances_sum":1769.2188955910838}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9668727106227112,"seconds":5.7872384786605835e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.9140625,"distances_sum":1849.974767466563}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9404296875,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9668727106227112,"seconds":5.7872384786605835e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.9140625,"distances_sum":1849.974767466563}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9667239010989015,"seconds":6.187707185745239e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.984375,"distances_sum":1843.5855088527744}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9658203125, conf: {"ssize":2,"bsize":12}, perf: {"precision":1.0,"recall":0.9658203125,"f1":0.9813072344322349,"seconds":6.079673767089844e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.9921875,"distances_sum":1935.2222629286205}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9743303571428572,"seconds":5.9157609939575195e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.9921875,"distances_sum":1874.364411130907}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9658203125,"state":{"ssize":2,"bsize":12},"perf":{"precision":1.0,"recall":0.9658203125,"f1":0.9813072344322349,"seconds":6.079673767089844e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.9921875,"distances_sum":1935.2222629286205}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9658203125,"state":{"ssize":2,"bsize":12},"perf":{"precision":1.0,"recall":0.9658203125,"f1":0.9813072344322349,"seconds":6.079673767089844e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.9921875,"distances_sum":1935.2222629286205}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4140625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4140625,"f1":null,"seconds":3.594905138015747e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":6.4609375,"distances_sum":724.1384599794784}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.68359375, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.68359375,"f1":0.7996487887112895,"seconds":4.421919584274292e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.15625,"distances_sum":1153.068557344218}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.68359375,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.68359375,"f1":0.7996487887112895,"seconds":4.421919584274292e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.15625,"distances_sum":1153.068557344218}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8447265625, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8447265625,"f1":0.9109661172161179,"seconds":5.127862095832825e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.875,"distances_sum":1563.848404460656}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8388671875, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8388671875,"f1":0.9068598068598076,"seconds":5.3122639656066895e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.921875,"distances_sum":1532.9979255437065}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8447265625,"state":{"ssize":5,"bsize":6},"perf":{"precision":1.0,"recall":0.8447265625,"f1":0.9109661172161179,"seconds":5.127862095832825e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.875,"distances_sum":1563.848404460656}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":9,"bsize":10}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9694768772893776,"seconds":6.0033053159713745e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.9609375,"distances_sum":1883.765490146271}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9699233058608063,"seconds":6.064772605895996e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.9609375,"distances_sum":1881.0804068398181}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9703525641025643,"seconds":6.154179573059082e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.9296875,"distances_sum":1886.1965942642191}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9628033424908429,"seconds":5.666166543960571e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.921875,"distances_sum":1843.031270121698}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.947265625,"state":{"ssize":7,"bsize":10},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9699233058608063,"seconds":6.064772605895996e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.9609375,"distances_sum":1881.0804068398181}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.947265625,"state":{"ssize":7,"bsize":10},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9699233058608063,"seconds":6.064772605895996e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.9609375,"distances_sum":1881.0804068398181}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2421875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2421875,"f1":null,"seconds":3.6545097827911377e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":6.7109375,"distances_sum":435.9788470806259}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4228515625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4228515625,"f1":null,"seconds":4.0121376514434814e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":6.7890625,"distances_sum":730.2940826123872}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4228515625,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.4228515625,"f1":null,"seconds":4.0121376514434814e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":6.7890625,"distances_sum":730.2940826123872}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8486328125, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8486328125,"f1":0.9136675824175831,"seconds":5.705282092094421e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.8984375,"distances_sum":1666.5062306223035}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8486328125,"state":{"ssize":2,"bsize":6},"perf":{"precision":1.0,"recall":0.8486328125,"f1":0.9136675824175831,"seconds":5.705282092094421e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.8984375,"distances_sum":1666.5062306223035}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9491185897435904,"seconds":6.252899765968323e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.90625,"distances_sum":1858.7257979258811}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9111328125,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9111328125,"f1":0.9491185897435904,"seconds":6.252899765968323e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.90625,"distances_sum":1858.7257979258811}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9111328125,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9111328125,"f1":0.9491185897435904,"seconds":6.252899765968323e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.90625,"distances_sum":1858.7257979258811}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3974609375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3974609375,"f1":null,"seconds":3.6247074604034424e-6,"exhaustive_search_seconds":1.2200325727462769e-6,"evaluations":6.4375,"distances_sum":698.0442317721552}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3974609375,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.3974609375,"f1":null,"seconds":3.6247074604034424e-6,"exhaustive_search_seconds":1.2200325727462769e-6,"evaluations":6.4375,"distances_sum":698.0442317721552}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4189453125, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.4189453125,"f1":null,"seconds":3.6116689443588257e-6,"exhaustive_search_seconds":1.2200325727462769e-6,"evaluations":6.640625,"distances_sum":746.026550623269}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6552734375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6552734375,"f1":0.7775139790764798,"seconds":4.783272743225098e-6,"exhaustive_search_seconds":1.2200325727462769e-6,"evaluations":7.890625,"distances_sum":1212.4725327765243}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6552734375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6552734375,"f1":0.7775139790764798,"seconds":4.783272743225098e-6,"exhaustive_search_seconds":1.2200325727462769e-6,"evaluations":7.890625,"distances_sum":1212.4725327765243}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6884765625, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6884765625,"f1":0.8035017066267074,"seconds":4.800036549568176e-6,"exhaustive_search_seconds":1.2200325727462769e-6,"evaluations":8.09375,"distances_sum":1291.1517767245973}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8232421875, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8232421875,"f1":0.8964832042957053,"seconds":6.144866347312927e-6,"exhaustive_search_seconds":1.2200325727462769e-6,"evaluations":8.7265625,"distances_sum":1648.0783068736177}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.65625, conf: {"ssize":8,"bsize":4}, perf: {"precision":1.0,"recall":0.65625,"f1":0.7796063311688319,"seconds":4.542991518974304e-6,"exhaustive_search_seconds":1.2200325727462769e-6,"evaluations":7.859375,"distances_sum":1221.3613200982675}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8232421875,"state":{"ssize":6,"bsize":6},"perf":{"precision":1.0,"recall":0.8232421875,"f1":0.8964832042957053,"seconds":6.144866347312927e-6,"exhaustive_search_seconds":1.2200325727462769e-6,"evaluations":8.7265625,"distances_sum":1648.0783068736177}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8232421875,"state":{"ssize":6,"bsize":6},"perf":{"precision":1.0,"recall":0.8232421875,"f1":0.8964832042957053,"seconds":6.144866347312927e-6,"exhaustive_search_seconds":1.2200325727462769e-6,"evaluations":8.7265625,"distances_sum":1648.0783068736177}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1953125, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.1953125,"f1":null,"seconds":3.1962990760803223e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":5.2734375,"distances_sum":335.79447673684416}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5322265625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5322265625,"f1":0.679493943556444,"seconds":4.403293132781982e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.34375,"distances_sum":939.3548825701927}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6767578125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6767578125,"f1":0.7957155691530698,"seconds":4.954636096954346e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.140625,"distances_sum":1189.7519303696845}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6767578125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6767578125,"f1":0.7957155691530698,"seconds":4.954636096954346e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.140625,"distances_sum":1189.7519303696845}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7392578125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7392578125,"f1":0.836576791264292,"seconds":5.247071385383606e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.453125,"distances_sum":1330.6583291344066}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84765625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.84765625,"f1":0.9119822885447892,"seconds":5.602836608886719e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.84375,"distances_sum":1616.7961855257495}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6826171875, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6826171875,"f1":0.7989619755244765,"seconds":5.0943344831466675e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.078125,"distances_sum":1181.835035983257}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.84765625,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.84765625,"f1":0.9119822885447892,"seconds":5.602836608886719e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.84375,"distances_sum":1616.7961855257495}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9420615842490848,"seconds":5.548819899559021e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.8125,"distances_sum":1804.7548467874503}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9608459249084252,"seconds":5.835667252540588e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.8984375,"distances_sum":1886.4561864474094}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8701171875, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8701171875,"f1":0.925623855311356,"seconds":5.561858415603638e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.765625,"distances_sum":1679.3331787780635}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9326171875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9608459249084252,"seconds":5.835667252540588e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.8984375,"distances_sum":1886.4561864474094}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9326171875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9608459249084252,"seconds":5.835667252540588e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.8984375,"distances_sum":1886.4561864474094}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.412109375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.412109375,"f1":null,"seconds":4.522502422332764e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":6.2578125,"distances_sum":693.9158905301201}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1845703125, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.1845703125,"f1":null,"seconds":3.4980475902557373e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":5.59375,"distances_sum":317.4805470023985}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1962890625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.1962890625,"f1":null,"seconds":3.077089786529541e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":5.640625,"distances_sum":385.302111795291}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.412109375,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.412109375,"f1":null,"seconds":4.522502422332764e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":6.2578125,"distances_sum":693.9158905301201}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6640625, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.6640625,"f1":0.7888484779109788,"seconds":4.4442713260650635e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":7.7890625,"distances_sum":1194.3889504329659}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6640625,"state":{"ssize":6,"bsize":4},"perf":{"precision":1.0,"recall":0.6640625,"f1":0.7888484779109788,"seconds":4.4442713260650635e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":7.7890625,"distances_sum":1194.3889504329659}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.938999542124543,"seconds":5.383044481277466e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.78125,"distances_sum":1783.1623830197045}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.828125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.828125,"f1":0.8998288170163179,"seconds":5.202367901802063e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.671875,"distances_sum":1587.2798819730563}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76171875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.76171875,"f1":0.8591346153846162,"seconds":4.984438419342041e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.4375,"distances_sum":1412.937962009429}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8916015625,"state":{"ssize":6,"bsize":7},"perf":{"precision":1.0,"recall":0.8916015625,"f1":0.938999542124543,"seconds":5.383044481277466e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.78125,"distances_sum":1783.1623830197045}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8916015625,"state":{"ssize":6,"bsize":7},"perf":{"precision":1.0,"recall":0.8916015625,"f1":0.938999542124543,"seconds":5.383044481277466e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.78125,"distances_sum":1783.1623830197045}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7783203125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7783203125,"f1":0.8667842574092581,"seconds":5.066394805908203e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.5859375,"distances_sum":1448.539771724447}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.759765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.759765625,"f1":0.8546453546453555,"seconds":5.360692739486694e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.5546875,"distances_sum":1411.5953502034838}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.421875, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.421875,"f1":null,"seconds":3.87243926525116e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":6.734375,"distances_sum":711.3810980528888}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7783203125,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7783203125,"f1":0.8667842574092581,"seconds":5.066394805908203e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.5859375,"distances_sum":1448.539771724447}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.9300485972360979,"seconds":5.692243576049805e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.890625,"distances_sum":1764.4769051112564}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8720703125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8720703125,"f1":0.9256696428571435,"seconds":5.8729201555252075e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.859375,"distances_sum":1714.037270699539}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9606684981684986,"seconds":5.89713454246521e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.84375,"distances_sum":1928.435565837509}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9638450091575095,"seconds":5.921348929405212e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.9453125,"distances_sum":1939.5452760594856}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.935546875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.9638450091575095,"seconds":5.921348929405212e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.9453125,"distances_sum":1939.5452760594856}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.958984375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.9772722069597073,"seconds":6.584450602531433e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.9609375,"distances_sum":2019.984148193145}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9677734375, conf: {"ssize":3,"bsize":13}, perf: {"precision":1.0,"recall":0.9677734375,"f1":0.9817937271062271,"seconds":6.6086649894714355e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.9921875,"distances_sum":2048.7276285052626}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9697401556776559,"seconds":6.292015314102173e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.9453125,"distances_sum":1976.5398935459248}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9638671875, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9638671875,"f1":0.9803571428571431,"seconds":6.15045428276062e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.96875,"distances_sum":2031.4129277826808}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9664835164835172,"seconds":5.930662155151367e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.9765625,"distances_sum":1940.0442291560944}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9700206043956047,"seconds":6.712973117828369e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.9609375,"distances_sum":1977.1925910292405}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9677734375,"state":{"ssize":3,"bsize":13},"perf":{"precision":1.0,"recall":0.9677734375,"f1":0.9817937271062271,"seconds":6.6086649894714355e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.9921875,"distances_sum":2048.7276285052626}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9677734375,"state":{"ssize":3,"bsize":13},"perf":{"precision":1.0,"recall":0.9677734375,"f1":0.9817937271062271,"seconds":6.6086649894714355e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.9921875,"distances_sum":2048.7276285052626}}, n: 9
inertia(cfft.distances) = 23.196712508908167
inertia(cdnet.distances) = 22.96685290404042
inertia(crand.distances) = 21.21648502025307
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8977777777777778
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.8933333333333334
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.9511111111111111
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8911111111111111
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.9
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.9022222222222221
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8955555555555555
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.9422222222222222
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9422222222222222
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9422222222222222
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8888888888888888
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8955555555555555
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8866666666666667
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.8911111111111111
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.8888888888888888
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.8844444444444445
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9311111111111111
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9177777777777778
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9311111111111111
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.9222222222222222
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.8777777777777778
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.9288888888888889
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.9111111111111111
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.9199999999999999
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.8688888888888888
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.9022222222222221
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.9044444444444445
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.8999999999999999
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.9177777777777777
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.9088888888888889
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.8733333333333334
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.8955555555555555
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.9111111111111111
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.9022222222222221
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [3, 1, 2, 1, 3, 2, 3, 2, 3, 1, 2, 3, 3, 3, 2, 3, 3, 3, 1, 2, 2]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 22, 1]]
** centroid: 1, normalized-entropy: 0.2580186686648155, [(nc.class_map = [2, 3, 1, 3, 2, 1, 3, 1, 2, 2, 3, 3, 1]
acc = 0.92
2, 22), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 9: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 10, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
finished with 13 centroids; started with 12
*** starting iteration: 1; err: [Inf, 0.497866671914803] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.497866671914803, 0.17489017765964954] ***
*** starting iteration: 2; err: [Inf, 0.497866671914803, 0.17489017765964954] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.497866671914803, 0.17489017765964954, 0.1681256392756239] ***
*** starting iteration: 3; err: [Inf, 0.497866671914803, 0.17489017765964954, 0.1681256392756239] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.497866671914803, 0.17489017765964954, 0.1681256392756239, 0.16623308135521941] ***
*** starting iteration: 4; err: [Inf, 0.497866671914803, 0.17489017765964954, 0.1681256392756239, 0.16623308135521941] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.497866671914803, 0.17489017765964954, 0.1681256392756239, 0.16623308135521941, 0.16563043541887676] ***
*** finished computation of 12 references, err: [Inf, 0.497866671914803, 0.17489017765964954, 0.1681256392756239, 0.16623308135521941, 0.16563043541887676] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
acc = 0.9733333333333334
Test Summary:   | Pass  Total
NearestCentroid |   10     10
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.28600991814612253] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28600991814612253, 0.1765185454995296] ***
*** finished computation of 7 references, err: [Inf, 0.28600991814612253, 0.1765185454995296] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 19, 1]]
** centroid: 1, normalized-entropy: 0.2863969571159561, [(2, 19), (3, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 11]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 15, 4]]
** centroid: 7, normalized-entropy: 0.7424875695421234, [(2, 15), (3, 4)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5668380049481188] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5668380049481188, 0.2575460735486603] ***
*** finished computation of 7 references, err: [Inf, 0.5668380049481188, 0.2575460735486603] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 3, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 25]]
*** center 5: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 23, 7]]
** centroid: 7, normalized-entropy: 0.7837769474847011, [(2, 23), (3, 7)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5299441590075701] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5299441590075701, 0.24713246829613908] ***
*** finished computation of 7 references, err: [Inf, 0.5299441590075701, 0.24713246829613908] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 9]]
** centroid: 2, normalized-entropy: 0.6840384356390419, [(2, 2), (3, 9)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 18, 1]]
** centroid: 3, normalized-entropy: 0.2974722489192896, [(2, 18), (3, 1)]
*** center 4: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 1, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 11, 9]]
** centroid: 7, normalized-entropy: 0.9927744539878083, [(2, 11), (3, 9)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.2058798072509127] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.2058798072509127, 0.53383612633555] ***
*** starting iteration: 2; err: [Inf, 1.2058798072509127, 0.53383612633555] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.2058798072509127, 0.53383612633555, 0.2884243093565155] ***
*** starting iteration: 3; err: [Inf, 1.2058798072509127, 0.53383612633555, 0.2884243093565155] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.2058798072509127, 0.53383612633555, 0.2884243093565155, 0.21459753406446663] ***
*** starting iteration: 4; err: [Inf, 1.2058798072509127, 0.53383612633555, 0.2884243093565155, 0.21459753406446663] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.2058798072509127, 0.53383612633555, 0.2884243093565155, 0.21459753406446663, 0.21297922872561176] ***
*** starting iteration: 5; err: [Inf, 1.2058798072509127, 0.53383612633555, 0.2884243093565155, 0.21459753406446663, 0.21297922872561176] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.2058798072509127, 0.53383612633555, 0.2884243093565155, 0.21459753406446663, 0.21297922872561176, 0.21097116192392346] ***
*** starting iteration: 6; err: [Inf, 1.2058798072509127, 0.53383612633555, 0.2884243093565155, 0.21459753406446663, 0.21297922872561176, 0.21097116192392346] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.2058798072509127, 0.53383612633555, 0.2884243093565155, 0.21459753406446663, 0.21297922872561176, 0.21097116192392346, 0.20927512712120525] ***
*** starting iteration: 7; err: [Inf, 1.2058798072509127, 0.53383612633555, 0.2884243093565155, 0.21459753406446663, 0.21297922872561176, 0.21097116192392346, 0.20927512712120525] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.2058798072509127, 0.53383612633555, 0.2884243093565155, 0.21459753406446663, 0.21297922872561176, 0.21097116192392346, 0.20927512712120525, 0.20871527311453641] ***
*** finished computation of 7 references, err: [Inf, 1.2058798072509127, 0.53383612633555, 0.2884243093565155, 0.21459753406446663, 0.21297922872561176, 0.21097116192392346, 0.20927512712120525, 0.20871527311453641] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 16, 12]]
** centroid: 1, normalized-entropy: 0.9852281360342514, [(2, 16), (3, 12)]
*** center 2: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 4: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 18, 1]]
** centroid: 5, normalized-entropy: 0.2974722489192896, [(2, 18), (3, 1)]
*** center 6: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6798901482222172] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6798901482222172, 0.3444789814013727] ***
*** starting iteration: 2; err: [Inf, 0.6798901482222172, 0.3444789814013727] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6798901482222172, 0.3444789814013727, 0.27367275558871745] ***
*** starting iteration: 3; err: [Inf, 0.6798901482222172, 0.3444789814013727, 0.27367275558871745] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6798901482222172, 0.3444789814013727, 0.27367275558871745, 0.23435269129782418] ***
*** starting iteration: 4; err: [Inf, 0.6798901482222172, 0.3444789814013727, 0.27367275558871745, 0.23435269129782418] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6798901482222172, 0.3444789814013727, 0.27367275558871745, 0.23435269129782418, 0.2138114794333536] ***
*** starting iteration: 5; err: [Inf, 0.6798901482222172, 0.3444789814013727, 0.27367275558871745, 0.23435269129782418, 0.2138114794333536] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6798901482222172, 0.3444789814013727, 0.27367275558871745, 0.23435269129782418, 0.2138114794333536, 0.20875663641373798] ***
*** starting iteration: 6; err: [Inf, 0.6798901482222172, 0.3444789814013727, 0.27367275558871745, 0.23435269129782418, 0.2138114794333536, 0.20875663641373798] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6798901482222172, 0.3444789814013727, 0.27367275558871745, 0.23435269129782418, 0.2138114794333536, 0.20875663641373798, 0.207105698824773] ***
*** starting iteration: 7; err: [Inf, 0.6798901482222172, 0.3444789814013727, 0.27367275558871745, 0.23435269129782418, 0.2138114794333536, 0.20875663641373798, 0.207105698824773] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6798901482222172, 0.3444789814013727, 0.27367275558871745, 0.23435269129782418, 0.2138114794333536, 0.20875663641373798, 0.207105698824773, 0.20636471906602424] ***
*** finished computation of 7 references, err: [Inf, 0.6798901482222172, 0.3444789814013727, 0.27367275558871745, 0.23435269129782418, 0.2138114794333536, 0.20875663641373798, 0.207105698824773, 0.20636471906602424] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 11, 2]]
** centroid: 2, normalized-entropy: 0.6193821946787638, [(2, 11), (3, 2)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 14, 8]]
** centroid: 3, normalized-entropy: 0.9456603046006401, [(2, 14), (3, 8)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3637446637646777] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3637446637646777, 0.20005300482681038] ***
*** starting iteration: 2; err: [Inf, 0.3637446637646777, 0.20005300482681038] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3637446637646777, 0.20005300482681038, 0.19447702820062202] ***
*** starting iteration: 3; err: [Inf, 0.3637446637646777, 0.20005300482681038, 0.19447702820062202] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3637446637646777, 0.20005300482681038, 0.19447702820062202, 0.18410037922935488] ***
*** starting iteration: 4; err: [Inf, 0.3637446637646777, 0.20005300482681038, 0.19447702820062202, 0.18410037922935488] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3637446637646777, 0.20005300482681038, 0.19447702820062202, 0.18410037922935488, 0.17768442173253202] ***
*** starting iteration: 5; err: [Inf, 0.3637446637646777, 0.20005300482681038, 0.19447702820062202, 0.18410037922935488, 0.17768442173253202] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3637446637646777, 0.20005300482681038, 0.19447702820062202, 0.18410037922935488, 0.17768442173253202, 0.17617928833085486] ***
*** starting iteration: 6; err: [Inf, 0.3637446637646777, 0.20005300482681038, 0.19447702820062202, 0.18410037922935488, 0.17768442173253202, 0.17617928833085486] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3637446637646777, 0.20005300482681038, 0.19447702820062202, 0.18410037922935488, 0.17768442173253202, 0.17617928833085486, 0.17617928833085486] ***
*** finished computation of 7 references, err: [Inf, 0.3637446637646777, 0.20005300482681038, 0.19447702820062202, 0.18410037922935488, 0.17768442173253202, 0.17617928833085486, 0.17617928833085486] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 2: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 2, 21]]
** centroid: 6, normalized-entropy: 0.42622865699814483, [(2, 2), (3, 21)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 20, 1]]
** centroid: 7, normalized-entropy: 0.2761954276479391, [(2, 20), (3, 1)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.9476000059665199] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9476000059665199, 0.3762804004602602] ***
*** starting iteration: 2; err: [Inf, 0.9476000059665199, 0.3762804004602602] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9476000059665199, 0.3762804004602602, 0.3131805013648504] ***
*** starting iteration: 3; err: [Inf, 0.9476000059665199, 0.3762804004602602, 0.3131805013648504] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9476000059665199, 0.3762804004602602, 0.3131805013648504, 0.2623494039276859] ***
*** starting iteration: 4; err: [Inf, 0.9476000059665199, 0.3762804004602602, 0.3131805013648504, 0.2623494039276859] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9476000059665199, 0.3762804004602602, 0.3131805013648504, 0.2623494039276859, 0.2459685176992133] ***
*** starting iteration: 5; err: [Inf, 0.9476000059665199, 0.3762804004602602, 0.3131805013648504, 0.2623494039276859, 0.2459685176992133] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9476000059665199, 0.3762804004602602, 0.3131805013648504, 0.2623494039276859, 0.2459685176992133, 0.2459685176992133] ***
*** finished computation of 7 references, err: [Inf, 0.9476000059665199, 0.3762804004602602, 0.3131805013648504, 0.2623494039276859, 0.2459685176992133, 0.2459685176992133] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 15, 8]]
** centroid: 3, normalized-entropy: 0.9321115676166747, [(2, 15), (3, 8)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 19, 1]]
*** center 5: selecting labels [1] (freq >= 2) [from [26, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6692000106360974] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6692000106360974, 0.4783858495194647] ***
*** starting iteration: 2; err: [Inf, 0.6692000106360974, 0.4783858495194647] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6692000106360974, 0.4783858495194647, 0.37514868549406016] ***
*** starting iteration: 3; err: [Inf, 0.6692000106360974, 0.4783858495194647, 0.37514868549406016] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6692000106360974, 0.4783858495194647, 0.37514868549406016, 0.30833044644664226] ***
*** starting iteration: 4; err: [Inf, 0.6692000106360974, 0.4783858495194647, 0.37514868549406016, 0.30833044644664226] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6692000106360974, 0.4783858495194647, 0.37514868549406016, 0.30833044644664226, 0.301343436921248] ***
*** starting iteration: 5; err: [Inf, 0.6692000106360974, 0.4783858495194647, 0.37514868549406016, 0.30833044644664226, 0.301343436921248] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6692000106360974, 0.4783858495194647, 0.37514868549406016, 0.30833044644664226, 0.301343436921248, 0.301343436921248] ***
*** finished computation of 7 references, err: [Inf, 0.6692000106360974, 0.4783858495194647, 0.37514868549406016, 0.30833044644664226, 0.301343436921248, 0.301343436921248] ***
*** center 1: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 22]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 18, 10]]
** centroid: 4, normalized-entropy: 0.940285958670631, [(2, 18), (3, 10)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 3, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.9759999821905222] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9759999821905222, 0.41654067910468856] ***
*** starting iteration: 2; err: [Inf, 0.9759999821905222, 0.41654067910468856] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9759999821905222, 0.41654067910468856, 0.36038700199359125] ***
*** starting iteration: 3; err: [Inf, 0.9759999821905222, 0.41654067910468856, 0.36038700199359125] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9759999821905222, 0.41654067910468856, 0.36038700199359125, 0.3068167116628814] ***
*** starting iteration: 4; err: [Inf, 0.9759999821905222, 0.41654067910468856, 0.36038700199359125, 0.3068167116628814] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9759999821905222, 0.41654067910468856, 0.36038700199359125, 0.3068167116628814, 0.2959217705114154] ***
*** starting iteration: 5; err: [Inf, 0.9759999821905222, 0.41654067910468856, 0.36038700199359125, 0.3068167116628814, 0.2959217705114154] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9759999821905222, 0.41654067910468856, 0.36038700199359125, 0.3068167116628814, 0.2959217705114154, 0.28856783304785716] ***
*** starting iteration: 6; err: [Inf, 0.9759999821905222, 0.41654067910468856, 0.36038700199359125, 0.3068167116628814, 0.2959217705114154, 0.28856783304785716] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9759999821905222, 0.41654067910468856, 0.36038700199359125, 0.3068167116628814, 0.2959217705114154, 0.28856783304785716, 0.2842418659070689] ***
*** starting iteration: 7; err: [Inf, 0.9759999821905222, 0.41654067910468856, 0.36038700199359125, 0.3068167116628814, 0.2959217705114154, 0.28856783304785716, 0.2842418659070689] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9759999821905222, 0.41654067910468856, 0.36038700199359125, 0.3068167116628814, 0.2959217705114154, 0.28856783304785716, 0.2842418659070689, 0.2806261871935369] ***
*** starting iteration: 8; err: [Inf, 0.9759999821905222, 0.41654067910468856, 0.36038700199359125, 0.3068167116628814, 0.2959217705114154, 0.28856783304785716, 0.2842418659070689, 0.2806261871935369] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9759999821905222, 0.41654067910468856, 0.36038700199359125, 0.3068167116628814, 0.2959217705114154, 0.28856783304785716, 0.2842418659070689, 0.2806261871935369, 0.2722113975774785] ***
*** starting iteration: 9; err: [Inf, 0.9759999821905222, 0.41654067910468856, 0.36038700199359125, 0.3068167116628814, 0.2959217705114154, 0.28856783304785716, 0.2842418659070689, 0.2806261871935369, 0.2722113975774785] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9759999821905222, 0.41654067910468856, 0.36038700199359125, 0.3068167116628814, 0.2959217705114154, 0.28856783304785716, 0.2842418659070689, 0.2806261871935369, 0.2722113975774785, 0.26929724514665315] ***
*** starting iteration: 10; err: [Inf, 0.9759999821905222, 0.41654067910468856, 0.36038700199359125, 0.3068167116628814, 0.2959217705114154, 0.28856783304785716, 0.2842418659070689, 0.2806261871935369, 0.2722113975774785, 0.26929724514665315] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9759999821905222, 0.41654067910468856, 0.36038700199359125, 0.3068167116628814, 0.2959217705114154, 0.28856783304785716, 0.2842418659070689, 0.2806261871935369, 0.2722113975774785, 0.26929724514665315, 0.2675147722104563] ***
*** finished computation of 7 references, err: [Inf, 0.9759999821905222, 0.41654067910468856, 0.36038700199359125, 0.3068167116628814, 0.2959217705114154, 0.28856783304785716, 0.2842418659070689, 0.2806261871935369, 0.2722113975774785, 0.26929724514665315, 0.2675147722104563] ***
*** center 1: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 12]]
*** center 3: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 8, 21]]
** centroid: 4, normalized-entropy: 0.8497511372532974, [(2, 8), (3, 21)]
*** center 5: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 5, 1]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 19, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.9116999947231319] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9116999947231319, 0.5470605626152908] ***
*** starting iteration: 2; err: [Inf, 0.9116999947231319, 0.5470605626152908] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9116999947231319, 0.5470605626152908, 0.5435265242392948] ***
*** starting iteration: 3; err: [Inf, 0.9116999947231319, 0.5470605626152908, 0.5435265242392948] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9116999947231319, 0.5470605626152908, 0.5435265242392948, 0.5418087753103024] ***
*** finished computation of 3 references, err: [Inf, 0.9116999947231319, 0.5470605626152908, 0.5435265242392948, 0.5418087753103024] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 32, 9]]
** centroid: 1, normalized-entropy: 0.7592757847892834, [(2, 32), (3, 9)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 25]]
** centroid: 2, normalized-entropy: 0.38094658570539014, [(2, 2), (3, 25)]
*** center 3: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.7571999960754088] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.7571999960754088, 1.4389904871293786] ***
*** starting iteration: 2; err: [Inf, 3.7571999960754088, 1.4389904871293786] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.7571999960754088, 1.4389904871293786, 0.7408141148135552] ***
*** starting iteration: 3; err: [Inf, 3.7571999960754088, 1.4389904871293786, 0.7408141148135552] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.7571999960754088, 1.4389904871293786, 0.7408141148135552, 0.6058608151831315] ***
*** finished computation of 3 references, err: [Inf, 3.7571999960754088, 1.4389904871293786, 0.7408141148135552, 0.6058608151831315] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 33, 10]]
** centroid: 1, normalized-entropy: 0.7824441294066888, [(2, 33), (3, 10)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 22]]
*** center 3: selecting labels [1] (freq >= 2) [from [34, 1, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9095000043295858] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9095000043295858, 0.4794966865479151] ***
*** starting iteration: 2; err: [Inf, 0.9095000043295858, 0.4794966865479151] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9095000043295858, 0.4794966865479151, 0.47073799965920854] ***
*** starting iteration: 3; err: [Inf, 0.9095000043295858, 0.4794966865479151, 0.47073799965920854] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9095000043295858, 0.4794966865479151, 0.47073799965920854, 0.4697972748951754] ***
*** finished computation of 3 references, err: [Inf, 0.9095000043295858, 0.4794966865479151, 0.47073799965920854, 0.4697972748951754] ***
*** center 1: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 23]]
** centroid: 2, normalized-entropy: 0.4021791902022729, [(2, 2), (3, 23)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 30, 11]]
** centroid: 3, normalized-entropy: 0.8390040613676978, [(2, 30), (3, 11)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 4.312999964520002] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.312999964520002, 1.2113918014730929] ***
*** finished computation of 3 references, err: [Inf, 4.312999964520002, 1.2113918014730929] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 29]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [32, 8, 0]]
** centroid: 2, normalized-entropy: 0.7219280948873623, [(1, 32), (2, 8)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 26, 5]]
** centroid: 3, normalized-entropy: 0.6373874992221911, [(2, 26), (3, 5)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9668999978965835] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9668999978965835, 0.5956440405825779] ***
*** finished computation of 3 references, err: [Inf, 0.9668999978965835, 0.5956440405825779] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 4, 27]]
** centroid: 1, normalized-entropy: 0.5547781633412736, [(2, 4), (3, 27)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 30, 5]]
** centroid: 2, normalized-entropy: 0.5916727785823274, [(2, 30), (3, 5)]
*** center 3: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.876500034788233] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.876500034788233, 1.06344929667332] ***
*** finished computation of 3 references, err: [Inf, 3.876500034788233, 1.06344929667332] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 10, 33]]
** centroid: 1, normalized-entropy: 0.7824441294066888, [(2, 10), (3, 33)]
*** center 2: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 22, 1]]
** centroid: 3, normalized-entropy: 0.2580186686648155, [(2, 22), (3, 1)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6459525331076088] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6459525331076088, 0.3324672289016813] ***
*** finished computation of 7 references, err: [Inf, 0.6459525331076088, 0.3324672289016813] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 17, 1]]
** centroid: 1, normalized-entropy: 0.3095434291503252, [(2, 17), (3, 1)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 13, 33]]
** centroid: 2, normalized-entropy: 0.8589810370425965, [(2, 13), (3, 33)]
*** center 4: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5585312706192131] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5585312706192131, 0.2964431500397022] ***
*** finished computation of 7 references, err: [Inf, 0.5585312706192131, 0.2964431500397022] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 2, 24]]
** centroid: 1, normalized-entropy: 0.3912435636292556, [(2, 2), (3, 24)]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 13, 7]]
** centroid: 3, normalized-entropy: 0.9340680553754911, [(2, 13), (3, 7)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 5, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 6: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.42309486619257014] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42309486619257014, 0.21125895595032848] ***
*** finished computation of 7 references, err: [Inf, 0.42309486619257014, 0.21125895595032848] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 8, 21]]
** centroid: 3, normalized-entropy: 0.8497511372532974, [(2, 8), (3, 21)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.8877108511716825] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.8877108511716825, 0.4262850782722199] ***
*** finished computation of 3 references, err: [Inf, 1.8877108511716825, 0.4262850782722199] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 32, 9]]
** centroid: 1, normalized-entropy: 0.7592757847892834, [(2, 32), (3, 9)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 1, 25]]
*** center 3: selecting labels [1] (freq >= 2) [from [32, 1, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.2667031342448833] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.2667031342448833, 1.041702779855185] ***
*** finished computation of 3 references, err: [Inf, 3.2667031342448833, 1.041702779855185] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 25, 24]]
** centroid: 1, normalized-entropy: 0.9996995428565171, [(2, 25), (3, 24)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [34, 9, 0]]
** centroid: 3, normalized-entropy: 0.7401470427139037, [(1, 34), (2, 9)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0603527270128295] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0603527270128295, 0.38668334873549554] ***
*** finished computation of 3 references, err: [Inf, 1.0603527270128295, 0.38668334873549554] ***
*** center 1: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 32, 21]]
** centroid: 2, normalized-entropy: 0.9687003436508602, [(2, 32), (3, 21)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7481462921497184] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7481462921497184, 0.37951585476259225] ***
*** finished computation of 3 references, err: [Inf, 0.7481462921497184, 0.37951585476259225] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 2, 25]]
** centroid: 1, normalized-entropy: 0.38094658570539014, [(2, 2), (3, 25)]
*** center 2: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 32, 9]]
** centroid: 3, normalized-entropy: 0.7592757847892834, [(2, 32), (3, 9)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7346633845366646] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7346633845366646, 0.4102554322586414] ***
*** finished computation of 3 references, err: [Inf, 0.7346633845366646, 0.4102554322586414] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 27, 1]]
** centroid: 1, normalized-entropy: 0.2222848306856879, [(2, 27), (3, 1)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 7, 31]]
** centroid: 2, normalized-entropy: 0.6892019851173655, [(2, 7), (3, 31)]
*** center 3: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.46469473892387714] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.46469473892387714, 0.33196862472904853] ***
*** finished computation of 3 references, err: [Inf, 0.46469473892387714, 0.33196862472904853] ***
*** center 1: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 23]]
** centroid: 2, normalized-entropy: 0.4021791902022729, [(2, 2), (3, 23)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 30, 11]]
** centroid: 3, normalized-entropy: 0.8390040613676978, [(2, 30), (3, 11)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.8301000071778695] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.8301000071778695, 1.061850260092732] ***
*** finished computation of 3 references, err: [Inf, 1.8301000071778695, 1.061850260092732] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 29, 34]]
** centroid: 1, normalized-entropy: 0.9954515828457716, [(2, 29), (3, 34)]
*** center 2: selecting labels [1] (freq >= 2) [from [26, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [6, 5, 0]]
** centroid: 3, normalized-entropy: 0.9940302114769566, [(1, 6), (2, 5)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 4.450400013614058] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.450400013614058, 0.9765659474896179] ***
*** finished computation of 3 references, err: [Inf, 4.450400013614058, 0.9765659474896179] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 32, 32]]
** centroid: 1, normalized-entropy: 1.0, [(2, 32), (3, 32)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [21, 2, 0]]
** centroid: 2, normalized-entropy: 0.42622865699814483, [(1, 21), (2, 2)]
*** center 3: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6239000017136251] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6239000017136251, 0.48602473893408754] ***
*** finished computation of 3 references, err: [Inf, 0.6239000017136251, 0.48602473893408754] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 3, 29]]
** centroid: 1, normalized-entropy: 0.44886448872302936, [(2, 3), (3, 29)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 29, 5]]
** centroid: 2, normalized-entropy: 0.6024308020404452, [(2, 29), (3, 5)]
*** center 3: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.439100011656388] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.439100011656388, 0.6760701188250136] ***
*** starting iteration: 2; err: [Inf, 1.439100011656388, 0.6760701188250136] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.439100011656388, 0.6760701188250136, 0.5419996356018949] ***
*** starting iteration: 3; err: [Inf, 1.439100011656388, 0.6760701188250136, 0.5419996356018949] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.439100011656388, 0.6760701188250136, 0.5419996356018949, 0.4306910056425959] ***
*** finished computation of 7 references, err: [Inf, 1.439100011656388, 0.6760701188250136, 0.5419996356018949, 0.4306910056425959] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 33, 10]]
** centroid: 1, normalized-entropy: 0.7824441294066888, [(2, 33), (3, 10)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 3: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [20, 1, 0]]
** centroid: 5, normalized-entropy: 0.2761954276479391, [(1, 20), (2, 1)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.9820000077830894] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9820000077830894, 0.4335590728434057] ***
*** starting iteration: 2; err: [Inf, 0.9820000077830894, 0.4335590728434057] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9820000077830894, 0.4335590728434057, 0.3421046429595836] ***
*** starting iteration: 3; err: [Inf, 0.9820000077830894, 0.4335590728434057, 0.3421046429595836] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9820000077830894, 0.4335590728434057, 0.3421046429595836, 0.30560794382531187] ***
*** finished computation of 7 references, err: [Inf, 0.9820000077830894, 0.4335590728434057, 0.3421046429595836, 0.30560794382531187] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 3, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 15, 6]]
** centroid: 4, normalized-entropy: 0.8631205685666311, [(2, 15), (3, 6)]
*** center 5: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 8, 4]]
** centroid: 6, normalized-entropy: 0.9182958340544894, [(2, 8), (3, 4)]
*** center 7: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.8798000088743566] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8798000088743566, 0.33284493446320423] ***
*** starting iteration: 2; err: [Inf, 0.8798000088743566, 0.33284493446320423] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8798000088743566, 0.33284493446320423, 0.30169784942413114] ***
*** starting iteration: 3; err: [Inf, 0.8798000088743566, 0.33284493446320423, 0.30169784942413114] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8798000088743566, 0.33284493446320423, 0.30169784942413114, 0.2870948427722482] ***
*** finished computation of 7 references, err: [Inf, 0.8798000088743566, 0.33284493446320423, 0.30169784942413114, 0.2870948427722482] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 9, 7]]
** centroid: 1, normalized-entropy: 0.9886994082884974, [(2, 9), (3, 7)]
*** center 2: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 3, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 5: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 2, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 7, 6]]
** centroid: 7, normalized-entropy: 0.9957274520849256, [(2, 7), (3, 6)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.8726000056441614] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8726000056441614, 0.5629218905670262] ***
*** finished computation of 3 references, err: [Inf, 0.8726000056441614, 0.5629218905670262] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 5, 30]]
** centroid: 1, normalized-entropy: 0.5916727785823274, [(2, 5), (3, 30)]
*** center 2: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 29, 4]]
** centroid: 3, normalized-entropy: 0.5328350630342235, [(2, 29), (3, 4)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.3297999921132115] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.3297999921132115, 0.974390402117328] ***
*** finished computation of 3 references, err: [Inf, 2.3297999921132115, 0.974390402117328] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 32, 32]]
** centroid: 1, normalized-entropy: 1.0, [(2, 32), (3, 32)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [15, 2, 0]]
** centroid: 2, normalized-entropy: 0.5225593745369407, [(1, 15), (2, 2)]
*** center 3: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.062499999377817] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.062499999377817, 0.8953620866883496] ***
*** finished computation of 3 references, err: [Inf, 1.062499999377817, 0.8953620866883496] ***
*** center 1: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 32, 34]]
** centroid: 3, normalized-entropy: 0.9993375041688846, [(2, 32), (3, 34)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1349000026566358] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1349000026566358, 0.5834862782002566] ***
*** starting iteration: 2; err: [Inf, 1.1349000026566358, 0.5834862782002566] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1349000026566358, 0.5834862782002566, 0.5771972287562557] ***
*** starting iteration: 3; err: [Inf, 1.1349000026566358, 0.5834862782002566, 0.5771972287562557] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1349000026566358, 0.5834862782002566, 0.5771972287562557, 0.5733584477891763] ***
*** finished computation of 3 references, err: [Inf, 1.1349000026566358, 0.5834862782002566, 0.5771972287562557, 0.5733584477891763] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 10, 33]]
** centroid: 1, normalized-entropy: 0.7824441294066888, [(2, 10), (3, 33)]
*** center 2: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 24, 1]]
** centroid: 3, normalized-entropy: 0.24229218908241482, [(2, 24), (3, 1)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1297000046233479] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1297000046233479, 0.5981163943501503] ***
*** starting iteration: 2; err: [Inf, 1.1297000046233479, 0.5981163943501503] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1297000046233479, 0.5981163943501503, 0.5627388678455563] ***
*** starting iteration: 3; err: [Inf, 1.1297000046233479, 0.5981163943501503, 0.5627388678455563] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1297000046233479, 0.5981163943501503, 0.5627388678455563, 0.5604869461762055] ***
*** finished computation of 3 references, err: [Inf, 1.1297000046233479, 0.5981163943501503, 0.5627388678455563, 0.5604869461762055] ***
*** center 1: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 1, 24]]
** centroid: 2, normalized-entropy: 0.24229218908241482, [(2, 1), (3, 24)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 33, 8]]
** centroid: 3, normalized-entropy: 0.7120640548905481, [(2, 33), (3, 8)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1821000081780044] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1821000081780044, 0.5158779691478209] ***
*** starting iteration: 2; err: [Inf, 1.1821000081780044, 0.5158779691478209] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1821000081780044, 0.5158779691478209, 0.5020067594156427] ***
*** starting iteration: 3; err: [Inf, 1.1821000081780044, 0.5158779691478209, 0.5020067594156427] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1821000081780044, 0.5158779691478209, 0.5020067594156427, 0.4978966582718867] ***
*** finished computation of 3 references, err: [Inf, 1.1821000081780044, 0.5158779691478209, 0.5020067594156427, 0.4978966582718867] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 5, 31]]
** centroid: 1, normalized-entropy: 0.581321498763703, [(2, 5), (3, 31)]
*** center 2: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 27, 3]]
** centroid: 3, normalized-entropy: 0.46899559358928133, [(2, 27), (3, 3)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7852076529330114] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7852076529330114, 0.4184808858043241] ***
*** starting iteration: 2; err: [Inf, 0.7852076529330114, 0.4184808858043241] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7852076529330114, 0.4184808858043241, 0.385382563702095] ***
*** starting iteration: 3; err: [Inf, 0.7852076529330114, 0.4184808858043241, 0.385382563702095] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7852076529330114, 0.4184808858043241, 0.385382563702095, 0.3794603101939144] ***
*** starting iteration: 4; err: [Inf, 0.7852076529330114, 0.4184808858043241, 0.385382563702095, 0.3794603101939144] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7852076529330114, 0.4184808858043241, 0.385382563702095, 0.3794603101939144, 0.37849305352124935] ***
*** finished computation of 3 references, err: [Inf, 0.7852076529330114, 0.4184808858043241, 0.385382563702095, 0.3794603101939144, 0.37849305352124935] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 32, 9]]
** centroid: 1, normalized-entropy: 0.7592757847892834, [(2, 32), (3, 9)]
*** center 2: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 25]]
** centroid: 3, normalized-entropy: 0.38094658570539014, [(2, 2), (3, 25)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7000262971139029] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7000262971139029, 0.4789551136399822] ***
*** starting iteration: 2; err: [Inf, 0.7000262971139029, 0.4789551136399822] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7000262971139029, 0.4789551136399822, 0.43298125476586335] ***
*** starting iteration: 3; err: [Inf, 0.7000262971139029, 0.4789551136399822, 0.43298125476586335] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7000262971139029, 0.4789551136399822, 0.43298125476586335, 0.4005672430006246] ***
*** starting iteration: 4; err: [Inf, 0.7000262971139029, 0.4789551136399822, 0.43298125476586335, 0.4005672430006246] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7000262971139029, 0.4789551136399822, 0.43298125476586335, 0.4005672430006246, 0.3934164780450133] ***
*** starting iteration: 5; err: [Inf, 0.7000262971139029, 0.4789551136399822, 0.43298125476586335, 0.4005672430006246, 0.3934164780450133] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7000262971139029, 0.4789551136399822, 0.43298125476586335, 0.4005672430006246, 0.3934164780450133, 0.3919261235308584] ***
*** starting iteration: 6; err: [Inf, 0.7000262971139029, 0.4789551136399822, 0.43298125476586335, 0.4005672430006246, 0.3934164780450133, 0.3919261235308584] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7000262971139029, 0.4789551136399822, 0.43298125476586335, 0.4005672430006246, 0.3934164780450133, 0.3919261235308584, 0.3919261235308584] ***
*** finished computation of 3 references, err: [Inf, 0.7000262971139029, 0.4789551136399822, 0.43298125476586335, 0.4005672430006246, 0.3934164780450133, 0.3919261235308584, 0.3919261235308584] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 34, 8]]
** centroid: 1, normalized-entropy: 0.7024665512903904, [(2, 34), (3, 8)]
*** center 2: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 24]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9390353584690981] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9390353584690981, 0.346156326032446] ***
*** starting iteration: 2; err: [Inf, 0.9390353584690981, 0.346156326032446] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9390353584690981, 0.346156326032446, 0.33563212493703887] ***
*** starting iteration: 3; err: [Inf, 0.9390353584690981, 0.346156326032446, 0.33563212493703887] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9390353584690981, 0.346156326032446, 0.33563212493703887, 0.33029665454547136] ***
*** starting iteration: 4; err: [Inf, 0.9390353584690981, 0.346156326032446, 0.33563212493703887, 0.33029665454547136] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9390353584690981, 0.346156326032446, 0.33563212493703887, 0.33029665454547136, 0.3284593000217961] ***
*** starting iteration: 5; err: [Inf, 0.9390353584690981, 0.346156326032446, 0.33563212493703887, 0.33029665454547136, 0.3284593000217961] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9390353584690981, 0.346156326032446, 0.33563212493703887, 0.33029665454547136, 0.3284593000217961, 0.3284593000217961] ***
*** finished computation of 3 references, err: [Inf, 0.9390353584690981, 0.346156326032446, 0.33563212493703887, 0.33029665454547136, 0.3284593000217961, 0.3284593000217961] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 30, 11]]
** centroid: 1, normalized-entropy: 0.8390040613676978, [(2, 30), (3, 11)]
*** center 2: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 23]]
** centroid: 3, normalized-entropy: 0.4021791902022729, [(2, 2), (3, 23)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6135000038482264] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6135000038482264, 0.2428433915952194] ***
*** starting iteration: 2; err: [Inf, 0.6135000038482264, 0.2428433915952194] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6135000038482264, 0.2428433915952194, 0.22711022722428548] ***
*** starting iteration: 3; err: [Inf, 0.6135000038482264, 0.2428433915952194, 0.22711022722428548] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6135000038482264, 0.2428433915952194, 0.22711022722428548, 0.2238389135893142] ***
*** starting iteration: 4; err: [Inf, 0.6135000038482264, 0.2428433915952194, 0.22711022722428548, 0.2238389135893142] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6135000038482264, 0.2428433915952194, 0.22711022722428548, 0.2238389135893142, 0.222156640897365] ***
*** starting iteration: 5; err: [Inf, 0.6135000038482264, 0.2428433915952194, 0.22711022722428548, 0.2238389135893142, 0.222156640897365] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6135000038482264, 0.2428433915952194, 0.22711022722428548, 0.2238389135893142, 0.222156640897365, 0.21954092807186143] ***
*** starting iteration: 6; err: [Inf, 0.6135000038482264, 0.2428433915952194, 0.22711022722428548, 0.2238389135893142, 0.222156640897365, 0.21954092807186143] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6135000038482264, 0.2428433915952194, 0.22711022722428548, 0.2238389135893142, 0.222156640897365, 0.21954092807186143, 0.2184331225484803] ***
*** starting iteration: 7; err: [Inf, 0.6135000038482264, 0.2428433915952194, 0.22711022722428548, 0.2238389135893142, 0.222156640897365, 0.21954092807186143, 0.2184331225484803] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6135000038482264, 0.2428433915952194, 0.22711022722428548, 0.2238389135893142, 0.222156640897365, 0.21954092807186143, 0.2184331225484803, 0.2171383357513834] ***
*** starting iteration: 8; err: [Inf, 0.6135000038482264, 0.2428433915952194, 0.22711022722428548, 0.2238389135893142, 0.222156640897365, 0.21954092807186143, 0.2184331225484803, 0.2171383357513834] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6135000038482264, 0.2428433915952194, 0.22711022722428548, 0.2238389135893142, 0.222156640897365, 0.21954092807186143, 0.2184331225484803, 0.2171383357513834, 0.21603620619509026] ***
*** starting iteration: 9; err: [Inf, 0.6135000038482264, 0.2428433915952194, 0.22711022722428548, 0.2238389135893142, 0.222156640897365, 0.21954092807186143, 0.2184331225484803, 0.2171383357513834, 0.21603620619509026] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6135000038482264, 0.2428433915952194, 0.22711022722428548, 0.2238389135893142, 0.222156640897365, 0.21954092807186143, 0.2184331225484803, 0.2171383357513834, 0.21603620619509026, 0.21536638581449677] ***
*** finished computation of 7 references, err: [Inf, 0.6135000038482264, 0.2428433915952194, 0.22711022722428548, 0.2238389135893142, 0.222156640897365, 0.21954092807186143, 0.2184331225484803, 0.2171383357513834, 0.21603620619509026, 0.21536638581449677] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 15, 9]]
** centroid: 1, normalized-entropy: 0.954434002924965, [(2, 15), (3, 9)]
*** center 2: selecting labels [1] (freq >= 2) [from [24, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 5, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 14, 1]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.56060000636066] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.56060000636066, 0.23829584883394472] ***
*** starting iteration: 2; err: [Inf, 0.56060000636066, 0.23829584883394472] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.56060000636066, 0.23829584883394472, 0.23096012938810767] ***
*** starting iteration: 3; err: [Inf, 0.56060000636066, 0.23829584883394472, 0.23096012938810767] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.56060000636066, 0.23829584883394472, 0.23096012938810767, 0.22870120513983455] ***
*** starting iteration: 4; err: [Inf, 0.56060000636066, 0.23829584883394472, 0.23096012938810767, 0.22870120513983455] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.56060000636066, 0.23829584883394472, 0.23096012938810767, 0.22870120513983455, 0.22656561181708437] ***
*** starting iteration: 5; err: [Inf, 0.56060000636066, 0.23829584883394472, 0.23096012938810767, 0.22870120513983455, 0.22656561181708437] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.56060000636066, 0.23829584883394472, 0.23096012938810767, 0.22870120513983455, 0.22656561181708437, 0.22570687578021068] ***
*** finished computation of 7 references, err: [Inf, 0.56060000636066, 0.23829584883394472, 0.23096012938810767, 0.22870120513983455, 0.22656561181708437, 0.22570687578021068] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 22, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 2, 9]]
** centroid: 7, normalized-entropy: 0.6840384356390419, [(2, 2), (3, 9)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5583000016871158] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5583000016871158, 0.2853544998756418] ***
*** starting iteration: 2; err: [Inf, 0.5583000016871158, 0.2853544998756418] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5583000016871158, 0.2853544998756418, 0.2844554912862531] ***
*** finished computation of 7 references, err: [Inf, 0.5583000016871158, 0.2853544998756418, 0.2844554912862531] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 6, 7]]
** centroid: 1, normalized-entropy: 0.9957274520849256, [(2, 6), (3, 7)]
*** center 2: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 2, 0]]
*** center 4: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 0, 1]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 2, 15]]
** centroid: 5, normalized-entropy: 0.5225593745369407, [(2, 2), (3, 15)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 22, 1]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.627300002274399] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.627300002274399, 0.23657539912647832] ***
*** starting iteration: 2; err: [Inf, 0.627300002274399, 0.23657539912647832] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.627300002274399, 0.23657539912647832, 0.22839113810649828] ***
*** starting iteration: 3; err: [Inf, 0.627300002274399, 0.23657539912647832, 0.22839113810649828] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.627300002274399, 0.23657539912647832, 0.22839113810649828, 0.22641954149767063] ***
*** finished computation of 7 references, err: [Inf, 0.627300002274399, 0.23657539912647832, 0.22839113810649828, 0.22641954149767063] ***
*** center 1: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 11, 3]]
** centroid: 3, normalized-entropy: 0.7495952572594798, [(2, 11), (3, 3)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 15, 6]]
** centroid: 4, normalized-entropy: 0.8631205685666311, [(2, 15), (3, 6)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.45990000377709916] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45990000377709916, 0.2793302930874384] ***
*** starting iteration: 2; err: [Inf, 0.45990000377709916, 0.2793302930874384] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45990000377709916, 0.2793302930874384, 0.26395300571549307] ***
*** starting iteration: 3; err: [Inf, 0.45990000377709916, 0.2793302930874384, 0.26395300571549307] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45990000377709916, 0.2793302930874384, 0.26395300571549307, 0.260702623947496] ***
*** finished computation of 7 references, err: [Inf, 0.45990000377709916, 0.2793302930874384, 0.26395300571549307, 0.260702623947496] ***
*** center 1: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 2, 9]]
** centroid: 7, normalized-entropy: 0.6840384356390419, [(2, 2), (3, 9)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7294000061593678] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7294000061593678, 0.2694048818412129] ***
*** starting iteration: 2; err: [Inf, 0.7294000061593678, 0.2694048818412129] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7294000061593678, 0.2694048818412129, 0.2633605325860657] ***
*** starting iteration: 3; err: [Inf, 0.7294000061593678, 0.2694048818412129, 0.2633605325860657] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7294000061593678, 0.2694048818412129, 0.2633605325860657, 0.2592988045026226] ***
*** finished computation of 7 references, err: [Inf, 0.7294000061593678, 0.2694048818412129, 0.2633605325860657, 0.2592988045026226] ***
*** center 1: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 1]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 8]]
** centroid: 3, normalized-entropy: 0.8453509366224364, [(2, 3), (3, 8)]
*** center 4: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 6, 15]]
** centroid: 5, normalized-entropy: 0.8631205685666311, [(2, 6), (3, 15)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 23, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3528815058673523] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3528815058673523, 0.1568868708921721] ***
*** starting iteration: 2; err: [Inf, 0.3528815058673523, 0.1568868708921721] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3528815058673523, 0.1568868708921721, 0.1534580027947715] ***
*** starting iteration: 3; err: [Inf, 0.3528815058673523, 0.1568868708921721, 0.1534580027947715] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3528815058673523, 0.1568868708921721, 0.1534580027947715, 0.15207322708929122] ***
*** finished computation of 7 references, err: [Inf, 0.3528815058673523, 0.1568868708921721, 0.1534580027947715, 0.15207322708929122] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 19, 1]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 3: selecting labels [1] (freq >= 2) [from [24, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 1, 12]]
*** center 5: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 14, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.43587498650803963] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.43587498650803963, 0.2058592990728647] ***
*** starting iteration: 2; err: [Inf, 0.43587498650803963, 0.2058592990728647] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.43587498650803963, 0.2058592990728647, 0.19137803905478262] ***
*** starting iteration: 3; err: [Inf, 0.43587498650803963, 0.2058592990728647, 0.19137803905478262] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.43587498650803963, 0.2058592990728647, 0.19137803905478262, 0.1814982561792119] ***
*** finished computation of 7 references, err: [Inf, 0.43587498650803963, 0.2058592990728647, 0.19137803905478262, 0.1814982561792119] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 1, 19]]
*** center 2: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 22, 7]]
** centroid: 4, normalized-entropy: 0.7973265101474423, [(2, 22), (3, 7)]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 6: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 7: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 0, 1]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4039863747955074] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4039863747955074, 0.2134191511444779] ***
*** starting iteration: 2; err: [Inf, 0.4039863747955074, 0.2134191511444779] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4039863747955074, 0.2134191511444779, 0.1902424733728941] ***
*** starting iteration: 3; err: [Inf, 0.4039863747955074, 0.2134191511444779, 0.1902424733728941] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4039863747955074, 0.2134191511444779, 0.1902424733728941, 0.17533682145163565] ***
*** finished computation of 7 references, err: [Inf, 0.4039863747955074, 0.2134191511444779, 0.1902424733728941, 0.17533682145163565] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 14, 9]]
** centroid: 1, normalized-entropy: 0.9656361333706099, [(2, 14), (3, 9)]
*** center 2: selecting labels [1] (freq >= 2) [from [22, 0, 0]]
*** center 3: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 0, 1]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 3, 16]]
** centroid: 4, normalized-entropy: 0.6292492238560344, [(2, 3), (3, 16)]
*** center 5: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 15, 1]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 16)
[0.9666666666666667, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9400000000000001, 0.94, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9266666666666666, 0.9133333333333332, 0.9066666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 1) => 0.9666666666666667
finished with 17
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.483922144973441] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.483922144973441, 0.19006576901581776] ***
*** starting iteration: 2; err: [Inf, 0.483922144973441, 0.19006576901581776] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.483922144973441, 0.19006576901581776, 0.16365016153110892] ***
*** starting iteration: 3; err: [Inf, 0.483922144973441, 0.19006576901581776, 0.16365016153110892] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.483922144973441, 0.19006576901581776, 0.16365016153110892, 0.15607603169379256] ***
*** starting iteration: 4; err: [Inf, 0.483922144973441, 0.19006576901581776, 0.16365016153110892, 0.15607603169379256] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.483922144973441, 0.19006576901581776, 0.16365016153110892, 0.15607603169379256, 0.15245868104727406] ***
*** starting iteration: 5; err: [Inf, 0.483922144973441, 0.19006576901581776, 0.16365016153110892, 0.15607603169379256, 0.15245868104727406] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.483922144973441, 0.19006576901581776, 0.16365016153110892, 0.15607603169379256, 0.15245868104727406, 0.1516505370705122] ***
*** finished computation of 7 references, err: [Inf, 0.483922144973441, 0.19006576901581776, 0.16365016153110892, 0.15607603169379256, 0.15245868104727406, 0.1516505370705122] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 17, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [24, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 4: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 15, 3]]
** centroid: 5, normalized-entropy: 0.6500224216483541, [(2, 15), (3, 3)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 2, 6]]
** centroid: 6, normalized-entropy: 0.8112781244591328, [(2, 2), (3, 6)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.44147245353585274] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44147245353585274, 0.19883875202076404] ***
*** starting iteration: 2; err: [Inf, 0.44147245353585274, 0.19883875202076404] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44147245353585274, 0.19883875202076404, 0.1787791561070401] ***
*** starting iteration: 3; err: [Inf, 0.44147245353585274, 0.19883875202076404, 0.1787791561070401] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44147245353585274, 0.19883875202076404, 0.1787791561070401, 0.17700875548937345] ***
*** starting iteration: 4; err: [Inf, 0.44147245353585274, 0.19883875202076404, 0.1787791561070401, 0.17700875548937345] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44147245353585274, 0.19883875202076404, 0.1787791561070401, 0.17700875548937345, 0.1766115996462061] ***
*** finished computation of 7 references, err: [Inf, 0.44147245353585274, 0.19883875202076404, 0.1787791561070401, 0.17700875548937345, 0.1766115996462061] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 2: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 15, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 19, 7]]
** centroid: 4, normalized-entropy: 0.8403586716091169, [(2, 19), (3, 7)]
*** center 5: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4628509096070249] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4628509096070249, 0.20960189486880726] ***
*** starting iteration: 2; err: [Inf, 0.4628509096070249, 0.20960189486880726] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4628509096070249, 0.20960189486880726, 0.18974495333384345] ***
*** starting iteration: 3; err: [Inf, 0.4628509096070249, 0.20960189486880726, 0.18974495333384345] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4628509096070249, 0.20960189486880726, 0.18974495333384345, 0.18510246532129837] ***
*** starting iteration: 4; err: [Inf, 0.4628509096070249, 0.20960189486880726, 0.18974495333384345, 0.18510246532129837] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4628509096070249, 0.20960189486880726, 0.18974495333384345, 0.18510246532129837, 0.18510246532129837] ***
*** finished computation of 7 references, err: [Inf, 0.4628509096070249, 0.20960189486880726, 0.18974495333384345, 0.18510246532129837, 0.18510246532129837] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 9, 21]]
** centroid: 1, normalized-entropy: 0.8812908992306927, [(2, 9), (3, 21)]
*** center 2: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 3: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 0, 1]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 23, 1]]
*** center 5: selecting labels [1] (freq >= 2) [from [2, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
*** center 7: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
finished with 7 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 17)
[0.9666666666666667, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9400000000000001, 0.94, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9266666666666666, 0.9133333333333332, 0.9066666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 1) => 0.9666666666666667
finished with 18
iteration 3 finished
*** starting iteration: 1; err: [Inf, 4.444899939632494] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.444899939632494, 1.0430662264691188] ***
*** finished computation of 3 references, err: [Inf, 4.444899939632494, 1.0430662264691188] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [26, 2, 0]]
** centroid: 1, normalized-entropy: 0.3712323266408756, [(1, 26), (2, 2)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 32, 34]]
** centroid: 2, normalized-entropy: 0.9993375041688846, [(2, 32), (3, 34)]
*** center 3: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 10.137800013007181] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 10.137800013007181, 1.261248932827277] ***
*** finished computation of 3 references, err: [Inf, 10.137800013007181, 1.261248932827277] ***
*** center 1: selecting labels [1] (freq >= 2) [from [30, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [4, 3, 0]]
** centroid: 2, normalized-entropy: 0.9852281360342514, [(1, 4), (2, 3)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 31, 32]]
** centroid: 3, normalized-entropy: 0.9998182469603427, [(2, 31), (3, 32)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.61109997634866] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.61109997634866, 0.8903185777670908] ***
*** finished computation of 3 references, err: [Inf, 1.61109997634866, 0.8903185777670908] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 32, 34]]
** centroid: 1, normalized-entropy: 0.9993375041688846, [(2, 32), (3, 34)]
*** center 2: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
finished with 4 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 18)
[0.9666666666666667, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9400000000000001, 0.94, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.9066666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 1) => 0.9666666666666667
finished with 20
iteration 4 finished
*** starting iteration: 1; err: [Inf, 0.3613376814688968] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3613376814688968, 0.20271477745241717] ***
*** starting iteration: 2; err: [Inf, 0.3613376814688968, 0.20271477745241717] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3613376814688968, 0.20271477745241717, 0.19043952275748655] ***
*** starting iteration: 3; err: [Inf, 0.3613376814688968, 0.20271477745241717, 0.19043952275748655] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3613376814688968, 0.20271477745241717, 0.19043952275748655, 0.1880567272030606] ***
*** finished computation of 7 references, err: [Inf, 0.3613376814688968, 0.20271477745241717, 0.19043952275748655, 0.1880567272030606] ***
*** center 1: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 15, 11]]
** centroid: 3, normalized-entropy: 0.9828586897127057, [(2, 15), (3, 11)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 15, 1]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 22]]
*** center 6: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 4, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.42576612891967913] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42576612891967913, 0.25484127624038144] ***
*** starting iteration: 2; err: [Inf, 0.42576612891967913, 0.25484127624038144] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42576612891967913, 0.25484127624038144, 0.24133479977726643] ***
*** starting iteration: 3; err: [Inf, 0.42576612891967913, 0.25484127624038144, 0.24133479977726643] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42576612891967913, 0.25484127624038144, 0.24133479977726643, 0.23753864375084535] ***
*** finished computation of 7 references, err: [Inf, 0.42576612891967913, 0.25484127624038144, 0.24133479977726643, 0.23753864375084535] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 2: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 3, 13]]
** centroid: 4, normalized-entropy: 0.6962122601251459, [(2, 3), (3, 13)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 9, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 13, 1]]
*** center 7: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 1, 0]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5734170562117997] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5734170562117997, 0.22550759004815404] ***
*** starting iteration: 2; err: [Inf, 0.5734170562117997, 0.22550759004815404] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5734170562117997, 0.22550759004815404, 0.19647147826019437] ***
*** starting iteration: 3; err: [Inf, 0.5734170562117997, 0.22550759004815404, 0.19647147826019437] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5734170562117997, 0.22550759004815404, 0.19647147826019437, 0.19460105972315436] ***
*** finished computation of 7 references, err: [Inf, 0.5734170562117997, 0.22550759004815404, 0.19647147826019437, 0.19460105972315436] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 9, 14]]
** centroid: 1, normalized-entropy: 0.9656361333706099, [(2, 9), (3, 14)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 15, 0]]
*** center 5: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 0, 1]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 8, 1]]
*** center 7: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.39240000370762856] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39240000370762856, 0.22192864036079055] ***
*** starting iteration: 2; err: [Inf, 0.39240000370762856, 0.22192864036079055] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39240000370762856, 0.22192864036079055, 0.21612321601230355] ***
*** starting iteration: 3; err: [Inf, 0.39240000370762856, 0.22192864036079055, 0.21612321601230355] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39240000370762856, 0.22192864036079055, 0.21612321601230355, 0.21612321601230355] ***
*** finished computation of 7 references, err: [Inf, 0.39240000370762856, 0.22192864036079055, 0.21612321601230355, 0.21612321601230355] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 3, 10]]
** centroid: 3, normalized-entropy: 0.7793498372920851, [(2, 3), (3, 10)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 15, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [26, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3505000079720406] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3505000079720406, 0.26265342843100375] ***
*** starting iteration: 2; err: [Inf, 0.3505000079720406, 0.26265342843100375] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3505000079720406, 0.26265342843100375, 0.25007054928345135] ***
*** starting iteration: 3; err: [Inf, 0.3505000079720406, 0.26265342843100375, 0.25007054928345135] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3505000079720406, 0.26265342843100375, 0.25007054928345135, 0.24621193662209048] ***
*** finished computation of 7 references, err: [Inf, 0.3505000079720406, 0.26265342843100375, 0.25007054928345135, 0.24621193662209048] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 2: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 21, 8]]
** centroid: 3, normalized-entropy: 0.8497511372532974, [(2, 21), (3, 8)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 6: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.35950000143098804] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.35950000143098804, 0.2706494010677795] ***
*** starting iteration: 2; err: [Inf, 0.35950000143098804, 0.2706494010677795] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.35950000143098804, 0.2706494010677795, 0.26399084073708157] ***
*** starting iteration: 3; err: [Inf, 0.35950000143098804, 0.2706494010677795, 0.26399084073708157] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.35950000143098804, 0.2706494010677795, 0.26399084073708157, 0.26190595260600136] ***
*** finished computation of 7 references, err: [Inf, 0.35950000143098804, 0.2706494010677795, 0.26399084073708157, 0.26190595260600136] ***
*** center 1: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 9, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 8, 22]]
** centroid: 3, normalized-entropy: 0.8366407419411671, [(2, 8), (3, 22)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 15, 1]]
*** center 5: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
*** center 7: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 20)
[0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9400000000000001, 0.94, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.9066666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 2) => 0.9666666666666667
finished with 21
iteration 5 finished
*** starting iteration: 1; err: [Inf, 0.36920530124083245] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36920530124083245, 0.1891797571358742] ***
*** starting iteration: 2; err: [Inf, 0.36920530124083245, 0.1891797571358742] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36920530124083245, 0.1891797571358742, 0.17445083534265746] ***
*** starting iteration: 3; err: [Inf, 0.36920530124083245, 0.1891797571358742, 0.17445083534265746] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36920530124083245, 0.1891797571358742, 0.17445083534265746, 0.16821437630601135] ***
*** finished computation of 7 references, err: [Inf, 0.36920530124083245, 0.1891797571358742, 0.17445083534265746, 0.16821437630601135] ***
*** center 1: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 13, 5]]
** centroid: 2, normalized-entropy: 0.8524051786494784, [(2, 13), (3, 5)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 11, 7]]
** centroid: 3, normalized-entropy: 0.9640787648082293, [(2, 11), (3, 7)]
*** center 4: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7318801990069025] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7318801990069025, 0.3546745244733499] ***
*** starting iteration: 2; err: [Inf, 0.7318801990069025, 0.3546745244733499] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7318801990069025, 0.3546745244733499, 0.3328292016116427] ***
*** starting iteration: 3; err: [Inf, 0.7318801990069025, 0.3546745244733499, 0.3328292016116427] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7318801990069025, 0.3546745244733499, 0.3328292016116427, 0.33176132145856224] ***
*** finished computation of 7 references, err: [Inf, 0.7318801990069025, 0.3546745244733499, 0.3328292016116427, 0.33176132145856224] ***
*** center 1: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 26]]
** centroid: 2, normalized-entropy: 0.3712323266408756, [(2, 2), (3, 26)]
*** center 3: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 32, 6]]
** centroid: 5, normalized-entropy: 0.6292492238560344, [(2, 32), (3, 6)]
*** center 6: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.27318416389422934] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27318416389422934, 0.17389136488685675] ***
*** starting iteration: 2; err: [Inf, 0.27318416389422934, 0.17389136488685675] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27318416389422934, 0.17389136488685675, 0.17106945112268335] ***
*** starting iteration: 3; err: [Inf, 0.27318416389422934, 0.17389136488685675, 0.17106945112268335] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27318416389422934, 0.17389136488685675, 0.17106945112268335, 0.16970317025935436] ***
*** finished computation of 7 references, err: [Inf, 0.27318416389422934, 0.17389136488685675, 0.17106945112268335, 0.16970317025935436] ***
*** center 1: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 9, 14]]
** centroid: 2, normalized-entropy: 0.9656361333706099, [(2, 9), (3, 14)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 23, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 1]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 21)
[0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9400000000000001, 0.94, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.9066666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 2) => 0.9666666666666667
finished with 21
iteration 6 finished
generating 4 configurations using top 4 configurations, starting with 21)
[0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9400000000000001, 0.94, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.9066666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 2) => 0.9666666666666667
finished with 22
iteration 7 finished
*** starting iteration: 1; err: [Inf, 0.4434374275145014] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4434374275145014, 0.2310179948087333] ***
*** starting iteration: 2; err: [Inf, 0.4434374275145014, 0.2310179948087333] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4434374275145014, 0.2310179948087333, 0.2138230865770091] ***
*** starting iteration: 3; err: [Inf, 0.4434374275145014, 0.2310179948087333, 0.2138230865770091] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4434374275145014, 0.2310179948087333, 0.2138230865770091, 0.21285715126637697] ***
*** finished computation of 7 references, err: [Inf, 0.4434374275145014, 0.2310179948087333, 0.2138230865770091, 0.21285715126637697] ***
*** center 1: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 15, 18]]
** centroid: 3, normalized-entropy: 0.9940302114769566, [(2, 15), (3, 18)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 19, 1]]
*** center 5: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 7: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5198549470546758] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5198549470546758, 0.2597476138566094] ***
*** starting iteration: 2; err: [Inf, 0.5198549470546758, 0.2597476138566094] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5198549470546758, 0.2597476138566094, 0.22440281476322604] ***
*** starting iteration: 3; err: [Inf, 0.5198549470546758, 0.2597476138566094, 0.22440281476322604] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5198549470546758, 0.2597476138566094, 0.22440281476322604, 0.21316946636568912] ***
*** starting iteration: 4; err: [Inf, 0.5198549470546758, 0.2597476138566094, 0.22440281476322604, 0.21316946636568912] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5198549470546758, 0.2597476138566094, 0.22440281476322604, 0.21316946636568912, 0.2087791481787411] ***
*** starting iteration: 5; err: [Inf, 0.5198549470546758, 0.2597476138566094, 0.22440281476322604, 0.21316946636568912, 0.2087791481787411] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5198549470546758, 0.2597476138566094, 0.22440281476322604, 0.21316946636568912, 0.2087791481787411, 0.20815877816453035] ***
*** finished computation of 7 references, err: [Inf, 0.5198549470546758, 0.2597476138566094, 0.22440281476322604, 0.21316946636568912, 0.2087791481787411, 0.20815877816453035] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 22]]
*** center 2: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 15, 10]]
** centroid: 4, normalized-entropy: 0.9709505944546688, [(2, 15), (3, 10)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 9, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 2.2691021702235417] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.2691021702235417, 0.22662450685877794] ***
*** starting iteration: 2; err: [Inf, 2.2691021702235417, 0.22662450685877794] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.2691021702235417, 0.22662450685877794, 0.18730042601221764] ***
*** starting iteration: 3; err: [Inf, 2.2691021702235417, 0.22662450685877794, 0.18730042601221764] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.2691021702235417, 0.22662450685877794, 0.18730042601221764, 0.18327708468673454] ***
*** starting iteration: 4; err: [Inf, 2.2691021702235417, 0.22662450685877794, 0.18730042601221764, 0.18327708468673454] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.2691021702235417, 0.22662450685877794, 0.18730042601221764, 0.18327708468673454, 0.1799461413256867] ***
*** starting iteration: 5; err: [Inf, 2.2691021702235417, 0.22662450685877794, 0.18730042601221764, 0.18327708468673454, 0.1799461413256867] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.2691021702235417, 0.22662450685877794, 0.18730042601221764, 0.18327708468673454, 0.1799461413256867, 0.1799461413256867] ***
*** finished computation of 7 references, err: [Inf, 2.2691021702235417, 0.22662450685877794, 0.18730042601221764, 0.18327708468673454, 0.1799461413256867, 0.1799461413256867] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 6, 1]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 19]]
** centroid: 3, normalized-entropy: 0.45371633918694493, [(2, 2), (3, 19)]
*** center 4: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 18, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 6, 1]]
finished with 7 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 22)
[0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9400000000000001, 0.94, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.9066666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 2) => 0.9733333333333333
finished with 22
iteration 8 finished
generating 4 configurations using top 4 configurations, starting with 22)
[0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.96, 0.96, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9400000000000001, 0.94, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333332, 0.9066666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 2) => 0.9733333333333333
finished with 22
iteration 9 finished
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 2), 0.9733333333333333)
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[4.7153846153846155, 3.107692307692308, 1.3923076923076925, 0.19230769230769235], [5.061538461538462, 3.446153846153846, 1.5538461538461539, 0.2846153846153846], [6.48, 2.98, 4.613333333333334, 1.4066666666666665], [6.261111111111112, 2.9055555555555554, 5.194444444444445, 1.9499999999999997], [5.500000000000001, 2.6, 3.8949999999999996, 1.2150000000000003], [5.633333333333333, 3.9, 1.4000000000000001, 0.30000000000000004], [7.14, 3.1399999999999997, 6.053333333333333, 2.1333333333333333], [5.466666666666666, 4.233333333333333, 1.4666666666666668, 0.2333333333333333]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 1, 2, 3, 2, 1, 3, 1], 3), KCenters.var"#fun#70"{SimilaritySearch.var"#_lp#1"{Float64}}(SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25)), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[6.863636363636363, 3.0409090909090906, 5.868181818181818, 2.1181818181818186], [5.54, 4.04, 1.52, 0.33999999999999997], [5.7727272727272725, 2.727272727272727, 4.3090909090909095, 1.3454545454545455], [6.359999999999999, 3.026666666666667, 4.66, 1.4799999999999998], [6.040000000000001, 2.71, 5.08, 1.8299999999999996], [5.3125, 2.4749999999999996, 3.55, 1.0875], [4.666666666666667, 3.086666666666667, 1.353333333333333, 0.19333333333333338], [5.164285714285714, 3.5857142857142854, 1.4928571428571427, 0.2785714285714286]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [3, 1, 2, 2, 3, 2, 1, 1], 3), KCenters.var"#fun#70"{SimilaritySearch.var"#_lp#1"{Float64}}(SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25)), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[6.6, 2.8714285714285714, 4.814285714285715, 1.5], [7.640000000000001, 3.3600000000000003, 6.44, 2.2600000000000002], [6.185714285714286, 2.9047619047619047, 5.171428571428571, 1.9619047619047616], [5.0058823529411764, 3.3970588235294112, 1.4911764705882355, 0.23823529411764705], [6.9125000000000005, 3.0375, 5.75, 2.075], [5.855555555555556, 2.7666666666666666, 4.250000000000001, 1.3222222222222224], [5.371428571428572, 2.442857142857143, 3.885714285714286, 1.2428571428571427]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 3, 3, 1, 3, 2, 2], 3), KCenters.var"#fun#70"{SimilaritySearch.var"#_lp#1"{Float64}}(SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25)), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 10, 1.0, :dnet, 0.6, 2))]
Test Summary: | Pass  Total
AKNC          |    1      1
[56, 19, 1, 11, 11, 7, 16, 23, 24, 11, 6, 21, 35, 28, 18, 36, 30, 1, 25, 10, 21, 43, 16, 34, 22, 28, 23, 2, 12, 50, 27, 18, 20, 27, 24, 1, 45, 24, 17, 33, 10, 20, 35, 41, 44, 31, 25, 35, 41, 16, 25, 46, 30, 39, 38, 24, 29, 26, 28, 12, 44, 29, 40, 44, 7, 27, 19, 50, 34, 31, 25, 2, 57, 33, 17, 27, 31, 48, 20, 30, 23, 35, 46, 36, 41, 19, 38, 45, 31, 1, 23, 33, 34, 1, 2, 19, 46, 42, 71, 11, 36, 58, 30, 22, 27, 48, 14, 37, 52, 15, 43, 44, 31, 27, 37, 31, 54, 27, 41, 72, 19, 19, 30, 57, 24, 48, 19, 23, 34, 31, 30, 35, 39, 14, 12, 27, 44, 57, 38, 25, 32, 32, 44, 34, 30, 43, 28, 16, 16, 26, 50, 57, 36, 27, 50, 41, 51, 82, 43, 17, 21, 40, 35, 59, 29, 47, 37, 40, 41, 46, 43, 1, 35, 47, 19, 39, 42, 15, 45, 91, 44, 45, 44, 46, 37, 26, 37, 20, 34, 21, 32, 34, 43, 37, 27, 68, 37, 22, 30, 28, 25, 23, 42, 43, 43, 36, 39, 44, 53, 36, 47, 45, 59, 40, 9, 46, 31, 39, 1, 34, 33, 38, 35, 37, 55, 26, 48, 38, 17, 25, 43, 49, 47, 42, 40, 24, 41, 25, 28, 1, 30, 35, 42, 22, 27, 44, 51, 50, 39, 35, 37, 36, 52, 33, 23, 42, 48, 38, 29, 42, 40, 35, 37, 36, 36, 48, 41, 34, 17, 22, 41, 52, 24, 46, 22, 40, 49, 30, 38, 50, 18, 39, 14, 60, 23, 43, 36, 35, 67, 42, 51, 46, 41, 51, 40, 34, 30, 28, 52, 37]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.6510000000000002, speedup = 0.2268272650059268, eval_ratio = 0.041517)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.3752170138888893,"recall":0.3750000000000004,"f1":null,"seconds":7.380731403827667e-5,"exhaustive_search_seconds":0.0003542117774486542,"evaluations":338.9609375,"distances_sum":1756.1528678589598}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5442708333333331,"recall":0.5442708333333331,"f1":0.5442708333333331,"seconds":0.00013251975178718567,"exhaustive_search_seconds":0.0003542117774486542,"evaluations":376.3515625,"distances_sum":1637.5174592806645}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6345486111111108,"recall":0.6345486111111108,"f1":0.6345486111111108,"seconds":0.00024131685495376587,"exhaustive_search_seconds":0.0003542117774486542,"evaluations":414.7578125,"distances_sum":1596.6669692121636}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7013888888888883,"recall":0.7013888888888883,"f1":0.7013888888888883,"seconds":0.0003033168613910675,"exhaustive_search_seconds":0.0003542117774486542,"evaluations":453.421875,"distances_sum":1571.9484861004985}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7682291666666661,"recall":0.7682291666666661,"f1":0.7682291666666661,"seconds":0.00023511424660682678,"exhaustive_search_seconds":0.0003542117774486542,"evaluations":492.9375,"distances_sum":1553.1595528658036}
KCenters.DeloneInvIndex> reached performance {"precision":0.8124999999999992,"recall":0.8124999999999992,"f1":0.8124999999999992,"seconds":0.00023450888693332672,"exhaustive_search_seconds":0.0003542117774486542,"evaluations":533.734375,"distances_sum":1541.9334571181134}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.8169999999999997, speedup = 0.5533251114695, eval_ratio = 0.053318)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
   Testing KCenters tests passed 
