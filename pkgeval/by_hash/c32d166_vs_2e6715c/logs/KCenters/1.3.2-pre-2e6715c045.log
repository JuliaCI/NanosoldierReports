Julia Version 1.3.2-pre.0
Commit 2e6715c045 (2019-12-31 00:49 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-6.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed Reexport ──────────────────── v0.2.0
 Installed LearnBase ─────────────────── v0.2.2
 Installed KCenters ──────────────────── v0.1.8
 Installed Compat ────────────────────── v3.2.0
 Installed Parsers ───────────────────── v0.3.10
 Installed TableTraits ───────────────── v1.0.0
 Installed MLDataPattern ─────────────── v0.5.0
 Installed CategoricalArrays ─────────── v0.7.6
 Installed DataValueInterfaces ───────── v1.0.0
 Installed MappedArrays ──────────────── v0.2.2
 Installed Tables ────────────────────── v0.2.11
 Installed PooledArrays ──────────────── v0.5.3
 Installed DataStructures ────────────── v0.17.7
 Installed MLDataUtils ───────────────── v0.5.0
 Installed StatsBase ─────────────────── v0.32.0
 Installed JSON ──────────────────────── v0.21.0
 Installed InvertedIndices ───────────── v1.0.0
 Installed SortingAlgorithms ─────────── v0.3.1
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed DataAPI ───────────────────── v1.1.0
 Installed OrderedCollections ────────── v1.1.0
 Installed SimilaritySearch ──────────── v0.3.17
 Installed DataFrames ────────────────── v0.20.0
 Installed MLLabelUtils ──────────────── v0.5.1
 Installed Missings ──────────────────── v0.4.3
  Updating `~/.julia/environments/v1.3/Project.toml`
  [5d8de97f] + KCenters v0.1.8
  Updating `~/.julia/environments/v1.3/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.6
  [34da2185] + Compat v3.2.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.7
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.8
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing KCenters
    Status `/tmp/jl_P4974w/Manifest.toml`
  [324d7699] CategoricalArrays v0.7.6
  [34da2185] Compat v3.2.0
  [9a962f9c] DataAPI v1.1.0
  [a93c6f00] DataFrames v0.20.0
  [864edb3b] DataStructures v0.17.7
  [e2d170a0] DataValueInterfaces v1.0.0
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.8
  [7f8f8fb0] LearnBase v0.2.2
  [9920b226] MLDataPattern v0.5.0
  [cc2ba9b6] MLDataUtils v0.5.0
  [66a33bbf] MLLabelUtils v0.5.1
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.1.0
  [69de0a69] Parsers v0.3.10
  [2dfb63ee] PooledArrays v0.5.3
  [189a3867] Reexport v0.2.0
  [053f045d] SimilaritySearch v0.3.17
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.0
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v0.2.11
  [2a0f44e3] Base64  [`@stdlib/Base64`]
  [ade2ca70] Dates  [`@stdlib/Dates`]
  [8bb1440f] DelimitedFiles  [`@stdlib/DelimitedFiles`]
  [8ba89e20] Distributed  [`@stdlib/Distributed`]
  [9fa8497b] Future  [`@stdlib/Future`]
  [b77e0a4c] InteractiveUtils  [`@stdlib/InteractiveUtils`]
  [76f85450] LibGit2  [`@stdlib/LibGit2`]
  [8f399da3] Libdl  [`@stdlib/Libdl`]
  [37e2e46d] LinearAlgebra  [`@stdlib/LinearAlgebra`]
  [56ddb016] Logging  [`@stdlib/Logging`]
  [d6f4376e] Markdown  [`@stdlib/Markdown`]
  [a63ad114] Mmap  [`@stdlib/Mmap`]
  [44cfe95a] Pkg  [`@stdlib/Pkg`]
  [de0858da] Printf  [`@stdlib/Printf`]
  [3fa0cd96] REPL  [`@stdlib/REPL`]
  [9a3f8284] Random  [`@stdlib/Random`]
  [ea8e919c] SHA  [`@stdlib/SHA`]
  [9e88b42a] Serialization  [`@stdlib/Serialization`]
  [1a1011a3] SharedArrays  [`@stdlib/SharedArrays`]
  [6462fe0b] Sockets  [`@stdlib/Sockets`]
  [2f01184e] SparseArrays  [`@stdlib/SparseArrays`]
  [10745b16] Statistics  [`@stdlib/Statistics`]
  [8dfed614] Test  [`@stdlib/Test`]
  [cf7118a7] UUIDs  [`@stdlib/UUIDs`]
  [4ec0a83e] Unicode  [`@stdlib/Unicode`]
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 156.04000000000013
[ Info: 71.66
[ Info: 43.05
[ Info: 27.189999999999987
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 313.64000338064864
[ Info: 547.7199992669996
[ Info: 146.21999835129265
[ Info: 75.46000113480547
Test Summary:        |
Clustering with dnet | No tests
inertia(cfft.distances) = 18.858794699096208
inertia(cdnet.distances) = 33.594285713822515
inertia(crand.distances) = 21.671600288046697
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3369140625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3369140625,"f1":null,"seconds":3.5874545574188232e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":4.890625,"distances_sum":1043.5905851235807}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.154296875, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.154296875,"f1":null,"seconds":3.0640512704849243e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":4.203125,"distances_sum":527.9604013976204}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3369140625,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.3369140625,"f1":null,"seconds":3.5874545574188232e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":4.890625,"distances_sum":1043.5905851235807}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.482421875, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.482421875,"f1":null,"seconds":4.386529326438904e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":6.0625,"distances_sum":1475.252213320426}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.482421875,"state":{"ssize":1,"bsize":3},"perf":{"precision":null,"recall":0.482421875,"f1":null,"seconds":4.386529326438904e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":6.0625,"distances_sum":1475.252213320426}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8203125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8203125,"f1":0.8933842199467208,"seconds":5.863606929779053e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.390625,"distances_sum":2630.460317071797}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6455078125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6455078125,"f1":0.7695901320901328,"seconds":4.569068551063538e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":7.390625,"distances_sum":2003.6587940231404}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8203125,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8203125,"f1":0.8933842199467208,"seconds":5.863606929779053e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.390625,"distances_sum":2630.460317071797}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8203125,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8203125,"f1":0.8933842199467208,"seconds":5.863606929779053e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.390625,"distances_sum":2630.460317071797}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3857421875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3857421875,"f1":null,"seconds":4.12575900554657e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":5.7734375,"distances_sum":1021.9082936784902}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1787109375, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.1787109375,"f1":null,"seconds":3.5241246223449707e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":4.9140625,"distances_sum":507.1438676645895}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3857421875,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.3857421875,"f1":null,"seconds":4.12575900554657e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":5.7734375,"distances_sum":1021.9082936784902}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.556640625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.556640625,"f1":0.7004599567099572,"seconds":4.47593629360199e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":6.8125,"distances_sum":1506.1774461916223}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7587890625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7587890625,"f1":0.8547077922077932,"seconds":5.168840289115906e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.90625,"distances_sum":2215.5206080266335}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.662109375, conf: {"ssize":8,"bsize":4}, perf: {"precision":1.0,"recall":0.662109375,"f1":0.7846828518703525,"seconds":4.5318156480789185e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.4921875,"distances_sum":1872.781429356498}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75390625, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.75390625,"f1":0.8514428280053288,"seconds":5.07943332195282e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.890625,"distances_sum":2192.900135928329}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7587890625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7587890625,"f1":0.8547077922077932,"seconds":5.168840289115906e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.90625,"distances_sum":2215.5206080266335}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9545329670329673,"seconds":5.751848220825195e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.703125,"distances_sum":2937.374753514626}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":9,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9593978937728944,"seconds":5.83939254283905e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.8046875,"distances_sum":2911.4435021600193}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.936018148518149,"seconds":8.845701813697815e-5,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.5546875,"distances_sum":2805.88552617054}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.828125, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.828125,"f1":0.8974874084249091,"seconds":5.237758159637451e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.4765625,"distances_sum":2439.7913210629886}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9267578125,"state":{"ssize":9,"bsize":9},"perf":{"precision":1.0,"recall":0.9267578125,"f1":0.9593978937728944,"seconds":5.83939254283905e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.8046875,"distances_sum":2911.4435021600193}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9267578125,"state":{"ssize":9,"bsize":9},"perf":{"precision":1.0,"recall":0.9267578125,"f1":0.9593978937728944,"seconds":5.83939254283905e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.8046875,"distances_sum":2911.4435021600193}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.1826171875,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.1826171875,"f1":null,"seconds":2.998858690261841e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":5.609375,"distances_sum":516.2783769170533}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.1826171875,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.1826171875,"f1":null,"seconds":2.998858690261841e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":5.609375,"distances_sum":516.2783769170533}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5986328125, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.5986328125,"f1":0.7346285658785665,"seconds":4.287809133529663e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":7.28125,"distances_sum":1480.591474400314}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76171875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.76171875,"f1":0.8566251456876464,"seconds":5.088746547698975e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.1015625,"distances_sum":2036.1565247487433}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6748046875, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6748046875,"f1":0.7947328712953723,"seconds":4.7050416469573975e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":7.96875,"distances_sum":1713.8878983462369}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.76171875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.76171875,"f1":0.8566251456876464,"seconds":5.088746547698975e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.1015625,"distances_sum":2036.1565247487433}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8876953125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8876953125,"f1":0.9345326548451556,"seconds":5.535781383514404e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.6796875,"distances_sum":2590.3000666274897}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9431261446886452,"seconds":5.3513795137405396e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.6796875,"distances_sum":2665.087420571733}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8349609375, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8349609375,"f1":0.9045532592407599,"seconds":5.09992241859436e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.5234375,"distances_sum":2332.855334747076}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8994140625,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.8994140625,"f1":0.9431261446886452,"seconds":5.3513795137405396e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.6796875,"distances_sum":2665.087420571733}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":9,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9636733058608065,"seconds":5.966052412986755e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.9140625,"distances_sum":2793.4729158497994}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9595066391941397,"seconds":6.299465894699097e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.859375,"distances_sum":2780.8033027536326}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9719322344322348,"seconds":6.599351763725281e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.90625,"distances_sum":2874.7794362870472}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.973031135531136,"seconds":5.783513188362122e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.9453125,"distances_sum":2888.3761807985834}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.97498282967033,"seconds":5.902722477912903e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.9140625,"distances_sum":2914.6649668787063}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9598958333333337,"seconds":5.645677447319031e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.90625,"distances_sum":2775.9737904196845}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9541015625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.97498282967033,"seconds":5.902722477912903e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.9140625,"distances_sum":2914.6649668787063}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9541015625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.97498282967033,"seconds":5.902722477912903e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.9140625,"distances_sum":2914.6649668787063}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5517578125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5517578125,"f1":0.6932728729603737,"seconds":4.347413778305054e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":6.8046875,"distances_sum":1414.5693903668573}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4150390625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4150390625,"f1":null,"seconds":3.734603524208069e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":5.9921875,"distances_sum":1052.8120652129567}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5517578125,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5517578125,"f1":0.6932728729603737,"seconds":4.347413778305054e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":6.8046875,"distances_sum":1414.5693903668573}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.65625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.65625,"f1":0.7779330044955052,"seconds":4.772096872329712e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":7.5546875,"distances_sum":1775.3386926438818}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7685546875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7685546875,"f1":0.8591287185037194,"seconds":5.3998082876205444e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.0625,"distances_sum":2141.2742728306625}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5654296875, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5654296875,"f1":0.7040084915084921,"seconds":4.384666681289673e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":6.984375,"distances_sum":1458.9381810694517}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7685546875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7685546875,"f1":0.8591287185037194,"seconds":5.3998082876205444e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.0625,"distances_sum":2141.2742728306625}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8974609375,"f1":0.9389995421245427,"seconds":5.8729201555252075e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.75,"distances_sum":2767.1404441629647}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9400932400932408,"seconds":5.7891011238098145e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.734375,"distances_sum":2789.1122297869374}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.9380265567765574,"seconds":5.733221769332886e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.7734375,"distances_sum":2721.5744450075804}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8232421875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8232421875,"f1":0.8970409798534806,"seconds":5.494803190231323e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.4140625,"distances_sum":2385.163280413552}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8974609375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.8974609375,"f1":0.9389995421245427,"seconds":5.8729201555252075e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.75,"distances_sum":2767.1404441629647}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8974609375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.8974609375,"f1":0.9389995421245427,"seconds":5.8729201555252075e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.75,"distances_sum":2767.1404441629647}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.353515625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.353515625,"f1":null,"seconds":3.5353004932403564e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":5.5546875,"distances_sum":925.6923004416202}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.353515625,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.353515625,"f1":null,"seconds":3.5353004932403564e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":5.5546875,"distances_sum":925.6923004416202}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6748046875, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6748046875,"f1":0.7925272644022652,"seconds":4.949048161506653e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":7.8671875,"distances_sum":1818.510309305852}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.775390625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.775390625,"f1":0.8639516733266742,"seconds":4.993751645088196e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.21875,"distances_sum":2171.6631169111433}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.775390625,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.775390625,"f1":0.8639516733266742,"seconds":4.993751645088196e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.21875,"distances_sum":2171.6631169111433}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8271484375, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8271484375,"f1":0.8985353188478198,"seconds":5.602836608886719e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.640625,"distances_sum":2392.526854301934}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8271484375,"state":{"ssize":2,"bsize":6},"perf":{"precision":1.0,"recall":0.8271484375,"f1":0.8985353188478198,"seconds":5.602836608886719e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.640625,"distances_sum":2392.526854301934}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8271484375,"state":{"ssize":2,"bsize":6},"perf":{"precision":1.0,"recall":0.8271484375,"f1":0.8985353188478198,"seconds":5.602836608886719e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.640625,"distances_sum":2392.526854301934}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5634765625, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.5634765625,"f1":0.7047861860361867,"seconds":4.2729079723358154e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":7.15625,"distances_sum":1457.6004172825092}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.427734375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.427734375,"f1":null,"seconds":3.6992132663726807e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":6.1640625,"distances_sum":1041.741327668803}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7841796875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7841796875,"f1":0.8726304945054953,"seconds":5.301088094711304e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.203125,"distances_sum":2146.601558802409}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7841796875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7841796875,"f1":0.8726304945054953,"seconds":5.301088094711304e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.203125,"distances_sum":2146.601558802409}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.9386446886446893,"seconds":5.941838026046753e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.7890625,"distances_sum":2709.127709712612}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8916015625,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.8916015625,"f1":0.9386446886446893,"seconds":5.941838026046753e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.7890625,"distances_sum":2709.127709712612}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9477392399267403,"seconds":6.01448118686676e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.90625,"distances_sum":2777.6511700779324}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9725103021978025,"seconds":6.234273314476013e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.90625,"distances_sum":2983.6067590045445}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9521484375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9725103021978025,"seconds":6.234273314476013e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.90625,"distances_sum":2983.6067590045445}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9521484375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9725103021978025,"seconds":6.234273314476013e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.90625,"distances_sum":2983.6067590045445}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.767578125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.767578125,"f1":0.8604432026307036,"seconds":5.2656978368759155e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":8.21875,"distances_sum":2085.9382654237925}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.767578125,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.767578125,"f1":0.8604432026307036,"seconds":5.2656978368759155e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":8.21875,"distances_sum":2085.9382654237925}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.9381925366300373,"seconds":5.796551704406738e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":8.71875,"distances_sum":2623.3860067336823}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9565533424908428,"seconds":5.634501576423645e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":8.8125,"distances_sum":2822.172734922118}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.921875,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.921875,"f1":0.9565533424908428,"seconds":5.634501576423645e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":8.8125,"distances_sum":2822.172734922118}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9720066391941393,"seconds":6.012618541717529e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":8.9140625,"distances_sum":2935.4625413775957}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9599187271062277,"seconds":5.95487654209137e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":8.8359375,"distances_sum":2837.3558502753904}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.9755208333333336,"seconds":6.385147571563721e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":8.921875,"distances_sum":2960.502822069867}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.955078125,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9755208333333336,"seconds":6.385147571563721e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":8.921875,"distances_sum":2960.502822069867}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.955078125,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9755208333333336,"seconds":6.385147571563721e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":8.921875,"distances_sum":2960.502822069867}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.775390625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.775390625,"f1":0.8638346028971038,"seconds":5.4407864809036255e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.2890625,"distances_sum":2091.160951963659}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.775390625,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.775390625,"f1":0.8638346028971038,"seconds":5.4407864809036255e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.2890625,"distances_sum":2091.160951963659}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7919921875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7919921875,"f1":0.8775297619047627,"seconds":5.273148417472839e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.296875,"distances_sum":2150.414225489789}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9628949175824182,"seconds":5.705282092094421e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.84375,"distances_sum":2830.242417495873}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.93359375,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9628949175824182,"seconds":5.705282092094421e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.84375,"distances_sum":2830.242417495873}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.93359375,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9628949175824182,"seconds":5.705282092094421e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.84375,"distances_sum":2830.242417495873}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.93359375,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9628949175824182,"seconds":5.705282092094421e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.84375,"distances_sum":2830.242417495873}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6611328125, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6611328125,"f1":0.7826704545454553,"seconds":4.723668098449707e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":7.921875,"distances_sum":1721.8899140374779}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3896484375, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.3896484375,"f1":null,"seconds":3.4105032682418823e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":6.0,"distances_sum":984.0040561458392}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6611328125,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.6611328125,"f1":0.7826704545454553,"seconds":4.723668098449707e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":7.921875,"distances_sum":1721.8899140374779}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.775390625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.775390625,"f1":0.8637902028527037,"seconds":5.083158612251282e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.3046875,"distances_sum":2125.411643839682}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.775390625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.775390625,"f1":0.8637902028527037,"seconds":5.083158612251282e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.3046875,"distances_sum":2125.411643839682}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9371565934065943,"seconds":5.31412661075592e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.578125,"distances_sum":2616.9905631226534}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8603515625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8603515625,"f1":0.9164179570429578,"seconds":5.427747964859009e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.5,"distances_sum":2482.1579053081173}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.884765625,"f1":0.9316735347985353,"seconds":5.3532421588897705e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.5546875,"distances_sum":2607.1349873966747}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.888671875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.888671875,"f1":0.9371565934065943,"seconds":5.31412661075592e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.578125,"distances_sum":2616.9905631226534}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.888671875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.888671875,"f1":0.9371565934065943,"seconds":5.31412661075592e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.578125,"distances_sum":2616.9905631226534}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.376953125, conf: {"ssize":1,"bsize":2}, perf: {"precision":0.9921875,"recall":0.376953125,"f1":0.5284871378621376,"seconds":3.5297125577926636e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":6.0078125,"distances_sum":603.5753881414802}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76171875, conf: {"ssize":1,"bsize":5}, perf: {"precision":0.9873604910714284,"recall":0.76171875,"f1":0.8533620676198806,"seconds":5.403533577919006e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.2265625,"distances_sum":1281.1143039631866}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3427734375, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.3427734375,"f1":null,"seconds":3.5651028156280518e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":5.75,"distances_sum":492.96741671069395}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.76171875,"state":{"ssize":1,"bsize":5},"perf":{"precision":0.9873604910714284,"recall":0.76171875,"f1":0.8533620676198806,"seconds":5.403533577919006e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.2265625,"distances_sum":1281.1143039631866}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.76171875,"state":{"ssize":1,"bsize":5},"perf":{"precision":0.9873604910714284,"recall":0.76171875,"f1":0.8533620676198806,"seconds":5.403533577919006e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.2265625,"distances_sum":1281.1143039631866}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.76171875,"state":{"ssize":1,"bsize":5},"perf":{"precision":0.9873604910714284,"recall":0.76171875,"f1":0.8533620676198806,"seconds":5.403533577919006e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.2265625,"distances_sum":1281.1143039631866}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.404296875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.404296875,"f1":null,"seconds":3.8351863622665405e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":6.40625,"distances_sum":655.995310149155}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.67578125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.67578125,"f1":0.7963380369630377,"seconds":5.044043064117432e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":7.7890625,"distances_sum":1170.0028478990894}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.67578125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.67578125,"f1":0.7963380369630377,"seconds":5.044043064117432e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":7.7890625,"distances_sum":1170.0028478990894}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7763671875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7763671875,"f1":0.864441808191809,"seconds":5.172565579414368e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.25,"distances_sum":1369.9209435011726}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8349609375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8349609375,"f1":0.9012170121545129,"seconds":5.194917321205139e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.4140625,"distances_sum":1508.7166931803529}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8349609375,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8349609375,"f1":0.9012170121545129,"seconds":5.194917321205139e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.4140625,"distances_sum":1508.7166931803529}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9612236721611724,"seconds":5.470588803291321e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.84375,"distances_sum":1783.747148841481}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8662109375, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.8662109375,"f1":0.9222699175824186,"seconds":5.3532421588897705e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.578125,"distances_sum":1624.870036618072}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9419158966033971,"seconds":5.301088094711304e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.765625,"distances_sum":1694.3889416420245}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.9315850815850821,"seconds":5.66430389881134e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.7109375,"distances_sum":1653.3573543548896}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9306640625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9612236721611724,"seconds":5.470588803291321e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.84375,"distances_sum":1783.747148841481}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9306640625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9612236721611724,"seconds":5.470588803291321e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.84375,"distances_sum":1783.747148841481}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.369140625, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.369140625,"f1":null,"seconds":3.632158041000366e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":6.0546875,"distances_sum":636.2489538908599}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.373046875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.373046875,"f1":null,"seconds":3.4775584936141968e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":6.1328125,"distances_sum":659.7401312083966}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.373046875,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.373046875,"f1":null,"seconds":3.4775584936141968e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":6.1328125,"distances_sum":659.7401312083966}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7705078125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7705078125,"f1":0.8616680194805204,"seconds":5.064532160758972e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.40625,"distances_sum":1575.4237422596225}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.583984375, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.583984375,"f1":0.7195263070263075,"seconds":4.280358552932739e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":7.171875,"distances_sum":1091.7746157793842}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6845703125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6845703125,"f1":0.8036739302364311,"seconds":4.481524229049683e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":7.4921875,"distances_sum":1310.9110191502575}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8447265625, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8447265625,"f1":0.9055484446109452,"seconds":5.31412661075592e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.3984375,"distances_sum":1743.9729919382298}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8447265625,"state":{"ssize":6,"bsize":6},"perf":{"precision":1.0,"recall":0.8447265625,"f1":0.9055484446109452,"seconds":5.31412661075592e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.3984375,"distances_sum":1743.9729919382298}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":10,"bsize":7}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9337573884448889,"seconds":5.368143320083618e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.4609375,"distances_sum":1906.7940551672796}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9574805402930405,"seconds":5.707144737243652e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.7578125,"distances_sum":2060.759641450087}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9467891483516488,"seconds":5.5283308029174805e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.6640625,"distances_sum":1986.262793474833}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8837890625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8837890625,"f1":0.931667811355312,"seconds":5.755573511123657e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.4375,"distances_sum":1893.6311706684094}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9503033424908429,"seconds":5.62518835067749e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.6875,"distances_sum":2008.9285434556562}, best_list's length: 13, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9473677364302371,"seconds":5.345791578292847e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.53125,"distances_sum":1975.7920269988426}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9248046875,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9574805402930405,"seconds":5.707144737243652e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.7578125,"distances_sum":2060.759641450087}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9248046875,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9574805402930405,"seconds":5.707144737243652e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.7578125,"distances_sum":2060.759641450087}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7724609375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7724609375,"f1":0.8643236971361979,"seconds":5.185604095458984e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.4296875,"distances_sum":1619.6237716076134}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.671875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.671875,"f1":0.7921222874347884,"seconds":4.7907233238220215e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.0390625,"distances_sum":1364.908899756416}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.21875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.21875,"f1":null,"seconds":3.296881914138794e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":5.8828125,"distances_sum":434.83197536783587}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7724609375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7724609375,"f1":0.8643236971361979,"seconds":5.185604095458984e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.4296875,"distances_sum":1619.6237716076134}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.957497710622711,"seconds":5.869194865226746e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.8125,"distances_sum":2138.6606916405904}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9539694680319686,"seconds":5.679205060005188e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.7578125,"distances_sum":2145.07168688661}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9489812271062278,"seconds":5.99399209022522e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.6953125,"distances_sum":2061.568255088073}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8525390625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8525390625,"f1":0.9150469322344328,"seconds":6.167218089103699e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.5078125,"distances_sum":1833.757180390371}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.923828125,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.957497710622711,"seconds":5.869194865226746e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.8125,"distances_sum":2138.6606916405904}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9656822344322348,"seconds":6.12996518611908e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.8671875,"distances_sum":2187.195373803975}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9606055402930409,"seconds":5.923211574554443e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.8828125,"distances_sum":2148.8774115372094}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.961796016483517,"seconds":6.167218089103699e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.84375,"distances_sum":2160.188569561449}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9683608058608062,"seconds":6.191432476043701e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.875,"distances_sum":2212.0175045138762}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9683608058608062,"seconds":6.191432476043701e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.875,"distances_sum":2212.0175045138762}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.943359375,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9683608058608062,"seconds":6.191432476043701e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.875,"distances_sum":2212.0175045138762}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3642578125, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.3642578125,"f1":null,"seconds":6.261281669139862e-5,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":6.1796875,"distances_sum":691.4000335008122}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.580078125, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.580078125,"f1":null,"seconds":4.556030035018921e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":7.609375,"distances_sum":1155.7796316618544}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.580078125,"state":{"ssize":1,"bsize":3},"perf":{"precision":null,"recall":0.580078125,"f1":null,"seconds":4.556030035018921e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":7.609375,"distances_sum":1155.7796316618544}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9492304570429574,"seconds":5.802139639854431e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.734375,"distances_sum":2072.3166546970783}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8564453125, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.8564453125,"f1":0.9168440934065941,"seconds":5.54695725440979e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.625,"distances_sum":1887.0445687603365}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.912109375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.912109375,"f1":0.9492304570429574,"seconds":5.802139639854431e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.734375,"distances_sum":2072.3166546970783}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9660542582417588,"seconds":5.574896931648254e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.890625,"distances_sum":2162.461902138163}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9569857226107232,"seconds":6.0480087995529175e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.8359375,"distances_sum":2121.3232980051794}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9517055860805866,"seconds":5.600973963737488e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.8046875,"distances_sum":2081.4132497472438}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.921875,"f1":0.954842553280054,"seconds":5.813315510749817e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.6796875,"distances_sum":2101.234871343821}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":9,"bsize":10}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9638793498168505,"seconds":5.884096026420593e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.9140625,"distances_sum":2139.7951409936745}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.939453125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9660542582417588,"seconds":5.574896931648254e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.890625,"distances_sum":2162.461902138163}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.939453125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9660542582417588,"seconds":5.574896931648254e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.890625,"distances_sum":2162.461902138163}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5537109375, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.5537109375,"f1":0.6975690975690981,"seconds":3.9711594581604e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":6.984375,"distances_sum":1236.7983950086145}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5537109375,"state":{"ssize":3,"bsize":3},"perf":{"precision":1.0,"recall":0.5537109375,"f1":0.6975690975690981,"seconds":3.9711594581604e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":6.984375,"distances_sum":1236.7983950086145}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.646484375, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.646484375,"f1":0.7702977577977584,"seconds":4.353001713752747e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.65625,"distances_sum":1470.4676668833408}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.646484375,"state":{"ssize":6,"bsize":4},"perf":{"precision":1.0,"recall":0.646484375,"f1":0.7702977577977584,"seconds":4.353001713752747e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.65625,"distances_sum":1470.4676668833408}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8876953125, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8876953125,"f1":0.9344265109890115,"seconds":5.401670932769775e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.640625,"distances_sum":2200.4048705135556}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8876953125, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.8876953125,"f1":0.9351507867132874,"seconds":5.559995770454407e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.640625,"distances_sum":2217.3045689505884}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.849609375, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.849609375,"f1":0.9119224525474532,"seconds":5.2265822887420654e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.5390625,"distances_sum":2053.994458334935}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8876953125,"state":{"ssize":6,"bsize":7},"perf":{"precision":1.0,"recall":0.8876953125,"f1":0.9344265109890115,"seconds":5.401670932769775e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.640625,"distances_sum":2200.4048705135556}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8876953125,"state":{"ssize":6,"bsize":7},"perf":{"precision":1.0,"recall":0.8876953125,"f1":0.9344265109890115,"seconds":5.401670932769775e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.640625,"distances_sum":2200.4048705135556}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3720703125, conf: {"ssize":4,"bsize":2}, perf: {"precision":1.0,"recall":0.3720703125,"f1":0.5180971805971804,"seconds":3.557652235031128e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":5.71875,"distances_sum":801.6418075023533}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6591796875, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6591796875,"f1":0.7845347360972369,"seconds":4.630535840988159e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":7.53125,"distances_sum":1460.59735495914}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6591796875,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.6591796875,"f1":0.7845347360972369,"seconds":4.630535840988159e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":7.53125,"distances_sum":1460.59735495914}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9564789377289382,"seconds":5.533918738365173e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.7734375,"distances_sum":2345.924065889906}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8271484375, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8271484375,"f1":0.8958369755244762,"seconds":5.258247256278992e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.453125,"distances_sum":1976.03013765022}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8447265625, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.8447265625,"f1":0.9088656135531143,"seconds":5.427747964859009e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.46875,"distances_sum":2012.9757164624311}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7587890625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7587890625,"f1":0.8531031468531476,"seconds":5.131587386131287e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.09375,"distances_sum":1761.3369448119906}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.921875,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.921875,"f1":0.9564789377289382,"seconds":5.533918738365173e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.7734375,"distances_sum":2345.924065889906}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9638793498168503,"seconds":5.668029189109802e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.875,"distances_sum":2372.426368780268}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9652529761904765,"seconds":5.738809704780579e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.828125,"distances_sum":2397.8716804479814}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9375,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.9375,"f1":0.9652529761904765,"seconds":5.738809704780579e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.828125,"distances_sum":2397.8716804479814}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9375,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.9375,"f1":0.9652529761904765,"seconds":5.738809704780579e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.828125,"distances_sum":2397.8716804479814}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1943359375, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.1943359375,"f1":null,"seconds":3.2279640436172485e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":5.4453125,"distances_sum":390.48363296478914}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1904296875, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.1904296875,"f1":null,"seconds":3.2689422369003296e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":5.421875,"distances_sum":348.8493459915691}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.556640625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.556640625,"f1":0.7014830655455662,"seconds":4.090368747711182e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":6.8203125,"distances_sum":1074.127070349671}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.556640625,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.556640625,"f1":0.7014830655455662,"seconds":4.090368747711182e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":6.8203125,"distances_sum":1074.127070349671}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.556640625,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.556640625,"f1":0.7014830655455662,"seconds":4.090368747711182e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":6.8203125,"distances_sum":1074.127070349671}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.556640625,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.556640625,"f1":0.7014830655455662,"seconds":4.090368747711182e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":6.8203125,"distances_sum":1074.127070349671}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6484375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6484375,"f1":0.77580214923965,"seconds":4.656612873077393e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":7.5234375,"distances_sum":1476.7661574657739}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.39453125, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.39453125,"f1":null,"seconds":3.462657332420349e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":5.7265625,"distances_sum":882.0392412679521}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6484375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6484375,"f1":0.77580214923965,"seconds":4.656612873077393e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":7.5234375,"distances_sum":1476.7661574657739}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.662109375, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.662109375,"f1":0.7859541500166507,"seconds":4.293397068977356e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":7.640625,"distances_sum":1523.2252787688556}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6689453125, conf: {"ssize":8,"bsize":4}, perf: {"precision":1.0,"recall":0.6689453125,"f1":0.7892987221112231,"seconds":4.47593629360199e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":7.59375,"distances_sum":1598.7285157998099}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6689453125,"state":{"ssize":8,"bsize":4},"perf":{"precision":1.0,"recall":0.6689453125,"f1":0.7892987221112231,"seconds":4.47593629360199e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":7.59375,"distances_sum":1598.7285157998099}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8369140625, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8369140625,"f1":0.9041843573093581,"seconds":5.600973963737488e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":8.7109375,"distances_sum":2086.213157432981}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9502518315018319,"seconds":5.774199962615967e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":8.8046875,"distances_sum":2423.7607213242377}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6728515625, conf: {"ssize":7,"bsize":4}, perf: {"precision":1.0,"recall":0.6728515625,"f1":0.794904054279055,"seconds":4.692003130912781e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":7.6796875,"distances_sum":1607.7834395848542}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7568359375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7568359375,"f1":0.8509709040959049,"seconds":4.9602240324020386e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":8.3125,"distances_sum":1815.7033130160996}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8798828125, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8798828125,"f1":0.9310184607059615,"seconds":5.6140124797821045e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":8.8671875,"distances_sum":2257.766570053031}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.9359494671994679,"seconds":5.520880222320557e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":8.8515625,"distances_sum":2318.4314660372356}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9130859375,"state":{"ssize":6,"bsize":8},"perf":{"precision":1.0,"recall":0.9130859375,"f1":0.9502518315018319,"seconds":5.774199962615967e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":8.8046875,"distances_sum":2423.7607213242377}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9130859375,"state":{"ssize":6,"bsize":8},"perf":{"precision":1.0,"recall":0.9130859375,"f1":0.9502518315018319,"seconds":5.774199962615967e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":8.8046875,"distances_sum":2423.7607213242377}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.208984375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.208984375,"f1":null,"seconds":2.8777867555618286e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":5.109375,"distances_sum":548.5822880047892}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.208984375,"state":{"ssize":3,"bsize":1},"perf":{"precision":null,"recall":0.208984375,"f1":null,"seconds":2.8777867555618286e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":5.109375,"distances_sum":548.5822880047892}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.208984375,"state":{"ssize":3,"bsize":1},"perf":{"precision":null,"recall":0.208984375,"f1":null,"seconds":2.8777867555618286e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":5.109375,"distances_sum":548.5822880047892}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2421875, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2421875,"f1":null,"seconds":2.998858690261841e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":6.15625,"distances_sum":558.4175773806381}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5703125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5703125,"f1":0.7114343989343996,"seconds":4.023313522338867e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":7.484375,"distances_sum":1225.2610386239141}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5703125,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5703125,"f1":0.7114343989343996,"seconds":4.023313522338867e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":7.484375,"distances_sum":1225.2610386239141}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6435546875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6435546875,"f1":0.7718994547119554,"seconds":4.403293132781982e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":7.6484375,"distances_sum":1395.5040994429844}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8154296875, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8154296875,"f1":0.8893250846375855,"seconds":5.144625902175903e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.3203125,"distances_sum":1935.6715620732423}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7255859375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7255859375,"f1":0.8313171203796212,"seconds":4.906207323074341e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.03125,"distances_sum":1626.7005379841185}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8154296875,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.8154296875,"f1":0.8893250846375855,"seconds":5.144625902175903e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.3203125,"distances_sum":1935.6715620732423}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9488126456876466,"seconds":5.392357707023621e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.6796875,"distances_sum":2343.203930172036}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9525011446886452,"seconds":5.383044481277466e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.7734375,"distances_sum":2350.676116324348}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8642578125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8642578125,"f1":0.9209592490842498,"seconds":5.511566996574402e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.390625,"distances_sum":2172.9401883240116}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91796875,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.91796875,"f1":0.9525011446886452,"seconds":5.383044481277466e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.7734375,"distances_sum":2350.676116324348}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.91796875,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.91796875,"f1":0.9525011446886452,"seconds":5.383044481277466e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.7734375,"distances_sum":2350.676116324348}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4296875, conf: {"ssize":4,"bsize":2}, perf: {"precision":1.0,"recall":0.4296875,"f1":0.5828428515928518,"seconds":3.7513673305511475e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":6.3828125,"distances_sum":785.7240962445077}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4296875,"state":{"ssize":4,"bsize":2},"perf":{"precision":1.0,"recall":0.4296875,"f1":0.5828428515928518,"seconds":3.7513673305511475e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":6.3828125,"distances_sum":785.7240962445077}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8466796875, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8466796875,"f1":0.9105254120879128,"seconds":5.591660737991333e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.21875,"distances_sum":2089.15366969441}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6884765625, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6884765625,"f1":0.8019317488067497,"seconds":4.678964614868164e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":7.7890625,"distances_sum":1568.4622979322535}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7451171875, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.7451171875,"f1":0.8412993256743266,"seconds":5.206093192100525e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":7.9375,"distances_sum":1701.8492659484632}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.55859375, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.55859375,"f1":0.6980894105894113,"seconds":4.021450877189636e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":7.234375,"distances_sum":1232.0835123325512}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6689453125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6689453125,"f1":0.7885737526362534,"seconds":4.5765191316604614e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":7.7890625,"distances_sum":1437.7071620477773}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8466796875,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.8466796875,"f1":0.9105254120879128,"seconds":5.591660737991333e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.21875,"distances_sum":2089.15366969441}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9718750000000005,"seconds":5.735084414482117e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.875,"distances_sum":2564.411503888872}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9543612637362642,"seconds":5.6587159633636475e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.796875,"distances_sum":2407.161687985117}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8544921875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8544921875,"f1":0.9167983058608066,"seconds":5.517154932022095e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.2734375,"distances_sum":2084.1972315510393}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9482421875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9718750000000005,"seconds":5.735084414482117e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.875,"distances_sum":2564.411503888872}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9482421875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9718750000000005,"seconds":5.735084414482117e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.875,"distances_sum":2564.411503888872}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7783203125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7783203125,"f1":0.867096445221446,"seconds":5.15766441822052e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.0859375,"distances_sum":1753.3426506604662}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5634765625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5634765625,"f1":0.7061478452103458,"seconds":4.133209586143494e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":7.140625,"distances_sum":1154.7759914628807}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.69140625, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.69140625,"f1":0.8062780969030977,"seconds":4.582107067108154e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":7.8203125,"distances_sum":1446.1101076749464}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7783203125,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7783203125,"f1":0.867096445221446,"seconds":5.15766441822052e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.0859375,"distances_sum":1753.3426506604662}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8505859375, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8505859375,"f1":0.9138736263736268,"seconds":5.362555384635925e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.375,"distances_sum":1989.4119098366295}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.86328125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.86328125,"f1":0.9211626914751923,"seconds":5.384907126426697e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.3515625,"distances_sum":2065.125886348418}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9625400641025643,"seconds":5.660578608512878e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.8125,"distances_sum":2431.6456712464687}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8740234375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8740234375,"f1":0.9275958416583423,"seconds":5.511566996574402e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.515625,"distances_sum":2135.724781169239}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.952798763736264,"seconds":5.595386028289795e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.703125,"distances_sum":2375.6345971223623}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7841796875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7841796875,"f1":0.8709145021645031,"seconds":5.152076482772827e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.1328125,"distances_sum":1816.6480533022816}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9326171875,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9625400641025643,"seconds":5.660578608512878e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.8125,"distances_sum":2431.6456712464687}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9609375, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9609375,"f1":0.9787202380952384,"seconds":5.759298801422119e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.9140625,"distances_sum":2540.0013659249075}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9642914377289381,"seconds":5.600973963737488e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.859375,"distances_sum":2410.8088501964426}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9702953296703299,"seconds":5.844980478286743e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.8671875,"distances_sum":2466.324737670704}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9652586996336998,"seconds":5.980953574180603e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.859375,"distances_sum":2431.2710576019585}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9609375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9787202380952384,"seconds":5.759298801422119e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.9140625,"distances_sum":2540.0013659249075}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9609375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9787202380952384,"seconds":5.759298801422119e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.9140625,"distances_sum":2540.0013659249075}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7578125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7578125,"f1":0.8517022907647916,"seconds":4.824250936508179e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.0390625,"distances_sum":1771.4321437656113}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4375,"f1":null,"seconds":3.637745976448059e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":6.46875,"distances_sum":897.3982696064965}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7578125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7578125,"f1":0.8517022907647916,"seconds":4.824250936508179e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.0390625,"distances_sum":1771.4321437656113}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9501404845154852,"seconds":5.533918738365173e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.7578125,"distances_sum":2463.797006783126}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8876953125, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8876953125,"f1":0.93555402930403,"seconds":5.377456545829773e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.609375,"distances_sum":2308.754565745464}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8896484375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8896484375,"f1":0.936189331501832,"seconds":5.587935447692871e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.5625,"distances_sum":2339.598955630928}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9130859375,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.9130859375,"f1":0.9501404845154852,"seconds":5.533918738365173e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.7578125,"distances_sum":2463.797006783126}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9575606684981688,"seconds":5.705282092094421e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.8203125,"distances_sum":2480.9552362267527}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9609031593406598,"seconds":5.99399209022522e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.796875,"distances_sum":2522.9170375494314}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9728079212454216,"seconds":6.0033053159713745e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.8671875,"distances_sum":2618.6815423667535}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9561240842490847,"seconds":5.748122930526733e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.78125,"distances_sum":2488.465141530412}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.951171875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9728079212454216,"seconds":6.0033053159713745e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.8671875,"distances_sum":2618.6815423667535}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.951171875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9728079212454216,"seconds":6.0033053159713745e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.8671875,"distances_sum":2618.6815423667535}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2412109375, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2412109375,"f1":null,"seconds":3.168359398841858e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":6.4296875,"distances_sum":632.5964195495377}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6328125, conf: {"ssize":1,"bsize":4}, perf: {"precision":0.9729538690476189,"recall":0.6328125,"f1":null,"seconds":4.3977051973342896e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.484375,"distances_sum":1565.4808457838326}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6328125,"state":{"ssize":1,"bsize":4},"perf":{"precision":0.9729538690476189,"recall":0.6328125,"f1":null,"seconds":4.3977051973342896e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.484375,"distances_sum":1565.4808457838326}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.82421875, conf: {"ssize":1,"bsize":6}, perf: {"precision":0.981045386904762,"recall":0.82421875,"f1":0.8907623626373631,"seconds":5.124136805534363e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.4921875,"distances_sum":2313.757197303845}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8251953125, conf: {"ssize":5,"bsize":6}, perf: {"precision":0.9819289434523809,"recall":0.8251953125,"f1":0.8908978391400272,"seconds":5.427747964859009e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.578125,"distances_sum":2290.1252732509224}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7451171875, conf: {"ssize":1,"bsize":5}, perf: {"precision":0.9823474702380951,"recall":0.7451171875,"f1":0.8401850753413259,"seconds":5.187466740608215e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.1875,"distances_sum":1957.4996673477585}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6474609375, conf: {"ssize":6,"bsize":4}, perf: {"precision":0.9793526785714285,"recall":0.6474609375,"f1":0.7711460414585419,"seconds":4.455447196960449e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.546875,"distances_sum":1592.0482260663978}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8251953125,"state":{"ssize":5,"bsize":6},"perf":{"precision":0.9819289434523809,"recall":0.8251953125,"f1":0.8908978391400272,"seconds":5.427747964859009e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.578125,"distances_sum":2290.1252732509224}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":5,"bsize":9}, perf: {"precision":0.9863746279761905,"recall":0.9306640625,"f1":0.9548899668040296,"seconds":5.893409252166748e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.875,"distances_sum":2752.526668443457}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":1,"bsize":10}, perf: {"precision":0.9888392857142857,"recall":0.955078125,"f1":0.9698889652014655,"seconds":6.0461461544036865e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.9453125,"distances_sum":2836.311032712952}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":2,"bsize":8}, perf: {"precision":0.9820498511904763,"recall":0.88671875,"f1":0.9280191163003667,"seconds":5.623325705528259e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.8359375,"distances_sum":2565.6227999536536}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":4,"bsize":10}, perf: {"precision":0.9835379464285715,"recall":0.947265625,"f1":0.9635058951465202,"seconds":5.781650543212891e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.9609375,"distances_sum":2838.8699295909596}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":10,"bsize":8}, perf: {"precision":0.9905133928571428,"recall":0.896484375,"f1":0.9368020000832508,"seconds":5.5693089962005615e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.9140625,"distances_sum":2586.6991202798054}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.955078125,"state":{"ssize":1,"bsize":10},"perf":{"precision":0.9888392857142857,"recall":0.955078125,"f1":0.9698889652014655,"seconds":6.0461461544036865e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.9453125,"distances_sum":2836.311032712952}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.955078125,"state":{"ssize":1,"bsize":10},"perf":{"precision":0.9888392857142857,"recall":0.955078125,"f1":0.9698889652014655,"seconds":6.0461461544036865e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.9453125,"distances_sum":2836.311032712952}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7734375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7734375,"f1":0.8621919746919754,"seconds":5.142763257026672e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":7.6953125,"distances_sum":2065.017760450052}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4013671875, conf: {"ssize":4,"bsize":2}, perf: {"precision":1.0,"recall":0.4013671875,"f1":0.553431290931291,"seconds":3.93204391002655e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":6.046875,"distances_sum":924.5283758276681}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7734375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7734375,"f1":0.8621919746919754,"seconds":5.142763257026672e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":7.6953125,"distances_sum":2065.017760450052}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9620192307692315,"seconds":5.81890344619751e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.84375,"distances_sum":2772.7852279067683}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9306640625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9620192307692315,"seconds":5.81890344619751e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.84375,"distances_sum":2772.7852279067683}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9306640625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9620192307692315,"seconds":5.81890344619751e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.84375,"distances_sum":2772.7852279067683}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9306640625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9620192307692315,"seconds":5.81890344619751e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.84375,"distances_sum":2772.7852279067683}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.77734375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.77734375,"f1":0.8661416708291717,"seconds":5.086883902549744e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":7.7734375,"distances_sum":2023.8688622359773}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2880859375, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2880859375,"f1":null,"seconds":3.417953848838806e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":6.2890625,"distances_sum":739.3000226967972}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3828125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3828125,"f1":null,"seconds":3.555789589881897e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":5.8828125,"distances_sum":855.4700289480867}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.77734375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.77734375,"f1":0.8661416708291717,"seconds":5.086883902549744e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":7.7734375,"distances_sum":2023.8688622359773}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9625000000000005,"seconds":5.7443976402282715e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.8046875,"distances_sum":2741.821710572651}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.93359375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9625000000000005,"seconds":5.7443976402282715e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.8046875,"distances_sum":2741.821710572651}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9599609375, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9599609375,"f1":0.9778846153846157,"seconds":5.941838026046753e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.921875,"distances_sum":2846.711931293788}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9650698260073264,"seconds":5.723908543586731e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.859375,"distances_sum":2754.5712162788095}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9599609375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.9778846153846157,"seconds":5.941838026046753e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.921875,"distances_sum":2846.711931293788}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9599609375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.9778846153846157,"seconds":5.941838026046753e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.921875,"distances_sum":2846.711931293788}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2509765625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2509765625,"f1":null,"seconds":3.2205134630203247e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":5.8828125,"distances_sum":622.7292372368457}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5869140625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5869140625,"f1":0.7265030108780115,"seconds":3.85381281375885e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":6.875,"distances_sum":1388.959476753185}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7451171875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7451171875,"f1":0.8413508366633373,"seconds":4.734843969345093e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.5,"distances_sum":1975.1489526307284}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7451171875,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7451171875,"f1":0.8413508366633373,"seconds":4.734843969345093e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.5,"distances_sum":1975.1489526307284}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9564274267399273,"seconds":5.425885319709778e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.7890625,"distances_sum":2762.913019903231}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.936378725441226,"seconds":5.321577191352844e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.65625,"distances_sum":2598.9295037462184}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7626953125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7626953125,"f1":0.8532295829170837,"seconds":4.794448614120483e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.53125,"distances_sum":2048.6998618867387}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9228515625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9228515625,"f1":0.9564274267399273,"seconds":5.425885319709778e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.7890625,"distances_sum":2762.913019903231}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.971096611721612,"seconds":5.60469925403595e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.84375,"distances_sum":2838.5448209242145}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9599609375, conf: {"ssize":2,"bsize":12}, perf: {"precision":1.0,"recall":0.9599609375,"f1":0.9782566391941397,"seconds":5.470588803291321e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.9296875,"distances_sum":2880.100136856395}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":6,"bsize":12}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9697401556776559,"seconds":5.576759576797485e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8671875,"distances_sum":2804.7899770563727}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9599609375,"state":{"ssize":2,"bsize":12},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.9782566391941397,"seconds":5.470588803291321e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.9296875,"distances_sum":2880.100136856395}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9599609375,"state":{"ssize":2,"bsize":12},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.9782566391941397,"seconds":5.470588803291321e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.9296875,"distances_sum":2880.100136856395}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5615234375, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.5615234375,"f1":0.7054582570207574,"seconds":4.194676876068115e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":6.703125,"distances_sum":1373.8306005107247}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5615234375,"state":{"ssize":3,"bsize":3},"perf":{"precision":1.0,"recall":0.5615234375,"f1":0.7054582570207574,"seconds":4.194676876068115e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":6.703125,"distances_sum":1373.8306005107247}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.853515625, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.853515625,"f1":0.9144496128871138,"seconds":5.2228569984436035e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.5390625,"distances_sum":2513.4467307645336}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8271484375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8271484375,"f1":0.8997138278388287,"seconds":5.146488547325134e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.109375,"distances_sum":2353.2838495753676}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.853515625,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.853515625,"f1":0.9144496128871138,"seconds":5.2228569984436035e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.5390625,"distances_sum":2513.4467307645336}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":8,"bsize":10}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9596955128205131,"seconds":5.649402737617493e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8515625,"distances_sum":2796.097575517008}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9485004578754583,"seconds":5.472451448440552e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.703125,"distances_sum":2754.2605414770032}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9483173076923085,"seconds":5.392357707023621e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.75,"distances_sum":2713.47376550463}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.962019230769231,"seconds":5.474314093589783e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8125,"distances_sum":2852.3835523336006}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9726018772893776,"seconds":5.6140124797821045e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8984375,"distances_sum":2913.1070166065033}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9501953125,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9726018772893776,"seconds":5.6140124797821045e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8984375,"distances_sum":2913.1070166065033}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9501953125,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9726018772893776,"seconds":5.6140124797821045e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8984375,"distances_sum":2913.1070166065033}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.693359375, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.693359375,"f1":0.8045364357864366,"seconds":4.423782229423523e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":7.484375,"distances_sum":1699.1443841425498}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.693359375,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.693359375,"f1":0.8045364357864366,"seconds":4.423782229423523e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":7.484375,"distances_sum":1699.1443841425498}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8330078125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8330078125,"f1":0.9034944222444229,"seconds":5.271285772323608e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.1015625,"distances_sum":2192.0910586072528}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87109375, conf: {"ssize":9,"bsize":7}, perf: {"precision":1.0,"recall":0.87109375,"f1":0.9264079670329677,"seconds":5.3513795137405396e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.59375,"distances_sum":2354.1595969242494}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.87109375,"state":{"ssize":9,"bsize":7},"perf":{"precision":1.0,"recall":0.87109375,"f1":0.9264079670329677,"seconds":5.3513795137405396e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.59375,"distances_sum":2354.1595969242494}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":13,"bsize":10}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9599358974358981,"seconds":6.191432476043701e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.8046875,"distances_sum":2654.464154269094}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.968475274725275,"seconds":5.990266799926758e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.875,"distances_sum":2711.9905660365334}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9601247710622716,"seconds":5.93625009059906e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.8203125,"distances_sum":2623.853225620602}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.968475274725275,"seconds":5.990266799926758e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.875,"distances_sum":2711.9905660365334}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.943359375,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.968475274725275,"seconds":5.990266799926758e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.875,"distances_sum":2711.9905660365334}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4091796875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4091796875,"f1":null,"seconds":3.555789589881897e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":5.640625,"distances_sum":919.6147818627724}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6640625, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6640625,"f1":0.7871071636696644,"seconds":4.548579454421997e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.1015625,"distances_sum":1647.5085134878682}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6640625,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.6640625,"f1":0.7871071636696644,"seconds":4.548579454421997e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.1015625,"distances_sum":1647.5085134878682}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8701171875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8701171875,"f1":0.925354853479854,"seconds":5.692243576049805e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.5,"distances_sum":2461.449249437216}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8701171875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8701171875,"f1":0.925354853479854,"seconds":5.692243576049805e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.5,"distances_sum":2461.449249437216}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9449862637362643,"seconds":5.202367901802063e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.6875,"distances_sum":2608.208929565459}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9517342032967038,"seconds":5.260109901428223e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.703125,"distances_sum":2700.9053192481065}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9140625,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.9140625,"f1":0.9517342032967038,"seconds":5.260109901428223e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.703125,"distances_sum":2700.9053192481065}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9140625,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.9140625,"f1":0.9517342032967038,"seconds":5.260109901428223e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.703125,"distances_sum":2700.9053192481065}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.57421875, conf: {"ssize":2,"bsize":3}, perf: {"precision":null,"recall":0.57421875,"f1":null,"seconds":3.8798898458480835e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":6.6875,"distances_sum":1397.284588994562}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.232421875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.232421875,"f1":null,"seconds":3.201887011528015e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":5.6171875,"distances_sum":633.1015157657802}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7783203125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7783203125,"f1":0.8672827172827181,"seconds":4.958361387252808e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":7.8046875,"distances_sum":2106.6605322832197}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7783203125,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7783203125,"f1":0.8672827172827181,"seconds":4.958361387252808e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":7.8046875,"distances_sum":2106.6605322832197}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83203125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.83203125,"f1":0.9007986804861812,"seconds":5.032867193222046e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.265625,"distances_sum":2310.712281842543}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9472527472527477,"seconds":5.321577191352844e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.6484375,"distances_sum":2717.3197652405793}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8671875, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8671875,"f1":0.9226934523809532,"seconds":5.172565579414368e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.515625,"distances_sum":2449.7277579045763}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9072265625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9072265625,"f1":0.9472527472527477,"seconds":5.321577191352844e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.6484375,"distances_sum":2717.3197652405793}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9740155677655681,"seconds":5.792826414108276e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.859375,"distances_sum":2866.596701644499}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9631925366300369,"seconds":5.6568533182144165e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.8125,"distances_sum":2738.7530636492497}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9680288461538464,"seconds":5.68293035030365e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.8828125,"distances_sum":2785.745689357204}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9655906593406598,"seconds":5.846843123435974e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.8671875,"distances_sum":2782.6034654988243}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9479281135531141,"seconds":5.317851901054382e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.6484375,"distances_sum":2691.3382279895973}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.953125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9740155677655681,"seconds":5.792826414108276e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.859375,"distances_sum":2866.596701644499}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.953125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9740155677655681,"seconds":5.792826414108276e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.859375,"distances_sum":2866.596701644499}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.755859375, conf: {"ssize":2,"bsize":5}, perf: {"precision":null,"recall":0.755859375,"f1":null,"seconds":4.857778549194336e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":7.578125,"distances_sum":1971.3222601921896}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.578125, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.578125,"f1":0.7141384657009663,"seconds":3.9711594581604e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":6.6328125,"distances_sum":1419.4042226352344}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6806640625, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6806640625,"f1":0.7979073010323019,"seconds":4.170462489128113e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":7.09375,"distances_sum":1740.499663223673}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.755859375,"state":{"ssize":2,"bsize":5},"perf":{"precision":null,"recall":0.755859375,"f1":null,"seconds":4.857778549194336e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":7.578125,"distances_sum":1971.3222601921896}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.857421875, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.857421875,"f1":0.9174825174825182,"seconds":5.414709448814392e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.40625,"distances_sum":2502.6763653255994}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9596211080586086,"seconds":5.77978789806366e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.78125,"distances_sum":2760.4658150555947}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8759765625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.8759765625,"f1":0.9283138736263745,"seconds":5.599111318588257e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.5234375,"distances_sum":2545.5495014722464}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.759765625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.759765625,"f1":0.8544824966699974,"seconds":4.936009645462036e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":7.6171875,"distances_sum":1995.7293740164203}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9456730769230778,"seconds":5.5264681577682495e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.671875,"distances_sum":2658.5742085121774}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8427734375, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8427734375,"f1":0.9092032967032975,"seconds":5.679205060005188e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.171875,"distances_sum":2336.085068770196}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.927734375,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9596211080586086,"seconds":5.77978789806366e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.78125,"distances_sum":2760.4658150555947}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9651041666666671,"seconds":5.539506673812866e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.8203125,"distances_sum":2780.937357758342}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9677734375, conf: {"ssize":5,"bsize":12}, perf: {"precision":1.0,"recall":0.9677734375,"f1":0.9822744963369965,"seconds":5.684792995452881e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.9453125,"distances_sum":2910.8873760925803}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9617960164835169,"seconds":5.4426491260528564e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.78125,"distances_sum":2758.326383216039}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.9749484890109892,"seconds":5.472451448440552e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.8828125,"distances_sum":2850.5528209207923}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":9,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.962688873626374,"seconds":5.405396223068237e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.7890625,"distances_sum":2781.6032964408387}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9677734375,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.9677734375,"f1":0.9822744963369965,"seconds":5.684792995452881e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.9453125,"distances_sum":2910.8873760925803}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9677734375,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.9677734375,"f1":0.9822744963369965,"seconds":5.684792995452881e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.9453125,"distances_sum":2910.8873760925803}}, n: 9
inertia(cfft.distances) = 19.18388052470405
inertia(cdnet.distances) = 33.34951120509233
inertia(crand.distances) = 22.235905731523374
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.9022222222222221
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.9
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8977777777777778
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.9
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8844444444444445
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8955555555555555
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8844444444444445
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8933333333333334
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.9422222222222222
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9400000000000001
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.8888888888888888
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8911111111111111
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.9044444444444445
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8911111111111111
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.8911111111111111
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.8955555555555555
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.9466666666666667
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9244444444444445
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9244444444444445
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9266666666666667
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.9133333333333332
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.9377777777777778
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.9377777777777778
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.8733333333333334
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.8711111111111111
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.8777777777777779
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.8822222222222221
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.9022222222222221
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.9066666666666666
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.9
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.9155555555555556
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.9111111111111111
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.9066666666666666
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.9044444444444445
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [2, 1, 3, 2, 3, 3, 1, 1, 3, 3, 3, 2, 1, 2, 3, 2, 3, 3, 3, 1, 3]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, Tuple{Int64,Int64}[(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, Tuple{Int64,Int64}[(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, Tuple{Int64,Int64}[(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 1, 2, 2, 3, 3, 3, 3]
acc = 0.92
*** starting iteration: 1; err: [Inf, 0.4042666695334654] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.4042666695334654, 0.1765535352897536] ***
*** starting iteration: 2; err: [Inf, 0.4042666695334654, 0.1765535352897536] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.4042666695334654, 0.1765535352897536, 0.16318945914185368] ***
*** starting iteration: 3; err: [Inf, 0.4042666695334654, 0.1765535352897536, 0.16318945914185368] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.4042666695334654, 0.1765535352897536, 0.16318945914185368, 0.15930187329586754] ***
*** starting iteration: 4; err: [Inf, 0.4042666695334654, 0.1765535352897536, 0.16318945914185368, 0.15930187329586754] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.4042666695334654, 0.1765535352897536, 0.16318945914185368, 0.15930187329586754, 0.15913698527851505] ***
*** finished computation of 12 references, err: [Inf, 0.4042666695334654, 0.1765535352897536, 0.16318945914185368, 0.15930187329586754, 0.15913698527851505] ***
*** center 1: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, Tuple{Int64,Int64}[(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 8, normalized-entropy: 0.6500224216483541, Tuple{Int64,Int64}[(2, 3), (3, 15)]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 10: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 11: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 14 centroids; started with 12
acc = 0.92
Test Summary:   | Pass  Total
NearestCentroid |   10     10
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.3316844877906499] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3316844877906499, 0.2527338753049636] ***
*** starting iteration: 2; err: [Inf, 0.3316844877906499, 0.2527338753049636] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3316844877906499, 0.2527338753049636, 0.22518693570985765] ***
*** starting iteration: 3; err: [Inf, 0.3316844877906499, 0.2527338753049636, 0.22518693570985765] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3316844877906499, 0.2527338753049636, 0.22518693570985765, 0.2045589769088764] ***
*** starting iteration: 4; err: [Inf, 0.3316844877906499, 0.2527338753049636, 0.22518693570985765, 0.2045589769088764] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3316844877906499, 0.2527338753049636, 0.22518693570985765, 0.2045589769088764, 0.20026047615044903] ***
*** starting iteration: 5; err: [Inf, 0.3316844877906499, 0.2527338753049636, 0.22518693570985765, 0.2045589769088764, 0.20026047615044903] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3316844877906499, 0.2527338753049636, 0.22518693570985765, 0.2045589769088764, 0.20026047615044903, 0.19979576856027442] ***
*** finished computation of 7 references, err: [Inf, 0.3316844877906499, 0.2527338753049636, 0.22518693570985765, 0.2045589769088764, 0.20026047615044903, 0.19979576856027442] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 17, 1]]
** centroid: 1, normalized-entropy: 0.3095434291503252, Tuple{Int64,Int64}[(2, 17), (3, 1)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 18, 13]]
** centroid: 2, normalized-entropy: 0.9811522341999134, Tuple{Int64,Int64}[(2, 18), (3, 13)]
*** center 3: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 7: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3507974420759295] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3507974420759295, 0.2099762074868893] ***
*** starting iteration: 2; err: [Inf, 0.3507974420759295, 0.2099762074868893] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3507974420759295, 0.2099762074868893, 0.18502587165255222] ***
*** starting iteration: 3; err: [Inf, 0.3507974420759295, 0.2099762074868893, 0.18502587165255222] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3507974420759295, 0.2099762074868893, 0.18502587165255222, 0.1769690566500711] ***
*** starting iteration: 4; err: [Inf, 0.3507974420759295, 0.2099762074868893, 0.18502587165255222, 0.1769690566500711] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3507974420759295, 0.2099762074868893, 0.18502587165255222, 0.1769690566500711, 0.17398113873634824] ***
*** starting iteration: 5; err: [Inf, 0.3507974420759295, 0.2099762074868893, 0.18502587165255222, 0.1769690566500711, 0.17398113873634824] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3507974420759295, 0.2099762074868893, 0.18502587165255222, 0.1769690566500711, 0.17398113873634824, 0.17036873159985352] ***
*** starting iteration: 6; err: [Inf, 0.3507974420759295, 0.2099762074868893, 0.18502587165255222, 0.1769690566500711, 0.17398113873634824, 0.17036873159985352] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3507974420759295, 0.2099762074868893, 0.18502587165255222, 0.1769690566500711, 0.17398113873634824, 0.17036873159985352, 0.16901944415898412] ***
*** starting iteration: 7; err: [Inf, 0.3507974420759295, 0.2099762074868893, 0.18502587165255222, 0.1769690566500711, 0.17398113873634824, 0.17036873159985352, 0.16901944415898412] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3507974420759295, 0.2099762074868893, 0.18502587165255222, 0.1769690566500711, 0.17398113873634824, 0.17036873159985352, 0.16901944415898412, 0.16901944415898412] ***
*** finished computation of 7 references, err: [Inf, 0.3507974420759295, 0.2099762074868893, 0.18502587165255222, 0.1769690566500711, 0.17398113873634824, 0.17036873159985352, 0.16901944415898412, 0.16901944415898412] ***
*** center 1: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 19, 1]]
** centroid: 4, normalized-entropy: 0.2863969571159561, Tuple{Int64,Int64}[(2, 19), (3, 1)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 15, 6]]
** centroid: 5, normalized-entropy: 0.8631205685666311, Tuple{Int64,Int64}[(2, 15), (3, 6)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6483268444669423] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6483268444669423, 0.3567437873650939] ***
*** starting iteration: 2; err: [Inf, 0.6483268444669423, 0.3567437873650939] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6483268444669423, 0.3567437873650939, 0.2857670379330115] ***
*** starting iteration: 3; err: [Inf, 0.6483268444669423, 0.3567437873650939, 0.2857670379330115] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6483268444669423, 0.3567437873650939, 0.2857670379330115, 0.2592908531220896] ***
*** starting iteration: 4; err: [Inf, 0.6483268444669423, 0.3567437873650939, 0.2857670379330115, 0.2592908531220896] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6483268444669423, 0.3567437873650939, 0.2857670379330115, 0.2592908531220896, 0.24325527804725694] ***
*** starting iteration: 5; err: [Inf, 0.6483268444669423, 0.3567437873650939, 0.2857670379330115, 0.2592908531220896, 0.24325527804725694] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6483268444669423, 0.3567437873650939, 0.2857670379330115, 0.2592908531220896, 0.24325527804725694, 0.2389598104100698] ***
*** starting iteration: 6; err: [Inf, 0.6483268444669423, 0.3567437873650939, 0.2857670379330115, 0.2592908531220896, 0.24325527804725694, 0.2389598104100698] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6483268444669423, 0.3567437873650939, 0.2857670379330115, 0.2592908531220896, 0.24325527804725694, 0.2389598104100698, 0.2318178503618295] ***
*** starting iteration: 7; err: [Inf, 0.6483268444669423, 0.3567437873650939, 0.2857670379330115, 0.2592908531220896, 0.24325527804725694, 0.2389598104100698, 0.2318178503618295] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6483268444669423, 0.3567437873650939, 0.2857670379330115, 0.2592908531220896, 0.24325527804725694, 0.2389598104100698, 0.2318178503618295, 0.22491691820471968] ***
*** starting iteration: 8; err: [Inf, 0.6483268444669423, 0.3567437873650939, 0.2857670379330115, 0.2592908531220896, 0.24325527804725694, 0.2389598104100698, 0.2318178503618295, 0.22491691820471968] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6483268444669423, 0.3567437873650939, 0.2857670379330115, 0.2592908531220896, 0.24325527804725694, 0.2389598104100698, 0.2318178503618295, 0.22491691820471968, 0.21979907501071533] ***
*** starting iteration: 9; err: [Inf, 0.6483268444669423, 0.3567437873650939, 0.2857670379330115, 0.2592908531220896, 0.24325527804725694, 0.2389598104100698, 0.2318178503618295, 0.22491691820471968, 0.21979907501071533] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6483268444669423, 0.3567437873650939, 0.2857670379330115, 0.2592908531220896, 0.24325527804725694, 0.2389598104100698, 0.2318178503618295, 0.22491691820471968, 0.21979907501071533, 0.21729166851520698] ***
*** starting iteration: 10; err: [Inf, 0.6483268444669423, 0.3567437873650939, 0.2857670379330115, 0.2592908531220896, 0.24325527804725694, 0.2389598104100698, 0.2318178503618295, 0.22491691820471968, 0.21979907501071533, 0.21729166851520698] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6483268444669423, 0.3567437873650939, 0.2857670379330115, 0.2592908531220896, 0.24325527804725694, 0.2389598104100698, 0.2318178503618295, 0.22491691820471968, 0.21979907501071533, 0.21729166851520698, 0.2162667380166532] ***
*** finished computation of 7 references, err: [Inf, 0.6483268444669423, 0.3567437873650939, 0.2857670379330115, 0.2592908531220896, 0.24325527804725694, 0.2389598104100698, 0.2318178503618295, 0.22491691820471968, 0.21979907501071533, 0.21729166851520698, 0.2162667380166532] ***
*** center 1: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 10, 22]]
** centroid: 4, normalized-entropy: 0.8960382325345574, Tuple{Int64,Int64}[(2, 10), (3, 22)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 21, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4244000026613621] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4244000026613621, 0.290560793734573] ***
*** starting iteration: 2; err: [Inf, 0.4244000026613621, 0.290560793734573] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4244000026613621, 0.290560793734573, 0.2796160486072827] ***
*** starting iteration: 3; err: [Inf, 0.4244000026613621, 0.290560793734573, 0.2796160486072827] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4244000026613621, 0.290560793734573, 0.2796160486072827, 0.2788425614762594] ***
*** finished computation of 7 references, err: [Inf, 0.4244000026613621, 0.290560793734573, 0.2796160486072827, 0.2788425614762594] ***
*** center 1: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 18, 13]]
** centroid: 2, normalized-entropy: 0.9811522341999134, Tuple{Int64,Int64}[(2, 18), (3, 13)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 4: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 17, 1]]
*** center 6: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 7: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6263000055648348] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6263000055648348, 0.27855492081565214] ***
*** starting iteration: 2; err: [Inf, 0.6263000055648348, 0.27855492081565214] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6263000055648348, 0.27855492081565214, 0.27352123855260724] ***
*** starting iteration: 3; err: [Inf, 0.6263000055648348, 0.27855492081565214, 0.27352123855260724] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6263000055648348, 0.27855492081565214, 0.27352123855260724, 0.27162746202252647] ***
*** starting iteration: 4; err: [Inf, 0.6263000055648348, 0.27855492081565214, 0.27352123855260724, 0.27162746202252647] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6263000055648348, 0.27855492081565214, 0.27352123855260724, 0.27162746202252647, 0.2699371110120828] ***
*** starting iteration: 5; err: [Inf, 0.6263000055648348, 0.27855492081565214, 0.27352123855260724, 0.27162746202252647, 0.2699371110120828] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6263000055648348, 0.27855492081565214, 0.27352123855260724, 0.27162746202252647, 0.2699371110120828, 0.2699371110120828] ***
*** finished computation of 7 references, err: [Inf, 0.6263000055648348, 0.27855492081565214, 0.27352123855260724, 0.27162746202252647, 0.2699371110120828, 0.2699371110120828] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 2, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 17, 1]]
*** center 6: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 15, 7]]
** centroid: 7, normalized-entropy: 0.9023932827949788, Tuple{Int64,Int64}[(2, 15), (3, 7)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.44310000305453173] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44310000305453173, 0.29532265078458514] ***
*** starting iteration: 2; err: [Inf, 0.44310000305453173, 0.29532265078458514] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44310000305453173, 0.29532265078458514, 0.25842373727839674] ***
*** starting iteration: 3; err: [Inf, 0.44310000305453173, 0.29532265078458514, 0.25842373727839674] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44310000305453173, 0.29532265078458514, 0.25842373727839674, 0.23825191967229442] ***
*** starting iteration: 4; err: [Inf, 0.44310000305453173, 0.29532265078458514, 0.25842373727839674, 0.23825191967229442] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44310000305453173, 0.29532265078458514, 0.25842373727839674, 0.23825191967229442, 0.23703664077132827] ***
*** starting iteration: 5; err: [Inf, 0.44310000305453173, 0.29532265078458514, 0.25842373727839674, 0.23825191967229442, 0.23703664077132827] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44310000305453173, 0.29532265078458514, 0.25842373727839674, 0.23825191967229442, 0.23703664077132827, 0.23703664077132827] ***
*** finished computation of 7 references, err: [Inf, 0.44310000305453173, 0.29532265078458514, 0.25842373727839674, 0.23825191967229442, 0.23703664077132827, 0.23703664077132827] ***
*** center 1: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 3: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 15, 9]]
** centroid: 4, normalized-entropy: 0.954434002924965, Tuple{Int64,Int64}[(2, 15), (3, 9)]
*** center 5: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.8014241791601003] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8014241791601003, 0.5585981512916307] ***
*** starting iteration: 2; err: [Inf, 0.8014241791601003, 0.5585981512916307] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8014241791601003, 0.5585981512916307, 0.5277098508269201] ***
*** starting iteration: 3; err: [Inf, 0.8014241791601003, 0.5585981512916307, 0.5277098508269201] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8014241791601003, 0.5585981512916307, 0.5277098508269201, 0.5273020271304931] ***
*** finished computation of 3 references, err: [Inf, 0.8014241791601003, 0.5585981512916307, 0.5277098508269201, 0.5273020271304931] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 33, 31]]
** centroid: 1, normalized-entropy: 0.9992954443621548, Tuple{Int64,Int64}[(2, 33), (3, 31)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [13, 2, 0]]
** centroid: 2, normalized-entropy: 0.5665095065529052, Tuple{Int64,Int64}[(1, 13), (2, 2)]
*** center 3: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0542016095827453] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0542016095827453, 0.40030317506573015] ***
*** starting iteration: 2; err: [Inf, 1.0542016095827453, 0.40030317506573015] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0542016095827453, 0.40030317506573015, 0.3800058447283415] ***
*** starting iteration: 3; err: [Inf, 1.0542016095827453, 0.40030317506573015, 0.3800058447283415] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0542016095827453, 0.40030317506573015, 0.3800058447283415, 0.379760707440594] ***
*** finished computation of 3 references, err: [Inf, 1.0542016095827453, 0.40030317506573015, 0.3800058447283415, 0.379760707440594] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 1, 27]]
** centroid: 1, normalized-entropy: 0.2222848306856879, Tuple{Int64,Int64}[(2, 1), (3, 27)]
*** center 2: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 33, 8]]
** centroid: 3, normalized-entropy: 0.7120640548905481, Tuple{Int64,Int64}[(2, 33), (3, 8)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2192511172105214] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2192511172105214, 0.5417094128782551] ***
*** starting iteration: 2; err: [Inf, 1.2192511172105214, 0.5417094128782551] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2192511172105214, 0.5417094128782551, 0.3721646506865429] ***
*** starting iteration: 3; err: [Inf, 1.2192511172105214, 0.5417094128782551, 0.3721646506865429] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2192511172105214, 0.5417094128782551, 0.3721646506865429, 0.37061545851220473] ***
*** finished computation of 3 references, err: [Inf, 1.2192511172105214, 0.5417094128782551, 0.3721646506865429, 0.37061545851220473] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 1, 25]]
** centroid: 1, normalized-entropy: 0.23519338181924157, Tuple{Int64,Int64}[(2, 1), (3, 25)]
*** center 2: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 30, 9]]
** centroid: 3, normalized-entropy: 0.7793498372920851, Tuple{Int64,Int64}[(2, 30), (3, 9)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5394323182696128] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5394323182696128, 0.2754146848860405] ***
*** starting iteration: 2; err: [Inf, 0.5394323182696128, 0.2754146848860405] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5394323182696128, 0.2754146848860405, 0.23161608102335618] ***
*** starting iteration: 3; err: [Inf, 0.5394323182696128, 0.2754146848860405, 0.23161608102335618] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5394323182696128, 0.2754146848860405, 0.23161608102335618, 0.20983532963674886] ***
*** starting iteration: 4; err: [Inf, 0.5394323182696128, 0.2754146848860405, 0.23161608102335618, 0.20983532963674886] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5394323182696128, 0.2754146848860405, 0.23161608102335618, 0.20983532963674886, 0.18772654837947672] ***
*** starting iteration: 5; err: [Inf, 0.5394323182696128, 0.2754146848860405, 0.23161608102335618, 0.20983532963674886, 0.18772654837947672] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5394323182696128, 0.2754146848860405, 0.23161608102335618, 0.20983532963674886, 0.18772654837947672, 0.1748554268166162] ***
*** starting iteration: 6; err: [Inf, 0.5394323182696128, 0.2754146848860405, 0.23161608102335618, 0.20983532963674886, 0.18772654837947672, 0.1748554268166162] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5394323182696128, 0.2754146848860405, 0.23161608102335618, 0.20983532963674886, 0.18772654837947672, 0.1748554268166162, 0.17287024734620224] ***
*** starting iteration: 7; err: [Inf, 0.5394323182696128, 0.2754146848860405, 0.23161608102335618, 0.20983532963674886, 0.18772654837947672, 0.1748554268166162, 0.17287024734620224] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5394323182696128, 0.2754146848860405, 0.23161608102335618, 0.20983532963674886, 0.18772654837947672, 0.1748554268166162, 0.17287024734620224, 0.17238240344812542] ***
*** finished computation of 7 references, err: [Inf, 0.5394323182696128, 0.2754146848860405, 0.23161608102335618, 0.20983532963674886, 0.18772654837947672, 0.1748554268166162, 0.17287024734620224, 0.17238240344812542] ***
*** center 1: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 3: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 17, 1]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 12]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 18, 13]]
** centroid: 6, normalized-entropy: 0.9811522341999134, Tuple{Int64,Int64}[(2, 18), (3, 13)]
*** center 7: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3870057185934519] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3870057185934519, 0.20523428341804148] ***
*** starting iteration: 2; err: [Inf, 0.3870057185934519, 0.20523428341804148] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3870057185934519, 0.20523428341804148, 0.1931867784159642] ***
*** starting iteration: 3; err: [Inf, 0.3870057185934519, 0.20523428341804148, 0.1931867784159642] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3870057185934519, 0.20523428341804148, 0.1931867784159642, 0.18795436478273142] ***
*** starting iteration: 4; err: [Inf, 0.3870057185934519, 0.20523428341804148, 0.1931867784159642, 0.18795436478273142] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3870057185934519, 0.20523428341804148, 0.1931867784159642, 0.18795436478273142, 0.1835512535322532] ***
*** starting iteration: 5; err: [Inf, 0.3870057185934519, 0.20523428341804148, 0.1931867784159642, 0.18795436478273142, 0.1835512535322532] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3870057185934519, 0.20523428341804148, 0.1931867784159642, 0.18795436478273142, 0.1835512535322532, 0.18285379878726857] ***
*** finished computation of 7 references, err: [Inf, 0.3870057185934519, 0.20523428341804148, 0.1931867784159642, 0.18795436478273142, 0.1835512535322532, 0.18285379878726857] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 10, 1]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 14, 1]]
*** center 3: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 9, 2]]
** centroid: 5, normalized-entropy: 0.6840384356390419, Tuple{Int64,Int64}[(2, 9), (3, 2)]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 1, 22]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 2.9410073948276856] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.9410073948276856, 0.7116566015850421] ***
*** starting iteration: 2; err: [Inf, 2.9410073948276856, 0.7116566015850421] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.9410073948276856, 0.7116566015850421, 0.31393145649648974] ***
*** starting iteration: 3; err: [Inf, 2.9410073948276856, 0.7116566015850421, 0.31393145649648974] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.9410073948276856, 0.7116566015850421, 0.31393145649648974, 0.2310612264617814] ***
*** starting iteration: 4; err: [Inf, 2.9410073948276856, 0.7116566015850421, 0.31393145649648974, 0.2310612264617814] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.9410073948276856, 0.7116566015850421, 0.31393145649648974, 0.2310612264617814, 0.19393650654656203] ***
*** starting iteration: 5; err: [Inf, 2.9410073948276856, 0.7116566015850421, 0.31393145649648974, 0.2310612264617814, 0.19393650654656203] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.9410073948276856, 0.7116566015850421, 0.31393145649648974, 0.2310612264617814, 0.19393650654656203, 0.19051917662650006] ***
*** starting iteration: 6; err: [Inf, 2.9410073948276856, 0.7116566015850421, 0.31393145649648974, 0.2310612264617814, 0.19393650654656203, 0.19051917662650006] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.9410073948276856, 0.7116566015850421, 0.31393145649648974, 0.2310612264617814, 0.19393650654656203, 0.19051917662650006, 0.19051917662650006] ***
*** finished computation of 7 references, err: [Inf, 2.9410073948276856, 0.7116566015850421, 0.31393145649648974, 0.2310612264617814, 0.19393650654656203, 0.19051917662650006, 0.19051917662650006] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 4, 9]]
** centroid: 6, normalized-entropy: 0.8904916402194913, Tuple{Int64,Int64}[(2, 4), (3, 9)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4192862867747037] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4192862867747037, 0.2333731714871332] ***
*** starting iteration: 2; err: [Inf, 0.4192862867747037, 0.2333731714871332] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4192862867747037, 0.2333731714871332, 0.21456757279157343] ***
*** starting iteration: 3; err: [Inf, 0.4192862867747037, 0.2333731714871332, 0.21456757279157343] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4192862867747037, 0.2333731714871332, 0.21456757279157343, 0.19981673018263382] ***
*** finished computation of 7 references, err: [Inf, 0.4192862867747037, 0.2333731714871332, 0.21456757279157343, 0.19981673018263382] ***
*** center 1: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 20, 3]]
** centroid: 3, normalized-entropy: 0.5586293734521991, Tuple{Int64,Int64}[(2, 20), (3, 3)]
*** center 4: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 15, 5]]
** centroid: 6, normalized-entropy: 0.8112781244591328, Tuple{Int64,Int64}[(2, 15), (3, 5)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4381680009119887] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4381680009119887, 0.20254425966143866] ***
*** starting iteration: 2; err: [Inf, 0.4381680009119887, 0.20254425966143866] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4381680009119887, 0.20254425966143866, 0.18030707365217372] ***
*** starting iteration: 3; err: [Inf, 0.4381680009119887, 0.20254425966143866, 0.18030707365217372] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4381680009119887, 0.20254425966143866, 0.18030707365217372, 0.17281678046662285] ***
*** finished computation of 7 references, err: [Inf, 0.4381680009119887, 0.20254425966143866, 0.18030707365217372, 0.17281678046662285] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 1, 8]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 9, 1]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2859656293315841] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2859656293315841, 0.20277210177387758] ***
*** starting iteration: 2; err: [Inf, 0.2859656293315841, 0.20277210177387758] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2859656293315841, 0.20277210177387758, 0.19462210342466213] ***
*** starting iteration: 3; err: [Inf, 0.2859656293315841, 0.20277210177387758, 0.19462210342466213] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2859656293315841, 0.20277210177387758, 0.19462210342466213, 0.19062936036384623] ***
*** finished computation of 7 references, err: [Inf, 0.2859656293315841, 0.20277210177387758, 0.19462210342466213, 0.19062936036384623] ***
*** center 1: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 9, 5]]
** centroid: 4, normalized-entropy: 0.940285958670631, Tuple{Int64,Int64}[(2, 9), (3, 5)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 2, 4]]
** centroid: 5, normalized-entropy: 0.9182958340544894, Tuple{Int64,Int64}[(2, 2), (3, 4)]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.9077000092734226] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.9077000092734226, 0.532129558755172] ***
*** finished computation of 3 references, err: [Inf, 1.9077000092734226, 0.532129558755172] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 33, 13]]
** centroid: 1, normalized-entropy: 0.8589810370425965, Tuple{Int64,Int64}[(2, 33), (3, 13)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [34, 2, 0]]
** centroid: 3, normalized-entropy: 0.3095434291503252, Tuple{Int64,Int64}[(1, 34), (2, 2)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.719499990299096] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.719499990299096, 0.8790592442641256] ***
*** finished computation of 3 references, err: [Inf, 2.719499990299096, 0.8790592442641256] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [31, 2, 0]]
** centroid: 1, normalized-entropy: 0.32984607020714635, Tuple{Int64,Int64}[(1, 31), (2, 2)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 32, 10]]
** centroid: 2, normalized-entropy: 0.7918583525674836, Tuple{Int64,Int64}[(2, 32), (3, 10)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 25]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.3626000028377496] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3626000028377496, 0.5855090257914451] ***
*** finished computation of 3 references, err: [Inf, 1.3626000028377496, 0.5855090257914451] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 26, 2]]
** centroid: 1, normalized-entropy: 0.3712323266408756, Tuple{Int64,Int64}[(2, 26), (3, 2)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 5, 32]]
** centroid: 2, normalized-entropy: 0.5713549744279549, Tuple{Int64,Int64}[(2, 5), (3, 32)]
*** center 3: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7456955309961281] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7456955309961281, 0.3661015742487275] ***
*** starting iteration: 2; err: [Inf, 0.7456955309961281, 0.3661015742487275] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7456955309961281, 0.3661015742487275, 0.3538234841295522] ***
*** starting iteration: 3; err: [Inf, 0.7456955309961281, 0.3661015742487275, 0.3538234841295522] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7456955309961281, 0.3661015742487275, 0.3538234841295522, 0.3473302011081094] ***
*** finished computation of 3 references, err: [Inf, 0.7456955309961281, 0.3661015742487275, 0.3538234841295522, 0.3473302011081094] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 2, 20]]
** centroid: 1, normalized-entropy: 0.43949698692151346, Tuple{Int64,Int64}[(2, 2), (3, 20)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 32, 11]]
** centroid: 2, normalized-entropy: 0.8203636429576731, Tuple{Int64,Int64}[(2, 32), (3, 11)]
*** center 3: selecting labels [1] (freq >= 2) [from [34, 1, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 9.039352978050106] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 9.039352978050106, 0.9962966165573401] ***
*** starting iteration: 2; err: [Inf, 9.039352978050106, 0.9962966165573401] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 9.039352978050106, 0.9962966165573401, 0.6962357582200027] ***
*** starting iteration: 3; err: [Inf, 9.039352978050106, 0.9962966165573401, 0.6962357582200027] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 9.039352978050106, 0.9962966165573401, 0.6962357582200027, 0.6952500639711022] ***
*** finished computation of 3 references, err: [Inf, 9.039352978050106, 0.9962966165573401, 0.6962357582200027, 0.6952500639711022] ***
*** center 1: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [11, 1, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 33, 35]]
** centroid: 3, normalized-entropy: 0.9993759069576513, Tuple{Int64,Int64}[(2, 33), (3, 35)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7986985544464649] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7986985544464649, 0.37570043706208955] ***
*** starting iteration: 2; err: [Inf, 0.7986985544464649, 0.37570043706208955] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7986985544464649, 0.37570043706208955, 0.37104433066261927] ***
*** starting iteration: 3; err: [Inf, 0.7986985544464649, 0.37570043706208955, 0.37104433066261927] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7986985544464649, 0.37570043706208955, 0.37104433066261927, 0.37061545851220473] ***
*** finished computation of 3 references, err: [Inf, 0.7986985544464649, 0.37570043706208955, 0.37104433066261927, 0.37061545851220473] ***
*** center 1: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 30, 9]]
** centroid: 2, normalized-entropy: 0.7793498372920851, Tuple{Int64,Int64}[(2, 30), (3, 9)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 1, 25]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3235486435642983] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3235486435642983, 0.1941689627177333] ***
*** starting iteration: 2; err: [Inf, 0.3235486435642983, 0.1941689627177333] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3235486435642983, 0.1941689627177333, 0.18020560996802373] ***
*** starting iteration: 3; err: [Inf, 0.3235486435642983, 0.1941689627177333, 0.18020560996802373] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3235486435642983, 0.1941689627177333, 0.18020560996802373, 0.1753818176978653] ***
*** starting iteration: 4; err: [Inf, 0.3235486435642983, 0.1941689627177333, 0.18020560996802373, 0.1753818176978653] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3235486435642983, 0.1941689627177333, 0.18020560996802373, 0.1753818176978653, 0.17241829853861657] ***
*** starting iteration: 5; err: [Inf, 0.3235486435642983, 0.1941689627177333, 0.18020560996802373, 0.1753818176978653, 0.17241829853861657] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3235486435642983, 0.1941689627177333, 0.18020560996802373, 0.1753818176978653, 0.17241829853861657, 0.17208026228721512] ***
*** finished computation of 7 references, err: [Inf, 0.3235486435642983, 0.1941689627177333, 0.18020560996802373, 0.1753818176978653, 0.17241829853861657, 0.17208026228721512] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 3, 13]]
** centroid: 1, normalized-entropy: 0.6962122601251459, Tuple{Int64,Int64}[(2, 3), (3, 13)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 7, 1]]
*** center 3: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 15, 10]]
** centroid: 6, normalized-entropy: 0.9709505944546688, Tuple{Int64,Int64}[(2, 15), (3, 10)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3405493179470605] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3405493179470605, 0.2154161048048784] ***
*** starting iteration: 2; err: [Inf, 0.3405493179470605, 0.2154161048048784] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3405493179470605, 0.2154161048048784, 0.18102377823795024] ***
*** starting iteration: 3; err: [Inf, 0.3405493179470605, 0.2154161048048784, 0.18102377823795024] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3405493179470605, 0.2154161048048784, 0.18102377823795024, 0.17155883565680458] ***
*** starting iteration: 4; err: [Inf, 0.3405493179470605, 0.2154161048048784, 0.18102377823795024, 0.17155883565680458] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3405493179470605, 0.2154161048048784, 0.18102377823795024, 0.17155883565680458, 0.16642653774983351] ***
*** starting iteration: 5; err: [Inf, 0.3405493179470605, 0.2154161048048784, 0.18102377823795024, 0.17155883565680458, 0.16642653774983351] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3405493179470605, 0.2154161048048784, 0.18102377823795024, 0.17155883565680458, 0.16642653774983351, 0.16642653774983351] ***
*** finished computation of 7 references, err: [Inf, 0.3405493179470605, 0.2154161048048784, 0.18102377823795024, 0.17155883565680458, 0.16642653774983351, 0.16642653774983351] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 19, 1]]
*** center 3: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 15, 6]]
** centroid: 4, normalized-entropy: 0.8631205685666311, Tuple{Int64,Int64}[(2, 15), (3, 6)]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 7: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.307996350724691] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.307996350724691, 0.22335135134673575] ***
*** starting iteration: 2; err: [Inf, 0.307996350724691, 0.22335135134673575] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.307996350724691, 0.22335135134673575, 0.21101069180928397] ***
*** starting iteration: 3; err: [Inf, 0.307996350724691, 0.22335135134673575, 0.21101069180928397] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.307996350724691, 0.22335135134673575, 0.21101069180928397, 0.20710742658649584] ***
*** starting iteration: 4; err: [Inf, 0.307996350724691, 0.22335135134673575, 0.21101069180928397, 0.20710742658649584] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.307996350724691, 0.22335135134673575, 0.21101069180928397, 0.20710742658649584, 0.20295105612514117] ***
*** starting iteration: 5; err: [Inf, 0.307996350724691, 0.22335135134673575, 0.21101069180928397, 0.20710742658649584, 0.20295105612514117] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.307996350724691, 0.22335135134673575, 0.21101069180928397, 0.20710742658649584, 0.20295105612514117, 0.20198822579109593] ***
*** finished computation of 7 references, err: [Inf, 0.307996350724691, 0.22335135134673575, 0.21101069180928397, 0.20710742658649584, 0.20295105612514117, 0.20198822579109593] ***
*** center 1: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 23]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 15, 11]]
** centroid: 6, normalized-entropy: 0.9828586897127057, Tuple{Int64,Int64}[(2, 15), (3, 11)]
*** center 7: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.34564744439801304] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34564744439801304, 0.21616916333191546] ***
*** starting iteration: 2; err: [Inf, 0.34564744439801304, 0.21616916333191546] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34564744439801304, 0.21616916333191546, 0.2041596544664392] ***
*** starting iteration: 3; err: [Inf, 0.34564744439801304, 0.21616916333191546, 0.2041596544664392] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34564744439801304, 0.21616916333191546, 0.2041596544664392, 0.19563972060625778] ***
*** starting iteration: 4; err: [Inf, 0.34564744439801304, 0.21616916333191546, 0.2041596544664392, 0.19563972060625778] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34564744439801304, 0.21616916333191546, 0.2041596544664392, 0.19563972060625778, 0.17972002591745614] ***
*** starting iteration: 5; err: [Inf, 0.34564744439801304, 0.21616916333191546, 0.2041596544664392, 0.19563972060625778, 0.17972002591745614] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34564744439801304, 0.21616916333191546, 0.2041596544664392, 0.19563972060625778, 0.17972002591745614, 0.17900044951478553] ***
*** finished computation of 7 references, err: [Inf, 0.34564744439801304, 0.21616916333191546, 0.2041596544664392, 0.19563972060625778, 0.17972002591745614, 0.17900044951478553] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 1, 7]]
** centroid: 1, normalized-entropy: 0.5435644431995963, Tuple{Int64,Int64}[(2, 1), (3, 7)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 17, 1]]
** centroid: 4, normalized-entropy: 0.3095434291503252, Tuple{Int64,Int64}[(2, 17), (3, 1)]
*** center 5: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 7, 6]]
** centroid: 7, normalized-entropy: 0.9957274520849256, Tuple{Int64,Int64}[(2, 7), (3, 6)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.426628530567304] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.426628530567304, 0.3002321005024858] ***
*** starting iteration: 2; err: [Inf, 0.426628530567304, 0.3002321005024858] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.426628530567304, 0.3002321005024858, 0.21324709143933124] ***
*** starting iteration: 3; err: [Inf, 0.426628530567304, 0.3002321005024858, 0.21324709143933124] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.426628530567304, 0.3002321005024858, 0.21324709143933124, 0.19059273504974278] ***
*** starting iteration: 4; err: [Inf, 0.426628530567304, 0.3002321005024858, 0.21324709143933124, 0.19059273504974278] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.426628530567304, 0.3002321005024858, 0.21324709143933124, 0.19059273504974278, 0.17394453190814585] ***
*** starting iteration: 5; err: [Inf, 0.426628530567304, 0.3002321005024858, 0.21324709143933124, 0.19059273504974278, 0.17394453190814585] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.426628530567304, 0.3002321005024858, 0.21324709143933124, 0.19059273504974278, 0.17394453190814585, 0.1637284796701482] ***
*** starting iteration: 6; err: [Inf, 0.426628530567304, 0.3002321005024858, 0.21324709143933124, 0.19059273504974278, 0.17394453190814585, 0.1637284796701482] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.426628530567304, 0.3002321005024858, 0.21324709143933124, 0.19059273504974278, 0.17394453190814585, 0.1637284796701482, 0.1574040992399586] ***
*** starting iteration: 7; err: [Inf, 0.426628530567304, 0.3002321005024858, 0.21324709143933124, 0.19059273504974278, 0.17394453190814585, 0.1637284796701482, 0.1574040992399586] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.426628530567304, 0.3002321005024858, 0.21324709143933124, 0.19059273504974278, 0.17394453190814585, 0.1637284796701482, 0.1574040992399586, 0.15433561469303694] ***
*** starting iteration: 8; err: [Inf, 0.426628530567304, 0.3002321005024858, 0.21324709143933124, 0.19059273504974278, 0.17394453190814585, 0.1637284796701482, 0.1574040992399586, 0.15433561469303694] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.426628530567304, 0.3002321005024858, 0.21324709143933124, 0.19059273504974278, 0.17394453190814585, 0.1637284796701482, 0.1574040992399586, 0.15433561469303694, 0.15433561469303694] ***
*** finished computation of 7 references, err: [Inf, 0.426628530567304, 0.3002321005024858, 0.21324709143933124, 0.19059273504974278, 0.17394453190814585, 0.1637284796701482, 0.1574040992399586, 0.15433561469303694, 0.15433561469303694] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 9, 1]]
** centroid: 1, normalized-entropy: 0.46899559358928133, Tuple{Int64,Int64}[(2, 9), (3, 1)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 11, 2]]
** centroid: 2, normalized-entropy: 0.6193821946787638, Tuple{Int64,Int64}[(2, 11), (3, 2)]
*** center 3: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 1, 23]]
** centroid: 7, normalized-entropy: 0.24988229283318547, Tuple{Int64,Int64}[(2, 1), (3, 23)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 2.7575753071365043] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.7575753071365043, 0.5129428976316589] ***
*** starting iteration: 2; err: [Inf, 2.7575753071365043, 0.5129428976316589] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.7575753071365043, 0.5129428976316589, 0.2508139700719481] ***
*** starting iteration: 3; err: [Inf, 2.7575753071365043, 0.5129428976316589, 0.2508139700719481] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.7575753071365043, 0.5129428976316589, 0.2508139700719481, 0.20102587304519975] ***
*** starting iteration: 4; err: [Inf, 2.7575753071365043, 0.5129428976316589, 0.2508139700719481, 0.20102587304519975] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.7575753071365043, 0.5129428976316589, 0.2508139700719481, 0.20102587304519975, 0.1950877973378125] ***
*** starting iteration: 5; err: [Inf, 2.7575753071365043, 0.5129428976316589, 0.2508139700719481, 0.20102587304519975, 0.1950877973378125] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.7575753071365043, 0.5129428976316589, 0.2508139700719481, 0.20102587304519975, 0.1950877973378125, 0.1950877973378125] ***
*** finished computation of 7 references, err: [Inf, 2.7575753071365043, 0.5129428976316589, 0.2508139700719481, 0.20102587304519975, 0.1950877973378125, 0.1950877973378125] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 6, 6]]
** centroid: 1, normalized-entropy: 1.0, Tuple{Int64,Int64}[(2, 6), (3, 6)]
*** center 2: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 8, 3]]
** centroid: 5, normalized-entropy: 0.8453509366224364, Tuple{Int64,Int64}[(2, 8), (3, 3)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 1, 10]]
** centroid: 6, normalized-entropy: 0.43949698692151346, Tuple{Int64,Int64}[(2, 1), (3, 10)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4733873737628892] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4733873737628892, 0.29051209326497923] ***
*** finished computation of 7 references, err: [Inf, 0.4733873737628892, 0.29051209326497923] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 3, 16]]
** centroid: 1, normalized-entropy: 0.6292492238560344, Tuple{Int64,Int64}[(2, 3), (3, 16)]
*** center 2: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 20, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 3, 7]]
** centroid: 4, normalized-entropy: 0.8812908992306927, Tuple{Int64,Int64}[(2, 3), (3, 7)]
*** center 5: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 7, 8]]
** centroid: 6, normalized-entropy: 0.9967916319816367, Tuple{Int64,Int64}[(2, 7), (3, 8)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 2, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5650390408166588] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5650390408166588, 0.24599663321776924] ***
*** finished computation of 7 references, err: [Inf, 0.5650390408166588, 0.24599663321776924] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 10, 1]]
** centroid: 1, normalized-entropy: 0.43949698692151346, Tuple{Int64,Int64}[(2, 10), (3, 1)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 1, 15]]
** centroid: 4, normalized-entropy: 0.3372900666170139, Tuple{Int64,Int64}[(2, 1), (3, 15)]
*** center 5: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 1, 6]]
** centroid: 6, normalized-entropy: 0.5916727785823274, Tuple{Int64,Int64}[(2, 1), (3, 6)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.5085268546811201] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.5085268546811201, 0.19901493459343617] ***
*** finished computation of 7 references, err: [Inf, 1.5085268546811201, 0.19901493459343617] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 3, 4]]
** centroid: 1, normalized-entropy: 0.9852281360342514, Tuple{Int64,Int64}[(2, 3), (3, 4)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 10, 7]]
** centroid: 3, normalized-entropy: 0.9774178175281716, Tuple{Int64,Int64}[(2, 10), (3, 7)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 7: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.9018000043882385] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9018000043882385, 0.5315057750779153] ***
*** starting iteration: 2; err: [Inf, 0.9018000043882385, 0.5315057750779153] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9018000043882385, 0.5315057750779153, 0.5138747971364677] ***
*** starting iteration: 3; err: [Inf, 0.9018000043882385, 0.5315057750779153, 0.5138747971364677] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9018000043882385, 0.5315057750779153, 0.5138747971364677, 0.5100421538943487] ***
*** finished computation of 3 references, err: [Inf, 0.9018000043882385, 0.5315057750779153, 0.5138747971364677, 0.5100421538943487] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 13, 30]]
** centroid: 1, normalized-entropy: 0.8841151220488478, Tuple{Int64,Int64}[(2, 13), (3, 30)]
*** center 2: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 22, 1]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.4089000034383117] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4089000034383117, 0.5807151279277911] ***
*** starting iteration: 2; err: [Inf, 1.4089000034383117, 0.5807151279277911] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4089000034383117, 0.5807151279277911, 0.567832402901232] ***
*** starting iteration: 3; err: [Inf, 1.4089000034383117, 0.5807151279277911, 0.567832402901232] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4089000034383117, 0.5807151279277911, 0.567832402901232, 0.5546917696834833] ***
*** finished computation of 3 references, err: [Inf, 1.4089000034383117, 0.5807151279277911, 0.567832402901232, 0.5546917696834833] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 5, 33]]
** centroid: 1, normalized-entropy: 0.5617526078313283, Tuple{Int64,Int64}[(2, 5), (3, 33)]
*** center 2: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 29, 2]]
** centroid: 3, normalized-entropy: 0.3451173149449528, Tuple{Int64,Int64}[(2, 29), (3, 2)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.261300000445719] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.261300000445719, 0.6774616547805492] ***
*** starting iteration: 2; err: [Inf, 1.261300000445719, 0.6774616547805492] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.261300000445719, 0.6774616547805492, 0.6040832582056335] ***
*** starting iteration: 3; err: [Inf, 1.261300000445719, 0.6774616547805492, 0.6040832582056335] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.261300000445719, 0.6774616547805492, 0.6040832582056335, 0.5489837674601998] ***
*** finished computation of 3 references, err: [Inf, 1.261300000445719, 0.6774616547805492, 0.6040832582056335, 0.5489837674601998] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 30, 9]]
** centroid: 1, normalized-entropy: 0.7793498372920851, Tuple{Int64,Int64}[(2, 30), (3, 9)]
*** center 2: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 1, 25]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8133423345151995] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8133423345151995, 0.3679174802017276] ***
*** finished computation of 3 references, err: [Inf, 0.8133423345151995, 0.3679174802017276] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 34, 14]]
** centroid: 1, normalized-entropy: 0.8708644692353648, Tuple{Int64,Int64}[(2, 34), (3, 14)]
*** center 2: selecting labels [1] (freq >= 2) [from [34, 1, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.866684136791739] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.866684136791739, 0.4132537082493725] ***
*** finished computation of 3 references, err: [Inf, 0.866684136791739, 0.4132537082493725] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 11, 34]]
** centroid: 1, normalized-entropy: 0.80235344282919, Tuple{Int64,Int64}[(2, 11), (3, 34)]
*** center 2: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 23, 1]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6174653005683561] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6174653005683561, 0.41384872699759534] ***
*** finished computation of 3 references, err: [Inf, 0.6174653005683561, 0.41384872699759534] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 10, 34]]
** centroid: 1, normalized-entropy: 0.7732266742876346, Tuple{Int64,Int64}[(2, 10), (3, 34)]
*** center 2: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 21, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.144726822719758] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.144726822719758, 0.3517269672684935] ***
*** starting iteration: 2; err: [Inf, 1.144726822719758, 0.3517269672684935] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.144726822719758, 0.3517269672684935, 0.34133108603483] ***
*** starting iteration: 3; err: [Inf, 1.144726822719758, 0.3517269672684935, 0.34133108603483] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.144726822719758, 0.3517269672684935, 0.34133108603483, 0.3389296411854329] ***
*** finished computation of 3 references, err: [Inf, 1.144726822719758, 0.3517269672684935, 0.34133108603483, 0.3389296411854329] ***
*** center 1: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 4, 21]]
** centroid: 2, normalized-entropy: 0.634309554640566, Tuple{Int64,Int64}[(2, 4), (3, 21)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 31, 10]]
** centroid: 3, normalized-entropy: 0.8014698931335286, Tuple{Int64,Int64}[(2, 31), (3, 10)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6776100750883254] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6776100750883254, 0.45044548780284205] ***
*** starting iteration: 2; err: [Inf, 0.6776100750883254, 0.45044548780284205] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6776100750883254, 0.45044548780284205, 0.41840986080332015] ***
*** starting iteration: 3; err: [Inf, 0.6776100750883254, 0.45044548780284205, 0.41840986080332015] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6776100750883254, 0.45044548780284205, 0.41840986080332015, 0.38526018994240585] ***
*** finished computation of 3 references, err: [Inf, 0.6776100750883254, 0.45044548780284205, 0.41840986080332015, 0.38526018994240585] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 34, 9]]
** centroid: 1, normalized-entropy: 0.7401470427139037, Tuple{Int64,Int64}[(2, 34), (3, 9)]
*** center 2: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 26]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.3848655047932328] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3848655047932328, 0.585365565983455] ***
*** starting iteration: 2; err: [Inf, 1.3848655047932328, 0.585365565983455] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3848655047932328, 0.585365565983455, 0.4680695211814199] ***
*** starting iteration: 3; err: [Inf, 1.3848655047932328, 0.585365565983455, 0.4680695211814199] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3848655047932328, 0.585365565983455, 0.4680695211814199, 0.41040117602972437] ***
*** finished computation of 3 references, err: [Inf, 1.3848655047932328, 0.585365565983455, 0.4680695211814199, 0.41040117602972437] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [35, 1, 0]]
** centroid: 1, normalized-entropy: 0.18312206830137262, Tuple{Int64,Int64}[(1, 35), (2, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 23]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 30, 11]]
** centroid: 3, normalized-entropy: 0.8390040613676978, Tuple{Int64,Int64}[(2, 30), (3, 11)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.717480809614521] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.717480809614521, 0.34513923086449677] ***
*** finished computation of 3 references, err: [Inf, 0.717480809614521, 0.34513923086449677] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 6, 29]]
** centroid: 1, normalized-entropy: 0.6609623351442084, Tuple{Int64,Int64}[(2, 6), (3, 29)]
*** center 2: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 29, 2]]
** centroid: 3, normalized-entropy: 0.3451173149449528, Tuple{Int64,Int64}[(2, 29), (3, 2)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.465815515599739] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.465815515599739, 0.3950566832400715] ***
*** finished computation of 3 references, err: [Inf, 1.465815515599739, 0.3950566832400715] ***
*** center 1: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 25]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 34, 10]]
** centroid: 3, normalized-entropy: 0.7732266742876346, Tuple{Int64,Int64}[(2, 34), (3, 10)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6632872939859804] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6632872939859804, 0.41008638434756295] ***
*** finished computation of 3 references, err: [Inf, 0.6632872939859804, 0.41008638434756295] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 10, 34]]
** centroid: 1, normalized-entropy: 0.7732266742876346, Tuple{Int64,Int64}[(2, 10), (3, 34)]
*** center 2: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 21, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.2851902774459631] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2851902774459631, 0.2060319049709486] ***
*** finished computation of 7 references, err: [Inf, 0.2851902774459631, 0.2060319049709486] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 6, 13]]
** centroid: 1, normalized-entropy: 0.8997437586982626, Tuple{Int64,Int64}[(2, 6), (3, 13)]
*** center 2: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 3, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 4, 1]]
** centroid: 5, normalized-entropy: 0.7219280948873623, Tuple{Int64,Int64}[(2, 4), (3, 1)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 4, 10]]
** centroid: 7, normalized-entropy: 0.8631205685666311, Tuple{Int64,Int64}[(2, 4), (3, 10)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.35907078795823383] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.35907078795823383, 0.20096649165619548] ***
*** finished computation of 7 references, err: [Inf, 0.35907078795823383, 0.20096649165619548] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 2, 24]]
** centroid: 1, normalized-entropy: 0.3912435636292556, Tuple{Int64,Int64}[(2, 2), (3, 24)]
*** center 2: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 16, 1]]
** centroid: 5, normalized-entropy: 0.32275695889739825, Tuple{Int64,Int64}[(2, 16), (3, 1)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 9, 1]]
** centroid: 6, normalized-entropy: 0.46899559358928133, Tuple{Int64,Int64}[(2, 9), (3, 1)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3458400737252336] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3458400737252336, 0.20521705093995876] ***
*** finished computation of 7 references, err: [Inf, 0.3458400737252336, 0.20521705093995876] ***
*** center 1: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 16, 4]]
** centroid: 3, normalized-entropy: 0.7219280948873623, Tuple{Int64,Int64}[(2, 16), (3, 4)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 6, 7]]
** centroid: 5, normalized-entropy: 0.9957274520849256, Tuple{Int64,Int64}[(2, 6), (3, 7)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5535000041437982] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5535000041437982, 0.22197942809623183] ***
*** starting iteration: 2; err: [Inf, 0.5535000041437982, 0.22197942809623183] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5535000041437982, 0.22197942809623183, 0.21500483237471826] ***
*** starting iteration: 3; err: [Inf, 0.5535000041437982, 0.22197942809623183, 0.21500483237471826] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5535000041437982, 0.22197942809623183, 0.21500483237471826, 0.21407272656274756] ***
*** finished computation of 7 references, err: [Inf, 0.5535000041437982, 0.22197942809623183, 0.21500483237471826, 0.21407272656274756] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 17, 1]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 3: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 12]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 14, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 4, 12]]
** centroid: 7, normalized-entropy: 0.8112781244591328, Tuple{Int64,Int64}[(2, 4), (3, 12)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.632499999903733] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.632499999903733, 0.23776156971316875] ***
*** starting iteration: 2; err: [Inf, 0.632499999903733, 0.23776156971316875] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.632499999903733, 0.23776156971316875, 0.2299488040049126] ***
*** starting iteration: 3; err: [Inf, 0.632499999903733, 0.23776156971316875, 0.2299488040049126] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.632499999903733, 0.23776156971316875, 0.2299488040049126, 0.22945904973281742] ***
*** finished computation of 7 references, err: [Inf, 0.632499999903733, 0.23776156971316875, 0.2299488040049126, 0.22945904973281742] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 15, 6]]
** centroid: 1, normalized-entropy: 0.8631205685666311, Tuple{Int64,Int64}[(2, 15), (3, 6)]
*** center 2: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 20]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 9, 1]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5479000052317988] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5479000052317988, 0.24879058327394885] ***
*** starting iteration: 2; err: [Inf, 0.5479000052317988, 0.24879058327394885] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5479000052317988, 0.24879058327394885, 0.2359221098020524] ***
*** starting iteration: 3; err: [Inf, 0.5479000052317988, 0.24879058327394885, 0.2359221098020524] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5479000052317988, 0.24879058327394885, 0.2359221098020524, 0.2296391678171993] ***
*** starting iteration: 4; err: [Inf, 0.5479000052317988, 0.24879058327394885, 0.2359221098020524, 0.2296391678171993] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5479000052317988, 0.24879058327394885, 0.2359221098020524, 0.2296391678171993, 0.22914832431161528] ***
*** finished computation of 7 references, err: [Inf, 0.5479000052317988, 0.24879058327394885, 0.2359221098020524, 0.2296391678171993, 0.22914832431161528] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 15, 9]]
** centroid: 1, normalized-entropy: 0.954434002924965, Tuple{Int64,Int64}[(2, 15), (3, 9)]
*** center 2: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 4: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 16)
[0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9533333333333333, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9199999999999999, 0.9133333333333332, 0.9133333333333332, 0.8999999999999999, 0.8999999999999999, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.9, 2) => 0.9733333333333333
finished with 17
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.6315000004395728] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6315000004395728, 0.25635880479834744] ***
*** finished computation of 7 references, err: [Inf, 0.6315000004395728, 0.25635880479834744] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 3, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 3: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 2, 18]]
** centroid: 4, normalized-entropy: 0.46899559358928133, Tuple{Int64,Int64}[(2, 2), (3, 18)]
*** center 5: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 10, 3]]
** centroid: 6, normalized-entropy: 0.7793498372920851, Tuple{Int64,Int64}[(2, 10), (3, 3)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 20, 1]]
** centroid: 7, normalized-entropy: 0.2761954276479391, Tuple{Int64,Int64}[(2, 20), (3, 1)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5995000073029465] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5995000073029465, 0.25593152639496547] ***
*** finished computation of 7 references, err: [Inf, 0.5995000073029465, 0.25593152639496547] ***
*** center 1: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 2, 1]]
** centroid: 3, normalized-entropy: 0.9182958340544894, Tuple{Int64,Int64}[(2, 2), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 14, 3]]
** centroid: 4, normalized-entropy: 0.6722948170756378, Tuple{Int64,Int64}[(2, 14), (3, 3)]
*** center 5: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 23]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5559000056260218] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5559000056260218, 0.25065212616614607] ***
*** finished computation of 7 references, err: [Inf, 0.5559000056260218, 0.25065212616614607] ***
*** center 1: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 15, 4]]
** centroid: 3, normalized-entropy: 0.7424875695421234, Tuple{Int64,Int64}[(2, 15), (3, 4)]
*** center 4: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 6, 9]]
** centroid: 7, normalized-entropy: 0.9709505944546688, Tuple{Int64,Int64}[(2, 6), (3, 9)]
finished with 9 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 17)
[0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.96, 0.9533333333333333, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9199999999999999, 0.9133333333333332, 0.9133333333333332, 0.8999999999999999, 0.8999999999999999, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.9, 2) => 0.9733333333333333
finished with 17
iteration 3 finished
generating 4 configurations using top 4 configurations, starting with 17)
[0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.96, 0.9533333333333333, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9199999999999999, 0.9133333333333332, 0.9133333333333332, 0.8999999999999999, 0.8999999999999999, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.9, 2) => 0.9733333333333333
finished with 18
iteration 4 finished
*** starting iteration: 1; err: [Inf, 0.2851902774459631] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2851902774459631, 0.2060319049709486] ***
*** starting iteration: 2; err: [Inf, 0.2851902774459631, 0.2060319049709486] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2851902774459631, 0.2060319049709486, 0.195562506711281] ***
*** starting iteration: 3; err: [Inf, 0.2851902774459631, 0.2060319049709486, 0.195562506711281] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2851902774459631, 0.2060319049709486, 0.195562506711281, 0.19037014194328997] ***
*** starting iteration: 4; err: [Inf, 0.2851902774459631, 0.2060319049709486, 0.195562506711281, 0.19037014194328997] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2851902774459631, 0.2060319049709486, 0.195562506711281, 0.19037014194328997, 0.18415487033086375] ***
*** starting iteration: 5; err: [Inf, 0.2851902774459631, 0.2060319049709486, 0.195562506711281, 0.19037014194328997, 0.18415487033086375] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2851902774459631, 0.2060319049709486, 0.195562506711281, 0.19037014194328997, 0.18415487033086375, 0.1798788853361469] ***
*** starting iteration: 6; err: [Inf, 0.2851902774459631, 0.2060319049709486, 0.195562506711281, 0.19037014194328997, 0.18415487033086375, 0.1798788853361469] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2851902774459631, 0.2060319049709486, 0.195562506711281, 0.19037014194328997, 0.18415487033086375, 0.1798788853361469, 0.17442033109579003] ***
*** starting iteration: 7; err: [Inf, 0.2851902774459631, 0.2060319049709486, 0.195562506711281, 0.19037014194328997, 0.18415487033086375, 0.1798788853361469, 0.17442033109579003] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2851902774459631, 0.2060319049709486, 0.195562506711281, 0.19037014194328997, 0.18415487033086375, 0.1798788853361469, 0.17442033109579003, 0.17055483909721691] ***
*** starting iteration: 8; err: [Inf, 0.2851902774459631, 0.2060319049709486, 0.195562506711281, 0.19037014194328997, 0.18415487033086375, 0.1798788853361469, 0.17442033109579003, 0.17055483909721691] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2851902774459631, 0.2060319049709486, 0.195562506711281, 0.19037014194328997, 0.18415487033086375, 0.1798788853361469, 0.17442033109579003, 0.17055483909721691, 0.16931876171036334] ***
*** starting iteration: 9; err: [Inf, 0.2851902774459631, 0.2060319049709486, 0.195562506711281, 0.19037014194328997, 0.18415487033086375, 0.1798788853361469, 0.17442033109579003, 0.17055483909721691, 0.16931876171036334] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2851902774459631, 0.2060319049709486, 0.195562506711281, 0.19037014194328997, 0.18415487033086375, 0.1798788853361469, 0.17442033109579003, 0.17055483909721691, 0.16931876171036334, 0.16931876171036334] ***
*** finished computation of 7 references, err: [Inf, 0.2851902774459631, 0.2060319049709486, 0.195562506711281, 0.19037014194328997, 0.18415487033086375, 0.1798788853361469, 0.17442033109579003, 0.17055483909721691, 0.16931876171036334, 0.16931876171036334] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 12]]
*** center 2: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 3, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 15, 1]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 4, 12]]
** centroid: 7, normalized-entropy: 0.8112781244591328, Tuple{Int64,Int64}[(2, 4), (3, 12)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3271807068606685] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3271807068606685, 0.16673798559583164] ***
*** starting iteration: 2; err: [Inf, 0.3271807068606685, 0.16673798559583164] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3271807068606685, 0.16673798559583164, 0.16402232658840332] ***
*** starting iteration: 3; err: [Inf, 0.3271807068606685, 0.16673798559583164, 0.16402232658840332] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3271807068606685, 0.16673798559583164, 0.16402232658840332, 0.16402232658840332] ***
*** finished computation of 7 references, err: [Inf, 0.3271807068606685, 0.16673798559583164, 0.16402232658840332, 0.16402232658840332] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 19, 1]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 3: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 22]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 15, 3]]
** centroid: 5, normalized-entropy: 0.6500224216483541, Tuple{Int64,Int64}[(2, 15), (3, 3)]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 7: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.40072936354969185] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40072936354969185, 0.1753697415301553] ***
*** starting iteration: 2; err: [Inf, 0.40072936354969185, 0.1753697415301553] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40072936354969185, 0.1753697415301553, 0.16386640868742028] ***
*** starting iteration: 3; err: [Inf, 0.40072936354969185, 0.1753697415301553, 0.16386640868742028] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40072936354969185, 0.1753697415301553, 0.16386640868742028, 0.16024349292634013] ***
*** starting iteration: 4; err: [Inf, 0.40072936354969185, 0.1753697415301553, 0.16386640868742028, 0.16024349292634013] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40072936354969185, 0.1753697415301553, 0.16386640868742028, 0.16024349292634013, 0.15922694615874317] ***
*** starting iteration: 5; err: [Inf, 0.40072936354969185, 0.1753697415301553, 0.16386640868742028, 0.16024349292634013, 0.15922694615874317] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40072936354969185, 0.1753697415301553, 0.16386640868742028, 0.16024349292634013, 0.15922694615874317, 0.15922694615874317] ***
*** finished computation of 7 references, err: [Inf, 0.40072936354969185, 0.1753697415301553, 0.16386640868742028, 0.16024349292634013, 0.15922694615874317, 0.15922694615874317] ***
*** center 1: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 13, 2]]
** centroid: 3, normalized-entropy: 0.5665095065529052, Tuple{Int64,Int64}[(2, 13), (3, 2)]
*** center 4: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 7, 8]]
** centroid: 6, normalized-entropy: 0.9967916319816367, Tuple{Int64,Int64}[(2, 7), (3, 8)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 18)
[0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9199999999999999, 0.9133333333333332, 0.9133333333333332, 0.8999999999999999, 0.8999999999999999, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.9, 2) => 0.9733333333333333
finished with 18
iteration 5 finished
generating 4 configurations using top 4 configurations, starting with 18)
[0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9199999999999999, 0.9133333333333332, 0.9133333333333332, 0.8999999999999999, 0.8999999999999999, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.9, 2) => 0.9733333333333333
finished with 20
iteration 6 finished
*** starting iteration: 1; err: [Inf, 0.6210999929671303] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6210999929671303, 0.25462446298087094] ***
*** starting iteration: 2; err: [Inf, 0.6210999929671303, 0.25462446298087094] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6210999929671303, 0.25462446298087094, 0.23710097836665445] ***
*** starting iteration: 3; err: [Inf, 0.6210999929671303, 0.25462446298087094, 0.23710097836665445] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6210999929671303, 0.25462446298087094, 0.23710097836665445, 0.23431510020369706] ***
*** finished computation of 7 references, err: [Inf, 0.6210999929671303, 0.25462446298087094, 0.23710097836665445, 0.23431510020369706] ***
*** center 1: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 11, 2]]
** centroid: 3, normalized-entropy: 0.6193821946787638, Tuple{Int64,Int64}[(2, 11), (3, 2)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 16, 9]]
** centroid: 4, normalized-entropy: 0.9426831892554921, Tuple{Int64,Int64}[(2, 16), (3, 9)]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6194999988796218] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6194999988796218, 0.25608494882576355] ***
*** starting iteration: 2; err: [Inf, 0.6194999988796218, 0.25608494882576355] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6194999988796218, 0.25608494882576355, 0.23919731065006478] ***
*** starting iteration: 3; err: [Inf, 0.6194999988796218, 0.25608494882576355, 0.23919731065006478] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6194999988796218, 0.25608494882576355, 0.23919731065006478, 0.2306589451385983] ***
*** finished computation of 7 references, err: [Inf, 0.6194999988796218, 0.25608494882576355, 0.23919731065006478, 0.2306589451385983] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 20]]
*** center 2: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 9, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 15, 6]]
** centroid: 5, normalized-entropy: 0.8631205685666311, Tuple{Int64,Int64}[(2, 15), (3, 6)]
*** center 6: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 10, 1]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5559000056260218] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5559000056260218, 0.25065212616614607] ***
*** starting iteration: 2; err: [Inf, 0.5559000056260218, 0.25065212616614607] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5559000056260218, 0.25065212616614607, 0.23507384832203487] ***
*** starting iteration: 3; err: [Inf, 0.5559000056260218, 0.25065212616614607, 0.23507384832203487] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5559000056260218, 0.25065212616614607, 0.23507384832203487, 0.2283855072851872] ***
*** finished computation of 7 references, err: [Inf, 0.5559000056260218, 0.25065212616614607, 0.23507384832203487, 0.2283855072851872] ***
*** center 1: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 14, 1]]
*** center 4: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 7, 9]]
** centroid: 7, normalized-entropy: 0.9886994082884974, Tuple{Int64,Int64}[(2, 7), (3, 9)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3368548661809841] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3368548661809841, 0.18250888321613387] ***
*** starting iteration: 2; err: [Inf, 0.3368548661809841, 0.18250888321613387] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3368548661809841, 0.18250888321613387, 0.17136184617051387] ***
*** starting iteration: 3; err: [Inf, 0.3368548661809841, 0.18250888321613387, 0.17136184617051387] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3368548661809841, 0.18250888321613387, 0.17136184617051387, 0.16987800464813488] ***
*** finished computation of 7 references, err: [Inf, 0.3368548661809841, 0.18250888321613387, 0.17136184617051387, 0.16987800464813488] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 14, 1]]
*** center 2: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 3, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 14, 1]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 12]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 4, 11]]
** centroid: 7, normalized-entropy: 0.8366407419411671, Tuple{Int64,Int64}[(2, 4), (3, 11)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3541769792182751] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3541769792182751, 0.20096649165619548] ***
*** starting iteration: 2; err: [Inf, 0.3541769792182751, 0.20096649165619548] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3541769792182751, 0.20096649165619548, 0.19052792653795397] ***
*** starting iteration: 3; err: [Inf, 0.3541769792182751, 0.20096649165619548, 0.19052792653795397] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3541769792182751, 0.20096649165619548, 0.19052792653795397, 0.1882811010700924] ***
*** finished computation of 7 references, err: [Inf, 0.3541769792182751, 0.20096649165619548, 0.19052792653795397, 0.1882811010700924] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 2, 23]]
** centroid: 1, normalized-entropy: 0.4021791902022729, Tuple{Int64,Int64}[(2, 2), (3, 23)]
*** center 2: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 14, 2]]
** centroid: 5, normalized-entropy: 0.5435644431995963, Tuple{Int64,Int64}[(2, 14), (3, 2)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 8, 1]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4392356476434611] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4392356476434611, 0.23391997225586114] ***
*** starting iteration: 2; err: [Inf, 0.4392356476434611, 0.23391997225586114] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4392356476434611, 0.23391997225586114, 0.2129329054204668] ***
*** starting iteration: 3; err: [Inf, 0.4392356476434611, 0.23391997225586114, 0.2129329054204668] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4392356476434611, 0.23391997225586114, 0.2129329054204668, 0.205645996597318] ***
*** finished computation of 7 references, err: [Inf, 0.4392356476434611, 0.23391997225586114, 0.2129329054204668, 0.205645996597318] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 14, 17]]
** centroid: 1, normalized-entropy: 0.9932338197397066, Tuple{Int64,Int64}[(2, 14), (3, 17)]
*** center 2: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 17, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 5: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
*** center 7: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 20)
[0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9199999999999999, 0.9133333333333332, 0.9133333333333332, 0.8999999999999999, 0.8999999999999999, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.9, 2) => 0.9733333333333333
finished with 20
iteration 7 finished
generating 4 configurations using top 4 configurations, starting with 20)
[0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9199999999999999, 0.9133333333333332, 0.9133333333333332, 0.8999999999999999, 0.8999999999999999, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.9, 2) => 0.9733333333333333
finished with 20
iteration 8 finished
generating 4 configurations using top 4 configurations, starting with 20)
[0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9199999999999999, 0.9133333333333332, 0.9133333333333332, 0.8999999999999999, 0.8999999999999999, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.9, 2) => 0.9733333333333333
finished with 20
iteration 9 finished
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.9, 2), 0.9733333333333333)
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}(Array{Float64,1}[[5.142857142857143, 3.4357142857142855, 1.4714285714285715, 0.27142857142857146], [6.377777777777778, 2.916666666666666, 4.677777777777778, 1.4944444444444445], [6.046153846153846, 2.730769230769231, 5.06923076923077, 1.8384615384615384], [6.894117647058824, 3.158823529411764, 5.752941176470588, 2.2], [4.733333333333333, 3.108333333333334, 1.4583333333333337, 0.17499999999999996], [5.555555555555555, 2.6999999999999997, 4.0166666666666675, 1.2777777777777777], [5.414285714285714, 3.857142857142857, 1.5142857142857142, 0.2571428571428572]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 2, 3, 3, 1, 2, 1], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.9, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}(Array{Float64,1}[[6.625000000000002, 3.0125, 5.5375, 2.0812500000000007], [7.612500000000001, 3.125, 6.437500000000001, 2.075], [5.0, 2.15, 3.4, 1.0], [6.1000000000000005, 3.1999999999999997, 5.366666666666667, 2.3666666666666667], [5.611111111111111, 2.6666666666666665, 4.088888888888889, 1.2666666666666666], [4.990322580645161, 3.4838709677419355, 1.4967741935483871, 0.2516129032258065], [6.44, 2.92, 4.6, 1.4266666666666665], [6.028571428571428, 2.742857142857143, 5.085714285714286, 1.7857142857142858]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [3, 3, 2, 3, 2, 1, 2, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.9, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}(Array{Float64,1}[[6.537500000000001, 3.0062500000000005, 5.58125, 2.1125000000000003], [4.723529411764707, 3.1647058823529415, 1.4058823529411766, 0.1882352941176471], [6.220000000000001, 2.926666666666667, 4.6, 1.4466666666666665], [6.011111111111112, 2.7333333333333334, 4.955555555555555, 1.788888888888889], [5.288235294117648, 3.7058823529411766, 1.4588235294117646, 0.3000000000000001], [7.455555555555557, 3.1666666666666665, 6.311111111111111, 2.0555555555555554], [5.481249999999999, 2.5562500000000004, 3.75625, 1.1375]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [3, 1, 2, 3, 1, 3, 2], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.9, 2))]
Test Summary: | Pass  Total
AKNC          |    1      1
[115, 1, 1, 13, 27, 5, 13, 20, 21, 25, 2, 1, 2, 25, 13, 23, 27, 19, 21, 32, 50, 25, 15, 38, 36, 4, 26, 25, 24, 17, 36, 31, 25, 1, 49, 9, 10, 15, 24, 30, 29, 28, 33, 33, 29, 40, 30, 12, 29, 29, 42, 31, 21, 15, 49, 30, 35, 1, 30, 30, 33, 35, 41, 1, 35, 38, 26, 48, 28, 33, 39, 32, 74, 34, 38, 39, 31, 31, 37, 48, 54, 49, 24, 37, 14, 66, 34, 49, 46, 33, 40, 24, 47, 47, 40, 34, 26, 22, 34, 47, 1, 43, 19, 36, 30, 25, 39, 4, 33, 27, 63, 21, 44, 36, 14, 33, 23, 3, 27, 33, 17, 48, 31, 39, 32, 26, 7, 41, 47, 19, 33, 45, 33, 5, 42, 1, 39, 46, 25, 53, 49, 51, 46, 47, 49, 32, 38, 36, 28, 34, 56, 40, 1, 38, 46, 46, 16, 42, 35, 31, 21, 41, 48, 22, 18, 27, 53, 47, 41, 52, 39, 29, 1, 37, 18, 56, 28, 12, 42, 32, 55, 43, 27, 37, 31, 21, 40, 54, 38, 32, 33, 54, 46, 33, 41, 30, 28, 33, 31, 53, 25, 35, 51, 32, 48, 24, 30, 24, 26, 30, 44, 38, 26, 37, 29, 52, 54, 46, 43, 29, 41, 1, 45, 48, 49, 40, 24, 28, 31, 63, 4, 27, 31, 35, 35, 44, 63, 32, 32, 48, 27, 33, 30, 51, 74, 10, 26, 53, 48, 39, 57, 43, 31, 27, 36, 37, 34, 51, 23, 44, 63, 43, 25, 36, 26, 54, 31, 43, 30, 29, 16, 37, 53, 73, 41, 49, 34, 41, 50, 2, 43, 39, 26, 38, 37, 41, 46, 40, 30, 1, 34, 27, 36, 27, 30, 38, 40, 30, 51, 24]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.6170000000000002, speedup = 0.6320708794924486, eval_ratio = 0.041901999999999995)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.4088541666666667,"recall":0.4088541666666667,"f1":null,"seconds":6.857328116893768e-5,"exhaustive_search_seconds":0.00038038939237594604,"evaluations":340.0078125,"distances_sum":1710.6364567586234}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5755208333333331,"recall":0.5755208333333331,"f1":null,"seconds":0.00010106340050697327,"exhaustive_search_seconds":0.00038038939237594604,"evaluations":379.296875,"distances_sum":1602.963033531344}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6892361111111107,"recall":0.6892361111111107,"f1":0.6892361111111107,"seconds":0.0001289118081331253,"exhaustive_search_seconds":0.00038038939237594604,"evaluations":416.953125,"distances_sum":1559.2084179834453}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7664930555555546,"recall":0.7664930555555546,"f1":0.7664930555555546,"seconds":0.00036675669252872467,"exhaustive_search_seconds":0.00038038939237594604,"evaluations":458.5546875,"distances_sum":1537.5793356459553}
KCenters.DeloneInvIndex> reached performance {"precision":0.8133680555555548,"recall":0.8133680555555548,"f1":0.8133680555555548,"seconds":0.00024076923727989197,"exhaustive_search_seconds":0.00038038939237594604,"evaluations":497.9765625,"distances_sum":1527.2005458014455}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.7639999999999999, speedup = 2.0637993749133305, eval_ratio = 0.050012)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
   Testing KCenters tests passed 
