Julia Version 1.4.0-DEV.689
Commit 015cd56127 (2020-01-09 09:30 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

  Resolving package versions...
  Installed TimerOutputs ───────── v0.5.3
  Installed IntelOpenMP_jll ────── v2018.0.3+0
  Installed CodecZlib ──────────── v0.6.0
  Installed FFTW ───────────────── v1.2.0
  Installed BinaryProvider ─────── v0.5.8
  Installed NNlib ──────────────── v0.6.2
  Installed GeometricFlux ──────── v0.2.0
  Installed CuArrays ───────────── v1.5.0
  Installed Missings ───────────── v0.4.3
  Installed AbstractFFTs ───────── v0.5.0
  Installed SpecialFunctions ───── v0.9.0
  Installed TranscodingStreams ─── v0.9.5
  Installed Requires ───────────── v0.5.2
  Installed MacroTools ─────────── v0.5.3
  Installed Juno ───────────────── v0.7.2
  Installed StaticArrays ───────── v0.12.1
  Installed DataStructures ─────── v0.17.7
  Installed OrderedCollections ─── v1.1.0
  Installed CommonSubexpressions ─ v0.2.0
  Installed MKL_jll ────────────── v2019.0.117+0
  Installed ZipFile ────────────── v0.8.3
  Installed IRTools ────────────── v0.3.0
  Installed Media ──────────────── v0.5.0
  Installed StatsBase ──────────── v0.32.0
  Installed CEnum ──────────────── v0.2.0
  Installed ForwardDiff ────────── v0.10.8
  Installed ZygoteRules ────────── v0.2.0
  Installed Flux ───────────────── v0.10.0
  Installed FFTW_jll ───────────── v3.3.9+3
  Installed Adapt ──────────────── v1.0.0
  Installed Zygote ─────────────── v0.4.4
  Installed Reexport ───────────── v0.2.0
  Installed GPUArrays ──────────── v2.0.1
  Installed NaNMath ────────────── v0.3.3
  Installed CUDAapi ────────────── v2.0.0
  Installed SortingAlgorithms ──── v0.3.1
  Installed CUDAdrv ────────────── v4.0.4
  Installed FillArrays ─────────── v0.8.2
  Installed CUDAnative ─────────── v2.6.0
  Installed DiffRules ──────────── v1.0.0
  Installed LLVM ───────────────── v1.3.3
  Installed DiffResults ────────── v1.0.2
  Installed ColorTypes ─────────── v0.8.1
  Installed FixedPointNumbers ──── v0.6.1
  Installed DataAPI ────────────── v1.1.0
  Installed OpenSpecFun_jll ────── v0.5.3+1
  Installed AbstractTrees ──────── v0.2.1
  Installed Colors ─────────────── v0.9.6
Downloading artifacts...
[ Info: Downloading https://github.com/JuliaBinaryWrappers/IntelOpenMP_jll.jl/releases/download/IntelOpenMP-v2018.0.3+0/IntelOpenMP.v2018.0.3.x86_64-linux-gnu.tar.gz to /tmp/jl_O98seV-download.gz...
#=#=#                                                                         ##O#- #                                                                       ##O=#  #                                                                      #=#=-#  #                                                                     ######################################################################## 100.0%
[ Info: Downloading https://github.com/JuliaBinaryWrappers/MKL_jll.jl/releases/download/MKL-v2019.0.117+0/MKL.v2019.0.117.x86_64-linux-gnu.tar.gz to /tmp/jl_6mXH08-download.gz...
#=#=#                                                                         ##O#- #                                                                       ##O=#  #                                                                                                                                                 0.2%#                                                                          2.0%##                                                                         2.8%##                                                                         3.4%##                                                                         3.9%###                                                                        4.4%###                                                                        4.9%###                                                                        5.5%####                                                                       6.1%####                                                                       6.7%#####                                                                      7.3%#####                                                                      8.0%######                                                                     8.7%######                                                                     9.3%#######                                                                   10.0%#######                                                                   10.7%########                                                                  11.4%########                                                                  12.2%#########                                                                 13.0%#########                                                                 13.8%##########                                                                14.6%###########                                                               15.4%###########                                                               16.3%############                                                              17.1%############                                                              18.0%#############                                                             18.9%##############                                                            19.8%##############                                                            20.5%###############                                                           21.2%###############                                                           21.6%###############                                                           21.9%################                                                          22.3%################                                                          22.7%################                                                          23.1%################                                                          23.5%#################                                                         23.9%#################                                                         24.3%#################                                                         24.8%##################                                                        25.3%##################                                                        25.8%##################                                                        26.3%###################                                                       26.8%###################                                                       27.4%####################                                                      28.0%####################                                                      28.6%#####################                                                     29.2%#####################                                                     29.9%#####################                                                     30.5%######################                                                    31.1%######################                                                    31.8%#######################                                                   32.5%#######################                                                   33.2%########################                                                  33.9%########################                                                  34.7%#########################                                                 35.4%##########################                                                36.2%##########################                                                37.1%###########################                                               37.9%###########################                                               38.7%############################                                              39.5%#############################                                             40.4%#############################                                             41.2%##############################                                            42.2%###############################                                           43.1%###############################                                           44.1%################################                                          45.1%#################################                                         46.1%#################################                                         47.1%##################################                                        48.1%###################################                                       49.2%####################################                                      50.2%####################################                                      51.3%#####################################                                     52.4%######################################                                    53.5%#######################################                                   54.5%########################################                                  55.7%########################################                                  56.9%#########################################                                 58.1%##########################################                                59.3%###########################################                               60.5%############################################                              61.4%############################################                              62.1%#############################################                             63.0%##############################################                            64.2%##############################################                            65.3%###############################################                           66.4%################################################                          67.6%#################################################                         68.9%##################################################                        70.1%###################################################                       71.4%####################################################                      72.7%#####################################################                     74.1%######################################################                    75.4%#######################################################                   76.9%########################################################                  78.3%#########################################################                 79.8%##########################################################                81.2%###########################################################               82.6%############################################################              84.1%#############################################################             85.7%##############################################################            87.1%###############################################################           88.7%################################################################          90.2%##################################################################        91.7%###################################################################       93.3%####################################################################      94.8%#####################################################################     96.3%######################################################################    97.8%#######################################################################   99.3%######################################################################## 100.0%
[ Info: Downloading https://github.com/JuliaBinaryWrappers/FFTW_jll.jl/releases/download/FFTW-v3.3.9+3/FFTW.v3.3.9.x86_64-linux-gnu.tar.gz to /tmp/jl_eHeKUo-download.gz...
#=#=#                                                                         ##O#- #                                                                       ##################                                                        26.3%######################################################################## 100.0%
[ Info: Downloading https://github.com/JuliaBinaryWrappers/OpenSpecFun_jll.jl/releases/download/OpenSpecFun-v0.5.3+1/OpenSpecFun.v0.5.3.x86_64-linux-gnu-libgfortran4.tar.gz to /tmp/jl_GvXrgI-download.gz...
#=#=#                                                                         ##O#- #                                                                       ##O=#  #                                                                      #=#=-#  #                                                                     #####################################                                     52.6%######################################################################## 100.0%
   Updating `~/.julia/environments/v1.4/Project.toml`
  [7e08b658] + GeometricFlux v0.2.0
   Updating `~/.julia/environments/v1.4/Manifest.toml`
  [621f4979] + AbstractFFTs v0.5.0
  [1520ce14] + AbstractTrees v0.2.1
  [79e6a3ab] + Adapt v1.0.0
  [b99e7846] + BinaryProvider v0.5.8
  [fa961155] + CEnum v0.2.0
  [3895d2a7] + CUDAapi v2.0.0
  [c5f51814] + CUDAdrv v4.0.4
  [be33ccc6] + CUDAnative v2.6.0
  [944b1d66] + CodecZlib v0.6.0
  [3da002f7] + ColorTypes v0.8.1
  [5ae59095] + Colors v0.9.6
  [bbf7d656] + CommonSubexpressions v0.2.0
  [3a865a2d] + CuArrays v1.5.0
  [9a962f9c] + DataAPI v1.1.0
  [864edb3b] + DataStructures v0.17.7
  [163ba53b] + DiffResults v1.0.2
  [b552c78f] + DiffRules v1.0.0
  [7a1cc6ca] + FFTW v1.2.0
  [f5851436] + FFTW_jll v3.3.9+3
  [1a297f60] + FillArrays v0.8.2
  [53c48c17] + FixedPointNumbers v0.6.1
  [587475ba] + Flux v0.10.0
  [f6369f11] + ForwardDiff v0.10.8
  [0c68f7d7] + GPUArrays v2.0.1
  [7e08b658] + GeometricFlux v0.2.0
  [7869d1d1] + IRTools v0.3.0
  [1d5cc7b8] + IntelOpenMP_jll v2018.0.3+0
  [e5e0dc1b] + Juno v0.7.2
  [929cbde3] + LLVM v1.3.3
  [856f044c] + MKL_jll v2019.0.117+0
  [1914dd2f] + MacroTools v0.5.3
  [e89f7d12] + Media v0.5.0
  [e1d29d7a] + Missings v0.4.3
  [872c559c] + NNlib v0.6.2
  [77ba4419] + NaNMath v0.3.3
  [efe28fd5] + OpenSpecFun_jll v0.5.3+1
  [bac558e1] + OrderedCollections v1.1.0
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v0.5.2
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.9.0
  [90137ffa] + StaticArrays v0.12.1
  [2913bbd2] + StatsBase v0.32.0
  [a759f4b9] + TimerOutputs v0.5.3
  [3bb67fe8] + TranscodingStreams v0.9.5
  [a5390f91] + ZipFile v0.8.3
  [e88e6eb3] + Zygote v0.4.4
  [700de1a5] + ZygoteRules v0.2.0
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [9abbd945] + Profile 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Building FFTW ─────→ `~/.julia/packages/FFTW/qqcBj/deps/build.log`
   Building NNlib ────→ `~/.julia/packages/NNlib/udnNA/deps/build.log`
   Building CodecZlib → `~/.julia/packages/CodecZlib/5t9zO/deps/build.log`
   Building ZipFile ──→ `~/.julia/packages/ZipFile/oD4uG/deps/build.log`
    Testing GeometricFlux
Status `/tmp/jl_yQXb3t/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [1520ce14] AbstractTrees v0.2.1
  [79e6a3ab] Adapt v1.0.0
  [ec485272] ArnoldiMethod v0.0.4
  [b99e7846] BinaryProvider v0.5.8
  [fa961155] CEnum v0.2.0
  [3895d2a7] CUDAapi v2.0.0
  [c5f51814] CUDAdrv v4.0.4
  [be33ccc6] CUDAnative v2.6.0
  [944b1d66] CodecZlib v0.6.0
  [3da002f7] ColorTypes v0.8.1
  [5ae59095] Colors v0.9.6
  [bbf7d656] CommonSubexpressions v0.2.0
  [3a865a2d] CuArrays v1.5.0
  [9a962f9c] DataAPI v1.1.0
  [864edb3b] DataStructures v0.17.7
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.0
  [7a1cc6ca] FFTW v1.2.0
  [f5851436] FFTW_jll v3.3.9+3
  [5789e2e9] FileIO v1.2.1
  [1a297f60] FillArrays v0.8.2
  [53c48c17] FixedPointNumbers v0.6.1
  [587475ba] Flux v0.10.0
  [f6369f11] ForwardDiff v0.10.8
  [0c68f7d7] GPUArrays v2.0.1
  [7e08b658] GeometricFlux v0.2.0
  [7869d1d1] IRTools v0.3.0
  [d25df0c9] Inflate v0.1.1
  [1d5cc7b8] IntelOpenMP_jll v2018.0.3+0
  [033835bb] JLD2 v0.1.11
  [e5e0dc1b] Juno v0.7.2
  [929cbde3] LLVM v1.3.3
  [093fc24a] LightGraphs v1.3.0
  [856f044c] MKL_jll v2019.0.117+0
  [1914dd2f] MacroTools v0.5.3
  [e89f7d12] Media v0.5.0
  [626554b9] MetaGraphs v0.6.4
  [e1d29d7a] Missings v0.4.3
  [872c559c] NNlib v0.6.2
  [77ba4419] NaNMath v0.3.3
  [efe28fd5] OpenSpecFun_jll v0.5.3+1
  [bac558e1] OrderedCollections v1.1.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v0.5.2
  [699a6c99] SimpleTraits v0.9.1
  [47aef6b3] SimpleWeightedGraphs v1.1.0
  [a2af1166] SortingAlgorithms v0.3.1
  [276daf66] SpecialFunctions v0.9.0
  [90137ffa] StaticArrays v0.12.1
  [2913bbd2] StatsBase v0.32.0
  [a759f4b9] TimerOutputs v0.5.3
  [3bb67fe8] TranscodingStreams v0.9.5
  [a5390f91] ZipFile v0.8.3
  [e88e6eb3] Zygote v0.4.4
  [700de1a5] ZygoteRules v0.2.0
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [9abbd945] Profile 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [1a1011a3] SharedArrays 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
┌ Warning: Deprecated syntax `(;)` at /home/pkgeval/.julia/packages/IRTools/Fl3dY/src/passes/relooper.jl:148.
│ Use `begin end` instead.
└ @ ~/.julia/packages/IRTools/Fl3dY/src/passes/relooper.jl:148
┌ Warning: Deprecated syntax `(;)` at /home/pkgeval/.julia/packages/IRTools/Fl3dY/src/passes/relooper.jl:157.
│ Use `begin end` instead.
└ @ ~/.julia/packages/IRTools/Fl3dY/src/passes/relooper.jl:157
┌ Warning: Deprecated syntax `(;)` at /home/pkgeval/.julia/packages/IRTools/Fl3dY/src/passes/relooper.jl:167.
│ Use `begin end` instead.
└ @ ~/.julia/packages/IRTools/Fl3dY/src/passes/relooper.jl:167
┌ Warning: Deprecated syntax `(;)` at /home/pkgeval/.julia/packages/Zygote/vrsws/src/lib/grad.jl:3.
│ Use `begin end` instead.
└ @ ~/.julia/packages/Zygote/vrsws/src/lib/grad.jl:3
ERROR: LoadError: InitError: LoadError: Can't differentiate loopinfo expression
Stacktrace:
 [1] error(::String) at ./error.jl:33
 [2] macro expansion at ./simdloop.jl:79 [inlined]
 [3] copyto! at ./broadcast.jl:909 [inlined]
 [4] copyto! at ./broadcast.jl:864 [inlined]
 [5] (::typeof(∂(copyto!)))(::FillArrays.Fill{Float32,1,Tuple{Base.OneTo{Int64}}}) at /home/pkgeval/.julia/packages/Zygote/vrsws/src/compiler/interface2.jl:0
 [6] copy at ./broadcast.jl:840 [inlined]
 [7] materialize at ./broadcast.jl:820 [inlined]
 [8] #1734 at /home/pkgeval/.julia/packages/Zygote/vrsws/src/precompile.jl:22 [inlined]
 [9] (::typeof(∂(#1734)))(::Float32) at /home/pkgeval/.julia/packages/Zygote/vrsws/src/compiler/interface2.jl:0
 [10] (::Zygote.var"#26#27"{typeof(∂(#1734))})(::Float32) at /home/pkgeval/.julia/packages/Zygote/vrsws/src/compiler/interface.jl:38
 [11] gradient(::Function, ::Array{Float64,1}) at /home/pkgeval/.julia/packages/Zygote/vrsws/src/compiler/interface.jl:47
 [12] top-level scope at /home/pkgeval/.julia/packages/Zygote/vrsws/src/precompile.jl:22
 [13] include(::Module, ::String) at ./Base.jl:377
 [14] include at /home/pkgeval/.julia/packages/Zygote/vrsws/src/Zygote.jl:1 [inlined]
 [15] precompile at /home/pkgeval/.julia/packages/Zygote/vrsws/src/Zygote.jl:43 [inlined]
 [16] (::Zygote.var"#1724#1725")() at /home/pkgeval/.julia/packages/Requires/9Jse8/src/init.jl:11
 [17] __init__() at /home/pkgeval/.julia/packages/Requires/9Jse8/src/init.jl:18
 [18] _include_from_serialized(::String, ::Array{Any,1}) at ./loading.jl:697
 [19] _require_search_from_serialized(::Base.PkgId, ::String) at ./loading.jl:781
 [20] _tryrequire_from_serialized(::Base.PkgId, ::UInt64, ::Nothing) at ./loading.jl:712
 [21] _require_from_serialized(::String) at ./loading.jl:743
 [22] _require(::Base.PkgId) at ./loading.jl:1039
 [23] require(::Base.PkgId) at ./loading.jl:927
 [24] require(::Module, ::Symbol) at ./loading.jl:922
 [25] include(::String) at ./client.jl:439
 [26] top-level scope at none:6
in expression starting at /home/pkgeval/.julia/packages/Zygote/vrsws/src/precompile.jl:22
during initialization of module Zygote
in expression starting at /home/pkgeval/.julia/packages/GeometricFlux/kUV2O/test/runtests.jl:1
ERROR: Package GeometricFlux errored during testing
Stacktrace:
 [1] pkgerror(::String, ::Vararg{String,N} where N) at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/Types.jl:53
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:1503
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:316
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:303
 [5] #test#68 at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:297 [inlined]
 [6] test at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:297 [inlined]
 [7] #test#67 at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:296 [inlined]
 [8] test at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:296 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:295
 [10] test(::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:295
 [11] top-level scope at none:13
