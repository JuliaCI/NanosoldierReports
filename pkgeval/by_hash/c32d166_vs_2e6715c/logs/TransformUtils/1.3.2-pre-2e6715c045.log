Julia Version 1.3.2-pre.0
Commit 2e6715c045 (2019-12-31 00:49 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-6.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed TransformUtils ─ v0.2.2
  Updating `~/.julia/environments/v1.3/Project.toml`
  [9b8138ad] + TransformUtils v0.2.2
  Updating `~/.julia/environments/v1.3/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.2
  [2a0f44e3] + Base64 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [de0858da] + Printf 
  [9abbd945] + Profile 
  [9a3f8284] + Random 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [8dfed614] + Test 
  [4ec0a83e] + Unicode 
   Testing TransformUtils
    Status `/tmp/jl_10iLfy/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.2
  [2a0f44e3] Base64  [`@stdlib/Base64`]
  [8ba89e20] Distributed  [`@stdlib/Distributed`]
  [b77e0a4c] InteractiveUtils  [`@stdlib/InteractiveUtils`]
  [8f399da3] Libdl  [`@stdlib/Libdl`]
  [37e2e46d] LinearAlgebra  [`@stdlib/LinearAlgebra`]
  [56ddb016] Logging  [`@stdlib/Logging`]
  [d6f4376e] Markdown  [`@stdlib/Markdown`]
  [de0858da] Printf  [`@stdlib/Printf`]
  [9abbd945] Profile  [`@stdlib/Profile`]
  [9a3f8284] Random  [`@stdlib/Random`]
  [9e88b42a] Serialization  [`@stdlib/Serialization`]
  [6462fe0b] Sockets  [`@stdlib/Sockets`]
  [8dfed614] Test  [`@stdlib/Test`]
  [4ec0a83e] Unicode  [`@stdlib/Unicode`]
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/x61q0/test/runtests.jl:67
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.03844443728317255 -0.20679244870925706; 0.03844443728317255 0.0 -0.14235109738472237; 0.20679244870925706 0.14235109738472237 0.0])
dAA = so3([0.0 -0.05937599251948126 0.16731014961128365; 0.05937599251948126 0.0 0.04313771210209369; -0.16731014961128365 -0.04313771210209369 0.0])
dAA = so3([0.0 -0.12883616422404257 0.041643896661811376; 0.12883616422404257 0.0 -0.13523575232471194; -0.041643896661811376 0.13523575232471194 0.0])
dAA = Quaternion(0.9991506548327896, [-0.02190792848458205, 0.01239872972056669, 0.03262335234212594])
dAA = SO3([0.99960768873213 -0.014018767709337705 -0.02424753141087245; 0.016658361843470935 0.9935312298352651 0.11233073632233691; 0.022515941203991613 -0.11269059186080273 0.9933749860439215])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9032060956469844 -0.16549723026463353 0.3960169384772138; 0.12116740026517307 0.9834581943713826 0.13464189926155662; -0.41174896466064104 -0.07362504124626819 0.9083183051124619]), [1.4235109738472238, -2.0679244870925704, 0.3844443728317255])
xj = SE3(SO3([0.9848189471670404 -0.164167023749773 0.056398844083397105; 0.15714841520967807 0.9812007136141088 0.11202470799002447; -0.07372934895879986 -0.10146106601206743 0.9921036413529619]), [1.3523575232471192, 0.41643896661811375, 1.2883616422404256])
Dx = SE3(SO3([0.938893724215554 0.012389371935769583 -0.3439841247669495; -0.003007585039690999 0.9996091450282483 0.027794093043737103; 0.3441940282179168 -0.02506113802148756 0.938564015025183]), [-0.135429369126307, 2.3884923491032213, 1.1273660443060587])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
   Testing TransformUtils tests passed 
