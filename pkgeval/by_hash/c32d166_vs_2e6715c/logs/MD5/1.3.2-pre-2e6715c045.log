Julia Version 1.3.2-pre.0
Commit 2e6715c045 (2019-12-31 00:49 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-6.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed MD5 ─ v0.2.1
  Updating `~/.julia/environments/v1.3/Project.toml`
  [6ac74813] + MD5 v0.2.1
  Updating `~/.julia/environments/v1.3/Manifest.toml`
  [6ac74813] + MD5 v0.2.1
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
   Testing MD5
 Resolving package versions...
 Installed Parsers ──────── v0.3.10
 Installed Nettle ───────── v0.4.0
 Installed BinaryProvider ─ v0.5.8
 Installed URIParser ────── v0.4.0
 Installed JSON ─────────── v0.21.0
 Installed BenchmarkTools ─ v0.4.3
 Installed Compat ───────── v2.2.0
 Installed BinDeps ──────── v0.8.10
  Building Nettle → `~/.julia/packages/Nettle/SES5O/deps/build.log`
    Status `/tmp/jl_3ZTIeo/Manifest.toml`
  [6e4b80f9] BenchmarkTools v0.4.3
  [9e28174c] BinDeps v0.8.10
  [b99e7846] BinaryProvider v0.5.8
  [34da2185] Compat v2.2.0
  [682c06a0] JSON v0.21.0
  [6ac74813] MD5 v0.2.1
  [49dea1ee] Nettle v0.4.0
  [69de0a69] Parsers v0.3.10
  [30578b45] URIParser v0.4.0
  [2a0f44e3] Base64  [`@stdlib/Base64`]
  [ade2ca70] Dates  [`@stdlib/Dates`]
  [8bb1440f] DelimitedFiles  [`@stdlib/DelimitedFiles`]
  [8ba89e20] Distributed  [`@stdlib/Distributed`]
  [b77e0a4c] InteractiveUtils  [`@stdlib/InteractiveUtils`]
  [76f85450] LibGit2  [`@stdlib/LibGit2`]
  [8f399da3] Libdl  [`@stdlib/Libdl`]
  [37e2e46d] LinearAlgebra  [`@stdlib/LinearAlgebra`]
  [56ddb016] Logging  [`@stdlib/Logging`]
  [d6f4376e] Markdown  [`@stdlib/Markdown`]
  [a63ad114] Mmap  [`@stdlib/Mmap`]
  [44cfe95a] Pkg  [`@stdlib/Pkg`]
  [de0858da] Printf  [`@stdlib/Printf`]
  [3fa0cd96] REPL  [`@stdlib/REPL`]
  [9a3f8284] Random  [`@stdlib/Random`]
  [ea8e919c] SHA  [`@stdlib/SHA`]
  [9e88b42a] Serialization  [`@stdlib/Serialization`]
  [1a1011a3] SharedArrays  [`@stdlib/SharedArrays`]
  [6462fe0b] Sockets  [`@stdlib/Sockets`]
  [2f01184e] SparseArrays  [`@stdlib/SparseArrays`]
  [10745b16] Statistics  [`@stdlib/Statistics`]
  [8dfed614] Test  [`@stdlib/Test`]
  [cf7118a7] UUIDs  [`@stdlib/UUIDs`]
  [4ec0a83e] Unicode  [`@stdlib/Unicode`]
Test Summary: | Pass  Total
String Tests  |    7      7
Test Summary:                            | Pass  Total
Different forms of input data consistent |   10     10
Test Summary: | Pass  Total
misc          |    2      2
Test Summary:                               | Pass  Total
Against Nettle initialize, update!, digest! | 1280   1280
Test Summary:             | Pass  Total
Against Nettle end to end | 4004   4004
Nettle.hexdigest("md5", data) = "b23b62835b345bdb9f35dbd048e3e6ad"
  22.642 μs (9 allocations: 688 bytes)
"b23b62835b345bdb9f35dbd048e3e6ad"
bytes2hex(MD5.md5(data)) = "b23b62835b345bdb9f35dbd048e3e6ad"
  69.004 μs (5 allocations: 336 bytes)
16-element reinterpret(UInt8, ::Array{UInt32,1}):
 0xb2
 0x3b
 0x62
 0x83
 0x5b
 0x34
 0x5b
 0xdb
 0x9f
 0x35
 0xdb
 0xd0
 0x48
 0xe3
 0xe6
 0xad
   Testing MD5 tests passed 
