Julia Version 1.6.0-DEV.1139
Commit be1f3abcc6 (2020-10-06 02:47 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed FastGaussQuadrature ────────── v0.4.3
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_ZAZA8Y/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_ZAZA8Y/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.277951 seconds (379.98 k allocations: 15.446 MiB, 9.35% gc time, 93.84% compilation time)
Running: chebyshev_quadrature with k=1
  1.400235 seconds (2.19 M allocations: 126.662 MiB, 3.70% gc time, 98.46% compilation time)
Running: chebyshev_quadrature with k=2
  0.227580 seconds (409.38 k allocations: 23.553 MiB, 83.77% compilation time)
Running: chebyshev_quadrature with k=3
  0.249697 seconds (473.75 k allocations: 26.617 MiB, 4.77% gc time, 87.53% compilation time)
Running: chebyshev_quadrature with k=4
  0.222062 seconds (418.56 k allocations: 23.257 MiB, 5.65% gc time, 92.24% compilation time)
Running: jacobi_quadrature with α=β=1
 31.672586 seconds (36.42 M allocations: 3.001 GiB, 8.48% gc time, 80.41% compilation time)
Running: laguerre_quadrature with k=1
  2.497088 seconds (3.17 M allocations: 177.057 MiB, 9.11% gc time, 99.90% compilation time)
Running: legendre_quadrature
  0.238165 seconds (206.14 k allocations: 11.833 MiB, 9.63% gc time, 99.31% compilation time)
Running: lobatto_quadrature
  0.291808 seconds (329.41 k allocations: 19.905 MiB, 99.23% compilation time)
Running: radau_quadrature
  0.296596 seconds (448.31 k allocations: 27.348 MiB, 7.03% gc time, 99.26% compilation time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 48.356342 seconds (100.02 M allocations: 1.491 GiB, 0.29% gc time, 0.06% compilation time)
Running: rectangle_rule_midpoint.
  0.092837 seconds (172.46 k allocations: 3.827 MiB, 30.12% compilation time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 48.439364 seconds (100.02 M allocations: 1.491 GiB, 0.27% gc time, 0.05% compilation time)
Running: rombergs_method
  0.405048 seconds (722.82 k allocations: 41.728 MiB, 5.40% gc time, 99.47% compilation time)
Running: simpsons_rule
  0.031207 seconds (45.77 k allocations: 2.043 MiB, 94.03% compilation time)
Running: simpsons38_rule
  0.074833 seconds (108.61 k allocations: 5.761 MiB, 97.14% compilation time)
Running: trapezoidal_rule
  0.187569 seconds (1.51 M allocations: 25.681 MiB, 33.08% compilation time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.071534 seconds (30.96 k allocations: 1.864 MiB, 99.79% compilation time)
Running: chebyshev_quadrature with k=1
  0.437825 seconds (290.25 k allocations: 15.342 MiB, 99.62% compilation time)
Running: chebyshev_quadrature with k=2
  0.149783 seconds (93.80 k allocations: 2.675 MiB, 98.29% compilation time)
Running: chebyshev_quadrature with k=3
  0.145902 seconds (82.06 k allocations: 2.476 MiB, 98.41% compilation time)
Running: chebyshev_quadrature with k=4
  0.154817 seconds (64.67 k allocations: 2.122 MiB, 98.93% compilation time)
Running: jacobi_quadrature with α=β=1
  2.581228 seconds (503.75 k allocations: 161.801 MiB, 20.51% gc time, 21.83% compilation time)
Running: legendre_quadrature
  0.137226 seconds (41.20 k allocations: 2.373 MiB, 99.84% compilation time)
Running: lobatto_quadrature
  0.033223 seconds (15.59 k allocations: 992.356 KiB, 99.51% compilation time)
Running: radau_quadrature
  0.015791 seconds (15.70 k allocations: 999.571 KiB, 98.76% compilation time)
Running: rectangle_rule_left
 13.538255 seconds (471.41 M allocations: 7.025 GiB, 3.80% gc time)
Running: rectangle_rule_midpoint
  0.000015 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 13.856821 seconds (476.96 M allocations: 7.107 GiB, 3.77% gc time)
Running: rombergs_method
  0.328653 seconds (326.37 k allocations: 18.520 MiB, 99.87% compilation time)
Running: simpsons_rule
  0.000020 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.060533 seconds (18.91 k allocations: 1.146 MiB, 99.85% compilation time)
Running: trapezoidal_rule
  0.053969 seconds (17.40 k allocations: 1.054 MiB, 99.84% compilation time)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.025329 seconds (1.99 k allocations: 53.594 KiB, 99.41% compilation time)
Running: chebyshev_quadrature with k=1
  0.092696 seconds (2.46 k allocations: 116.359 KiB, 99.91% compilation time)
Running: chebyshev_quadrature with k=2
  0.092060 seconds (2.71 k allocations: 124.266 KiB, 99.90% compilation time)
Running: chebyshev_quadrature with k=3
  0.100729 seconds (2.31 k allocations: 109.297 KiB, 99.92% compilation time)
Running: chebyshev_quadrature with k=4
  0.118247 seconds (2.31 k allocations: 109.297 KiB, 99.94% compilation time)
Running: jacobi_quadrature with α=β=1
  0.305424 seconds (363.66 k allocations: 18.977 MiB, 9.67% gc time, 99.35% compilation time)
Running: legendre_quadrature
  0.069405 seconds (1.28 k allocations: 65.891 KiB, 99.90% compilation time)
Running: lobatto_quadrature
  0.000086 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000035 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000346 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000237 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000432 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.070974 seconds (1.04 k allocations: 56.531 KiB, 99.74% compilation time)
Running: simpsons_rule
  0.000027 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.021414 seconds (923 allocations: 39.281 KiB, 99.61% compilation time)
Running: trapezoidal_rule
  0.020423 seconds (44.33 k allocations: 704.859 KiB, 93.80% compilation time)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.045709 seconds (72.31 k allocations: 4.215 MiB, 99.42% compilation time)
Running: chebyshev_quadrature with k=1
  0.167188 seconds (230.61 k allocations: 12.965 MiB, 98.80% compilation time)
Running: chebyshev_quadrature with k=2
  0.224771 seconds (283.17 k allocations: 15.881 MiB, 9.54% gc time, 98.66% compilation time)
Running: chebyshev_quadrature with k=3
  0.163563 seconds (234.76 k allocations: 13.138 MiB, 98.70% compilation time)
Running: chebyshev_quadrature with k=4
  0.169731 seconds (234.76 k allocations: 13.067 MiB, 98.78% compilation time)
Running: jacobi_quadrature with α=β=1
  2.056164 seconds (446.74 k allocations: 163.190 MiB, 3.36% gc time, 17.27% compilation time)
Running: legendre_quadrature
  0.142319 seconds (185.44 k allocations: 10.708 MiB, 98.15% compilation time)
Running: lobatto_quadrature
  0.149253 seconds (196.62 k allocations: 11.412 MiB, 98.74% compilation time)
Running: radau_quadrature
  0.169545 seconds (196.62 k allocations: 11.409 MiB, 9.16% gc time, 98.89% compilation time)
Running: rectangle_rule_left
  0.647355 seconds (18.82 k allocations: 1.147 MiB, 3.45% compilation time)
Running: rectangle_rule_midpoint
  0.033175 seconds (24.67 k allocations: 1.555 MiB, 99.42% compilation time)
Running: rectangle_rule_right
  0.614256 seconds (17.39 k allocations: 1.065 MiB, 3.80% compilation time)
Running: rombergs_method
  0.098819 seconds (134.27 k allocations: 7.759 MiB, 97.35% compilation time)
Running: simpsons_rule
  0.029870 seconds (27.54 k allocations: 1.729 MiB, 99.44% compilation time)
Running: simpsons38_rule
  0.030599 seconds (42.37 k allocations: 2.678 MiB, 99.48% compilation time)
Running: trapezoidal_rule
  0.029388 seconds (44.10 k allocations: 1.772 MiB, 98.00% compilation time)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.030612 seconds (99.53 k allocations: 2.979 MiB, 94.46% compilation time)
Running: chebyshev_quadrature with k=1
  0.184563 seconds (237.20 k allocations: 13.054 MiB, 8.10% gc time, 98.94% compilation time)
Running: chebyshev_quadrature with k=2
  0.180776 seconds (290.20 k allocations: 15.903 MiB, 98.41% compilation time)
Running: chebyshev_quadrature with k=3
  0.185772 seconds (241.33 k allocations: 13.116 MiB, 99.04% compilation time)
Running: chebyshev_quadrature with k=4
  0.195860 seconds (241.34 k allocations: 13.121 MiB, 99.02% compilation time)
Running: hermite_quadrature with k=2
 13.111570 seconds (20.10 M allocations: 1.056 GiB, 9.72% gc time, 99.98% compilation time)
Running: jacobi_quadrature with α=β=1
  0.376120 seconds (455.91 k allocations: 49.402 MiB, 8.06% gc time, 83.60% compilation time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.262202 seconds (276.26 k allocations: 15.240 MiB, 12.18% gc time, 98.72% compilation time)
Running: legendre_quadrature
  0.129493 seconds (191.98 k allocations: 11.070 MiB, 98.27% compilation time)
Running: lobatto_quadrature
  0.189982 seconds (217.28 k allocations: 37.202 MiB, 11.07% gc time, 87.17% compilation time)
Running: radau_quadrature
  0.168176 seconds (213.86 k allocations: 29.846 MiB, 88.11% compilation time)
Running: rectangle_rule_left
  0.023829 seconds (21.73 k allocations: 1.293 MiB, 99.45% compilation time)
Running: rectangle_rule_midpoint
  0.022219 seconds (26.47 k allocations: 1.642 MiB, 99.41% compilation time)
Running: rectangle_rule_right
  0.031764 seconds (18.50 k allocations: 1.117 MiB, 99.57% compilation time)
Running: rombergs_method
  0.090550 seconds (136.74 k allocations: 7.808 MiB, 97.47% compilation time)
Running: simpsons_rule
  0.026950 seconds (39.38 k allocations: 2.061 MiB, 98.76% compilation time)
Running: simpsons38_rule
  0.051527 seconds (57.34 k allocations: 3.063 MiB, 41.38% gc time, 99.23% compilation time)
Running: trapezoidal_rule
  0.020722 seconds (30.13 k allocations: 1.697 MiB, 98.73% compilation time)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.028218 seconds (59.92 k allocations: 2.280 MiB, 96.48% compilation time)
Running: chebyshev_quadrature with k=1
  0.192164 seconds (232.72 k allocations: 12.825 MiB, 98.93% compilation time)
Running: chebyshev_quadrature with k=2
  0.205737 seconds (285.38 k allocations: 15.643 MiB, 98.41% compilation time)
Running: chebyshev_quadrature with k=3
  0.192926 seconds (236.87 k allocations: 12.928 MiB, 12.88% gc time, 98.81% compilation time)
Running: chebyshev_quadrature with k=4
  0.198701 seconds (236.87 k allocations: 12.929 MiB, 99.00% compilation time)
Running: hermite_quadrature with k=2
  0.156199 seconds (170.78 k allocations: 9.790 MiB, 98.55% compilation time)
Running: jacobi_quadrature with α=β=1
  6.476056 seconds (449.18 k allocations: 1.175 GiB, 12.12% gc time, 5.72% compilation time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.274781 seconds (271.55 k allocations: 15.063 MiB, 6.08% gc time, 92.67% compilation time)
Running: legendre_quadrature
  0.162774 seconds (187.55 k allocations: 10.817 MiB, 98.14% compilation time)
Running: lobatto_quadrature
  0.193180 seconds (208.03 k allocations: 22.917 MiB, 92.50% compilation time)
Running: radau_quadrature
  0.250735 seconds (207.19 k allocations: 20.844 MiB, 14.06% gc time, 95.19% compilation time)
Running: rectangle_rule_left
  0.025563 seconds (19.52 k allocations: 1.188 MiB, 98.43% compilation time)
Running: rectangle_rule_midpoint
  0.019838 seconds (25.36 k allocations: 1.591 MiB, 99.21% compilation time)
Running: rectangle_rule_right
  0.019347 seconds (17.36 k allocations: 1.062 MiB, 99.27% compilation time)
Running: rombergs_method
  0.132752 seconds (132.58 k allocations: 7.622 MiB, 98.28% compilation time)
Running: simpsons_rule
  0.036238 seconds (31.90 k allocations: 1.853 MiB, 99.37% compilation time)
Running: simpsons38_rule
  0.056337 seconds (48.16 k allocations: 2.821 MiB, 99.49% compilation time)
Running: trapezoidal_rule
  0.026160 seconds (25.05 k allocations: 1.535 MiB, 99.09% compilation time)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.031642 seconds (30.87 k allocations: 1.875 MiB, 96.84% compilation time)
Running: chebyshev_quadrature with k=1
  0.166774 seconds (231.10 k allocations: 13.042 MiB, 98.50% compilation time)
Running: chebyshev_quadrature with k=2
  0.245762 seconds (283.67 k allocations: 15.986 MiB, 98.49% compilation time)
Running: chebyshev_quadrature with k=3
  0.228857 seconds (235.25 k allocations: 13.146 MiB, 9.79% gc time, 98.93% compilation time)
Running: chebyshev_quadrature with k=4
  0.166925 seconds (235.25 k allocations: 12.975 MiB, 98.57% compilation time)
Running: jacobi_quadrature with α=β=1
  1.708741 seconds (447.27 k allocations: 194.232 MiB, 6.85% gc time, 31.36% compilation time)
Running: legendre_quadrature
  0.179983 seconds (185.93 k allocations: 10.746 MiB, 98.76% compilation time)
Running: lobatto_quadrature
  0.154085 seconds (197.11 k allocations: 11.437 MiB, 98.40% compilation time)
Running: radau_quadrature
  0.142546 seconds (197.11 k allocations: 11.443 MiB, 98.35% compilation time)
Running: rectangle_rule_left
  0.350735 seconds (19.34 k allocations: 1.173 MiB, 6.83% compilation time)
Running: rectangle_rule_midpoint
  0.027305 seconds (25.01 k allocations: 1.573 MiB, 99.44% compilation time)
Running: rectangle_rule_right
  0.158233 seconds (17.73 k allocations: 1.081 MiB, 13.18% compilation time)
Running: rombergs_method
  0.151589 seconds (145.02 k allocations: 8.483 MiB, 97.66% compilation time)
Running: simpsons_rule
  0.024788 seconds (28.23 k allocations: 1.758 MiB, 99.25% compilation time)
Running: simpsons38_rule
  0.026679 seconds (43.08 k allocations: 2.708 MiB, 98.23% compilation time)
Running: trapezoidal_rule
  0.025728 seconds (45.03 k allocations: 1.805 MiB, 97.36% compilation time)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.029615 seconds (31.64 k allocations: 1.826 MiB, 98.89% compilation time)
Running: chebyshev_quadrature with k=1
  0.212250 seconds (231.69 k allocations: 12.992 MiB, 10.19% gc time, 98.72% compilation time)
Running: chebyshev_quadrature with k=2
  0.180542 seconds (284.30 k allocations: 15.958 MiB, 97.61% compilation time)
Running: chebyshev_quadrature with k=3
  0.200556 seconds (235.84 k allocations: 13.130 MiB, 98.74% compilation time)
Running: chebyshev_quadrature with k=4
  0.161855 seconds (235.84 k allocations: 13.143 MiB, 98.29% compilation time)
Running: jacobi_quadrature with α=β=1
  1.881024 seconds (447.99 k allocations: 148.921 MiB, 4.26% gc time, 26.55% compilation time)
Running: legendre_quadrature
  0.141122 seconds (186.53 k allocations: 10.750 MiB, 98.40% compilation time)
Running: lobatto_quadrature
  0.167984 seconds (197.71 k allocations: 11.461 MiB, 98.62% compilation time)
Running: radau_quadrature
  0.138774 seconds (197.71 k allocations: 11.454 MiB, 98.23% compilation time)
Running: rectangle_rule_left
  0.668074 seconds (19.59 k allocations: 1.186 MiB, 3.31% compilation time)
Running: rectangle_rule_midpoint
  0.021149 seconds (25.01 k allocations: 1.574 MiB, 98.94% compilation time)
Running: rectangle_rule_right
  0.696035 seconds (17.69 k allocations: 1.078 MiB, 3.42% compilation time)
Running: rombergs_method
  0.111673 seconds (135.49 k allocations: 7.815 MiB, 96.77% compilation time)
Running: simpsons_rule
  0.027230 seconds (28.93 k allocations: 1.785 MiB, 99.30% compilation time)
Running: simpsons38_rule
  0.028662 seconds (43.78 k allocations: 2.734 MiB, 99.31% compilation time)
Running: trapezoidal_rule
  0.021181 seconds (57.27 k allocations: 2.006 MiB, 96.02% compilation time)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.167654 seconds (146.69 k allocations: 8.789 MiB, 99.85% compilation time)
Running: chebyshev_quadrature with k=1
  0.140702 seconds (69.93 k allocations: 2.205 MiB, 98.31% compilation time)
Running: chebyshev_quadrature with k=2
  0.151090 seconds (105.09 k allocations: 2.868 MiB, 97.29% compilation time)
Running: chebyshev_quadrature with k=3
  0.160662 seconds (92.57 k allocations: 2.654 MiB, 97.68% compilation time)
Running: chebyshev_quadrature with k=4
  0.134497 seconds (72.10 k allocations: 2.248 MiB, 98.41% compilation time)
Running: jacobi_quadrature with α=β=1
  1.073005 seconds (480.15 k allocations: 167.757 MiB, 7.61% gc time, 35.10% compilation time)
Running: legendre_quadrature
  0.118792 seconds (18.73 k allocations: 1.095 MiB, 99.79% compilation time)
Running: lobatto_quadrature
  0.000096 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000045 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 23.869273 seconds (590.00 M allocations: 8.792 GiB, 6.34% gc time)
Running: rectangle_rule_midpoint
  0.000018 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 23.771550 seconds (592.75 M allocations: 8.833 GiB, 6.63% gc time)
Running: rombergs_method
  0.107122 seconds (20.51 k allocations: 1.165 MiB, 99.55% compilation time)
Running: simpsons_rule
  0.000073 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.025550 seconds (463 allocations: 22.578 KiB, 99.57% compilation time)
Running: trapezoidal_rule
  0.018414 seconds (179 allocations: 8.766 KiB, 99.54% compilation time)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 31.326196 seconds (629.32 M allocations: 9.387 GiB, 5.29% gc time, 0.43% compilation time)
Running: chebyshev_quadrature with k=1
  0.421222 seconds (414.04 k allocations: 23.023 MiB, 99.27% compilation time)
Running: chebyshev_quadrature with k=2
 17.810931 seconds (468.68 k allocations: 4.040 GiB, 2.42% gc time, 2.23% compilation time)
Running: chebyshev_quadrature with k=3
  8.411462 seconds (249.12 k allocations: 1.642 GiB, 3.34% gc time, 2.22% compilation time)
Running: chebyshev_quadrature with k=4
 11.387686 seconds (249.12 k allocations: 2.260 GiB, 1.93% gc time, 1.84% compilation time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 34.811152 seconds (484.09 k allocations: 13.254 GiB, 7.12% gc time, 1.04% compilation time)
Running: legendre_quadrature.
  9.385481 seconds (223.30 k allocations: 1.976 GiB, 1.34% gc time, 2.30% compilation time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 36.133682 seconds (8.23 M allocations: 13.383 GiB, 8.16% gc time, 0.82% compilation time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 34.430358 seconds (7.23 M allocations: 13.369 GiB, 11.18% gc time, 0.82% compilation time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 14.354007 seconds (22.25 k allocations: 1.347 MiB, 0.20% compilation time)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 14.206802 seconds (30.45 k allocations: 1.884 MiB, 0.24% compilation time)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 13.133619 seconds (22.45 k allocations: 1.357 MiB, 0.23% compilation time)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.034539 seconds (438.14 k allocations: 152.669 MiB, 1.98% gc time, 17.20% compilation time)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 31.007161 seconds (600.04 M allocations: 8.943 GiB, 5.87% gc time, 0.12% compilation time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 31.015065 seconds (600.05 M allocations: 8.943 GiB, 6.51% gc time, 0.18% compilation time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 28.726618 seconds (600.03 M allocations: 8.943 GiB, 5.69% gc time, 0.09% compilation time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.051683 seconds (180.45 k allocations: 4.404 MiB, 88.88% compilation time)
Running: chebyshev_quadrature with k=1
  0.175169 seconds (247.70 k allocations: 13.449 MiB, 97.45% compilation time)
Running: chebyshev_quadrature with k=2
  0.186896 seconds (272.34 k allocations: 14.523 MiB, 98.50% compilation time)
Running: chebyshev_quadrature with k=3
  0.163102 seconds (220.25 k allocations: 11.631 MiB, 99.11% compilation time)
Running: chebyshev_quadrature with k=4
  0.224588 seconds (220.25 k allocations: 11.689 MiB, 99.39% compilation time)
Running: jacobi_quadrature with α=β=1
  0.378057 seconds (388.85 k allocations: 34.972 MiB, 93.91% compilation time)
Running: laguerre_quadrature with k=2
  0.216581 seconds (180.54 k allocations: 10.477 MiB, 85.62% compilation time)
Running: legendre_quadrature
  0.199027 seconds (145.99 k allocations: 8.082 MiB, 99.91% compilation time)
Running: lobatto_quadrature
  0.019953 seconds (10.56 k allocations: 15.098 MiB)
Running: radau_quadrature
  0.017929 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.040295 seconds (18.88 k allocations: 1.122 MiB, 57.54% compilation time)
Running: rectangle_rule_midpoint
  0.027248 seconds (25.48 k allocations: 1.576 MiB, 74.31% compilation time)
Running: rectangle_rule_right
  0.025283 seconds (17.48 k allocations: 1.049 MiB, 61.73% compilation time)
Running: rombergs_method
  0.399241 seconds (172.65 k allocations: 9.887 MiB, 28.42% gc time, 99.42% compilation time)
Running: simpsons_rule
  0.000509 seconds (24.72 k allocations: 386.688 KiB)
Running: simpsons38_rule
  0.039886 seconds (78.86 k allocations: 3.384 MiB, 97.40% compilation time)
Running: trapezoidal_rule
  0.093191 seconds (2.39 M allocations: 37.691 MiB, 31.65% compilation time)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.001201 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.105918 seconds (2.46 k allocations: 1.691 MiB, 94.99% compilation time)
Running: chebyshev_quadrature with k=2
  0.132425 seconds (2.71 k allocations: 2.355 MiB, 96.47% compilation time)
Running: chebyshev_quadrature with k=3
  0.129059 seconds (2.31 k allocations: 2.028 MiB, 97.14% compilation time)
Running: chebyshev_quadrature with k=4
  0.113328 seconds (2.31 k allocations: 1.469 MiB, 97.92% compilation time)
Running: jacobi_quadrature with α=β=1
  5.745152 seconds (365.94 k allocations: 904.802 MiB, 6.23% gc time, 10.69% compilation time)
Running: legendre_quadrature
  0.068696 seconds (1.27 k allocations: 68.203 KiB, 99.87% compilation time)
Running: lobatto_quadrature
  0.000143 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000087 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  1.954508 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000208 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  2.544153 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.534629 seconds (997 allocations: 56.672 KiB, 83.12% compilation time)
Running: simpsons_rule
  0.000034 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000035 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000541 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000181 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.159802 seconds (2.53 k allocations: 579.203 KiB, 99.61% compilation time)
Running: chebyshev_quadrature with k=2
  0.166866 seconds (2.79 k allocations: 780.188 KiB, 99.39% compilation time)
Running: chebyshev_quadrature with k=3
  0.107311 seconds (2.39 k allocations: 661.047 KiB, 99.03% compilation time)
Running: chebyshev_quadrature with k=4
  0.310382 seconds (2.39 k allocations: 491.547 KiB, 99.76% compilation time)
Running: jacobi_quadrature with α=β=1
  2.005559 seconds (372.50 k allocations: 252.963 MiB, 13.76% gc time, 33.33% compilation time)
Running: legendre_quadrature
  0.182483 seconds (1.32 k allocations: 67.859 KiB, 99.96% compilation time)
Running: lobatto_quadrature
  0.000087 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000041 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  1.147993 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000126 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  1.112166 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.082136 seconds (1.21 k allocations: 64.938 KiB, 99.46% compilation time)
Running: simpsons_rule
  0.000013 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000012 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000286 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
