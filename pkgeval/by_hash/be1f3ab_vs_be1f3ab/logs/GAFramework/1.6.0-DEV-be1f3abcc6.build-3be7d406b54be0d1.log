Julia Version 1.6.0-DEV.1139
Commit be1f3abcc6 (2020-10-06 02:47 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.4.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.4.3
  [91ca9103] + GAFramework v0.4.1
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_7NFX20/Project.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_7NFX20/Manifest.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.2172335903422702
curgen: 20 fitness: 0.2172335903422702
curgen: 30 fitness: 0.2172335903422702
curgen: 40 fitness: 0.2172335903422702
curgen: 50 fitness: 0.2172335903422702
CoordinateCreature{Vector{Float64}}([0.22251891671445684], -0.2172335903422702) 0.22251891671445684 -0.2172335903422702
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.257635393648759
curgen: 100 fitness: 3.257815704333618
curgen: 150 fitness: 3.2580733396271757
curgen: 200 fitness: 3.2583104263958753
curgen: 250 fitness: 3.2583953122153773
curgen: 300 fitness: 3.2584287507649035
curgen: 350 fitness: 3.2584482239345403
curgen: 400 fitness: 3.2584530600262864
curgen: 450 fitness: 3.258457605191719
curgen: 500 fitness: 3.2584724002587016
CoordinateCreature{Vector{Float64}}([0.22205934655868623, 0.22277060990037068, -0.22233620541979726, 0.22262873481550963, -0.22244523469196542, -0.22256216909889595, -0.2225635321884641, -0.22237293376877978, -0.22273648872141738, -0.2230238776545082, -0.2224534628723947, -0.2224749236646557, 0.2225533788855024, -0.22248118937715797, 0.22279525004918113], -3.2584724002587016) [0.22205934655868623, 0.22277060990037068, -0.22233620541979726, 0.22262873481550963, -0.22244523469196542, -0.22256216909889595, -0.2225635321884641, -0.22237293376877978, -0.22273648872141738, -0.2230238776545082, -0.2224534628723947, -0.2224749236646557, 0.2225533788855024, -0.22248118937715797, 0.22279525004918113] -3.2584724002587016
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0028792573615135097
curgen: 100 fitness: -0.002304807333075587
curgen: 150 fitness: -0.002304807333075587
curgen: 200 fitness: -0.002304807333075587
curgen: 250 fitness: -0.0019975202768023337
curgen: 300 fitness: -0.001740090622149637
curgen: 350 fitness: -0.0014901340111350692
curgen: 400 fitness: -0.001363682782766773
curgen: 450 fitness: -0.001363682782766773
curgen: 500 fitness: -0.001363682782766773
CoordinateCreature{Vector{Float64}}([-0.001607739824361234, 0.00012585926229618854, 0.00012229226218298406, 6.495178915509234e-5, -7.286145585945556e-5, -7.994667323737948e-5, -0.0003137672113783378, 0.00017798521824622597, -0.0010152947589085937, -0.00023405519176286117, 4.017375591331524e-5, 0.0002717149025357787, -0.00020668418937048314, 0.0016736452456946186, -0.0003274149082817348], 0.001363682782766773) [-0.001607739824361234, 0.00012585926229618854, 0.00012229226218298406, 6.495178915509234e-5, -7.286145585945556e-5, -7.994667323737948e-5, -0.0003137672113783378, 0.00017798521824622597, -0.0010152947589085937, -0.00023405519176286117, 4.017375591331524e-5, 0.0002717149025357787, -0.00020668418937048314, 0.0016736452456946186, -0.0003274149082817348] 0.001363682782766773
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
