Julia Version 1.6.0-DEV.1139
Commit be1f3abcc6 (2020-10-06 02:47 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.6
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.6
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_hxqx9W/Project.toml`
  [9b8138ad] TransformUtils v0.2.6
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_hxqx9W/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.6
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
    Testing Running tests...
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/cFZOw/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.19858546209377548 -0.11515937203208636; -0.19858546209377548 0.0 0.008156842560181272; 0.11515937203208636 -0.008156842560181272 0.0])
dAA = so3([0.0 -0.019738609229988508 0.08667916577359215; 0.019738609229988508 0.0 0.25293490623997755; -0.08667916577359215 -0.25293490623997755 0.0])
dAA = so3([0.0 0.13712343375758737 0.12865249919336735; -0.13712343375758737 0.0 0.07221236347213716; -0.12865249919336735 -0.07221236347213716 0.0])
dAA = Quaternion(0.9943530299419012, [0.06321449408565485, 0.06417930704778813, 0.0560980938153955])
dAA = SO3([0.9921100669917058 -0.09964754910652907 -0.07607878108102664; 0.09557131091980878 0.9938758882903809 -0.05546929965373396; 0.081140245888105 0.047760701754354144 0.9955577210112678])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9762142956872312 -0.11172013060685902 0.1858070539916867; -0.020252398463784835 0.8062755614112582 0.5911933350668159; -0.21585988337888842 -0.5808944237020586 0.7848351287114421]), [-0.08156842560181272, -1.1515937203208635, -1.9858546209377548])
xj = SE3(SO3([0.9109555003784077 -0.2379992136380924 0.3369220245664781; 0.3369506870092623 0.9004854232042548 -0.27493678749967265; -0.23795863265347392 0.3639812864754226 0.9004961478215137]), [-0.7221236347213716, 1.2865249919336734, -1.3712343375758735])
Dx = SE3(SO3([0.9338294453219372 -0.3291441823680701 0.14009523283458641; 0.3081318796371594 0.5411939937231678 -0.7824089761175026; 0.18170666416230738 0.7738043476042391 0.6068027025547795]), [-0.8073687666708209, 1.6803289498349652, 1.8047554456620212])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
