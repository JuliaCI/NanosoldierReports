Julia Version 1.6.0-DEV.1139
Commit be1f3abcc6 (2020-10-06 02:47 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-10.0.1 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.6
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.6
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_lE9UE0/Project.toml`
  [9b8138ad] TransformUtils v0.2.6
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_lE9UE0/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.6
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
    Testing Running tests...
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/cFZOw/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.04312022699988088 0.0003074291567233701; 0.04312022699988088 0.0 -0.05879120645599554; -0.0003074291567233701 0.05879120645599554 0.0])
dAA = so3([0.0 0.058567839743566476 0.015215419547722563; -0.058567839743566476 0.0 -0.09700719493960164; -0.015215419547722563 0.09700719493960164 0.0])
dAA = so3([0.0 -0.179818121870674 -0.054758363785990284; 0.179818121870674 0.0 0.030093741879399352; 0.054758363785990284 -0.030093741879399352 0.0])
dAA = Quaternion(0.9991464165345214, [0.010985888057324707, 0.03617292871319149, 0.016651360849098244])
dAA = SO3([0.9985535448649916 -0.05019870613692178 -0.01925897037066418; 0.05148147620635982 0.9959878382593019 0.07319756585554334; 0.015507277168257366 -0.07408316908543781 0.997131490031824])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9886348800786298 0.14901516425711442 0.01988855734684032; -0.13985276870547259 0.9601456193358688 -0.24199502630334038; -0.05515683980547591 0.2364632539985146 0.9700736325305966]), [0.5879120645599554, 0.003074291567233701, 0.43120226999880873])
xj = SE3(SO3([0.9802324184447841 -0.07959463299311575 0.1811328248236106; 0.09000331630147629 0.994686745083732 -0.04997681672002753; -0.17619253356662423 0.06529145084482364 0.9821879746575765]), [-0.3009374187939935, -0.5475836378599028, 1.7981812187067399])
Dx = SE3(SO3([0.9662229698297639 -0.22140099583356118 0.13188923996012272; 0.1908227248998546 0.9586223425191965 0.21125788052710054; -0.1732046772900368 -0.17895475256867505 0.9684912680545646]), [-0.8771348052349168, -0.33792356009491914, 1.4416487805594271])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
