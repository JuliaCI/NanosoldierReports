################################################################################
# PkgEval set-up: 2020-10-28T11:06:42.797
#

Julia Version 1.6.0-DEV.1352
Commit 8f71ea7f35 (2020-10-28 02:10 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807



################################################################################
# Installation: 2020-10-28T11:06:44.605
#

   Resolving package versions...
   Installed CpuId â”€ v0.2.2
Updating `~/.julia/environments/v1.6/Project.toml`
  [adafc99b] + CpuId v0.2.2
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [adafc99b] + CpuId v0.2.2
  [2a0f44e3] + Base64
  [b77e0a4c] + InteractiveUtils
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [8dfed614] + Test


################################################################################
# Testing: 2020-10-28T11:06:46.571
#


     Testing CpuId
Status `/tmp/jl_hJUxc1/Project.toml`
  [adafc99b] CpuId v0.2.2
  [d6f4376e] Markdown
  [8dfed614] Test
Status `/tmp/jl_hJUxc1/Manifest.toml`
  [adafc99b] CpuId v0.2.2
  [2a0f44e3] Base64
  [b77e0a4c] InteractiveUtils
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [8dfed614] Test
     Testing Running tests...
| Cpu Property       | Value                                                      |
|:------------------ |:---------------------------------------------------------- |
| Brand              | AMD EPYC 7502 32-Core Processor                            |
| Vendor             | :AMD                                                       |
| Architecture       | :Zen                                                       |
| Model              | Family: 0x8f, Model: 0x31, Stepping: 0x00, Type: 0x00      |
| Cores              | 32 physical cores, 64 logical cores (on executing CPU)     |
|                    | Hyperthreading detected                                    |
| Clock Frequencies  | Not supported by CPU                                       |
| Data Cache         | Level 1:3 : (32, 512, 16384) kbytes                        |
|                    | 64 byte cache line size                                    |
| Address Size       | 48 bits virtual, 48 bits physical                          |
| SIMD               | 256 bit = 32 byte max. SIMD vector size                    |
| Time Stamp Counter | TSC is accessible via `rdtsc`                              |
|                    | TSC runs at constant rate (invariant from clock frequency) |
| Perf. Monitoring   | Performance Monitoring Counters (PMC) are not supported    |
|                    | CPU supports AMD's Instruction Based Sampling (IBS)        |
| Hypervisor         | No                                                         |

| Cpu Feature | Description                                                  |
|:----------- |:------------------------------------------------------------ |
| ADX         | Intel ADX (Multi-Precision Add-Carry Instruction Extensions) |
| AES         | AES encryption instruction set                               |
| AHF64       | LAHF and SAHF in PM64                                        |
| APIC        | APIC on-chip (Advanced Programmable Interrupt Controller)    |
| APIC_       | APIC                                                         |
| AVX         | 256bit Advanced Vector Extensions, AVX                       |
| AVX2        | SIMD 256bit Advanced Vector Extensions 2                     |
| BMI1        | Bit Manipulation Instruction Set 1                           |
| BMI2        | Bit Manipulation Instruction Set 2                           |
| CLFLUSH     | CLFLUSHOPT Instructions                                      |
| CLFSH       | CLFLUSH instruction (SSE2)                                   |
| CLWB        | CLWB instruction                                             |
| CMOV        | Conditional move CMOV and FCMOV instructions                 |
| CMOV_       | CMOVxx                                                       |
| CMPLEG      | HTT or CMP flag                                              |
| CPB         | Core performance boost                                       |
| CR8D        | MOV from and to CR8D                                         |
| CX16        | CMPXCHG16B instruction                                       |
| CX8         | CMPXCHG8 instruction (64bit compare and exchange)            |
| CX8_        | CMPXCHG8B                                                    |
| DBX         | Data breakpoint extensions                                   |
| DE          | Debugging extensions                                         |
| DE_         | MOV from and to DR4 and DR5                                  |
| EFRO        | Read-only MPERF/APERF                                        |
| EXTAPIC     | Extended APIC space                                          |
| F16C        | half-precision float support                                 |
| FFXSR       | FFXSR                                                        |
| FMA3        | Fused multiply-add using three operands                      |
| FP256       | 1x256 bit instead of 2x128-bit processing                    |
| FPU         | Onboard x87 FPU                                              |
| FPU_        | FPU                                                          |
| FSGS        | Access to base of %fs and %gs                                |
| FXSR        | FXSAVE, FXRSTOR instructions                                 |
| FXSR_       | AMD and Cyrix specific                                       |
| HTT         | Max APIC IDs reserved field is valid                         |
| HWPS        | Hardware P-state support                                     |
| IBS         | Instruction Based Sampling (IBS)                             |
| LM          | AMD64 long mode                                              |
| LZCNT       | LZCNT instruction                                            |
| MCA         | Machine Check Architecture (MSR)                             |
| MCA_        | MCA                                                          |
| MCE         | Machine check exception                                      |
| MCE_        | MCE (MSR)                                                    |
| MMX         | 64bit Multimedia Streaming Extensions                        |
| MMXEXT_     | MMX-SSE (AMD specific)                                       |
| MMX_        | 64bit Streaming SIMD extensions (MMX)                        |
| MON         | MONITOR and MWAIT instructions                               |
| MONX        | MONITORX/MWAITX instructions                                 |
| MOVBE       | MOVBE instruction                                            |
| MOVU        | prefer unaligned MOV over MOVL/MOVH                          |
| MSR         | Model Specific Registers, RDMSR and WRMSR instructions       |
| MSR_        | RDMSR and WDMSR                                              |
| MTRR        | Memory Type Range Registers                                  |
| MTRR_       | MTRR (MSR)                                                   |
| NX          | NXE                                                          |
| OSVW        | Operating-system-visible workaround                          |
| OSXSV       | XSAVE enabled by OS                                          |
| PAE         | Physical address extension                                   |
| PAE_        | PDPTE 64bit                                                  |
| PAT         | Page attribute table                                         |
| PAT_        | FCMOVxx                                                      |
| PCLMUL      | PCLMULQDQ support                                            |
| PCXCORE     | Core performance counter extensions                          |
| PCXL2I      | L2I performance counter extensions                           |
| PCXNB       | NB performance counter extensions                            |
| PG1G        | PG1G                                                         |
| PGE         | Page global bit                                              |
| PGE_        | PDE and PTE                                                  |
| POPCNT      | POPCNT instruction                                           |
| PQE         | Platform Quality of Service Enforcement                      |
| PQM         | Platform Quality of Service Monitoring                       |
| PREFETCHW   | PREFETCHW instruction                                        |
| PSE         | Page size extensions                                         |
| PSE36       | 36bit page size extension                                    |
| PSE36_      | 4 MB PDE bits 16..13                                         |
| PSE_        | PSE                                                          |
| RDPID       | Read Processor ID                                            |
| RDRND       | On-chip random number generator                              |
| RDSEED      | RDSEED instruction                                           |
| RDTSCP      | RDTSCP instruction                                           |
| SEP         | SYSENTER and SYSEXIT instructions                            |
| SHA         | Intel SHA extensions                                         |
| SKINIT      | SKINIT, STGI, DEV                                            |
| SMAP        | Supervisor Mode Access Prevention                            |
| SMEP        | Supervisor-Mode Execution Prevention                         |
| SSE         | 128bit Streaming SIMD Extensions 1                           |
| SSE2        | 128bit Streaming SIMD Extensions 2                           |
| SSE3        | 128bit Streaming SIMD Extensions 3                           |
| SSE41       | 128bit Streaming SIMD Extensions 4.1                         |
| SSE42       | 128bit Streaming SIMD Extensions 4.2                         |
| SSE4A       | Streaming SIMD extensions 4A                                 |
| SSEMISALIGN | Misaligned SSE                                               |
| SSSE3       | 128bit Supplemental Streaming SIMD Extension 3               |
| SVM         | VMRUN, VMCALL, VMLOAD and VMSAVE etc.                        |
| SYSCALL     | SYSCALL and SYSRET                                           |
| TCE         | Translation cache extension                                  |
| TM_         | Thermal monitoring                                           |
| TOPX        | Topology extensions on 0x8000'001D to 0x8000'001E            |
| TS          | Temperature sensor                                           |
| TSC         | Time stamp counter                                           |
| TSCINV      | Invariant TSC                                                |
| TSC_        | RSC, RDTSC, CR4.TSC                                          |
| TTP         | Thermal trip                                                 |
| UMIP        | User-mode Instruction Prevention                             |
| VME         | Virtual 8086 mode enhancements                               |
| VME_        | CR4                                                          |
| WDT         | Watch dog timer                                              |
| XSAVE       | XSAVE, XRESTOR, XSETBV, XGETBV                               |



processor	: 0
vendor_id	: AuthenticAMD
cpu family	: 23
model		: 49
model name	: AMD EPYC 7502 32-Core Processor
stepping	: 0
microcode	: 0x8301038
cpu MHz		: 2775.567
cache size	: 512 KB
physical id	: 0
siblings	: 64
core id		: 0
cpu cores	: 32
apicid		: 0
initial apicid	: 0
fpu		: yes
fpu_exception	: yes
cpuid level	: 16
wp		: yes
flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nopl xtopology nonstop_tsc cpuid extd_apicid aperfmperf pni pclmulqdq monitor ssse3 fma cx16 sse4_1 sse4_2 movbe popcnt aes xsave avx f16c rdrand lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs skinit wdt tce topoext perfctr_core perfctr_nb bpext perfctr_llc mwaitx cpb cat_l3 cdp_l3 hw_pstate sme ssbd ibrs ibpb stibp vmmcall fsgsbase bmi1 avx2 smep bmi2 cqm rdt_a rdseed adx smap clflushopt clwb sha_ni xsaveopt xsavec xgetbv1 xsaves cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local clzero irperf xsaveerptr arat npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassists pausefilter pfthreshold avic v_vmsave_vmload vgif umip rdpid overflow_recov succor smca
bugs		: sysret_ss_attrs spectre_v1 spectre_v2 spec_store_bypass
bogomips	: 5000.03
TLB size	: 3072 4K pages
clflush size	: 64
cache_alignment	: 64
address sizes	: 43 bits physical, 48 bits virtual
power management: ts ttp tm hwpstate cpb eff_freq_ro [13] [14]
Test Summary: | Pass  Total
ReturnTypes   |   49     49
Dump of all cpuid leafs, used for mocking 'cpuid'...

# AMD EPYC 7502 32-Core Processor without hypervisor
push!( _mockdb, (Dict(
    ((0x00000000, 0x00000000) => (0x00000010, 0x68747541, 0x444d4163, 0x69746e65)),
    ((0x00000001, 0x00000000) => (0x00830f10, 0x3f400800, 0x7ed8320b, 0x178bfbff)),
    ((0x00000002, 0x00000000) => (0x00000000, 0x00000000, 0x00000000, 0x00000000)),
    ((0x00000003, 0x00000000) => (0x00000000, 0x00000000, 0x00000000, 0x00000000)),
    ((0x00000004, 0x00000000) => (0x00000000, 0x00000000, 0x00000000, 0x00000000)),
    ((0x00000005, 0x00000000) => (0x00000040, 0x00000040, 0x00000003, 0x00000011)),
    ((0x00000006, 0x00000000) => (0x00000004, 0x00000000, 0x00000001, 0x00000000)),
    ((0x00000007, 0x00000000) => (0x00000000, 0x219c91a9, 0x00400004, 0x00000000)),
    ((0x00000008, 0x00000000) => (0x00000000, 0x00000000, 0x00000000, 0x00000000)),
    ((0x00000009, 0x00000000) => (0x00000000, 0x00000000, 0x00000000, 0x00000000)),
    ((0x0000000a, 0x00000000) => (0x00000000, 0x00000000, 0x00000000, 0x00000000)),
    ((0x0000000b, 0x00000000) => (0x00000001, 0x00000002, 0x00000100, 0x0000003f)),
    ((0x0000000c, 0x00000000) => (0x00000000, 0x00000000, 0x00000000, 0x00000000)),
    ((0x0000000d, 0x00000000) => (0x00000207, 0x00000340, 0x00000380, 0x00000000)),
    ((0x0000000e, 0x00000000) => (0x00000000, 0x00000000, 0x00000000, 0x00000000)),
    ((0x0000000f, 0x00000000) => (0x00000000, 0x000000ff, 0x00000000, 0x00000002)),
    ((0x00000010, 0x00000000) => (0x00000000, 0x00000002, 0x00000000, 0x00000000)),
    ((0x80000000, 0x00000000) => (0x80000020, 0x68747541, 0x444d4163, 0x69746e65)),
    ((0x80000001, 0x00000000) => (0x00830f10, 0x40000000, 0x75c237ff, 0x2fd3fbff)),
    ((0x80000002, 0x00000000) => (0x20444d41, 0x43595045, 0x30353720, 0x32332032)),
    ((0x80000003, 0x00000000) => (0x726f432d, 0x72502065, 0x7365636f, 0x20726f73)),
    ((0x80000004, 0x00000000) => (0x20202020, 0x20202020, 0x20202020, 0x00202020)),
    ((0x80000005, 0x00000000) => (0xff40ff40, 0xff40ff40, 0x20080140, 0x20080140)),
    ((0x80000006, 0x00000000) => (0x48006400, 0x68006400, 0x02006140, 0x04009140)),
    ((0x80000007, 0x00000000) => (0x00000000, 0x0000001b, 0x00000000, 0x00006799)),
    ((0x80000008, 0x00000000) => (0x00003030, 0x018cf757, 0x0000703f, 0x00010000)),
    ((0x80000009, 0x00000000) => (0x00000000, 0x00000000, 0x00000000, 0x00000000)),
    ((0x8000000a, 0x00000000) => (0x00000001, 0x00008000, 0x00000000, 0x0013bcff)),
    ((0x8000000b, 0x00000000) => (0x00000000, 0x00000000, 0x00000000, 0x00000000)),
    ((0x8000000c, 0x00000000) => (0x00000000, 0x00000000, 0x00000000, 0x00000000)),
    ((0x8000000d, 0x00000000) => (0x00000000, 0x00000000, 0x00000000, 0x00000000)),
    ((0x8000000e, 0x00000000) => (0x00000000, 0x00000000, 0x00000000, 0x00000000)),
    ((0x8000000f, 0x00000000) => (0x00000000, 0x00000000, 0x00000000, 0x00000000)),
    ((0x80000010, 0x00000000) => (0x00000000, 0x00000000, 0x00000000, 0x00000000)),
    ((0x80000011, 0x00000000) => (0x00000000, 0x00000000, 0x00000000, 0x00000000)),
    ((0x80000012, 0x00000000) => (0x00000000, 0x00000000, 0x00000000, 0x00000000)),
    ((0x80000013, 0x00000000) => (0x00000000, 0x00000000, 0x00000000, 0x00000000)),
    ((0x80000014, 0x00000000) => (0x00000000, 0x00000000, 0x00000000, 0x00000000)),
    ((0x80000015, 0x00000000) => (0x00000000, 0x00000000, 0x00000000, 0x00000000)),
    ((0x80000016, 0x00000000) => (0x00000000, 0x00000000, 0x00000000, 0x00000000)),
    ((0x80000017, 0x00000000) => (0x00000000, 0x00000000, 0x00000000, 0x00000000)),
    ((0x80000018, 0x00000000) => (0x00000000, 0x00000000, 0x00000000, 0x00000000)),
    ((0x80000019, 0x00000000) => (0xf040f040, 0x00000000, 0x00000000, 0x00000000)),
    ((0x8000001a, 0x00000000) => (0x00000006, 0x00000000, 0x00000000, 0x00000000)),
    ((0x8000001b, 0x00000000) => (0x000003ff, 0x00000000, 0x00000000, 0x00000000)),
    ((0x8000001c, 0x00000000) => (0x00000000, 0x00000000, 0x00000000, 0x00000000)),
    ((0x8000001d, 0x00000000) => (0x00004121, 0x01c0003f, 0x0000003f, 0x00000000)),
    ((0x8000001e, 0x00000000) => (0x0000003f, 0x0000011f, 0x00000000, 0x00000000)),
    ((0x8000001f, 0x00000000) => (0x0001000f, 0x0000016f, 0x000001fd, 0x00000001)),
    ((0x80000020, 0x00000000) => (0x00000000, 0x00000002, 0x00000000, 0x00000000)),
    ((0x00000004, 0x00000001) => (0x00000000, 0x00000000, 0x00000000, 0x00000000)),
    ((0x0000000b, 0x00000001) => (0x00000007, 0x00000040, 0x00000201, 0x0000003f)),
    ((0x0000000b, 0x00000002) => (0x00000000, 0x00000000, 0x00000002, 0x0000003f)),
    ((0x8000001d, 0x00000001) => (0x00004122, 0x01c0003f, 0x0000003f, 0x00000000)),
    ((0x8000001d, 0x00000002) => (0x00004143, 0x01c0003f, 0x000003ff, 0x00000002)),
    ((0x8000001d, 0x00000003) => (0x0001c163, 0x03c0003f, 0x00003fff, 0x00000001)),
    ((0x8000001d, 0x00000004) => (0x00000000, 0x00000000, 0x00000000, 0x00000000)),
  ) => Dict{Symbol,Any}(
    :cpuvendor       => :AMD,
    :cpuarchitecture => :Zen,
    :cpucores        => 32,
    :cputhreads      => 64,
    :cachesize       => (32768, 524288, 16777216),
    :cachelinesize   => 64,
    :simdbits        => 256,
  )))

Done.



-----
Mocking CpuId
-----

Tested recorded cpuid table #1 for 'AMD EPYC 7502 32-Core Processor'
Tested recorded cpuid table #2 for ''
Tested recorded cpuid table #3 for 'Intel(R) Xeon(R) CPU E5-2670 0 @ 2.60GHz'
Tested recorded cpuid table #4 for 'Intel(R) Xeon(R) CPU E5-2680 v2 @ 2.80GHz'
Tested recorded cpuid table #5 for 'Intel(R) Xeon(R) CPU E5-2680 v3 @ 2.50GHz'
Tested recorded cpuid table #6 for 'Intel(R) Xeon(R) CPU E5-2670 0 @ 2.60GHz'
Tested recorded cpuid table #7 for 'Intel(R) Xeon(R) CPU           X5570  @ 2.93GHz'
Tested recorded cpuid table #8 for 'Intel(R) Core(TM) i5-2520M CPU @ 2.50GHz'
Tested recorded cpuid table #9 for 'Intel(R) Core(TM) i5-2520M CPU @ 2.50GHz'
Tested recorded cpuid table #10 for 'Intel(R) Xeon Phi(TM) CPU 7250 @ 1.40GHz'
Tested recorded cpuid table #11 for 'Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz'
Tested recorded cpuid table #12 for 'Intel(R) Core(TM) i7-6600U CPU @ 2.60GHz'
Tested recorded cpuid table #13 for 'AMD A10-8700P Radeon R6, 10 Compute Cores 4C+6G'
Tested recorded cpuid table #14 for 'AMD Ryzen Threadripper 1950X 16-Core Processor'
Tested recorded cpuid table #15 for 'AMD A8-6410 APU with AMD Radeon R5 Graphics'
Tested recorded cpuid table #16 for 'AMD Athlon(tm) 5350 APU with Radeon(tm) R3'
Test Summary: | Pass  Broken  Total
Mocking       |  174       2    176
     Testing CpuId tests passed 

PkgEval succeeded


################################################################################
# PkgEval teardown: 2020-10-28T11:07:44.721
#


signal (15): Terminated
in expression starting at none:1

CPU usage: 52.50s (48.32s user, 4.49s kernel)

Network usage:
- eth0: 44.998 KiB received, 4.747 KiB sent

Raw statistics: {"read":"2020-10-28T11:07:44.90359521Z","preread":"0001-01-01T00:00:00Z","pids_stats":{"current":46},"blkio_stats":{"io_service_bytes_recursive":[{"major":259,"minor":0,"op":"Read","value":0},{"major":259,"minor":0,"op":"Write","value":20480},{"major":259,"minor":0,"op":"Sync","value":0},{"major":259,"minor":0,"op":"Async","value":20480},{"major":259,"minor":0,"op":"Total","value":20480},{"major":253,"minor":2,"op":"Read","value":0},{"major":253,"minor":2,"op":"Write","value":20480},{"major":253,"minor":2,"op":"Sync","value":0},{"major":253,"minor":2,"op":"Async","value":20480},{"major":253,"minor":2,"op":"Total","value":20480}],"io_serviced_recursive":[{"major":259,"minor":0,"op":"Read","value":0},{"major":259,"minor":0,"op":"Write","value":5},{"major":259,"minor":0,"op":"Sync","value":0},{"major":259,"minor":0,"op":"Async","value":5},{"major":259,"minor":0,"op":"Total","value":5},{"major":253,"minor":2,"op":"Read","value":0},{"major":253,"minor":2,"op":"Write","value":5},{"major":253,"minor":2,"op":"Sync","value":0},{"major":253,"minor":2,"op":"Async","value":5},{"major":253,"minor":2,"op":"Total","value":5}],"io_queue_recursive":[],"io_service_time_recursive":[],"io_wait_time_recursive":[],"io_merged_recursive":[],"io_time_recursive":[],"sectors_recursive":[]},"num_procs":0,"storage_stats":{},"cpu_stats":{"cpu_usage":{"total_usage":52504623224,"percpu_usage":[60958815,644957790,1496191049,1957257517,408199904,228080510,626093995,307111788,959889546,95250387,395699150,1279402809,212680671,87919320,99543796,617315615,346892806,1757210598,469321291,1719083280,596403253,1891428595,381958063,332895865,1303515352,741656109,373034942,2289619529,698057700,1121797628,523941270,830387922,39894427,3228441,5741474,14708813,7676833,6453163,23579559,21615928,7662613,75091099,336411525,96656501,1476840,3390710,16251396,174564431,45286087,53700663,58673197,131671524,59689067,31331394,29229013,4645812,39774895,51343641,406899026,110882723,52468520,103209081,119888598,4214572,358520453,439299825,245405005,435513219,261804705,155922693,949078444,344602291,1649268255,526754864,431499756,309113657,634803813,1492293442,113487832,104188133,1549906001,123010449,1915638697,1588622059,1050415308,485638810,701350287,640248787,622109551,530464821,1050219755,730899833,524805879,1392452108,579892929,2151456033,119133730,40609216,5743004,36251513,23620,16858857,41474646,13721944,1375640,32454216,13902565,60166855,4183243,673740,53382050,605940,14411717,14468205,219327678,18199327,26938701,25087829,57800546,6767143,30345461,41200859,314768325,15930237,30720783,15629186,72438669,80271654],"usage_in_kernelmode":4490000000,"usage_in_usermode":48320000000},"system_cpu_usage":93829060230000000,"online_cpus":128,"throttling_data":{"periods":629,"throttled_periods":4,"throttled_time":681259259}},"precpu_stats":{"cpu_usage":{"total_usage":0,"usage_in_kernelmode":0,"usage_in_usermode":0},"throttling_data":{"periods":0,"throttled_periods":0,"throttled_time":0}},"memory_stats":{"usage":169050112,"max_usage":423264256,"stats":{"active_anon":156536832,"active_file":40960,"cache":389120,"dirty":4096,"hierarchical_memory_limit":9223372036854771712,"hierarchical_memsw_limit":0,"inactive_anon":45056,"inactive_file":8192,"mapped_file":0,"pgfault":801414,"pgmajfault":0,"pgpgin":176921,"pgpgout":138681,"rss":156241920,"rss_huge":0,"total_active_anon":156536832,"total_active_file":40960,"total_cache":389120,"total_dirty":4096,"total_inactive_anon":45056,"total_inactive_file":8192,"total_mapped_file":0,"total_pgfault":801414,"total_pgmajfault":0,"total_pgpgin":176921,"total_pgpgout":138681,"total_rss":156241920,"total_rss_huge":0,"total_unevictable":0,"total_writeback":0,"unevictable":0,"writeback":0},"limit":540972998656},"name":"/CpuId-xj4rcu5Y","id":"b7c3fedb35790618930afec5b6bafac9f694a68504e0f94e9580fe74c697d688","networks":{"eth0":{"rx_bytes":46078,"rx_packets":113,"rx_errors":0,"rx_dropped":2,"tx_bytes":4861,"tx_packets":36,"tx_errors":0,"tx_dropped":0}}}

