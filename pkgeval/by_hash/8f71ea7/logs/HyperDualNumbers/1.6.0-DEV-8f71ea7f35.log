################################################################################
# PkgEval set-up: 2020-10-28T12:12:52.959
#

Julia Version 1.6.0-DEV.1352
Commit 8f71ea7f35 (2020-10-28 02:10 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807



################################################################################
# Installation: 2020-10-28T12:12:54.709
#

   Resolving package versions...
   Installed OpenSpecFun_jll ────────────── v0.5.3+4
   Installed CompilerSupportLibraries_jll ─ v0.3.4+0
   Installed Calculus ───────────────────── v0.5.1
   Installed NaNMath ────────────────────── v0.3.4
   Installed HyperDualNumbers ───────────── v4.0.3
   Installed SpecialFunctions ───────────── v0.10.3
   Installed JLLWrappers ────────────────── v1.1.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [50ceba7f] + HyperDualNumbers v4.0.3
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [49dc2e85] + Calculus v0.5.1
  [50ceba7f] + HyperDualNumbers v4.0.3
  [692b3bcd] + JLLWrappers v1.1.3
  [77ba4419] + NaNMath v0.3.4
  [276daf66] + SpecialFunctions v0.10.3
  [e66e0078] + CompilerSupportLibraries_jll v0.3.4+0
  [efe28fd5] + OpenSpecFun_jll v0.5.3+4
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [f43a241f] + Downloads
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
  [deac9b47] + LibCURL_jll
  [14a3606d] + MozillaCACerts_jll


################################################################################
# Testing: 2020-10-28T12:12:57.859
#


     Testing HyperDualNumbers
Status `/tmp/jl_bAQF4Y/Project.toml`
  [49dc2e85] Calculus v0.5.1
  [e30172f5] Documenter v0.25.3
  [50ceba7f] HyperDualNumbers v4.0.3
  [98b081ad] Literate v2.7.0
  [77ba4419] NaNMath v0.3.4
  [276daf66] SpecialFunctions v0.10.3
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [8dfed614] Test
Status `/tmp/jl_bAQF4Y/Manifest.toml`
  [49dc2e85] Calculus v0.5.1
  [ffbed154] DocStringExtensions v0.8.3
  [e30172f5] Documenter v0.25.3
  [50ceba7f] HyperDualNumbers v4.0.3
  [b5f81e59] IOCapture v0.1.0
  [692b3bcd] JLLWrappers v1.1.3
  [682c06a0] JSON v0.21.1
  [98b081ad] Literate v2.7.0
  [77ba4419] NaNMath v0.3.4
  [69de0a69] Parsers v1.0.11
  [276daf66] SpecialFunctions v0.10.3
  [e66e0078] CompilerSupportLibraries_jll v0.3.4+0
  [efe28fd5] OpenSpecFun_jll v0.5.3+4
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [f43a241f] Downloads
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
  [deac9b47] LibCURL_jll
  [14a3606d] MozillaCACerts_jll
     Testing Running tests...
Running tests:
  * test_basics.jl *

Examples of show() for hyperdual numbers with NaN:

hdNaN = NaN + 0.0ε₁ + 0.0ε₂ + 0.0ε₁ε₂
hdNaN + hd4 = NaN + 4.0ε₁ + 3.0ε₂ + 4.0ε₁ε₂

Testing includes Tim Holy's division performance improvement.
Testing includes ngedwin98's fixes for asin, acos and atan.



  * test_TimHoly_example.jl *
8//25 - 8//5ε₁ - 8//5ε₂ + 144//25ε₁ε₂



  * test_Paper_example.jl *

"THE" example
f(1.5) = 4.497780053946162

t0 = 1.5 + 1.0ε₁ + 1.0ε₂ + 0.0ε₁ε₂
t1 = 4.4816890703380645 + 4.4816890703380645ε₁ + 4.4816890703380645ε₂ + 4.4816890703380645ε₁ε₂
t2 = 0.9974949866040544 + 0.0707372016677029ε₁ + 0.0707372016677029ε₂ - 0.9974949866040544ε₁ε₂
t3 = 0.9925037693693151 + 0.21114975082386195ε₁ + 0.21114975082386195ε₂ - 2.947564004699509ε₁ε₂
t4 = 0.0707372016677029 - 0.9974949866040544ε₁ - 0.9974949866040544ε₂ - 0.0707372016677029ε₁ε₂
t5 = 0.000353951393082256 - 0.014973651704218029ε₁ - 0.014973651704218029ε₂ + 0.4212376474684772ε₁ε₂
t5a = 0.000353951393082256 - 0.014973651704218029ε₁ - 0.014973651704218029ε₂ + 0.4212376474684772ε₁ε₂
t6 = 0.9928577207623973 + 0.19617609911964393ε₁ + 0.19617609911964393ε₂ - 2.526326357231032ε₁ε₂
t7 = 1.0035903837494204 - 0.0991483686337086ε₁ - 0.0991483686337086ε₂ + 1.3062034995890381ε₁ε₂
t8 = 4.497780053946162 + 4.053427893898621ε₁ + 4.053427893898621ε₂ + 9.463073681596601ε₁ε₂

f(t0) = 4.497780053946162 + 4.05342789389862ε₁ + 4.05342789389862ε₂ + 9.463073681596601ε₁ε₂



  * test_Erf_example.jl *
24.274806105338804   = 24.274806105338804
0.8416019755317149   = 0.8416019755317149
0.008545857737238424   = 0.00854585773723843
Test Erf Passed



  * tests_for_coverage.jl *

Random examples of show() for hyperdual numbers:

h = 1.0 + 1.0ε₁ - Inf*ε₂ + 0.0ε₁ε₂
h = NaN - Inf*ε₁ + 1.0ε₂ + Inf*ε₁ε₂
h = Inf - Inf*ε₁ + Inf*ε₂ - Inf*ε₁ε₂
h = 1.0 + NaN*ε₁ - 1.0ε₂ - 1.0ε₁ε₂
h = Inf + Inf*ε₁ + 1.0ε₂ + 0.0ε₁ε₂
h = 0.0 + NaN*ε₁ + 0.0ε₂ + 1.0ε₁ε₂
h = -1.0 + 1.0ε₁ + NaN*ε₂ + 0.0ε₁ε₂
h = Inf + NaN*ε₁ + 1.0ε₂ + NaN*ε₁ε₂
h = 1.0 + Inf*ε₁ + 0.0ε₂ - 1.0ε₁ε₂
h = -Inf + NaN*ε₁ + 1.0ε₂ + Inf*ε₁ε₂
h = -Inf + 0.0im + 1.0ε₁ - 1.0imε₁ - 1.0ε₂ + 1.0imε₂ + 1.0ε₁ε₂ - 1.0imε₁ε₂
h = 1.0 + 0.0im - 1.0ε₁ + 0.0imε₁ + 1.0ε₂ + 1.0imε₂ + 0.0ε₁ε₂ + 1.0imε₁ε₂
h = -1.0 + 1.0im + 0.0ε₁ + 0.0imε₁ + NaNε₂ + 0.0imε₂ + NaNε₁ε₂ + 0.0imε₁ε₂
h = -1.0 + 0.0im + 1.0ε₁ - 1.0imε₁ + 1.0ε₂ - 1.0imε₂ - Infε₁ε₂ + 0.0imε₁ε₂
h = -1.0 - 1.0im + 1.0ε₁ + 0.0imε₁ - 1.0ε₂ - 1.0imε₂ + 1.0ε₁ε₂ + 0.0imε₁ε₂
h = 0.0 - 1.0im + 0.0ε₁ - 1.0imε₁ + 0.0ε₂ + 1.0imε₂ + 1.0ε₁ε₂ + 1.0imε₁ε₂
h = 1.0 + 1.0im - 1.0ε₁ + 0.0imε₁ - Infε₂ + 0.0imε₂ + 0.0ε₁ε₂ - 1.0imε₁ε₂
h = NaN + 0.0im + NaNε₁ + 0.0imε₁ + 1.0ε₂ + 1.0imε₂ + 0.0ε₁ε₂ + 0.0imε₁ε₂
h = 1.0 + 1.0im + 1.0ε₁ + 1.0imε₁ + 0.0ε₂ + 0.0imε₂ - Infε₁ε₂ + 0.0imε₁ε₂
h = Inf + 0.0im + NaNε₁ + 0.0imε₁ - 1.0ε₂ + 1.0imε₂ + 0.0ε₁ε₂ + 1.0imε₁ε₂
h = 0 + 0im + 0ε₁ + 1imε₁ + 1ε₂ + 0imε₂ + 0ε₁ε₂ + 0imε₁ε₂
h = 1 + 0im + 0ε₁ + 1imε₁ + 1ε₂ + 1imε₂ + 0ε₁ε₂ + 1imε₁ε₂
h = 0 + 1im + 0ε₁ + 0imε₁ + 1ε₂ + 1imε₂ + 0ε₁ε₂ + 1imε₁ε₂
h = 1 + 1im + 1ε₁ + 1imε₁ + 0ε₂ + 1imε₂ + 1ε₁ε₂ + 0imε₁ε₂
h = 1 + 1im + 1ε₁ + 1imε₁ + 1ε₂ + 0imε₂ + 1ε₁ε₂ + 1imε₁ε₂
h = 0 + 1im + 1ε₁ + 1imε₁ + 0ε₂ + 0imε₂ + 0ε₁ε₂ + 1imε₁ε₂
h = 1 + 0im + 1ε₁ + 1imε₁ + 0ε₂ + 1imε₂ + 1ε₁ε₂ + 1imε₁ε₂
h = 0 + 0im + 0ε₁ + 1imε₁ + 0ε₂ + 0imε₂ + 1ε₁ε₂ + 0imε₁ε₂
h = 1 + 0im + 0ε₁ + 0imε₁ + 1ε₂ + 1imε₂ + 1ε₁ε₂ + 0imε₁ε₂
h = 0 + 1im + 0ε₁ + 1imε₁ + 1ε₂ + 0imε₂ + 0ε₁ε₂ + 1imε₁ε₂

Examples of show() for special printing for boolean hyperdual numbers:

h = Hyper{Bool}(true,false,false,false)
h = ɛ₁
h = ɛ₂
h = ɛ₁ε₂
h = im
h = imɛ₁
h = imɛ₂
h = imε₁ɛ₂



  * test_function_list.jl *



  * tests_from_DualNumbers.jl *



Test Summary:       |   Pass   Total
HyperDualNumbers.jl | 136488  136488
Tests finished
     Testing HyperDualNumbers tests passed 

PkgEval succeeded


################################################################################
# PkgEval teardown: 2020-10-28T12:13:37.082
#


CPU usage: 42.68s (37.06s user, 5.87s kernel)

Network usage:
- eth0: 901.973 KiB received, 48.597 KiB sent

Raw statistics: {"read":"2020-10-28T12:13:37.455380175Z","preread":"0001-01-01T00:00:00Z","pids_stats":{"current":46},"blkio_stats":{"io_service_bytes_recursive":[{"major":259,"minor":0,"op":"Read","value":0},{"major":259,"minor":0,"op":"Write","value":24576},{"major":259,"minor":0,"op":"Sync","value":0},{"major":259,"minor":0,"op":"Async","value":24576},{"major":259,"minor":0,"op":"Total","value":24576},{"major":253,"minor":2,"op":"Read","value":0},{"major":253,"minor":2,"op":"Write","value":24576},{"major":253,"minor":2,"op":"Sync","value":0},{"major":253,"minor":2,"op":"Async","value":24576},{"major":253,"minor":2,"op":"Total","value":24576}],"io_serviced_recursive":[{"major":259,"minor":0,"op":"Read","value":0},{"major":259,"minor":0,"op":"Write","value":5},{"major":259,"minor":0,"op":"Sync","value":0},{"major":259,"minor":0,"op":"Async","value":5},{"major":259,"minor":0,"op":"Total","value":5},{"major":253,"minor":2,"op":"Read","value":0},{"major":253,"minor":2,"op":"Write","value":5},{"major":253,"minor":2,"op":"Sync","value":0},{"major":253,"minor":2,"op":"Async","value":5},{"major":253,"minor":2,"op":"Total","value":5}],"io_queue_recursive":[],"io_service_time_recursive":[],"io_wait_time_recursive":[],"io_merged_recursive":[],"io_time_recursive":[],"sectors_recursive":[]},"num_procs":0,"storage_stats":{},"cpu_stats":{"cpu_usage":{"total_usage":42681854336,"percpu_usage":[0,820029998,403170433,256130224,662210647,8175464,660033493,419493282,750221971,327070516,54037112,425938300,248118209,487882865,72808321,675950713,53398691,37108547,5725981,117460298,373850990,416792012,743513436,105986768,215342938,400065732,57262200,45249747,975240918,148070659,199473751,775677579,59473724,253678333,25179292,5918992,126990032,217587660,200493831,3844152,15262916,0,0,1860452,234805625,688198636,67796478,49770568,131851371,1932845942,385636836,2403606598,116235626,1052928243,490448366,864399965,3023293614,41100258,395432828,245637388,39831877,186408936,596943317,153670580,51140930,262057344,349533782,632948887,307629615,5592302,14084767,574431640,707720642,258930203,235429283,172351775,193462438,181362647,69552538,20011388,7301243,210370976,87910235,41688445,262430619,648189489,30520976,586864738,568323680,601342086,170100998,416995879,221651928,100811001,372854338,142663258,794483069,47944198,120413709,19767827,8980,482055745,0,95119289,54408801,31430643,530200,0,655662371,243394118,55559132,718986040,36715727,1269996234,1353810,656013393,261128885,222809909,390251784,113788805,483003174,848305200,0,857738442,55133660,81662822,70314618,554989450],"usage_in_kernelmode":5870000000,"usage_in_usermode":37060000000},"system_cpu_usage":94330845450000000,"online_cpus":128,"throttling_data":{"periods":451,"throttled_periods":12,"throttled_time":2970617457}},"precpu_stats":{"cpu_usage":{"total_usage":0,"usage_in_kernelmode":0,"usage_in_usermode":0},"throttling_data":{"periods":0,"throttled_periods":0,"throttled_time":0}},"memory_stats":{"usage":224579584,"max_usage":841089024,"stats":{"active_anon":195633152,"active_file":0,"cache":6180864,"dirty":0,"hierarchical_memory_limit":9223372036854771712,"hierarchical_memsw_limit":0,"inactive_anon":4726784,"inactive_file":8192,"mapped_file":0,"pgfault":783773,"pgmajfault":0,"pgpgin":470114,"pgpgout":421196,"rss":194187264,"rss_huge":0,"total_active_anon":195633152,"total_active_file":0,"total_cache":6180864,"total_dirty":0,"total_inactive_anon":4726784,"total_inactive_file":8192,"total_mapped_file":0,"total_pgfault":783773,"total_pgmajfault":0,"total_pgpgin":470114,"total_pgpgout":421196,"total_rss":194187264,"total_rss_huge":0,"total_unevictable":0,"total_writeback":0,"unevictable":0,"writeback":0},"limit":540972998656},"name":"/HyperDualNumbers-Mq6mzb4L","id":"033db1234880d0f7164e10e38cbef053b955e06131be93bcd9fc5f8843ec387b","networks":{"eth0":{"rx_bytes":923620,"rx_packets":375,"rx_errors":0,"rx_dropped":2,"tx_bytes":49763,"tx_packets":362,"tx_errors":0,"tx_dropped":0}}}

