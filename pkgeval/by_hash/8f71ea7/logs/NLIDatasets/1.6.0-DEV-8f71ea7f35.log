################################################################################
# PkgEval set-up: 2020-10-28T11:49:36.476
#

Julia Version 1.6.0-DEV.1352
Commit 8f71ea7f35 (2020-10-28 02:10 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807



################################################################################
# Installation: 2020-10-28T11:49:38.290
#

   Resolving package versions...
   Installed MbedTLS_jll ─ v2.16.8+0
   Installed Reexport ──── v0.2.0
   Installed IniFile ───── v0.5.0
   Installed NLIDatasets ─ v0.2.0
   Installed MbedTLS ───── v1.0.3
   Installed DataDeps ──── v0.7.2
   Installed HTTP ──────── v0.8.19
Updating `~/.julia/environments/v1.6/Project.toml`
  [400165cc] + NLIDatasets v0.2.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [124859b0] + DataDeps v0.7.2
  [cd3eb016] + HTTP v0.8.19
  [83e8ac13] + IniFile v0.5.0
  [739be429] + MbedTLS v1.0.3
  [400165cc] + NLIDatasets v0.2.0
  [189a3867] + Reexport v0.2.0
  [c8ffd9c3] + MbedTLS_jll v2.16.8+0
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [f43a241f] + Downloads
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
  [deac9b47] + LibCURL_jll
  [14a3606d] + MozillaCACerts_jll


################################################################################
# Testing: 2020-10-28T11:49:41.289
#


     Testing NLIDatasets
Status `/tmp/jl_8HkrfZ/Project.toml`
  [124859b0] DataDeps v0.7.2
  [cd3eb016] HTTP v0.8.19
  [400165cc] NLIDatasets v0.2.0
  [8dfed614] Test
Status `/tmp/jl_8HkrfZ/Manifest.toml`
  [124859b0] DataDeps v0.7.2
  [cd3eb016] HTTP v0.8.19
  [83e8ac13] IniFile v0.5.0
  [739be429] MbedTLS v1.0.3
  [400165cc] NLIDatasets v0.2.0
  [189a3867] Reexport v0.2.0
  [c8ffd9c3] MbedTLS_jll v2.16.8+0
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [f43a241f] Downloads
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [76f85450] LibGit2
  [8f399da3] Libdl
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
  [deac9b47] LibCURL_jll
  [14a3606d] MozillaCACerts_jll
     Testing Running tests...
SNLI: Error During Test at /home/pkgeval/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:7
  Test threw exception
  Expression: isfile(SNLI.train_tsv())
  DataDeps.DisabledError("DataDeps download disabled, as we appear to be in a CI environment, and the environment variable `DATADEPS_ALWAYS_ACCEPT` is not set.\nIf this is indeed running in a headless CI environment, then set the `DATADEPS_ALWAYS_ACCEPT` environment variable to `true` to bypass the accept download prompt (if you do wish to always accept.)\nIf not, then either unset the `CI` environment variable from true, or set `DATADEPS_ALWAYS_ACCEPT` to `false` for the normal prompt behaviour.")
  Stacktrace:
    [1] ensure_download_permitted()
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:26
    [2] download(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, localdir::String; remotepath::String, i_accept_the_terms_of_use::Nothing, skip_checksum::Bool)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70
    [3] download
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70 [inlined]
    [4] handle_missing
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:10 [inlined]
    [5] _resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:83
    [6] resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:29
    [7] resolve(datadep_name::String, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:54
    [8] resolve
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:73 [inlined]
    [9] snli_file
      @ ~/.julia/packages/NLIDatasets/D0tQz/src/snli.jl:28 [inlined]
   [10] train_tsv()
      @ NLIDatasets.SNLI ~/.julia/packages/NLIDatasets/D0tQz/src/snli.jl:30
   [11] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:7 [inlined]
   [12] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [13] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:6 [inlined]
   [14] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [15] top-level scope
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:5
SNLI: Error During Test at /home/pkgeval/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:8
  Test threw exception
  Expression: isfile(SNLI.train_jsonl())
  DataDeps.DisabledError("DataDeps download disabled, as we appear to be in a CI environment, and the environment variable `DATADEPS_ALWAYS_ACCEPT` is not set.\nIf this is indeed running in a headless CI environment, then set the `DATADEPS_ALWAYS_ACCEPT` environment variable to `true` to bypass the accept download prompt (if you do wish to always accept.)\nIf not, then either unset the `CI` environment variable from true, or set `DATADEPS_ALWAYS_ACCEPT` to `false` for the normal prompt behaviour.")
  Stacktrace:
    [1] ensure_download_permitted()
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:26
    [2] download(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, localdir::String; remotepath::String, i_accept_the_terms_of_use::Nothing, skip_checksum::Bool)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70
    [3] download
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70 [inlined]
    [4] handle_missing
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:10 [inlined]
    [5] _resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:83
    [6] resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:29
    [7] resolve(datadep_name::String, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:54
    [8] resolve
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:73 [inlined]
    [9] snli_file
      @ ~/.julia/packages/NLIDatasets/D0tQz/src/snli.jl:28 [inlined]
   [10] train_jsonl()
      @ NLIDatasets.SNLI ~/.julia/packages/NLIDatasets/D0tQz/src/snli.jl:31
   [11] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:8 [inlined]
   [12] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [13] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:6 [inlined]
   [14] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [15] top-level scope
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:5
SNLI: Error During Test at /home/pkgeval/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:9
  Test threw exception
  Expression: isfile(SNLI.dev_tsv())
  DataDeps.DisabledError("DataDeps download disabled, as we appear to be in a CI environment, and the environment variable `DATADEPS_ALWAYS_ACCEPT` is not set.\nIf this is indeed running in a headless CI environment, then set the `DATADEPS_ALWAYS_ACCEPT` environment variable to `true` to bypass the accept download prompt (if you do wish to always accept.)\nIf not, then either unset the `CI` environment variable from true, or set `DATADEPS_ALWAYS_ACCEPT` to `false` for the normal prompt behaviour.")
  Stacktrace:
    [1] ensure_download_permitted()
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:26
    [2] download(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, localdir::String; remotepath::String, i_accept_the_terms_of_use::Nothing, skip_checksum::Bool)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70
    [3] download
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70 [inlined]
    [4] handle_missing
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:10 [inlined]
    [5] _resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:83
    [6] resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:29
    [7] resolve(datadep_name::String, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:54
    [8] resolve
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:73 [inlined]
    [9] snli_file
      @ ~/.julia/packages/NLIDatasets/D0tQz/src/snli.jl:28 [inlined]
   [10] dev_tsv()
      @ NLIDatasets.SNLI ~/.julia/packages/NLIDatasets/D0tQz/src/snli.jl:32
   [11] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:9 [inlined]
   [12] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [13] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:6 [inlined]
   [14] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [15] top-level scope
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:5
SNLI: Error During Test at /home/pkgeval/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:10
  Test threw exception
  Expression: isfile(SNLI.dev_jsonl())
  DataDeps.DisabledError("DataDeps download disabled, as we appear to be in a CI environment, and the environment variable `DATADEPS_ALWAYS_ACCEPT` is not set.\nIf this is indeed running in a headless CI environment, then set the `DATADEPS_ALWAYS_ACCEPT` environment variable to `true` to bypass the accept download prompt (if you do wish to always accept.)\nIf not, then either unset the `CI` environment variable from true, or set `DATADEPS_ALWAYS_ACCEPT` to `false` for the normal prompt behaviour.")
  Stacktrace:
    [1] ensure_download_permitted()
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:26
    [2] download(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, localdir::String; remotepath::String, i_accept_the_terms_of_use::Nothing, skip_checksum::Bool)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70
    [3] download
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70 [inlined]
    [4] handle_missing
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:10 [inlined]
    [5] _resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:83
    [6] resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:29
    [7] resolve(datadep_name::String, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:54
    [8] resolve
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:73 [inlined]
    [9] snli_file
      @ ~/.julia/packages/NLIDatasets/D0tQz/src/snli.jl:28 [inlined]
   [10] dev_jsonl()
      @ NLIDatasets.SNLI ~/.julia/packages/NLIDatasets/D0tQz/src/snli.jl:33
   [11] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:10 [inlined]
   [12] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [13] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:6 [inlined]
   [14] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [15] top-level scope
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:5
SNLI: Error During Test at /home/pkgeval/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:11
  Test threw exception
  Expression: isfile(SNLI.test_tsv())
  DataDeps.DisabledError("DataDeps download disabled, as we appear to be in a CI environment, and the environment variable `DATADEPS_ALWAYS_ACCEPT` is not set.\nIf this is indeed running in a headless CI environment, then set the `DATADEPS_ALWAYS_ACCEPT` environment variable to `true` to bypass the accept download prompt (if you do wish to always accept.)\nIf not, then either unset the `CI` environment variable from true, or set `DATADEPS_ALWAYS_ACCEPT` to `false` for the normal prompt behaviour.")
  Stacktrace:
    [1] ensure_download_permitted()
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:26
    [2] download(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, localdir::String; remotepath::String, i_accept_the_terms_of_use::Nothing, skip_checksum::Bool)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70
    [3] download
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70 [inlined]
    [4] handle_missing
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:10 [inlined]
    [5] _resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:83
    [6] resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:29
    [7] resolve(datadep_name::String, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:54
    [8] resolve
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:73 [inlined]
    [9] snli_file
      @ ~/.julia/packages/NLIDatasets/D0tQz/src/snli.jl:28 [inlined]
   [10] test_tsv()
      @ NLIDatasets.SNLI ~/.julia/packages/NLIDatasets/D0tQz/src/snli.jl:34
   [11] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:11 [inlined]
   [12] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [13] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:6 [inlined]
   [14] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [15] top-level scope
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:5
SNLI: Error During Test at /home/pkgeval/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:12
  Test threw exception
  Expression: isfile(SNLI.test_jsonl())
  DataDeps.DisabledError("DataDeps download disabled, as we appear to be in a CI environment, and the environment variable `DATADEPS_ALWAYS_ACCEPT` is not set.\nIf this is indeed running in a headless CI environment, then set the `DATADEPS_ALWAYS_ACCEPT` environment variable to `true` to bypass the accept download prompt (if you do wish to always accept.)\nIf not, then either unset the `CI` environment variable from true, or set `DATADEPS_ALWAYS_ACCEPT` to `false` for the normal prompt behaviour.")
  Stacktrace:
    [1] ensure_download_permitted()
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:26
    [2] download(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, localdir::String; remotepath::String, i_accept_the_terms_of_use::Nothing, skip_checksum::Bool)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70
    [3] download
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70 [inlined]
    [4] handle_missing
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:10 [inlined]
    [5] _resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:83
    [6] resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:29
    [7] resolve(datadep_name::String, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:54
    [8] resolve
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:73 [inlined]
    [9] snli_file
      @ ~/.julia/packages/NLIDatasets/D0tQz/src/snli.jl:28 [inlined]
   [10] test_jsonl()
      @ NLIDatasets.SNLI ~/.julia/packages/NLIDatasets/D0tQz/src/snli.jl:35
   [11] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:12 [inlined]
   [12] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [13] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:6 [inlined]
   [14] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [15] top-level scope
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:5
MultiNLI: Error During Test at /home/pkgeval/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:17
  Test threw exception
  Expression: isfile(MultiNLI.train_tsv())
  DataDeps.DisabledError("DataDeps download disabled, as we appear to be in a CI environment, and the environment variable `DATADEPS_ALWAYS_ACCEPT` is not set.\nIf this is indeed running in a headless CI environment, then set the `DATADEPS_ALWAYS_ACCEPT` environment variable to `true` to bypass the accept download prompt (if you do wish to always accept.)\nIf not, then either unset the `CI` environment variable from true, or set `DATADEPS_ALWAYS_ACCEPT` to `false` for the normal prompt behaviour.")
  Stacktrace:
    [1] ensure_download_permitted()
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:26
    [2] download(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, localdir::String; remotepath::String, i_accept_the_terms_of_use::Nothing, skip_checksum::Bool)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70
    [3] download
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70 [inlined]
    [4] handle_missing
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:10 [inlined]
    [5] _resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:83
    [6] resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:29
    [7] resolve(datadep_name::String, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:54
    [8] resolve
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:73 [inlined]
    [9] multinli_file
      @ ~/.julia/packages/NLIDatasets/D0tQz/src/multinli.jl:24 [inlined]
   [10] train_tsv()
      @ NLIDatasets.MultiNLI ~/.julia/packages/NLIDatasets/D0tQz/src/multinli.jl:26
   [11] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:17 [inlined]
   [12] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [13] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:16 [inlined]
   [14] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [15] top-level scope
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:5
MultiNLI: Error During Test at /home/pkgeval/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:18
  Test threw exception
  Expression: isfile(MultiNLI.train_jsonl())
  DataDeps.DisabledError("DataDeps download disabled, as we appear to be in a CI environment, and the environment variable `DATADEPS_ALWAYS_ACCEPT` is not set.\nIf this is indeed running in a headless CI environment, then set the `DATADEPS_ALWAYS_ACCEPT` environment variable to `true` to bypass the accept download prompt (if you do wish to always accept.)\nIf not, then either unset the `CI` environment variable from true, or set `DATADEPS_ALWAYS_ACCEPT` to `false` for the normal prompt behaviour.")
  Stacktrace:
    [1] ensure_download_permitted()
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:26
    [2] download(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, localdir::String; remotepath::String, i_accept_the_terms_of_use::Nothing, skip_checksum::Bool)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70
    [3] download
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70 [inlined]
    [4] handle_missing
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:10 [inlined]
    [5] _resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:83
    [6] resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:29
    [7] resolve(datadep_name::String, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:54
    [8] resolve
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:73 [inlined]
    [9] multinli_file
      @ ~/.julia/packages/NLIDatasets/D0tQz/src/multinli.jl:24 [inlined]
   [10] train_jsonl()
      @ NLIDatasets.MultiNLI ~/.julia/packages/NLIDatasets/D0tQz/src/multinli.jl:27
   [11] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:18 [inlined]
   [12] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [13] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:16 [inlined]
   [14] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [15] top-level scope
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:5
MultiNLI: Error During Test at /home/pkgeval/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:19
  Test threw exception
  Expression: isfile(MultiNLI.dev_matched_tsv())
  DataDeps.DisabledError("DataDeps download disabled, as we appear to be in a CI environment, and the environment variable `DATADEPS_ALWAYS_ACCEPT` is not set.\nIf this is indeed running in a headless CI environment, then set the `DATADEPS_ALWAYS_ACCEPT` environment variable to `true` to bypass the accept download prompt (if you do wish to always accept.)\nIf not, then either unset the `CI` environment variable from true, or set `DATADEPS_ALWAYS_ACCEPT` to `false` for the normal prompt behaviour.")
  Stacktrace:
    [1] ensure_download_permitted()
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:26
    [2] download(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, localdir::String; remotepath::String, i_accept_the_terms_of_use::Nothing, skip_checksum::Bool)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70
    [3] download
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70 [inlined]
    [4] handle_missing
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:10 [inlined]
    [5] _resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:83
    [6] resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:29
    [7] resolve(datadep_name::String, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:54
    [8] resolve
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:73 [inlined]
    [9] multinli_file
      @ ~/.julia/packages/NLIDatasets/D0tQz/src/multinli.jl:24 [inlined]
   [10] dev_matched_tsv()
      @ NLIDatasets.MultiNLI ~/.julia/packages/NLIDatasets/D0tQz/src/multinli.jl:28
   [11] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:19 [inlined]
   [12] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [13] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:16 [inlined]
   [14] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [15] top-level scope
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:5
MultiNLI: Error During Test at /home/pkgeval/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:20
  Test threw exception
  Expression: isfile(MultiNLI.dev_matched_jsonl())
  DataDeps.DisabledError("DataDeps download disabled, as we appear to be in a CI environment, and the environment variable `DATADEPS_ALWAYS_ACCEPT` is not set.\nIf this is indeed running in a headless CI environment, then set the `DATADEPS_ALWAYS_ACCEPT` environment variable to `true` to bypass the accept download prompt (if you do wish to always accept.)\nIf not, then either unset the `CI` environment variable from true, or set `DATADEPS_ALWAYS_ACCEPT` to `false` for the normal prompt behaviour.")
  Stacktrace:
    [1] ensure_download_permitted()
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:26
    [2] download(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, localdir::String; remotepath::String, i_accept_the_terms_of_use::Nothing, skip_checksum::Bool)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70
    [3] download
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70 [inlined]
    [4] handle_missing
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:10 [inlined]
    [5] _resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:83
    [6] resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:29
    [7] resolve(datadep_name::String, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:54
    [8] resolve
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:73 [inlined]
    [9] multinli_file
      @ ~/.julia/packages/NLIDatasets/D0tQz/src/multinli.jl:24 [inlined]
   [10] dev_matched_jsonl()
      @ NLIDatasets.MultiNLI ~/.julia/packages/NLIDatasets/D0tQz/src/multinli.jl:29
   [11] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:20 [inlined]
   [12] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [13] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:16 [inlined]
   [14] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [15] top-level scope
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:5
MultiNLI: Error During Test at /home/pkgeval/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:21
  Test threw exception
  Expression: isfile(MultiNLI.dev_mismatched_tsv())
  DataDeps.DisabledError("DataDeps download disabled, as we appear to be in a CI environment, and the environment variable `DATADEPS_ALWAYS_ACCEPT` is not set.\nIf this is indeed running in a headless CI environment, then set the `DATADEPS_ALWAYS_ACCEPT` environment variable to `true` to bypass the accept download prompt (if you do wish to always accept.)\nIf not, then either unset the `CI` environment variable from true, or set `DATADEPS_ALWAYS_ACCEPT` to `false` for the normal prompt behaviour.")
  Stacktrace:
    [1] ensure_download_permitted()
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:26
    [2] download(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, localdir::String; remotepath::String, i_accept_the_terms_of_use::Nothing, skip_checksum::Bool)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70
    [3] download
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70 [inlined]
    [4] handle_missing
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:10 [inlined]
    [5] _resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:83
    [6] resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:29
    [7] resolve(datadep_name::String, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:54
    [8] resolve
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:73 [inlined]
    [9] multinli_file
      @ ~/.julia/packages/NLIDatasets/D0tQz/src/multinli.jl:24 [inlined]
   [10] dev_mismatched_tsv()
      @ NLIDatasets.MultiNLI ~/.julia/packages/NLIDatasets/D0tQz/src/multinli.jl:30
   [11] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:21 [inlined]
   [12] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [13] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:16 [inlined]
   [14] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [15] top-level scope
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:5
MultiNLI: Error During Test at /home/pkgeval/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:22
  Test threw exception
  Expression: isfile(MultiNLI.dev_mismatched_jsonl())
  DataDeps.DisabledError("DataDeps download disabled, as we appear to be in a CI environment, and the environment variable `DATADEPS_ALWAYS_ACCEPT` is not set.\nIf this is indeed running in a headless CI environment, then set the `DATADEPS_ALWAYS_ACCEPT` environment variable to `true` to bypass the accept download prompt (if you do wish to always accept.)\nIf not, then either unset the `CI` environment variable from true, or set `DATADEPS_ALWAYS_ACCEPT` to `false` for the normal prompt behaviour.")
  Stacktrace:
    [1] ensure_download_permitted()
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:26
    [2] download(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, localdir::String; remotepath::String, i_accept_the_terms_of_use::Nothing, skip_checksum::Bool)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70
    [3] download
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70 [inlined]
    [4] handle_missing
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:10 [inlined]
    [5] _resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:83
    [6] resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:29
    [7] resolve(datadep_name::String, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:54
    [8] resolve
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:73 [inlined]
    [9] multinli_file
      @ ~/.julia/packages/NLIDatasets/D0tQz/src/multinli.jl:24 [inlined]
   [10] dev_mismatched_jsonl()
      @ NLIDatasets.MultiNLI ~/.julia/packages/NLIDatasets/D0tQz/src/multinli.jl:31
   [11] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:22 [inlined]
   [12] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [13] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:16 [inlined]
   [14] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [15] top-level scope
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:5
XNLI: Error During Test at /home/pkgeval/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:27
  Test threw exception
  Expression: isfile(XNLI.dev_tsv())
  DataDeps.DisabledError("DataDeps download disabled, as we appear to be in a CI environment, and the environment variable `DATADEPS_ALWAYS_ACCEPT` is not set.\nIf this is indeed running in a headless CI environment, then set the `DATADEPS_ALWAYS_ACCEPT` environment variable to `true` to bypass the accept download prompt (if you do wish to always accept.)\nIf not, then either unset the `CI` environment variable from true, or set `DATADEPS_ALWAYS_ACCEPT` to `false` for the normal prompt behaviour.")
  Stacktrace:
    [1] ensure_download_permitted()
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:26
    [2] download(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, localdir::String; remotepath::String, i_accept_the_terms_of_use::Nothing, skip_checksum::Bool)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70
    [3] download
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70 [inlined]
    [4] handle_missing
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:10 [inlined]
    [5] _resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:83
    [6] resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:29
    [7] resolve(datadep_name::String, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:54
    [8] resolve
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:73 [inlined]
    [9] xnlifile
      @ ~/.julia/packages/NLIDatasets/D0tQz/src/xnli.jl:20 [inlined]
   [10] dev_tsv()
      @ NLIDatasets.XNLI ~/.julia/packages/NLIDatasets/D0tQz/src/xnli.jl:22
   [11] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:27 [inlined]
   [12] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [13] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:26 [inlined]
   [14] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [15] top-level scope
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:5
XNLI: Error During Test at /home/pkgeval/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:28
  Test threw exception
  Expression: isfile(XNLI.dev_jsonl())
  DataDeps.DisabledError("DataDeps download disabled, as we appear to be in a CI environment, and the environment variable `DATADEPS_ALWAYS_ACCEPT` is not set.\nIf this is indeed running in a headless CI environment, then set the `DATADEPS_ALWAYS_ACCEPT` environment variable to `true` to bypass the accept download prompt (if you do wish to always accept.)\nIf not, then either unset the `CI` environment variable from true, or set `DATADEPS_ALWAYS_ACCEPT` to `false` for the normal prompt behaviour.")
  Stacktrace:
    [1] ensure_download_permitted()
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:26
    [2] download(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, localdir::String; remotepath::String, i_accept_the_terms_of_use::Nothing, skip_checksum::Bool)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70
    [3] download
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70 [inlined]
    [4] handle_missing
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:10 [inlined]
    [5] _resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:83
    [6] resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:29
    [7] resolve(datadep_name::String, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:54
    [8] resolve
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:73 [inlined]
    [9] xnlifile
      @ ~/.julia/packages/NLIDatasets/D0tQz/src/xnli.jl:20 [inlined]
   [10] dev_jsonl()
      @ NLIDatasets.XNLI ~/.julia/packages/NLIDatasets/D0tQz/src/xnli.jl:23
   [11] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:28 [inlined]
   [12] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [13] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:26 [inlined]
   [14] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [15] top-level scope
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:5
XNLI: Error During Test at /home/pkgeval/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:29
  Test threw exception
  Expression: isfile(XNLI.test_tsv())
  DataDeps.DisabledError("DataDeps download disabled, as we appear to be in a CI environment, and the environment variable `DATADEPS_ALWAYS_ACCEPT` is not set.\nIf this is indeed running in a headless CI environment, then set the `DATADEPS_ALWAYS_ACCEPT` environment variable to `true` to bypass the accept download prompt (if you do wish to always accept.)\nIf not, then either unset the `CI` environment variable from true, or set `DATADEPS_ALWAYS_ACCEPT` to `false` for the normal prompt behaviour.")
  Stacktrace:
    [1] ensure_download_permitted()
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:26
    [2] download(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, localdir::String; remotepath::String, i_accept_the_terms_of_use::Nothing, skip_checksum::Bool)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70
    [3] download
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70 [inlined]
    [4] handle_missing
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:10 [inlined]
    [5] _resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:83
    [6] resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:29
    [7] resolve(datadep_name::String, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:54
    [8] resolve
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:73 [inlined]
    [9] xnlifile
      @ ~/.julia/packages/NLIDatasets/D0tQz/src/xnli.jl:20 [inlined]
   [10] test_tsv()
      @ NLIDatasets.XNLI ~/.julia/packages/NLIDatasets/D0tQz/src/xnli.jl:24
   [11] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:29 [inlined]
   [12] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [13] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:26 [inlined]
   [14] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [15] top-level scope
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:5
XNLI: Error During Test at /home/pkgeval/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:30
  Test threw exception
  Expression: isfile(XNLI.test_jsonl())
  DataDeps.DisabledError("DataDeps download disabled, as we appear to be in a CI environment, and the environment variable `DATADEPS_ALWAYS_ACCEPT` is not set.\nIf this is indeed running in a headless CI environment, then set the `DATADEPS_ALWAYS_ACCEPT` environment variable to `true` to bypass the accept download prompt (if you do wish to always accept.)\nIf not, then either unset the `CI` environment variable from true, or set `DATADEPS_ALWAYS_ACCEPT` to `false` for the normal prompt behaviour.")
  Stacktrace:
    [1] ensure_download_permitted()
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:26
    [2] download(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, localdir::String; remotepath::String, i_accept_the_terms_of_use::Nothing, skip_checksum::Bool)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70
    [3] download
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70 [inlined]
    [4] handle_missing
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:10 [inlined]
    [5] _resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:83
    [6] resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:29
    [7] resolve(datadep_name::String, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:54
    [8] resolve
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:73 [inlined]
    [9] xnlifile
      @ ~/.julia/packages/NLIDatasets/D0tQz/src/xnli.jl:20 [inlined]
   [10] test_jsonl()
      @ NLIDatasets.XNLI ~/.julia/packages/NLIDatasets/D0tQz/src/xnli.jl:25
   [11] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:30 [inlined]
   [12] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [13] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:26 [inlined]
   [14] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [15] top-level scope
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:5
SciTail: Error During Test at /home/pkgeval/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:35
  Test threw exception
  Expression: isfile(SciTail.train_tsv())
  DataDeps.DisabledError("DataDeps download disabled, as we appear to be in a CI environment, and the environment variable `DATADEPS_ALWAYS_ACCEPT` is not set.\nIf this is indeed running in a headless CI environment, then set the `DATADEPS_ALWAYS_ACCEPT` environment variable to `true` to bypass the accept download prompt (if you do wish to always accept.)\nIf not, then either unset the `CI` environment variable from true, or set `DATADEPS_ALWAYS_ACCEPT` to `false` for the normal prompt behaviour.")
  Stacktrace:
    [1] ensure_download_permitted()
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:26
    [2] download(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, localdir::String; remotepath::String, i_accept_the_terms_of_use::Nothing, skip_checksum::Bool)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70
    [3] download
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70 [inlined]
    [4] handle_missing
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:10 [inlined]
    [5] _resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:83
    [6] resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:29
    [7] resolve(datadep_name::String, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:54
    [8] resolve
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:73 [inlined]
    [9] scitail_base
      @ ~/.julia/packages/NLIDatasets/D0tQz/src/scitail.jl:23 [inlined]
   [10] scitail_tsv(filename::String)
      @ NLIDatasets.SciTail ~/.julia/packages/NLIDatasets/D0tQz/src/scitail.jl:25
   [11] train_tsv()
      @ NLIDatasets.SciTail ~/.julia/packages/NLIDatasets/D0tQz/src/scitail.jl:27
   [12] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:35 [inlined]
   [13] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [14] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:34 [inlined]
   [15] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [16] top-level scope
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:5
SciTail: Error During Test at /home/pkgeval/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:36
  Test threw exception
  Expression: isfile(SciTail.train_jsonl())
  DataDeps.DisabledError("DataDeps download disabled, as we appear to be in a CI environment, and the environment variable `DATADEPS_ALWAYS_ACCEPT` is not set.\nIf this is indeed running in a headless CI environment, then set the `DATADEPS_ALWAYS_ACCEPT` environment variable to `true` to bypass the accept download prompt (if you do wish to always accept.)\nIf not, then either unset the `CI` environment variable from true, or set `DATADEPS_ALWAYS_ACCEPT` to `false` for the normal prompt behaviour.")
  Stacktrace:
    [1] ensure_download_permitted()
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:26
    [2] download(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, localdir::String; remotepath::String, i_accept_the_terms_of_use::Nothing, skip_checksum::Bool)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70
    [3] download
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70 [inlined]
    [4] handle_missing
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:10 [inlined]
    [5] _resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:83
    [6] resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:29
    [7] resolve(datadep_name::String, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:54
    [8] resolve
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:73 [inlined]
    [9] scitail_base
      @ ~/.julia/packages/NLIDatasets/D0tQz/src/scitail.jl:23 [inlined]
   [10] scitail_jsonl(filename::String)
      @ NLIDatasets.SciTail ~/.julia/packages/NLIDatasets/D0tQz/src/scitail.jl:24
   [11] train_jsonl()
      @ NLIDatasets.SciTail ~/.julia/packages/NLIDatasets/D0tQz/src/scitail.jl:28
   [12] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:36 [inlined]
   [13] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [14] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:34 [inlined]
   [15] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [16] top-level scope
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:5
SciTail: Error During Test at /home/pkgeval/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:37
  Test threw exception
  Expression: isfile(SciTail.dev_tsv())
  DataDeps.DisabledError("DataDeps download disabled, as we appear to be in a CI environment, and the environment variable `DATADEPS_ALWAYS_ACCEPT` is not set.\nIf this is indeed running in a headless CI environment, then set the `DATADEPS_ALWAYS_ACCEPT` environment variable to `true` to bypass the accept download prompt (if you do wish to always accept.)\nIf not, then either unset the `CI` environment variable from true, or set `DATADEPS_ALWAYS_ACCEPT` to `false` for the normal prompt behaviour.")
  Stacktrace:
    [1] ensure_download_permitted()
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:26
    [2] download(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, localdir::String; remotepath::String, i_accept_the_terms_of_use::Nothing, skip_checksum::Bool)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70
    [3] download
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70 [inlined]
    [4] handle_missing
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:10 [inlined]
    [5] _resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:83
    [6] resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:29
    [7] resolve(datadep_name::String, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:54
    [8] resolve
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:73 [inlined]
    [9] scitail_base
      @ ~/.julia/packages/NLIDatasets/D0tQz/src/scitail.jl:23 [inlined]
   [10] scitail_tsv(filename::String)
      @ NLIDatasets.SciTail ~/.julia/packages/NLIDatasets/D0tQz/src/scitail.jl:25
   [11] dev_tsv()
      @ NLIDatasets.SciTail ~/.julia/packages/NLIDatasets/D0tQz/src/scitail.jl:29
   [12] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:37 [inlined]
   [13] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [14] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:34 [inlined]
   [15] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [16] top-level scope
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:5
SciTail: Error During Test at /home/pkgeval/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:38
  Test threw exception
  Expression: isfile(SciTail.dev_jsonl())
  DataDeps.DisabledError("DataDeps download disabled, as we appear to be in a CI environment, and the environment variable `DATADEPS_ALWAYS_ACCEPT` is not set.\nIf this is indeed running in a headless CI environment, then set the `DATADEPS_ALWAYS_ACCEPT` environment variable to `true` to bypass the accept download prompt (if you do wish to always accept.)\nIf not, then either unset the `CI` environment variable from true, or set `DATADEPS_ALWAYS_ACCEPT` to `false` for the normal prompt behaviour.")
  Stacktrace:
    [1] ensure_download_permitted()
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:26
    [2] download(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, localdir::String; remotepath::String, i_accept_the_terms_of_use::Nothing, skip_checksum::Bool)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70
    [3] download
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70 [inlined]
    [4] handle_missing
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:10 [inlined]
    [5] _resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:83
    [6] resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:29
    [7] resolve(datadep_name::String, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:54
    [8] resolve
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:73 [inlined]
    [9] scitail_base
      @ ~/.julia/packages/NLIDatasets/D0tQz/src/scitail.jl:23 [inlined]
   [10] scitail_jsonl(filename::String)
      @ NLIDatasets.SciTail ~/.julia/packages/NLIDatasets/D0tQz/src/scitail.jl:24
   [11] dev_jsonl()
      @ NLIDatasets.SciTail ~/.julia/packages/NLIDatasets/D0tQz/src/scitail.jl:30
   [12] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:38 [inlined]
   [13] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [14] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:34 [inlined]
   [15] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [16] top-level scope
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:5
SciTail: Error During Test at /home/pkgeval/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:39
  Test threw exception
  Expression: isfile(SciTail.test_tsv())
  DataDeps.DisabledError("DataDeps download disabled, as we appear to be in a CI environment, and the environment variable `DATADEPS_ALWAYS_ACCEPT` is not set.\nIf this is indeed running in a headless CI environment, then set the `DATADEPS_ALWAYS_ACCEPT` environment variable to `true` to bypass the accept download prompt (if you do wish to always accept.)\nIf not, then either unset the `CI` environment variable from true, or set `DATADEPS_ALWAYS_ACCEPT` to `false` for the normal prompt behaviour.")
  Stacktrace:
    [1] ensure_download_permitted()
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:26
    [2] download(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, localdir::String; remotepath::String, i_accept_the_terms_of_use::Nothing, skip_checksum::Bool)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70
    [3] download
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70 [inlined]
    [4] handle_missing
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:10 [inlined]
    [5] _resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:83
    [6] resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:29
    [7] resolve(datadep_name::String, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:54
    [8] resolve
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:73 [inlined]
    [9] scitail_base
      @ ~/.julia/packages/NLIDatasets/D0tQz/src/scitail.jl:23 [inlined]
   [10] scitail_tsv(filename::String)
      @ NLIDatasets.SciTail ~/.julia/packages/NLIDatasets/D0tQz/src/scitail.jl:25
   [11] test_tsv()
      @ NLIDatasets.SciTail ~/.julia/packages/NLIDatasets/D0tQz/src/scitail.jl:31
   [12] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:39 [inlined]
   [13] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [14] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:34 [inlined]
   [15] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [16] top-level scope
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:5
SciTail: Error During Test at /home/pkgeval/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:40
  Test threw exception
  Expression: isfile(SciTail.test_jsonl())
  DataDeps.DisabledError("DataDeps download disabled, as we appear to be in a CI environment, and the environment variable `DATADEPS_ALWAYS_ACCEPT` is not set.\nIf this is indeed running in a headless CI environment, then set the `DATADEPS_ALWAYS_ACCEPT` environment variable to `true` to bypass the accept download prompt (if you do wish to always accept.)\nIf not, then either unset the `CI` environment variable from true, or set `DATADEPS_ALWAYS_ACCEPT` to `false` for the normal prompt behaviour.")
  Stacktrace:
    [1] ensure_download_permitted()
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:26
    [2] download(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, localdir::String; remotepath::String, i_accept_the_terms_of_use::Nothing, skip_checksum::Bool)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70
    [3] download
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70 [inlined]
    [4] handle_missing
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:10 [inlined]
    [5] _resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:83
    [6] resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:29
    [7] resolve(datadep_name::String, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:54
    [8] resolve
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:73 [inlined]
    [9] scitail_base
      @ ~/.julia/packages/NLIDatasets/D0tQz/src/scitail.jl:23 [inlined]
   [10] scitail_jsonl(filename::String)
      @ NLIDatasets.SciTail ~/.julia/packages/NLIDatasets/D0tQz/src/scitail.jl:24
   [11] test_jsonl()
      @ NLIDatasets.SciTail ~/.julia/packages/NLIDatasets/D0tQz/src/scitail.jl:32
   [12] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:40 [inlined]
   [13] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [14] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:34 [inlined]
   [15] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [16] top-level scope
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:5
HANS: Error During Test at /home/pkgeval/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:45
  Test threw exception
  Expression: isfile(HANS.test_tsv())
  DataDeps.DisabledError("DataDeps download disabled, as we appear to be in a CI environment, and the environment variable `DATADEPS_ALWAYS_ACCEPT` is not set.\nIf this is indeed running in a headless CI environment, then set the `DATADEPS_ALWAYS_ACCEPT` environment variable to `true` to bypass the accept download prompt (if you do wish to always accept.)\nIf not, then either unset the `CI` environment variable from true, or set `DATADEPS_ALWAYS_ACCEPT` to `false` for the normal prompt behaviour.")
  Stacktrace:
    [1] ensure_download_permitted()
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:26
    [2] download(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, localdir::String; remotepath::String, i_accept_the_terms_of_use::Nothing, skip_checksum::Bool)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70
    [3] download
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70 [inlined]
    [4] handle_missing
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:10 [inlined]
    [5] _resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:83
    [6] resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:29
    [7] resolve(datadep_name::String, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:54
    [8] resolve
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:73 [inlined]
    [9] hansfile
      @ ~/.julia/packages/NLIDatasets/D0tQz/src/hans.jl:25 [inlined]
   [10] test_tsv()
      @ NLIDatasets.HANS ~/.julia/packages/NLIDatasets/D0tQz/src/hans.jl:28
   [11] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:45 [inlined]
   [12] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [13] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:44 [inlined]
   [14] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [15] top-level scope
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:5
Breaking_NLI: Error During Test at /home/pkgeval/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:50
  Test threw exception
  Expression: isfile(BreakingNLI.test_jsonl())
  DataDeps.DisabledError("DataDeps download disabled, as we appear to be in a CI environment, and the environment variable `DATADEPS_ALWAYS_ACCEPT` is not set.\nIf this is indeed running in a headless CI environment, then set the `DATADEPS_ALWAYS_ACCEPT` environment variable to `true` to bypass the accept download prompt (if you do wish to always accept.)\nIf not, then either unset the `CI` environment variable from true, or set `DATADEPS_ALWAYS_ACCEPT` to `false` for the normal prompt behaviour.")
  Stacktrace:
    [1] ensure_download_permitted()
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:26
    [2] download(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), NLIDatasets.BreakingNLI.var"#1#2"}, localdir::String; remotepath::String, i_accept_the_terms_of_use::Nothing, skip_checksum::Bool)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70
    [3] download
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70 [inlined]
    [4] handle_missing
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:10 [inlined]
    [5] _resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), NLIDatasets.BreakingNLI.var"#1#2"}, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:83
    [6] resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), NLIDatasets.BreakingNLI.var"#1#2"}, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:29
    [7] resolve(datadep_name::String, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:54
    [8] resolve
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:73 [inlined]
    [9] test_jsonl()
      @ NLIDatasets.BreakingNLI ~/.julia/packages/NLIDatasets/D0tQz/src/breaking_nli.jl:25
   [10] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:50 [inlined]
   [11] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [12] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:49 [inlined]
   [13] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [14] top-level scope
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:5
ANLI: Error During Test at /home/pkgeval/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:55
  Test threw exception
  Expression: isfile(ANLI.R1_train_jsonl())
  DataDeps.DisabledError("DataDeps download disabled, as we appear to be in a CI environment, and the environment variable `DATADEPS_ALWAYS_ACCEPT` is not set.\nIf this is indeed running in a headless CI environment, then set the `DATADEPS_ALWAYS_ACCEPT` environment variable to `true` to bypass the accept download prompt (if you do wish to always accept.)\nIf not, then either unset the `CI` environment variable from true, or set `DATADEPS_ALWAYS_ACCEPT` to `false` for the normal prompt behaviour.")
  Stacktrace:
    [1] ensure_download_permitted()
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:26
    [2] download(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, localdir::String; remotepath::String, i_accept_the_terms_of_use::Nothing, skip_checksum::Bool)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70
    [3] download
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70 [inlined]
    [4] handle_missing
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:10 [inlined]
    [5] _resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:83
    [6] resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:29
    [7] resolve(datadep_name::String, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:54
    [8] resolve
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:73 [inlined]
    [9] anli_file
      @ ~/.julia/packages/NLIDatasets/D0tQz/src/anli.jl:24 [inlined]
   [10] R1_train_jsonl()
      @ NLIDatasets.ANLI ~/.julia/packages/NLIDatasets/D0tQz/src/anli.jl:26
   [11] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:55 [inlined]
   [12] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [13] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:54 [inlined]
   [14] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [15] top-level scope
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:5
ANLI: Error During Test at /home/pkgeval/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:56
  Test threw exception
  Expression: isfile(ANLI.R1_dev_jsonl())
  DataDeps.DisabledError("DataDeps download disabled, as we appear to be in a CI environment, and the environment variable `DATADEPS_ALWAYS_ACCEPT` is not set.\nIf this is indeed running in a headless CI environment, then set the `DATADEPS_ALWAYS_ACCEPT` environment variable to `true` to bypass the accept download prompt (if you do wish to always accept.)\nIf not, then either unset the `CI` environment variable from true, or set `DATADEPS_ALWAYS_ACCEPT` to `false` for the normal prompt behaviour.")
  Stacktrace:
    [1] ensure_download_permitted()
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:26
    [2] download(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, localdir::String; remotepath::String, i_accept_the_terms_of_use::Nothing, skip_checksum::Bool)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70
    [3] download
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70 [inlined]
    [4] handle_missing
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:10 [inlined]
    [5] _resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:83
    [6] resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:29
    [7] resolve(datadep_name::String, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:54
    [8] resolve
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:73 [inlined]
    [9] anli_file
      @ ~/.julia/packages/NLIDatasets/D0tQz/src/anli.jl:24 [inlined]
   [10] R1_dev_jsonl()
      @ NLIDatasets.ANLI ~/.julia/packages/NLIDatasets/D0tQz/src/anli.jl:27
   [11] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:56 [inlined]
   [12] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [13] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:54 [inlined]
   [14] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [15] top-level scope
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:5
ANLI: Error During Test at /home/pkgeval/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:57
  Test threw exception
  Expression: isfile(ANLI.R1_test_jsonl())
  DataDeps.DisabledError("DataDeps download disabled, as we appear to be in a CI environment, and the environment variable `DATADEPS_ALWAYS_ACCEPT` is not set.\nIf this is indeed running in a headless CI environment, then set the `DATADEPS_ALWAYS_ACCEPT` environment variable to `true` to bypass the accept download prompt (if you do wish to always accept.)\nIf not, then either unset the `CI` environment variable from true, or set `DATADEPS_ALWAYS_ACCEPT` to `false` for the normal prompt behaviour.")
  Stacktrace:
    [1] ensure_download_permitted()
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:26
    [2] download(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, localdir::String; remotepath::String, i_accept_the_terms_of_use::Nothing, skip_checksum::Bool)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70
    [3] download
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70 [inlined]
    [4] handle_missing
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:10 [inlined]
    [5] _resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:83
    [6] resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:29
    [7] resolve(datadep_name::String, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:54
    [8] resolve
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:73 [inlined]
    [9] anli_file
      @ ~/.julia/packages/NLIDatasets/D0tQz/src/anli.jl:24 [inlined]
   [10] R1_test_jsonl()
      @ NLIDatasets.ANLI ~/.julia/packages/NLIDatasets/D0tQz/src/anli.jl:28
   [11] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:57 [inlined]
   [12] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [13] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:54 [inlined]
   [14] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [15] top-level scope
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:5
ANLI: Error During Test at /home/pkgeval/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:58
  Test threw exception
  Expression: isfile(ANLI.R2_train_jsonl())
  DataDeps.DisabledError("DataDeps download disabled, as we appear to be in a CI environment, and the environment variable `DATADEPS_ALWAYS_ACCEPT` is not set.\nIf this is indeed running in a headless CI environment, then set the `DATADEPS_ALWAYS_ACCEPT` environment variable to `true` to bypass the accept download prompt (if you do wish to always accept.)\nIf not, then either unset the `CI` environment variable from true, or set `DATADEPS_ALWAYS_ACCEPT` to `false` for the normal prompt behaviour.")
  Stacktrace:
    [1] ensure_download_permitted()
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:26
    [2] download(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, localdir::String; remotepath::String, i_accept_the_terms_of_use::Nothing, skip_checksum::Bool)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70
    [3] download
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70 [inlined]
    [4] handle_missing
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:10 [inlined]
    [5] _resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:83
    [6] resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:29
    [7] resolve(datadep_name::String, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:54
    [8] resolve
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:73 [inlined]
    [9] anli_file
      @ ~/.julia/packages/NLIDatasets/D0tQz/src/anli.jl:24 [inlined]
   [10] R2_train_jsonl()
      @ NLIDatasets.ANLI ~/.julia/packages/NLIDatasets/D0tQz/src/anli.jl:29
   [11] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:58 [inlined]
   [12] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [13] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:54 [inlined]
   [14] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [15] top-level scope
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:5
ANLI: Error During Test at /home/pkgeval/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:59
  Test threw exception
  Expression: isfile(ANLI.R2_dev_jsonl())
  DataDeps.DisabledError("DataDeps download disabled, as we appear to be in a CI environment, and the environment variable `DATADEPS_ALWAYS_ACCEPT` is not set.\nIf this is indeed running in a headless CI environment, then set the `DATADEPS_ALWAYS_ACCEPT` environment variable to `true` to bypass the accept download prompt (if you do wish to always accept.)\nIf not, then either unset the `CI` environment variable from true, or set `DATADEPS_ALWAYS_ACCEPT` to `false` for the normal prompt behaviour.")
  Stacktrace:
    [1] ensure_download_permitted()
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:26
    [2] download(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, localdir::String; remotepath::String, i_accept_the_terms_of_use::Nothing, skip_checksum::Bool)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70
    [3] download
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70 [inlined]
    [4] handle_missing
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:10 [inlined]
    [5] _resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:83
    [6] resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:29
    [7] resolve(datadep_name::String, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:54
    [8] resolve
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:73 [inlined]
    [9] anli_file
      @ ~/.julia/packages/NLIDatasets/D0tQz/src/anli.jl:24 [inlined]
   [10] R2_dev_jsonl()
      @ NLIDatasets.ANLI ~/.julia/packages/NLIDatasets/D0tQz/src/anli.jl:30
   [11] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:59 [inlined]
   [12] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [13] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:54 [inlined]
   [14] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [15] top-level scope
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:5
ANLI: Error During Test at /home/pkgeval/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:60
  Test threw exception
  Expression: isfile(ANLI.R2_test_jsonl())
  DataDeps.DisabledError("DataDeps download disabled, as we appear to be in a CI environment, and the environment variable `DATADEPS_ALWAYS_ACCEPT` is not set.\nIf this is indeed running in a headless CI environment, then set the `DATADEPS_ALWAYS_ACCEPT` environment variable to `true` to bypass the accept download prompt (if you do wish to always accept.)\nIf not, then either unset the `CI` environment variable from true, or set `DATADEPS_ALWAYS_ACCEPT` to `false` for the normal prompt behaviour.")
  Stacktrace:
    [1] ensure_download_permitted()
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:26
    [2] download(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, localdir::String; remotepath::String, i_accept_the_terms_of_use::Nothing, skip_checksum::Bool)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70
    [3] download
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70 [inlined]
    [4] handle_missing
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:10 [inlined]
    [5] _resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:83
    [6] resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:29
    [7] resolve(datadep_name::String, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:54
    [8] resolve
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:73 [inlined]
    [9] anli_file
      @ ~/.julia/packages/NLIDatasets/D0tQz/src/anli.jl:24 [inlined]
   [10] R2_test_jsonl()
      @ NLIDatasets.ANLI ~/.julia/packages/NLIDatasets/D0tQz/src/anli.jl:31
   [11] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:60 [inlined]
   [12] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [13] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:54 [inlined]
   [14] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [15] top-level scope
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:5
ANLI: Error During Test at /home/pkgeval/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:61
  Test threw exception
  Expression: isfile(ANLI.R3_train_jsonl())
  DataDeps.DisabledError("DataDeps download disabled, as we appear to be in a CI environment, and the environment variable `DATADEPS_ALWAYS_ACCEPT` is not set.\nIf this is indeed running in a headless CI environment, then set the `DATADEPS_ALWAYS_ACCEPT` environment variable to `true` to bypass the accept download prompt (if you do wish to always accept.)\nIf not, then either unset the `CI` environment variable from true, or set `DATADEPS_ALWAYS_ACCEPT` to `false` for the normal prompt behaviour.")
  Stacktrace:
    [1] ensure_download_permitted()
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:26
    [2] download(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, localdir::String; remotepath::String, i_accept_the_terms_of_use::Nothing, skip_checksum::Bool)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70
    [3] download
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70 [inlined]
    [4] handle_missing
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:10 [inlined]
    [5] _resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:83
    [6] resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:29
    [7] resolve(datadep_name::String, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:54
    [8] resolve
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:73 [inlined]
    [9] anli_file
      @ ~/.julia/packages/NLIDatasets/D0tQz/src/anli.jl:24 [inlined]
   [10] R3_train_jsonl()
      @ NLIDatasets.ANLI ~/.julia/packages/NLIDatasets/D0tQz/src/anli.jl:32
   [11] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:61 [inlined]
   [12] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [13] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:54 [inlined]
   [14] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [15] top-level scope
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:5
ANLI: Error During Test at /home/pkgeval/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:62
  Test threw exception
  Expression: isfile(ANLI.R3_dev_jsonl())
  DataDeps.DisabledError("DataDeps download disabled, as we appear to be in a CI environment, and the environment variable `DATADEPS_ALWAYS_ACCEPT` is not set.\nIf this is indeed running in a headless CI environment, then set the `DATADEPS_ALWAYS_ACCEPT` environment variable to `true` to bypass the accept download prompt (if you do wish to always accept.)\nIf not, then either unset the `CI` environment variable from true, or set `DATADEPS_ALWAYS_ACCEPT` to `false` for the normal prompt behaviour.")
  Stacktrace:
    [1] ensure_download_permitted()
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:26
    [2] download(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, localdir::String; remotepath::String, i_accept_the_terms_of_use::Nothing, skip_checksum::Bool)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70
    [3] download
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70 [inlined]
    [4] handle_missing
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:10 [inlined]
    [5] _resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:83
    [6] resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:29
    [7] resolve(datadep_name::String, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:54
    [8] resolve
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:73 [inlined]
    [9] anli_file
      @ ~/.julia/packages/NLIDatasets/D0tQz/src/anli.jl:24 [inlined]
   [10] R3_dev_jsonl()
      @ NLIDatasets.ANLI ~/.julia/packages/NLIDatasets/D0tQz/src/anli.jl:33
   [11] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:62 [inlined]
   [12] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [13] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:54 [inlined]
   [14] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [15] top-level scope
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:5
ANLI: Error During Test at /home/pkgeval/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:63
  Test threw exception
  Expression: isfile(ANLI.R3_test_jsonl())
  DataDeps.DisabledError("DataDeps download disabled, as we appear to be in a CI environment, and the environment variable `DATADEPS_ALWAYS_ACCEPT` is not set.\nIf this is indeed running in a headless CI environment, then set the `DATADEPS_ALWAYS_ACCEPT` environment variable to `true` to bypass the accept download prompt (if you do wish to always accept.)\nIf not, then either unset the `CI` environment variable from true, or set `DATADEPS_ALWAYS_ACCEPT` to `false` for the normal prompt behaviour.")
  Stacktrace:
    [1] ensure_download_permitted()
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:26
    [2] download(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, localdir::String; remotepath::String, i_accept_the_terms_of_use::Nothing, skip_checksum::Bool)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70
    [3] download
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:70 [inlined]
    [4] handle_missing
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution_automatic.jl:10 [inlined]
    [5] _resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:83
    [6] resolve(datadep::DataDeps.DataDep{String, String, typeof(NLIDatasets.getzip), typeof(DataDeps.unpack)}, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:29
    [7] resolve(datadep_name::String, inner_filepath::String, calling_filepath::String)
      @ DataDeps ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:54
    [8] resolve
      @ ~/.julia/packages/DataDeps/gbyoa/src/resolution.jl:73 [inlined]
    [9] anli_file
      @ ~/.julia/packages/NLIDatasets/D0tQz/src/anli.jl:24 [inlined]
   [10] R3_test_jsonl()
      @ NLIDatasets.ANLI ~/.julia/packages/NLIDatasets/D0tQz/src/anli.jl:34
   [11] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:63 [inlined]
   [12] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [13] macro expansion
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:54 [inlined]
   [14] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [15] top-level scope
      @ ~/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:5
Test Summary:  | Error  Total
NLIDatasets.jl |    33     33
  SNLI         |     6      6
  MultiNLI     |     6      6
  XNLI         |     4      4
  SciTail      |     6      6
  HANS         |     1      1
  Breaking_NLI |     1      1
  ANLI         |     9      9
ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 33 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/NLIDatasets/D0tQz/test/runtests.jl:3

PkgEval failed: Package NLIDatasets errored during testing
Stacktrace:
  [1] pkgerror(msg::String)
    @ Pkg.Types /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1651
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:334
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:321
  [5] #test#62
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:71 [inlined]
  [6] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:70 [inlined]
  [7] #test#61
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [8] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67
 [10] test(pkg::String)
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67
 [11] top-level scope
    @ none:44
 [12] eval
    @ ./boot.jl:360 [inlined]
 [13] eval(x::Expr)
    @ Base.MainInclude ./client.jl:446
 [14] top-level scope
    @ none:1
 [15] eval(m::Module, e::Any)
    @ Core ./boot.jl:360
 [16] exec_options(opts::Base.JLOptions)
    @ Base ./client.jl:261
 [17] _start()
    @ Base ./client.jl:485


################################################################################
# PkgEval teardown: 2020-10-28T11:50:12.401
#


signal (15): Terminated
in expression starting at none:1
pthread_cond_wait at /lib/x86_64-linux-gnu/libpthread.so.0 (unknown line)
uv_cond_wait at /workspace/srcdir/libuv/src/unix/thread.c:847
jl_task_get_next at /workspace/srcdir/src/partr.c:508

CPU usage: 33.21s (28.65s user, 4.76s kernel)

Network usage:
- eth0: 428.861 KiB received, 32.493 KiB sent

Raw statistics: {"read":"2020-10-28T11:50:13.198500076Z","preread":"0001-01-01T00:00:00Z","pids_stats":{"current":46},"blkio_stats":{"io_service_bytes_recursive":[{"major":259,"minor":0,"op":"Read","value":0},{"major":259,"minor":0,"op":"Write","value":20480},{"major":259,"minor":0,"op":"Sync","value":0},{"major":259,"minor":0,"op":"Async","value":20480},{"major":259,"minor":0,"op":"Total","value":20480},{"major":253,"minor":2,"op":"Read","value":0},{"major":253,"minor":2,"op":"Write","value":20480},{"major":253,"minor":2,"op":"Sync","value":0},{"major":253,"minor":2,"op":"Async","value":20480},{"major":253,"minor":2,"op":"Total","value":20480}],"io_serviced_recursive":[{"major":259,"minor":0,"op":"Read","value":0},{"major":259,"minor":0,"op":"Write","value":5},{"major":259,"minor":0,"op":"Sync","value":0},{"major":259,"minor":0,"op":"Async","value":5},{"major":259,"minor":0,"op":"Total","value":5},{"major":253,"minor":2,"op":"Read","value":0},{"major":253,"minor":2,"op":"Write","value":5},{"major":253,"minor":2,"op":"Sync","value":0},{"major":253,"minor":2,"op":"Async","value":5},{"major":253,"minor":2,"op":"Total","value":5}],"io_queue_recursive":[],"io_service_time_recursive":[],"io_wait_time_recursive":[],"io_merged_recursive":[],"io_time_recursive":[],"sectors_recursive":[]},"num_procs":0,"storage_stats":{},"cpu_stats":{"cpu_usage":{"total_usage":33213382226,"percpu_usage":[86220734,213161045,90535866,102116410,0,16970,86090,37026956,8173432,1535720,49714249,127840,26446318,146913698,6456761,239379095,34457036,160459423,39994145,317860765,151113269,123713161,260071633,88170,415471,13269645,220519252,4710742,41042028,20708479,32825143,259275945,15629437,109546023,291791755,176720139,106010323,14387956,801452219,380523509,407165139,413720603,1077553665,303843873,605176012,824987640,333842643,237763508,137153435,270537926,214262194,211698156,371131346,51701768,278342482,289312174,379414523,266207872,1798200679,865071811,54881195,329669142,75491471,389201308,77900,25218982,770753517,249232143,16924807,120386151,3384031,26474779,2613931,7086363,25366288,13349054,7768614,25271829,17178536,46773188,95645617,5417532,36086719,16609588,213667035,39250,17122837,62510,20470,151084427,120740287,282219816,203780656,136342836,290455718,106267675,39475845,233578496,4606022,6858883,320323958,1287418282,163737155,1654331224,16287986,8106903,2252250,130146364,258000790,286902914,1316211088,1307938735,31845582,280789434,571599748,419412829,1458223760,238382106,527572004,419801870,767380620,664612884,1688428239,319234289,176178511,62009224,144644338,602839390],"usage_in_kernelmode":4760000000,"usage_in_usermode":28650000000},"system_cpu_usage":94152783990000000,"online_cpus":128,"throttling_data":{"periods":370,"throttled_periods":10,"throttled_time":1550140161}},"precpu_stats":{"cpu_usage":{"total_usage":0,"usage_in_kernelmode":0,"usage_in_usermode":0},"throttling_data":{"periods":0,"throttled_periods":0,"throttled_time":0}},"memory_stats":{"usage":231485440,"max_usage":909545472,"stats":{"active_anon":211320832,"active_file":0,"cache":3653632,"dirty":0,"hierarchical_memory_limit":9223372036854771712,"hierarchical_memsw_limit":0,"inactive_anon":888832,"inactive_file":8192,"mapped_file":0,"pgfault":591058,"pgmajfault":0,"pgpgin":407852,"pgpgout":356041,"rss":208564224,"rss_huge":0,"total_active_anon":211320832,"total_active_file":0,"total_cache":3653632,"total_dirty":0,"total_inactive_anon":888832,"total_inactive_file":8192,"total_mapped_file":0,"total_pgfault":591058,"total_pgmajfault":0,"total_pgpgin":407852,"total_pgpgout":356041,"total_rss":208564224,"total_rss_huge":0,"total_unevictable":0,"total_writeback":0,"unevictable":0,"writeback":0},"limit":540972998656},"name":"/NLIDatasets-DTrmrtau","id":"50409dd111e9aa49929332c4bdf707ea135ea14389d5f959c370f27368ff9df9","networks":{"eth0":{"rx_bytes":439154,"rx_packets":247,"rx_errors":0,"rx_dropped":2,"tx_bytes":33273,"tx_packets":240,"tx_errors":0,"tx_dropped":0}}}

