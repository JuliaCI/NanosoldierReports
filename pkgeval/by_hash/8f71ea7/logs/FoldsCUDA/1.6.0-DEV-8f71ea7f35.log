################################################################################
# PkgEval set-up: 2020-10-28T14:21:37.491
#

Julia Version 1.6.0-DEV.1352
Commit 8f71ea7f35 (2020-10-28 02:10 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807



################################################################################
# Installation: 2020-10-28T14:21:39.241
#

   Resolving package versions...
   Installed CEnum ─────────────────────── v0.4.1
   Installed FoldsCUDA ─────────────────── v0.1.0
   Installed OrderedCollections ────────── v1.3.1
   Installed ConstructionBase ──────────── v1.0.0
   Installed NameResolution ────────────── v0.1.5
   Installed InitialValues ─────────────── v0.2.10
   Installed NNlib ─────────────────────── v0.7.5
   Installed JuliaVariables ────────────── v0.2.3
   Installed TimerOutputs ──────────────── v0.5.6
   Installed Adapt ─────────────────────── v2.3.0
   Installed DataAPI ───────────────────── v1.3.0
   Installed ExprTools ─────────────────── v0.1.3
   Installed Tables ────────────────────── v1.1.0
   Installed FLoops ────────────────────── v0.1.4
   Installed FLoopsBase ────────────────── v0.1.0
   Installed BFloat16s ─────────────────── v0.1.0
   Installed ZygoteRules ───────────────── v0.2.0
   Installed Compat ────────────────────── v3.23.0
   Installed Transducers ───────────────── v0.4.53
   Installed MacroTools ────────────────── v0.5.6
   Installed LLVM ──────────────────────── v3.2.0
   Installed Reexport ──────────────────── v0.2.0
   Installed CompositionsBase ──────────── v0.1.0
   Installed AbstractFFTs ──────────────── v0.5.0
   Installed ContextVariablesX ─────────── v0.1.0
   Installed Setfield ──────────────────── v0.7.0
   Installed GPUArrays ─────────────────── v6.1.1
   Installed BangBang ──────────────────── v0.3.29
   Installed DataValueInterfaces ───────── v1.0.0
   Installed MicroCollections ──────────── v0.1.0
   Installed DataStructures ────────────── v0.18.8
   Installed TableTraits ───────────────── v1.0.0
   Installed PrettyPrint ───────────────── v0.2.0
   Installed GPUCompiler ───────────────── v0.7.3
   Installed IteratorInterfaceExtensions ─ v1.0.0
   Installed MLStyle ───────────────────── v0.4.6
   Installed SplittablesBase ───────────── v0.1.10
   Installed CUDA ──────────────────────── v2.0.2
   Installed Requires ──────────────────── v1.1.0
   Installed ArgCheck ──────────────────── v2.1.0
   Installed DefineSingletons ──────────── v0.1.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [6cd66ae4] + FoldsCUDA v0.1.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [621f4979] + AbstractFFTs v0.5.0
  [79e6a3ab] + Adapt v2.3.0
  [dce04be8] + ArgCheck v2.1.0
  [ab4f0b2a] + BFloat16s v0.1.0
  [198e06fe] + BangBang v0.3.29
  [fa961155] + CEnum v0.4.1
  [052768ef] + CUDA v2.0.2
  [34da2185] + Compat v3.23.0
  [a33af91c] + CompositionsBase v0.1.0
  [187b0558] + ConstructionBase v1.0.0
  [6add18c4] + ContextVariablesX v0.1.0
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.18.8
  [e2d170a0] + DataValueInterfaces v1.0.0
  [244e2a9f] + DefineSingletons v0.1.0
  [e2ba6199] + ExprTools v0.1.3
  [cc61a311] + FLoops v0.1.4
  [b9860ae5] + FLoopsBase v0.1.0
  [6cd66ae4] + FoldsCUDA v0.1.0
  [0c68f7d7] + GPUArrays v6.1.1
  [61eb1bfa] + GPUCompiler v0.7.3
  [22cec73e] + InitialValues v0.2.10
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [b14d175d] + JuliaVariables v0.2.3
  [929cbde3] + LLVM v3.2.0
  [d8e11817] + MLStyle v0.4.6
  [1914dd2f] + MacroTools v0.5.6
  [128add7d] + MicroCollections v0.1.0
  [872c559c] + NNlib v0.7.5
  [71a1bf82] + NameResolution v0.1.5
  [bac558e1] + OrderedCollections v1.3.1
  [8162dcfd] + PrettyPrint v0.2.0
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v1.1.0
  [efcf1570] + Setfield v0.7.0
  [171d559e] + SplittablesBase v0.1.10
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.1.0
  [a759f4b9] + TimerOutputs v0.5.6
  [28d57a85] + Transducers v0.4.53
  [700de1a5] + ZygoteRules v0.2.0
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [f43a241f] + Downloads
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
  [deac9b47] + LibCURL_jll
  [14a3606d] + MozillaCACerts_jll


################################################################################
# Testing: 2020-10-28T14:21:44.179
#


     Testing FoldsCUDA
Status `/tmp/jl_Ye02j4/Project.toml`
  [4c88cf16] Aqua v0.5.0
  [052768ef] CUDA v2.0.2
  [e30172f5] Documenter v0.25.3
  [cc61a311] FLoops v0.1.4
  [6cd66ae4] FoldsCUDA v0.1.0
  [0c68f7d7] GPUArrays v6.1.1
  [22cec73e] InitialValues v0.2.10
  [171d559e] SplittablesBase v0.1.10
  [28d57a85] Transducers v0.4.53
  [9a3f8284] Random
  [8dfed614] Test
Status `/tmp/jl_Ye02j4/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [79e6a3ab] Adapt v2.3.0
  [4c88cf16] Aqua v0.5.0
  [dce04be8] ArgCheck v2.1.0
  [ab4f0b2a] BFloat16s v0.1.0
  [198e06fe] BangBang v0.3.29
  [fa961155] CEnum v0.4.1
  [052768ef] CUDA v2.0.2
  [34da2185] Compat v3.23.0
  [a33af91c] CompositionsBase v0.1.0
  [187b0558] ConstructionBase v1.0.0
  [6add18c4] ContextVariablesX v0.1.0
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.18.8
  [e2d170a0] DataValueInterfaces v1.0.0
  [244e2a9f] DefineSingletons v0.1.0
  [ffbed154] DocStringExtensions v0.8.3
  [e30172f5] Documenter v0.25.3
  [e2ba6199] ExprTools v0.1.3
  [cc61a311] FLoops v0.1.4
  [b9860ae5] FLoopsBase v0.1.0
  [6cd66ae4] FoldsCUDA v0.1.0
  [0c68f7d7] GPUArrays v6.1.1
  [61eb1bfa] GPUCompiler v0.7.3
  [b5f81e59] IOCapture v0.1.0
  [22cec73e] InitialValues v0.2.10
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.1
  [b14d175d] JuliaVariables v0.2.3
  [929cbde3] LLVM v3.2.0
  [d8e11817] MLStyle v0.4.6
  [1914dd2f] MacroTools v0.5.6
  [128add7d] MicroCollections v0.1.0
  [872c559c] NNlib v0.7.5
  [71a1bf82] NameResolution v0.1.5
  [bac558e1] OrderedCollections v1.3.1
  [69de0a69] Parsers v1.0.11
  [8162dcfd] PrettyPrint v0.2.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.1.0
  [efcf1570] Setfield v0.7.0
  [171d559e] SplittablesBase v0.1.10
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.1.0
  [a759f4b9] TimerOutputs v0.5.6
  [28d57a85] Transducers v0.4.53
  [700de1a5] ZygoteRules v0.2.0
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [f43a241f] Downloads
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
  [deac9b47] LibCURL_jll
  [14a3606d] MozillaCACerts_jll
     Testing Running tests...
[ Info: SetupBuildDirectory: setting up build directory.
[ Info: Doctest: running doctests.
┌ Error: doctest failure in ~/.julia/packages/FoldsCUDA/zyFOA/src/FoldsCUDA.jl
│ 
│ ```jldoctest README
│ julia> using FoldsCUDA, CUDA, FLoops
│ 
│ julia> using GPUArrays: @allowscalar
│ 
│ julia> xs = CUDA.rand(10^8);
│ 
│ julia> @allowscalar xs[100] = 2;
│ 
│ julia> @allowscalar xs[200] = 2;
│ 
│ julia> @floop CUDAEx() for (x, i) in zip(xs, eachindex(xs))
│            @reduce() do (imax = -1; i), (xmax = -Inf32; x)
│                if xmax < x
│                    xmax = x
│                    imax = i
│                end
│            end
│        end
│ 
│ julia> xmax
│ 2.0f0
│ 
│ julia> imax  # the *first* position for the largest value
│ 100
│ ```
│ 
│ Subexpression:
│ 
│ xs = CUDA.rand(10^8);
│ 
│ Evaluated output:
│ 
│ ┌ Error: Could not initialize CUDA
│ │   exception =
│ │    could not load library "libcuda"
│ │    libcuda.so: cannot open shared object file: No such file or directory
│ │    Stacktrace:
│ │      [1] dlopen(s::String, flags::UInt32; throw_error::Bool)
│ │        @ Base.Libc.Libdl ./libdl.jl:114
│ │      [2] dlopen
│ │        @ ./libdl.jl:114 [inlined]
│ │      [3] #dlopen#2
│ │        @ ./libdl.jl:110 [inlined]
│ │      [4] dlopen (repeats 2 times)
│ │        @ ./libdl.jl:110 [inlined]
│ │      [5] (::CUDA.var"#2976#cache_fptr!#615")()
│ │        @ CUDA ~/.julia/packages/CUDA/gKMm0/lib/utils/call.jl:31
│ │      [6] macro expansion
│ │        @ ~/.julia/packages/CUDA/gKMm0/lib/utils/call.jl:39 [inlined]
│ │      [7] __configure__(show_reason::Bool)
│ │        @ CUDA ~/.julia/packages/CUDA/gKMm0/src/initialization.jl:94
│ │      [8] macro expansion
│ │        @ ~/.julia/packages/CUDA/gKMm0/src/initialization.jl:29 [inlined]
│ │      [9] macro expansion
│ │        @ ./lock.jl:190 [inlined]
│ │     [10] _functional(show_reason::Bool)
│ │        @ CUDA ~/.julia/packages/CUDA/gKMm0/src/initialization.jl:26
│ │     [11] functional(show_reason::Bool)
│ │        @ CUDA ~/.julia/packages/CUDA/gKMm0/src/initialization.jl:19
│ │     [12] libcuda()
│ │        @ CUDA ~/.julia/packages/CUDA/gKMm0/src/initialization.jl:50
│ │     [13] (::CUDA.var"#658#cache_fptr!#9")()
│ │        @ CUDA ~/.julia/packages/CUDA/gKMm0/lib/utils/call.jl:31
│ │     [14] macro expansion
│ │        @ ~/.julia/packages/CUDA/gKMm0/lib/utils/call.jl:39 [inlined]
│ │     [15] macro expansion
│ │        @ ~/.julia/packages/CUDA/gKMm0/lib/cudadrv/libcuda.jl:29 [inlined]
│ │     [16] macro expansion
│ │        @ ~/.julia/packages/CUDA/gKMm0/lib/cudadrv/error.jl:108 [inlined]
│ │     [17] cuDeviceGet(device::Base.RefValue{Int32}, ordinal::Int64)
│ │        @ CUDA ~/.julia/packages/CUDA/gKMm0/lib/utils/call.jl:93
│ │     [18] CuDevice
│ │        @ ~/.julia/packages/CUDA/gKMm0/lib/cudadrv/devices.jl:25 [inlined]
│ │     [19] initialize_thread(tid::Int64)
│ │        @ CUDA ~/.julia/packages/CUDA/gKMm0/src/state.jl:121
│ │     [20] prepare_cuda_call()
│ │        @ CUDA ~/.julia/packages/CUDA/gKMm0/src/state.jl:80
│ │     [21] context
│ │        @ ~/.julia/packages/CUDA/gKMm0/src/state.jl:142 [inlined]
│ │     [22] default_rng()
│ │        @ CUDA.CURAND ~/.julia/packages/CUDA/gKMm0/lib/curand/CURAND.jl:29
│ │     [23] rand(::Int64)
│ │        @ CUDA ~/.julia/packages/CUDA/gKMm0/src/random.jl:70
│ │     [24] top-level scope
│ │        @ none:1
│ │     [25] eval
│ │        @ ./boot.jl:360 [inlined]
│ │     [26] #7
│ │        @ ~/.julia/packages/Documenter/3Y8Kg/src/DocTests.jl:221 [inlined]
│ │     [27] (::IOCapture.var"#2#3"{Symbol, Documenter.DocTests.var"#7#8"{Module}, Vector{UInt8}, Pipe, Base.PipeEndpoint, Base.PipeEndpoint})()
│ │        @ IOCapture ~/.julia/packages/IOCapture/RpkuT/src/IOCapture.jl:77
│ │     [28] with_logstate(f::Function, logstate::Any)
│ │        @ Base.CoreLogging ./logging.jl:491
│ │     [29] with_logger
│ │        @ ./logging.jl:603 [inlined]
│ │     [30] iocapture(f::Documenter.DocTests.var"#7#8"{Module}; throwerrors::Symbol)
│ │        @ IOCapture ~/.julia/packages/IOCapture/RpkuT/src/IOCapture.jl:75
│ │     [31] eval_repl(block::Documenter.DocTests.MutableMD2CodeBlock, sandbox::Module, meta::Dict{Symbol, Any}, doc::Documenter.Documents.Document, page::String)
│ │        @ Documenter.DocTests ~/.julia/packages/Documenter/3Y8Kg/src/DocTests.jl:220
│ │     [32] doctest(ctx::Documenter.DocTests.DocTestContext, block_immutable::Documenter.Utilities.Markdown2.CodeBlock)
│ │        @ Documenter.DocTests ~/.julia/packages/Documenter/3Y8Kg/src/DocTests.jl:170
│ │     [33] (::Documenter.DocTests.var"#1#2"{Documenter.DocTests.DocTestContext})(node::Documenter.Utilities.Markdown2.CodeBlock)
│ │        @ Documenter.DocTests ~/.julia/packages/Documenter/3Y8Kg/src/DocTests.jl:112
│ │     [34] walk(f::Documenter.DocTests.var"#1#2"{Documenter.DocTests.DocTestContext}, node::Documenter.Utilities.Markdown2.CodeBlock)
│ │        @ Documenter.Utilities.Markdown2 ~/.julia/packages/Documenter/3Y8Kg/src/Utilities/Markdown2.jl:297
│ │     [35] walk(f::Function, nodes::Vector{Documenter.Utilities.Markdown2.MarkdownBlockNode})
│ │        @ Documenter.Utilities.Markdown2 ~/.julia/packages/Documenter/3Y8Kg/src/Utilities/Markdown2.jl:306
│ │     [36] walk(f::Documenter.DocTests.var"#1#2"{Documenter.DocTests.DocTestContext}, node::Documenter.Utilities.Markdown2.MD)
│ │        @ Documenter.Utilities.Markdown2 ~/.julia/packages/Documenter/3Y8Kg/src/Utilities/Markdown2.jl:299
│ │     [37] doctest
│ │        @ ~/.julia/packages/Documenter/3Y8Kg/src/DocTests.jl:109 [inlined]
│ │     [38] doctest(docstr::Base.Docs.DocStr, mod::Module, doc::Documenter.Documents.Document)
│ │        @ Documenter.DocTests ~/.julia/packages/Documenter/3Y8Kg/src/DocTests.jl:89
│ │     [39] doctest(blueprint::Documenter.Documents.DocumentBlueprint, doc::Documenter.Documents.Document)
│ │        @ Documenter.DocTests ~/.julia/packages/Documenter/3Y8Kg/src/DocTests.jl:57
│ │     [40] runner(#unused#::Type{Documenter.Builder.Doctest}, doc::Documenter.Documents.Document)
│ │        @ Documenter.Builder ~/.julia/packages/Documenter/3Y8Kg/src/Builder.jl:214
│ │     [41] dispatch(#unused#::Type{Documenter.Builder.DocumentPipeline}, x::Documenter.Documents.Document)
│ │        @ Documenter.Utilities.Selectors ~/.julia/packages/Documenter/3Y8Kg/src/Utilities/Selectors.jl:170
│ │     [42] #2
│ │        @ ~/.julia/packages/Documenter/3Y8Kg/src/Documenter.jl:245 [inlined]
│ │     [43] cd(f::Documenter.var"#2#3"{Documenter.Documents.Document}, dir::String)
│ │        @ Base.Filesystem ./file.jl:104
│ │     [44] makedocs(; debug::Bool, format::Documenter.Writers.HTMLWriter.HTML, kwargs::Base.Iterators.Pairs{Symbol, Any, NTuple{6, Symbol}, NamedTuple{(:root, :source, :sitename, :doctest, :modules, :doctestfilters), Tuple{String, String, String, Symbol, Vector{Module}, Vector{Regex}}}})
│ │        @ Documenter ~/.julia/packages/Documenter/3Y8Kg/src/Documenter.jl:244
│ │     [45] (::Documenter.var"#all_doctests#33"{Bool, Vector{Regex}, Vector{Module}})()
│ │        @ Documenter ~/.julia/packages/Documenter/3Y8Kg/src/Documenter.jl:809
│ │     [46] macro expansion
│ │        @ ~/.julia/packages/Documenter/3Y8Kg/src/Documenter.jl:826 [inlined]
│ │     [47] macro expansion
│ │        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
│ │     [48] doctest(source::Nothing, modules::Vector{Module}; fix::Bool, testset::String, doctestfilters::Vector{Regex})
│ │        @ Documenter ~/.julia/packages/Documenter/3Y8Kg/src/Documenter.jl:826
│ │     [49] doctest(package::Module; manual::Bool, testset::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│ │        @ Documenter ~/.julia/packages/Documenter/3Y8Kg/src/Documenter.jl:765
│ │     [50] macro expansion
│ │        @ ~/.julia/packages/FoldsCUDA/zyFOA/test/test_doctest.jl:8 [inlined]
│ │     [51] macro expansion
│ │        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
│ │     [52] top-level scope
│ │        @ ~/.julia/packages/FoldsCUDA/zyFOA/test/test_doctest.jl:8
│ │     [53] include(mod::Module, _path::String)
│ │        @ Base ./Base.jl:389
│ │     [54] include(x::String)
│ │        @ Main.TestFoldsCUDA ~/.julia/packages/FoldsCUDA/zyFOA/test/runtests.jl:1
│ │     [55] macro expansion
│ │        @ ~/.julia/packages/FoldsCUDA/zyFOA/test/runtests.jl:13 [inlined]
│ │     [56] top-level scope
│ │        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1219
│ │     [57] include(fname::String)
│ │        @ Base.MainInclude ./client.jl:444
│ │     [58] top-level scope
│ │        @ none:6
│ │     [59] eval(m::Module, e::Any)
│ │        @ Core ./boot.jl:360
│ │     [60] exec_options(opts::Base.JLOptions)
│ │        @ Base ./client.jl:261
│ └ @ CUDA ~/.julia/packages/CUDA/gKMm0/src/initialization.jl:101
│ ERROR: CUDA.jl did not successfully initialize, and is not usable.
│ If you did not see any other error message, try again in a new session
│ with the JULIA_DEBUG environment variable set to 'CUDA'.
│ Stacktrace:
│   [1] error(s::String)
│     @ Base ./error.jl:33
│   [2] libcuda()
│     @ CUDA ~/.julia/packages/CUDA/gKMm0/src/initialization.jl:51
│   [3] (::CUDA.var"#658#cache_fptr!#9")()
│     @ CUDA ~/.julia/packages/CUDA/gKMm0/lib/utils/call.jl:31
│   [4] macro expansion
│     @ ~/.julia/packages/CUDA/gKMm0/lib/utils/call.jl:39 [inlined]
│   [5] macro expansion
│     @ ~/.julia/packages/CUDA/gKMm0/lib/cudadrv/libcuda.jl:29 [inlined]
│   [6] macro expansion
│     @ ~/.julia/packages/CUDA/gKMm0/lib/cudadrv/error.jl:108 [inlined]
│   [7] cuDeviceGet(device::Base.RefValue{Int32}, ordinal::Int64)
│     @ CUDA ~/.julia/packages/CUDA/gKMm0/lib/utils/call.jl:93
│   [8] CuDevice
│     @ ~/.julia/packages/CUDA/gKMm0/lib/cudadrv/devices.jl:25 [inlined]
│   [9] initialize_thread(tid::Int64)
│     @ CUDA ~/.julia/packages/CUDA/gKMm0/src/state.jl:121
│  [10] prepare_cuda_call()
│     @ CUDA ~/.julia/packages/CUDA/gKMm0/src/state.jl:80
│  [11] context
│     @ ~/.julia/packages/CUDA/gKMm0/src/state.jl:142 [inlined]
│  [12] default_rng()
│     @ CUDA.CURAND ~/.julia/packages/CUDA/gKMm0/lib/curand/CURAND.jl:29
│  [13] rand(::Int64)
│     @ CUDA ~/.julia/packages/CUDA/gKMm0/src/random.jl:70
│  [14] top-level scope
│     @ none:1
│ 
│ Expected output:
│ 
│ 
│ 
│   diff =
│    Warning: Diff output requires color.
│    ┌ Error: Could not initialize CUDA
│    │   exception =
│    │    could not load library "libcuda"
│    │    libcuda.so: cannot open shared object file: No such file or directory
│    │    Stacktrace:
│    │      [1] dlopen(s::String, flags::UInt32; throw_error::Bool)
│    │        @ Base.Libc.Libdl ./libdl.jl:114
│    │      [2] dlopen
│    │        @ ./libdl.jl:114 [inlined]
│    │      [3] #dlopen#2
│    │        @ ./libdl.jl:110 [inlined]
│    │      [4] dlopen (repeats 2 times)
│    │        @ ./libdl.jl:110 [inlined]
│    │      [5] (::CUDA.var"#2976#cache_fptr!#615")()
│    │        @ CUDA ~/.julia/packages/CUDA/gKMm0/lib/utils/call.jl:31
│    │      [6] macro expansion
│    │        @ ~/.julia/packages/CUDA/gKMm0/lib/utils/call.jl:39 [inlined]
│    │      [7] __configure__(show_reason::Bool)
│    │        @ CUDA ~/.julia/packages/CUDA/gKMm0/src/initialization.jl:94
│    │      [8] macro expansion
│    │        @ ~/.julia/packages/CUDA/gKMm0/src/initialization.jl:29 [inlined]
│    │      [9] macro expansion
│    │        @ ./lock.jl:190 [inlined]
│    │     [10] _functional(show_reason::Bool)
│    │        @ CUDA ~/.julia/packages/CUDA/gKMm0/src/initialization.jl:26
│    │     [11] functional(show_reason::Bool)
│    │        @ CUDA ~/.julia/packages/CUDA/gKMm0/src/initialization.jl:19
│    │     [12] libcuda()
│    │        @ CUDA ~/.julia/packages/CUDA/gKMm0/src/initialization.jl:50
│    │     [13] (::CUDA.var"#658#cache_fptr!#9")()
│    │        @ CUDA ~/.julia/packages/CUDA/gKMm0/lib/utils/call.jl:31
│    │     [14] macro expansion
│    │        @ ~/.julia/packages/CUDA/gKMm0/lib/utils/call.jl:39 [inlined]
│    │     [15] macro expansion
│    │        @ ~/.julia/packages/CUDA/gKMm0/lib/cudadrv/libcuda.jl:29 [inlined]
│    │     [16] macro expansion
│    │        @ ~/.julia/packages/CUDA/gKMm0/lib/cudadrv/error.jl:108 [inlined]
│    │     [17] cuDeviceGet(device::Base.RefValue{Int32}, ordinal::Int64)
│    │        @ CUDA ~/.julia/packages/CUDA/gKMm0/lib/utils/call.jl:93
│    │     [18] CuDevice
│    │        @ ~/.julia/packages/CUDA/gKMm0/lib/cudadrv/devices.jl:25 [inlined]
│    │     [19] initialize_thread(tid::Int64)
│    │        @ CUDA ~/.julia/packages/CUDA/gKMm0/src/state.jl:121
│    │     [20] prepare_cuda_call()
│    │        @ CUDA ~/.julia/packages/CUDA/gKMm0/src/state.jl:80
│    │     [21] context
│    │        @ ~/.julia/packages/CUDA/gKMm0/src/state.jl:142 [inlined]
│    │     [22] default_rng()
│    │        @ CUDA.CURAND ~/.julia/packages/CUDA/gKMm0/lib/curand/CURAND.jl:29
│    │     [23] rand(::Int64)
│    │        @ CUDA ~/.julia/packages/CUDA/gKMm0/src/random.jl:70
│    │     [24] top-level scope
│    │        @ none:1
│    │     [25] eval
│    │        @ ./boot.jl:360 [inlined]
│    │     [26] #7
│    │        @ ~/.julia/packages/Documenter/3Y8Kg/src/DocTests.jl:221 [inlined]
│    │     [27] (::IOCapture.var"#2#3"{Symbol, Documenter.DocTests.var"#7#8"{Module}, Vector{UInt8}, Pipe, Base.PipeEndpoint, Base.PipeEndpoint})()
│    │        @ IOCapture ~/.julia/packages/IOCapture/RpkuT/src/IOCapture.jl:77
│    │     [28] with_logstate(f::Function, logstate::Any)
│    │        @ Base.CoreLogging ./logging.jl:491
│    │     [29] with_logger
│    │        @ ./logging.jl:603 [inlined]
│    │     [30] iocapture(f::Documenter.DocTests.var"#7#8"{Module}; throwerrors::Symbol)
│    │        @ IOCapture ~/.julia/packages/IOCapture/RpkuT/src/IOCapture.jl:75
│    │     [31] eval_repl(block::Documenter.DocTests.MutableMD2CodeBlock, sandbox::Module, meta::Dict{Symbol, Any}, doc::Documenter.Documents.Document, page::String)
│    │        @ Documenter.DocTests ~/.julia/packages/Documenter/3Y8Kg/src/DocTests.jl:220
│    │     [32] doctest(ctx::Documenter.DocTests.DocTestContext, block_immutable::Documenter.Utilities.Markdown2.CodeBlock)
│    │        @ Documenter.DocTests ~/.julia/packages/Documenter/3Y8Kg/src/DocTests.jl:170
│    │     [33] (::Documenter.DocTests.var"#1#2"{Documenter.DocTests.DocTestContext})(node::Documenter.Utilities.Markdown2.CodeBlock)
│    │        @ Documenter.DocTests ~/.julia/packages/Documenter/3Y8Kg/src/DocTests.jl:112
│    │     [34] walk(f::Documenter.DocTests.var"#1#2"{Documenter.DocTests.DocTestContext}, node::Documenter.Utilities.Markdown2.CodeBlock)
│    │        @ Documenter.Utilities.Markdown2 ~/.julia/packages/Documenter/3Y8Kg/src/Utilities/Markdown2.jl:297
│    │     [35] walk(f::Function, nodes::Vector{Documenter.Utilities.Markdown2.MarkdownBlockNode})
│    │        @ Documenter.Utilities.Markdown2 ~/.julia/packages/Documenter/3Y8Kg/src/Utilities/Markdown2.jl:306
│    │     [36] walk(f::Documenter.DocTests.var"#1#2"{Documenter.DocTests.DocTestContext}, node::Documenter.Utilities.Markdown2.MD)
│    │        @ Documenter.Utilities.Markdown2 ~/.julia/packages/Documenter/3Y8Kg/src/Utilities/Markdown2.jl:299
│    │     [37] doctest
│    │        @ ~/.julia/packages/Documenter/3Y8Kg/src/DocTests.jl:109 [inlined]
│    │     [38] doctest(docstr::Base.Docs.DocStr, mod::Module, doc::Documenter.Documents.Document)
│    │        @ Documenter.DocTests ~/.julia/packages/Documenter/3Y8Kg/src/DocTests.jl:89
│    │     [39] doctest(blueprint::Documenter.Documents.DocumentBlueprint, doc::Documenter.Documents.Document)
│    │        @ Documenter.DocTests ~/.julia/packages/Documenter/3Y8Kg/src/DocTests.jl:57
│    │     [40] runner(#unused#::Type{Documenter.Builder.Doctest}, doc::Documenter.Documents.Document)
│    │        @ Documenter.Builder ~/.julia/packages/Documenter/3Y8Kg/src/Builder.jl:214
│    │     [41] dispatch(#unused#::Type{Documenter.Builder.DocumentPipeline}, x::Documenter.Documents.Document)
│    │        @ Documenter.Utilities.Selectors ~/.julia/packages/Documenter/3Y8Kg/src/Utilities/Selectors.jl:170
│    │     [42] #2
│    │        @ ~/.julia/packages/Documenter/3Y8Kg/src/Documenter.jl:245 [inlined]
│    │     [43] cd(f::Documenter.var"#2#3"{Documenter.Documents.Document}, dir::String)
│    │        @ Base.Filesystem ./file.jl:104
│    │     [44] makedocs(; debug::Bool, format::Documenter.Writers.HTMLWriter.HTML, kwargs::Base.Iterators.Pairs{Symbol, Any, NTuple{6, Symbol}, NamedTuple{(:root, :source, :sitename, :doctest, :modules, :doctestfilters), Tuple{String, String, String, Symbol, Vector{Module}, Vector{Regex}}}})
│    │        @ Documenter ~/.julia/packages/Documenter/3Y8Kg/src/Documenter.jl:244
│    │     [45] (::Documenter.var"#all_doctests#33"{Bool, Vector{Regex}, Vector{Module}})()
│    │        @ Documenter ~/.julia/packages/Documenter/3Y8Kg/src/Documenter.jl:809
│    │     [46] macro expansion
│    │        @ ~/.julia/packages/Documenter/3Y8Kg/src/Documenter.jl:826 [inlined]
│    │     [47] macro expansion
│    │        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
│    │     [48] doctest(source::Nothing, modules::Vector{Module}; fix::Bool, testset::String, doctestfilters::Vector{Regex})
│    │        @ Documenter ~/.julia/packages/Documenter/3Y8Kg/src/Documenter.jl:826
│    │     [49] doctest(package::Module; manual::Bool, testset::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│    │        @ Documenter ~/.julia/packages/Documenter/3Y8Kg/src/Documenter.jl:765
│    │     [50] macro expansion
│    │        @ ~/.julia/packages/FoldsCUDA/zyFOA/test/test_doctest.jl:8 [inlined]
│    │     [51] macro expansion
│    │        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
│    │     [52] top-level scope
│    │        @ ~/.julia/packages/FoldsCUDA/zyFOA/test/test_doctest.jl:8
│    │     [53] include(mod::Module, _path::String)
│    │        @ Base ./Base.jl:389
│    │     [54] include(x::String)
│    │        @ Main.TestFoldsCUDA ~/.julia/packages/FoldsCUDA/zyFOA/test/runtests.jl:1
│    │     [55] macro expansion
│    │        @ ~/.julia/packages/FoldsCUDA/zyFOA/test/runtests.jl:13 [inlined]
│    │     [56] top-level scope
│    │        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1219
│    │     [57] include(fname::String)
│    │        @ Base.MainInclude ./client.jl:444
│    │     [58] top-level scope
│    │        @ none:6
│    │     [59] eval(m::Module, e::Any)
│    │        @ Core ./boot.jl:360
│    │     [60] exec_options(opts::Base.JLOptions)
│    │        @ Base ./client.jl:261
│    └ @ CUDA ~/.julia/packages/CUDA/gKMm0/src/initialization.jl:101
│    ERROR: CUDA.jl did not successfully initialize, and is not usable.
│    If you did not see any other error message, try again in a new session
│    with the JULIA_DEBUG environment variable set to 'CUDA'.
│    Stacktrace:
│      [1] error(s::String)
│        @ Base ./error.jl:33
│      [2] libcuda()
│        @ CUDA ~/.julia/packages/CUDA/gKMm0/src/initialization.jl:51
│      [3] (::CUDA.var"#658#cache_fptr!#9")()
│        @ CUDA ~/.julia/packages/CUDA/gKMm0/lib/utils/call.jl:31
│      [4] macro expansion
│        @ ~/.julia/packages/CUDA/gKMm0/lib/utils/call.jl:39 [inlined]
│      [5] macro expansion
│        @ ~/.julia/packages/CUDA/gKMm0/lib/cudadrv/libcuda.jl:29 [inlined]
│      [6] macro expansion
│        @ ~/.julia/packages/CUDA/gKMm0/lib/cudadrv/error.jl:108 [inlined]
│      [7] cuDeviceGet(device::Base.RefValue{Int32}, ordinal::Int64)
│        @ CUDA ~/.julia/packages/CUDA/gKMm0/lib/utils/call.jl:93
│      [8] CuDevice
│        @ ~/.julia/packages/CUDA/gKMm0/lib/cudadrv/devices.jl:25 [inlined]
│      [9] initialize_thread(tid::Int64)
│        @ CUDA ~/.julia/packages/CUDA/gKMm0/src/state.jl:121
│     [10] prepare_cuda_call()
│        @ CUDA ~/.julia/packages/CUDA/gKMm0/src/state.jl:80
│     [11] context
│        @ ~/.julia/packages/CUDA/gKMm0/src/state.jl:142 [inlined]
│     [12] default_rng()
│        @ CUDA.CURAND ~/.julia/packages/CUDA/gKMm0/lib/curand/CURAND.jl:29
│     [13] rand(::Int64)
│        @ CUDA ~/.julia/packages/CUDA/gKMm0/src/random.jl:70
│     [14] top-level scope
│        @ none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/3Y8Kg/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/FoldsCUDA/zyFOA/src/FoldsCUDA.jl
│ 
│ ```jldoctest README
│ julia> using FoldsCUDA, CUDA, FLoops
│ 
│ julia> using GPUArrays: @allowscalar
│ 
│ julia> xs = CUDA.rand(10^8);
│ 
│ julia> @allowscalar xs[100] = 2;
│ 
│ julia> @allowscalar xs[200] = 2;
│ 
│ julia> @floop CUDAEx() for (x, i) in zip(xs, eachindex(xs))
│            @reduce() do (imax = -1; i), (xmax = -Inf32; x)
│                if xmax < x
│                    xmax = x
│                    imax = i
│                end
│            end
│        end
│ 
│ julia> xmax
│ 2.0f0
│ 
│ julia> imax  # the *first* position for the largest value
│ 100
│ ```
│ 
│ Subexpression:
│ 
│ @allowscalar xs[100] = 2;
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: xs not defined
│ Stacktrace:
│  [1] top-level scope
│    @ ~/.julia/packages/GPUArrays/ZxsKE/src/host/indexing.jl:64
│ 
│ Expected output:
│ 
│ 
│ 
│   diff =
│    Warning: Diff output requires color.
│    ERROR: UndefVarError: xs not defined
│    Stacktrace:
│     [1] top-level scope
│       @ ~/.julia/packages/GPUArrays/ZxsKE/src/host/indexing.jl:64
└ @ Documenter.DocTests ~/.julia/packages/Documenter/3Y8Kg/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/FoldsCUDA/zyFOA/src/FoldsCUDA.jl
│ 
│ ```jldoctest README
│ julia> using FoldsCUDA, CUDA, FLoops
│ 
│ julia> using GPUArrays: @allowscalar
│ 
│ julia> xs = CUDA.rand(10^8);
│ 
│ julia> @allowscalar xs[100] = 2;
│ 
│ julia> @allowscalar xs[200] = 2;
│ 
│ julia> @floop CUDAEx() for (x, i) in zip(xs, eachindex(xs))
│            @reduce() do (imax = -1; i), (xmax = -Inf32; x)
│                if xmax < x
│                    xmax = x
│                    imax = i
│                end
│            end
│        end
│ 
│ julia> xmax
│ 2.0f0
│ 
│ julia> imax  # the *first* position for the largest value
│ 100
│ ```
│ 
│ Subexpression:
│ 
│ @allowscalar xs[200] = 2;
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: xs not defined
│ Stacktrace:
│  [1] top-level scope
│    @ ~/.julia/packages/GPUArrays/ZxsKE/src/host/indexing.jl:64
│ 
│ Expected output:
│ 
│ 
│ 
│   diff =
│    Warning: Diff output requires color.
│    ERROR: UndefVarError: xs not defined
│    Stacktrace:
│     [1] top-level scope
│       @ ~/.julia/packages/GPUArrays/ZxsKE/src/host/indexing.jl:64
└ @ Documenter.DocTests ~/.julia/packages/Documenter/3Y8Kg/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/FoldsCUDA/zyFOA/src/FoldsCUDA.jl
│ 
│ ```jldoctest README
│ julia> using FoldsCUDA, CUDA, FLoops
│ 
│ julia> using GPUArrays: @allowscalar
│ 
│ julia> xs = CUDA.rand(10^8);
│ 
│ julia> @allowscalar xs[100] = 2;
│ 
│ julia> @allowscalar xs[200] = 2;
│ 
│ julia> @floop CUDAEx() for (x, i) in zip(xs, eachindex(xs))
│            @reduce() do (imax = -1; i), (xmax = -Inf32; x)
│                if xmax < x
│                    xmax = x
│                    imax = i
│                end
│            end
│        end
│ 
│ julia> xmax
│ 2.0f0
│ 
│ julia> imax  # the *first* position for the largest value
│ 100
│ ```
│ 
│ Subexpression:
│ 
│ @floop CUDAEx() for (x, i) in zip(xs, eachindex(xs))
│     @reduce() do (imax = -1; i), (xmax = -Inf32; x)
│         if xmax < x
│             xmax = x
│             imax = i
│         end
│     end
│ end
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: xs not defined
│ Stacktrace:
│  [1] top-level scope
│    @ ~/.julia/packages/FLoops/puZKi/src/reduce.jl:308
│ 
│ Expected output:
│ 
│ 
│ 
│   diff =
│    Warning: Diff output requires color.
│    ERROR: UndefVarError: xs not defined
│    Stacktrace:
│     [1] top-level scope
│       @ ~/.julia/packages/FLoops/puZKi/src/reduce.jl:308
└ @ Documenter.DocTests ~/.julia/packages/Documenter/3Y8Kg/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/FoldsCUDA/zyFOA/src/FoldsCUDA.jl
│ 
│ ```jldoctest README
│ julia> using FoldsCUDA, CUDA, FLoops
│ 
│ julia> using GPUArrays: @allowscalar
│ 
│ julia> xs = CUDA.rand(10^8);
│ 
│ julia> @allowscalar xs[100] = 2;
│ 
│ julia> @allowscalar xs[200] = 2;
│ 
│ julia> @floop CUDAEx() for (x, i) in zip(xs, eachindex(xs))
│            @reduce() do (imax = -1; i), (xmax = -Inf32; x)
│                if xmax < x
│                    xmax = x
│                    imax = i
│                end
│            end
│        end
│ 
│ julia> xmax
│ 2.0f0
│ 
│ julia> imax  # the *first* position for the largest value
│ 100
│ ```
│ 
│ Subexpression:
│ 
│ xmax
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: xmax not defined
│ 
│ Expected output:
│ 
│ 2.0f0
│ 
│   diff =
│    Warning: Diff output requires color.
│    2.0f0ERROR: UndefVarError: xmax not defined
└ @ Documenter.DocTests ~/.julia/packages/Documenter/3Y8Kg/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/FoldsCUDA/zyFOA/src/FoldsCUDA.jl
│ 
│ ```jldoctest README
│ julia> using FoldsCUDA, CUDA, FLoops
│ 
│ julia> using GPUArrays: @allowscalar
│ 
│ julia> xs = CUDA.rand(10^8);
│ 
│ julia> @allowscalar xs[100] = 2;
│ 
│ julia> @allowscalar xs[200] = 2;
│ 
│ julia> @floop CUDAEx() for (x, i) in zip(xs, eachindex(xs))
│            @reduce() do (imax = -1; i), (xmax = -Inf32; x)
│                if xmax < x
│                    xmax = x
│                    imax = i
│                end
│            end
│        end
│ 
│ julia> xmax
│ 2.0f0
│ 
│ julia> imax  # the *first* position for the largest value
│ 100
│ ```
│ 
│ Subexpression:
│ 
│ imax  # the *first* position for the largest value
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: imax not defined
│ 
│ Expected output:
│ 
│ 100
│ 
│   diff =
│    Warning: Diff output requires color.
│    100ERROR: UndefVarError: imax not defined
└ @ Documenter.DocTests ~/.julia/packages/Documenter/3Y8Kg/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/FoldsCUDA/zyFOA/src/FoldsCUDA.jl
│ 
│ ```jldoctest README
│ julia> using Transducers
│ 
│ julia> @allowscalar xs[300] = -0.5;
│ 
│ julia> foldx_cuda(TeeRF(min, max), xs)
│ (-0.5f0, 2.0f0)
│ 
│ julia> foldx_cuda(TeeRF(min, max), (2x for x in xs))  # iterator comprehension works
│ (-1.0f0, 4.0f0)
│ 
│ julia> foldx_cuda(TeeRF(min, max), Map(x -> 2x), xs)  # equivalent, using a transducer
│ (-1.0f0, 4.0f0)
│ ```
│ 
│ Subexpression:
│ 
│ @allowscalar xs[300] = -0.5;
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: xs not defined
│ Stacktrace:
│  [1] top-level scope
│    @ ~/.julia/packages/GPUArrays/ZxsKE/src/host/indexing.jl:64
│ 
│ Expected output:
│ 
│ 
│ 
│   diff =
│    Warning: Diff output requires color.
│    ERROR: UndefVarError: xs not defined
│    Stacktrace:
│     [1] top-level scope
│       @ ~/.julia/packages/GPUArrays/ZxsKE/src/host/indexing.jl:64
└ @ Documenter.DocTests ~/.julia/packages/Documenter/3Y8Kg/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/FoldsCUDA/zyFOA/src/FoldsCUDA.jl
│ 
│ ```jldoctest README
│ julia> using Transducers
│ 
│ julia> @allowscalar xs[300] = -0.5;
│ 
│ julia> foldx_cuda(TeeRF(min, max), xs)
│ (-0.5f0, 2.0f0)
│ 
│ julia> foldx_cuda(TeeRF(min, max), (2x for x in xs))  # iterator comprehension works
│ (-1.0f0, 4.0f0)
│ 
│ julia> foldx_cuda(TeeRF(min, max), Map(x -> 2x), xs)  # equivalent, using a transducer
│ (-1.0f0, 4.0f0)
│ ```
│ 
│ Subexpression:
│ 
│ foldx_cuda(TeeRF(min, max), xs)
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: xs not defined
│ Stacktrace:
│  [1] top-level scope
│    @ none:1
│ 
│ Expected output:
│ 
│ (-0.5f0, 2.0f0)
│ 
│   diff =
│    Warning: Diff output requires color.
│    (-0.5f0, 2.0f0)ERROR: UndefVarError: xs not defined
│    Stacktrace:
│     [1] top-level scope
│       @ none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/3Y8Kg/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/FoldsCUDA/zyFOA/src/FoldsCUDA.jl
│ 
│ ```jldoctest README
│ julia> using Transducers
│ 
│ julia> @allowscalar xs[300] = -0.5;
│ 
│ julia> foldx_cuda(TeeRF(min, max), xs)
│ (-0.5f0, 2.0f0)
│ 
│ julia> foldx_cuda(TeeRF(min, max), (2x for x in xs))  # iterator comprehension works
│ (-1.0f0, 4.0f0)
│ 
│ julia> foldx_cuda(TeeRF(min, max), Map(x -> 2x), xs)  # equivalent, using a transducer
│ (-1.0f0, 4.0f0)
│ ```
│ 
│ Subexpression:
│ 
│ foldx_cuda(TeeRF(min, max), (2x for x in xs))  # iterator comprehension works
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: xs not defined
│ Stacktrace:
│  [1] top-level scope
│    @ none:1
│ 
│ Expected output:
│ 
│ (-1.0f0, 4.0f0)
│ 
│   diff =
│    Warning: Diff output requires color.
│    (-1.0f0, 4.0f0)ERROR: UndefVarError: xs not defined
│    Stacktrace:
│     [1] top-level scope
│       @ none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/3Y8Kg/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/FoldsCUDA/zyFOA/src/FoldsCUDA.jl
│ 
│ ```jldoctest README
│ julia> using Transducers
│ 
│ julia> @allowscalar xs[300] = -0.5;
│ 
│ julia> foldx_cuda(TeeRF(min, max), xs)
│ (-0.5f0, 2.0f0)
│ 
│ julia> foldx_cuda(TeeRF(min, max), (2x for x in xs))  # iterator comprehension works
│ (-1.0f0, 4.0f0)
│ 
│ julia> foldx_cuda(TeeRF(min, max), Map(x -> 2x), xs)  # equivalent, using a transducer
│ (-1.0f0, 4.0f0)
│ ```
│ 
│ Subexpression:
│ 
│ foldx_cuda(TeeRF(min, max), Map(x -> 2x), xs)  # equivalent, using a transducer
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: xs not defined
│ Stacktrace:
│  [1] top-level scope
│    @ none:1
│ 
│ Expected output:
│ 
│ (-1.0f0, 4.0f0)
│ 
│   diff =
│    Warning: Diff output requires color.
│    (-1.0f0, 4.0f0)ERROR: UndefVarError: xs not defined
│    Stacktrace:
│     [1] top-level scope
│       @ none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/3Y8Kg/src/DocTests.jl:369
┌ Error: Doctesting failed
│   exception =
│    `makedocs` encountered a doctest error. Terminating build
│    Stacktrace:
│      [1] error(s::String)
│        @ Base ./error.jl:33
│      [2] runner(#unused#::Type{Documenter.Builder.Doctest}, doc::Documenter.Documents.Document)
│        @ Documenter.Builder ~/.julia/packages/Documenter/3Y8Kg/src/Builder.jl:217
│      [3] dispatch(#unused#::Type{Documenter.Builder.DocumentPipeline}, x::Documenter.Documents.Document)
│        @ Documenter.Utilities.Selectors ~/.julia/packages/Documenter/3Y8Kg/src/Utilities/Selectors.jl:170
│      [4] #2
│        @ ~/.julia/packages/Documenter/3Y8Kg/src/Documenter.jl:245 [inlined]
│      [5] cd(f::Documenter.var"#2#3"{Documenter.Documents.Document}, dir::String)
│        @ Base.Filesystem ./file.jl:104
│      [6] makedocs(; debug::Bool, format::Documenter.Writers.HTMLWriter.HTML, kwargs::Base.Iterators.Pairs{Symbol, Any, NTuple{6, Symbol}, NamedTuple{(:root, :source, :sitename, :doctest, :modules, :doctestfilters), Tuple{String, String, String, Symbol, Vector{Module}, Vector{Regex}}}})
│        @ Documenter ~/.julia/packages/Documenter/3Y8Kg/src/Documenter.jl:244
│      [7] (::Documenter.var"#all_doctests#33"{Bool, Vector{Regex}, Vector{Module}})()
│        @ Documenter ~/.julia/packages/Documenter/3Y8Kg/src/Documenter.jl:809
│      [8] macro expansion
│        @ ~/.julia/packages/Documenter/3Y8Kg/src/Documenter.jl:826 [inlined]
│      [9] macro expansion
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
│     [10] doctest(source::Nothing, modules::Vector{Module}; fix::Bool, testset::String, doctestfilters::Vector{Regex})
│        @ Documenter ~/.julia/packages/Documenter/3Y8Kg/src/Documenter.jl:826
│     [11] doctest(package::Module; manual::Bool, testset::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ Documenter ~/.julia/packages/Documenter/3Y8Kg/src/Documenter.jl:765
│     [12] macro expansion
│        @ ~/.julia/packages/FoldsCUDA/zyFOA/test/test_doctest.jl:8 [inlined]
│     [13] macro expansion
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
│     [14] top-level scope
│        @ ~/.julia/packages/FoldsCUDA/zyFOA/test/test_doctest.jl:8
│     [15] include(mod::Module, _path::String)
│        @ Base ./Base.jl:389
│     [16] include(x::String)
│        @ Main.TestFoldsCUDA ~/.julia/packages/FoldsCUDA/zyFOA/test/runtests.jl:1
│     [17] macro expansion
│        @ ~/.julia/packages/FoldsCUDA/zyFOA/test/runtests.jl:13 [inlined]
│     [18] top-level scope
│        @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1219
│     [19] include(fname::String)
│        @ Base.MainInclude ./client.jl:444
│     [20] top-level scope
│        @ none:6
│     [21] eval(m::Module, e::Any)
│        @ Core ./boot.jl:360
│     [22] exec_options(opts::Base.JLOptions)
│        @ Base ./client.jl:261
│     [23] _start()
│        @ Base ./client.jl:485
└ @ Documenter ~/.julia/packages/Documenter/3Y8Kg/src/Documenter.jl:819
Doctests: FoldsCUDA: Test Failed at /home/pkgeval/.julia/packages/Documenter/3Y8Kg/src/Documenter.jl:826
  Expression: all_doctests()
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/Documenter/3Y8Kg/src/Documenter.jl:826 [inlined]
 [2] macro expansion
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
 [3] doctest(source::Nothing, modules::Vector{Module}; fix::Bool, testset::String, doctestfilters::Vector{Regex})
   @ Documenter ~/.julia/packages/Documenter/3Y8Kg/src/Documenter.jl:826
Test Summary:           | Fail  Total
test_doctest.jl         |    1      1
  doctest               |    1      1
    Doctests: FoldsCUDA |    1      1
Test Summary:           | Fail  Total
test_doctest.jl         |    1      1
  doctest               |    1      1
    Doctests: FoldsCUDA |    1      1
ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 0 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/FoldsCUDA/zyFOA/test/runtests.jl:1

caused by: Some tests did not pass: 0 passed, 1 failed, 0 errored, 0 broken.

PkgEval failed: Package FoldsCUDA errored during testing
Stacktrace:
  [1] pkgerror(msg::String)
    @ Pkg.Types /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1651
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:334
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:321
  [5] #test#62
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:71 [inlined]
  [6] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:70 [inlined]
  [7] #test#61
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [8] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67
 [10] test(pkg::String)
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67
 [11] top-level scope
    @ none:44
 [12] eval
    @ ./boot.jl:360 [inlined]
 [13] eval(x::Expr)
    @ Base.MainInclude ./client.jl:446
 [14] top-level scope
    @ none:1
 [15] eval(m::Module, e::Any)
    @ Core ./boot.jl:360
 [16] exec_options(opts::Base.JLOptions)
    @ Base ./client.jl:261
 [17] _start()
    @ Base ./client.jl:485


################################################################################
# PkgEval teardown: 2020-10-28T14:25:56.221
CPU usage: 228.35s (214.47s user, 14.33s kernel)

Network usage:
- eth0: 3.083 MiB received, 138.840 KiB sent

Raw statistics: {"blkio_stats":{"io_queue_recursive":[],"io_serviced_recursive":[{"major":259,"value":0,"op":"Read","minor":0},{"major":259,"value":5,"op":"Write","minor":0},{"major":259,"value":0,"op":"Sync","minor":0},{"major":259,"value":5,"op":"Async","minor":0},{"major":259,"value":5,"op":"Total","minor":0},{"major":253,"value":0,"op":"Read","minor":2},{"major":253,"value":5,"op":"Write","minor":2},{"major":253,"value":0,"op":"Sync","minor":2},{"major":253,"value":5,"op":"Async","minor":2},{"major":253,"value":5,"op":"Total","minor":2}],"io_time_recursive":[],"sectors_recursive":[],"io_service_bytes_recursive":[{"major":259,"value":0,"op":"Read","minor":0},{"major":259,"value":36864,"op":"Write","minor":0},{"major":259,"value":0,"op":"Sync","minor":0},{"major":259,"value":36864,"op":"Async","minor":0},{"major":259,"value":36864,"op":"Total","minor":0},{"major":253,"value":0,"op":"Read","minor":2},{"major":253,"value":36864,"op":"Write","minor":2},{"major":253,"value":0,"op":"Sync","minor":2},{"major":253,"value":36864,"op":"Async","minor":2},{"major":253,"value":36864,"op":"Total","minor":2}],"io_wait_time_recursive":[],"io_merged_recursive":[],"io_service_time_recursive":[]},"memory_stats":{"usage":257372160,"max_usage":1102622720,"stats":{"hierarchical_memory_limit":9223372036854771712,"pgmajfault":0,"total_rss":207417344,"inactive_file":8192,"inactive_anon":9953280,"total_pgfault":3822045,"total_cache":41922560,"total_rss_huge":0,"total_active_anon":239165440,"total_pgmajfault":0,"pgpgin":2224259,"rss_huge":0,"mapped_file":0,"total_inactive_file":8192,"dirty":0,"total_unevictable":0,"total_dirty":0,"writeback":0,"pgpgout":2163385,"hierarchical_memsw_limit":0,"cache":41922560,"active_file":212992,"pgfault":3822045,"total_mapped_file":0,"total_pgpgout":2163385,"total_writeback":0,"rss":207417344,"unevictable":0,"total_inactive_anon":9953280,"total_pgpgin":2224259,"active_anon":239165440,"total_active_file":212992},"limit":540972998656},"name":"/FoldsCUDA-t6AmrLZv","networks":{"eth0":{"rx_bytes":3232575,"rx_packets":1472,"tx_packets":1019,"tx_bytes":142172,"tx_dropped":0,"rx_dropped":9,"tx_errors":0,"rx_errors":0}},"id":"cafa593188f4c8145b8684f027f4c512a8bf70d4780588fb2a20886c631be605","preread":"0001-01-01T00:00:00Z","storage_stats":{},"precpu_stats":{"throttling_data":{"throttled_periods":0,"throttled_time":0,"periods":0},"cpu_usage":{"usage_in_usermode":0,"usage_in_kernelmode":0,"total_usage":0}},"pids_stats":{"current":38},"num_procs":0,"cpu_stats":{"throttling_data":{"throttled_periods":0,"throttled_time":0,"periods":0},"system_cpu_usage":95342703720000000,"online_cpus":128,"cpu_usage":{"usage_in_usermode":214470000000,"usage_in_kernelmode":14330000000,"total_usage":228346401758,"percpu_usage":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,228346401758,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}},"read":"2020-10-28T14:25:56.756590306Z"}