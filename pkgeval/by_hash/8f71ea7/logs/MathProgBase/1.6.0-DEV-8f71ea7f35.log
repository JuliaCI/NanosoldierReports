################################################################################
# PkgEval set-up: 2020-10-28T15:20:52.765
#

Julia Version 1.6.0-DEV.1352
Commit 8f71ea7f35 (2020-10-28 02:10 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807



################################################################################
# Installation: 2020-10-28T15:20:54.291
#

   Resolving package versions...
   Installed MathProgBase ─ v0.7.8
Updating `~/.julia/environments/v1.6/Project.toml`
  [fdba3010] + MathProgBase v0.7.8
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [fdba3010] + MathProgBase v0.7.8
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [2f01184e] + SparseArrays


################################################################################
# Testing: 2020-10-28T15:20:56.471
#


     Testing MathProgBase
Status `/tmp/jl_39IfJ4/Project.toml`
  [e2685f51] ECOS v0.12.1
  [3c7084bd] GLPKMathProgInterface v0.5.0
  [b6b21f68] Ipopt v0.6.3
  [fdba3010] MathProgBase v0.7.8
  [37e2e46d] LinearAlgebra
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_39IfJ4/Manifest.toml`
  [6e4b80f9] BenchmarkTools v0.5.0
  [b99e7846] BinaryProvider v0.5.10
  [523fee87] CodecBzip2 v0.7.2
  [944b1d66] CodecZlib v0.7.0
  [e2685f51] ECOS v0.12.1
  [60bf3e95] GLPK v0.13.0
  [3c7084bd] GLPKMathProgInterface v0.5.0
  [cd3eb016] HTTP v0.8.19
  [83e8ac13] IniFile v0.5.0
  [b6b21f68] Ipopt v0.6.3
  [692b3bcd] JLLWrappers v1.1.3
  [682c06a0] JSON v0.21.1
  [7d188eb4] JSONSchema v0.3.2
  [b8f27783] MathOptInterface v0.9.17
  [fdba3010] MathProgBase v0.7.8
  [739be429] MbedTLS v1.0.3
  [d8a4904e] MutableArithmetics v0.2.10
  [bac558e1] OrderedCollections v1.3.1
  [69de0a69] Parsers v1.0.11
  [3bb67fe8] TranscodingStreams v0.9.5
  [a5390f91] ZipFile v0.9.3
  [ae81ac8f] ASL_jll v0.1.1+3
  [6e34b625] Bzip2_jll v1.0.6+5
  [e66e0078] CompilerSupportLibraries_jll v0.3.4+0
  [c2c64177] ECOS_jll v2.0.5+0
  [e8aa6df9] GLPK_jll v4.64.0+0
  [781609d7] GMP_jll v6.2.0+3
  [9cc047cb] Ipopt_jll v3.13.2+0
  [d00139f3] METIS_jll v5.1.0+4
  [d7ed1dd3] MUMPS_seq_jll v5.2.1+3
  [c8ffd9c3] MbedTLS_jll v2.16.8+0
  [656ef2d0] OpenBLAS32_jll v0.3.10+0
  [83775a58] Zlib_jll v1.2.11+18
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [f43a241f] Downloads
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
  [deac9b47] LibCURL_jll
  [14a3606d] MozillaCACerts_jll
     Testing Running tests...
┌ Warning: Element type Int64 does not have an infinite value. Note that this may artifically introduce ranged (two-sided) constraints. To avoid this, consider casting the problem data to Float64.
└ @ MathProgBase.HighLevelInterface ~/.julia/packages/MathProgBase/rr4Xh/src/HighLevelInterface/HighLevelInterface.jl:8
┌ Warning: Element type Int64 does not have an infinite value. Note that this may artifically introduce ranged (two-sided) constraints. To avoid this, consider casting the problem data to Float64.
└ @ MathProgBase.HighLevelInterface ~/.julia/packages/MathProgBase/rr4Xh/src/HighLevelInterface/HighLevelInterface.jl:8
┌ Warning: Element type Int64 does not have an infinite value. Note that this may artifically introduce ranged (two-sided) constraints. To avoid this, consider casting the problem data to Float64.
└ @ MathProgBase.HighLevelInterface ~/.julia/packages/MathProgBase/rr4Xh/src/HighLevelInterface/HighLevelInterface.jl:8
┌ Warning: Element type Int64 does not have an infinite value. Note that this may artifically introduce ranged (two-sided) constraints. To avoid this, consider casting the problem data to Float64.
└ @ MathProgBase.HighLevelInterface ~/.julia/packages/MathProgBase/rr4Xh/src/HighLevelInterface/HighLevelInterface.jl:8
┌ Warning: Element type Int64 does not have an infinite value. Note that this may artifically introduce ranged (two-sided) constraints. To avoid this, consider casting the problem data to Float64.
└ @ MathProgBase.HighLevelInterface ~/.julia/packages/MathProgBase/rr4Xh/src/HighLevelInterface/HighLevelInterface.jl:8
┌ Warning: Element type Int64 does not have an infinite value. Note that this may artifically introduce ranged (two-sided) constraints. To avoid this, consider casting the problem data to Float64.
└ @ MathProgBase.HighLevelInterface ~/.julia/packages/MathProgBase/rr4Xh/src/HighLevelInterface/HighLevelInterface.jl:8
Test Summary:                                                                                                                                                                         | Pass  Total
Testing linprog and subfunctions with GLPKMathProgInterface.GLPKInterfaceLP.GLPKSolverLP(false, :Simplex, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}()) |   26     26
Test Summary:                                                                                                                                                   | Pass  Total
Testing mixintprog with GLPKMathProgInterface.GLPKInterfaceMIP.GLPKSolverMIP(false, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}()) |    3      3

******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit http://projects.coin-or.org/Ipopt
******************************************************************************

Test Summary:                                                                                               | Pass  Total
Testing quadprog with IpoptSolver(Tuple[(:print_level, 0), (:fixed_variable_treatment, "make_constraint")]) |    9      9
Test Summary:                                                                                               | Pass  Total
Testing QP duals with IpoptSolver(Tuple[(:print_level, 0), (:fixed_variable_treatment, "make_constraint")]) |   14     14
Test Summary:                                                                                                                                  | Pass  Total
Testing SOCP interface with ECOSSolver(Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol}, NamedTuple{(:verbose,), Tuple{Bool}}}(:verbose => 0)) |    3      3
Test Summary:                                                                                          | Pass  Total
Testing NLP with IpoptSolver(Tuple[(:print_level, 0), (:fixed_variable_treatment, "make_constraint")]) |    7      7
Test Summary:                                                                                                          | Pass  Total
Testing NLP without Hessian with IpoptSolver(Tuple[(:print_level, 0), (:fixed_variable_treatment, "make_constraint")]) |    7      7
Test Summary:                                                                                                 | Pass  Total
Testing convex NLP with IpoptSolver(Tuple[(:print_level, 0), (:fixed_variable_treatment, "make_constraint")]) |    4      4
Test Summary:                                                                                                                     | Pass  Total
Testing NLP on the Rosenbrock function with IpoptSolver(Tuple[(:print_level, 0), (:fixed_variable_treatment, "make_constraint")]) |    5      5
Test Summary:                                                                                                                                                           | Pass  Total
Testing linear problems through conic interface with ECOSSolver(Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol}, NamedTuple{(:verbose,), Tuple{Bool}}}(:verbose => 0)) |   47     47
Test Summary:                                                                                                                                                                                        | Pass  Total
Testing linear problems through conic interface with GLPKMathProgInterface.GLPKInterfaceLP.GLPKSolverLP(false, :Simplex, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}()) |   47     47
Test Summary:                                                                                                                                                             | Pass  Total
Testing LP interface with GLPKMathProgInterface.GLPKInterfaceLP.GLPKSolverLP(false, :Simplex, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}()) |   85     85
Test Summary:                                                                                                                                                                   | Pass  Total
Testing LP interface extra with GLPKMathProgInterface.GLPKInterfaceLP.GLPKSolverLP(false, :Simplex, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}()) |   38     38
Test Summary:                                                                                                                                | Pass  Total
Testing LP interface with ECOSSolver(Base.Iterators.Pairs{Symbol, Bool, Tuple{Symbol}, NamedTuple{(:verbose,), Tuple{Bool}}}(:verbose => 0)) |   76     76
Test Summary:                                                                                                   | Pass  Total
Testing LP interface with IpoptSolver(Tuple[(:print_level, 0), (:fixed_variable_treatment, "make_constraint")]) |   82     82
     Testing MathProgBase tests passed 

PkgEval succeeded


################################################################################
# PkgEval teardown: 2020-10-28T15:23:38.005
CPU usage: 152.92s (141.97s user, 11.37s kernel)

Network usage:
- eth0: 1.455 MiB received, 82.054 KiB sent

Raw statistics: {"blkio_stats":{"io_queue_recursive":[],"io_serviced_recursive":[{"major":259,"value":22,"op":"Read","minor":0},{"major":259,"value":52,"op":"Write","minor":0},{"major":259,"value":46,"op":"Sync","minor":0},{"major":259,"value":28,"op":"Async","minor":0},{"major":259,"value":74,"op":"Total","minor":0},{"major":253,"value":22,"op":"Read","minor":2},{"major":253,"value":52,"op":"Write","minor":2},{"major":253,"value":46,"op":"Sync","minor":2},{"major":253,"value":28,"op":"Async","minor":2},{"major":253,"value":74,"op":"Total","minor":2}],"io_time_recursive":[],"sectors_recursive":[],"io_service_bytes_recursive":[{"major":259,"value":90112,"op":"Read","minor":0},{"major":259,"value":245760,"op":"Write","minor":0},{"major":259,"value":188416,"op":"Sync","minor":0},{"major":259,"value":147456,"op":"Async","minor":0},{"major":259,"value":335872,"op":"Total","minor":0},{"major":253,"value":90112,"op":"Read","minor":2},{"major":253,"value":245760,"op":"Write","minor":2},{"major":253,"value":188416,"op":"Sync","minor":2},{"major":253,"value":147456,"op":"Async","minor":2},{"major":253,"value":335872,"op":"Total","minor":2}],"io_wait_time_recursive":[],"io_merged_recursive":[],"io_service_time_recursive":[]},"memory_stats":{"usage":243146752,"max_usage":1373106176,"stats":{"hierarchical_memory_limit":9223372036854771712,"pgmajfault":0,"total_rss":212971520,"inactive_file":8192,"inactive_anon":6066176,"total_pgfault":2858421,"total_cache":23314432,"total_rss_huge":0,"total_active_anon":229904384,"total_pgmajfault":0,"pgpgin":1537608,"rss_huge":0,"mapped_file":0,"total_inactive_file":8192,"dirty":126976,"total_unevictable":0,"total_dirty":126976,"writeback":0,"pgpgout":1479921,"hierarchical_memsw_limit":0,"cache":23314432,"active_file":307200,"pgfault":2858421,"total_mapped_file":0,"total_pgpgout":1479921,"total_writeback":0,"rss":212971520,"unevictable":0,"total_inactive_anon":6066176,"total_pgpgin":1537608,"active_anon":229904384,"total_active_file":307200},"limit":540972998656},"name":"/MathProgBase-Zrr2OEkT","networks":{"eth0":{"rx_bytes":1525589,"rx_packets":846,"tx_packets":555,"tx_bytes":84023,"tx_dropped":0,"rx_dropped":5,"tx_errors":0,"rx_errors":0}},"id":"2fbdc0b2d67f849853a12791cae5e9cdbde9997a8e8493c6de0c04ace5784f4c","preread":"0001-01-01T00:00:00Z","storage_stats":{},"precpu_stats":{"throttling_data":{"throttled_periods":0,"throttled_time":0,"periods":0},"cpu_usage":{"usage_in_usermode":0,"usage_in_kernelmode":0,"total_usage":0}},"pids_stats":{"current":38},"num_procs":0,"cpu_stats":{"throttling_data":{"throttled_periods":0,"throttled_time":0,"periods":0},"system_cpu_usage":95783068960000000,"online_cpus":128,"cpu_usage":{"usage_in_usermode":141970000000,"usage_in_kernelmode":11370000000,"total_usage":152916881855,"percpu_usage":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,840630,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,152916041225,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}},"read":"2020-10-28T15:23:38.973205539Z"}