################################################################################
# PkgEval set-up: 2020-10-28T10:32:32.522
#

Julia Version 1.6.0-DEV.1352
Commit 8f71ea7f35 (2020-10-28 02:10 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807



################################################################################
# Installation: 2020-10-28T10:32:33.470
#

   Resolving package versions...
   Installed Conda ────────── v1.4.1
   Installed VersionParsing ─ v1.2.0
   Installed ASDF ─────────── v1.1.3
   Installed URIParser ────── v0.4.1
   Installed Parsers ──────── v1.0.11
   Installed MacroTools ───── v0.5.6
   Installed JSON ─────────── v0.21.1
   Installed PyCall ───────── v1.92.1
Updating `~/.julia/environments/v1.6/Project.toml`
  [686f71d1] + ASDF v1.1.3
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [686f71d1] + ASDF v1.1.3
  [8f4d0f93] + Conda v1.4.1
  [682c06a0] + JSON v0.21.1
  [1914dd2f] + MacroTools v0.5.6
  [69de0a69] + Parsers v1.0.11
  [438e738f] + PyCall v1.92.1
  [30578b45] + URIParser v0.4.1
  [81def892] + VersionParsing v1.2.0
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [de0858da] + Printf
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [8dfed614] + Test
  [4ec0a83e] + Unicode
    Building Conda ─→ `~/.julia/scratchspaces/44cfe95a-1eb2-52ea-b672-e2afdf69b78f/7a58bb32ce5d85f8bf7559aa7c2842f9aecf52fc/build.log`
    Building PyCall → `~/.julia/scratchspaces/44cfe95a-1eb2-52ea-b672-e2afdf69b78f/b6dff5fa725eff4f775f472acd86756d6e31fb02/build.log`
    Building ASDF ──→ `~/.julia/scratchspaces/44cfe95a-1eb2-52ea-b672-e2afdf69b78f/9dac995b6556e2b428dab6aa8cd165e78afe87a2/build.log`

PkgEval failed: Error building `ASDF`: 
Collecting package metadata (current_repodata.json): ...working... done
Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve.
Solving environment: ...working... failed with repodata from current_repodata.json, will retry with next repodata source.
Collecting package metadata (repodata.json): ...working... done
Solving environment: ...working... failed with initial frozen solve. Retrying with flexible solve.
Solving environment: ...working... Building graph of deps:   0%|          | 0/5 [00:00<?, ?it/s]Examining @/linux-64::__unix==0=0:   0%|          | 0/5 [00:00<?, ?it/s]Examining @/linux-64::__archspec==1=x86_64:  20%|██        | 1/5 [00:00<00:00, 6026.30it/s]Examining @/linux-64::__glibc==2.31=0:  40%|████      | 2/5 [00:00<00:00, 6955.73it/s]     Examining asdf:  60%|██████    | 3/5 [00:00<00:00, 7772.03it/s]                       Examining python=3.8:  80%|████████  | 4/5 [00:05<00:01,  1.47s/it]Examining python=3.8: 100%|██████████| 5/5 [00:05<00:00,  1.18s/it]                                                                   Determining conflicts:   0%|          | 0/5 [00:00<?, ?it/s]Examining conflict for asdf python:   0%|          | 0/5 [00:00<?, ?it/s]                                                                         
Found conflicts! Looking for incompatible packages.
This can take several minutes.  Press CTRL-C to abort.
failed

UnsatisfiableError: The following specifications were found to be incompatible with each other:

Output in format: Requested package -> Available versions

[ Info: Installing asdf via the Conda asdf package...
[ Info: Running `conda config --add channels astropy --file /home/pkgeval/.julia/conda/3/condarc-julia.yml --force` in root environment
[ Info: Running `conda install -q -y asdf` in root environment
ERROR: LoadError: failed process: Process(setenv(`/home/pkgeval/.julia/conda/3/bin/conda install -q -y asdf`,["PYTHONIOENCODING=UTF-8", "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin", "PWD=/home/pkgeval", "DISPLAY=:99", "OPENBLAS_NUM_THREADS=8", "XAUTHORITY=/tmp/xvfb-run.vHFuAG/Xauthority", "CI=true", "CONDARC=/home/pkgeval/.julia/conda/3/condarc-julia.yml", "R_HOME=*", "CONDA_PREFIX=/home/pkgeval/.julia/conda/3"  …  "JULIA_LOAD_PATH=@:/tmp/jl_kpHfOY", "JULIA_MAX_NUM_PRECOMPILE_FILES=9223372036854775807", "PKGEVAL=true", "HOME=/home/pkgeval", "JULIA_PKG_PRECOMPILE_AUTO=0", "JULIA_PKGEVAL=true", "OPENBLAS_MAIN_FREE=1", "JULIA_DEPOT_PATH=::/usr/local/share/julia", "HOSTNAME=96c7fc9fafd7", "JULIA_NUM_THREADS=2"]), ProcessExited(1)) [1]

Stacktrace:
  [1] pipeline_error
    @ ./process.jl:525 [inlined]
  [2] run(::Cmd; wait::Bool)
    @ Base ./process.jl:440
  [3] run
    @ ./process.jl:438 [inlined]
  [4] runconda(args::Cmd, env::String)
    @ Conda ~/.julia/packages/Conda/3rPhK/src/Conda.jl:114
  [5] add(pkg::String, env::String; channel::String)
    @ Conda ~/.julia/packages/Conda/3rPhK/src/Conda.jl:188
  [6] add
    @ ~/.julia/packages/Conda/3rPhK/src/Conda.jl:187 [inlined]
  [7] pyimport_conda(modulename::String, condapkg::String, channel::String)
    @ PyCall ~/.julia/packages/PyCall/BcTLp/src/PyCall.jl:710
  [8] top-level scope
    @ ~/.julia/packages/ASDF/0SzlD/deps/build.jl:6
  [9] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [10] top-level scope
    @ none:5
in expression starting at /home/pkgeval/.julia/packages/ASDF/0SzlD/deps/build.jl:6

caused by: PyError (PyImport_ImportModule

The Python package asdf could not be imported by pyimport. Usually this means
that you did not install asdf in the Python version being used by PyCall.

PyCall is currently configured to use the Julia-specific Python distribution
installed by the Conda.jl package.  To install the asdf module, you can
use `pyimport_conda("asdf", PKG)`, where PKG is the Anaconda
package the contains the module asdf, or alternatively you can use the
Conda package directly (via `using Conda` followed by `Conda.add` etcetera).

Alternatively, if you want to use a different Python distribution on your
system, such as a system-wide Python (as opposed to the Julia-specific Python),
you can re-configure PyCall with that Python.   As explained in the PyCall
documentation, set ENV["PYTHON"] to the path/name of the python executable
you want to use, run Pkg.build("PyCall"), and re-launch Julia.

) <class 'ModuleNotFoundError'>
ModuleNotFoundError("No module named 'asdf'")

Stacktrace:
 [1] pyimport(name::String)
   @ PyCall ~/.julia/packages/PyCall/BcTLp/src/PyCall.jl:547
 [2] pyimport_conda(modulename::String, condapkg::String, channel::String)
   @ PyCall ~/.julia/packages/PyCall/BcTLp/src/PyCall.jl:705
 [3] top-level scope
   @ ~/.julia/packages/ASDF/0SzlD/deps/build.jl:6
 [4] include(fname::String)
   @ Base.MainInclude ./client.jl:444
 [5] top-level scope
   @ none:5
Stacktrace:
  [1] pkgerror(msg::String)
    @ Pkg.Types /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] (::Pkg.Operations.var"#77#82"{Bool, Pkg.Types.Context, String, Pkg.Types.PackageSpec})()
    @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1016
  [3] withenv(::Pkg.Operations.var"#77#82"{Bool, Pkg.Types.Context, String, Pkg.Types.PackageSpec}, ::Pair{String, String}, ::Vararg{Pair{String, B} where B, N} where N)
    @ Base ./env.jl:161
  [4] (::Pkg.Operations.var"#104#108"{String, Pkg.Operations.var"#77#82"{Bool, Pkg.Types.Context, String, Pkg.Types.PackageSpec}, Pkg.Types.PackageSpec})()
    @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1506
  [5] with_temp_env(fn::Pkg.Operations.var"#104#108"{String, Pkg.Operations.var"#77#82"{Bool, Pkg.Types.Context, String, Pkg.Types.PackageSpec}, Pkg.Types.PackageSpec}, temp_env::String)
    @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1420
  [6] (::Pkg.Operations.var"#103#107"{Pkg.Operations.var"#77#82"{Bool, Pkg.Types.Context, String, Pkg.Types.PackageSpec}, Pkg.Types.Context, Pkg.Types.PackageSpec, String, Pkg.Types.Project, String})(tmp::String)
    @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1491
  [7] mktempdir(fn::Pkg.Operations.var"#103#107"{Pkg.Operations.var"#77#82"{Bool, Pkg.Types.Context, String, Pkg.Types.PackageSpec}, Pkg.Types.Context, Pkg.Types.PackageSpec, String, Pkg.Types.Project, String}, parent::String; prefix::String)
    @ Base.Filesystem ./file.jl:711
  [8] mktempdir(fn::Function, parent::String)
    @ Base.Filesystem ./file.jl:709
  [9] sandbox(fn::Function, ctx::Pkg.Types.Context, target::Pkg.Types.PackageSpec, target_path::String, sandbox_path::String, sandbox_project_override::Pkg.Types.Project)
    @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1458
 [10] build_versions(ctx::Pkg.Types.Context, uuids::Vector{Base.UUID}; verbose::Bool)
    @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:997
 [11] build_versions
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:926 [inlined]
 [12] add(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}, new_git::Vector{Base.UUID}; preserve::Pkg.Types.PreserveLevel, platform::Base.BinaryPlatforms.Platform)
    @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1217
 [13] add(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; preserve::Pkg.Types.PreserveLevel, platform::Base.BinaryPlatforms.Platform, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:195
 [14] add
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:146 [inlined]
 [15] add(pkgs::Vector{Pkg.Types.PackageSpec}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:71
 [16] add
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:70 [inlined]
 [17] #add#21
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
 [18] add
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
 [19] #add#20
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
 [20] add(pkg::String)
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67
 [21] top-level scope
    @ none:39
 [22] eval
    @ ./boot.jl:360 [inlined]
 [23] eval(x::Expr)
    @ Base.MainInclude ./client.jl:446
 [24] top-level scope
    @ none:1
 [25] eval(m::Module, e::Any)
    @ Core ./boot.jl:360
 [26] exec_options(opts::Base.JLOptions)
    @ Base ./client.jl:261
 [27] _start()
    @ Base ./client.jl:485


################################################################################
# PkgEval teardown: 2020-10-28T10:34:46.971
#


signal (15): Terminated
in expression starting at none:1
pthread_cond_wait at /lib/x86_64-linux-gnu/libpthread.so.0 (unknown line)
uv_cond_wait at /workspace/srcdir/libuv/src/unix/thread.c:847

CPU usage: 123.87s (112.01s user, 11.92s kernel)

Network usage:
- eth0: 258.234 MiB received, 938.279 KiB sent

Raw statistics: {"read":"2020-10-28T10:34:47.165113767Z","preread":"0001-01-01T00:00:00Z","pids_stats":{"current":46},"blkio_stats":{"io_service_bytes_recursive":[{"major":259,"minor":0,"op":"Read","value":0},{"major":259,"minor":0,"op":"Write","value":61440},{"major":259,"minor":0,"op":"Sync","value":0},{"major":259,"minor":0,"op":"Async","value":61440},{"major":259,"minor":0,"op":"Total","value":61440},{"major":253,"minor":2,"op":"Read","value":0},{"major":253,"minor":2,"op":"Write","value":61440},{"major":253,"minor":2,"op":"Sync","value":0},{"major":253,"minor":2,"op":"Async","value":61440},{"major":253,"minor":2,"op":"Total","value":61440}],"io_serviced_recursive":[{"major":259,"minor":0,"op":"Read","value":0},{"major":259,"minor":0,"op":"Write","value":15},{"major":259,"minor":0,"op":"Sync","value":0},{"major":259,"minor":0,"op":"Async","value":15},{"major":259,"minor":0,"op":"Total","value":15},{"major":253,"minor":2,"op":"Read","value":0},{"major":253,"minor":2,"op":"Write","value":15},{"major":253,"minor":2,"op":"Sync","value":0},{"major":253,"minor":2,"op":"Async","value":15},{"major":253,"minor":2,"op":"Total","value":15}],"io_queue_recursive":[],"io_service_time_recursive":[],"io_wait_time_recursive":[],"io_merged_recursive":[],"io_time_recursive":[],"sectors_recursive":[]},"num_procs":0,"storage_stats":{},"cpu_stats":{"cpu_usage":{"total_usage":123866084472,"percpu_usage":[429121717,2611077803,574175609,1641402778,3766584839,5422038120,991472426,1130047740,175057061,797298035,548812243,749448702,615437385,1447986418,2511474328,3452031900,1659182712,1071591630,463921281,4379366469,4831169983,4433504966,2198901473,2082841735,1425040862,767711489,3256266293,8680436297,1140672946,1087811789,681878792,780081511,5775070,202427456,56474925,242695778,69701978,161437216,61865818,77062401,14295985,43310290,71479651,196628408,316002286,3366867068,880222755,30862362,429031903,113360842,108798213,8806514,467357329,474965510,259095094,20544668,10248333,177317454,487887016,146160747,44470920,135831043,7270163,747683316,519219406,706467908,844879218,664706393,2545274690,2389229969,468265011,1553146897,521701702,1568865439,265978249,353046849,293913564,1946507082,1046134492,2816041517,337529332,297422253,305367886,410657174,1702652266,1252592090,2523190606,1384792830,2512183284,1729327616,1454749930,2504692016,720144809,625808006,706359572,1238905547,1005210985,287620477,160888348,264685164,146682145,62962127,85953676,121056796,18265936,47526710,162221035,73735371,166266117,417717671,877214634,235725163,1086114876,61251533,2096650557,423568286,11861955,445974760,471526721,103174421,238842404,619048527,167795687,78182270,109885649,21269147,269409145,78256732],"usage_in_kernelmode":11920000000,"usage_in_usermode":112010000000},"system_cpu_usage":93578030460000000,"online_cpus":128,"throttling_data":{"periods":1355,"throttled_periods":24,"throttled_time":8555920735}},"precpu_stats":{"cpu_usage":{"total_usage":0,"usage_in_kernelmode":0,"usage_in_usermode":0},"throttling_data":{"periods":0,"throttled_periods":0,"throttled_time":0}},"memory_stats":{"usage":1953214464,"max_usage":2363994112,"stats":{"active_anon":687337472,"active_file":28672,"cache":1633804288,"dirty":0,"hierarchical_memory_limit":9223372036854771712,"hierarchical_memsw_limit":0,"inactive_anon":1181241344,"inactive_file":8192,"mapped_file":0,"pgfault":1528107,"pgmajfault":0,"pgpgin":1570647,"pgpgout":1114442,"rss":234811392,"rss_huge":0,"total_active_anon":687337472,"total_active_file":28672,"total_cache":1633804288,"total_dirty":0,"total_inactive_anon":1181241344,"total_inactive_file":8192,"total_mapped_file":0,"total_pgfault":1528107,"total_pgmajfault":0,"total_pgpgin":1570647,"total_pgpgout":1114442,"total_rss":234811392,"total_rss_huge":0,"total_unevictable":0,"total_writeback":0,"unevictable":0,"writeback":0},"limit":540972998656},"name":"/ASDF-kUMVhjFT","id":"96c7fc9fafd74e0137a7bd52820ea1e0350969d5600ed85fcfce7ea070629959","networks":{"eth0":{"rx_bytes":270778071,"rx_packets":29112,"rx_errors":0,"rx_dropped":2,"tx_bytes":960798,"tx_packets":16683,"tx_errors":0,"tx_dropped":0}}}

