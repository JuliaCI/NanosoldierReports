################################################################################
# PkgEval set-up: 2020-10-28T10:35:15.744
#

Julia Version 1.6.0-DEV.1352
Commit 8f71ea7f35 (2020-10-28 02:10 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807



################################################################################
# Installation: 2020-10-28T10:35:17.726
#

   Resolving package versions...
   Installed CompilerSupportLibraries_jll ─ v0.3.4+0
   Installed MPICH_jll ──────────────────── v3.3.2+10
   Installed COSMA_jll ──────────────────── v2.2.0+0
   Installed COSMA ──────────────────────── v0.1.2
   Installed Primes ─────────────────────── v0.4.0
   Installed MPIClusterManagers ─────────── v0.2.0
   Installed OpenMPI_jll ────────────────── v4.0.2+2
   Installed OpenBLAS_jll ───────────────── v0.3.10+0
   Installed MicrosoftMPI_jll ───────────── v10.1.2+3
   Installed DocStringExtensions ────────── v0.8.3
   Installed Requires ───────────────────── v1.1.0
   Installed DistributedArrays ──────────── v0.6.5
   Installed MPI ────────────────────────── v0.14.3
   Installed JLLWrappers ────────────────── v1.1.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [ff1143b4] + COSMA v0.1.2
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [ff1143b4] + COSMA v0.1.2
  [aaf54ef3] + DistributedArrays v0.6.5
  [ffbed154] + DocStringExtensions v0.8.3
  [692b3bcd] + JLLWrappers v1.1.3
  [da04e1cc] + MPI v0.14.3
  [e7922434] + MPIClusterManagers v0.2.0
  [27ebfcd6] + Primes v0.4.0
  [ae029012] + Requires v1.1.0
  [0efae8bf] + COSMA_jll v2.2.0+0
  [e66e0078] + CompilerSupportLibraries_jll v0.3.4+0
  [7cb0a576] + MPICH_jll v3.3.2+10
  [9237b28f] + MicrosoftMPI_jll v10.1.2+3
  [4536629a] + OpenBLAS_jll v0.3.10+0
  [fe0851c0] + OpenMPI_jll v4.0.2+2
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [f43a241f] + Downloads
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
  [deac9b47] + LibCURL_jll
  [14a3606d] + MozillaCACerts_jll
    Building MPI → `~/.julia/scratchspaces/44cfe95a-1eb2-52ea-b672-e2afdf69b78f/0fc37a7feb384b51bd6e841ea6cfc424623aab74/build.log`


################################################################################
# Testing: 2020-10-28T10:35:33.734
#


     Testing COSMA
Status `/tmp/jl_BRNk01/Project.toml`
  [ff1143b4] COSMA v0.1.2
  [aaf54ef3] DistributedArrays v0.6.5
  [da04e1cc] MPI v0.14.3
  [e7922434] MPIClusterManagers v0.2.0
  [0efae8bf] COSMA_jll v2.2.0+0
  [8ba89e20] Distributed
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_BRNk01/Manifest.toml`
  [ff1143b4] COSMA v0.1.2
  [aaf54ef3] DistributedArrays v0.6.5
  [ffbed154] DocStringExtensions v0.8.3
  [692b3bcd] JLLWrappers v1.1.3
  [da04e1cc] MPI v0.14.3
  [e7922434] MPIClusterManagers v0.2.0
  [27ebfcd6] Primes v0.4.0
  [ae029012] Requires v1.1.0
  [0efae8bf] COSMA_jll v2.2.0+0
  [e66e0078] CompilerSupportLibraries_jll v0.3.4+0
  [7cb0a576] MPICH_jll v3.3.2+10
  [9237b28f] MicrosoftMPI_jll v10.1.2+3
  [4536629a] OpenBLAS_jll v0.3.10+0
  [fe0851c0] OpenMPI_jll v4.0.2+2
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [f43a241f] Downloads
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
  [deac9b47] LibCURL_jll
  [14a3606d] MozillaCACerts_jll
     Testing Running tests...
Test Summary:      | Pass  Total
Incompatible sizes |    4      4
Test Summary:                                              | Pass  Total
C = alpha * identity(A) * identity(B) + beta * C (Float32) |    1      1
Test Summary:                                              | Pass  Total
C = alpha * identity(A) * identity(B) + beta * C (Float64) |    1      1
Test Summary:                                                 | Pass  Total
C = alpha * identity(A) * identity(B) + beta * C (ComplexF32) |    1      1
Test Summary:                                                 | Pass  Total
C = alpha * identity(A) * identity(B) + beta * C (ComplexF64) |    1      1
Test Summary:                                               | Pass  Total
C = alpha * identity(A) * transpose(B) + beta * C (Float32) |    1      1
Test Summary:                                               | Pass  Total
C = alpha * identity(A) * transpose(B) + beta * C (Float64) |    1      1
Test Summary:                                                  | Pass  Total
C = alpha * identity(A) * transpose(B) + beta * C (ComplexF32) |    1      1
Test Summary:                                                  | Pass  Total
C = alpha * identity(A) * transpose(B) + beta * C (ComplexF64) |    1      1
Test Summary:                                             |
C = alpha * identity(A) * adjoint(B) + beta * C (Float32) | No tests
Test Summary:                                             |
C = alpha * identity(A) * adjoint(B) + beta * C (Float64) | No tests
Test Summary:                                                | Pass  Total
C = alpha * identity(A) * adjoint(B) + beta * C (ComplexF32) |    1      1
Test Summary:                                                | Pass  Total
C = alpha * identity(A) * adjoint(B) + beta * C (ComplexF64) |    1      1
Test Summary:                                               | Pass  Total
C = alpha * transpose(A) * identity(B) + beta * C (Float32) |    1      1
Test Summary:                                               | Pass  Total
C = alpha * transpose(A) * identity(B) + beta * C (Float64) |    1      1
Test Summary:                                                  | Pass  Total
C = alpha * transpose(A) * identity(B) + beta * C (ComplexF32) |    1      1
Test Summary:                                                  | Pass  Total
C = alpha * transpose(A) * identity(B) + beta * C (ComplexF64) |    1      1
Test Summary:                                                | Pass  Total
C = alpha * transpose(A) * transpose(B) + beta * C (Float32) |    1      1
Test Summary:                                                | Pass  Total
C = alpha * transpose(A) * transpose(B) + beta * C (Float64) |    1      1
Test Summary:                                                   | Pass  Total
C = alpha * transpose(A) * transpose(B) + beta * C (ComplexF32) |    1      1
Test Summary:                                                   | Pass  Total
C = alpha * transpose(A) * transpose(B) + beta * C (ComplexF64) |    1      1
Test Summary:                                              |
C = alpha * transpose(A) * adjoint(B) + beta * C (Float32) | No tests
Test Summary:                                              |
C = alpha * transpose(A) * adjoint(B) + beta * C (Float64) | No tests
Test Summary:                                                 | Pass  Total
C = alpha * transpose(A) * adjoint(B) + beta * C (ComplexF32) |    1      1
Test Summary:                                                 | Pass  Total
C = alpha * transpose(A) * adjoint(B) + beta * C (ComplexF64) |    1      1
Test Summary:                                             |
C = alpha * adjoint(A) * identity(B) + beta * C (Float32) | No tests
Test Summary:                                             |
C = alpha * adjoint(A) * identity(B) + beta * C (Float64) | No tests
Test Summary:                                                | Pass  Total
C = alpha * adjoint(A) * identity(B) + beta * C (ComplexF32) |    1      1
Test Summary:                                                | Pass  Total
C = alpha * adjoint(A) * identity(B) + beta * C (ComplexF64) |    1      1
Test Summary:                                              |
C = alpha * adjoint(A) * transpose(B) + beta * C (Float32) | No tests
Test Summary:                                              |
C = alpha * adjoint(A) * transpose(B) + beta * C (Float64) | No tests
Test Summary:                                                 | Pass  Total
C = alpha * adjoint(A) * transpose(B) + beta * C (ComplexF32) |    1      1
Test Summary:                                                 | Pass  Total
C = alpha * adjoint(A) * transpose(B) + beta * C (ComplexF64) |    1      1
Test Summary:                                            |
C = alpha * adjoint(A) * adjoint(B) + beta * C (Float32) | No tests
Test Summary:                                            |
C = alpha * adjoint(A) * adjoint(B) + beta * C (Float64) | No tests
Test Summary:                                               | Pass  Total
C = alpha * adjoint(A) * adjoint(B) + beta * C (ComplexF32) |    1      1
Test Summary:                                               | Pass  Total
C = alpha * adjoint(A) * adjoint(B) + beta * C (ComplexF64) |    1      1
     Testing COSMA tests passed 

PkgEval succeeded


################################################################################
# PkgEval teardown: 2020-10-28T10:46:57.660
#


CPU usage: 1076.56s (913.84s user, 70.50s kernel)

Network usage:
- eth0: 364.518 KiB received, 48.291 KiB sent

Raw statistics: {"read":"2020-10-28T10:46:58.395118502Z","preread":"0001-01-01T00:00:00Z","pids_stats":{"current":769},"blkio_stats":{"io_service_bytes_recursive":[{"major":259,"minor":0,"op":"Read","value":0},{"major":259,"minor":0,"op":"Write","value":45056},{"major":259,"minor":0,"op":"Sync","value":0},{"major":259,"minor":0,"op":"Async","value":45056},{"major":259,"minor":0,"op":"Total","value":45056},{"major":253,"minor":2,"op":"Read","value":0},{"major":253,"minor":2,"op":"Write","value":45056},{"major":253,"minor":2,"op":"Sync","value":0},{"major":253,"minor":2,"op":"Async","value":45056},{"major":253,"minor":2,"op":"Total","value":45056}],"io_serviced_recursive":[{"major":259,"minor":0,"op":"Read","value":0},{"major":259,"minor":0,"op":"Write","value":9},{"major":259,"minor":0,"op":"Sync","value":0},{"major":259,"minor":0,"op":"Async","value":9},{"major":259,"minor":0,"op":"Total","value":9},{"major":253,"minor":2,"op":"Read","value":0},{"major":253,"minor":2,"op":"Write","value":9},{"major":253,"minor":2,"op":"Sync","value":0},{"major":253,"minor":2,"op":"Async","value":9},{"major":253,"minor":2,"op":"Total","value":9}],"io_queue_recursive":[],"io_service_time_recursive":[],"io_wait_time_recursive":[],"io_merged_recursive":[],"io_time_recursive":[],"sectors_recursive":[]},"num_procs":0,"storage_stats":{},"cpu_stats":{"cpu_usage":{"total_usage":1076558910413,"percpu_usage":[8713770350,9111841452,8919587334,8178017133,8790370746,9908688574,8233715974,8959523918,9421091544,9539992562,9403396819,9138240469,9029635881,8866475368,8568244662,9308997487,9214755302,9662971581,9012134326,8744887872,8708136359,9262288577,9782898699,8616626184,8498480505,9226155029,9650994290,8627155275,10067645053,9953834489,8910777029,9030312518,7348581085,7628931736,8068536460,7465306298,7574258949,7651781678,8216296104,7204074126,7304151823,7305646978,7339354160,6993720809,7005195554,7551043208,8124861704,7019606151,7510314265,7625629245,7841544569,7912669840,6542258299,7563544560,7612682548,7306965946,6983315423,7068314190,6986932991,6986370980,7305394383,7881274943,7027286570,7182195609,9265416691,9957509495,9371786729,9078399586,9624096302,8486214931,8853277703,9512176739,9285787081,9566279704,10108430258,9314264095,9539212184,8713162992,8860474980,8915792777,9185132006,9661340751,10012941470,9863815455,10940932062,9259421233,9607613423,9473544849,9168652037,9332271547,9969052502,9870971377,8592003949,9784916636,8982349349,9365071825,7752078760,7248179371,8459873116,7479455372,7889464023,6973972287,7252548370,7980921916,7594004955,7960016237,8341055725,8179817636,7392547062,7918707259,7314962597,7829888660,7670387830,7621271068,7478403816,8173678335,7734540059,7718055144,7838138563,7853299128,7288763877,7613549933,7622636350,7377341178,7490867394,7982049915,7790697778,8015739436],"usage_in_kernelmode":70500000000,"usage_in_usermode":913840000000},"system_cpu_usage":93670651620000000,"online_cpus":128,"throttling_data":{"periods":6755,"throttled_periods":4952,"throttled_time":28282611058882}},"precpu_stats":{"cpu_usage":{"total_usage":0,"usage_in_kernelmode":0,"usage_in_usermode":0},"throttling_data":{"periods":0,"throttled_periods":0,"throttled_time":0}},"memory_stats":{"usage":1157087232,"max_usage":2035171328,"stats":{"active_anon":1091887104,"active_file":0,"cache":4546560,"dirty":0,"hierarchical_memory_limit":9223372036854771712,"hierarchical_memsw_limit":0,"inactive_anon":1830912,"inactive_file":8192,"mapped_file":0,"pgfault":3062169,"pgmajfault":0,"pgpgin":1064512,"pgpgout":797478,"rss":1089224704,"rss_huge":0,"total_active_anon":1091887104,"total_active_file":0,"total_cache":4546560,"total_dirty":0,"total_inactive_anon":1830912,"total_inactive_file":8192,"total_mapped_file":0,"total_pgfault":3062169,"total_pgmajfault":0,"total_pgpgin":1064512,"total_pgpgout":797478,"total_rss":1089224704,"total_rss_huge":0,"total_unevictable":0,"total_writeback":0,"unevictable":0,"writeback":0},"limit":540972998656},"name":"/COSMA-iOsiDyDe","id":"8fb3a5e91998da9dd7de64ce0c217636a74f425a33296a79e744c326135d45db","networks":{"eth0":{"rx_bytes":373266,"rx_packets":1029,"rx_errors":0,"rx_dropped":24,"tx_bytes":49450,"tx_packets":318,"tx_errors":0,"tx_dropped":0}}}

