################################################################################
# PkgEval set-up: 2020-10-28T11:47:15.674
#

Julia Version 1.6.0-DEV.1352
Commit 8f71ea7f35 (2020-10-28 02:10 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807



################################################################################
# Installation: 2020-10-28T11:47:17.199
#

   Resolving package versions...
   Installed Compat ────────────────── v3.23.0
   Installed MutableArithmetics ────── v0.2.10
   Installed MultivariatePolynomials ─ v0.3.11
   Installed OrderedCollections ────── v1.3.1
   Installed DataStructures ────────── v0.18.8
Updating `~/.julia/environments/v1.6/Project.toml`
  [102ac46a] + MultivariatePolynomials v0.3.11
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [34da2185] + Compat v3.23.0
  [864edb3b] + DataStructures v0.18.8
  [102ac46a] + MultivariatePolynomials v0.3.11
  [d8a4904e] + MutableArithmetics v0.2.10
  [bac558e1] + OrderedCollections v1.3.1
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [f43a241f] + Downloads
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
  [deac9b47] + LibCURL_jll
  [14a3606d] + MozillaCACerts_jll


################################################################################
# Testing: 2020-10-28T11:47:20.008
#


     Testing MultivariatePolynomials
Status `/tmp/jl_tpywG0/Project.toml`
  [6e4b80f9] BenchmarkTools v0.5.0
  [864edb3b] DataStructures v0.18.8
  [7c1d4256] DynamicPolynomials v0.3.14
  [102ac46a] MultivariatePolynomials v0.3.11
  [d8a4904e] MutableArithmetics v0.2.10
  [afbbf031] TypedPolynomials v0.2.8
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_tpywG0/Manifest.toml`
  [6e4b80f9] BenchmarkTools v0.5.0
  [34da2185] Compat v3.23.0
  [864edb3b] DataStructures v0.18.8
  [7c1d4256] DynamicPolynomials v0.3.14
  [682c06a0] JSON v0.21.1
  [1914dd2f] MacroTools v0.5.6
  [102ac46a] MultivariatePolynomials v0.3.11
  [d8a4904e] MutableArithmetics v0.2.10
  [bac558e1] OrderedCollections v1.3.1
  [69de0a69] Parsers v1.0.11
  [189a3867] Reexport v0.2.0
  [afbbf031] TypedPolynomials v0.2.8
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [f43a241f] Downloads
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
  [deac9b47] LibCURL_jll
  [14a3606d] MozillaCACerts_jll
     Testing Running tests...
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:34
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:34 =# MA.@rewrite(x .+ sum((1 for i = 1:0))), x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#9#17", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#211
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#215
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#218
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#219
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:34
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:36
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:36 =# MA.@rewrite(sum((1 for i = 1:0)) .+ x), x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#11#19", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#211
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#215
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#218
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#219
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:36
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:37
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:37 =# MA.@rewrite(sum((1 for i = 1:0)) * 1 ^ 2 .+ x), x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#12#20", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#211
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#215
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#218
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#219
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:37
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:38
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:38 =# MA.@rewrite(x .- sum((1 for i = 1:0))), x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#13#21", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#211
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#215
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#218
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#219
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:38
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:40
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:40 =# MA.@rewrite(sum((1 for i = 1:0)) .- x), -x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#15#23", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#211
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#215
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#218
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#219
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:40
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:41
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:41 =# MA.@rewrite(sum((1 for i = 1:0)) * 1 ^ 2 .- x), -x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#16#24", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#211
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#215
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#218
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#219
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:41
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:34
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:34 =# MA.@rewrite(x .+ sum((1 for i = 1:0))), x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#9#17", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#211
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#215
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#218
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#219
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:34
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:36
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:36 =# MA.@rewrite(sum((1 for i = 1:0)) .+ x), x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#11#19", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#211
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#215
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#218
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#219
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:36
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:37
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:37 =# MA.@rewrite(sum((1 for i = 1:0)) * 1 ^ 2 .+ x), x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#12#20", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#211
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#215
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#218
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#219
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:37
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:38
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:38 =# MA.@rewrite(x .- sum((1 for i = 1:0))), x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#13#21", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#211
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#215
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#218
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#219
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:38
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:40
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:40 =# MA.@rewrite(sum((1 for i = 1:0)) .- x), -x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#15#23", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#211
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#215
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#218
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#219
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:40
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:41
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:41 =# MA.@rewrite(sum((1 for i = 1:0)) * 1 ^ 2 .- x), -x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#16#24", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#211
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#215
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#218
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#219
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:41
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:34
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:34 =# MA.@rewrite(x .+ sum((1 for i = 1:0))), x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#9#17", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#211
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#215
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#218
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#219
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:34
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:36
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:36 =# MA.@rewrite(sum((1 for i = 1:0)) .+ x), x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#11#19", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#211
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#215
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#218
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#219
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:36
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:37
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:37 =# MA.@rewrite(sum((1 for i = 1:0)) * 1 ^ 2 .+ x), x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#12#20", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#211
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#215
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#218
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#219
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:37
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:38
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:38 =# MA.@rewrite(x .- sum((1 for i = 1:0))), x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#13#21", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#211
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#215
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#218
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#219
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:38
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:40
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:40 =# MA.@rewrite(sum((1 for i = 1:0)) .- x), -x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#15#23", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#211
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#215
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#218
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#219
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:40
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:41
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:41 =# MA.@rewrite(sum((1 for i = 1:0)) * 1 ^ 2 .- x), -x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#16#24", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#211
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#215
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#218
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#219
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:41
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:34
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:34 =# MA.@rewrite(x .+ sum((1 for i = 1:0))), x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#9#17", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#211
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#215
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#218
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#219
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:34
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:36
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:36 =# MA.@rewrite(sum((1 for i = 1:0)) .+ x), x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#11#19", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#211
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#215
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#218
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#219
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:36
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:37
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:37 =# MA.@rewrite(sum((1 for i = 1:0)) * 1 ^ 2 .+ x), x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#12#20", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#211
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#215
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#218
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#219
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:37
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:38
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:38 =# MA.@rewrite(x .- sum((1 for i = 1:0))), x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#13#21", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#211
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#215
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#218
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#219
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:38
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:40
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:40 =# MA.@rewrite(sum((1 for i = 1:0)) .- x), -x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#15#23", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#211
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#215
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#218
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#219
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:40
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:41
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:41 =# MA.@rewrite(sum((1 for i = 1:0)) * 1 ^ 2 .- x), -x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#16#24", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#211
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#215
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#218
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#219
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:41
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:34
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:34 =# MA.@rewrite(x .+ sum((1 for i = 1:0))), x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#9#17", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#211
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#215
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#218
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#219
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:34
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:36
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:36 =# MA.@rewrite(sum((1 for i = 1:0)) .+ x), x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#11#19", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#211
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#215
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#218
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#219
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:36
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:37
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:37 =# MA.@rewrite(sum((1 for i = 1:0)) * 1 ^ 2 .+ x), x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#12#20", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#211
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#215
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#218
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#219
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:37
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:38
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:38 =# MA.@rewrite(x .- sum((1 for i = 1:0))), x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#13#21", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#211
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#215
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#218
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#219
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:38
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:40
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:40 =# MA.@rewrite(sum((1 for i = 1:0)) .- x), -x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#15#23", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#211
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#215
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#218
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#219
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:40
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:41
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:41 =# MA.@rewrite(sum((1 for i = 1:0)) * 1 ^ 2 .- x), -x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#16#24", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#211
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#215
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#218
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#219
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:41
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:34
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:34 =# MA.@rewrite(x .+ sum((1 for i = 1:0))), x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#9#17", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#211
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#215
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#218
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#219
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:34
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:36
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:36 =# MA.@rewrite(sum((1 for i = 1:0)) .+ x), x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#11#19", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#211
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#215
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#218
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#219
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:36
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:37
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:37 =# MA.@rewrite(sum((1 for i = 1:0)) * 1 ^ 2 .+ x), x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#12#20", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#211
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#215
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#218
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#219
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:37
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:38
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:38 =# MA.@rewrite(x .- sum((1 for i = 1:0))), x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#13#21", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#211
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#215
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#218
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#219
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:38
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:40
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:40 =# MA.@rewrite(sum((1 for i = 1:0)) .- x), -x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#15#23", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#211
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#215
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#218
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#219
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:40
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:41
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:41 =# MA.@rewrite(sum((1 for i = 1:0)) * 1 ^ 2 .- x), -x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#16#24", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#211
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#215
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#218
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#219
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:41
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:34
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:34 =# MA.@rewrite(x .+ sum((1 for i = 1:0))), x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#9#17", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#211
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#215
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#218
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#219
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:34
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:36
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:36 =# MA.@rewrite(sum((1 for i = 1:0)) .+ x), x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#11#19", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#211
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#215
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#218
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#219
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:36
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:37
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:37 =# MA.@rewrite(sum((1 for i = 1:0)) * 1 ^ 2 .+ x), x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#12#20", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#211
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#215
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#218
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#219
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:37
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:38
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:38 =# MA.@rewrite(x .- sum((1 for i = 1:0))), x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#13#21", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#211
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#215
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#218
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#219
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:38
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:40
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:40 =# MA.@rewrite(sum((1 for i = 1:0)) .- x), -x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#15#23", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#211
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#215
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#218
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#219
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:40
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
empty_sum: Error During Test at /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:41
  Test threw exception
  Expression: MA.isequal_canonical(#= /home/pkgeval/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:41 =# MA.@rewrite(sum((1 for i = 1:0)) * 1 ^ 2 .- x), -x)
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{MutableArithmetics.Test.var"#16#24", Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Int64})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#211
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#215
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#218
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#219
      @ ./reduce.jl:528 [inlined]
   [15] sum
      @ ./reduce.jl:528 [inlined]
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] empty_sum_test(x::DynamicPolynomials.PolyVar{true})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/scalar.jl:41
   [18] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17 [inlined]
   [19] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [20] scalar_test(args::DynamicPolynomials.PolyVar{true}; exclude::Vector{String})
      @ MutableArithmetics.Test ~/.julia/packages/MutableArithmetics/NuiNA/src/Test/config.jl:17
Test Summary:                     | Pass  Error  Broken  Total
MutableArithmetics with variables | 6364     42      14   6420
  Scalar                          |  504     42      14    560
    empty_sum                     |    7      6       2     15
    scalar_uniform_scaling        |   33                    33
    cube                          |   14                    14
    iszero                        |   13                    13
    mul_scalar_array              |    4                     4
    scalar_in_any                 |    1                     1
    empty_sum                     |    7      6       2     15
    scalar_uniform_scaling        |   33                    33
    cube                          |   14                    14
    iszero                        |   13                    13
    mul_scalar_array              |    4                     4
    scalar_in_any                 |    1                     1
    empty_sum                     |    7      6       2     15
    scalar_uniform_scaling        |   33                    33
    cube                          |   14                    14
    iszero                        |   13                    13
    mul_scalar_array              |    4                     4
    scalar_in_any                 |    1                     1
    empty_sum                     |    7      6       2     15
    scalar_uniform_scaling        |   33                    33
    cube                          |   14                    14
    iszero                        |   13                    13
    mul_scalar_array              |    4                     4
    scalar_in_any                 |    1                     1
    empty_sum                     |    7      6       2     15
    scalar_uniform_scaling        |   33                    33
    cube                          |   14                    14
    iszero                        |   13                    13
    mul_scalar_array              |    4                     4
    scalar_in_any                 |    1                     1
    empty_sum                     |    7      6       2     15
    scalar_uniform_scaling        |   33                    33
    cube                          |   14                    14
    iszero                        |   13                    13
    mul_scalar_array              |    4                     4
    scalar_in_any                 |    1                     1
    empty_sum                     |    7      6       2     15
    scalar_uniform_scaling        |   33                    33
    cube                          |   14                    14
    iszero                        |   13                    13
    mul_scalar_array              |    4                     4
    scalar_in_any                 |    1                     1
  Quadratic                       | 2824                  2824
  Sparse                          |  268                   268
  Vector                          | 1805                  1805
  Matrix                          |  938                   938
ERROR: LoadError: LoadError: LoadError: Some tests did not pass: 6364 passed, 0 failed, 42 errored, 14 broken.
in expression starting at /home/pkgeval/.julia/packages/MultivariatePolynomials/4OWi3/test/mutable_arithmetics.jl:75
in expression starting at /home/pkgeval/.julia/packages/MultivariatePolynomials/4OWi3/test/commutativetests.jl:1
in expression starting at /home/pkgeval/.julia/packages/MultivariatePolynomials/4OWi3/test/runtests.jl:19

PkgEval failed: Package MultivariatePolynomials errored during testing
Stacktrace:
  [1] pkgerror(msg::String)
    @ Pkg.Types /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1651
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:334
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:321
  [5] #test#62
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:71 [inlined]
  [6] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:70 [inlined]
  [7] #test#61
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [8] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67
 [10] test(pkg::String)
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67
 [11] top-level scope
    @ none:44
 [12] eval
    @ ./boot.jl:360 [inlined]
 [13] eval(x::Expr)
    @ Base.MainInclude ./client.jl:446
 [14] top-level scope
    @ none:1
 [15] eval(m::Module, e::Any)
    @ Core ./boot.jl:360
 [16] exec_options(opts::Base.JLOptions)
    @ Base ./client.jl:261
 [17] _start()
    @ Base ./client.jl:485


################################################################################
# PkgEval teardown: 2020-10-28T11:50:30.535
#


signal (15): Terminated
in expression starting at none:1
pthread_cond_wait at /lib/x86_64-linux-gnu/libpthread.so.0 (unknown line)
uv_cond_wait at /workspace/srcdir/libuv/src/unix/thread.c:847

CPU usage: 177.74s (168.94s user, 9.64s kernel)

Network usage:
- eth0: 535.154 KiB received, 40.514 KiB sent

Raw statistics: {"read":"2020-10-28T11:50:30.648867987Z","preread":"0001-01-01T00:00:00Z","pids_stats":{"current":46},"blkio_stats":{"io_service_bytes_recursive":[{"major":259,"minor":0,"op":"Read","value":0},{"major":259,"minor":0,"op":"Write","value":24576},{"major":259,"minor":0,"op":"Sync","value":0},{"major":259,"minor":0,"op":"Async","value":24576},{"major":259,"minor":0,"op":"Total","value":24576},{"major":253,"minor":2,"op":"Read","value":0},{"major":253,"minor":2,"op":"Write","value":24576},{"major":253,"minor":2,"op":"Sync","value":0},{"major":253,"minor":2,"op":"Async","value":24576},{"major":253,"minor":2,"op":"Total","value":24576}],"io_serviced_recursive":[{"major":259,"minor":0,"op":"Read","value":0},{"major":259,"minor":0,"op":"Write","value":5},{"major":259,"minor":0,"op":"Sync","value":0},{"major":259,"minor":0,"op":"Async","value":5},{"major":259,"minor":0,"op":"Total","value":5},{"major":253,"minor":2,"op":"Read","value":0},{"major":253,"minor":2,"op":"Write","value":5},{"major":253,"minor":2,"op":"Sync","value":0},{"major":253,"minor":2,"op":"Async","value":5},{"major":253,"minor":2,"op":"Total","value":5}],"io_queue_recursive":[],"io_service_time_recursive":[],"io_wait_time_recursive":[],"io_merged_recursive":[],"io_time_recursive":[],"sectors_recursive":[]},"num_procs":0,"storage_stats":{},"cpu_stats":{"cpu_usage":{"total_usage":177735728275,"percpu_usage":[10275985,2599571,55021244,586310,202060531,313572213,2126161,36419183,141880978,732561580,10029674,46392296,83604678,4061132,41538796,74245469,110088353,13225045,35623315,29641442,676576036,195859927,389817774,168259106,52656930,25335335,198315414,33980,166284925,6380442,301839371,163022995,3486148913,2339658072,2612144660,1823219486,3749285426,519065895,2117854291,2078229552,482813248,1639140878,1733768557,1404442175,1709486863,1181404958,2624042560,1412101035,3331212615,2051468710,4589975532,391746063,2816368598,7014935189,1687576129,3435242821,7428638720,634386071,2869304446,1907423691,4035731957,938362179,4188767472,923933768,105359943,28512282,54849801,48716093,127983061,64626376,271766612,36503844,130775306,45038937,292226898,104367082,69155047,45180578,5250392,163153845,192784245,219219477,74157395,93128888,228667351,36864156,6870334,136858243,96346127,51833591,374335990,10572866,19924438,2194681,111781406,75989878,3362890989,3561865354,3745332093,3379205575,5849355529,1465791549,1587995601,4118955093,1275024293,1148461566,3575979383,2804277586,1237438354,1761810942,2448127053,3391016685,1491277472,2326750784,6447755501,596586484,1016794198,1416887940,1111515113,1338982375,4338462597,1117970710,2421457296,1569545668,1628750656,2372864991,15418184570,1635602391],"usage_in_kernelmode":9640000000,"usage_in_usermode":168940000000},"system_cpu_usage":94154996060000000,"online_cpus":128,"throttling_data":{"periods":1958,"throttled_periods":13,"throttled_time":2212787797}},"precpu_stats":{"cpu_usage":{"total_usage":0,"usage_in_kernelmode":0,"usage_in_usermode":0},"throttling_data":{"periods":0,"throttled_periods":0,"throttled_time":0}},"memory_stats":{"usage":229015552,"max_usage":649777152,"stats":{"active_anon":203706368,"active_file":0,"cache":5611520,"dirty":0,"hierarchical_memory_limit":9223372036854771712,"hierarchical_memsw_limit":0,"inactive_anon":2383872,"inactive_file":8192,"mapped_file":0,"pgfault":2088692,"pgmajfault":0,"pgpgin":538433,"pgpgout":488111,"rss":200507392,"rss_huge":0,"total_active_anon":203706368,"total_active_file":0,"total_cache":5611520,"total_dirty":0,"total_inactive_anon":2383872,"total_inactive_file":8192,"total_mapped_file":0,"total_pgfault":2088692,"total_pgmajfault":0,"total_pgpgin":538433,"total_pgpgout":488111,"total_rss":200507392,"total_rss_huge":0,"total_unevictable":0,"total_writeback":0,"unevictable":0,"writeback":0},"limit":540972998656},"name":"/MultivariatePolynomials-4tS9uIZS","id":"d21fa12d20e9cb724ad26f2df47702a1850d8f58bef2419692a10547a087612d","networks":{"eth0":{"rx_bytes":547998,"rx_packets":492,"rx_errors":0,"rx_dropped":7,"tx_bytes":41486,"tx_packets":291,"tx_errors":0,"tx_dropped":0}}}

