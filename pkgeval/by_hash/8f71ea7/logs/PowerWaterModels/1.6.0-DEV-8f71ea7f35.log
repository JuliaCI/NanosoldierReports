################################################################################
# PkgEval set-up: 2020-10-28T10:41:11.959
#

Julia Version 1.6.0-DEV.1352
Commit 8f71ea7f35 (2020-10-28 02:10 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807



################################################################################
# Installation: 2020-10-28T10:41:13.826
#

   Resolving package versions...
   Installed MbedTLS_jll ────────────────── v2.16.8+0
   Installed IniFile ────────────────────── v0.5.0
   Installed MbedTLS ────────────────────── v1.0.3
   Installed Distances ──────────────────── v0.9.2
   Installed Parsers ────────────────────── v1.0.11
   Installed MutableArithmetics ─────────── v0.2.10
   Installed Parameters ─────────────────── v0.12.1
   Installed PowerWaterModels ───────────── v0.0.1
   Installed JSONSchema ─────────────────── v0.3.2
   Installed OpenBLAS_jll ───────────────── v0.3.10+0
   Installed Mocking ────────────────────── v0.7.1
   Installed Bzip2_jll ──────────────────── v1.0.6+5
   Installed PDMats ─────────────────────── v0.9.12
   Installed OrderedCollections ─────────── v1.3.1
   Installed RecipesBase ────────────────── v1.1.0
   Installed CompilerSupportLibraries_jll ─ v0.3.4+0
   Installed StatsFuns ──────────────────── v0.9.5
   Installed QuadGK ─────────────────────── v2.4.1
   Installed TranscodingStreams ─────────── v0.9.5
   Installed InfrastructureModels ───────── v0.5.3
   Installed TimeZones ──────────────────── v1.4.0
   Installed MathOptInterface ───────────── v0.9.17
   Installed SortingAlgorithms ──────────── v0.3.1
   Installed Zlib_jll ───────────────────── v1.2.11+18
   Installed DataAPI ────────────────────── v1.3.0
   Installed ArrayInterface ─────────────── v2.13.7
   Installed BenchmarkTools ─────────────── v0.5.0
   Installed EzXML ──────────────────────── v1.1.0
   Installed FiniteDiff ─────────────────── v2.7.0
   Installed JuMP ───────────────────────── v0.21.4
   Installed ZipFile ────────────────────── v0.9.3
   Installed LineSearches ───────────────── v7.1.0
   Installed ForwardDiff ────────────────── v0.10.12
   Installed Memento ────────────────────── v1.0.0
   Installed OpenSpecFun_jll ────────────── v0.5.3+4
   Installed ExprTools ──────────────────── v0.1.3
   Installed Calculus ───────────────────── v0.5.1
   Installed CodecBzip2 ─────────────────── v0.7.2
   Installed Rmath ──────────────────────── v0.6.1
   Installed HTTP ───────────────────────── v0.8.19
   Installed LsqFit ─────────────────────── v0.10.0
   Installed Reexport ───────────────────── v0.2.0
   Installed MacroTools ─────────────────── v0.5.6
   Installed WaterModels ────────────────── v0.3.0
   Installed Libiconv_jll ───────────────── v1.16.0+7
   Installed FillArrays ─────────────────── v0.8.14
   Installed PowerModelsDistribution ────── v0.9.2
   Installed Arpack_jll ─────────────────── v3.5.0+3
   Installed UnPack ─────────────────────── v1.0.2
   Installed NLSolversBase ──────────────── v7.7.1
   Installed Syslogs ────────────────────── v0.3.0
   Installed CodecZlib ──────────────────── v0.7.0
   Installed DiffResults ────────────────── v1.0.2
   Installed JSON ───────────────────────── v0.21.1
   Installed SpecialFunctions ───────────── v0.10.3
   Installed NaNMath ────────────────────── v0.3.4
   Installed PowerModels ────────────────── v0.17.3
   Installed Distributions ──────────────── v0.22.6
   Installed StatsBase ──────────────────── v0.32.2
   Installed DataStructures ─────────────── v0.17.20
   Installed Missings ───────────────────── v0.4.4
   Installed Rmath_jll ──────────────────── v0.2.2+1
   Installed NLsolve ────────────────────── v4.4.1
   Installed OptimBase ──────────────────── v2.0.1
   Installed Arpack ─────────────────────── v0.4.0
   Installed CommonSubexpressions ───────── v0.3.0
   Installed Requires ───────────────────── v1.1.0
   Installed StaticArrays ───────────────── v0.12.5
   Installed XML2_jll ───────────────────── v2.9.10+3
   Installed DiffRules ──────────────────── v1.0.1
   Installed JLLWrappers ────────────────── v1.1.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7f4f7f52] + PowerWaterModels v0.0.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [7d9fca2a] + Arpack v0.4.0
  [4fba245c] + ArrayInterface v2.13.7
  [6e4b80f9] + BenchmarkTools v0.5.0
  [49dc2e85] + Calculus v0.5.1
  [523fee87] + CodecBzip2 v0.7.2
  [944b1d66] + CodecZlib v0.7.0
  [bbf7d656] + CommonSubexpressions v0.3.0
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.20
  [163ba53b] + DiffResults v1.0.2
  [b552c78f] + DiffRules v1.0.1
  [b4f34e82] + Distances v0.9.2
  [31c24e10] + Distributions v0.22.6
  [e2ba6199] + ExprTools v0.1.3
  [8f5d6c58] + EzXML v1.1.0
  [1a297f60] + FillArrays v0.8.14
  [6a86dc24] + FiniteDiff v2.7.0
  [f6369f11] + ForwardDiff v0.10.12
  [cd3eb016] + HTTP v0.8.19
  [2030c09a] + InfrastructureModels v0.5.3
  [83e8ac13] + IniFile v0.5.0
  [692b3bcd] + JLLWrappers v1.1.3
  [682c06a0] + JSON v0.21.1
  [7d188eb4] + JSONSchema v0.3.2
  [4076af6c] + JuMP v0.21.4
  [d3d80556] + LineSearches v7.1.0
  [2fda8390] + LsqFit v0.10.0
  [1914dd2f] + MacroTools v0.5.6
  [b8f27783] + MathOptInterface v0.9.17
  [739be429] + MbedTLS v1.0.3
  [f28f55f0] + Memento v1.0.0
  [e1d29d7a] + Missings v0.4.4
  [78c3b35d] + Mocking v0.7.1
  [d8a4904e] + MutableArithmetics v0.2.10
  [d41bc354] + NLSolversBase v7.7.1
  [2774e3e8] + NLsolve v4.4.1
  [77ba4419] + NaNMath v0.3.4
  [87e2bd06] + OptimBase v2.0.1
  [bac558e1] + OrderedCollections v1.3.1
  [90014a1f] + PDMats v0.9.12
  [d96e819e] + Parameters v0.12.1
  [69de0a69] + Parsers v1.0.11
  [c36e90e8] + PowerModels v0.17.3
  [d7431456] + PowerModelsDistribution v0.9.2
  [7f4f7f52] + PowerWaterModels v0.0.1
  [1fd47b50] + QuadGK v2.4.1
  [3cdcf5f2] + RecipesBase v1.1.0
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v1.1.0
  [79098fc4] + Rmath v0.6.1
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.10.3
  [90137ffa] + StaticArrays v0.12.5
  [2913bbd2] + StatsBase v0.32.2
  [4c63d2b9] + StatsFuns v0.9.5
  [cea106d9] + Syslogs v0.3.0
  [f269a46b] + TimeZones v1.4.0
  [3bb67fe8] + TranscodingStreams v0.9.5
  [3a884ed6] + UnPack v1.0.2
  [7c60b362] + WaterModels v0.3.0
  [a5390f91] + ZipFile v0.9.3
  [68821587] + Arpack_jll v3.5.0+3
  [6e34b625] + Bzip2_jll v1.0.6+5
  [e66e0078] + CompilerSupportLibraries_jll v0.3.4+0
  [94ce4f54] + Libiconv_jll v1.16.0+7
  [c8ffd9c3] + MbedTLS_jll v2.16.8+0
  [4536629a] + OpenBLAS_jll v0.3.10+0
  [efe28fd5] + OpenSpecFun_jll v0.5.3+4
  [f50d1b31] + Rmath_jll v0.2.2+1
  [02c8fc9c] + XML2_jll v2.9.10+3
  [83775a58] + Zlib_jll v1.2.11+18
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [f43a241f] + Downloads
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [4607b0f0] + SuiteSparse
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
  [deac9b47] + LibCURL_jll
  [14a3606d] + MozillaCACerts_jll
    Building TimeZones → `~/.julia/scratchspaces/44cfe95a-1eb2-52ea-b672-e2afdf69b78f/2c48caca8f3912857973590a9757e1f86cbbff81/build.log`


################################################################################
# Testing: 2020-10-28T10:41:40.034
#


     Testing PowerWaterModels
Status `/tmp/jl_IAIJ8Z/Project.toml`
  [9961bab8] Cbc v0.7.1
  [2030c09a] InfrastructureModels v0.5.3
  [b6b21f68] Ipopt v0.6.3
  [682c06a0] JSON v0.21.1
  [4076af6c] JuMP v0.21.4
  [2ddba703] Juniper v0.6.5
  [f28f55f0] Memento v1.0.0
  [d7431456] PowerModelsDistribution v0.9.2
  [7f4f7f52] PowerWaterModels v0.0.1
  [7c60b362] WaterModels v0.3.0
  [8dfed614] Test
Status `/tmp/jl_IAIJ8Z/Manifest.toml`
  [7d9fca2a] Arpack v0.4.0
  [4fba245c] ArrayInterface v2.13.7
  [6e4b80f9] BenchmarkTools v0.5.0
  [b99e7846] BinaryProvider v0.5.10
  [fa961155] CEnum v0.4.1
  [49dc2e85] Calculus v0.5.1
  [9961bab8] Cbc v0.7.1
  [523fee87] CodecBzip2 v0.7.2
  [944b1d66] CodecZlib v0.7.0
  [bbf7d656] CommonSubexpressions v0.3.0
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.20
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [b4f34e82] Distances v0.9.2
  [31c24e10] Distributions v0.22.6
  [e2ba6199] ExprTools v0.1.3
  [8f5d6c58] EzXML v1.1.0
  [1a297f60] FillArrays v0.8.14
  [6a86dc24] FiniteDiff v2.7.0
  [f6369f11] ForwardDiff v0.10.12
  [cd3eb016] HTTP v0.8.19
  [2030c09a] InfrastructureModels v0.5.3
  [83e8ac13] IniFile v0.5.0
  [b6b21f68] Ipopt v0.6.3
  [692b3bcd] JLLWrappers v1.1.3
  [682c06a0] JSON v0.21.1
  [7d188eb4] JSONSchema v0.3.2
  [4076af6c] JuMP v0.21.4
  [2ddba703] Juniper v0.6.5
  [d3d80556] LineSearches v7.1.0
  [2fda8390] LsqFit v0.10.0
  [1914dd2f] MacroTools v0.5.6
  [b8f27783] MathOptInterface v0.9.17
  [fdba3010] MathProgBase v0.7.8
  [739be429] MbedTLS v1.0.3
  [f28f55f0] Memento v1.0.0
  [e1d29d7a] Missings v0.4.4
  [78c3b35d] Mocking v0.7.1
  [d8a4904e] MutableArithmetics v0.2.10
  [d41bc354] NLSolversBase v7.7.1
  [2774e3e8] NLsolve v4.4.1
  [77ba4419] NaNMath v0.3.4
  [87e2bd06] OptimBase v2.0.1
  [bac558e1] OrderedCollections v1.3.1
  [90014a1f] PDMats v0.9.12
  [d96e819e] Parameters v0.12.1
  [69de0a69] Parsers v1.0.11
  [c36e90e8] PowerModels v0.17.3
  [d7431456] PowerModelsDistribution v0.9.2
  [7f4f7f52] PowerWaterModels v0.0.1
  [1fd47b50] QuadGK v2.4.1
  [3cdcf5f2] RecipesBase v1.1.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.1.0
  [79098fc4] Rmath v0.6.1
  [a2af1166] SortingAlgorithms v0.3.1
  [276daf66] SpecialFunctions v0.10.3
  [90137ffa] StaticArrays v0.12.5
  [2913bbd2] StatsBase v0.32.2
  [4c63d2b9] StatsFuns v0.9.5
  [cea106d9] Syslogs v0.3.0
  [f269a46b] TimeZones v1.4.0
  [3bb67fe8] TranscodingStreams v0.9.5
  [3a884ed6] UnPack v1.0.2
  [7c60b362] WaterModels v0.3.0
  [a5390f91] ZipFile v0.9.3
  [ae81ac8f] ASL_jll v0.1.1+3
  [68821587] Arpack_jll v3.5.0+3
  [6e34b625] Bzip2_jll v1.0.6+5
  [38041ee0] Cbc_jll v2.10.3+4
  [3830e938] Cgl_jll v0.60.2+5
  [06985876] Clp_jll v1.17.6+6
  [be027038] CoinUtils_jll v2.11.3+3
  [e66e0078] CompilerSupportLibraries_jll v0.3.4+0
  [9cc047cb] Ipopt_jll v3.13.2+0
  [94ce4f54] Libiconv_jll v1.16.0+7
  [d00139f3] METIS_jll v5.1.0+4
  [d7ed1dd3] MUMPS_seq_jll v5.2.1+3
  [c8ffd9c3] MbedTLS_jll v2.16.8+0
  [656ef2d0] OpenBLAS32_jll v0.3.10+0
  [4536629a] OpenBLAS_jll v0.3.10+0
  [efe28fd5] OpenSpecFun_jll v0.5.3+4
  [7da25872] Osi_jll v0.108.5+3
  [f50d1b31] Rmath_jll v0.2.2+1
  [02c8fc9c] XML2_jll v2.9.10+3
  [83775a58] Zlib_jll v1.2.11+18
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [f43a241f] Downloads
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [4607b0f0] SuiteSparse
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
  [deac9b47] LibCURL_jll
  [14a3606d] MozillaCACerts_jll
     Testing Running tests...
instantiate_model (with file inputs): Error During Test at /home/pkgeval/.julia/packages/PowerWaterModels/AJkcm/test/base.jl:7
  Got exception outside of a @test
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{PowerModelsDistribution.var"#845#860"{Dict{Any, Any}}, Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Tuple{Int64, Int64, Int64}})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#211
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#215
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#218
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#219
      @ ./reduce.jl:528 [inlined]
   [15] sum(a::Base.Generator{Vector{Tuple{Int64, Int64, Int64}}, PowerModelsDistribution.var"#845#860"{Dict{Any, Any}}})
      @ Base ./reduce.jl:528
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] macro expansion
      @ ~/.julia/packages/JuMP/e0Uc2/src/macros.jl:440 [inlined]
   [18] constraint_mc_shed_power_balance(pm::LPUBFDiagPowerModel, nw::Int64, i::Int64, bus_arcs::Vector{Tuple{Int64, Int64, Int64}}, bus_arcs_sw::Vector{Tuple{Int64, Int64, Int64}}, bus_arcs_trans::Vector{Any}, bus_gens::Vector{Int64}, bus_storage::Vector{Int64}, bus_pd::Dict{Any, Any}, bus_qd::Dict{Any, Any}, bus_gs::Dict{Any, Any}, bus_bs::Dict{Any, Any})
      @ PowerModelsDistribution ~/.julia/packages/PowerModelsDistribution/sLzn9/src/form/shared.jl:118
   [19] constraint_mc_shed_power_balance(pm::LPUBFDiagPowerModel, i::Int64; nw::Int64)
      @ PowerModelsDistribution ~/.julia/packages/PowerModelsDistribution/sLzn9/src/core/constraint_template.jl:367
   [20] build_mn_mc_mld_simple(pm::LPUBFDiagPowerModel)
      @ PowerModelsDistribution ~/.julia/packages/PowerModelsDistribution/sLzn9/src/prob/mld.jl:234
   [21] build_pwf(pm::LPUBFDiagPowerModel, wm::MILPRWaterModel)
      @ PowerWaterModels ~/.julia/packages/PowerWaterModels/AJkcm/src/prob/pwf.jl:12
   [22] instantiate_model(p_data::Dict{String, Any}, w_data::Dict{String, Any}, pw_data::Dict{String, Any}, p_type::Type, w_type::Type, build_method::typeof(build_pwf); pm_ref_extensions::Vector{Function}, wm_ref_extensions::Vector{Any}, wm_ext::Dict{Symbol, Any}, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ PowerWaterModels ~/.julia/packages/PowerWaterModels/AJkcm/src/core/base.jl:32
   [23] instantiate_model(p_file::String, w_file::String, pw_file::String, p_type::Type, w_type::Type, build_method::typeof(build_pwf); pm_ref_extensions::Vector{Function}, wm_ref_extensions::Vector{Any}, wm_ext::Dict{Symbol, Any}, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ PowerWaterModels ~/.julia/packages/PowerWaterModels/AJkcm/src/core/base.jl:7
   [24] instantiate_model(p_file::String, w_file::String, pw_file::String, p_type::Type, w_type::Type, build_method::Function)
      @ PowerWaterModels ~/.julia/packages/PowerWaterModels/AJkcm/src/core/base.jl:4
   [25] macro expansion
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/base.jl:8 [inlined]
   [26] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [27] macro expansion
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/base.jl:8 [inlined]
   [28] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [29] top-level scope
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/base.jl:2
   [30] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [31] macro expansion
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/runtests.jl:38 [inlined]
   [32] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [33] top-level scope
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/runtests.jl:36
   [34] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [35] top-level scope
      @ none:6
   [36] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [37] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [38] _start()
      @ Base ./client.jl:485
instantiate_model (with network inputs): Error During Test at /home/pkgeval/.julia/packages/PowerWaterModels/AJkcm/test/base.jl:12
  Got exception outside of a @test
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{PowerModelsDistribution.var"#845#860"{Dict{Any, Any}}, Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Tuple{Int64, Int64, Int64}})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#211
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#215
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#218
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#219
      @ ./reduce.jl:528 [inlined]
   [15] sum(a::Base.Generator{Vector{Tuple{Int64, Int64, Int64}}, PowerModelsDistribution.var"#845#860"{Dict{Any, Any}}})
      @ Base ./reduce.jl:528
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] macro expansion
      @ ~/.julia/packages/JuMP/e0Uc2/src/macros.jl:440 [inlined]
   [18] constraint_mc_shed_power_balance(pm::LPUBFDiagPowerModel, nw::Int64, i::Int64, bus_arcs::Vector{Tuple{Int64, Int64, Int64}}, bus_arcs_sw::Vector{Tuple{Int64, Int64, Int64}}, bus_arcs_trans::Vector{Any}, bus_gens::Vector{Int64}, bus_storage::Vector{Int64}, bus_pd::Dict{Any, Any}, bus_qd::Dict{Any, Any}, bus_gs::Dict{Any, Any}, bus_bs::Dict{Any, Any})
      @ PowerModelsDistribution ~/.julia/packages/PowerModelsDistribution/sLzn9/src/form/shared.jl:118
   [19] constraint_mc_shed_power_balance(pm::LPUBFDiagPowerModel, i::Int64; nw::Int64)
      @ PowerModelsDistribution ~/.julia/packages/PowerModelsDistribution/sLzn9/src/core/constraint_template.jl:367
   [20] build_mn_mc_mld_simple(pm::LPUBFDiagPowerModel)
      @ PowerModelsDistribution ~/.julia/packages/PowerModelsDistribution/sLzn9/src/prob/mld.jl:234
   [21] build_pwf(pm::LPUBFDiagPowerModel, wm::MILPRWaterModel)
      @ PowerWaterModels ~/.julia/packages/PowerWaterModels/AJkcm/src/prob/pwf.jl:12
   [22] instantiate_model(p_data::Dict{String, Any}, w_data::Dict{String, Any}, pw_data::Dict{String, Any}, p_type::Type, w_type::Type, build_method::typeof(build_pwf); pm_ref_extensions::Vector{Function}, wm_ref_extensions::Vector{Any}, wm_ext::Dict{Symbol, Any}, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ PowerWaterModels ~/.julia/packages/PowerWaterModels/AJkcm/src/core/base.jl:32
   [23] instantiate_model(p_data::Dict{String, Any}, w_data::Dict{String, Any}, pw_data::Dict{String, Any}, p_type::Type, w_type::Type, build_method::Function)
      @ PowerWaterModels ~/.julia/packages/PowerWaterModels/AJkcm/src/core/base.jl:16
   [24] macro expansion
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/base.jl:14 [inlined]
   [25] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [26] macro expansion
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/base.jl:13 [inlined]
   [27] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [28] top-level scope
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/base.jl:2
   [29] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [30] macro expansion
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/runtests.jl:38 [inlined]
   [31] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [32] top-level scope
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/runtests.jl:36
   [33] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [34] top-level scope
      @ none:6
   [35] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [36] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [37] _start()
      @ Base ./client.jl:485
[error | PowerWaterModels]: Multinetworks are not of the same length.
[error | PowerWaterModels]: Multinetworks are not of the same length.
run_model (with file inputs): Error During Test at /home/pkgeval/.julia/packages/PowerWaterModels/AJkcm/test/base.jl:26
  Got exception outside of a @test
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{PowerModelsDistribution.var"#845#860"{Dict{Any, Any}}, Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Tuple{Int64, Int64, Int64}})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#211
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#215
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#218
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#219
      @ ./reduce.jl:528 [inlined]
   [15] sum(a::Base.Generator{Vector{Tuple{Int64, Int64, Int64}}, PowerModelsDistribution.var"#845#860"{Dict{Any, Any}}})
      @ Base ./reduce.jl:528
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] macro expansion
      @ ~/.julia/packages/JuMP/e0Uc2/src/macros.jl:440 [inlined]
   [18] constraint_mc_shed_power_balance(pm::LPUBFDiagPowerModel, nw::Int64, i::Int64, bus_arcs::Vector{Tuple{Int64, Int64, Int64}}, bus_arcs_sw::Vector{Tuple{Int64, Int64, Int64}}, bus_arcs_trans::Vector{Any}, bus_gens::Vector{Int64}, bus_storage::Vector{Int64}, bus_pd::Dict{Any, Any}, bus_qd::Dict{Any, Any}, bus_gs::Dict{Any, Any}, bus_bs::Dict{Any, Any})
      @ PowerModelsDistribution ~/.julia/packages/PowerModelsDistribution/sLzn9/src/form/shared.jl:118
   [19] constraint_mc_shed_power_balance(pm::LPUBFDiagPowerModel, i::Int64; nw::Int64)
      @ PowerModelsDistribution ~/.julia/packages/PowerModelsDistribution/sLzn9/src/core/constraint_template.jl:367
   [20] build_mn_mc_mld_simple(pm::LPUBFDiagPowerModel)
      @ PowerModelsDistribution ~/.julia/packages/PowerModelsDistribution/sLzn9/src/prob/mld.jl:234
   [21] build_pwf(pm::LPUBFDiagPowerModel, wm::MILPRWaterModel)
      @ PowerWaterModels ~/.julia/packages/PowerWaterModels/AJkcm/src/prob/pwf.jl:12
   [22] instantiate_model(p_data::Dict{String, Any}, w_data::Dict{String, Any}, pw_data::Dict{String, Any}, p_type::Type, w_type::Type, build_method::typeof(build_pwf); pm_ref_extensions::Vector{Function}, wm_ref_extensions::Vector{Any}, wm_ext::Dict{Symbol, Any}, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ PowerWaterModels ~/.julia/packages/PowerWaterModels/AJkcm/src/core/base.jl:32
   [23] run_model(p_data::Dict{String, Any}, w_data::Dict{String, Any}, pw_data::Dict{String, Any}, p_type::Type, w_type::Type, optimizer::MathOptInterface.OptimizerWithAttributes, build_method::typeof(build_pwf); pm_solution_processors::Vector{Any}, wm_solution_processors::Vector{Any}, pm_ref_extensions::Vector{Function}, wm_ref_extensions::Vector{Any}, wm_ext::Dict{Symbol, Any}, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ PowerWaterModels ~/.julia/packages/PowerWaterModels/AJkcm/src/core/base.jl:43
   [24] run_model(p_file::String, w_file::String, pw_file::String, p_type::Type, w_type::Type, optimizer::MathOptInterface.OptimizerWithAttributes, build_method::typeof(build_pwf); pm_ref_extensions::Vector{Function}, wm_ref_extensions::Vector{Any}, wm_ext::Dict{Symbol, Any}, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ PowerWaterModels ~/.julia/packages/PowerWaterModels/AJkcm/src/core/base.jl:71
   [25] run_model(p_file::String, w_file::String, pw_file::String, p_type::Type, w_type::Type, optimizer::MathOptInterface.OptimizerWithAttributes, build_method::Function)
      @ PowerWaterModels ~/.julia/packages/PowerWaterModels/AJkcm/src/core/base.jl:68
   [26] macro expansion
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/base.jl:27 [inlined]
   [27] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [28] macro expansion
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/base.jl:27 [inlined]
   [29] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [30] top-level scope
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/base.jl:2
   [31] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [32] macro expansion
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/runtests.jl:38 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [34] top-level scope
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/runtests.jl:36
   [35] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [36] top-level scope
      @ none:6
   [37] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [38] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [39] _start()
      @ Base ./client.jl:485
run_model (with network inputs): Error During Test at /home/pkgeval/.julia/packages/PowerWaterModels/AJkcm/test/base.jl:31
  Got exception outside of a @test
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{PowerModelsDistribution.var"#845#860"{Dict{Any, Any}}, Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Tuple{Int64, Int64, Int64}})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#211
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#215
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#218
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#219
      @ ./reduce.jl:528 [inlined]
   [15] sum(a::Base.Generator{Vector{Tuple{Int64, Int64, Int64}}, PowerModelsDistribution.var"#845#860"{Dict{Any, Any}}})
      @ Base ./reduce.jl:528
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] macro expansion
      @ ~/.julia/packages/JuMP/e0Uc2/src/macros.jl:440 [inlined]
   [18] constraint_mc_shed_power_balance(pm::LPUBFDiagPowerModel, nw::Int64, i::Int64, bus_arcs::Vector{Tuple{Int64, Int64, Int64}}, bus_arcs_sw::Vector{Tuple{Int64, Int64, Int64}}, bus_arcs_trans::Vector{Any}, bus_gens::Vector{Int64}, bus_storage::Vector{Int64}, bus_pd::Dict{Any, Any}, bus_qd::Dict{Any, Any}, bus_gs::Dict{Any, Any}, bus_bs::Dict{Any, Any})
      @ PowerModelsDistribution ~/.julia/packages/PowerModelsDistribution/sLzn9/src/form/shared.jl:118
   [19] constraint_mc_shed_power_balance(pm::LPUBFDiagPowerModel, i::Int64; nw::Int64)
      @ PowerModelsDistribution ~/.julia/packages/PowerModelsDistribution/sLzn9/src/core/constraint_template.jl:367
   [20] build_mn_mc_mld_simple(pm::LPUBFDiagPowerModel)
      @ PowerModelsDistribution ~/.julia/packages/PowerModelsDistribution/sLzn9/src/prob/mld.jl:234
   [21] build_pwf(pm::LPUBFDiagPowerModel, wm::MILPRWaterModel)
      @ PowerWaterModels ~/.julia/packages/PowerWaterModels/AJkcm/src/prob/pwf.jl:12
   [22] instantiate_model(p_data::Dict{String, Any}, w_data::Dict{String, Any}, pw_data::Dict{String, Any}, p_type::Type, w_type::Type, build_method::typeof(build_pwf); pm_ref_extensions::Vector{Function}, wm_ref_extensions::Vector{Any}, wm_ext::Dict{Symbol, Any}, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ PowerWaterModels ~/.julia/packages/PowerWaterModels/AJkcm/src/core/base.jl:32
   [23] run_model(p_data::Dict{String, Any}, w_data::Dict{String, Any}, pw_data::Dict{String, Any}, p_type::Type, w_type::Type, optimizer::MathOptInterface.OptimizerWithAttributes, build_method::typeof(build_pwf); pm_solution_processors::Vector{Any}, wm_solution_processors::Vector{Any}, pm_ref_extensions::Vector{Function}, wm_ref_extensions::Vector{Any}, wm_ext::Dict{Symbol, Any}, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ PowerWaterModels ~/.julia/packages/PowerWaterModels/AJkcm/src/core/base.jl:43
   [24] run_model(p_data::Dict{String, Any}, w_data::Dict{String, Any}, pw_data::Dict{String, Any}, p_type::Type, w_type::Type, optimizer::MathOptInterface.OptimizerWithAttributes, build_method::Function)
      @ PowerWaterModels ~/.julia/packages/PowerWaterModels/AJkcm/src/core/base.jl:42
   [25] macro expansion
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/base.jl:33 [inlined]
   [26] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [27] macro expansion
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/base.jl:32 [inlined]
   [28] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [29] top-level scope
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/base.jl:2
   [30] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [31] macro expansion
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/runtests.jl:38 [inlined]
   [32] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [33] top-level scope
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/runtests.jl:36
   [34] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [35] top-level scope
      @ none:6
   [36] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [37] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [38] _start()
      @ Base ./client.jl:485
[error | PowerWaterModels]: Multinetworks do not have the same indices.
[error | PowerWaterModels]: Multinetworks do not have the same indices.
3-bus LinDist3FlowPowerModel and MILPWaterModel: Error During Test at /home/pkgeval/.julia/packages/PowerWaterModels/AJkcm/test/pwf.jl:2
  Got exception outside of a @test
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{PowerModelsDistribution.var"#845#860"{Dict{Any, Any}}, Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Tuple{Int64, Int64, Int64}})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#211
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#215
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#218
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#219
      @ ./reduce.jl:528 [inlined]
   [15] sum(a::Base.Generator{Vector{Tuple{Int64, Int64, Int64}}, PowerModelsDistribution.var"#845#860"{Dict{Any, Any}}})
      @ Base ./reduce.jl:528
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] macro expansion
      @ ~/.julia/packages/JuMP/e0Uc2/src/macros.jl:440 [inlined]
   [18] constraint_mc_shed_power_balance(pm::LPUBFDiagPowerModel, nw::Int64, i::Int64, bus_arcs::Vector{Tuple{Int64, Int64, Int64}}, bus_arcs_sw::Vector{Tuple{Int64, Int64, Int64}}, bus_arcs_trans::Vector{Any}, bus_gens::Vector{Int64}, bus_storage::Vector{Int64}, bus_pd::Dict{Int64, Vector{Float64}}, bus_qd::Dict{Int64, Vector{Float64}}, bus_gs::Dict{Any, Any}, bus_bs::Dict{Any, Any})
      @ PowerModelsDistribution ~/.julia/packages/PowerModelsDistribution/sLzn9/src/form/shared.jl:118
   [19] constraint_mc_shed_power_balance(pm::LPUBFDiagPowerModel, i::Int64; nw::Int64)
      @ PowerModelsDistribution ~/.julia/packages/PowerModelsDistribution/sLzn9/src/core/constraint_template.jl:367
   [20] build_mn_mc_mld_simple(pm::LPUBFDiagPowerModel)
      @ PowerModelsDistribution ~/.julia/packages/PowerModelsDistribution/sLzn9/src/prob/mld.jl:234
   [21] build_pwf(pm::LPUBFDiagPowerModel, wm::MILPWaterModel)
      @ PowerWaterModels ~/.julia/packages/PowerWaterModels/AJkcm/src/prob/pwf.jl:12
   [22] instantiate_model(p_data::Dict{String, Any}, w_data::Dict{String, Any}, pw_data::Dict{String, Any}, p_type::Type, w_type::Type, build_method::typeof(build_pwf); pm_ref_extensions::Vector{Function}, wm_ref_extensions::Vector{Any}, wm_ext::Dict{Symbol, Any}, kwargs::Base.Iterators.Pairs{Symbol, Dict{Symbol, Any}, Tuple{Symbol}, NamedTuple{(:w_ext,), Tuple{Dict{Symbol, Any}}}})
      @ PowerWaterModels ~/.julia/packages/PowerWaterModels/AJkcm/src/core/base.jl:32
   [23] run_model(p_data::Dict{String, Any}, w_data::Dict{String, Any}, pw_data::Dict{String, Any}, p_type::Type, w_type::Type, optimizer::MathOptInterface.OptimizerWithAttributes, build_method::typeof(build_pwf); pm_solution_processors::Vector{Any}, wm_solution_processors::Vector{Any}, pm_ref_extensions::Vector{Function}, wm_ref_extensions::Vector{Any}, wm_ext::Dict{Symbol, Any}, kwargs::Base.Iterators.Pairs{Symbol, Dict{Symbol, Any}, Tuple{Symbol}, NamedTuple{(:w_ext,), Tuple{Dict{Symbol, Any}}}})
      @ PowerWaterModels ~/.julia/packages/PowerWaterModels/AJkcm/src/core/base.jl:43
   [24] run_model(p_file::String, w_file::String, pw_file::String, p_type::Type, w_type::Type, optimizer::MathOptInterface.OptimizerWithAttributes, build_method::typeof(build_pwf); pm_ref_extensions::Vector{Function}, wm_ref_extensions::Vector{Any}, wm_ext::Dict{Symbol, Any}, kwargs::Base.Iterators.Pairs{Symbol, Dict{Symbol, Any}, Tuple{Symbol}, NamedTuple{(:w_ext,), Tuple{Dict{Symbol, Any}}}})
      @ PowerWaterModels ~/.julia/packages/PowerWaterModels/AJkcm/src/core/base.jl:71
   [25] #run_pwf#27
      @ ~/.julia/packages/PowerWaterModels/AJkcm/src/prob/pwf.jl:5 [inlined]
   [26] macro expansion
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/pwf.jl:9 [inlined]
   [27] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [28] macro expansion
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/pwf.jl:3 [inlined]
   [29] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [30] top-level scope
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/pwf.jl:2
   [31] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [32] macro expansion
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/runtests.jl:44 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [34] top-level scope
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/runtests.jl:36
   [35] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [36] top-level scope
      @ none:6
   [37] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [38] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [39] _start()
      @ Base ./client.jl:485
3-bus LinDist3FlowPowerModel and MILPWaterModel (Multistep): Error During Test at /home/pkgeval/.julia/packages/PowerWaterModels/AJkcm/test/pwf.jl:14
  Got exception outside of a @test
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{PowerModelsDistribution.var"#845#860"{Dict{Any, Any}}, Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Tuple{Int64, Int64, Int64}})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#211
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#215
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#218
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#219
      @ ./reduce.jl:528 [inlined]
   [15] sum(a::Base.Generator{Vector{Tuple{Int64, Int64, Int64}}, PowerModelsDistribution.var"#845#860"{Dict{Any, Any}}})
      @ Base ./reduce.jl:528
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] macro expansion
      @ ~/.julia/packages/JuMP/e0Uc2/src/macros.jl:440 [inlined]
   [18] constraint_mc_shed_power_balance(pm::LPUBFDiagPowerModel, nw::Int64, i::Int64, bus_arcs::Vector{Tuple{Int64, Int64, Int64}}, bus_arcs_sw::Vector{Tuple{Int64, Int64, Int64}}, bus_arcs_trans::Vector{Any}, bus_gens::Vector{Int64}, bus_storage::Vector{Int64}, bus_pd::Dict{Int64, Vector{Float64}}, bus_qd::Dict{Int64, Vector{Float64}}, bus_gs::Dict{Any, Any}, bus_bs::Dict{Any, Any})
      @ PowerModelsDistribution ~/.julia/packages/PowerModelsDistribution/sLzn9/src/form/shared.jl:118
   [19] constraint_mc_shed_power_balance(pm::LPUBFDiagPowerModel, i::Int64; nw::Int64)
      @ PowerModelsDistribution ~/.julia/packages/PowerModelsDistribution/sLzn9/src/core/constraint_template.jl:367
   [20] build_mn_mc_mld_simple(pm::LPUBFDiagPowerModel)
      @ PowerModelsDistribution ~/.julia/packages/PowerModelsDistribution/sLzn9/src/prob/mld.jl:234
   [21] build_pwf(pm::LPUBFDiagPowerModel, wm::MILPWaterModel)
      @ PowerWaterModels ~/.julia/packages/PowerWaterModels/AJkcm/src/prob/pwf.jl:12
   [22] instantiate_model(p_data::Dict{String, Any}, w_data::Dict{String, Any}, pw_data::Dict{String, Any}, p_type::Type, w_type::Type, build_method::typeof(build_pwf); pm_ref_extensions::Vector{Function}, wm_ref_extensions::Vector{Any}, wm_ext::Dict{Symbol, Any}, kwargs::Base.Iterators.Pairs{Symbol, Dict{Symbol, Any}, Tuple{Symbol}, NamedTuple{(:w_ext,), Tuple{Dict{Symbol, Any}}}})
      @ PowerWaterModels ~/.julia/packages/PowerWaterModels/AJkcm/src/core/base.jl:32
   [23] run_model(p_data::Dict{String, Any}, w_data::Dict{String, Any}, pw_data::Dict{String, Any}, p_type::Type, w_type::Type, optimizer::MathOptInterface.OptimizerWithAttributes, build_method::typeof(build_pwf); pm_solution_processors::Vector{Any}, wm_solution_processors::Vector{Any}, pm_ref_extensions::Vector{Function}, wm_ref_extensions::Vector{Any}, wm_ext::Dict{Symbol, Any}, kwargs::Base.Iterators.Pairs{Symbol, Dict{Symbol, Any}, Tuple{Symbol}, NamedTuple{(:w_ext,), Tuple{Dict{Symbol, Any}}}})
      @ PowerWaterModels ~/.julia/packages/PowerWaterModels/AJkcm/src/core/base.jl:43
   [24] run_model(p_file::String, w_file::String, pw_file::String, p_type::Type, w_type::Type, optimizer::MathOptInterface.OptimizerWithAttributes, build_method::typeof(build_pwf); pm_ref_extensions::Vector{Function}, wm_ref_extensions::Vector{Any}, wm_ext::Dict{Symbol, Any}, kwargs::Base.Iterators.Pairs{Symbol, Dict{Symbol, Any}, Tuple{Symbol}, NamedTuple{(:w_ext,), Tuple{Dict{Symbol, Any}}}})
      @ PowerWaterModels ~/.julia/packages/PowerWaterModels/AJkcm/src/core/base.jl:71
   [25] #run_pwf#27
      @ ~/.julia/packages/PowerWaterModels/AJkcm/src/prob/pwf.jl:5 [inlined]
   [26] macro expansion
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/pwf.jl:21 [inlined]
   [27] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [28] macro expansion
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/pwf.jl:15 [inlined]
   [29] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [30] top-level scope
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/pwf.jl:2
   [31] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [32] macro expansion
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/runtests.jl:44 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [34] top-level scope
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/runtests.jl:36
   [35] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [36] top-level scope
      @ none:6
   [37] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [38] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [39] _start()
      @ Base ./client.jl:485
3-bus LinDist3FlowPowerModel and MILPWaterModel: Error During Test at /home/pkgeval/.julia/packages/PowerWaterModels/AJkcm/test/opwf.jl:2
  Got exception outside of a @test
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{PowerModelsDistribution.var"#845#860"{Dict{Any, Any}}, Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Tuple{Int64, Int64, Int64}})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#211
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#215
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#218
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#219
      @ ./reduce.jl:528 [inlined]
   [15] sum(a::Base.Generator{Vector{Tuple{Int64, Int64, Int64}}, PowerModelsDistribution.var"#845#860"{Dict{Any, Any}}})
      @ Base ./reduce.jl:528
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] macro expansion
      @ ~/.julia/packages/JuMP/e0Uc2/src/macros.jl:440 [inlined]
   [18] constraint_mc_shed_power_balance(pm::LPUBFDiagPowerModel, nw::Int64, i::Int64, bus_arcs::Vector{Tuple{Int64, Int64, Int64}}, bus_arcs_sw::Vector{Tuple{Int64, Int64, Int64}}, bus_arcs_trans::Vector{Any}, bus_gens::Vector{Int64}, bus_storage::Vector{Int64}, bus_pd::Dict{Int64, Vector{Float64}}, bus_qd::Dict{Int64, Vector{Float64}}, bus_gs::Dict{Any, Any}, bus_bs::Dict{Any, Any})
      @ PowerModelsDistribution ~/.julia/packages/PowerModelsDistribution/sLzn9/src/form/shared.jl:118
   [19] constraint_mc_shed_power_balance(pm::LPUBFDiagPowerModel, i::Int64; nw::Int64)
      @ PowerModelsDistribution ~/.julia/packages/PowerModelsDistribution/sLzn9/src/core/constraint_template.jl:367
   [20] build_mn_mc_mld_simple(pm::LPUBFDiagPowerModel)
      @ PowerModelsDistribution ~/.julia/packages/PowerModelsDistribution/sLzn9/src/prob/mld.jl:234
   [21] build_opwf(pm::LPUBFDiagPowerModel, wm::MILPWaterModel)
      @ PowerWaterModels ~/.julia/packages/PowerWaterModels/AJkcm/src/prob/opwf.jl:12
   [22] instantiate_model(p_data::Dict{String, Any}, w_data::Dict{String, Any}, pw_data::Dict{String, Any}, p_type::Type, w_type::Type, build_method::typeof(build_opwf); pm_ref_extensions::Vector{Function}, wm_ref_extensions::Vector{Any}, wm_ext::Dict{Symbol, Any}, kwargs::Base.Iterators.Pairs{Symbol, Dict{Symbol, Any}, Tuple{Symbol}, NamedTuple{(:w_ext,), Tuple{Dict{Symbol, Any}}}})
      @ PowerWaterModels ~/.julia/packages/PowerWaterModels/AJkcm/src/core/base.jl:32
   [23] run_model(p_data::Dict{String, Any}, w_data::Dict{String, Any}, pw_data::Dict{String, Any}, p_type::Type, w_type::Type, optimizer::MathOptInterface.OptimizerWithAttributes, build_method::typeof(build_opwf); pm_solution_processors::Vector{Any}, wm_solution_processors::Vector{Any}, pm_ref_extensions::Vector{Function}, wm_ref_extensions::Vector{Any}, wm_ext::Dict{Symbol, Any}, kwargs::Base.Iterators.Pairs{Symbol, Dict{Symbol, Any}, Tuple{Symbol}, NamedTuple{(:w_ext,), Tuple{Dict{Symbol, Any}}}})
      @ PowerWaterModels ~/.julia/packages/PowerWaterModels/AJkcm/src/core/base.jl:43
   [24] run_model(p_file::String, w_file::String, pw_file::String, p_type::Type, w_type::Type, optimizer::MathOptInterface.OptimizerWithAttributes, build_method::typeof(build_opwf); pm_ref_extensions::Vector{Function}, wm_ref_extensions::Vector{Any}, wm_ext::Dict{Symbol, Any}, kwargs::Base.Iterators.Pairs{Symbol, Dict{Symbol, Any}, Tuple{Symbol}, NamedTuple{(:w_ext,), Tuple{Dict{Symbol, Any}}}})
      @ PowerWaterModels ~/.julia/packages/PowerWaterModels/AJkcm/src/core/base.jl:71
   [25] #run_opwf#32
      @ ~/.julia/packages/PowerWaterModels/AJkcm/src/prob/opwf.jl:5 [inlined]
   [26] macro expansion
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/opwf.jl:9 [inlined]
   [27] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [28] macro expansion
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/opwf.jl:3 [inlined]
   [29] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [30] top-level scope
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/opwf.jl:2
   [31] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [32] macro expansion
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/runtests.jl:46 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [34] top-level scope
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/runtests.jl:36
   [35] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [36] top-level scope
      @ none:6
   [37] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [38] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [39] _start()
      @ Base ./client.jl:485
3-bus LinDist3FlowPowerModel and MILPWaterModel (Multistep): Error During Test at /home/pkgeval/.julia/packages/PowerWaterModels/AJkcm/test/opwf.jl:14
  Got exception outside of a @test
  ArgumentError: reducing over an empty collection is not allowed
  Stacktrace:
    [1] _empty_reduce_error()
      @ Base ./reduce.jl:299
    [2] mapreduce_empty(f::Function, op::Base.BottomRF{typeof(Base.add_sum)}, T::Type)
      @ Base ./reduce.jl:342
    [3] reduce_empty(op::Base.MappingRF{PowerModelsDistribution.var"#845#860"{Dict{Any, Any}}, Base.BottomRF{typeof(Base.add_sum)}}, #unused#::Type{Tuple{Int64, Int64, Int64}})
      @ Base ./reduce.jl:329
    [4] reduce_empty_iter
      @ ./reduce.jl:355 [inlined]
    [5] reduce_empty_iter
      @ ./reduce.jl:354 [inlined]
    [6] foldl_impl
      @ ./reduce.jl:49 [inlined]
    [7] mapfoldl_impl
      @ ./reduce.jl:44 [inlined]
    [8] #mapfoldl#211
      @ ./reduce.jl:160 [inlined]
    [9] mapfoldl
      @ ./reduce.jl:160 [inlined]
   [10] #mapreduce#215
      @ ./reduce.jl:287 [inlined]
   [11] mapreduce
      @ ./reduce.jl:287 [inlined]
   [12] #sum#218
      @ ./reduce.jl:501 [inlined]
   [13] sum
      @ ./reduce.jl:501 [inlined]
   [14] #sum#219
      @ ./reduce.jl:528 [inlined]
   [15] sum(a::Base.Generator{Vector{Tuple{Int64, Int64, Int64}}, PowerModelsDistribution.var"#845#860"{Dict{Any, Any}}})
      @ Base ./reduce.jl:528
   [16] macro expansion
      @ ~/.julia/packages/MutableArithmetics/NuiNA/src/rewrite.jl:227 [inlined]
   [17] macro expansion
      @ ~/.julia/packages/JuMP/e0Uc2/src/macros.jl:440 [inlined]
   [18] constraint_mc_shed_power_balance(pm::LPUBFDiagPowerModel, nw::Int64, i::Int64, bus_arcs::Vector{Tuple{Int64, Int64, Int64}}, bus_arcs_sw::Vector{Tuple{Int64, Int64, Int64}}, bus_arcs_trans::Vector{Any}, bus_gens::Vector{Int64}, bus_storage::Vector{Int64}, bus_pd::Dict{Int64, Vector{Float64}}, bus_qd::Dict{Int64, Vector{Float64}}, bus_gs::Dict{Any, Any}, bus_bs::Dict{Any, Any})
      @ PowerModelsDistribution ~/.julia/packages/PowerModelsDistribution/sLzn9/src/form/shared.jl:118
   [19] constraint_mc_shed_power_balance(pm::LPUBFDiagPowerModel, i::Int64; nw::Int64)
      @ PowerModelsDistribution ~/.julia/packages/PowerModelsDistribution/sLzn9/src/core/constraint_template.jl:367
   [20] build_mn_mc_mld_simple(pm::LPUBFDiagPowerModel)
      @ PowerModelsDistribution ~/.julia/packages/PowerModelsDistribution/sLzn9/src/prob/mld.jl:234
   [21] build_opwf(pm::LPUBFDiagPowerModel, wm::MILPWaterModel)
      @ PowerWaterModels ~/.julia/packages/PowerWaterModels/AJkcm/src/prob/opwf.jl:12
   [22] instantiate_model(p_data::Dict{String, Any}, w_data::Dict{String, Any}, pw_data::Dict{String, Any}, p_type::Type, w_type::Type, build_method::typeof(build_opwf); pm_ref_extensions::Vector{Function}, wm_ref_extensions::Vector{Any}, wm_ext::Dict{Symbol, Any}, kwargs::Base.Iterators.Pairs{Symbol, Dict{Symbol, Any}, Tuple{Symbol}, NamedTuple{(:w_ext,), Tuple{Dict{Symbol, Any}}}})
      @ PowerWaterModels ~/.julia/packages/PowerWaterModels/AJkcm/src/core/base.jl:32
   [23] run_model(p_data::Dict{String, Any}, w_data::Dict{String, Any}, pw_data::Dict{String, Any}, p_type::Type, w_type::Type, optimizer::MathOptInterface.OptimizerWithAttributes, build_method::typeof(build_opwf); pm_solution_processors::Vector{Any}, wm_solution_processors::Vector{Any}, pm_ref_extensions::Vector{Function}, wm_ref_extensions::Vector{Any}, wm_ext::Dict{Symbol, Any}, kwargs::Base.Iterators.Pairs{Symbol, Dict{Symbol, Any}, Tuple{Symbol}, NamedTuple{(:w_ext,), Tuple{Dict{Symbol, Any}}}})
      @ PowerWaterModels ~/.julia/packages/PowerWaterModels/AJkcm/src/core/base.jl:43
   [24] run_model(p_file::String, w_file::String, pw_file::String, p_type::Type, w_type::Type, optimizer::MathOptInterface.OptimizerWithAttributes, build_method::typeof(build_opwf); pm_ref_extensions::Vector{Function}, wm_ref_extensions::Vector{Any}, wm_ext::Dict{Symbol, Any}, kwargs::Base.Iterators.Pairs{Symbol, Dict{Symbol, Any}, Tuple{Symbol}, NamedTuple{(:w_ext,), Tuple{Dict{Symbol, Any}}}})
      @ PowerWaterModels ~/.julia/packages/PowerWaterModels/AJkcm/src/core/base.jl:71
   [25] #run_opwf#32
      @ ~/.julia/packages/PowerWaterModels/AJkcm/src/prob/opwf.jl:5 [inlined]
   [26] macro expansion
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/opwf.jl:21 [inlined]
   [27] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [28] macro expansion
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/opwf.jl:15 [inlined]
   [29] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [30] top-level scope
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/opwf.jl:2
   [31] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [32] macro expansion
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/runtests.jl:46 [inlined]
   [33] macro expansion
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1144 [inlined]
   [34] top-level scope
      @ ~/.julia/packages/PowerWaterModels/AJkcm/test/runtests.jl:36
   [35] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [36] top-level scope
      @ none:6
   [37] eval(m::Module, e::Any)
      @ Core ./boot.jl:360
   [38] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [39] _start()
      @ Base ./client.jl:485
Test Summary:                                                   | Pass  Error  Total
PowerWaterModels                                                |   17      8     25
  src/PowerWaterModels.jl                                       |    3             3
  src/core/base.jl                                              |    1      4      5
    instantiate_model (with file inputs)                        |           1      1
    instantiate_model (with network inputs)                     |           1      1
    instantiate_model (with network inputs; error)              |    1             1
    run_model (with file inputs)                                |           1      1
    run_model (with network inputs)                             |           1      1
  src/io/common.jl                                              |    6             6
  src/core/data.jl                                              |    7             7
  Power-Water Flow Feasibility Problems                         |           2      2
    3-bus LinDist3FlowPowerModel and MILPWaterModel             |           1      1
    3-bus LinDist3FlowPowerModel and MILPWaterModel (Multistep) |           1      1
  Optimal Power-Water Flow Problems                             |           2      2
    3-bus LinDist3FlowPowerModel and MILPWaterModel             |           1      1
    3-bus LinDist3FlowPowerModel and MILPWaterModel (Multistep) |           1      1
ERROR: LoadError: Some tests did not pass: 17 passed, 0 failed, 8 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/PowerWaterModels/AJkcm/test/runtests.jl:34

PkgEval failed: Package PowerWaterModels errored during testing
Stacktrace:
  [1] pkgerror(msg::String)
    @ Pkg.Types /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1651
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:334
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:321
  [5] #test#62
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:71 [inlined]
  [6] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:70 [inlined]
  [7] #test#61
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [8] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67
 [10] test(pkg::String)
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67
 [11] top-level scope
    @ none:44
 [12] eval
    @ ./boot.jl:360 [inlined]
 [13] eval(x::Expr)
    @ Base.MainInclude ./client.jl:446
 [14] top-level scope
    @ none:1
 [15] eval(m::Module, e::Any)
    @ Core ./boot.jl:360
 [16] exec_options(opts::Base.JLOptions)
    @ Base ./client.jl:261
 [17] _start()
    @ Base ./client.jl:485


################################################################################
# PkgEval teardown: 2020-10-28T10:52:10.028
#


CPU usage: 513.41s (442.33s user, 72.43s kernel)

Network usage:
- eth0: 5.296 MiB received, 237.771 KiB sent

Raw statistics: {"read":"2020-10-28T10:52:10.035779329Z","preread":"0001-01-01T00:00:00Z","pids_stats":{"current":46},"blkio_stats":{"io_service_bytes_recursive":[{"major":259,"minor":0,"op":"Read","value":0},{"major":259,"minor":0,"op":"Write","value":118784},{"major":259,"minor":0,"op":"Sync","value":0},{"major":259,"minor":0,"op":"Async","value":118784},{"major":259,"minor":0,"op":"Total","value":118784},{"major":253,"minor":2,"op":"Read","value":0},{"major":253,"minor":2,"op":"Write","value":118784},{"major":253,"minor":2,"op":"Sync","value":0},{"major":253,"minor":2,"op":"Async","value":118784},{"major":253,"minor":2,"op":"Total","value":118784}],"io_serviced_recursive":[{"major":259,"minor":0,"op":"Read","value":0},{"major":259,"minor":0,"op":"Write","value":17},{"major":259,"minor":0,"op":"Sync","value":0},{"major":259,"minor":0,"op":"Async","value":17},{"major":259,"minor":0,"op":"Total","value":17},{"major":253,"minor":2,"op":"Read","value":0},{"major":253,"minor":2,"op":"Write","value":17},{"major":253,"minor":2,"op":"Sync","value":0},{"major":253,"minor":2,"op":"Async","value":17},{"major":253,"minor":2,"op":"Total","value":17}],"io_queue_recursive":[],"io_service_time_recursive":[],"io_wait_time_recursive":[],"io_merged_recursive":[],"io_time_recursive":[],"sectors_recursive":[]},"num_procs":0,"storage_stats":{},"cpu_stats":{"cpu_usage":{"total_usage":513409742343,"percpu_usage":[916649275,826716080,1146571778,794059403,940827016,1002606889,1587789341,1117111401,1039532652,1822382150,1609980884,1148192010,1810888243,1112052265,1348570354,1235836785,1027528228,2151875591,620976197,992779617,1088540988,1090989861,1580091375,1363922354,1207685981,1169194425,1514131379,1393723239,995791332,817249990,970646366,990810307,8730677227,6647379155,7872916212,7876649997,7668294147,7213509047,6714727775,5503445689,5338415665,9056149731,7126509600,6340163600,7802242896,7829931193,7309209776,5970076980,6063400575,5674000182,7810951066,6499917937,4451765910,6246870809,5118025833,4686208199,5770972774,6383325156,8039225087,4597974635,6187732952,4219995245,5252411182,7299820354,1208824457,1068960737,838002969,930397755,1137581620,1829749896,904863470,1070045401,1255905252,889257417,1158194549,1196145488,932358569,1280901985,950024078,1593527527,1447431945,1263750620,1110507774,1007406092,1224162524,1236324072,1936353294,1108317934,1273809713,1273000199,1038109322,1729076659,1438845566,1103148412,1233447760,1184636056,10716002306,9330497666,6531300304,6057121004,8141004995,7892254324,6732888168,8320725246,6479275025,6904548168,7913211408,6402119157,7715294101,6142258262,5327290474,7046997058,6432331892,5552813168,6511760508,9021827909,6551509355,5308955452,4428343634,5773262995,7846249967,11442240308,7357431657,4681898469,10434188669,7308720562,4688732889,5825017789],"usage_in_kernelmode":72430000000,"usage_in_usermode":442330000000},"system_cpu_usage":93710212910000000,"online_cpus":128,"throttling_data":{"periods":6587,"throttled_periods":169,"throttled_time":47684324899}},"precpu_stats":{"cpu_usage":{"total_usage":0,"usage_in_kernelmode":0,"usage_in_usermode":0},"throttling_data":{"periods":0,"throttled_periods":0,"throttled_time":0}},"memory_stats":{"usage":368836608,"max_usage":1750106112,"stats":{"active_anon":272637952,"active_file":1024000,"cache":70090752,"dirty":0,"hierarchical_memory_limit":9223372036854771712,"hierarchical_memsw_limit":0,"inactive_anon":25313280,"inactive_file":8192,"mapped_file":0,"pgfault":13326938,"pgmajfault":0,"pgpgin":4880110,"pgpgout":4807095,"rss":228978688,"rss_huge":0,"total_active_anon":272637952,"total_active_file":1024000,"total_cache":70090752,"total_dirty":0,"total_inactive_anon":25313280,"total_inactive_file":8192,"total_mapped_file":0,"total_pgfault":13326938,"total_pgmajfault":0,"total_pgpgin":4880110,"total_pgpgout":4807095,"total_rss":228978688,"total_rss_huge":0,"total_unevictable":0,"total_writeback":0,"unevictable":0,"writeback":0},"limit":540972998656},"name":"/PowerWaterModels-cGgr8i28","id":"fd3eaf4076cc397b4ffa10460fecabb401d8d1fc8c60592dea690b1897a2546f","networks":{"eth0":{"rx_bytes":5553031,"rx_packets":2665,"rx_errors":0,"rx_dropped":22,"tx_bytes":243477,"tx_packets":1690,"tx_errors":0,"tx_dropped":0}}}

