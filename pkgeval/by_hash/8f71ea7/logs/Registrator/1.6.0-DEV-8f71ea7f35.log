################################################################################
# PkgEval set-up: 2020-10-28T11:15:56.298
#

Julia Version 1.6.0-DEV.1352
Commit 8f71ea7f35 (2020-10-28 02:10 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807



################################################################################
# Installation: 2020-10-28T11:15:58.116
#

   Resolving package versions...
   Installed IniFile ───────────────────── v0.5.0
   Installed MbedTLS_jll ───────────────── v2.16.8+0
   Installed ZeroMQ_jll ────────────────── v4.3.2+5
   Installed Parsers ───────────────────── v1.0.11
   Installed RegistryTools ─────────────── v1.5.3
   Installed MbedTLS ───────────────────── v1.0.3
   Installed WebSockets ────────────────── v1.5.2
   Installed JSON2 ─────────────────────── v0.3.2
   Installed Registrator ───────────────── v1.2.2
   Installed Mux ───────────────────────── v0.7.3
   Installed DataAPI ───────────────────── v1.3.0
   Installed AutoHashEquals ────────────── v0.2.0
   Installed GitHub ────────────────────── v5.1.7
   Installed Tables ────────────────────── v1.1.0
   Installed Pidfile ───────────────────── v1.2.0
   Installed GitForge ──────────────────── v0.1.6
   Installed ZMQ ───────────────────────── v1.2.1
   Installed HTTP ──────────────────────── v0.8.19
   Installed Lazy ──────────────────────── v0.15.1
   Installed MacroTools ────────────────── v0.5.6
   Installed Mustache ──────────────────── v1.0.8
   Installed TableTraits ───────────────── v1.0.0
   Installed TimeToLive ────────────────── v0.3.0
   Installed JSON ──────────────────────── v0.21.1
   Installed DataValueInterfaces ───────── v1.0.0
   Installed IteratorInterfaceExtensions ─ v1.0.0
   Installed JLLWrappers ───────────────── v1.1.3
   Installed Hiccup ────────────────────── v0.2.2
   Installed AssetRegistry ─────────────── v0.1.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [4418983a] + Registrator v1.2.2
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [bf4720bc] + AssetRegistry v0.1.0
  [15f4f7f2] + AutoHashEquals v0.2.0
  [9a962f9c] + DataAPI v1.3.0
  [e2d170a0] + DataValueInterfaces v1.0.0
  [8f6bce27] + GitForge v0.1.6
  [bc5e4493] + GitHub v5.1.7
  [cd3eb016] + HTTP v0.8.19
  [9fb69e20] + Hiccup v0.2.2
  [83e8ac13] + IniFile v0.5.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [692b3bcd] + JLLWrappers v1.1.3
  [682c06a0] + JSON v0.21.1
  [2535ab7d] + JSON2 v0.3.2
  [50d2b5c4] + Lazy v0.15.1
  [1914dd2f] + MacroTools v0.5.6
  [739be429] + MbedTLS v1.0.3
  [ffc61752] + Mustache v1.0.8
  [a975b10e] + Mux v0.7.3
  [69de0a69] + Parsers v1.0.11
  [fa939f87] + Pidfile v1.2.0
  [4418983a] + Registrator v1.2.2
  [d1eb7eb1] + RegistryTools v1.5.3
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.1.0
  [37f0c46e] + TimeToLive v0.3.0
  [104b5d7c] + WebSockets v1.5.2
  [c2297ded] + ZMQ v1.2.1
  [c8ffd9c3] + MbedTLS_jll v2.16.8+0
  [8f1865be] + ZeroMQ_jll v4.3.2+5
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [f43a241f] + Downloads
  [7b1f6079] + FileWatching
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
  [deac9b47] + LibCURL_jll
  [14a3606d] + MozillaCACerts_jll


################################################################################
# Testing: 2020-10-28T11:16:03.100
#


     Testing Registrator
Status `/tmp/jl_wy3MxZ/Project.toml`
  [15f4f7f2] AutoHashEquals v0.2.0
  [8f6bce27] GitForge v0.1.6
  [bc5e4493] GitHub v5.1.7
  [cd3eb016] HTTP v0.8.19
  [682c06a0] JSON v0.21.1
  [739be429] MbedTLS v1.0.3
  [ffc61752] Mustache v1.0.8
  [a975b10e] Mux v0.7.3
  [4418983a] Registrator v1.2.2
  [d1eb7eb1] RegistryTools v1.5.3
  [37f0c46e] TimeToLive v0.3.0
  [c2297ded] ZMQ v1.2.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [7b1f6079] FileWatching
  [76f85450] LibGit2
  [56ddb016] Logging
  [44cfe95a] Pkg
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
Status `/tmp/jl_wy3MxZ/Manifest.toml`
  [bf4720bc] AssetRegistry v0.1.0
  [15f4f7f2] AutoHashEquals v0.2.0
  [9a962f9c] DataAPI v1.3.0
  [e2d170a0] DataValueInterfaces v1.0.0
  [8f6bce27] GitForge v0.1.6
  [bc5e4493] GitHub v5.1.7
  [cd3eb016] HTTP v0.8.19
  [9fb69e20] Hiccup v0.2.2
  [83e8ac13] IniFile v0.5.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [692b3bcd] JLLWrappers v1.1.3
  [682c06a0] JSON v0.21.1
  [2535ab7d] JSON2 v0.3.2
  [50d2b5c4] Lazy v0.15.1
  [1914dd2f] MacroTools v0.5.6
  [739be429] MbedTLS v1.0.3
  [ffc61752] Mustache v1.0.8
  [a975b10e] Mux v0.7.3
  [69de0a69] Parsers v1.0.11
  [fa939f87] Pidfile v1.2.0
  [4418983a] Registrator v1.2.2
  [d1eb7eb1] RegistryTools v1.5.3
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.1.0
  [37f0c46e] TimeToLive v0.3.0
  [104b5d7c] WebSockets v1.5.2
  [c2297ded] ZMQ v1.2.1
  [c8ffd9c3] MbedTLS_jll v2.16.8+0
  [8f1865be] ZeroMQ_jll v4.3.2+5
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [f43a241f] Downloads
  [7b1f6079] FileWatching
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
  [deac9b47] LibCURL_jll
  [14a3606d] MozillaCACerts_jll
     Testing Running tests...
[ Info: Waiting for server to start...
┌ Warning: API request failed
│   exception =
│    HTTP.ExceptionRequest.StatusError(404, "GET", "/repos/JuliaLang/NotARealRepo", HTTP.Messages.Response:
│    """
│    HTTP/1.1 404 Not Found
│    server: GitHub.com
│    date: Wed, 28 Oct 2020 11:18:07 GMT
│    content-type: application/json; charset=utf-8
│    status: 404 Not Found
│    x-github-media-type: github.v3; format=json
│    access-control-expose-headers: ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset
│    access-control-allow-origin: *
│    strict-transport-security: max-age=31536000; includeSubdomains; preload
│    x-frame-options: deny
│    x-content-type-options: nosniff
│    x-xss-protection: 1; mode=block
│    referrer-policy: origin-when-cross-origin, strict-origin-when-cross-origin
│    content-security-policy: default-src 'none'
│    vary: Accept-Encoding, Accept, X-Requested-With
│    X-Ratelimit-Limit: 60
│    X-Ratelimit-Remaining: 51
│    X-Ratelimit-Reset: 1603885963
│    X-Ratelimit-Used: 9
│    Content-Length: 107
│    X-GitHub-Request-Id: 9B9A:4A9B:7A9D10:CDB6AC:5F99536A
│    
│    {"message":"Not Found","documentation_url":"https://docs.github.com/rest/reference/repos#get-a-repository"}""")
│    Stacktrace:
│      [1] request(f::GitHubAPI, fun::Function, ep::GitForge.Endpoint; headers::Vector{Pair{SubString{String}, SubString{String}}}, query::Dict{Any, Any}, request_opts::Dict{Any, Any}, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ GitForge ~/.julia/packages/GitForge/cPPnd/src/request.jl:158
│      [2] request
│        @ ~/.julia/packages/GitForge/cPPnd/src/request.jl:122 [inlined]
│      [3] get_repo(f::GitHubAPI, owner::String, repo::SubString{String}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ GitForge ~/.julia/packages/GitForge/cPPnd/src/helpers.jl:8
│      [4] get_repo(f::GitHubAPI, owner::String, repo::SubString{String})
│        @ GitForge ~/.julia/packages/GitForge/cPPnd/src/helpers.jl:8
│      [5] getrepo(#unused#::GitHubAPI, owner::String, name::SubString{String})
│        @ Registrator.WebUI ~/.julia/packages/Registrator/jZ75g/src/webui/gitutils.jl:6
│      [6] register(r::HTTP.Messages.Request)
│        @ Registrator.WebUI ~/.julia/packages/Registrator/jZ75g/src/webui/routes/register.jl:31
│      [7] (::Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.register)})(f::Function, x::HTTP.Messages.Request)
│        @ Mux ~/.julia/packages/Mux/gK1lB/src/Mux.jl:17
│      [8] (::Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.register)}, Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.status)}, Registrator.WebUI.var"#38#40"}})(x::HTTP.Messages.Request)
│        @ Mux ~/.julia/packages/Mux/gK1lB/src/Mux.jl:10
│      [9] (::Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.select)})(f::Function, x::HTTP.Messages.Request)
│        @ Mux ~/.julia/packages/Mux/gK1lB/src/Mux.jl:17
│     [10] (::Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.select)}, Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.register)}, Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.status)}, Registrator.WebUI.var"#38#40"}}})(x::HTTP.Messages.Request)
│        @ Mux ~/.julia/packages/Mux/gK1lB/src/Mux.jl:10
│     [11] (::Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.callback)})(f::Function, x::HTTP.Messages.Request)
│        @ Mux ~/.julia/packages/Mux/gK1lB/src/Mux.jl:17
│     [12] (::Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.callback)}, Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.select)}, Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.register)}, Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.status)}, Registrator.WebUI.var"#38#40"}}}})(x::HTTP.Messages.Request)
│        @ Mux ~/.julia/packages/Mux/gK1lB/src/Mux.jl:10
│     [13] (::Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.auth)})(f::Function, x::HTTP.Messages.Request)
│        @ Mux ~/.julia/packages/Mux/gK1lB/src/Mux.jl:17
│     [14] (::Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.auth)}, Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.callback)}, Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.select)}, Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.register)}, Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.status)}, Registrator.WebUI.var"#38#40"}}}}})(x::HTTP.Messages.Request)
│        @ Mux ~/.julia/packages/Mux/gK1lB/src/Mux.jl:10
│     [15] (::Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.index)})(f::Function, x::HTTP.Messages.Request)
│        @ Mux ~/.julia/packages/Mux/gK1lB/src/Mux.jl:17
│     [16] (::Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.index)}, Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.auth)}, Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.callback)}, Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.select)}, Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.register)}, Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.status)}, Registrator.WebUI.var"#38#40"}}}}}})(x::HTTP.Messages.Request)
│        @ Mux ~/.julia/packages/Mux/gK1lB/src/Mux.jl:10
│     [17] error_handler(f::Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.index)}, Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.auth)}, Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.callback)}, Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.select)}, Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.register)}, Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.status)}, Registrator.WebUI.var"#38#40"}}}}}}, r::HTTP.Messages.Request)
│        @ Registrator.WebUI ~/.julia/packages/Registrator/jZ75g/src/webui/WebUI.jl:122
│     [18] (::Mux.var"#1#2"{typeof(Registrator.WebUI.error_handler), Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.index)}, Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.auth)}, Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.callback)}, Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.select)}, Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.register)}, Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.status)}, Registrator.WebUI.var"#38#40"}}}}}}})(x::HTTP.Messages.Request)
│        @ Mux ~/.julia/packages/Mux/gK1lB/src/Mux.jl:10
│     [19] (::Mux.var"#7#8"{Mux.App})(req::HTTP.Messages.Request)
│        @ Mux ~/.julia/packages/Mux/gK1lB/src/server.jl:42
│     [20] handle
│        @ ~/.julia/packages/HTTP/IAI92/src/Handlers.jl:253 [inlined]
│     [21] handle(::HTTP.Handlers.RequestHandlerFunction{Mux.var"#7#8"{Mux.App}}, ::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.ConnectionPool.Transaction{Sockets.TCPSocket}})
│        @ HTTP.Handlers ~/.julia/packages/HTTP/IAI92/src/Handlers.jl:276
│     [22] #4
│        @ ~/.julia/packages/HTTP/IAI92/src/Handlers.jl:345 [inlined]
│     [23] macro expansion
│        @ ~/.julia/packages/HTTP/IAI92/src/Servers.jl:367 [inlined]
│     [24] (::HTTP.Servers.var"#13#14"{HTTP.Handlers.var"#4#5"{HTTP.Handlers.RequestHandlerFunction{Mux.var"#7#8"{Mux.App}}}, HTTP.ConnectionPool.Transaction{Sockets.TCPSocket}, HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.ConnectionPool.Transaction{Sockets.TCPSocket}}})()
│        @ HTTP.Servers ./task.jl:395
└ @ Registrator.WebUI ~/.julia/packages/Registrator/jZ75g/src/webui/gitutils.jl:8
┌ Warning: API request failed
│   exception =
│    HTTP.ExceptionRequest.StatusError(401, "GET", "/repos/JuliaLang/julia/collaborators/christopher-dG", HTTP.Messages.Response:
│    """
│    HTTP/1.1 401 Unauthorized
│    server: GitHub.com
│    date: Wed, 28 Oct 2020 11:18:10 GMT
│    content-type: application/json; charset=utf-8
│    content-length: 149
│    status: 401 Unauthorized
│    x-github-media-type: github.v3; format=json
│    access-control-expose-headers: ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset
│    access-control-allow-origin: *
│    strict-transport-security: max-age=31536000; includeSubdomains; preload
│    x-frame-options: deny
│    x-content-type-options: nosniff
│    x-xss-protection: 1; mode=block
│    referrer-policy: origin-when-cross-origin, strict-origin-when-cross-origin
│    content-security-policy: default-src 'none'
│    vary: Accept-Encoding, Accept, X-Requested-With
│    X-Ratelimit-Limit: 60
│    X-Ratelimit-Remaining: 47
│    X-Ratelimit-Reset: 1603885963
│    X-Ratelimit-Used: 13
│    X-GitHub-Request-Id: 9B9A:4A9B:7A9F3B:CDC034:5F995372
│    
│    {"message":"Requires authentication","documentation_url":"https://docs.github.com/rest/reference/repos#check-if-a-user-is-a-repository-collaborator"}""")
│    Stacktrace:
│      [1] request(f::GitHubAPI, fun::Function, ep::GitForge.Endpoint; headers::Vector{Pair{SubString{String}, SubString{String}}}, query::Dict{Any, Any}, request_opts::Dict{Any, Any}, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ GitForge ~/.julia/packages/GitForge/cPPnd/src/request.jl:158
│      [2] request
│        @ ~/.julia/packages/GitForge/cPPnd/src/request.jl:122 [inlined]
│      [3] is_collaborator(f::GitHubAPI, owner::String, repo::String, name_or_id::String; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ GitForge ~/.julia/packages/GitForge/cPPnd/src/helpers.jl:8
│      [4] is_collaborator(f::GitHubAPI, owner::String, repo::String, name_or_id::String)
│        @ GitForge ~/.julia/packages/GitForge/cPPnd/src/helpers.jl:8
│      [5] isauthorized(u::Registrator.WebUI.User{GitForge.GitHub.User, GitHubAPI}, repo::GitForge.GitHub.Repo)
│        @ Registrator.WebUI ~/.julia/packages/Registrator/jZ75g/src/webui/gitutils.jl:6
│      [6] register(r::HTTP.Messages.Request)
│        @ Registrator.WebUI ~/.julia/packages/Registrator/jZ75g/src/webui/routes/register.jl:33
│      [7] (::Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.register)})(f::Function, x::HTTP.Messages.Request)
│        @ Mux ~/.julia/packages/Mux/gK1lB/src/Mux.jl:17
│      [8] (::Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.register)}, Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.status)}, Registrator.WebUI.var"#38#40"}})(x::HTTP.Messages.Request)
│        @ Mux ~/.julia/packages/Mux/gK1lB/src/Mux.jl:10
│      [9] (::Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.select)})(f::Function, x::HTTP.Messages.Request)
│        @ Mux ~/.julia/packages/Mux/gK1lB/src/Mux.jl:17
│     [10] (::Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.select)}, Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.register)}, Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.status)}, Registrator.WebUI.var"#38#40"}}})(x::HTTP.Messages.Request)
│        @ Mux ~/.julia/packages/Mux/gK1lB/src/Mux.jl:10
│     [11] (::Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.callback)})(f::Function, x::HTTP.Messages.Request)
│        @ Mux ~/.julia/packages/Mux/gK1lB/src/Mux.jl:17
│     [12] (::Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.callback)}, Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.select)}, Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.register)}, Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.status)}, Registrator.WebUI.var"#38#40"}}}})(x::HTTP.Messages.Request)
│        @ Mux ~/.julia/packages/Mux/gK1lB/src/Mux.jl:10
│     [13] (::Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.auth)})(f::Function, x::HTTP.Messages.Request)
│        @ Mux ~/.julia/packages/Mux/gK1lB/src/Mux.jl:17
│     [14] (::Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.auth)}, Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.callback)}, Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.select)}, Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.register)}, Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.status)}, Registrator.WebUI.var"#38#40"}}}}})(x::HTTP.Messages.Request)
│        @ Mux ~/.julia/packages/Mux/gK1lB/src/Mux.jl:10
│     [15] (::Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.index)})(f::Function, x::HTTP.Messages.Request)
│        @ Mux ~/.julia/packages/Mux/gK1lB/src/Mux.jl:17
│     [16] (::Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.index)}, Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.auth)}, Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.callback)}, Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.select)}, Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.register)}, Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.status)}, Registrator.WebUI.var"#38#40"}}}}}})(x::HTTP.Messages.Request)
│        @ Mux ~/.julia/packages/Mux/gK1lB/src/Mux.jl:10
│     [17] error_handler(f::Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.index)}, Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.auth)}, Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.callback)}, Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.select)}, Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.register)}, Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.status)}, Registrator.WebUI.var"#38#40"}}}}}}, r::HTTP.Messages.Request)
│        @ Registrator.WebUI ~/.julia/packages/Registrator/jZ75g/src/webui/WebUI.jl:122
│     [18] (::Mux.var"#1#2"{typeof(Registrator.WebUI.error_handler), Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.index)}, Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.auth)}, Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.callback)}, Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.select)}, Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.register)}, Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.status)}, Registrator.WebUI.var"#38#40"}}}}}}})(x::HTTP.Messages.Request)
│        @ Mux ~/.julia/packages/Mux/gK1lB/src/Mux.jl:10
│     [19] (::Mux.var"#7#8"{Mux.App})(req::HTTP.Messages.Request)
│        @ Mux ~/.julia/packages/Mux/gK1lB/src/server.jl:42
│     [20] handle
│        @ ~/.julia/packages/HTTP/IAI92/src/Handlers.jl:253 [inlined]
│     [21] handle(::HTTP.Handlers.RequestHandlerFunction{Mux.var"#7#8"{Mux.App}}, ::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.ConnectionPool.Transaction{Sockets.TCPSocket}})
│        @ HTTP.Handlers ~/.julia/packages/HTTP/IAI92/src/Handlers.jl:276
│     [22] #4
│        @ ~/.julia/packages/HTTP/IAI92/src/Handlers.jl:345 [inlined]
│     [23] macro expansion
│        @ ~/.julia/packages/HTTP/IAI92/src/Servers.jl:367 [inlined]
│     [24] (::HTTP.Servers.var"#13#14"{HTTP.Handlers.var"#4#5"{HTTP.Handlers.RequestHandlerFunction{Mux.var"#7#8"{Mux.App}}}, HTTP.ConnectionPool.Transaction{Sockets.TCPSocket}, HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.ConnectionPool.Transaction{Sockets.TCPSocket}}})()
│        @ HTTP.Servers ./task.jl:395
└ @ Registrator.WebUI ~/.julia/packages/Registrator/jZ75g/src/webui/gitutils.jl:8
┌ Warning: API request failed
│   exception =
│    HTTP.ExceptionRequest.StatusError(401, "GET", "/repos/JuliaLang/julia/collaborators/christopher-dG", HTTP.Messages.Response:
│    """
│    HTTP/1.1 401 Unauthorized
│    server: GitHub.com
│    date: Wed, 28 Oct 2020 11:18:10 GMT
│    content-type: application/json; charset=utf-8
│    content-length: 149
│    status: 401 Unauthorized
│    x-github-media-type: github.v3; format=json
│    access-control-expose-headers: ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset
│    access-control-allow-origin: *
│    strict-transport-security: max-age=31536000; includeSubdomains; preload
│    x-frame-options: deny
│    x-content-type-options: nosniff
│    x-xss-protection: 1; mode=block
│    referrer-policy: origin-when-cross-origin, strict-origin-when-cross-origin
│    content-security-policy: default-src 'none'
│    vary: Accept-Encoding, Accept, X-Requested-With
│    X-Ratelimit-Limit: 60
│    X-Ratelimit-Remaining: 43
│    X-Ratelimit-Reset: 1603885962
│    X-Ratelimit-Used: 17
│    X-GitHub-Request-Id: 9B9A:4A9B:7A9F63:CDC091:5F995372
│    
│    {"message":"Requires authentication","documentation_url":"https://docs.github.com/rest/reference/repos#check-if-a-user-is-a-repository-collaborator"}""")
│    Stacktrace:
│      [1] request(f::GitHubAPI, fun::Function, ep::GitForge.Endpoint; headers::Vector{Pair{SubString{String}, SubString{String}}}, query::Dict{Any, Any}, request_opts::Dict{Any, Any}, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ GitForge ~/.julia/packages/GitForge/cPPnd/src/request.jl:158
│      [2] request
│        @ ~/.julia/packages/GitForge/cPPnd/src/request.jl:122 [inlined]
│      [3] is_collaborator(f::GitHubAPI, owner::String, repo::String, name_or_id::String; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
│        @ GitForge ~/.julia/packages/GitForge/cPPnd/src/helpers.jl:8
│      [4] is_collaborator(f::GitHubAPI, owner::String, repo::String, name_or_id::String)
│        @ GitForge ~/.julia/packages/GitForge/cPPnd/src/helpers.jl:8
│      [5] isauthorized(u::Registrator.WebUI.User{GitForge.GitHub.User, GitHubAPI}, repo::GitForge.GitHub.Repo)
│        @ Registrator.WebUI ~/.julia/packages/Registrator/jZ75g/src/webui/gitutils.jl:6
│      [6] register(r::HTTP.Messages.Request)
│        @ Registrator.WebUI ~/.julia/packages/Registrator/jZ75g/src/webui/routes/register.jl:33
│      [7] (::Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.register)})(f::Function, x::HTTP.Messages.Request)
│        @ Mux ~/.julia/packages/Mux/gK1lB/src/Mux.jl:17
│      [8] (::Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.register)}, Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.status)}, Registrator.WebUI.var"#38#40"}})(x::HTTP.Messages.Request)
│        @ Mux ~/.julia/packages/Mux/gK1lB/src/Mux.jl:10
│      [9] (::Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.select)})(f::Function, x::HTTP.Messages.Request)
│        @ Mux ~/.julia/packages/Mux/gK1lB/src/Mux.jl:17
│     [10] (::Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.select)}, Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.register)}, Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.status)}, Registrator.WebUI.var"#38#40"}}})(x::HTTP.Messages.Request)
│        @ Mux ~/.julia/packages/Mux/gK1lB/src/Mux.jl:10
│     [11] (::Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.callback)})(f::Function, x::HTTP.Messages.Request)
│        @ Mux ~/.julia/packages/Mux/gK1lB/src/Mux.jl:17
│     [12] (::Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.callback)}, Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.select)}, Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.register)}, Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.status)}, Registrator.WebUI.var"#38#40"}}}})(x::HTTP.Messages.Request)
│        @ Mux ~/.julia/packages/Mux/gK1lB/src/Mux.jl:10
│     [13] (::Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.auth)})(f::Function, x::HTTP.Messages.Request)
│        @ Mux ~/.julia/packages/Mux/gK1lB/src/Mux.jl:17
│     [14] (::Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.auth)}, Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.callback)}, Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.select)}, Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.register)}, Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.status)}, Registrator.WebUI.var"#38#40"}}}}})(x::HTTP.Messages.Request)
│        @ Mux ~/.julia/packages/Mux/gK1lB/src/Mux.jl:10
│     [15] (::Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.index)})(f::Function, x::HTTP.Messages.Request)
│        @ Mux ~/.julia/packages/Mux/gK1lB/src/Mux.jl:17
│     [16] (::Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.index)}, Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.auth)}, Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.callback)}, Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.select)}, Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.register)}, Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.status)}, Registrator.WebUI.var"#38#40"}}}}}})(x::HTTP.Messages.Request)
│        @ Mux ~/.julia/packages/Mux/gK1lB/src/Mux.jl:10
│     [17] error_handler(f::Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.index)}, Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.auth)}, Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.callback)}, Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.select)}, Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.register)}, Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.status)}, Registrator.WebUI.var"#38#40"}}}}}}, r::HTTP.Messages.Request)
│        @ Registrator.WebUI ~/.julia/packages/Registrator/jZ75g/src/webui/WebUI.jl:122
│     [18] (::Mux.var"#1#2"{typeof(Registrator.WebUI.error_handler), Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.index)}, Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.auth)}, Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.callback)}, Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.select)}, Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.register)}, Mux.var"#1#2"{Mux.var"#5#6"{Registrator.WebUI.var"#32#33"{String}, typeof(Registrator.WebUI.status)}, Registrator.WebUI.var"#38#40"}}}}}}})(x::HTTP.Messages.Request)
│        @ Mux ~/.julia/packages/Mux/gK1lB/src/Mux.jl:10
│     [19] (::Mux.var"#7#8"{Mux.App})(req::HTTP.Messages.Request)
│        @ Mux ~/.julia/packages/Mux/gK1lB/src/server.jl:42
│     [20] handle
│        @ ~/.julia/packages/HTTP/IAI92/src/Handlers.jl:253 [inlined]
│     [21] handle(::HTTP.Handlers.RequestHandlerFunction{Mux.var"#7#8"{Mux.App}}, ::HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.ConnectionPool.Transaction{Sockets.TCPSocket}})
│        @ HTTP.Handlers ~/.julia/packages/HTTP/IAI92/src/Handlers.jl:276
│     [22] #4
│        @ ~/.julia/packages/HTTP/IAI92/src/Handlers.jl:345 [inlined]
│     [23] macro expansion
│        @ ~/.julia/packages/HTTP/IAI92/src/Servers.jl:367 [inlined]
│     [24] (::HTTP.Servers.var"#13#14"{HTTP.Handlers.var"#4#5"{HTTP.Handlers.RequestHandlerFunction{Mux.var"#7#8"{Mux.App}}}, HTTP.ConnectionPool.Transaction{Sockets.TCPSocket}, HTTP.Streams.Stream{HTTP.Messages.Request, HTTP.ConnectionPool.Transaction{Sockets.TCPSocket}}})()
│        @ HTTP.Servers ./task.jl:395
└ @ Registrator.WebUI ~/.julia/packages/Registrator/jZ75g/src/webui/gitutils.jl:8
Test Summary: | Pass  Total
Registrator   |   62     62
     Testing Registrator tests passed 

PkgEval succeeded


################################################################################
# PkgEval teardown: 2020-10-28T11:18:12.507
#


signal (15): Terminated
in expression starting at none:1
pthread_cond_wait at /lib/x86_64-linux-gnu/libpthread.so.0 (unknown line)

CPU usage: 107.22s (89.46s user, 18.17s kernel)

Network usage:
- eth0: 1.038 MiB received, 94.183 KiB sent

Raw statistics: {"read":"2020-10-28T11:18:12.509496087Z","preread":"0001-01-01T00:00:00Z","pids_stats":{"current":46},"blkio_stats":{"io_service_bytes_recursive":[{"major":259,"minor":0,"op":"Read","value":0},{"major":259,"minor":0,"op":"Write","value":86016},{"major":259,"minor":0,"op":"Sync","value":57344},{"major":259,"minor":0,"op":"Async","value":28672},{"major":259,"minor":0,"op":"Total","value":86016},{"major":253,"minor":2,"op":"Read","value":0},{"major":253,"minor":2,"op":"Write","value":86016},{"major":253,"minor":2,"op":"Sync","value":57344},{"major":253,"minor":2,"op":"Async","value":28672},{"major":253,"minor":2,"op":"Total","value":86016}],"io_serviced_recursive":[{"major":259,"minor":0,"op":"Read","value":0},{"major":259,"minor":0,"op":"Write","value":9},{"major":259,"minor":0,"op":"Sync","value":4},{"major":259,"minor":0,"op":"Async","value":5},{"major":259,"minor":0,"op":"Total","value":9},{"major":253,"minor":2,"op":"Read","value":0},{"major":253,"minor":2,"op":"Write","value":9},{"major":253,"minor":2,"op":"Sync","value":4},{"major":253,"minor":2,"op":"Async","value":5},{"major":253,"minor":2,"op":"Total","value":9}],"io_queue_recursive":[],"io_service_time_recursive":[],"io_wait_time_recursive":[],"io_merged_recursive":[],"io_time_recursive":[],"sectors_recursive":[]},"num_procs":0,"storage_stats":{},"cpu_stats":{"cpu_usage":{"total_usage":107224789166,"percpu_usage":[239385547,285202558,168516598,368603189,196488438,599889546,11980345,116339260,189220828,298951686,262449257,149595532,206243234,192690366,371798518,92045837,430508639,191583575,464341598,306894529,60659627,232073576,174754171,108301204,426073143,142724468,224030412,241624106,524431061,208954136,456444532,486446443,1426555840,360597748,477277756,584248536,3145808428,1662271558,1694561357,1751310534,2107055265,936050387,959737239,1174482081,2206554086,1442235842,986743298,607475323,1614829426,1029104501,1993943534,497275898,1982313764,1636922165,1636535739,1028191688,589502940,1033790314,564218367,1901003876,1876924662,1538183842,1782088985,1303833903,823264597,312357537,727559545,465475175,218950320,58323253,44199688,108831512,352084852,159997670,321462541,534449477,238807985,95603030,261087164,86271936,243038742,471842346,601292464,170636904,304632254,482711506,390023533,452459214,166531629,537502043,342736086,412543636,651742141,726890922,92127207,231067729,477812951,766253233,926892441,935304321,1499004242,966990113,1232713810,1031904674,2022304009,1857343331,975953907,1521894039,2667466744,577991228,1389537307,2102301320,424744963,1196429432,1014796234,1380824779,1934354738,1703181491,1674121807,2034632459,659621679,1417647905,1922895695,972176796,1771918141,1595803518,1455344633,2067247747],"usage_in_kernelmode":18170000000,"usage_in_usermode":89460000000},"system_cpu_usage":93908853750000000,"online_cpus":128,"throttling_data":{"periods":1271,"throttled_periods":45,"throttled_time":11739917211}},"precpu_stats":{"cpu_usage":{"total_usage":0,"usage_in_kernelmode":0,"usage_in_usermode":0},"throttling_data":{"periods":0,"throttled_periods":0,"throttled_time":0}},"memory_stats":{"usage":243654656,"max_usage":963506176,"stats":{"active_anon":197795840,"active_file":0,"cache":13012992,"dirty":0,"hierarchical_memory_limit":9223372036854771712,"hierarchical_memsw_limit":0,"inactive_anon":3387392,"inactive_file":8192,"mapped_file":0,"pgfault":2472702,"pgmajfault":0,"pgpgin":1322893,"pgpgout":1273769,"rss":188198912,"rss_huge":0,"total_active_anon":197795840,"total_active_file":0,"total_cache":13012992,"total_dirty":0,"total_inactive_anon":3387392,"total_inactive_file":8192,"total_mapped_file":0,"total_pgfault":2472702,"total_pgmajfault":0,"total_pgpgin":1322893,"total_pgpgout":1273769,"total_rss":188198912,"total_rss_huge":0,"total_unevictable":0,"total_writeback":0,"unevictable":0,"writeback":0},"limit":540972998656},"name":"/Registrator-p0pinq7m","id":"26c31f021ae7686917b365a2b6e6216e6a1785a381b7e7f018838979e7d3772b","networks":{"eth0":{"rx_bytes":1088674,"rx_packets":795,"rx_errors":0,"rx_dropped":5,"tx_bytes":96443,"tx_packets":669,"tx_errors":0,"tx_dropped":0}}}

