################################################################################
# PkgEval set-up: 2020-10-28T10:58:13.226
#

Julia Version 1.6.0-DEV.1352
Commit 8f71ea7f35 (2020-10-28 02:10 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807



################################################################################
# Installation: 2020-10-28T10:58:14.955
#

   Resolving package versions...
   Installed TheFix ─ v0.2.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [d833ac1a] + TheFix v0.2.3
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [d833ac1a] + TheFix v0.2.3
  [2a0f44e3] + Base64
  [b77e0a4c] + InteractiveUtils
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [4ec0a83e] + Unicode


################################################################################
# Testing: 2020-10-28T10:58:16.792
#


     Testing TheFix
Status `/tmp/jl_ZKIPOX/Project.toml`
  [d833ac1a] TheFix v0.2.3
  [3fa0cd96] REPL
  [8dfed614] Test
Status `/tmp/jl_ZKIPOX/Manifest.toml`
  [d833ac1a] TheFix v0.2.3
  [2a0f44e3] Base64
  [b77e0a4c] InteractiveUtils
  [56ddb016] Logging
  [d6f4376e] Markdown
  [3fa0cd96] REPL
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [4ec0a83e] Unicode
     Testing Running tests...
[ Info: Fixing UndefVarError(:xx) with x.
[ Info: Fixing UndefVarError(:exo) with exp.
[ Info: Fixing UndefVarError(:sim) with sin.
[ Info: Fixing UndefVarError(:factorrial) with factorial.
[ Info: Fixing UndefVarError(:factoreal) with factorial.
[ Info: Fixing DomainError(-1.0, "sqrt will only return a complex result if called with a complex argument. Try sqrt(Complex(x)).") with sqrt(Complex(-1.0)).
[ Info: Fixing DomainError(-1.0, "sqrt will only return a complex result if called with a complex argument. Try sqrt(Complex(x)).") with sqrt.(Complex.((-1.0, 2.0))).
[ Info: Fixing DomainError(-2, "Cannot raise an integer x to a negative power -2.\nMake x or -2 a float by adding a zero decimal (e.g., 2.0^-2 or 2^-2.0 instead of 2^-2), or write 1/x^2, float(x)^-2, x^float(-2) or (x//1)^-2") with 2 ^ float(1 - 3).
[ Info: Fixing DomainError(-2, "Cannot raise an integer x to a negative power -2.\nMake x or -2 a float by adding a zero decimal (e.g., 2.0^-2 or 2^-2.0 instead of 2^-2), or write 1/x^2, float(x)^-2, x^float(-2) or (x//1)^-2") with 2 .^ float.(-2:2).
[ Info: Fixing DomainError(-2, "Cannot raise an integer x to a negative power -2.\nMake x or -2 a float by adding a zero decimal (e.g., 2.0^-2 or 2^-2.0 instead of 2^-2), or write 1/x^2, float(x)^-2, x^float(-2) or (x//1)^-2") with 2 .^ float.((-2, -1, 0, 1, 2)).
[ Info: Fixing DomainError(-2.0, "NaN result for non-NaN input.") with log2(Complex(-2.0)).
┌ Warning: Exception ErrorException("syntax: invalid syntax 2 1") not implemented.
└ @ TheFix ~/.julia/packages/TheFix/J4szo/src/TheFix.jl:223
┌ Warning: Exception ErrorException("syntax: invalid syntax 1 0") not implemented.
└ @ TheFix ~/.julia/packages/TheFix/J4szo/src/TheFix.jl:223
[ Info: Fixing DomainError(-2, "Cannot raise an integer matrix x to a negative power -2.\nMake x a float matrix by adding a zero decimal (e.g., [2.0 1.0;1.0 0.0]^-2 instead of [2 1;1 0]^-2), or write float(x)^-2 or Rational.(x)^-2") with [2 1; 1 0] ^ float(1 - 3).
┌ Warning: Exception DomainError(0.0, "Cannot be subnormal converted to 0.") not implemented.
└ @ TheFix ~/.julia/packages/TheFix/J4szo/src/TheFix.jl:93
[ Info: Fixing OverflowError("21 is too large to look up in the table; consider using `factorial(big(21))` instead") with factorial(big(21)).
[ Info: Fixing UndefVarError(:factorrial) with factorial.
[ Info: Fixing UndefVarError(:factoreal) with factorial.
[ Info: Fixing OverflowError("24 is too large to look up in the table; consider using `factorial(big(24))` instead") with factorial(big(factorial(4))).
[ Info: Fixing OverflowError("21 is too large to look up in the table; consider using `factorial(big(21))` instead") with factorial.(big.((21, 22))).
[ Info: Fixing OverflowError("binomial(67, 30) overflows") with binomial(widen(67), widen(30)).
[ Info: Fixing OverflowError("gcd(-9223372036854775808, -9223372036854775808) overflows") with gcd(widen(typemin(Int)), widen(typemin(Int))).
[ Info: Fixing OverflowError("checked arithmetic: cannot compute |x| for x = -9223372036854775808::Int64") with gcd(widen.([typemin(Int), 1])).
[ Info: Fixing OverflowError("gcd(-9223372036854775808, -9223372036854775808) overflows") with gcd.(widen.((typemin(Int), 1)), widen.((typemin(Int), 2))).
[ Info: Fixing OverflowError("checked arithmetic: cannot compute |x| for x = -9223372036854775808::Int64") with gcd(widen(typemin(Int)), widen(Int(0))).
[ Info: Fixing OverflowError("1323457 * 12349812309487 overflowed for type Int64") with (var"#1#2"())(widen(1323457 // 20345)).
[ Info: Fixing OverflowError("1323457 * 12349812309487 overflowed for type Int64") with (var"#1#2"()).(widen.([1323457 // 20345, 1323458 // 20345])).
┌ Warning: Exception OverflowError("cannot negate unsigned number") not implemented.
└ @ TheFix ~/.julia/packages/TheFix/J4szo/src/TheFix.jl:141
[ Info: Fixing DivideError() with 2 / 0.
[ Info: Fixing DivideError() with 2 / 0.
[ Info: Fixing DivideError() with 2 - 0 * (2 / 0).
[ Info: Fixing DivideError() with 2 - 0 * (2 / 0).
[ Info: Fixing DivideError() with 2 - 0 * round(2 / 0, RoundDown).
[ Info: Fixing DivideError() with 2 / 0.
[ Info: Fixing DivideError() with (2 / 0, 2 - 0 * (2 / 0)).
[ Info: Fixing DivideError() with (2 / 0, 2 - 0 * round(2 / 0, RoundNearest)).
[ Info: Fixing BoundsError([1.0 1.0 1.0; 1.0 1.0 1.0], (7,)) with A[clamp(7, extrema(eachindex(A))...)].
[ Info: Fixing UndefVarError(:B) with A.
[ Info: Fixing BoundsError([1.0 1.0 1.0; 1.0 1.0 1.0], (1:7,)) with A[intersect(1:7, eachindex(A))].
[ Info: Fixing UndefVarError(:D) with A.
[ Info: Fixing BoundsError([1.0 1.0 1.0; 1.0 1.0 1.0], (3, 3)) with A[clamp(3, extrema(axes(A, 1))...), 3].
[ Info: Fixing UndefVarError(:E) with A.
[ Info: Fixing BoundsError([1.0 1.0 1.0; 1.0 1.0 1.0], (3, 4)) with A[clamp(3, extrema(axes(A, 1))...), clamp(4, extrema(axes(A, 2))...)].
[ Info: Fixing UndefVarError(:F) with A.
[ Info: Fixing BoundsError([1.0 1.0 1.0; 1.0 1.0 1.0], (1:5, 1:5)) with A[intersect(1:5, axes(A, 1)), intersect(1:5, axes(A, 2))].
[ Info: Fixing UndefVarError(:printline) with println.
1:2
1:2
1
2
[ Info: Fixing UndefVarError(:printline) with println.
1:2
1:2
1
2
[ Info: Fixing UndefVarError(:logarithm) with log.
[ Info: Fixing UndefVarError(:sine) with sin.
[ Info: Fixing UndefVarError(:expp1) with expm1.
[ Info: Fixing UndefVarError(:printline) with println.
t = 1.718281828459045
t = 19.085536923187668
t = 53.598150033144236
t = 147.4131591025766
t = 402.4287934927351
t = 1095.6331584284585
t = 2979.9579870417283
t = 8102.083927575384
t = 1.718281828459045
t = 6.38905609893065
t = 19.085536923187668
t = 53.598150033144236
t = 147.4131591025766
t = 402.4287934927351
t = 1095.6331584284585
t = 2979.9579870417283
t = 8102.083927575384
Test Summary: | Pass  Total
Fixed Errors  |   39     39
     Testing TheFix tests passed 

PkgEval succeeded


################################################################################
# PkgEval teardown: 2020-10-28T10:58:31.820
#


signal (15): Terminated
in expression starting at none:1

CPU usage: 15.75s (13.03s user, 2.64s kernel)

Network usage:
- eth0: 19.031 KiB received, 4.318 KiB sent

Raw statistics: {"read":"2020-10-28T10:58:32.697951079Z","preread":"0001-01-01T00:00:00Z","pids_stats":{"current":46},"blkio_stats":{"io_service_bytes_recursive":[{"major":259,"minor":0,"op":"Read","value":0},{"major":259,"minor":0,"op":"Write","value":20480},{"major":259,"minor":0,"op":"Sync","value":0},{"major":259,"minor":0,"op":"Async","value":20480},{"major":259,"minor":0,"op":"Total","value":20480},{"major":253,"minor":2,"op":"Read","value":0},{"major":253,"minor":2,"op":"Write","value":20480},{"major":253,"minor":2,"op":"Sync","value":0},{"major":253,"minor":2,"op":"Async","value":20480},{"major":253,"minor":2,"op":"Total","value":20480}],"io_serviced_recursive":[{"major":259,"minor":0,"op":"Read","value":0},{"major":259,"minor":0,"op":"Write","value":5},{"major":259,"minor":0,"op":"Sync","value":0},{"major":259,"minor":0,"op":"Async","value":5},{"major":259,"minor":0,"op":"Total","value":5},{"major":253,"minor":2,"op":"Read","value":0},{"major":253,"minor":2,"op":"Write","value":5},{"major":253,"minor":2,"op":"Sync","value":0},{"major":253,"minor":2,"op":"Async","value":5},{"major":253,"minor":2,"op":"Total","value":5}],"io_queue_recursive":[],"io_service_time_recursive":[],"io_wait_time_recursive":[],"io_merged_recursive":[],"io_time_recursive":[],"sectors_recursive":[]},"num_procs":0,"storage_stats":{},"cpu_stats":{"cpu_usage":{"total_usage":15752996548,"percpu_usage":[0,281106454,903572481,85596391,197392463,353239858,165266565,49621249,628834300,47929229,367833020,279071266,19620707,139215817,63517969,98940019,19775059,377669665,5265041,144855009,365916456,528097400,137378564,318880721,23263592,49100740,154442833,453071836,6798853,421531269,118329547,281221480,5397172,2430161,56586993,29406223,39109696,11441596,221851799,45033958,6455383,75124441,317871708,31590063,97547689,37873885,159912474,30388612,135463183,2262982,17548738,7718793,17019048,2063561,278351710,8523614,16101035,133784246,130800280,425249408,641800,5376172,19959000,4438550,68736207,9855143,60714524,834982718,207919174,100445350,476258540,433878204,66400905,56994283,24003259,108042775,25023718,15974647,1177270,22532126,53060231,176481533,258143560,295051330,3511032,69092798,9320,30606912,230978873,36949064,246778630,109973653,624149077,3257751,172373864,351498798,16738457,9267662,85030,18711948,84145712,77766332,3923991,82600636,115224715,4034731,109670592,9958154,64964877,394290,41194409,821181,81564093,60622655,788861,1418501,2176450,725381,1845631,23658359,6930,206970,264510347,22038230,13147416,1122491,1133070,3993351],"usage_in_kernelmode":2640000000,"usage_in_usermode":13030000000},"system_cpu_usage":93758860900000000,"online_cpus":128,"throttling_data":{"periods":196,"throttled_periods":5,"throttled_time":1826322156}},"precpu_stats":{"cpu_usage":{"total_usage":0,"usage_in_kernelmode":0,"usage_in_usermode":0},"throttling_data":{"periods":0,"throttled_periods":0,"throttled_time":0}},"memory_stats":{"usage":175620096,"max_usage":388104192,"stats":{"active_anon":163590144,"active_file":0,"cache":118784,"dirty":0,"hierarchical_memory_limit":9223372036854771712,"hierarchical_memsw_limit":0,"inactive_anon":20480,"inactive_file":8192,"mapped_file":0,"pgfault":283788,"pgmajfault":0,"pgpgin":156784,"pgpgout":116838,"rss":163500032,"rss_huge":0,"total_active_anon":163590144,"total_active_file":0,"total_cache":118784,"total_dirty":0,"total_inactive_anon":20480,"total_inactive_file":8192,"total_mapped_file":0,"total_pgfault":283788,"total_pgmajfault":0,"total_pgpgin":156784,"total_pgpgout":116838,"total_rss":163500032,"total_rss_huge":0,"total_unevictable":0,"total_writeback":0,"unevictable":0,"writeback":0},"limit":540972998656},"name":"/TheFix-y15UDaKN","id":"6b45678a70404a0894e8a5915dddfef9056c4773430b98db43f6da47fd650a01","networks":{"eth0":{"rx_bytes":19488,"rx_packets":55,"rx_errors":0,"rx_dropped":1,"tx_bytes":4422,"tx_packets":29,"tx_errors":0,"tx_dropped":0}}}

