################################################################################
# PkgEval set-up: 2020-10-28T14:50:17.398
#

Julia Version 1.6.0-DEV.1352
Commit 8f71ea7f35 (2020-10-28 02:10 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-11.0.0 (ORCJIT, znver2)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_MAX_NUM_PRECOMPILE_FILES = 9223372036854775807



################################################################################
# Installation: 2020-10-28T14:50:19.211
#

   Resolving package versions...
   Installed CompilerSupportLibraries_jll ─ v0.3.4+0
   Installed OpenSpecFun_jll ────────────── v0.5.3+4
   Installed NaNMath ────────────────────── v0.3.4
   Installed DiffResults ────────────────── v1.0.2
   Installed FunctionWrappers ───────────── v1.1.1
   Installed SpecialFunctions ───────────── v0.10.3
   Installed StaticArrays ───────────────── v0.12.5
   Installed ReverseDiff ────────────────── v1.4.3
   Installed MacroTools ─────────────────── v0.5.6
   Installed CommonSubexpressions ───────── v0.3.0
   Installed DiffRules ──────────────────── v1.0.1
   Installed JLLWrappers ────────────────── v1.1.3
   Installed ForwardDiff ────────────────── v0.10.12
Updating `~/.julia/environments/v1.6/Project.toml`
  [37e2e3b7] + ReverseDiff v1.4.3
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [bbf7d656] + CommonSubexpressions v0.3.0
  [163ba53b] + DiffResults v1.0.2
  [b552c78f] + DiffRules v1.0.1
  [f6369f11] + ForwardDiff v0.10.12
  [069b7b12] + FunctionWrappers v1.1.1
  [692b3bcd] + JLLWrappers v1.1.3
  [1914dd2f] + MacroTools v0.5.6
  [77ba4419] + NaNMath v0.3.4
  [37e2e3b7] + ReverseDiff v1.4.3
  [276daf66] + SpecialFunctions v0.10.3
  [90137ffa] + StaticArrays v0.12.5
  [e66e0078] + CompilerSupportLibraries_jll v0.3.4+0
  [efe28fd5] + OpenSpecFun_jll v0.5.3+4
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [f43a241f] + Downloads
  [b77e0a4c] + InteractiveUtils
  [b27032c2] + LibCURL
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
  [deac9b47] + LibCURL_jll
  [14a3606d] + MozillaCACerts_jll


################################################################################
# Testing: 2020-10-28T14:50:25.771
#


     Testing ReverseDiff
Status `/tmp/jl_8TB6h2/Project.toml`
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [de460e47] DiffTests v0.1.1
  [f6369f11] ForwardDiff v0.10.12
  [069b7b12] FunctionWrappers v1.1.1
  [1914dd2f] MacroTools v0.5.6
  [77ba4419] NaNMath v0.3.4
  [37e2e3b7] ReverseDiff v1.4.3
  [276daf66] SpecialFunctions v0.10.3
  [90137ffa] StaticArrays v0.12.5
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_8TB6h2/Manifest.toml`
  [bbf7d656] CommonSubexpressions v0.3.0
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [de460e47] DiffTests v0.1.1
  [f6369f11] ForwardDiff v0.10.12
  [069b7b12] FunctionWrappers v1.1.1
  [692b3bcd] JLLWrappers v1.1.3
  [1914dd2f] MacroTools v0.5.6
  [77ba4419] NaNMath v0.3.4
  [37e2e3b7] ReverseDiff v1.4.3
  [276daf66] SpecialFunctions v0.10.3
  [90137ffa] StaticArrays v0.12.5
  [e66e0078] CompilerSupportLibraries_jll v0.3.4+0
  [efe28fd5] OpenSpecFun_jll v0.5.3+4
  [0dad84c5] ArgTools
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [f43a241f] Downloads
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
  [deac9b47] LibCURL_jll
  [14a3606d] MozillaCACerts_jll
     Testing Running tests...
running TapeTests...
done (took 72.882489758 seconds).
running TrackedTests...
done (took 10.376609505 seconds).
running MacrosTests...
  testing @forward named functions: `ReverseDiff.ForwardOptimize{typeof(Main.MacrosTests.f0)}(Main.MacrosTests.f0)`...
  testing @forward named functions: `ReverseDiff.ForwardOptimize{Main.MacrosTests.var"##hidden_f1"}(Main.MacrosTests.#hidden_f1)`...
  testing @forward named functions: `ReverseDiff.ForwardOptimize{Main.MacrosTests.var"##hidden_f2"}(Main.MacrosTests.#hidden_f2)`...
  testing @forward named functions: `ReverseDiff.ForwardOptimize{Main.MacrosTests.var"##hidden_f3"}(Main.MacrosTests.#hidden_f3)`...
  testing @forward named functions: `ReverseDiff.ForwardOptimize{Main.MacrosTests.var"##hidden_f4"}(Main.MacrosTests.#hidden_f4)`...
  testing @forward named functions: `ReverseDiff.ForwardOptimize{typeof(-)}(-)`...
  testing @forward anonymous functions: `ReverseDiff.ForwardOptimize{Main.MacrosTests.var"#1#2"}(Main.MacrosTests.var"#1#2"())`...
  testing @forward anonymous functions: `ReverseDiff.ForwardOptimize{Main.MacrosTests.var"#3#4"}(Main.MacrosTests.var"#3#4"())`...
  testing @skip named functions: `ReverseDiff.SkipOptimize{typeof(Main.MacrosTests.f0)}(Main.MacrosTests.f0)`...
  testing @skip named functions: `ReverseDiff.SkipOptimize{Main.MacrosTests.var"##hidden_g1"}(Main.MacrosTests.#hidden_g1)`...
  testing @skip named functions: `ReverseDiff.SkipOptimize{Main.MacrosTests.var"##hidden_g2"}(Main.MacrosTests.#hidden_g2)`...
  testing @skip named functions: `ReverseDiff.SkipOptimize{Main.MacrosTests.var"##hidden_g3"}(Main.MacrosTests.#hidden_g3)`...
  testing @skip named functions: `ReverseDiff.SkipOptimize{Main.MacrosTests.var"##hidden_g4"}(Main.MacrosTests.#hidden_g4)`...
  testing @skip anonymous functions: `ReverseDiff.SkipOptimize{Main.MacrosTests.var"#5#6"}(Main.MacrosTests.var"#5#6"())`...
  testing @skip anonymous functions: `ReverseDiff.SkipOptimize{Main.MacrosTests.var"#7#8"}(Main.MacrosTests.var"#7#8"())`...
Test Summary: | Pass  Total
@grad macro   |   23     23
done (took 24.550986381 seconds).
running ScalarTests...
  testing forward-mode unary scalar functions: `Base.asind`...
  testing forward-mode unary scalar functions: `Base.log1p`...
  testing forward-mode unary scalar functions: `Base.acsch`...
  testing forward-mode unary scalar functions: `SpecialFunctions.erfc`...
  testing forward-mode unary scalar functions: `SpecialFunctions.digamma`...
  testing forward-mode unary scalar functions: `NaNMath.acos`...
  testing forward-mode unary scalar functions: `Base.asec`...
  testing forward-mode unary scalar functions: `Base.acosh`...
  testing forward-mode binary scalar functions: `\`...
  testing forward-mode unary scalar functions: `NaNMath.log10`...
  testing forward-mode unary scalar functions: `Base.mod2pi`...
  testing forward-mode unary scalar functions: `Base.acsc`...
  testing forward-mode unary scalar functions: `SpecialFunctions.airybiprime`...
  testing forward-mode unary scalar functions: `Base.cscd`...
  testing forward-mode binary scalar functions: `logbeta`...
  testing forward-mode binary scalar functions: `hypot`...
  testing forward-mode unary scalar functions: `NaNMath.log`...
  testing forward-mode unary scalar functions: `Base.tand`...
  testing forward-mode unary scalar functions: `NaNMath.atanh`...
  testing forward-mode unary scalar functions: `Base.deg2rad`...
  testing forward-mode unary scalar functions: `Base.log10`...
  testing forward-mode unary scalar functions: `Base.csch`...
  testing forward-mode unary scalar functions: `Base.asinh`...
  testing forward-mode unary scalar functions: `SpecialFunctions.airyai`...
  testing forward-mode unary scalar functions: `Base.abs2`...
  testing forward-mode unary scalar functions: `SpecialFunctions.gamma`...
  testing forward-mode unary scalar functions: `SpecialFunctions.erfcx`...
  testing forward-mode unary scalar functions: `NaNMath.log1p`...
  testing forward-mode binary scalar functions: `/`...
  testing forward-mode unary scalar functions: `SpecialFunctions.bessely0`...
  testing forward-mode unary scalar functions: `Base.cosh`...
  testing forward-mode unary scalar functions: `NaNMath.sin`...
  testing forward-mode unary scalar functions: `Base.cos`...
  testing forward-mode binary scalar functions: `atan`...
  testing forward-mode unary scalar functions: `Base.cospi`...
  testing forward-mode unary scalar functions: `Base.cbrt`...
  testing forward-mode unary scalar functions: `Base.acosd`...
  testing forward-mode unary scalar functions: `SpecialFunctions.bessely1`...
  testing forward-mode unary scalar functions: `Base.acoth`...
  testing forward-mode unary scalar functions: `NaNMath.cos`...
  testing forward-mode binary scalar functions: `max`...
  testing forward-mode unary scalar functions: `SpecialFunctions.erfcinv`...
  testing forward-mode unary scalar functions: `SpecialFunctions.erf`...
  testing forward-mode unary scalar functions: `Base.sin`...
  testing forward-mode binary scalar functions: `+`...
  testing forward-mode unary scalar functions: `SpecialFunctions.dawson`...
  testing forward-mode unary scalar functions: `Base.inv`...
  testing forward-mode unary scalar functions: `Base.acotd`...
  testing forward-mode unary scalar functions: `SpecialFunctions.airyaiprime`...
  testing forward-mode binary scalar functions: `min`...
  testing forward-mode unary scalar functions: `Base.+`...
  testing forward-mode unary scalar functions: `SpecialFunctions.erfinv`...
  testing forward-mode unary scalar functions: `SpecialFunctions.trigamma`...
  testing forward-mode unary scalar functions: `Base.asecd`...
  testing forward-mode unary scalar functions: `Base.log`...
  testing forward-mode unary scalar functions: `NaNMath.acosh`...
  testing forward-mode unary scalar functions: `Base.rad2deg`...
  testing forward-mode binary scalar functions: `mod`...
  testing forward-mode unary scalar functions: `SpecialFunctions.besselj1`...
  testing forward-mode unary scalar functions: `Base.exp`...
  testing forward-mode unary scalar functions: `Base.acot`...
  testing forward-mode unary scalar functions: `NaNMath.sqrt`...
  testing forward-mode binary scalar functions: `*`...
  testing forward-mode unary scalar functions: `Base.sind`...
  testing forward-mode unary scalar functions: `Base.sinpi`...
  testing forward-mode binary scalar functions: `max`...
  testing forward-mode unary scalar functions: `Base.asech`...
  testing forward-mode unary scalar functions: `NaNMath.log2`...
  testing forward-mode unary scalar functions: `NaNMath.tan`...
  testing forward-mode unary scalar functions: `NaNMath.lgamma`...
  testing forward-mode unary scalar functions: `Base.sqrt`...
  testing forward-mode binary scalar functions: `^`...
  testing forward-mode unary scalar functions: `SpecialFunctions.invdigamma`...
  testing forward-mode unary scalar functions: `SpecialFunctions.airybi`...
  testing forward-mode unary scalar functions: `Base.exp10`...
  testing forward-mode binary scalar functions: `rem`...
  testing forward-mode unary scalar functions: `Base.sech`...
  testing forward-mode unary scalar functions: `SpecialFunctions.erfi`...
  testing forward-mode unary scalar functions: `Base.coth`...
  testing forward-mode unary scalar functions: `Base.asin`...
  testing forward-mode unary scalar functions: `Base.cotd`...
  testing forward-mode unary scalar functions: `Base.cosd`...
  testing forward-mode unary scalar functions: `Base.sinh`...
  testing forward-mode unary scalar functions: `Base.abs`...
  testing forward-mode unary scalar functions: `SpecialFunctions.loggamma`...
  testing forward-mode unary scalar functions: `SpecialFunctions.besselj0`...
  testing forward-mode unary scalar functions: `Base.transpose`...
  testing forward-mode binary scalar functions: `min`...
  testing forward-mode unary scalar functions: `Base.csc`...
  testing forward-mode unary scalar functions: `Base.tanh`...
  testing forward-mode unary scalar functions: `Base.log2`...
  testing forward-mode unary scalar functions: `Base.atan`...
  testing forward-mode unary scalar functions: `Base.secd`...
  testing forward-mode unary scalar functions: `Base.atand`...
  testing forward-mode unary scalar functions: `NaNMath.asin`...
  testing forward-mode unary scalar functions: `Base.sec`...
  testing forward-mode unary scalar functions: `Base.acscd`...
  testing forward-mode unary scalar functions: `Base.tan`...
  testing forward-mode unary scalar functions: `Base.-`...
  testing forward-mode unary scalar functions: `Base.cot`...
  testing forward-mode binary scalar functions: `-`...
  testing forward-mode unary scalar functions: `Base.exp2`...
  testing forward-mode unary scalar functions: `Base.expm1`...
  testing forward-mode unary scalar functions: `Base.acos`...
  testing forward-mode unary scalar functions: `Base.atanh`...
  testing forward-mode binary scalar functions: `beta`...
  testing SKIPPED_UNARY_SCALAR_FUNCS: `isinf`...
  testing SKIPPED_UNARY_SCALAR_FUNCS: `isnan`...
  testing SKIPPED_UNARY_SCALAR_FUNCS: `isfinite`...
  testing SKIPPED_UNARY_SCALAR_FUNCS: `iseven`...
  testing SKIPPED_UNARY_SCALAR_FUNCS: `isodd`...
  testing SKIPPED_UNARY_SCALAR_FUNCS: `isreal`...
  testing SKIPPED_UNARY_SCALAR_FUNCS: `isinteger`...
  testing SKIPPED_BINARY_SCALAR_FUNCS: `isequal`...
  testing SKIPPED_BINARY_SCALAR_FUNCS: `isless`...
  testing SKIPPED_BINARY_SCALAR_FUNCS: `<`...
  testing SKIPPED_BINARY_SCALAR_FUNCS: `>`...
  testing SKIPPED_BINARY_SCALAR_FUNCS: `==`...
  testing SKIPPED_BINARY_SCALAR_FUNCS: `!=`...
  testing SKIPPED_BINARY_SCALAR_FUNCS: `<=`...
  testing SKIPPED_BINARY_SCALAR_FUNCS: `>=`...
done (took 42.731045503 seconds).
running LinAlgTests...
  testing Array -> Number functions: `sum`...
  testing Array -> Number functions: `det`...
  testing Array -> Number functions: `mean`...
  testing Array -> Number functions: `#18`...
  testing Array -> Number functions: `#19`...
  testing Array -> Number functions: `#20`...
  testing Array -> Number functions: `#21`...
  testing Array -> Number functions: `#26`...
  testing Array -> Number functions: `#27`...
  testing Array -> Number functions: `#28`...
  testing Array -> Number functions: `#29`...
  testing Array -> Array functions: `-`...
  testing Array -> Array functions: `inv`...
  testing Array -> Array functions: `#34`...
  testing Array -> Array functions: `#35`...
  testing (Array, Array) -> Array functions: `+`...
  testing (Array, Array) -> Array functions: `-`...
  testing *(A, B) functions: `*(a, b)`...
  testing *(A, B) functions: `*(transpose(a), b)`...
  testing *(A, B) functions: `*(a, transpose(b))`...
  testing *(A, B) functions: `*(transpose(a), transpose(b))`...
  testing *(A, B) functions: `*(adjoint(a), b)`...
  testing *(A, B) functions: `*(a, adjoint(b))`...
  testing *(A, B) functions: `*(adjoint(a), adjoint(b))`...
  testing *(A, B) functions: `*(adjoint(a), transpose(b))`...
  testing *(A, B) functions: `*(transpose(a), adjoint(b))`...
done (took 90.457034331 seconds).
running ElementwiseTests...
  testing DiffTests.NUMBER_TO_NUMBER_FUNCS: `num2num_1`...
  testing DiffTests.NUMBER_TO_NUMBER_FUNCS: `num2num_2`...
  testing DiffTests.NUMBER_TO_NUMBER_FUNCS: `num2num_3`...
  testing DiffTests.NUMBER_TO_NUMBER_FUNCS: `num2num_4`...
  testing DiffTests.NUMBER_TO_NUMBER_FUNCS: `num2num_5`...
  testing DiffTests.NUMBER_TO_NUMBER_FUNCS: `identity`...
  testing forward-mode unary scalar functions: `asind`...
  testing forward-mode unary scalar functions: `log1p`...
  testing forward-mode unary scalar functions: `acsch`...
  testing forward-mode unary scalar functions: `erfc`...
  testing forward-mode unary scalar functions: `digamma`...
  testing forward-mode unary scalar functions: `acos`...
  testing forward-mode unary scalar functions: `asec`...
  testing forward-mode unary scalar functions: `acosh`...
  testing forward-mode binary scalar functions: `\`...
  testing forward-mode unary scalar functions: `log10`...
  testing forward-mode unary scalar functions: `mod2pi`...
  testing forward-mode unary scalar functions: `acsc`...
  testing forward-mode unary scalar functions: `airybiprime`...
  testing forward-mode unary scalar functions: `cscd`...
  testing forward-mode binary scalar functions: `logbeta`...
  testing forward-mode binary scalar functions: `hypot`...
  testing forward-mode unary scalar functions: `log`...
  testing forward-mode unary scalar functions: `tand`...
  testing forward-mode unary scalar functions: `atanh`...
  testing forward-mode unary scalar functions: `deg2rad`...
  testing forward-mode unary scalar functions: `log10`...
  testing forward-mode unary scalar functions: `csch`...
  testing forward-mode unary scalar functions: `asinh`...
  testing forward-mode unary scalar functions: `airyai`...
  testing forward-mode unary scalar functions: `abs2`...
  testing forward-mode unary scalar functions: `gamma`...
  testing forward-mode unary scalar functions: `erfcx`...
  testing forward-mode unary scalar functions: `log1p`...
  testing forward-mode binary scalar functions: `/`...
  testing forward-mode unary scalar functions: `bessely0`...
  testing forward-mode unary scalar functions: `cosh`...
  testing forward-mode unary scalar functions: `sin`...
  testing forward-mode unary scalar functions: `cos`...
  testing forward-mode binary scalar functions: `atan`...
  testing forward-mode unary scalar functions: `cospi`...
  testing forward-mode unary scalar functions: `cbrt`...
  testing forward-mode unary scalar functions: `acosd`...
  testing forward-mode unary scalar functions: `bessely1`...
  testing forward-mode unary scalar functions: `acoth`...
  testing forward-mode unary scalar functions: `cos`...
  testing forward-mode binary scalar functions: `max`...
  testing forward-mode unary scalar functions: `erfcinv`...
  testing forward-mode unary scalar functions: `erf`...
  testing forward-mode unary scalar functions: `sin`...
  testing forward-mode binary scalar functions: `+`...
  testing forward-mode unary scalar functions: `dawson`...
  testing forward-mode unary scalar functions: `inv`...
  testing forward-mode unary scalar functions: `acotd`...
  testing forward-mode unary scalar functions: `airyaiprime`...
  testing forward-mode binary scalar functions: `min`...
  testing forward-mode unary scalar functions: `+`...
  testing forward-mode unary scalar functions: `erfinv`...
  testing forward-mode unary scalar functions: `trigamma`...
  testing forward-mode unary scalar functions: `asecd`...
  testing forward-mode unary scalar functions: `log`...
  testing forward-mode unary scalar functions: `acosh`...
  testing forward-mode unary scalar functions: `rad2deg`...
  testing forward-mode binary scalar functions: `mod`...
  testing forward-mode unary scalar functions: `besselj1`...
  testing forward-mode unary scalar functions: `exp`...
  testing forward-mode unary scalar functions: `acot`...
  testing forward-mode unary scalar functions: `sqrt`...
  testing forward-mode binary scalar functions: `*`...
  testing forward-mode unary scalar functions: `sind`...
  testing forward-mode unary scalar functions: `sinpi`...
  testing forward-mode binary scalar functions: `max`...
  testing forward-mode unary scalar functions: `asech`...
  testing forward-mode unary scalar functions: `log2`...
  testing forward-mode unary scalar functions: `tan`...
  testing forward-mode unary scalar functions: `lgamma`...
  testing forward-mode unary scalar functions: `sqrt`...
  testing forward-mode binary scalar functions: `^`...
  testing forward-mode unary scalar functions: `invdigamma`...
  testing forward-mode unary scalar functions: `airybi`...
  testing forward-mode unary scalar functions: `exp10`...
  testing forward-mode binary scalar functions: `rem`...
  testing forward-mode unary scalar functions: `sech`...
  testing forward-mode unary scalar functions: `erfi`...
  testing forward-mode unary scalar functions: `coth`...
  testing forward-mode unary scalar functions: `asin`...
  testing forward-mode unary scalar functions: `cotd`...
  testing forward-mode unary scalar functions: `cosd`...
  testing forward-mode unary scalar functions: `sinh`...
  testing forward-mode unary scalar functions: `abs`...
  testing forward-mode unary scalar functions: `loggamma`...
  testing forward-mode unary scalar functions: `besselj0`...
  testing forward-mode unary scalar functions: `transpose`...
  testing forward-mode binary scalar functions: `min`...
  testing forward-mode unary scalar functions: `csc`...
  testing forward-mode unary scalar functions: `tanh`...
  testing forward-mode unary scalar functions: `log2`...
  testing forward-mode unary scalar functions: `atan`...
  testing forward-mode unary scalar functions: `secd`...
  testing forward-mode unary scalar functions: `atand`...
  testing forward-mode unary scalar functions: `asin`...
  testing forward-mode unary scalar functions: `sec`...
  testing forward-mode unary scalar functions: `acscd`...
  testing forward-mode unary scalar functions: `tan`...
  testing forward-mode unary scalar functions: `-`...
  testing forward-mode unary scalar functions: `cot`...
  testing forward-mode binary scalar functions: `-`...
  testing forward-mode unary scalar functions: `exp2`...
  testing forward-mode unary scalar functions: `expm1`...
  testing forward-mode unary scalar functions: `acos`...
  testing forward-mode unary scalar functions: `atanh`...
  testing forward-mode binary scalar functions: `beta`...
  testing built-in broadcast operators: `#11`...
  testing built-in broadcast operators: `#12`...
  testing built-in broadcast operators: `#13`...
  testing built-in broadcast operators: `#14`...
  testing built-in broadcast operators: `#15`...
  testing built-in broadcast operators: `#16`...
done (took 728.097221187 seconds).
running ArrayFunctionTests...
Test Summary: | Pass  Total
fill          |    3      3
Test Summary: | Pass  Total
any & all     |    4      4
Test Summary: | Pass  Total
cat           |  180    180
done (took 148.818681812 seconds).
running GradientTests...
  testing Issue #140: `nested_array_mul_140`...
ERROR: LoadError: LoadError: Module IR does not contain specified entry function
Stacktrace:
  [1] assume
    @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:9 [inlined]
  [2] macro expansion
    @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:107 [inlined]
  [3] do_ccall
    @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:97 [inlined]
  [4] FunctionWrapper
    @ ~/.julia/packages/FunctionWrappers/OAZAk/src/FunctionWrappers.jl:116 [inlined]
  [5] forward_pass!(compiled_tape::ReverseDiff.CompiledTape{ReverseDiff.GradientTape{typeof(Main.GradientTests.nested_array_mul_140), TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}, ReverseDiff.TrackedReal{Float64, Float64, Nothing}}})
    @ ReverseDiff ~/.julia/packages/ReverseDiff/jFRo1/src/api/tape.jl:124
  [6] seeded_forward_pass!
    @ ~/.julia/packages/ReverseDiff/jFRo1/src/api/tape.jl:42 [inlined]
  [7] gradient!
    @ ~/.julia/packages/ReverseDiff/jFRo1/src/api/gradients.jl:79 [inlined]
  [8] gradient!(tape::ReverseDiff.CompiledTape{ReverseDiff.GradientTape{typeof(Main.GradientTests.nested_array_mul_140), TrackedArray{Float64, Float64, 1, Vector{Float64}, Vector{Float64}}, ReverseDiff.TrackedReal{Float64, Float64, Nothing}}}, input::Vector{Float64})
    @ ReverseDiff ~/.julia/packages/ReverseDiff/jFRo1/src/api/gradients.jl:63
  [9] test_unary_gradient(f::Function, x::Vector{Float64})
    @ Main.GradientTests ~/.julia/packages/ReverseDiff/jFRo1/test/api/GradientTests.jl:59
 [10] top-level scope
    @ ~/.julia/packages/ReverseDiff/jFRo1/test/api/GradientTests.jl:178
 [11] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [12] top-level scope
    @ ./timing.jl:266
 [13] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [14] top-level scope
    @ none:6
in expression starting at /home/pkgeval/.julia/packages/ReverseDiff/jFRo1/test/api/GradientTests.jl:1
in expression starting at /home/pkgeval/.julia/packages/ReverseDiff/jFRo1/test/runtests.jl:34

PkgEval failed: Package ReverseDiff errored during testing
Stacktrace:
  [1] pkgerror(msg::String)
    @ Pkg.Types /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1651
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:334
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:321
  [5] #test#62
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:71 [inlined]
  [6] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:70 [inlined]
  [7] #test#61
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [8] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:68 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67
 [10] test(pkg::String)
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67
 [11] top-level scope
    @ none:44
 [12] eval
    @ ./boot.jl:360 [inlined]
 [13] eval(x::Expr)
    @ Base.MainInclude ./client.jl:446
 [14] top-level scope
    @ none:1
 [15] eval(m::Module, e::Any)
    @ Core ./boot.jl:360
 [16] exec_options(opts::Base.JLOptions)
    @ Base ./client.jl:261
 [17] _start()
    @ Base ./client.jl:485


################################################################################
# PkgEval teardown: 2020-10-28T15:09:18.297
CPU usage: 954.82s (940.50s user, 17.19s kernel)

Network usage:
- eth0: 642.913 KiB received, 52.916 KiB sent

Raw statistics: {"blkio_stats":{"io_queue_recursive":[],"io_serviced_recursive":[{"major":259,"value":0,"op":"Read","minor":0},{"major":259,"value":5,"op":"Write","minor":0},{"major":259,"value":0,"op":"Sync","minor":0},{"major":259,"value":5,"op":"Async","minor":0},{"major":259,"value":5,"op":"Total","minor":0},{"major":253,"value":0,"op":"Read","minor":2},{"major":253,"value":5,"op":"Write","minor":2},{"major":253,"value":0,"op":"Sync","minor":2},{"major":253,"value":5,"op":"Async","minor":2},{"major":253,"value":5,"op":"Total","minor":2}],"io_time_recursive":[],"sectors_recursive":[],"io_service_bytes_recursive":[{"major":259,"value":0,"op":"Read","minor":0},{"major":259,"value":28672,"op":"Write","minor":0},{"major":259,"value":0,"op":"Sync","minor":0},{"major":259,"value":28672,"op":"Async","minor":0},{"major":259,"value":28672,"op":"Total","minor":0},{"major":253,"value":0,"op":"Read","minor":2},{"major":253,"value":28672,"op":"Write","minor":2},{"major":253,"value":0,"op":"Sync","minor":2},{"major":253,"value":28672,"op":"Async","minor":2},{"major":253,"value":28672,"op":"Total","minor":2}],"io_wait_time_recursive":[],"io_merged_recursive":[],"io_service_time_recursive":[]},"memory_stats":{"usage":214691840,"max_usage":1931165696,"stats":{"hierarchical_memory_limit":9223372036854771712,"pgmajfault":0,"total_rss":199282688,"inactive_file":8192,"inactive_anon":2273280,"total_pgfault":4793915,"total_cache":9519104,"total_rss_huge":0,"total_active_anon":206499840,"total_pgmajfault":0,"pgpgin":3037621,"rss_huge":0,"mapped_file":0,"total_inactive_file":8192,"dirty":0,"total_unevictable":0,"total_dirty":0,"writeback":0,"pgpgout":2986644,"hierarchical_memsw_limit":0,"cache":9519104,"active_file":20480,"pgfault":4793915,"total_mapped_file":0,"total_pgpgout":2986644,"total_writeback":0,"rss":199282688,"unevictable":0,"total_inactive_anon":2273280,"total_pgpgin":3037621,"active_anon":206499840,"total_active_file":20480},"limit":540972998656},"name":"/ReverseDiff-frUtqfAB","networks":{"eth0":{"rx_bytes":658343,"rx_packets":1779,"tx_packets":387,"tx_bytes":54186,"tx_dropped":0,"rx_dropped":38,"tx_errors":0,"rx_errors":0}},"id":"737f66db7afe599a3848d1a0db9caae58449a2219a7a23332747a74b9c701618","preread":"0001-01-01T00:00:00Z","storage_stats":{},"precpu_stats":{"throttling_data":{"throttled_periods":0,"throttled_time":0,"periods":0},"cpu_usage":{"usage_in_usermode":0,"usage_in_kernelmode":0,"total_usage":0}},"pids_stats":{"current":38},"num_procs":0,"cpu_stats":{"throttling_data":{"throttled_periods":0,"throttled_time":0,"periods":0},"system_cpu_usage":95673706510000000,"online_cpus":128,"cpu_usage":{"usage_in_usermode":940500000000,"usage_in_kernelmode":17190000000,"total_usage":954818855087,"percpu_usage":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,954818855087,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}},"read":"2020-10-28T15:09:19.290876278Z"}