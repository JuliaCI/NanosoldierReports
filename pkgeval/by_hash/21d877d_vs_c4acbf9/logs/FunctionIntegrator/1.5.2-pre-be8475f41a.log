Julia Version 1.5.2-pre.25
Commit be8475f41a (2020-09-09 06:41 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.5/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.2
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_Eos8dZ/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_Eos8dZ/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.784966 seconds (1.27 M allocations: 59.255 MiB, 5.02% gc time)
Running: chebyshev_quadrature with k=1
  1.577679 seconds (2.15 M allocations: 111.794 MiB, 1.92% gc time)
Running: chebyshev_quadrature with k=2
  0.253694 seconds (356.11 k allocations: 20.584 MiB)
Running: chebyshev_quadrature with k=3
  0.340548 seconds (517.30 k allocations: 27.244 MiB, 4.10% gc time)
Running: chebyshev_quadrature with k=4
  0.322992 seconds (476.56 k allocations: 24.345 MiB, 6.87% gc time)
Running: jacobi_quadrature with α=β=1
 39.786055 seconds (46.28 M allocations: 3.232 GiB, 9.50% gc time)
Running: laguerre_quadrature with k=1
  3.121352 seconds (3.55 M allocations: 177.119 MiB, 5.43% gc time)
Running: legendre_quadrature
  0.225360 seconds (193.52 k allocations: 9.774 MiB, 15.73% gc time)
Running: lobatto_quadrature
  0.319002 seconds (315.76 k allocations: 16.787 MiB)
Running: radau_quadrature
  0.278230 seconds (297.90 k allocations: 15.866 MiB)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 72.603777 seconds (21.39 k allocations: 1.140 MiB)
Running: rectangle_rule_midpoint.
  0.221408 seconds (26.53 k allocations: 1.473 MiB, 36.18% gc time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 68.302334 seconds (19.38 k allocations: 1.042 MiB)
Running: rombergs_method
  0.751599 seconds (1.37 M allocations: 71.107 MiB, 5.81% gc time)
Running: simpsons_rule
  0.026581 seconds (44.95 k allocations: 1.890 MiB)
Running: simpsons38_rule
  0.089246 seconds (108.33 k allocations: 5.242 MiB)
Running: trapezoidal_rule
  0.306662 seconds (1.30 M allocations: 22.133 MiB, 5.14% gc time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.088110 seconds (32.69 k allocations: 1.754 MiB)
Running: chebyshev_quadrature with k=1
  0.418070 seconds (268.41 k allocations: 12.439 MiB)
Running: chebyshev_quadrature with k=2
  0.147643 seconds (101.48 k allocations: 2.934 MiB)
Running: chebyshev_quadrature with k=3
  0.146608 seconds (90.34 k allocations: 2.750 MiB)
Running: chebyshev_quadrature with k=4
  0.145146 seconds (72.97 k allocations: 2.399 MiB)
Running: jacobi_quadrature with α=β=1
  3.072410 seconds (489.58 k allocations: 159.057 MiB, 3.21% gc time)
Running: legendre_quadrature
  0.163576 seconds (49.10 k allocations: 2.498 MiB)
Running: lobatto_quadrature
  0.020162 seconds (15.07 k allocations: 845.356 KiB)
Running: radau_quadrature
  0.020698 seconds (15.06 k allocations: 845.060 KiB)
Running: rectangle_rule_left
 27.267690 seconds (471.41 M allocations: 7.025 GiB, 6.80% gc time)
Running: rectangle_rule_midpoint
  0.000043 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 28.067709 seconds (476.96 M allocations: 7.107 GiB, 6.86% gc time)
Running: rombergs_method
  0.405980 seconds (371.82 k allocations: 19.003 MiB)
Running: simpsons_rule
  0.000021 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.061509 seconds (19.88 k allocations: 1.078 MiB)
Running: trapezoidal_rule
  0.055226 seconds (18.27 k allocations: 1011.216 KiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.000155 seconds (1.51 k allocations: 24.328 KiB)
Running: chebyshev_quadrature with k=1
  0.105637 seconds (3.06 k allocations: 156.891 KiB)
Running: chebyshev_quadrature with k=2
  0.105476 seconds (3.34 k allocations: 166.016 KiB)
Running: chebyshev_quadrature with k=3
  0.113094 seconds (4.38 k allocations: 194.406 KiB)
Running: chebyshev_quadrature with k=4
  0.109646 seconds (4.38 k allocations: 195.547 KiB)
Running: jacobi_quadrature with α=β=1
  0.146058 seconds (25.54 k allocations: 1.414 MiB)
Running: legendre_quadrature
  0.044744 seconds (1.36 k allocations: 72.609 KiB)
Running: lobatto_quadrature
  0.000107 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000027 seconds (71 allocations: 3.078 KiB)
Running: rectangle_rule_left
  0.000270 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000209 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000281 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.061134 seconds (1.73 k allocations: 108.719 KiB)
Running: simpsons_rule
  0.000012 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000013 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000527 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.057346 seconds (77.44 k allocations: 4.008 MiB)
Running: chebyshev_quadrature with k=1
  0.286226 seconds (217.40 k allocations: 10.842 MiB, 41.54% gc time)
Running: chebyshev_quadrature with k=2
  0.201512 seconds (279.07 k allocations: 14.012 MiB)
Running: chebyshev_quadrature with k=3
  0.199923 seconds (270.36 k allocations: 13.057 MiB)
Running: chebyshev_quadrature with k=4
  0.158109 seconds (270.37 k allocations: 12.972 MiB, 7.38% gc time)
Running: jacobi_quadrature with α=β=1
  2.076292 seconds (445.19 k allocations: 160.690 MiB, 1.53% gc time)
Running: legendre_quadrature
  0.145028 seconds (172.34 k allocations: 8.732 MiB)
Running: lobatto_quadrature
  0.169736 seconds (181.33 k allocations: 9.277 MiB, 7.19% gc time)
Running: radau_quadrature
  0.167600 seconds (181.33 k allocations: 9.259 MiB)
Running: rectangle_rule_left
  0.934426 seconds (20.60 k allocations: 1.109 MiB)
Running: rectangle_rule_midpoint
  0.024628 seconds (26.07 k allocations: 1.452 MiB)
Running: rectangle_rule_right
  0.956018 seconds (18.92 k allocations: 1.021 MiB)
Running: rombergs_method
  0.123245 seconds (120.85 k allocations: 6.263 MiB)
Running: simpsons_rule
  0.028298 seconds (29.01 k allocations: 1.612 MiB)
Running: simpsons38_rule
  0.033528 seconds (44.36 k allocations: 2.482 MiB)
Running: trapezoidal_rule
  0.027520 seconds (44.86 k allocations: 1.654 MiB)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.042923 seconds (102.01 k allocations: 2.884 MiB)
Running: chebyshev_quadrature with k=1
  0.212201 seconds (223.47 k allocations: 10.882 MiB, 7.69% gc time)
Running: chebyshev_quadrature with k=2
  0.210882 seconds (286.19 k allocations: 13.973 MiB)
Running: chebyshev_quadrature with k=3
  0.213747 seconds (276.72 k allocations: 13.031 MiB)
Running: chebyshev_quadrature with k=4
  0.203723 seconds (276.72 k allocations: 13.033 MiB)
Running: hermite_quadrature with k=2
 15.315558 seconds (24.29 M allocations: 1.130 GiB, 8.18% gc time)
Running: jacobi_quadrature with α=β=1
  0.403520 seconds (454.47 k allocations: 46.889 MiB, 8.22% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.182005 seconds (269.06 k allocations: 13.150 MiB)
Running: legendre_quadrature
  0.126727 seconds (178.32 k allocations: 9.021 MiB)
Running: lobatto_quadrature
  0.245185 seconds (201.03 k allocations: 35.027 MiB, 10.44% gc time)
Running: radau_quadrature
  0.241401 seconds (197.60 k allocations: 27.654 MiB)
Running: rectangle_rule_left
  0.030446 seconds (23.95 k allocations: 1.258 MiB)
Running: rectangle_rule_midpoint
  0.029475 seconds (28.22 k allocations: 1.547 MiB)
Running: rectangle_rule_right
  0.024053 seconds (20.11 k allocations: 1.071 MiB)
Running: rombergs_method
  0.091673 seconds (124.01 k allocations: 6.335 MiB)
Running: simpsons_rule
  0.034266 seconds (41.85 k allocations: 1.965 MiB)
Running: simpsons38_rule
  0.030498 seconds (60.33 k allocations: 2.889 MiB)
Running: trapezoidal_rule
  0.047391 seconds (31.74 k allocations: 1.597 MiB, 46.00% gc time)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.041884 seconds (61.72 k allocations: 2.169 MiB)
Running: chebyshev_quadrature with k=1
  0.192595 seconds (219.32 k allocations: 10.691 MiB)
Running: chebyshev_quadrature with k=2
  0.251978 seconds (281.26 k allocations: 13.754 MiB)
Running: chebyshev_quadrature with k=3
  0.260119 seconds (272.35 k allocations: 12.855 MiB)
Running: chebyshev_quadrature with k=4
  0.305323 seconds (272.35 k allocations: 12.855 MiB, 12.61% gc time)
Running: hermite_quadrature with k=2
  0.164910 seconds (171.22 k allocations: 8.677 MiB)
Running: jacobi_quadrature with α=β=1
  8.629505 seconds (447.63 k allocations: 1.172 GiB, 14.74% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.171912 seconds (264.39 k allocations: 12.972 MiB)
Running: legendre_quadrature
  0.149147 seconds (174.27 k allocations: 8.826 MiB)
Running: lobatto_quadrature
  0.451034 seconds (192.16 k allocations: 20.748 MiB, 59.27% gc time)
Running: radau_quadrature
  0.136869 seconds (191.30 k allocations: 18.670 MiB)
Running: rectangle_rule_left
  0.021151 seconds (21.23 k allocations: 1.139 MiB)
Running: rectangle_rule_midpoint
  0.020650 seconds (26.86 k allocations: 1.489 MiB)
Running: rectangle_rule_right
  0.038085 seconds (18.74 k allocations: 1.012 MiB)
Running: rombergs_method
  0.101556 seconds (119.49 k allocations: 6.152 MiB)
Running: simpsons_rule
  0.025345 seconds (33.69 k allocations: 1.740 MiB)
Running: simpsons38_rule
  0.028641 seconds (50.47 k allocations: 2.633 MiB)
Running: trapezoidal_rule
  0.020417 seconds (26.08 k allocations: 1.423 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.036132 seconds (32.40 k allocations: 1.750 MiB)
Running: chebyshev_quadrature with k=1
  0.136017 seconds (217.90 k allocations: 10.919 MiB)
Running: chebyshev_quadrature with k=2
  0.171825 seconds (279.63 k allocations: 14.096 MiB)
Running: chebyshev_quadrature with k=3
  0.280233 seconds (270.92 k allocations: 13.114 MiB, 44.51% gc time)
Running: chebyshev_quadrature with k=4
  0.165079 seconds (270.92 k allocations: 12.905 MiB)
Running: jacobi_quadrature with α=β=1
  2.285359 seconds (445.78 k allocations: 191.732 MiB, 7.72% gc time)
Running: legendre_quadrature
  0.171366 seconds (172.85 k allocations: 8.750 MiB, 7.61% gc time)
Running: lobatto_quadrature
  0.171527 seconds (181.84 k allocations: 9.291 MiB)
Running: radau_quadrature
  0.189805 seconds (181.84 k allocations: 9.281 MiB)
Running: rectangle_rule_left
  0.299379 seconds (21.21 k allocations: 1.136 MiB)
Running: rectangle_rule_midpoint
  0.025965 seconds (26.44 k allocations: 1.470 MiB)
Running: rectangle_rule_right
  0.107674 seconds (19.30 k allocations: 1.040 MiB)
Running: rombergs_method
  0.142932 seconds (131.62 k allocations: 6.889 MiB)
Running: simpsons_rule
  0.032478 seconds (29.80 k allocations: 1.644 MiB)
Running: simpsons38_rule
  0.036326 seconds (45.16 k allocations: 2.514 MiB)
Running: trapezoidal_rule
  0.027001 seconds (45.88 k allocations: 1.689 MiB)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.035651 seconds (33.33 k allocations: 1.714 MiB)
Running: chebyshev_quadrature with k=1
  0.227601 seconds (218.34 k allocations: 10.851 MiB, 16.80% gc time)
Running: chebyshev_quadrature with k=2
  0.232814 seconds (280.15 k allocations: 14.001 MiB)
Running: chebyshev_quadrature with k=3
  0.172576 seconds (271.33 k allocations: 12.985 MiB)
Running: chebyshev_quadrature with k=4
  0.160519 seconds (271.33 k allocations: 13.064 MiB, 8.54% gc time)
Running: jacobi_quadrature with α=β=1
  2.097276 seconds (446.39 k allocations: 146.422 MiB, 5.04% gc time)
Running: legendre_quadrature
  0.164908 seconds (173.29 k allocations: 8.765 MiB)
Running: lobatto_quadrature
  0.164027 seconds (182.29 k allocations: 9.297 MiB)
Running: radau_quadrature
  0.197596 seconds (182.28 k allocations: 9.292 MiB, 13.79% gc time)
Running: rectangle_rule_left
  0.870497 seconds (21.50 k allocations: 1.149 MiB)
Running: rectangle_rule_midpoint
  0.027711 seconds (26.44 k allocations: 1.470 MiB)
Running: rectangle_rule_right
  0.620789 seconds (19.28 k allocations: 1.039 MiB)
Running: rombergs_method
  0.104552 seconds (122.15 k allocations: 6.297 MiB)
Running: simpsons_rule
  0.023996 seconds (30.61 k allocations: 1.672 MiB)
Running: simpsons38_rule
  0.036006 seconds (45.98 k allocations: 2.543 MiB)
Running: trapezoidal_rule
  0.027973 seconds (58.19 k allocations: 1.890 MiB)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.150087 seconds (155.15 k allocations: 8.245 MiB)
Running: chebyshev_quadrature with k=1
  0.125108 seconds (77.50 k allocations: 2.461 MiB)
Running: chebyshev_quadrature with k=2
  0.138148 seconds (112.77 k allocations: 3.128 MiB)
Running: chebyshev_quadrature with k=3
  0.137035 seconds (100.86 k allocations: 2.928 MiB)
Running: chebyshev_quadrature with k=4
  0.125890 seconds (80.40 k allocations: 2.523 MiB)
Running: jacobi_quadrature with α=β=1
  1.990521 seconds (468.09 k allocations: 165.432 MiB, 4.57% gc time)
Running: legendre_quadrature
  0.105777 seconds (25.54 k allocations: 1.308 MiB)
Running: lobatto_quadrature
  0.000140 seconds (149 allocations: 4.312 KiB)
Running: radau_quadrature
  0.000061 seconds (147 allocations: 4.359 KiB)
Running: rectangle_rule_left
 39.929699 seconds (590.00 M allocations: 8.792 GiB, 3.51% gc time)
Running: rectangle_rule_midpoint
  0.000063 seconds (39 allocations: 976 bytes)
Running: rectangle_rule_right
 38.581093 seconds (592.75 M allocations: 8.833 GiB, 3.20% gc time)
Running: rombergs_method
  0.131104 seconds (28.21 k allocations: 1.436 MiB)
Running: simpsons_rule
  0.000081 seconds (92 allocations: 1.781 KiB)
Running: simpsons38_rule
  0.026219 seconds (454 allocations: 23.812 KiB)
Running: trapezoidal_rule
  0.018834 seconds (174 allocations: 9.719 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 26.838769 seconds (629.34 M allocations: 9.387 GiB, 4.95% gc time)
Running: chebyshev_quadrature with k=1
  0.505232 seconds (426.05 k allocations: 21.108 MiB, 2.92% gc time)
Running: chebyshev_quadrature with k=2
 11.228539 seconds (491.02 k allocations: 4.039 GiB, 4.31% gc time)
Running: chebyshev_quadrature with k=3
  5.417181 seconds (283.70 k allocations: 1.641 GiB, 4.38% gc time)
Running: chebyshev_quadrature with k=4
  7.117091 seconds (283.70 k allocations: 2.260 GiB, 2.73% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 45.340593 seconds (482.00 k allocations: 13.252 GiB, 4.21% gc time)
Running: legendre_quadrature.
  5.626114 seconds (210.19 k allocations: 1.974 GiB, 2.32% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 47.470196 seconds (8.21 M allocations: 13.381 GiB, 6.75% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 56.910861 seconds (7.21 M allocations: 13.366 GiB, 4.00% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.731742 seconds (24.25 k allocations: 1.296 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.650909 seconds (32.61 k allocations: 1.782 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.687784 seconds (24.49 k allocations: 1.307 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  1.319209 seconds (466.50 k allocations: 151.598 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 39.298782 seconds (600.04 M allocations: 8.943 GiB, 8.63% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 39.400277 seconds (600.05 M allocations: 8.943 GiB, 8.26% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 39.341750 seconds (600.04 M allocations: 8.943 GiB, 8.87% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.061190 seconds (184.62 k allocations: 4.370 MiB)
Running: chebyshev_quadrature with k=1
  0.205165 seconds (231.69 k allocations: 11.186 MiB)
Running: chebyshev_quadrature with k=2
  0.206678 seconds (266.13 k allocations: 12.736 MiB)
Running: chebyshev_quadrature with k=3
  0.196100 seconds (253.76 k allocations: 11.715 MiB)
Running: chebyshev_quadrature with k=4
  0.194668 seconds (253.76 k allocations: 11.752 MiB)
Running: jacobi_quadrature with α=β=1
  0.351180 seconds (383.23 k allocations: 32.797 MiB)
Running: laguerre_quadrature with k=2
  0.182438 seconds (168.36 k allocations: 8.619 MiB)
Running: legendre_quadrature
  0.118024 seconds (128.84 k allocations: 6.310 MiB)
Running: lobatto_quadrature
  0.034255 seconds (10.14 k allocations: 15.085 MiB)
Running: radau_quadrature
  0.030274 seconds (8.91 k allocations: 13.159 MiB)
Running: rectangle_rule_left
  0.054041 seconds (20.89 k allocations: 1.099 MiB)
Running: rectangle_rule_midpoint
  0.047156 seconds (27.24 k allocations: 1.490 MiB)
Running: rectangle_rule_right
  0.049177 seconds (19.11 k allocations: 1.015 MiB)
Running: rombergs_method
  0.260194 seconds (184.38 k allocations: 9.654 MiB)
Running: simpsons_rule
  0.001888 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.051930 seconds (82.91 k allocations: 3.274 MiB)
Running: trapezoidal_rule
  0.191279 seconds (2.40 M allocations: 37.631 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.002092 seconds (30.72 k allocations: 480.688 KiB)
Running: chebyshev_quadrature with k=1
  0.110060 seconds (3.26 k allocations: 1.739 MiB)
Running: chebyshev_quadrature with k=2
  0.114158 seconds (3.54 k allocations: 2.404 MiB)
Running: chebyshev_quadrature with k=3
  0.121931 seconds (4.58 k allocations: 2.120 MiB)
Running: chebyshev_quadrature with k=4
  0.138608 seconds (4.58 k allocations: 1.561 MiB)
Running: jacobi_quadrature with α=β=1
  7.090454 seconds (380.30 k allocations: 903.492 MiB, 5.01% gc time)
Running: legendre_quadrature
  0.074337 seconds (1.50 k allocations: 80.328 KiB)
Running: lobatto_quadrature
  0.000251 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000192 seconds (221 allocations: 8.812 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  3.354535 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000642 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  3.508470 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.098798 seconds (1.68 k allocations: 105.531 KiB)
Running: simpsons_rule
  0.000052 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000053 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000819 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.001047 seconds (6.35 k allocations: 99.891 KiB)
Running: chebyshev_quadrature with k=1
  0.118436 seconds (3.14 k allocations: 619.891 KiB)
Running: chebyshev_quadrature with k=2
  0.109004 seconds (3.42 k allocations: 822.078 KiB)
Running: chebyshev_quadrature with k=3
  0.124653 seconds (4.45 k allocations: 746.562 KiB)
Running: chebyshev_quadrature with k=4
  0.134057 seconds (4.45 k allocations: 577.062 KiB)
Running: jacobi_quadrature with α=β=1
  3.344966 seconds (368.89 k allocations: 250.930 MiB, 8.39% gc time)
Running: legendre_quadrature
  0.070813 seconds (1.40 k allocations: 72.547 KiB)
Running: lobatto_quadrature
  0.000148 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000056 seconds (81 allocations: 3.453 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 10.697244 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001301 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 10.821959 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.155997 seconds (1.91 k allocations: 117.281 KiB)
Running: simpsons_rule
  0.000085 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000078 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.002040 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
