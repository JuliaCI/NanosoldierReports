Julia Version 1.5.2-pre.25
Commit be8475f41a (2020-09-09 06:41 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed MUMPS_seq_jll ──────────────── v5.2.1+3
  Installed METIS_jll ──────────────────── v5.1.0+4
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed ZipFile ────────────────────── v0.9.2
  Installed OPFSampler ─────────────────── v0.1.0
  Installed BenchmarkTools ─────────────── v0.5.0
  Installed HTTP ───────────────────────── v0.8.17
  Installed PowerModels ────────────────── v0.13.2
  Installed Zlib_jll ───────────────────── v1.2.11+16
  Installed MutableArithmetics ─────────── v0.2.10
  Installed TranscodingStreams ─────────── v0.9.5
  Installed MbedTLS ────────────────────── v1.0.2
  Installed CodecBzip2 ─────────────────── v0.7.2
  Installed JSONSchema ─────────────────── v0.3.2
  Installed Parsers ────────────────────── v1.0.10
  Installed TimeZones ──────────────────── v1.3.2
  Installed Mocking ────────────────────── v0.7.1
  Installed DiffResults ────────────────── v1.0.2
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed NaNMath ────────────────────── v0.3.4
  Installed ASL_jll ────────────────────── v0.1.1+3
  Installed CodecZlib ──────────────────── v0.7.0
  Installed SpecialFunctions ───────────── v0.10.3
  Installed Libiconv_jll ───────────────── v1.16.0+6
  Installed EzXML ──────────────────────── v1.1.0
  Installed OrderedCollections ─────────── v1.3.0
  Installed InfrastructureModels ───────── v0.3.3
  Installed DiffRules ──────────────────── v1.0.1
  Installed MacroTools ─────────────────── v0.5.5
  Installed OpenBLAS32_jll ─────────────── v0.3.9+4
  Installed MathProgBase ───────────────── v0.7.8
  Installed Ipopt ──────────────────────── v0.6.3
  Installed JSON ───────────────────────── v0.21.1
  Installed Memento ────────────────────── v0.12.1
  Installed ForwardDiff ────────────────── v0.10.12
  Installed JuMP ───────────────────────── v0.20.1
  Installed MathOptInterface ───────────── v0.9.14
  Installed Syslogs ────────────────────── v0.3.0
  Installed RecipesBase ────────────────── v1.0.2
  Installed Ipopt_jll ──────────────────── v3.13.2+0
  Installed BinaryProvider ─────────────── v0.5.10
  Installed ExprTools ──────────────────── v0.1.2
  Installed CommonSubexpressions ───────── v0.3.0
  Installed DataStructures ─────────────── v0.17.20
  Installed StaticArrays ───────────────── v0.12.4
  Installed Calculus ───────────────────── v0.5.1
  Installed XML2_jll ───────────────────── v2.9.10+2
  Installed Bzip2_jll ──────────────────── v1.0.6+4
  Installed IniFile ────────────────────── v0.5.0
  Installed MbedTLS_jll ────────────────── v2.16.8+0
Updating `~/.julia/environments/v1.5/Project.toml`
  [ce3535a8] + OPFSampler v0.1.0
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [ae81ac8f] + ASL_jll v0.1.1+3
  [6e4b80f9] + BenchmarkTools v0.5.0
  [b99e7846] + BinaryProvider v0.5.10
  [6e34b625] + Bzip2_jll v1.0.6+4
  [49dc2e85] + Calculus v0.5.1
  [523fee87] + CodecBzip2 v0.7.2
  [944b1d66] + CodecZlib v0.7.0
  [bbf7d656] + CommonSubexpressions v0.3.0
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [864edb3b] + DataStructures v0.17.20
  [163ba53b] + DiffResults v1.0.2
  [b552c78f] + DiffRules v1.0.1
  [e2ba6199] + ExprTools v0.1.2
  [8f5d6c58] + EzXML v1.1.0
  [f6369f11] + ForwardDiff v0.10.12
  [cd3eb016] + HTTP v0.8.17
  [2030c09a] + InfrastructureModels v0.3.3
  [83e8ac13] + IniFile v0.5.0
  [b6b21f68] + Ipopt v0.6.3
  [9cc047cb] + Ipopt_jll v3.13.2+0
  [682c06a0] + JSON v0.21.1
  [7d188eb4] + JSONSchema v0.3.2
  [4076af6c] + JuMP v0.20.1
  [94ce4f54] + Libiconv_jll v1.16.0+6
  [d00139f3] + METIS_jll v5.1.0+4
  [d7ed1dd3] + MUMPS_seq_jll v5.2.1+3
  [1914dd2f] + MacroTools v0.5.5
  [b8f27783] + MathOptInterface v0.9.14
  [fdba3010] + MathProgBase v0.7.8
  [739be429] + MbedTLS v1.0.2
  [c8ffd9c3] + MbedTLS_jll v2.16.8+0
  [f28f55f0] + Memento v0.12.1
  [78c3b35d] + Mocking v0.7.1
  [d8a4904e] + MutableArithmetics v0.2.10
  [77ba4419] + NaNMath v0.3.4
  [ce3535a8] + OPFSampler v0.1.0
  [656ef2d0] + OpenBLAS32_jll v0.3.9+4
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [bac558e1] + OrderedCollections v1.3.0
  [69de0a69] + Parsers v1.0.10
  [c36e90e8] + PowerModels v0.13.2
  [3cdcf5f2] + RecipesBase v1.0.2
  [276daf66] + SpecialFunctions v0.10.3
  [90137ffa] + StaticArrays v0.12.4
  [cea106d9] + Syslogs v0.3.0
  [f269a46b] + TimeZones v1.3.2
  [3bb67fe8] + TranscodingStreams v0.9.5
  [02c8fc9c] + XML2_jll v2.9.10+2
  [a5390f91] + ZipFile v0.9.2
  [83775a58] + Zlib_jll v1.2.11+16
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building TimeZones → `~/.julia/packages/TimeZones/v0mfN/deps/build.log`
   Building Ipopt ────→ `~/.julia/packages/Ipopt/bYzBL/deps/build.log`
    Testing OPFSampler
Status `/tmp/jl_si2ufH/Project.toml`
  [b6b21f68] Ipopt v0.6.3
  [4076af6c] JuMP v0.20.1
  [ce3535a8] OPFSampler v0.1.0
  [bac558e1] OrderedCollections v1.3.0
  [c36e90e8] PowerModels v0.13.2
  [9a3f8284] Random
  [8dfed614] Test
Status `/tmp/jl_si2ufH/Manifest.toml`
  [ae81ac8f] ASL_jll v0.1.1+3
  [6e4b80f9] BenchmarkTools v0.5.0
  [b99e7846] BinaryProvider v0.5.10
  [6e34b625] Bzip2_jll v1.0.6+4
  [49dc2e85] Calculus v0.5.1
  [523fee87] CodecBzip2 v0.7.2
  [944b1d66] CodecZlib v0.7.0
  [bbf7d656] CommonSubexpressions v0.3.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [864edb3b] DataStructures v0.17.20
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [e2ba6199] ExprTools v0.1.2
  [8f5d6c58] EzXML v1.1.0
  [f6369f11] ForwardDiff v0.10.12
  [cd3eb016] HTTP v0.8.17
  [2030c09a] InfrastructureModels v0.3.3
  [83e8ac13] IniFile v0.5.0
  [b6b21f68] Ipopt v0.6.3
  [9cc047cb] Ipopt_jll v3.13.2+0
  [682c06a0] JSON v0.21.1
  [7d188eb4] JSONSchema v0.3.2
  [4076af6c] JuMP v0.20.1
  [94ce4f54] Libiconv_jll v1.16.0+6
  [d00139f3] METIS_jll v5.1.0+4
  [d7ed1dd3] MUMPS_seq_jll v5.2.1+3
  [1914dd2f] MacroTools v0.5.5
  [b8f27783] MathOptInterface v0.9.14
  [fdba3010] MathProgBase v0.7.8
  [739be429] MbedTLS v1.0.2
  [c8ffd9c3] MbedTLS_jll v2.16.8+0
  [f28f55f0] Memento v0.12.1
  [78c3b35d] Mocking v0.7.1
  [d8a4904e] MutableArithmetics v0.2.10
  [77ba4419] NaNMath v0.3.4
  [ce3535a8] OPFSampler v0.1.0
  [656ef2d0] OpenBLAS32_jll v0.3.9+4
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [bac558e1] OrderedCollections v1.3.0
  [69de0a69] Parsers v1.0.10
  [c36e90e8] PowerModels v0.13.2
  [3cdcf5f2] RecipesBase v1.0.2
  [276daf66] SpecialFunctions v0.10.3
  [90137ffa] StaticArrays v0.12.4
  [cea106d9] Syslogs v0.3.0
  [f269a46b] TimeZones v1.3.2
  [3bb67fe8] TranscodingStreams v0.9.5
  [02c8fc9c] XML2_jll v2.9.10+2
  [a5390f91] ZipFile v0.9.2
  [83775a58] Zlib_jll v1.2.11+16
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
[info | PowerModels]: Suppressing information and warning messages for the rest of this session.  Use the Memento package for more fine-grained control of logging.
┌ Warning: `sort(d::Dict; args...)` is deprecated, use `sort!(OrderedDict(d); args...)` instead.
│   caller = top-level scope at SetParam.jl:4
└ @ Core ~/.julia/packages/OPFSampler/6ZwsJ/test/SetParam.jl:4
┌ Warning: `sort(d::Dict; args...)` is deprecated, use `sort!(OrderedDict(d); args...)` instead.
│   caller = set_load_pd!(::Dict{String,Any}, ::Array{Float64,1}) at SetParam.jl:5
└ @ OPFSampler ~/.julia/packages/OPFSampler/6ZwsJ/src/SetParam.jl:5
┌ Warning: `sort(d::Dict; args...)` is deprecated, use `sort!(OrderedDict(d); args...)` instead.
│   caller = top-level scope at SetParam.jl:6
└ @ Core ~/.julia/packages/OPFSampler/6ZwsJ/test/SetParam.jl:6
┌ Warning: `sort(d::Dict; args...)` is deprecated, use `sort!(OrderedDict(d); args...)` instead.
│   caller = top-level scope at SetParam.jl:8
└ @ Core ~/.julia/packages/OPFSampler/6ZwsJ/test/SetParam.jl:8
┌ Warning: `sort(d::Dict; args...)` is deprecated, use `sort!(OrderedDict(d); args...)` instead.
│   caller = set_load_qd!(::Dict{String,Any}, ::Array{Float64,1}) at SetParam.jl:14
└ @ OPFSampler ~/.julia/packages/OPFSampler/6ZwsJ/src/SetParam.jl:14
┌ Warning: `sort(d::Dict; args...)` is deprecated, use `sort!(OrderedDict(d); args...)` instead.
│   caller = top-level scope at SetParam.jl:10
└ @ Core ~/.julia/packages/OPFSampler/6ZwsJ/test/SetParam.jl:10
┌ Warning: `sort(d::Dict; args...)` is deprecated, use `sort!(OrderedDict(d); args...)` instead.
│   caller = top-level scope at SetParam.jl:12
└ @ Core ~/.julia/packages/OPFSampler/6ZwsJ/test/SetParam.jl:12
┌ Warning: `sort(d::Dict; args...)` is deprecated, use `sort!(OrderedDict(d); args...)` instead.
│   caller = set_gen_pmax!(::Dict{String,Any}, ::Array{Float64,1}) at SetParam.jl:23
└ @ OPFSampler ~/.julia/packages/OPFSampler/6ZwsJ/src/SetParam.jl:23
┌ Warning: `sort(d::Dict; args...)` is deprecated, use `sort!(OrderedDict(d); args...)` instead.
│   caller = top-level scope at SetParam.jl:14
└ @ Core ~/.julia/packages/OPFSampler/6ZwsJ/test/SetParam.jl:14
┌ Warning: `sort(d::Dict; args...)` is deprecated, use `sort!(OrderedDict(d); args...)` instead.
│   caller = top-level scope at SetParam.jl:16
└ @ Core ~/.julia/packages/OPFSampler/6ZwsJ/test/SetParam.jl:16
┌ Warning: `sort(d::Dict; args...)` is deprecated, use `sort!(OrderedDict(d); args...)` instead.
│   caller = set_gen_qmax!(::Dict{String,Any}, ::Array{Float64,1}) at SetParam.jl:32
└ @ OPFSampler ~/.julia/packages/OPFSampler/6ZwsJ/src/SetParam.jl:32
┌ Warning: `sort(d::Dict; args...)` is deprecated, use `sort!(OrderedDict(d); args...)` instead.
│   caller = top-level scope at SetParam.jl:18
└ @ Core ~/.julia/packages/OPFSampler/6ZwsJ/test/SetParam.jl:18
┌ Warning: `sort(d::Dict; args...)` is deprecated, use `sort!(OrderedDict(d); args...)` instead.
│   caller = top-level scope at SetParam.jl:20
└ @ Core ~/.julia/packages/OPFSampler/6ZwsJ/test/SetParam.jl:20
┌ Warning: `sort(d::Dict; args...)` is deprecated, use `sort!(OrderedDict(d); args...)` instead.
│   caller = top-level scope at SetParam.jl:21
└ @ Core ~/.julia/packages/OPFSampler/6ZwsJ/test/SetParam.jl:21
┌ Warning: `sort(d::Dict; args...)` is deprecated, use `sort!(OrderedDict(d); args...)` instead.
│   caller = set_dc_branch_param!(::Dict{String,Any}; br_x::Array{Float64,1}, rate_a::Array{Float64,1}) at SetParam.jl:42
└ @ OPFSampler ~/.julia/packages/OPFSampler/6ZwsJ/src/SetParam.jl:42
┌ Warning: `sort(d::Dict; args...)` is deprecated, use `sort!(OrderedDict(d); args...)` instead.
│   caller = top-level scope at SetParam.jl:24
└ @ Core ~/.julia/packages/OPFSampler/6ZwsJ/test/SetParam.jl:24
┌ Warning: `sort(d::Dict; args...)` is deprecated, use `sort!(OrderedDict(d); args...)` instead.
│   caller = top-level scope at SetParam.jl:25
└ @ Core ~/.julia/packages/OPFSampler/6ZwsJ/test/SetParam.jl:25
┌ Warning: `sort(d::Dict; args...)` is deprecated, use `sort!(OrderedDict(d); args...)` instead.
│   caller = top-level scope at SetParam.jl:28
└ @ Core ~/.julia/packages/OPFSampler/6ZwsJ/test/SetParam.jl:28
┌ Warning: `sort(d::Dict; args...)` is deprecated, use `sort!(OrderedDict(d); args...)` instead.
│   caller = top-level scope at SetParam.jl:29
└ @ Core ~/.julia/packages/OPFSampler/6ZwsJ/test/SetParam.jl:29
┌ Warning: `sort(d::Dict; args...)` is deprecated, use `sort!(OrderedDict(d); args...)` instead.
│   caller = top-level scope at SetParam.jl:30
└ @ Core ~/.julia/packages/OPFSampler/6ZwsJ/test/SetParam.jl:30
┌ Warning: `sort(d::Dict; args...)` is deprecated, use `sort!(OrderedDict(d); args...)` instead.
│   caller = set_ac_branch_param!(::Dict{String,Any}; br_x::Array{Float64,1}, br_r::Array{Float64,1}, rate_a::Array{Float64,1}) at SetParam.jl:54
└ @ OPFSampler ~/.julia/packages/OPFSampler/6ZwsJ/src/SetParam.jl:54
┌ Warning: `sort(d::Dict; args...)` is deprecated, use `sort!(OrderedDict(d); args...)` instead.
│   caller = top-level scope at SetParam.jl:33
└ @ Core ~/.julia/packages/OPFSampler/6ZwsJ/test/SetParam.jl:33
┌ Warning: `sort(d::Dict; args...)` is deprecated, use `sort!(OrderedDict(d); args...)` instead.
│   caller = top-level scope at SetParam.jl:34
└ @ Core ~/.julia/packages/OPFSampler/6ZwsJ/test/SetParam.jl:34
┌ Warning: `sort(d::Dict; args...)` is deprecated, use `sort!(OrderedDict(d); args...)` instead.
│   caller = top-level scope at SetParam.jl:35
└ @ Core ~/.julia/packages/OPFSampler/6ZwsJ/test/SetParam.jl:35
┌ Warning: `sort(d::Dict; args...)` is deprecated, use `sort!(OrderedDict(d); args...)` instead.
│   caller = DC_OPF_sampling(::Int64, ::Dict{String,Any}; rng::MersenneTwister) at Sampler.jl:64
└ @ OPFSampler ~/.julia/packages/OPFSampler/6ZwsJ/src/Sampler.jl:64
┌ Warning: `sort(d::Dict; args...)` is deprecated, use `sort!(OrderedDict(d); args...)` instead.
│   caller = DC_OPF_sampling(::Int64, ::Dict{String,Any}; rng::MersenneTwister) at Sampler.jl:66
└ @ OPFSampler ~/.julia/packages/OPFSampler/6ZwsJ/src/Sampler.jl:66
┌ Warning: `sort(d::Dict; args...)` is deprecated, use `sort!(OrderedDict(d); args...)` instead.
│   caller = DC_OPF_sampling(::Int64, ::Dict{String,Any}; rng::MersenneTwister) at Sampler.jl:68
└ @ OPFSampler ~/.julia/packages/OPFSampler/6ZwsJ/src/Sampler.jl:68
┌ Warning: `sort(d::Dict; args...)` is deprecated, use `sort!(OrderedDict(d); args...)` instead.
│   caller = DC_OPF_sampling(::Int64, ::Dict{String,Any}; rng::MersenneTwister) at Sampler.jl:70
└ @ OPFSampler ~/.julia/packages/OPFSampler/6ZwsJ/src/Sampler.jl:70
┌ Warning: `sort(d::Dict; args...)` is deprecated, use `sort!(OrderedDict(d); args...)` instead.
│   caller = top-level scope at Sampler.jl:23
└ @ Core ~/.julia/packages/OPFSampler/6ZwsJ/test/Sampler.jl:23
┌ Warning: `sort(d::Dict; args...)` is deprecated, use `sort!(OrderedDict(d); args...)` instead.
│   caller = top-level scope at Sampler.jl:25
└ @ Core ~/.julia/packages/OPFSampler/6ZwsJ/test/Sampler.jl:25
┌ Warning: `sort(d::Dict; args...)` is deprecated, use `sort!(OrderedDict(d); args...)` instead.
│   caller = top-level scope at Sampler.jl:27
└ @ Core ~/.julia/packages/OPFSampler/6ZwsJ/test/Sampler.jl:27
┌ Warning: `sort(d::Dict; args...)` is deprecated, use `sort!(OrderedDict(d); args...)` instead.
│   caller = top-level scope at Sampler.jl:29
└ @ Core ~/.julia/packages/OPFSampler/6ZwsJ/test/Sampler.jl:29
┌ Warning: `sort(d::Dict; args...)` is deprecated, use `sort!(OrderedDict(d); args...)` instead.
│   caller = AC_OPF_sampling(::Int64, ::Dict{String,Any}; rng::MersenneTwister) at Sampler.jl:242
└ @ OPFSampler ~/.julia/packages/OPFSampler/6ZwsJ/src/Sampler.jl:242
┌ Warning: `sort(d::Dict; args...)` is deprecated, use `sort!(OrderedDict(d); args...)` instead.
│   caller = AC_OPF_sampling(::Int64, ::Dict{String,Any}; rng::MersenneTwister) at Sampler.jl:244
└ @ OPFSampler ~/.julia/packages/OPFSampler/6ZwsJ/src/Sampler.jl:244
┌ Warning: `sort(d::Dict; args...)` is deprecated, use `sort!(OrderedDict(d); args...)` instead.
│   caller = AC_OPF_sampling(::Int64, ::Dict{String,Any}; rng::MersenneTwister) at Sampler.jl:246
└ @ OPFSampler ~/.julia/packages/OPFSampler/6ZwsJ/src/Sampler.jl:246
┌ Warning: `sort(d::Dict; args...)` is deprecated, use `sort!(OrderedDict(d); args...)` instead.
│   caller = AC_OPF_sampling(::Int64, ::Dict{String,Any}; rng::MersenneTwister) at Sampler.jl:248
└ @ OPFSampler ~/.julia/packages/OPFSampler/6ZwsJ/src/Sampler.jl:248
┌ Warning: `sort(d::Dict; args...)` is deprecated, use `sort!(OrderedDict(d); args...)` instead.
│   caller = AC_OPF_sampling(::Int64, ::Dict{String,Any}; rng::MersenneTwister) at Sampler.jl:250
└ @ OPFSampler ~/.julia/packages/OPFSampler/6ZwsJ/src/Sampler.jl:250
┌ Warning: `sort(d::Dict; args...)` is deprecated, use `sort!(OrderedDict(d); args...)` instead.
│   caller = AC_OPF_sampling(::Int64, ::Dict{String,Any}; rng::MersenneTwister) at Sampler.jl:252
└ @ OPFSampler ~/.julia/packages/OPFSampler/6ZwsJ/src/Sampler.jl:252
┌ Warning: `sort(d::Dict; args...)` is deprecated, use `sort!(OrderedDict(d); args...)` instead.
│   caller = AC_OPF_sampling(::Int64, ::Dict{String,Any}; rng::MersenneTwister) at Sampler.jl:254
└ @ OPFSampler ~/.julia/packages/OPFSampler/6ZwsJ/src/Sampler.jl:254
┌ Warning: `sort(d::Dict; args...)` is deprecated, use `sort!(OrderedDict(d); args...)` instead.
│   caller = top-level scope at Sampler.jl:58
└ @ Core ~/.julia/packages/OPFSampler/6ZwsJ/test/Sampler.jl:58
┌ Warning: `sort(d::Dict; args...)` is deprecated, use `sort!(OrderedDict(d); args...)` instead.
│   caller = top-level scope at Sampler.jl:60
└ @ Core ~/.julia/packages/OPFSampler/6ZwsJ/test/Sampler.jl:60
┌ Warning: `sort(d::Dict; args...)` is deprecated, use `sort!(OrderedDict(d); args...)` instead.
│   caller = top-level scope at Sampler.jl:62
└ @ Core ~/.julia/packages/OPFSampler/6ZwsJ/test/Sampler.jl:62
┌ Warning: `sort(d::Dict; args...)` is deprecated, use `sort!(OrderedDict(d); args...)` instead.
│   caller = top-level scope at Sampler.jl:64
└ @ Core ~/.julia/packages/OPFSampler/6ZwsJ/test/Sampler.jl:64
┌ Warning: `sort(d::Dict; args...)` is deprecated, use `sort!(OrderedDict(d); args...)` instead.
│   caller = top-level scope at Sampler.jl:66
└ @ Core ~/.julia/packages/OPFSampler/6ZwsJ/test/Sampler.jl:66
┌ Warning: `sort(d::Dict; args...)` is deprecated, use `sort!(OrderedDict(d); args...)` instead.
│   caller = top-level scope at Sampler.jl:68
└ @ Core ~/.julia/packages/OPFSampler/6ZwsJ/test/Sampler.jl:68
┌ Warning: `sort(d::Dict; args...)` is deprecated, use `sort!(OrderedDict(d); args...)` instead.
│   caller = top-level scope at Sampler.jl:70
└ @ Core ~/.julia/packages/OPFSampler/6ZwsJ/test/Sampler.jl:70
Iteration: 1

******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit http://projects.coin-or.org/Ipopt
******************************************************************************

Sample 1 out of 4 .
Sample 2 out of 4 .
Sample 3 out of 4 .
Sample 4 out of 4 .
Iteration: 1
Sample 1 out of 4 .
Sample 2 out of 4 .
Sample 3 out of 4 .
Sample 4 out of 4 .
Test Summary: | Pass  Total
OPFSampler.jl |   50     50
    Testing OPFSampler tests passed 
