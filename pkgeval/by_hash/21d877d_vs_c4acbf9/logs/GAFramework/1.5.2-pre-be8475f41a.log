Julia Version 1.5.2-pre.25
Commit be8475f41a (2020-09-09 06:41 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.4.3
Updating `~/.julia/environments/v1.5/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [5789e2e9] + FileIO v1.4.3
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_veQmdG/Project.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_veQmdG/Manifest.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21722663397797212
curgen: 20 fitness: 0.21723355728072552
curgen: 30 fitness: 0.21723355728072552
curgen: 40 fitness: 0.21723355728072552
curgen: 50 fitness: 0.21723359813210746
CoordinateCreature{Array{Float64,1}}([0.22257422393691437], -0.21723359813210746) 0.22257422393691437 -0.21723359813210746
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2578130496505224
curgen: 100 fitness: 3.257820796081566
curgen: 150 fitness: 3.2581830350268994
curgen: 200 fitness: 3.2582887265642224
curgen: 250 fitness: 3.2583006189792223
curgen: 300 fitness: 3.258320367649344
curgen: 350 fitness: 3.258320367649344
curgen: 400 fitness: 3.258328169001185
curgen: 450 fitness: 3.2583709341228397
curgen: 500 fitness: 3.2584216620765925
CoordinateCreature{Array{Float64,1}}([0.222639941758966, -0.2226921348357285, 0.22221265444099958, -0.22254148760287254, 0.22259146417839326, -0.22239104007637814, -0.22308796248329812, -0.22286130723161998, -0.22161133661363222, -0.2223211732296097, -0.22258949548295973, -0.22240624014184351, 0.22265065261174066, 0.22247767370939478, -0.2219654732585705], -3.2584216620765925) [0.222639941758966, -0.2226921348357285, 0.22221265444099958, -0.22254148760287254, 0.22259146417839326, -0.22239104007637814, -0.22308796248329812, -0.22286130723161998, -0.22161133661363222, -0.2223211732296097, -0.22258949548295973, -0.22240624014184351, 0.22265065261174066, 0.22247767370939478, -0.2219654732585705] -3.2584216620765925
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.007837849403756536
curgen: 100 fitness: -0.0075002682263232145
curgen: 150 fitness: -0.0024516371661036374
curgen: 200 fitness: -0.002007738946019799
curgen: 250 fitness: -0.002007738946019799
curgen: 300 fitness: -0.002007738946019799
curgen: 350 fitness: -0.0019584593790114013
curgen: 400 fitness: -0.0016177870446654197
curgen: 450 fitness: -0.0015310676153603708
curgen: 500 fitness: -0.0012479803987162086
CoordinateCreature{Array{Float64,1}}([0.0011712800249155915, 0.00019492653837604318, -3.708349954880622e-5, 0.00015489124484860417, -0.0004582654201077533, 0.00034647301949238874, -0.0002695138511156583, 0.00026865791338353076, 0.0015454491616039285, -0.0010509577159916461, 0.0002541015881242477, -0.0006780360972044654, 0.00044769643490204193, 2.1666419205584138e-5, 0.00040280518710980075], 0.0012479803987162086) [0.0011712800249155915, 0.00019492653837604318, -3.708349954880622e-5, 0.00015489124484860417, -0.0004582654201077533, 0.00034647301949238874, -0.0002695138511156583, 0.00026865791338353076, 0.0015454491616039285, -0.0010509577159916461, 0.0002541015881242477, -0.0006780360972044654, 0.00044769643490204193, 2.1666419205584138e-5, 0.00040280518710980075] 0.0012479803987162086
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
