Julia Version 1.5.2-pre.0
Commit c4acbf93fb (2020-08-26 10:58 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.4.3
Updating `~/.julia/environments/v1.5/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [5789e2e9] + FileIO v1.4.3
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_FFqYmV/Project.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_FFqYmV/Manifest.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21721292901885886
curgen: 20 fitness: 0.21721292901885886
curgen: 30 fitness: 0.21723342701157747
curgen: 40 fitness: 0.21723360368136338
curgen: 50 fitness: 0.21723360368136338
CoordinateCreature{Array{Float64,1}}([-0.2225716968828236], -0.21723360368136338) -0.2225716968828236 -0.21723360368136338
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.258016123967343
curgen: 100 fitness: 3.25817580443455
curgen: 150 fitness: 3.2582950160102353
curgen: 200 fitness: 3.2583780759457324
curgen: 250 fitness: 3.2583961257349965
curgen: 300 fitness: 3.2584105810508395
curgen: 350 fitness: 3.2584116515575365
curgen: 400 fitness: 3.25843990655346
curgen: 450 fitness: 3.2584480744878657
curgen: 500 fitness: 3.2584520294295065
CoordinateCreature{Array{Float64,1}}([0.2224485407841088, 0.2225635600324681, -0.22262413174944504, 0.22218413955761077, -0.22258027067656702, 0.2221026759876156, 0.2226934987197253, 0.22260133894987083, -0.2227058655701797, 0.22279111629817258, -0.22190492143261872, 0.22279670237972968, -0.22293605806342973, -0.22279140197620967, -0.22234690048936318], -3.2584520294295065) [0.2224485407841088, 0.2225635600324681, -0.22262413174944504, 0.22218413955761077, -0.22258027067656702, 0.2221026759876156, 0.2226934987197253, 0.22260133894987083, -0.2227058655701797, 0.22279111629817258, -0.22190492143261872, 0.22279670237972968, -0.22293605806342973, -0.22279140197620967, -0.22234690048936318] -3.2584520294295065
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0008801379194096626
curgen: 100 fitness: -0.0008801379194096626
curgen: 150 fitness: -0.0008322450562445738
curgen: 200 fitness: -0.0008097170614576044
curgen: 250 fitness: -0.0008097170614576044
curgen: 300 fitness: -0.0008097170614576044
curgen: 350 fitness: -0.0008097170614576044
curgen: 400 fitness: -0.0008097170614576044
curgen: 450 fitness: -0.0008097170614576044
curgen: 500 fitness: -0.0008097170614576044
CoordinateCreature{Array{Float64,1}}([0.0002605503504959358, 0.00019466601908485815, -7.288301354066787e-5, -0.0006305469932524387, -0.0002701842726208544, 0.0007561074864569708, 0.00016132063703248073, -0.0013789100247609347, 8.562307988293156e-5, -0.0002555498396212609, 0.0006149149096652371, -2.9539805643363304e-5, 9.549289698407293e-5, 0.0007342083645736908, 2.8354631680388084e-5], 0.0008097170614576044) [0.0002605503504959358, 0.00019466601908485815, -7.288301354066787e-5, -0.0006305469932524387, -0.0002701842726208544, 0.0007561074864569708, 0.00016132063703248073, -0.0013789100247609347, 8.562307988293156e-5, -0.0002555498396212609, 0.0006149149096652371, -2.9539805643363304e-5, 9.549289698407293e-5, 0.0007342083645736908, 2.8354631680388084e-5] 0.0008097170614576044
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
