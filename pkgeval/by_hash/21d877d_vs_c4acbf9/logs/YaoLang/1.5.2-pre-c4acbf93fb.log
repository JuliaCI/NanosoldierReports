Julia Version 1.5.2-pre.0
Commit c4acbf93fb (2020-08-26 10:58 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed YaoAPI ───────────── v0.1.0
  Installed RBNF ─────────────── v0.2.0
  Installed Compat ───────────── v3.15.0
  Installed OrderedCollections ─ v1.3.0
  Installed MacroTools ───────── v0.5.5
  Installed LuxurySparse ─────── v0.6.4
  Installed YaoLang ──────────── v0.3.0
  Installed MLStyle ──────────── v0.4.6
  Installed PrettyPrint ──────── v0.2.0
  Installed IRTools ──────────── v0.4.1
  Installed ArnoldiMethod ────── v0.0.4
  Installed ExprTools ────────── v0.1.2
  Installed StaticArrays ─────── v0.12.4
  Installed TimerOutputs ─────── v0.5.6
  Installed SimpleTraits ─────── v0.9.3
  Installed DataStructures ───── v0.18.4
  Installed LightGraphs ──────── v1.3.0
  Installed Inflate ──────────── v0.1.2
  Installed ZXCalculus ───────── v0.2.2
Updating `~/.julia/environments/v1.5/Project.toml`
  [77e32715] + YaoLang v0.3.0
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [ec485272] + ArnoldiMethod v0.0.4
  [34da2185] + Compat v3.15.0
  [864edb3b] + DataStructures v0.18.4
  [e2ba6199] + ExprTools v0.1.2
  [7869d1d1] + IRTools v0.4.1
  [d25df0c9] + Inflate v0.1.2
  [093fc24a] + LightGraphs v1.3.0
  [d05aeea4] + LuxurySparse v0.6.4
  [d8e11817] + MLStyle v0.4.6
  [1914dd2f] + MacroTools v0.5.5
  [bac558e1] + OrderedCollections v1.3.0
  [8162dcfd] + PrettyPrint v0.2.0
  [83ef0002] + RBNF v0.2.0
  [699a6c99] + SimpleTraits v0.9.3
  [90137ffa] + StaticArrays v0.12.4
  [a759f4b9] + TimerOutputs v0.5.6
  [0843a435] + YaoAPI v0.1.0
  [77e32715] + YaoLang v0.3.0
  [3525faa3] + ZXCalculus v0.2.2
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing YaoLang
Status `/tmp/jl_znegnv/Project.toml`
  [e2ba6199] ExprTools v0.1.2
  [7a1cc6ca] FFTW v1.2.4
  [7869d1d1] IRTools v0.4.1
  [d05aeea4] LuxurySparse v0.6.4
  [83ef0002] RBNF v0.2.0
  [a759f4b9] TimerOutputs v0.5.6
  [0843a435] YaoAPI v0.1.0
  [e600142f] YaoArrayRegister v0.7.1
  [77e32715] YaoLang v0.3.0
  [3525faa3] ZXCalculus v0.2.2
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_znegnv/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [ec485272] ArnoldiMethod v0.0.4
  [50ba71b6] BitBasis v0.7.0
  [34da2185] Compat v3.15.0
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.18.4
  [e2ba6199] ExprTools v0.1.2
  [7a1cc6ca] FFTW v1.2.4
  [f5851436] FFTW_jll v3.3.9+5
  [7869d1d1] IRTools v0.4.1
  [d25df0c9] Inflate v0.1.2
  [1d5cc7b8] IntelOpenMP_jll v2018.0.3+0
  [f1f30506] LegibleLambdas v0.2.0
  [093fc24a] LightGraphs v1.3.0
  [d05aeea4] LuxurySparse v0.6.4
  [856f044c] MKL_jll v2020.2.254+0
  [d8e11817] MLStyle v0.4.6
  [1914dd2f] MacroTools v0.5.5
  [e1d29d7a] Missings v0.4.4
  [bac558e1] OrderedCollections v1.3.0
  [8162dcfd] PrettyPrint v0.2.0
  [83ef0002] RBNF v0.2.0
  [189a3867] Reexport v0.2.0
  [699a6c99] SimpleTraits v0.9.3
  [a2af1166] SortingAlgorithms v0.3.1
  [90137ffa] StaticArrays v0.12.4
  [2913bbd2] StatsBase v0.33.1
  [a759f4b9] TimerOutputs v0.5.6
  [9d95972d] TupleTools v1.2.0
  [0843a435] YaoAPI v0.1.0
  [e600142f] YaoArrayRegister v0.7.1
  [a8f54c17] YaoBase v0.14.1
  [77e32715] YaoLang v0.3.0
  [3525faa3] ZXCalculus v0.2.2
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
WARNING: using ZXCalculus.gate_count in module Compiler conflicts with an existing identifier.
Test Summary: | Pass  Total
runtime       |   29     29
circuit qft(n::Int)
1:
  %1 = 2:@n
  %2 = Base.iterate(%1)
  %3 = @_1 = %2
  %4 = @_1 === nothing
  %5 = Base.not_int(%4)
  %6 = %new%(##register#253)
  %7 = gate(H, 1)
  br 3 unless %5
2:
  %8 = @_1
  %9 = Core.getfield(%8, 1)
  %10 = @_2 = %9
  %11 = Core.getfield(%8, 2)
  %12 = 2π
  %13 = 2 ^ @_2
  %14 = %12 / %13
  %15 = shift(%14)
  %16 = Base.iterate(%1, %11)
  %17 = @_1 = %16
  %18 = @_1 === nothing
  %19 = Base.not_int(%18)
  %20 = ctrl(%15, 1, @_2)
  br 3 unless %19
  br 2
3:
  %21 = @n > 1
  br 5 unless %21
4:
  %22 = @n - 1
  %23 = qft(%22)
  %24 = 2:@n
  %25 = gate(%23, %24)
5:
  return nothing
circuit single_qubit_layer(configs::AbstractVector, gateset=(X, Y, Z))
1:
  %1 = $(Expr(:inbounds, true))
  %2 = size(@configs, 1)
  %3 = 1:%2
  %4 = Base.iterate(%3)
  %5 = @_2 = %4
  %6 = @_2 === nothing
  %7 = Base.not_int(%6)
  %8 = %new%(##register#284)
  br 5 unless %7
2:
  %9 = @_2
  %10 = Core.getfield(%9, 1)
  %11 = @_3 = %10
  %12 = Core.getfield(%9, 2)
  %13 = Base.getindex(@configs, @_3)
  %14 = @_4 = %13
  %15 = @_4 > 0
  br 4 unless %15
3:
  %16 = Base.getindex(@gateset, @_4)
  %17 = gate(%16, @_3)
4:
  %18 = Base.iterate(%3, %12)
  %19 = @_2 = %18
  %20 = @_2 === nothing
  %21 = Base.not_int(%20)
  br 5 unless %21
  br 2
5:
  %22 = @_1 = nothing
  %23 = $(Expr(:inbounds, :pop))
  %24 = @_1
  return nothing
┌ Warning: `push_ctrl_gate!` is deprecated, use `push_gate!` instead.
│   caller = zx_push_ctrl_gate!(::ZXDiagram{Int64,Rational{Int64}}, ::Int64, ::Int64, ::Symbol) at zx_calculus.jl:186
└ @ YaoLang.Compiler ~/.julia/packages/YaoLang/8EhwC/src/compiler/zx_calculus.jl:186
┌ Warning: `push_ctrl_gate!` is deprecated, use `push_gate!` instead.
│   caller = zx_push_ctrl_gate!(::ZXDiagram{Int64,Rational{Int64}}, ::Tuple{Int64,Int64}, ::Int64, ::Symbol) at zx_calculus.jl:171
└ @ YaoLang.Compiler ~/.julia/packages/YaoLang/8EhwC/src/compiler/zx_calculus.jl:171
┌ Warning: `push_ctrl_gate!` is deprecated, use `push_gate!` instead.
│   caller = zx_push_ctrl_gate!(::ZXDiagram{Int64,Rational{Int64}}, ::Tuple{Int64,Int64}, ::Int64, ::Symbol) at zx_calculus.jl:173
└ @ YaoLang.Compiler ~/.julia/packages/YaoLang/8EhwC/src/compiler/zx_calculus.jl:173
┌ Warning: `push_ctrl_gate!` is deprecated, use `push_gate!` instead.
│   caller = zx_push_ctrl_gate!(::ZXDiagram{Int64,Rational{Int64}}, ::Tuple{Int64,Int64}, ::Int64, ::Symbol) at zx_calculus.jl:175
└ @ YaoLang.Compiler ~/.julia/packages/YaoLang/8EhwC/src/compiler/zx_calculus.jl:175
┌ Warning: `push_ctrl_gate!` is deprecated, use `push_gate!` instead.
│   caller = zx_push_ctrl_gate!(::ZXDiagram{Int64,Rational{Int64}}, ::Tuple{Int64,Int64}, ::Int64, ::Symbol) at zx_calculus.jl:177
└ @ YaoLang.Compiler ~/.julia/packages/YaoLang/8EhwC/src/compiler/zx_calculus.jl:177
┌ Warning: `push_ctrl_gate!` is deprecated, use `push_gate!` instead.
│   caller = zx_push_ctrl_gate!(::ZXDiagram{Int64,Rational{Int64}}, ::Tuple{Int64,Int64}, ::Int64, ::Symbol) at zx_calculus.jl:181
└ @ YaoLang.Compiler ~/.julia/packages/YaoLang/8EhwC/src/compiler/zx_calculus.jl:181
┌ Warning: `push_ctrl_gate!` is deprecated, use `push_gate!` instead.
│   caller = zx_push_ctrl_gate!(::ZXDiagram{Int64,Rational{Int64}}, ::Tuple{Int64,Int64}, ::Int64, ::Symbol) at zx_calculus.jl:184
└ @ YaoLang.Compiler ~/.julia/packages/YaoLang/8EhwC/src/compiler/zx_calculus.jl:184
WARNING: both ZXCalculus and Compiler export "gate_count"; uses of it in module Main must be qualified
gate_count: Error During Test at /home/pkgeval/.julia/packages/YaoLang/8EhwC/test/compiler/utils.jl:33
  Test threw exception
  Expression: gate_count(demo_circ_simp) == Dict("YaoLang.T" => 2, "YaoLang.H" => 8, "YaoLang.Rx" => 1, "YaoLang.X" => 2, "YaoLang.S" => 4, "YaoLang.shift" => 2, "@ctrl YaoLang.Z" => 1, "@ctrl YaoLang.X" => 4)
  UndefVarError: gate_count not defined
  Stacktrace:
   [1] top-level scope at /home/pkgeval/.julia/packages/YaoLang/8EhwC/test/compiler/utils.jl:33
   [2] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1115
   [3] top-level scope at /home/pkgeval/.julia/packages/YaoLang/8EhwC/test/compiler/utils.jl:33
  
Test Summary:         | Pass  Error  Total
compiler              |   28      1     29
  example/qft         |    3             3
  example/hadamard    |    3             3
  measure             |    1             1
  printing            |              No tests
  default value (#19) |    1             1
  callable            |    1             1
  purify              |    1             1
  sink quantum        |    1             1
  validation          |    3             3
  disallow constants  |    1             1
  gate_count          |           1      1
ERROR: LoadError: Some tests did not pass: 28 passed, 0 failed, 1 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/YaoLang/8EhwC/test/runtests.jl:10
ERROR: Package YaoLang errored during testing
Stacktrace:
 [1] pkgerror(::String) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:52
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1578
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:328
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:315
 [5] #test#61 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:67 [inlined]
 [6] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:67 [inlined]
 [7] #test#60 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:66 [inlined]
 [8] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:66 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:65
 [10] test(::String) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:65
 [11] top-level scope at none:19
