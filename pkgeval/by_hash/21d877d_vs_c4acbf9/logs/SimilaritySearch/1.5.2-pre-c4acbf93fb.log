Julia Version 1.5.2-pre.0
Commit c4acbf93fb (2020-08-26 10:58 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed SortingAlgorithms ── v0.3.1
  Installed DataAPI ──────────── v1.3.0
  Installed Parsers ──────────── v1.0.10
  Installed OrderedCollections ─ v1.3.0
  Installed DataStructures ───── v0.17.20
  Installed StatsBase ────────── v0.32.2
  Installed JSON ─────────────── v0.21.1
  Installed SimilaritySearch ─── v0.3.20
  Installed Missings ─────────── v0.4.4
Updating `~/.julia/environments/v1.5/Project.toml`
  [053f045d] + SimilaritySearch v0.3.20
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.20
  [682c06a0] + JSON v0.21.1
  [e1d29d7a] + Missings v0.4.4
  [bac558e1] + OrderedCollections v1.3.0
  [69de0a69] + Parsers v1.0.10
  [053f045d] + SimilaritySearch v0.3.20
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [de0858da] + Printf
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [4ec0a83e] + Unicode
    Testing SimilaritySearch
Status `/tmp/jl_RGRpYa/Project.toml`
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.1
  [053f045d] SimilaritySearch v0.3.20
  [2913bbd2] StatsBase v0.32.2
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_RGRpYa/Manifest.toml`
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.1
  [e1d29d7a] Missings v0.4.4
  [bac558e1] OrderedCollections v1.3.0
  [69de0a69] Parsers v1.0.10
  [053f045d] SimilaritySearch v0.3.20
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [de0858da] Printf
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
bit ops       |    3      3
res = KnnResult(4, 4, Item[Item(1, 0.03146732f0), Item(42, 0.046708822f0), Item(48, 0.047670484f0), Item(2, 0.07696557f0)])
Vsorted = Item[Item(1, 0.03146732f0), Item(42, 0.046708822f0), Item(48, 0.047670484f0), Item(2, 0.07696557f0)]
Test Summary: | Pass  Total
Result set    |    3      3
Test Summary: | Pass  Total
pairwise      |    1      1
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004226867357889811, 0.004543471336364746, 301.0, 48.95966770686209))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004272969563802084, 0.0052808682123819985, 301.0, 72.09423959255219))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004274717966715495, 0.006651838620503743, 301.0, 39.83068668842316))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.squared_l2_distance)
(dist, p) = (SimilaritySearch.squared_l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.003951525688171387, 0.0039098262786865234, 301.0, 8.82251350505976))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(3.0), 0.3333333333333333))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(3.0), 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.0015923738479614257, 0.006430864334106445, 301.0, 44.2069450430572))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(0.5), 2.0))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(0.5), 2.0), PerformanceResult(1.0, 1.0, 1.0, 0.00040442943572998046, 0.0003899653752644857, 301.0, 180.3280147537589))
Test Summary:    | Pass  Total
indexing vectors |   18     18
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=jaccard_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=dice_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=intersection_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=common_prefix_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=levenshtein_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=lcs_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   28     28
p = PerformanceResult(1.0, 1.0, 1.0, 9.370644887288412e-5, 0.005994629859924316, 300.0, 26.454347259365022)
p = PerformanceResult(1.0, 1.0, 1.0, 9.473164876302083e-5, 5.672772725423177e-5, 300.0, 26.454347259365022)
p = PerformanceResult(1.0, 1.0, 1.0, 0.003738856315612793, 0.003749736150105794, 300.0, 1.3663528179549758)
p = PerformanceResult(1.0, 1.0, 1.0, 4.446241590711806e-5, 1.819928487141927e-5, 300.0, 1.3663528179549758)
(p1, p2, p3, p4) = (PerformanceResult(1.0, 1.0, 1.0, 9.370644887288412e-5, 0.005994629859924316, 300.0, 26.454347259365022), PerformanceResult(1.0, 1.0, 1.0, 9.473164876302083e-5, 5.672772725423177e-5, 300.0, 26.454347259365022), PerformanceResult(1.0, 1.0, 1.0, 0.003738856315612793, 0.003749736150105794, 300.0, 1.3663528179549758), PerformanceResult(1.0, 1.0, 1.0, 4.446241590711806e-5, 1.819928487141927e-5, 300.0, 1.3663528179549758))
[ Info: select_sss: db=Array{Array{UInt32,1},1}, alpha=0.35, distance=hamming_distance, shuf=false
[ Info: the maximum distance estimated as 116.0, now selecting pivots
[ Info: Creating a pivot table with 300 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.008054622014363607, 0.0035675366719563804, 348.1333333333333, 28610.0)
[ Info: Creating a pivot table with 16 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.0073806365331014, 0.003197169303894043, 303.1666666666667, 6967.0)
Test Summary: | Pass  Total
misc          |   10     10
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
Kvp = Kvp
[ Info: Kvp, refs=Array{Array{Float32,1},1}, k=3, numrefs=32, dist=l2_distance
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.5272369384765625e-5, 1.4170010884602864e-5, 95.46666666666667, 48.82176106609404))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
Kvp = Kvp
[ Info: Kvp, refs=Array{Array{Float32,1},1}, k=3, numrefs=32, dist=l1_distance
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.4525324503580728e-5, 1.3701121012369792e-5, 86.16666666666667, 71.91530573368073))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
Kvp = Kvp
[ Info: Kvp, refs=Array{Array{Float32,1},1}, k=3, numrefs=32, dist=linf_distance
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.5924046834309896e-5, 1.823107401529948e-5, 90.96666666666667, 39.71835231781006))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(3.0), 0.3333333333333333))
Kvp = Kvp
[ Info: Kvp, refs=Array{Array{Float32,1},1}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(3.0), 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.002954268455505371, 0.0003965298334757487, 96.9, 44.07578198984265))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(0.5), 2.0))
Kvp = Kvp
[ Info: Kvp, refs=Array{Array{Float32,1},1}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(0.5), 2.0), PerformanceResult(0.8133333333333331, 0.8133333333333331, 0.8133333333333331, 0.0004242738087972005, 0.0004347324371337891, 72.23333333333333, 188.6918272599578))
Test Summary:    | Pass  Total
indexing vectors |   10     10
[ Info: inserting items into the index
[ Info: Kvp, refs=Array{Array{Int64,1},1}, k=3, numrefs=32, dist=jaccard_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Array{Array{Int64,1},1}, k=3, numrefs=32, dist=dice_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Array{Array{Int64,1},1}, k=3, numrefs=32, dist=intersection_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Array{Array{Int64,1},1}, k=3, numrefs=32, dist=common_prefix_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Array{Array{Int64,1},1}, k=3, numrefs=32, dist=levenshtein_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Array{Array{Int64,1},1}, k=3, numrefs=32, dist=lcs_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Array{Array{Int64,1},1}, k=3, numrefs=32, dist=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   14     14
*** advance 1 from 1000; 2020-09-10T01:37:31.793
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(0.9770000000000002, 0.9770000000000002, 0.9770000000000002, 1.789093017578125e-5, 1.7330646514892578e-5, 167.64, 49.917166044877376))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 1.634836196899414e-5, 1.201152801513672e-5, 172.74, 0.0))
*** advance 1 from 1000; 2020-09-10T01:37:32.537
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(0.9079999999999999, 0.9079999999999999, 0.9079999999999999, 2.2552013397216798e-5, 2.504110336303711e-5, 151.54, 75.55541304685175))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.3193359375e-5, 2.1839141845703124e-5, 155.4, 0.0))
*** advance 1 from 1000; 2020-09-10T01:37:33.231
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(0.9790000000000001, 0.9790000000000001, 0.9790000000000001, 2.5277137756347655e-5, 3.481149673461914e-5, 169.62, 40.67235293239355))
[ Info: adding more items
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.9146671295166016e-5, 0.00022043943405151368, 174.87, 0.0))
*** advance 1 from 1000; 2020-09-10T01:37:34.139
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(3.0), 0.3333333333333333), PerformanceResult(0.978, 0.978, 0.978, 0.0002530622482299805, 0.001316070556640625, 167.6, 45.07406408281531))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(3.0), 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.0003003358840942383, 0.0024747800827026366, 172.66, 0.0))
*** advance 1 from 1000; 2020-09-10T01:37:35.329
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(0.5), 2.0), PerformanceResult(0.9710000000000001, 0.9710000000000001, 0.9710000000000001, 0.00035953283309936524, 0.0014328193664550782, 166.14, 189.6415857928805))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(0.5), 2.0), PerformanceResult(1.0, 1.0, 1.0, 0.00023383855819702148, 0.0012989711761474609, 170.95, 0.0))
*** advance 1 from 1000; 2020-09-10T01:37:36.884
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(0.9770000000000002, 0.9770000000000002, 0.9770000000000002, 5.8639049530029294e-5, 0.00017739057540893554, 167.64, 49.927312085579615))
[ Info: adding more items
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(1.0, 1.0, 1.0, 6.19053840637207e-5, 0.0005212903022766113, 172.74, 0.018590813997434452))
Test Summary:    | Pass  Total
indexing vectors |   12     12
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-10T01:37:38.341
(dist, p) = (SimilaritySearch.jaccard_distance, PerformanceResult(0.7470000000000004, 0.7470000000000004, 0.7470000000000004, 0.0015084433555603027, 9.886026382446289e-5, 198.75, 197.28333547711372))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-10T01:37:39.406
(dist, p) = (SimilaritySearch.dice_distance, PerformanceResult(0.7360000000000001, 0.7360000000000001, 0.7360000000000001, 0.002009115219116211, 0.00011435031890869141, 202.16, 112.89524058252573))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-10T01:37:40.367
(dist, p) = (SimilaritySearch.intersection_distance, PerformanceResult(0.643, 0.643, 0.643, 0.0013932013511657715, 7.598876953125e-5, 275.29, 4.25))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-10T01:37:41.197
(dist, p) = (SimilaritySearch.common_prefix_distance, PerformanceResult(0.96, 0.96, 0.96, 0.00136824369430542, 2.0589828491210937e-5, 224.88, 605.200020596385))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-10T01:37:42.24
(dist, p) = (SimilaritySearch.levenshtein_distance, PerformanceResult(0.5610000000000003, 0.5610000000000003, NaN, 0.001549532413482666, 0.0005095100402832031, 253.28, 2383.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-10T01:37:43.261
(dist, p) = (SimilaritySearch.lcs_distance, PerformanceResult(0.3720000000000001, 0.3720000000000001, NaN, 0.0015529489517211914, 0.0004480910301208496, 244.69, 3688.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-10T01:37:44.331
(dist, p) = (SimilaritySearch.hamming_distance, PerformanceResult(0.6100000000000001, 0.6100000000000001, 0.6100000000000001, 0.0025955653190612793, 2.71296501159668e-5, 247.61, 2373.0))
Test Summary:      | Pass  Total
indexing sequences |    7      7
[ Info: inserting items to the index
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.0425339366515836,"state":{"restarts":8},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.974221611721612,"seconds":0.0024491045624017715,"exhaustive_search_seconds":2.2817403078079224e-6,"evaluations":8.6328125,"distances_sum":691.9643477462232}}, beam: 4, n: 9
==== END Opt. IHCSearch. Finished, best: {"score":2.0425339366515836,"state":{"restarts":8},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.974221611721612,"seconds":0.0024491045624017715,"exhaustive_search_seconds":2.2817403078079224e-6,"evaluations":8.6328125,"distances_sum":691.9643477462232}}, n: 9
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 99
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.8893693156403755, conf: {"restarts":9}, perf: {"precision":0.901909722222221,"recall":0.901909722222221,"f1":0.901909722222221,"seconds":2.306327223777771e-5,"exhaustive_search_seconds":6.632879376411438e-6,"evaluations":52.3984375,"distances_sum":287.66036708280444}, best_list's length: 2, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.854258121158911, conf: {"restarts":10}, perf: {"precision":0.9001736111111099,"recall":0.9001736111111099,"f1":0.9001736111111099,"seconds":2.3631379008293152e-5,"exhaustive_search_seconds":6.632879376411438e-6,"evaluations":53.390625,"distances_sum":288.9125168584287}, best_list's length: 4, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.8893693156403755,"state":{"restarts":9},"perf":{"precision":0.901909722222221,"recall":0.901909722222221,"f1":0.901909722222221,"seconds":2.306327223777771e-5,"exhaustive_search_seconds":6.632879376411438e-6,"evaluations":52.3984375,"distances_sum":287.66036708280444}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.8893693156403755,"state":{"restarts":9},"perf":{"precision":0.901909722222221,"recall":0.901909722222221,"f1":0.901909722222221,"seconds":2.306327223777771e-5,"exhaustive_search_seconds":6.632879376411438e-6,"evaluations":52.3984375,"distances_sum":287.66036708280444}}, beam: 4, n: 99
==== END Opt. IHCSearch. Finished, best: {"score":2.8893693156403755,"state":{"restarts":9},"perf":{"precision":0.901909722222221,"recall":0.901909722222221,"f1":0.901909722222221,"seconds":2.306327223777771e-5,"exhaustive_search_seconds":6.632879376411438e-6,"evaluations":52.3984375,"distances_sum":287.66036708280444}}, n: 99
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8671874999999988, conf: {"restarts":15}, perf: {"precision":0.8671874999999988,"recall":0.8671874999999988,"f1":0.8671874999999988,"seconds":6.11674040555954e-5,"exhaustive_search_seconds":2.817995846271515e-5,"evaluations":159.8984375,"distances_sum":125.56824478879571}, best_list's length: 5, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8628472222222212, conf: {"restarts":17}, perf: {"precision":0.8628472222222212,"recall":0.8628472222222212,"f1":0.8628472222222212,"seconds":6.598047912120819e-5,"exhaustive_search_seconds":2.817995846271515e-5,"evaluations":172.71875,"distances_sum":125.97239018976688}, best_list's length: 6, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8671874999999988,"state":{"restarts":15},"perf":{"precision":0.8671874999999988,"recall":0.8671874999999988,"f1":0.8671874999999988,"seconds":6.11674040555954e-5,"exhaustive_search_seconds":2.817995846271515e-5,"evaluations":159.8984375,"distances_sum":125.56824478879571}}, beam: 4, n: 999
==== END Opt. IHCSearch. Finished, best: {"score":0.8671874999999988,"state":{"restarts":15},"perf":{"precision":0.8671874999999988,"recall":0.8671874999999988,"f1":0.8671874999999988,"seconds":6.11674040555954e-5,"exhaustive_search_seconds":2.817995846271515e-5,"evaluations":159.8984375,"distances_sum":125.56824478879571}}, n: 999
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8324652777777768, conf: {"restarts":28}, perf: {"precision":0.8324652777777768,"recall":0.8324652777777768,"f1":0.8324652777777768,"seconds":0.00017968006432056427,"exhaustive_search_seconds":0.0003706328570842743,"evaluations":365.484375,"distances_sum":56.347104421816766}, best_list's length: 3, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8342013888888881, conf: {"restarts":2}, perf: {"precision":0.8342013888888881,"recall":0.8342013888888881,"f1":0.8342013888888881,"seconds":7.361732423305511e-5,"exhaustive_search_seconds":0.0003706328570842743,"evaluations":135.4921875,"distances_sum":56.4638483626768}, best_list's length: 4, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8480902777777766, conf: {"restarts":10}, perf: {"precision":0.8480902777777766,"recall":0.8480902777777766,"f1":0.8480902777777766,"seconds":0.0001081656664609909,"exhaustive_search_seconds":0.0003706328570842743,"evaluations":211.84375,"distances_sum":56.04501247871667}, best_list's length: 5, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8472222222222209, conf: {"restarts":22}, perf: {"precision":0.8472222222222209,"recall":0.8472222222222209,"f1":0.8472222222222209,"seconds":0.00015673786401748657,"exhaustive_search_seconds":0.0003706328570842743,"evaluations":309.6796875,"distances_sum":55.93308625090867}, best_list's length: 6, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8376736111111098, conf: {"restarts":29}, perf: {"precision":0.8376736111111098,"recall":0.8376736111111098,"f1":0.8376736111111098,"seconds":0.00017493590712547302,"exhaustive_search_seconds":0.0003706328570842743,"evaluations":365.40625,"distances_sum":56.47703048866242}, best_list's length: 7, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8350694444444432, conf: {"restarts":4}, perf: {"precision":0.8350694444444432,"recall":0.8350694444444432,"f1":0.8350694444444432,"seconds":8.435174822807312e-5,"exhaustive_search_seconds":0.0003706328570842743,"evaluations":156.046875,"distances_sum":56.397827352397144}, best_list's length: 8, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8402777777777767, conf: {"restarts":23}, perf: {"precision":0.8402777777777767,"recall":0.8402777777777767,"f1":0.8402777777777767,"seconds":0.00015861541032791138,"exhaustive_search_seconds":0.0003706328570842743,"evaluations":316.671875,"distances_sum":56.21299572754651}, best_list's length: 9, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8480902777777766,"state":{"restarts":10},"perf":{"precision":0.8480902777777766,"recall":0.8480902777777766,"f1":0.8480902777777766,"seconds":0.0001081656664609909,"exhaustive_search_seconds":0.0003706328570842743,"evaluations":211.84375,"distances_sum":56.04501247871667}}, beam: 4, n: 9999
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8498263888888876, conf: {"restarts":32}, perf: {"precision":0.8498263888888876,"recall":0.8498263888888876,"f1":0.8498263888888876,"seconds":0.00018137507140636444,"exhaustive_search_seconds":0.0003706328570842743,"evaluations":392.9765625,"distances_sum":55.98792609106749}, best_list's length: 7, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.850694444444443, conf: {"restarts":35}, perf: {"precision":0.850694444444443,"recall":0.850694444444443,"f1":0.850694444444443,"seconds":0.0001956801861524582,"exhaustive_search_seconds":0.0003706328570842743,"evaluations":425.5078125,"distances_sum":56.08136065211147}, best_list's length: 8, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.850694444444443,"state":{"restarts":35},"perf":{"precision":0.850694444444443,"recall":0.850694444444443,"f1":0.850694444444443,"seconds":0.0001956801861524582,"exhaustive_search_seconds":0.0003706328570842743,"evaluations":425.5078125,"distances_sum":56.08136065211147}}, beam: 4, n: 9999
==== END Opt. IHCSearch. Finished, best: {"score":0.850694444444443,"state":{"restarts":35},"perf":{"precision":0.850694444444443,"recall":0.850694444444443,"f1":0.850694444444443,"seconds":0.0001956801861524582,"exhaustive_search_seconds":0.0003706328570842743,"evaluations":425.5078125,"distances_sum":56.08136065211147}}, n: 9999
added n=10000, neighborhood=4, IHCSearch(35), SatNeighborhood(32), 2020-09-10T01:37:52.323
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(4051, 0.01711749f0), Item(5719, 0.017324012f0), Item(2473, 0.031627126f0), Item(1120, 0.046973582f0), Item(6254, 0.054277264f0), Item(246, 0.057477225f0), Item(8791, 0.05820174f0), Item(7780, 0.06642172f0), Item(865, 0.07468194f0), Item(5552, 0.07886485f0)])
[ Info: inserting items to the index
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8359375,"state":{"bsize":3},"perf":{"precision":1.0,"recall":0.8359375,"f1":0.8900974025974031,"seconds":0.005263615399599075,"exhaustive_search_seconds":1.860782504081726e-6,"evaluations":7.6875,"distances_sum":603.7159784883261}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8359375,"state":{"bsize":3},"perf":{"precision":1.0,"recall":0.8359375,"f1":0.8900974025974031,"seconds":0.005263615399599075,"exhaustive_search_seconds":1.860782504081726e-6,"evaluations":7.6875,"distances_sum":603.7159784883261}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 99
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":3.9795438513990127,"state":{"bsize":3},"perf":{"precision":0.9722222222222215,"recall":0.9722222222222215,"f1":0.9722222222222215,"seconds":2.6011839509010315e-5,"exhaustive_search_seconds":1.3304874300956726e-5,"evaluations":33.2265625,"distances_sum":288.8907623626292}}, beam: 4, n: 99
==== END Opt. BeamSearch. Finished, best: {"score":3.9795438513990127,"state":{"bsize":3},"perf":{"precision":0.9722222222222215,"recall":0.9722222222222215,"f1":0.9722222222222215,"seconds":2.6011839509010315e-5,"exhaustive_search_seconds":1.3304874300956726e-5,"evaluations":33.2265625,"distances_sum":288.8907623626292}}, n: 99
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.761305544632325,"state":{"bsize":3},"perf":{"precision":0.9704861111111106,"recall":0.9704861111111106,"f1":0.9704861111111106,"seconds":3.6772340536117554e-5,"exhaustive_search_seconds":5.636736750602722e-5,"evaluations":59.6015625,"distances_sum":122.07410239148885}}, beam: 4, n: 999
==== END Opt. BeamSearch. Finished, best: {"score":17.761305544632325,"state":{"bsize":3},"perf":{"precision":0.9704861111111106,"recall":0.9704861111111106,"f1":0.9704861111111106,"seconds":3.6772340536117554e-5,"exhaustive_search_seconds":5.636736750602722e-5,"evaluations":59.6015625,"distances_sum":122.07410239148885}}, n: 999
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":96.42737846704443,"state":{"bsize":3},"perf":{"precision":0.9722222222222217,"recall":0.9722222222222217,"f1":0.9722222222222217,"seconds":6.821751594543457e-5,"exhaustive_search_seconds":0.000449109822511673,"evaluations":104.78125,"distances_sum":53.820494337473065}}, beam: 4, n: 9999
==== END Opt. BeamSearch. Finished, best: {"score":96.42737846704443,"state":{"bsize":3},"perf":{"precision":0.9722222222222217,"recall":0.9722222222222217,"f1":0.9722222222222217,"seconds":6.821751594543457e-5,"exhaustive_search_seconds":0.000449109822511673,"evaluations":104.78125,"distances_sum":53.820494337473065}}, n: 9999
added n=10000, neighborhood=5, BeamSearch(3), SatNeighborhood(32), 2020-09-10T01:37:56.989
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(8999, 0.026574116f0), Item(1821, 0.032884277f0), Item(4327, 0.04476792f0), Item(369, 0.04578676f0), Item(9193, 0.049735602f0), Item(1967, 0.05146454f0), Item(3429, 0.05362635f0), Item(3754, 0.05796297f0), Item(2727, 0.06672304f0), Item(459, 0.0671875f0)])
Test Summary:        | Pass  Total
some vector indexing |    2      2
    Testing SimilaritySearch tests passed 
