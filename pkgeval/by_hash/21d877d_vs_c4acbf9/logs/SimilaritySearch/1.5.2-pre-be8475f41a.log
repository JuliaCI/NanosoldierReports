Julia Version 1.5.2-pre.25
Commit be8475f41a (2020-09-09 06:41 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed OrderedCollections ─ v1.3.0
  Installed DataStructures ───── v0.17.20
  Installed StatsBase ────────── v0.32.2
  Installed SortingAlgorithms ── v0.3.1
  Installed Missings ─────────── v0.4.4
  Installed Parsers ──────────── v1.0.10
  Installed SimilaritySearch ─── v0.3.20
  Installed DataAPI ──────────── v1.3.0
  Installed JSON ─────────────── v0.21.1
Updating `~/.julia/environments/v1.5/Project.toml`
  [053f045d] + SimilaritySearch v0.3.20
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.20
  [682c06a0] + JSON v0.21.1
  [e1d29d7a] + Missings v0.4.4
  [bac558e1] + OrderedCollections v1.3.0
  [69de0a69] + Parsers v1.0.10
  [053f045d] + SimilaritySearch v0.3.20
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [de0858da] + Printf
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [4ec0a83e] + Unicode
    Testing SimilaritySearch
Status `/tmp/jl_FNJqR0/Project.toml`
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.1
  [053f045d] SimilaritySearch v0.3.20
  [2913bbd2] StatsBase v0.32.2
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_FNJqR0/Manifest.toml`
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.1
  [e1d29d7a] Missings v0.4.4
  [bac558e1] OrderedCollections v1.3.0
  [69de0a69] Parsers v1.0.10
  [053f045d] SimilaritySearch v0.3.20
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [de0858da] Printf
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
bit ops       |    3      3
res = KnnResult(4, 4, Item[Item(36, 0.017755747f0), Item(38, 0.033881545f0), Item(17, 0.06042862f0), Item(13, 0.06506598f0)])
Vsorted = Item[Item(36, 0.017755747f0), Item(38, 0.033881545f0), Item(17, 0.06042862f0), Item(13, 0.06506598f0)]
Test Summary: | Pass  Total
Result set    |    3      3
Test Summary: | Pass  Total
pairwise      |    1      1
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004004184405008952, 0.004400102297465006, 301.0, 45.985917549580336))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0037011226018269856, 0.004344932238260905, 301.0, 66.86820030212402))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0036349137624104816, 0.0040841341018676754, 301.0, 37.76592552661896))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.squared_l2_distance)
(dist, p) = (SimilaritySearch.squared_l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.00381011962890625, 0.0035086711247762042, 301.0, 7.707782276556827))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(3.0), 0.3333333333333333))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(3.0), 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.001353621482849121, 0.0060546636581420895, 301.0, 41.78071645274758))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(0.5), 2.0))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(0.5), 2.0), PerformanceResult(1.0, 1.0, 1.0, 0.0005812406539916992, 0.00042862892150878905, 301.0, 164.69360748678446))
Test Summary:    | Pass  Total
indexing vectors |   18     18
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=jaccard_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=dice_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=intersection_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=common_prefix_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=levenshtein_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=lcs_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   28     28
p = PerformanceResult(1.0, 1.0, 1.0, 9.685357411702474e-5, 0.004589430491129557, 300.0, 24.892470634542406)
p = PerformanceResult(1.0, 1.0, 1.0, 0.0001060644785563151, 7.487138112386068e-5, 300.0, 24.892470634542406)
p = PerformanceResult(1.0, 1.0, 1.0, 0.004243143399556478, 0.0038475990295410156, 300.0, 1.2399274032759422)
p = PerformanceResult(1.0, 1.0, 1.0, 4.445711771647136e-5, 1.853307088216146e-5, 300.0, 1.2399274032759422)
(p1, p2, p3, p4) = (PerformanceResult(1.0, 1.0, 1.0, 9.685357411702474e-5, 0.004589430491129557, 300.0, 24.892470634542406), PerformanceResult(1.0, 1.0, 1.0, 0.0001060644785563151, 7.487138112386068e-5, 300.0, 24.892470634542406), PerformanceResult(1.0, 1.0, 1.0, 0.004243143399556478, 0.0038475990295410156, 300.0, 1.2399274032759422), PerformanceResult(1.0, 1.0, 1.0, 4.445711771647136e-5, 1.853307088216146e-5, 300.0, 1.2399274032759422))
[ Info: select_sss: db=Array{Array{UInt32,1},1}, alpha=0.35, distance=hamming_distance, shuf=false
[ Info: the maximum distance estimated as 120.0, now selecting pivots
[ Info: Creating a pivot table with 300 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.009041539827982585, 0.0039749622344970705, 349.1333333333333, 28580.0)
[ Info: Creating a pivot table with 16 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.007350643475850423, 0.003460828463236491, 303.56666666666666, 6954.0)
Test Summary: | Pass  Total
misc          |   10     10
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
Kvp = Kvp
[ Info: Kvp, refs=Array{Array{Float32,1},1}, k=3, numrefs=32, dist=l2_distance
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.407232920328776e-5, 1.1030832926432291e-5, 91.6, 45.83530832454562))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
Kvp = Kvp
[ Info: Kvp, refs=Array{Array{Float32,1},1}, k=3, numrefs=32, dist=l1_distance
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.4922688802083333e-5, 1.239776611328125e-5, 84.53333333333333, 66.63663232326508))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
Kvp = Kvp
[ Info: Kvp, refs=Array{Array{Float32,1},1}, k=3, numrefs=32, dist=linf_distance
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.4080276489257812e-5, 1.4893213907877605e-5, 86.16666666666667, 37.66028678417206))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(3.0), 0.3333333333333333))
Kvp = Kvp
[ Info: Kvp, refs=Array{Array{Float32,1},1}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(3.0), 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.0028925339380900064, 0.0004401048024495443, 92.26666666666667, 41.66029726341367))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(0.5), 2.0))
Kvp = Kvp
[ Info: Kvp, refs=Array{Array{Float32,1},1}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(0.5), 2.0), PerformanceResult(0.83, 0.83, 0.83, 0.0004660447438557943, 0.0004479646682739258, 69.83333333333333, 173.24299959093332))
Test Summary:    | Pass  Total
indexing vectors |   10     10
[ Info: inserting items into the index
[ Info: Kvp, refs=Array{Array{Int64,1},1}, k=3, numrefs=32, dist=jaccard_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Array{Array{Int64,1},1}, k=3, numrefs=32, dist=dice_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Array{Array{Int64,1},1}, k=3, numrefs=32, dist=intersection_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Array{Array{Int64,1},1}, k=3, numrefs=32, dist=common_prefix_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Array{Array{Int64,1},1}, k=3, numrefs=32, dist=levenshtein_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Array{Array{Int64,1},1}, k=3, numrefs=32, dist=lcs_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Array{Array{Int64,1},1}, k=3, numrefs=32, dist=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   14     14
*** advance 1 from 1000; 2020-09-10T01:43:07.849
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(0.9121428571428574, 0.9020000000000001, 0.9057843137254905, 2.209186553955078e-5, 2.2709369659423828e-5, 152.23, 49.91924412851222))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.15601921081543e-5, 1.772165298461914e-5, 156.03, 0.0))
*** advance 1 from 1000; 2020-09-10T01:43:08.578
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(0.9109999999999997, 0.9109999999999997, 0.9109999999999997, 2.2861957550048828e-5, 2.5029182434082032e-5, 152.75, 75.78792906738818))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.1681785583496093e-5, 2.0749568939208985e-5, 156.72, 0.0))
*** advance 1 from 1000; 2020-09-10T01:43:09.263
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(0.9153928571428572, 0.904, 0.9080410830999067, 2.4352073669433594e-5, 3.617048263549805e-5, 153.25, 40.0683414414525))
[ Info: adding more items
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.365589141845703e-5, 3.25322151184082e-5, 156.9, 0.0))
*** advance 1 from 1000; 2020-09-10T01:43:10.236
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(3.0), 0.3333333333333333), PerformanceResult(0.9138055555555558, 0.9040000000000002, 0.907421888053467, 0.00023865938186645508, 0.0014717698097229004, 152.02, 45.26678299997002))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(3.0), 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.00040826559066772463, 0.0015408587455749512, 155.78, 0.0))
*** advance 1 from 1000; 2020-09-10T01:43:11.343
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(0.5), 2.0), PerformanceResult(0.9690000000000002, 0.9690000000000002, 0.9690000000000002, 0.000224151611328125, 0.0012537503242492675, 166.71, 191.31880330247805))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(0.5), 2.0), PerformanceResult(1.0, 1.0, 1.0, 0.0002308821678161621, 0.0012946796417236328, 172.17, 0.0))
*** advance 1 from 1000; 2020-09-10T01:43:12.566
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(0.9121428571428574, 0.9020000000000001, 0.9057843137254905, 6.272315979003906e-5, 0.00020901918411254884, 152.23, 49.93009877507575))
[ Info: adding more items
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(1.0, 1.0, 1.0, 0.00022951126098632812, 0.0002264714241027832, 156.03, 0.013960754498839378))
Test Summary:    | Pass  Total
indexing vectors |   12     12
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-10T01:43:14.107
(dist, p) = (SimilaritySearch.jaccard_distance, PerformanceResult(0.7700000000000001, 0.7700000000000001, 0.7700000000000001, 0.0014498066902160645, 8.206844329833985e-5, 198.83, 182.86666880548))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-10T01:43:15.03
(dist, p) = (SimilaritySearch.dice_distance, PerformanceResult(0.7640000000000002, 0.7640000000000002, 0.7640000000000002, 0.0016413688659667968, 7.949113845825196e-5, 206.86, 104.12143049389124))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-10T01:43:15.887
(dist, p) = (SimilaritySearch.intersection_distance, PerformanceResult(0.6940000000000006, 0.6940000000000006, 0.6940000000000006, 0.0015048527717590333, 7.99703598022461e-5, 256.6, 2.5))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-10T01:43:16.8
(dist, p) = (SimilaritySearch.common_prefix_distance, PerformanceResult(0.9379999999999998, 0.9359999999999999, 0.9369473684210524, 0.001644144058227539, 2.5310516357421874e-5, 214.07, 601.4000205993652))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-10T01:43:18.005
(dist, p) = (SimilaritySearch.levenshtein_distance, PerformanceResult(0.607, 0.607, 0.607, 0.0015655183792114258, 0.0005122804641723632, 256.77, 2331.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-10T01:43:18.993
(dist, p) = (SimilaritySearch.lcs_distance, PerformanceResult(0.36899999999999994, 0.36899999999999994, NaN, 0.001651313304901123, 0.00038075923919677734, 249.41, 3652.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-10T01:43:19.936
(dist, p) = (SimilaritySearch.hamming_distance, PerformanceResult(0.608, 0.608, 0.608, 0.0014887118339538573, 2.7360916137695314e-5, 245.4, 2356.0))
Test Summary:      | Pass  Total
indexing sequences |    7      7
[ Info: inserting items to the index
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.0463215258855585,"state":{"restarts":8},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.972693452380953,"seconds":0.0027709566056728363,"exhaustive_search_seconds":1.7974525690078735e-6,"evaluations":8.6015625,"distances_sum":646.8093127608299}}, beam: 3, n: 9
==== END Opt. IHCSearch. Finished, best: {"score":2.0463215258855585,"state":{"restarts":8},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.972693452380953,"seconds":0.0027709566056728363,"exhaustive_search_seconds":1.7974525690078735e-6,"evaluations":8.6015625,"distances_sum":646.8093127608299}}, n: 9
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 99
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.740181268882175, conf: {"restarts":12}, perf: {"precision":0.9201388888888878,"recall":0.9201388888888878,"f1":0.9201388888888878,"seconds":2.77739018201828e-5,"exhaustive_search_seconds":7.499009370803833e-6,"evaluations":56.890625,"distances_sum":296.8255342505872}, best_list's length: 2, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 3.446332046332046, conf: {"restarts":4}, perf: {"precision":0.9027777777777762,"recall":0.9027777777777762,"f1":0.9027777777777762,"seconds":1.8827617168426514e-5,"exhaustive_search_seconds":7.499009370803833e-6,"evaluations":40.46875,"distances_sum":298.81230514124036}, best_list's length: 3, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.6682464454976302, conf: {"restarts":14}, perf: {"precision":0.9270833333333321,"recall":0.9270833333333321,"f1":0.9270833333333321,"seconds":2.8286129236221313e-5,"exhaustive_search_seconds":7.499009370803833e-6,"evaluations":59.34375,"distances_sum":295.7284680120647}, best_list's length: 4, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.9293544457978076, conf: {"restarts":9}, perf: {"precision":0.9036458333333323,"recall":0.9036458333333323,"f1":0.9036458333333323,"seconds":2.275221049785614e-5,"exhaustive_search_seconds":7.499009370803833e-6,"evaluations":51.3125,"distances_sum":298.22237606719136}, best_list's length: 5, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":3.446332046332046,"state":{"restarts":4},"perf":{"precision":0.9027777777777762,"recall":0.9027777777777762,"f1":0.9027777777777762,"seconds":1.8827617168426514e-5,"exhaustive_search_seconds":7.499009370803833e-6,"evaluations":40.46875,"distances_sum":298.81230514124036}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":3.446332046332046,"state":{"restarts":4},"perf":{"precision":0.9027777777777762,"recall":0.9027777777777762,"f1":0.9027777777777762,"seconds":1.8827617168426514e-5,"exhaustive_search_seconds":7.499009370803833e-6,"evaluations":40.46875,"distances_sum":298.81230514124036}}, beam: 4, n: 99
==== END Opt. IHCSearch. Finished, best: {"score":3.446332046332046,"state":{"restarts":4},"perf":{"precision":0.9027777777777762,"recall":0.9027777777777762,"f1":0.9027777777777762,"seconds":1.8827617168426514e-5,"exhaustive_search_seconds":7.499009370803833e-6,"evaluations":40.46875,"distances_sum":298.81230514124036}}, n: 99
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8576388888888877,"state":{"restarts":4},"perf":{"precision":0.8576388888888877,"recall":0.8576388888888877,"f1":0.8576388888888877,"seconds":3.791786730289459e-5,"exhaustive_search_seconds":3.080442547798157e-5,"evaluations":89.4609375,"distances_sum":124.57179759442806}}, beam: 4, n: 999
==== END Opt. IHCSearch. Finished, best: {"score":0.8576388888888877,"state":{"restarts":4},"perf":{"precision":0.8576388888888877,"recall":0.8576388888888877,"f1":0.8576388888888877,"seconds":3.791786730289459e-5,"exhaustive_search_seconds":3.080442547798157e-5,"evaluations":89.4609375,"distances_sum":124.57179759442806}}, n: 999
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8472222222222214,"state":{"restarts":4},"perf":{"precision":0.8472222222222214,"recall":0.8472222222222214,"f1":0.8472222222222214,"seconds":9.177252650260925e-5,"exhaustive_search_seconds":0.0004101954400539398,"evaluations":150.6484375,"distances_sum":56.28863190417178}}, beam: 4, n: 9999
==== END Opt. IHCSearch. Finished, best: {"score":0.8472222222222214,"state":{"restarts":4},"perf":{"precision":0.8472222222222214,"recall":0.8472222222222214,"f1":0.8472222222222214,"seconds":9.177252650260925e-5,"exhaustive_search_seconds":0.0004101954400539398,"evaluations":150.6484375,"distances_sum":56.28863190417178}}, n: 9999
added n=10000, neighborhood=3, IHCSearch(4), SatNeighborhood(32), 2020-09-10T01:43:27.287
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(9945, 0.022548147f0), Item(5228, 0.038733725f0), Item(4850, 0.03949167f0), Item(2318, 0.041446324f0), Item(9081, 0.0619139f0), Item(8397, 0.06362411f0), Item(9604, 0.07315747f0), Item(2660, 0.07664666f0), Item(4186, 0.0793351f0), Item(3757, 0.07999795f0)])
[ Info: inserting items to the index
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.072625698324022,"state":{"bsize":3},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.9536921411921414,"seconds":0.003992520272731781,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.390625,"distances_sum":612.8381951749325}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":2.072625698324022,"state":{"bsize":3},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.9536921411921414,"seconds":0.003992520272731781,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.390625,"distances_sum":612.8381951749325}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 99
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.084712755598831,"state":{"bsize":3},"perf":{"precision":0.9687499999999996,"recall":0.9687499999999996,"f1":0.9687499999999996,"seconds":1.5089288353919983e-5,"exhaustive_search_seconds":5.953013896942139e-6,"evaluations":32.09375,"distances_sum":286.42534842388704}}, beam: 4, n: 99
==== END Opt. BeamSearch. Finished, best: {"score":4.084712755598831,"state":{"bsize":3},"perf":{"precision":0.9687499999999996,"recall":0.9687499999999996,"f1":0.9687499999999996,"seconds":1.5089288353919983e-5,"exhaustive_search_seconds":5.953013896942139e-6,"evaluations":32.09375,"distances_sum":286.42534842388704}}, n: 99
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.293577981651374,"state":{"bsize":3},"perf":{"precision":0.9774305555555552,"recall":0.9774305555555552,"f1":0.9774305555555552,"seconds":3.346987068653107e-5,"exhaustive_search_seconds":2.9109418392181396e-5,"evaluations":61.3125,"distances_sum":121.76894851215184}}, beam: 4, n: 999
==== END Opt. BeamSearch. Finished, best: {"score":17.293577981651374,"state":{"bsize":3},"perf":{"precision":0.9774305555555552,"recall":0.9774305555555552,"f1":0.9774305555555552,"seconds":3.346987068653107e-5,"exhaustive_search_seconds":2.9109418392181396e-5,"evaluations":61.3125,"distances_sum":121.76894851215184}}, n: 999
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 98.12924034302193, conf: {"bsize":4}, perf: {"precision":0.9843749999999998,"recall":0.9843749999999998,"f1":0.9843749999999998,"seconds":6.298907101154327e-5,"exhaustive_search_seconds":0.000377921387553215,"evaluations":102.9453125,"distances_sum":54.449436385184526}, best_list's length: 3, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 101.5872367180132, conf: {"bsize":6}, perf: {"precision":0.9973958333333333,"recall":0.9973958333333333,"f1":0.9973958333333333,"seconds":6.426498293876648e-5,"exhaustive_search_seconds":0.000377921387553215,"evaluations":99.40625,"distances_sum":54.36640717834234}, best_list's length: 5, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 98.32866920152091, conf: {"bsize":7}, perf: {"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":6.777606904506683e-5,"exhaustive_search_seconds":0.000377921387553215,"evaluations":102.734375,"distances_sum":54.34608865901828}, best_list's length: 6, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 97.44126290407655, conf: {"bsize":5}, perf: {"precision":0.9956597222222222,"recall":0.9956597222222222,"f1":0.9956597222222222,"seconds":6.26835972070694e-5,"exhaustive_search_seconds":0.000377921387553215,"evaluations":103.6796875,"distances_sum":54.371425338089466}, best_list's length: 8, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":101.5872367180132,"state":{"bsize":6},"perf":{"precision":0.9973958333333333,"recall":0.9973958333333333,"f1":0.9973958333333333,"seconds":6.426498293876648e-5,"exhaustive_search_seconds":0.000377921387553215,"evaluations":99.40625,"distances_sum":54.36640717834234}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":101.5872367180132,"state":{"bsize":6},"perf":{"precision":0.9973958333333333,"recall":0.9973958333333333,"f1":0.9973958333333333,"seconds":6.426498293876648e-5,"exhaustive_search_seconds":0.000377921387553215,"evaluations":99.40625,"distances_sum":54.36640717834234}}, beam: 4, n: 9999
==== END Opt. BeamSearch. Finished, best: {"score":101.5872367180132,"state":{"bsize":6},"perf":{"precision":0.9973958333333333,"recall":0.9973958333333333,"f1":0.9973958333333333,"seconds":6.426498293876648e-5,"exhaustive_search_seconds":0.000377921387553215,"evaluations":99.40625,"distances_sum":54.36640717834234}}, n: 9999
added n=10000, neighborhood=3, BeamSearch(6), SatNeighborhood(32), 2020-09-10T01:43:32.169
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(1302, 0.0076140417f0), Item(3253, 0.020623075f0), Item(9631, 0.024939543f0), Item(3613, 0.03041325f0), Item(7192, 0.032274015f0), Item(5618, 0.04929281f0), Item(6566, 0.05081806f0), Item(9948, 0.05343753f0), Item(8578, 0.054145336f0), Item(4693, 0.055227585f0)])
Test Summary:        | Pass  Total
some vector indexing |    2      2
    Testing SimilaritySearch tests passed 
