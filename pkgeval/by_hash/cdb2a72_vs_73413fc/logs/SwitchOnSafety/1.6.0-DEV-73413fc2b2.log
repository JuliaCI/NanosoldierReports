Julia Version 1.6.0-DEV.961
Commit 73413fc2b2 (2020-09-17 22:47 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed PositiveFactorizations ─────── v0.2.3
  Installed IniFile ────────────────────── v0.5.0
  Installed Compat ─────────────────────── v2.2.1
  Installed JSONSchema ─────────────────── v0.3.2
  Installed FixedPointNumbers ──────────── v0.8.4
  Installed Inflate ────────────────────── v0.1.2
  Installed GeometryTypes ──────────────── v0.8.3
  Installed SwitchOnSafety ─────────────── v0.1.2
  Installed Parameters ─────────────────── v0.12.1
  Installed RecipesBase ────────────────── v1.1.0
  Installed MacroTools ─────────────────── v0.5.5
  Installed DataAPI ────────────────────── v1.3.0
  Installed MathematicalSystems ────────── v0.11.4
  Installed PolyJuMP ───────────────────── v0.4.0
  Installed MathOptInterface ───────────── v0.9.16
  Installed Colors ─────────────────────── v0.12.4
  Installed CodecZlib ──────────────────── v0.7.0
  Installed SemialgebraicSets ──────────── v0.2.1
  Installed SortingAlgorithms ──────────── v0.3.1
  Installed FillArrays ─────────────────── v0.8.14
  Installed TranscodingStreams ─────────── v0.9.5
  Installed HybridSystems ──────────────── v0.3.1
  Installed ArnoldiMethod ──────────────── v0.0.4
  Installed Optim ──────────────────────── v0.20.1
  Installed StatsBase ──────────────────── v0.32.2
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed MappedArrays ───────────────── v0.2.2
  Installed Combinatorics ──────────────── v1.0.2
  Installed CodecBzip2 ─────────────────── v0.7.2
  Installed Parsers ────────────────────── v1.0.10
  Installed IterTools ──────────────────── v1.3.0
  Installed ForwardDiff ────────────────── v0.10.12
  Installed DataStructures ─────────────── v0.17.20
  Installed Compose ────────────────────── v0.8.2
  Installed CommonSubexpressions ───────── v0.3.0
  Installed DiffResults ────────────────── v1.0.2
  Installed MultivariatePolynomials ────── v0.3.10
  Installed OrderedCollections ─────────── v1.3.1
  Installed Reexport ───────────────────── v0.2.0
  Installed JSON ───────────────────────── v0.21.1
  Installed Calculus ───────────────────── v0.5.1
  Installed MultivariateBases ──────────── v0.1.2
  Installed StaticArrays ───────────────── v0.12.4
  Installed ColorTypes ─────────────────── v0.10.9
  Installed NaNMath ────────────────────── v0.3.4
  Installed DiffEqDiffTools ────────────── v1.7.0
  Installed SumOfSquares ───────────────── v0.4.1
  Installed Espresso ───────────────────── v0.6.0
  Installed DynamicPolynomials ─────────── v0.3.13
  Installed UnPack ─────────────────────── v1.0.2
  Installed Measures ───────────────────── v0.3.1
  Installed RowEchelon ─────────────────── v0.1.1
  Installed DiffRules ──────────────────── v1.0.1
  Installed SimpleTraits ───────────────── v0.9.3
  Installed ZipFile ────────────────────── v0.9.2
  Installed Bzip2_jll ──────────────────── v1.0.6+4
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed NLSolversBase ──────────────── v7.5.0
  Installed Zlib_jll ───────────────────── v1.2.11+16
  Installed JuMP ───────────────────────── v0.21.4
  Installed MutableArithmetics ─────────── v0.2.10
  Installed ParameterJuMP ──────────────── v0.2.0
  Installed BenchmarkTools ─────────────── v0.5.0
  Installed ArrayInterface ─────────────── v2.12.0
  Installed LightGraphs ────────────────── v1.3.3
  Installed Requires ───────────────────── v1.0.3
  Installed Missings ───────────────────── v0.4.4
  Installed SpecialFunctions ───────────── v0.10.3
  Installed MbedTLS ────────────────────── v1.0.2
  Installed HTTP ───────────────────────── v0.8.19
  Installed SetProg ────────────────────── v0.1.3
  Installed Polyhedra ──────────────────── v0.6.5
  Installed LineSearches ───────────────── v7.1.0
  Installed MbedTLS_jll ────────────────── v2.16.8+0
  Installed GraphPlot ──────────────────── v0.4.3
  Installed MultivariateMoments ────────── v0.3.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [ceb7f16a] + SwitchOnSafety v0.1.2
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [ec485272] + ArnoldiMethod v0.0.4
  [4fba245c] + ArrayInterface v2.12.0
  [6e4b80f9] + BenchmarkTools v0.5.0
  [6e34b625] + Bzip2_jll v1.0.6+4
  [49dc2e85] + Calculus v0.5.1
  [523fee87] + CodecBzip2 v0.7.2
  [944b1d66] + CodecZlib v0.7.0
  [3da002f7] + ColorTypes v0.10.9
  [5ae59095] + Colors v0.12.4
  [861a8166] + Combinatorics v1.0.2
  [bbf7d656] + CommonSubexpressions v0.3.0
  [34da2185] + Compat v2.2.1
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [a81c6b42] + Compose v0.8.2
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.20
  [01453d9d] + DiffEqDiffTools v1.7.0
  [163ba53b] + DiffResults v1.0.2
  [b552c78f] + DiffRules v1.0.1
  [7c1d4256] + DynamicPolynomials v0.3.13
  [6912e4f1] + Espresso v0.6.0
  [1a297f60] + FillArrays v0.8.14
  [53c48c17] + FixedPointNumbers v0.8.4
  [f6369f11] + ForwardDiff v0.10.12
  [4d00f742] + GeometryTypes v0.8.3
  [a2cc645c] + GraphPlot v0.4.3
  [cd3eb016] + HTTP v0.8.19
  [2207ec0c] + HybridSystems v0.3.1
  [d25df0c9] + Inflate v0.1.2
  [83e8ac13] + IniFile v0.5.0
  [c8e1da08] + IterTools v1.3.0
  [682c06a0] + JSON v0.21.1
  [7d188eb4] + JSONSchema v0.3.2
  [4076af6c] + JuMP v0.21.4
  [093fc24a] + LightGraphs v1.3.3
  [d3d80556] + LineSearches v7.1.0
  [1914dd2f] + MacroTools v0.5.5
  [dbb5928d] + MappedArrays v0.2.2
  [b8f27783] + MathOptInterface v0.9.16
  [d14a8603] + MathematicalSystems v0.11.4
  [739be429] + MbedTLS v1.0.2
  [c8ffd9c3] + MbedTLS_jll v2.16.8+0
  [442fdcdd] + Measures v0.3.1
  [e1d29d7a] + Missings v0.4.4
  [be282fd4] + MultivariateBases v0.1.2
  [f4abf1af] + MultivariateMoments v0.3.0
  [102ac46a] + MultivariatePolynomials v0.3.10
  [d8a4904e] + MutableArithmetics v0.2.10
  [d41bc354] + NLSolversBase v7.5.0
  [77ba4419] + NaNMath v0.3.4
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [429524aa] + Optim v0.20.1
  [bac558e1] + OrderedCollections v1.3.1
  [774612a8] + ParameterJuMP v0.2.0
  [d96e819e] + Parameters v0.12.1
  [69de0a69] + Parsers v1.0.10
  [ddf597a6] + PolyJuMP v0.4.0
  [67491407] + Polyhedra v0.6.5
  [85a6dd25] + PositiveFactorizations v0.2.3
  [3cdcf5f2] + RecipesBase v1.1.0
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v1.0.3
  [af85af4c] + RowEchelon v0.1.1
  [8e049039] + SemialgebraicSets v0.2.1
  [39881422] + SetProg v0.1.3
  [699a6c99] + SimpleTraits v0.9.3
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.10.3
  [90137ffa] + StaticArrays v0.12.4
  [2913bbd2] + StatsBase v0.32.2
  [4b9e565b] + SumOfSquares v0.4.1
  [ceb7f16a] + SwitchOnSafety v0.1.2
  [3bb67fe8] + TranscodingStreams v0.9.5
  [3a884ed6] + UnPack v1.0.2
  [a5390f91] + ZipFile v0.9.2
  [83775a58] + Zlib_jll v1.2.11+16
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing SwitchOnSafety
Status `/tmp/jl_WW8Kne/Project.toml`
  [0a46da34] CSDP v0.6.1
  [861a8166] Combinatorics v1.0.2
  [7c1d4256] DynamicPolynomials v0.3.13
  [e2685f51] ECOS v0.12.1
  [1a297f60] FillArrays v0.8.14
  [60bf3e95] GLPK v0.14.1
  [a2cc645c] GraphPlot v0.4.3
  [2207ec0c] HybridSystems v0.3.1
  [4076af6c] JuMP v0.21.4
  [093fc24a] LightGraphs v1.3.3
  [b8f27783] MathOptInterface v0.9.16
  [d14a8603] MathematicalSystems v0.11.4
  [f4abf1af] MultivariateMoments v0.3.0
  [102ac46a] MultivariatePolynomials v0.3.10
  [429524aa] Optim v0.20.1
  [774612a8] ParameterJuMP v0.2.0
  [67491407] Polyhedra v0.6.5
  [3cdcf5f2] RecipesBase v1.1.0
  [189a3867] Reexport v0.2.0
  [8e049039] SemialgebraicSets v0.2.1
  [39881422] SetProg v0.1.3
  [90137ffa] StaticArrays v0.12.4
  [4b9e565b] SumOfSquares v0.4.1
  [ceb7f16a] SwitchOnSafety v0.1.2
  [37e2e46d] LinearAlgebra
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_WW8Kne/Manifest.toml`
  [ec485272] ArnoldiMethod v0.0.4
  [4fba245c] ArrayInterface v2.12.0
  [6e4b80f9] BenchmarkTools v0.5.0
  [b99e7846] BinaryProvider v0.5.10
  [6e34b625] Bzip2_jll v1.0.6+4
  [fa961155] CEnum v0.4.1
  [0a46da34] CSDP v0.6.1
  [9ce75daa] CSDP_jll v6.2.0+9
  [49dc2e85] Calculus v0.5.1
  [523fee87] CodecBzip2 v0.7.2
  [944b1d66] CodecZlib v0.7.0
  [3da002f7] ColorTypes v0.10.9
  [5ae59095] Colors v0.12.4
  [861a8166] Combinatorics v1.0.2
  [bbf7d656] CommonSubexpressions v0.3.0
  [34da2185] Compat v2.2.1
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [a81c6b42] Compose v0.8.2
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.20
  [01453d9d] DiffEqDiffTools v1.7.0
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [7c1d4256] DynamicPolynomials v0.3.13
  [e2685f51] ECOS v0.12.1
  [c2c64177] ECOS_jll v2.0.5+0
  [6912e4f1] Espresso v0.6.0
  [1a297f60] FillArrays v0.8.14
  [53c48c17] FixedPointNumbers v0.8.4
  [f6369f11] ForwardDiff v0.10.12
  [60bf3e95] GLPK v0.14.1
  [e8aa6df9] GLPK_jll v4.64.0+0
  [781609d7] GMP_jll v6.2.0+2
  [92fee26a] GZip v0.5.1
  [4d00f742] GeometryTypes v0.8.3
  [c27321d9] Glob v1.3.0
  [a2cc645c] GraphPlot v0.4.3
  [cd3eb016] HTTP v0.8.19
  [2207ec0c] HybridSystems v0.3.1
  [d25df0c9] Inflate v0.1.2
  [83e8ac13] IniFile v0.5.0
  [c8e1da08] IterTools v1.3.0
  [682c06a0] JSON v0.21.1
  [7d188eb4] JSONSchema v0.3.2
  [4076af6c] JuMP v0.21.4
  [093fc24a] LightGraphs v1.3.3
  [d3d80556] LineSearches v7.1.0
  [1914dd2f] MacroTools v0.5.5
  [dbb5928d] MappedArrays v0.2.2
  [b8f27783] MathOptInterface v0.9.16
  [fdba3010] MathProgBase v0.7.8
  [d14a8603] MathematicalSystems v0.11.4
  [739be429] MbedTLS v1.0.2
  [c8ffd9c3] MbedTLS_jll v2.16.8+0
  [442fdcdd] Measures v0.3.1
  [e1d29d7a] Missings v0.4.4
  [be282fd4] MultivariateBases v0.1.2
  [f4abf1af] MultivariateMoments v0.3.0
  [102ac46a] MultivariatePolynomials v0.3.10
  [d8a4904e] MutableArithmetics v0.2.10
  [d41bc354] NLSolversBase v7.5.0
  [77ba4419] NaNMath v0.3.4
  [656ef2d0] OpenBLAS32_jll v0.3.9+4
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [429524aa] Optim v0.20.1
  [bac558e1] OrderedCollections v1.3.1
  [774612a8] ParameterJuMP v0.2.0
  [d96e819e] Parameters v0.12.1
  [69de0a69] Parsers v1.0.10
  [ddf597a6] PolyJuMP v0.4.0
  [67491407] Polyhedra v0.6.5
  [85a6dd25] PositiveFactorizations v0.2.3
  [3cdcf5f2] RecipesBase v1.1.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.3
  [af85af4c] RowEchelon v0.1.1
  [8e049039] SemialgebraicSets v0.2.1
  [169818f4] SemidefiniteModels v0.1.1
  [39881422] SetProg v0.1.3
  [699a6c99] SimpleTraits v0.9.3
  [a2af1166] SortingAlgorithms v0.3.1
  [276daf66] SpecialFunctions v0.10.3
  [90137ffa] StaticArrays v0.12.4
  [2913bbd2] StatsBase v0.32.2
  [4b9e565b] SumOfSquares v0.4.1
  [ceb7f16a] SwitchOnSafety v0.1.2
  [3bb67fe8] TranscodingStreams v0.9.5
  [3a884ed6] UnPack v1.0.2
  [a5390f91] ZipFile v0.9.2
  [83775a58] Zlib_jll v1.2.11+16
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Test Summary:   | Pass  Total
Spectral radius |    6      6
WARNING: both JuMP and SetProg export "AbstractVariable"; uses of it in module SwitchOnSafety must be qualified
WARNING: both DynamicPolynomials and SumOfSquares export "name"; uses of it in module SetProg must be qualified
WARNING: both JuMP and HybridSystems export "mode"; uses of it in module SwitchOnSafety must be qualified
WARNING: both JuMP and SetProg export "name"; uses of it in module SwitchOnSafety must be qualified
WARNING: both JuMP and SetProg export "objective_function"; uses of it in module SwitchOnSafety must be qualified
WARNING: both JuMP and SetProg export "objective_sense"; uses of it in module SwitchOnSafety must be qualified
JSR with MathOptInterface.OptimizerWithAttributes(CSDP.Optimizer, Pair{MathOptInterface.AbstractOptimizerAttribute, Any}[MathOptInterface.RawParameter("printlevel") => 0]): Error During Test at /home/pkgeval/.julia/packages/SwitchOnSafety/iHVIh/test/AJPR14e54.jl:43
  Got exception outside of a @test
  MethodError: no method matching copy(::SumOfSquares.SOSPolynomialSet{SemialgebraicSets.FullSpace, DynamicPolynomials.Monomial{true}, DynamicPolynomials.MonomialVector{true}, SumOfSquares.Certificate.Newton{SumOfSquares.SOSCone, MonomialBasis, Tuple{}}})
  Closest candidates are:
    copy(!Matched::S) where S<:Union{MathOptInterface.SOS1, MathOptInterface.SOS2} at /home/pkgeval/.julia/packages/MathOptInterface/8Mxwr/src/sets.jl:837
    copy(!Matched::Union{MathOptInterface.DualExponentialCone, MathOptInterface.ExponentialCone, MathOptInterface.Integer, MathOptInterface.ZeroOne, MathOptInterface.Complements, MathOptInterface.GeometricMeanCone, MathOptInterface.LogDetConeSquare, MathOptInterface.LogDetConeTriangle, MathOptInterface.Nonnegatives, MathOptInterface.Nonpositives, MathOptInterface.NormInfinityCone, MathOptInterface.NormNuclearCone, MathOptInterface.NormOneCone, MathOptInterface.NormSpectralCone, MathOptInterface.PositiveSemidefiniteConeSquare, MathOptInterface.PositiveSemidefiniteConeTriangle, MathOptInterface.Reals, MathOptInterface.RelativeEntropyCone, MathOptInterface.RootDetConeSquare, MathOptInterface.RootDetConeTriangle, MathOptInterface.RotatedSecondOrderCone, MathOptInterface.SecondOrderCone, MathOptInterface.Zeros, MathOptInterface.DualPowerCone, MathOptInterface.EqualTo, MathOptInterface.GreaterThan, MathOptInterface.Interval, MathOptInterface.LessThan, MathOptInterface.PowerCone, MathOptInterface.Semicontinuous, MathOptInterface.Semiinteger}) at /home/pkgeval/.julia/packages/MathOptInterface/8Mxwr/src/sets.jl:822
    copy(!Matched::F) where F<:Union{MathOptInterface.ScalarQuadraticFunction, MathOptInterface.VectorQuadraticFunction} at /home/pkgeval/.julia/packages/MathOptInterface/8Mxwr/src/functions.jl:415
    ...
  Stacktrace:
    [1] add_constraint(uf::MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}, f::MathOptInterface.VectorAffineFunction{Float64}, s::SumOfSquares.SOSPolynomialSet{SemialgebraicSets.FullSpace, DynamicPolynomials.Monomial{true}, DynamicPolynomials.MonomialVector{true}, SumOfSquares.Certificate.Newton{SumOfSquares.SOSCone, MonomialBasis, Tuple{}}})
      @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/8Mxwr/src/Utilities/universalfallback.jl:460
    [2] add_constraint(m::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.AbstractOptimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, func::MathOptInterface.VectorAffineFunction{Float64}, set::SumOfSquares.SOSPolynomialSet{SemialgebraicSets.FullSpace, DynamicPolynomials.Monomial{true}, DynamicPolynomials.MonomialVector{true}, SumOfSquares.Certificate.Newton{SumOfSquares.SOSCone, MonomialBasis, Tuple{}}})
      @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/8Mxwr/src/Utilities/cachingoptimizer.jl:362
    [3] moi_add_constraint(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.AbstractOptimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, f::MathOptInterface.VectorAffineFunction{Float64}, s::SumOfSquares.SOSPolynomialSet{SemialgebraicSets.FullSpace, DynamicPolynomials.Monomial{true}, DynamicPolynomials.MonomialVector{true}, SumOfSquares.Certificate.Newton{SumOfSquares.SOSCone, MonomialBasis, Tuple{}}})
      @ JuMP ~/.julia/packages/JuMP/e0Uc2/src/constraints.jl:390
    [4] add_constraint(model::Model, con::VectorConstraint{AffExpr, SumOfSquares.SOSPolynomialSet{SemialgebraicSets.FullSpace, DynamicPolynomials.Monomial{true}, DynamicPolynomials.MonomialVector{true}, SumOfSquares.Certificate.Newton{SumOfSquares.SOSCone, MonomialBasis, Tuple{}}}, PolyJuMP.PolynomialShape{DynamicPolynomials.Monomial{true}, DynamicPolynomials.MonomialVector{true}}}, name::String)
      @ JuMP ~/.julia/packages/JuMP/e0Uc2/src/constraints.jl:402
    [5] add_constraint(model::Model, con::BridgeableConstraint{VectorConstraint{AffExpr, SumOfSquares.SOSPolynomialSet{SemialgebraicSets.FullSpace, DynamicPolynomials.Monomial{true}, DynamicPolynomials.MonomialVector{true}, SumOfSquares.Certificate.Newton{SumOfSquares.SOSCone, MonomialBasis, Tuple{}}}, PolyJuMP.PolynomialShape{DynamicPolynomials.Monomial{true}, DynamicPolynomials.MonomialVector{true}}}, UnionAll}, name::String)
      @ JuMP ~/.julia/packages/JuMP/e0Uc2/src/constraints.jl:269
    [6] add_constraint(model::Model, con::BridgeableConstraint{BridgeableConstraint{BridgeableConstraint{BridgeableConstraint{VectorConstraint{AffExpr, SumOfSquares.SOSPolynomialSet{SemialgebraicSets.FullSpace, DynamicPolynomials.Monomial{true}, DynamicPolynomials.MonomialVector{true}, SumOfSquares.Certificate.Newton{SumOfSquares.SOSCone, MonomialBasis, Tuple{}}}, PolyJuMP.PolynomialShape{DynamicPolynomials.Monomial{true}, DynamicPolynomials.MonomialVector{true}}}, UnionAll}, UnionAll}, UnionAll}, UnionAll})
      @ JuMP ~/.julia/packages/JuMP/e0Uc2/src/constraints.jl:268
    [7] load(model::Model, constraint::SetProg.InclusionConstraint{SetProg.Sets.LinearImage{SetProg.SetVariableRef{Model, PolySet}, Float64, Matrix{Float64}}, SetProg.SetVariableRef{Model, PolySet}, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}})
      @ SetProg ~/.julia/packages/SetProg/lVxiA/src/constraints.jl:18
    [8] load(model::Model, d::SetProg.Data)
      @ SetProg ~/.julia/packages/SetProg/lVxiA/src/optimize.jl:7
    [9] optimize_hook(model::Model)
      @ SetProg ~/.julia/packages/SetProg/lVxiA/src/optimize.jl:28
   [10] optimize!(model::Model, optimizer_factory::Nothing; bridge_constraints::Bool, ignore_optimize_hook::Bool, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ JuMP ~/.julia/packages/JuMP/e0Uc2/src/optimizer_interface.jl:120
   [11] optimize!
      @ ~/.julia/packages/JuMP/e0Uc2/src/optimizer_interface.jl:106 [inlined]
   [12] invariant_sets!(sets::HybridSystems.OneStateStateProperty{SetProg.Sets.PolySet{Float64, MonomialBasis{DynamicPolynomials.Monomial{true}, DynamicPolynomials.MonomialVector{true}}, Float64}}, modes_to_compute::UnitRange{Int64}, s::ScaledHybridSystem{Float64, HybridSystem{OneStateAutomaton, ContinuousIdentitySystem, LinearMap{Int64, Matrix{Int64}}, AutonomousSwitching, Vector{ContinuousIdentitySystem}, Vector{LinearMap{Int64, Matrix{Int64}}}, FillArrays.Fill{AutonomousSwitching, 1, Tuple{Base.OneTo{Int64}}}}}, optimizer_constructor::MathOptInterface.OptimizerWithAttributes, set_variables::Vector{PolySet}; λ::Dict{HybridSystems.OneStateTransition, Float64}, enabled::Base.OneTo{Int64}, volume_heuristic::Nothing, infeasibility_certificates::HybridSystems.OneStateTransitionProperty{MultivariateMoments.MomentMatrix{Float64, MonomialBasis{DynamicPolynomials.Monomial{true}, DynamicPolynomials.MonomialVector{true}}}}, verbose::Int64)
      @ SwitchOnSafety ~/.julia/packages/SwitchOnSafety/iHVIh/src/invariant.jl:193
   [13] soslyap(s::ScaledHybridSystem{Float64, HybridSystem{OneStateAutomaton, ContinuousIdentitySystem, LinearMap{Int64, Matrix{Int64}}, AutonomousSwitching, Vector{ContinuousIdentitySystem}, Vector{LinearMap{Int64, Matrix{Int64}}}, FillArrays.Fill{AutonomousSwitching, 1, Tuple{Base.OneTo{Int64}}}}}, d::Int64; optimizer_constructor::MathOptInterface.OptimizerWithAttributes)
      @ SwitchOnSafety ~/.julia/packages/SwitchOnSafety/iHVIh/src/sos.jl:73
   [14] _lyap
      @ ~/.julia/packages/SwitchOnSafety/iHVIh/src/sos.jl:177 [inlined]
   [15] soslyapbs(s::HybridSystem{OneStateAutomaton, ContinuousIdentitySystem, LinearMap{Int64, Matrix{Int64}}, AutonomousSwitching, Vector{ContinuousIdentitySystem}, Vector{LinearMap{Int64, Matrix{Int64}}}, FillArrays.Fill{AutonomousSwitching, 1, Tuple{Base.OneTo{Int64}}}}, d::Int64, soslb::Float64, dual::Nothing, sosub::Float64, primal::Nothing; verbose::Int64, tol::Float64, step::Float64, scaling::Float64, ranktols::Float64, disttols::Float64, kws::Base.Iterators.Pairs{Symbol, MathOptInterface.OptimizerWithAttributes, Tuple{Symbol}, NamedTuple{(:optimizer_constructor,), Tuple{MathOptInterface.OptimizerWithAttributes}}})
      @ SwitchOnSafety ~/.julia/packages/SwitchOnSafety/iHVIh/src/sos.jl:181
   [16] soslyapb(s::HybridSystem{OneStateAutomaton, ContinuousIdentitySystem, LinearMap{Int64, Matrix{Int64}}, AutonomousSwitching, Vector{ContinuousIdentitySystem}, Vector{LinearMap{Int64, Matrix{Int64}}}, FillArrays.Fill{AutonomousSwitching, 1, Tuple{Base.OneTo{Int64}}}}, d::Int64; optimizer_constructor::MathOptInterface.OptimizerWithAttributes, tol::Float64, cached::Bool, kws::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ SwitchOnSafety ~/.julia/packages/SwitchOnSafety/iHVIh/src/sos.jl:264
   [17] macro expansion
      @ ~/.julia/packages/SwitchOnSafety/iHVIh/test/AJPR14e54.jl:46 [inlined]
   [18] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1188 [inlined]
   [19] macro expansion
      @ ~/.julia/packages/SwitchOnSafety/iHVIh/test/AJPR14e54.jl:43 [inlined]
   [20] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [21] top-level scope
      @ ~/.julia/packages/SwitchOnSafety/iHVIh/test/AJPR14e54.jl:8
   [22] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [23] top-level scope
      @ ~/.julia/packages/SwitchOnSafety/iHVIh/test/discrete.jl:4
   [24] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [25] top-level scope
      @ ~/.julia/packages/SwitchOnSafety/iHVIh/test/discrete.jl:2
   [26] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [27] top-level scope
      @ ~/.julia/packages/SwitchOnSafety/iHVIh/test/jsr.jl:3
   [28] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [29] top-level scope
      @ ~/.julia/packages/SwitchOnSafety/iHVIh/test/runtests.jl:8
   [30] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [31] top-level scope
      @ none:6
   [32] eval(m::Module, e::Any)
      @ Core ./boot.jl:345
   [33] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [34] _start()
      @ Base ./client.jl:485
[AJPR14] Example 5.4: Test Failed at /home/pkgeval/.julia/packages/SwitchOnSafety/iHVIh/test/AJPR14e54.jl:65
  Expression: ≈(log(getub(s)), log(3.924086919), rtol = 0.0005)
   Evaluated: 1.3807098173983514 ≈ 1.3671336920694164 (rtol=0.0005)
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/SwitchOnSafety/iHVIh/test/AJPR14e54.jl:65 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] top-level scope
   @ ~/.julia/packages/SwitchOnSafety/iHVIh/test/AJPR14e54.jl:8
[AJPR14] Example 5.4: Test Failed at /home/pkgeval/.julia/packages/SwitchOnSafety/iHVIh/test/AJPR14e54.jl:66
  Expression: getsmp(s) == smp
   Evaluated: PSW(2.9999999999999996, [2]) == PSW(3.9173847151482413, [1, 2])
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/SwitchOnSafety/iHVIh/test/AJPR14e54.jl:66 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] top-level scope
   @ ~/.julia/packages/SwitchOnSafety/iHVIh/test/AJPR14e54.jl:8
[AJPR14] Example 5.4: Test Failed at /home/pkgeval/.julia/packages/SwitchOnSafety/iHVIh/test/AJPR14e54.jl:67
  Expression: ≈(getlb(s), 3.917384715148, rtol = 1.0e-12)
   Evaluated: 0.0 ≈ 3.917384715148 (rtol=1.0e-12)
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/SwitchOnSafety/iHVIh/test/AJPR14e54.jl:67 [inlined]
 [2] macro expansion
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [3] top-level scope
   @ ~/.julia/packages/SwitchOnSafety/iHVIh/test/AJPR14e54.jl:8
[AP12] Example 2.1: Error During Test at /home/pkgeval/.julia/packages/SwitchOnSafety/iHVIh/test/AP12e21.jl:7
  Got exception outside of a @test
  MethodError: no method matching copy(::SumOfSquares.SOSPolynomialSet{SemialgebraicSets.FullSpace, DynamicPolynomials.Monomial{true}, DynamicPolynomials.MonomialVector{true}, SumOfSquares.Certificate.Newton{SumOfSquares.SOSCone, MonomialBasis, Tuple{}}})
  Closest candidates are:
    copy(!Matched::S) where S<:Union{MathOptInterface.SOS1, MathOptInterface.SOS2} at /home/pkgeval/.julia/packages/MathOptInterface/8Mxwr/src/sets.jl:837
    copy(!Matched::Union{MathOptInterface.DualExponentialCone, MathOptInterface.ExponentialCone, MathOptInterface.Integer, MathOptInterface.ZeroOne, MathOptInterface.Complements, MathOptInterface.GeometricMeanCone, MathOptInterface.LogDetConeSquare, MathOptInterface.LogDetConeTriangle, MathOptInterface.Nonnegatives, MathOptInterface.Nonpositives, MathOptInterface.NormInfinityCone, MathOptInterface.NormNuclearCone, MathOptInterface.NormOneCone, MathOptInterface.NormSpectralCone, MathOptInterface.PositiveSemidefiniteConeSquare, MathOptInterface.PositiveSemidefiniteConeTriangle, MathOptInterface.Reals, MathOptInterface.RelativeEntropyCone, MathOptInterface.RootDetConeSquare, MathOptInterface.RootDetConeTriangle, MathOptInterface.RotatedSecondOrderCone, MathOptInterface.SecondOrderCone, MathOptInterface.Zeros, MathOptInterface.DualPowerCone, MathOptInterface.EqualTo, MathOptInterface.GreaterThan, MathOptInterface.Interval, MathOptInterface.LessThan, MathOptInterface.PowerCone, MathOptInterface.Semicontinuous, MathOptInterface.Semiinteger}) at /home/pkgeval/.julia/packages/MathOptInterface/8Mxwr/src/sets.jl:822
    copy(!Matched::F) where F<:Union{MathOptInterface.ScalarQuadraticFunction, MathOptInterface.VectorQuadraticFunction} at /home/pkgeval/.julia/packages/MathOptInterface/8Mxwr/src/functions.jl:415
    ...
  Stacktrace:
    [1] add_constraint(uf::MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}, f::MathOptInterface.VectorAffineFunction{Float64}, s::SumOfSquares.SOSPolynomialSet{SemialgebraicSets.FullSpace, DynamicPolynomials.Monomial{true}, DynamicPolynomials.MonomialVector{true}, SumOfSquares.Certificate.Newton{SumOfSquares.SOSCone, MonomialBasis, Tuple{}}})
      @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/8Mxwr/src/Utilities/universalfallback.jl:460
    [2] add_constraint(m::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.AbstractOptimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, func::MathOptInterface.VectorAffineFunction{Float64}, set::SumOfSquares.SOSPolynomialSet{SemialgebraicSets.FullSpace, DynamicPolynomials.Monomial{true}, DynamicPolynomials.MonomialVector{true}, SumOfSquares.Certificate.Newton{SumOfSquares.SOSCone, MonomialBasis, Tuple{}}})
      @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/8Mxwr/src/Utilities/cachingoptimizer.jl:362
    [3] moi_add_constraint(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.AbstractOptimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, f::MathOptInterface.VectorAffineFunction{Float64}, s::SumOfSquares.SOSPolynomialSet{SemialgebraicSets.FullSpace, DynamicPolynomials.Monomial{true}, DynamicPolynomials.MonomialVector{true}, SumOfSquares.Certificate.Newton{SumOfSquares.SOSCone, MonomialBasis, Tuple{}}})
      @ JuMP ~/.julia/packages/JuMP/e0Uc2/src/constraints.jl:390
    [4] add_constraint(model::Model, con::VectorConstraint{AffExpr, SumOfSquares.SOSPolynomialSet{SemialgebraicSets.FullSpace, DynamicPolynomials.Monomial{true}, DynamicPolynomials.MonomialVector{true}, SumOfSquares.Certificate.Newton{SumOfSquares.SOSCone, MonomialBasis, Tuple{}}}, PolyJuMP.PolynomialShape{DynamicPolynomials.Monomial{true}, DynamicPolynomials.MonomialVector{true}}}, name::String)
      @ JuMP ~/.julia/packages/JuMP/e0Uc2/src/constraints.jl:402
    [5] add_constraint(model::Model, con::BridgeableConstraint{VectorConstraint{AffExpr, SumOfSquares.SOSPolynomialSet{SemialgebraicSets.FullSpace, DynamicPolynomials.Monomial{true}, DynamicPolynomials.MonomialVector{true}, SumOfSquares.Certificate.Newton{SumOfSquares.SOSCone, MonomialBasis, Tuple{}}}, PolyJuMP.PolynomialShape{DynamicPolynomials.Monomial{true}, DynamicPolynomials.MonomialVector{true}}}, UnionAll}, name::String)
      @ JuMP ~/.julia/packages/JuMP/e0Uc2/src/constraints.jl:269
    [6] add_constraint(model::Model, con::BridgeableConstraint{BridgeableConstraint{BridgeableConstraint{BridgeableConstraint{VectorConstraint{AffExpr, SumOfSquares.SOSPolynomialSet{SemialgebraicSets.FullSpace, DynamicPolynomials.Monomial{true}, DynamicPolynomials.MonomialVector{true}, SumOfSquares.Certificate.Newton{SumOfSquares.SOSCone, MonomialBasis, Tuple{}}}, PolyJuMP.PolynomialShape{DynamicPolynomials.Monomial{true}, DynamicPolynomials.MonomialVector{true}}}, UnionAll}, UnionAll}, UnionAll}, UnionAll})
      @ JuMP ~/.julia/packages/JuMP/e0Uc2/src/constraints.jl:268
    [7] load(model::Model, constraint::SetProg.InclusionConstraint{SetProg.Sets.LinearImage{SetProg.SetVariableRef{Model, PolySet}, Float64, Matrix{Float64}}, SetProg.SetVariableRef{Model, PolySet}, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}})
      @ SetProg ~/.julia/packages/SetProg/lVxiA/src/constraints.jl:18
    [8] load(model::Model, d::SetProg.Data)
      @ SetProg ~/.julia/packages/SetProg/lVxiA/src/optimize.jl:7
    [9] optimize_hook(model::Model)
      @ SetProg ~/.julia/packages/SetProg/lVxiA/src/optimize.jl:28
   [10] optimize!(model::Model, optimizer_factory::Nothing; bridge_constraints::Bool, ignore_optimize_hook::Bool, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ JuMP ~/.julia/packages/JuMP/e0Uc2/src/optimizer_interface.jl:120
   [11] optimize!
      @ ~/.julia/packages/JuMP/e0Uc2/src/optimizer_interface.jl:106 [inlined]
   [12] invariant_sets!(sets::HybridSystems.OneStateStateProperty{SetProg.Sets.PolySet{Float64, MonomialBasis{DynamicPolynomials.Monomial{true}, DynamicPolynomials.MonomialVector{true}}, Float64}}, modes_to_compute::UnitRange{Int64}, s::ScaledHybridSystem{Float64, HybridSystem{OneStateAutomaton, ContinuousIdentitySystem, LinearMap{Int64, Matrix{Int64}}, AutonomousSwitching, Vector{ContinuousIdentitySystem}, Vector{LinearMap{Int64, Matrix{Int64}}}, FillArrays.Fill{AutonomousSwitching, 1, Tuple{Base.OneTo{Int64}}}}}, optimizer_constructor::MathOptInterface.OptimizerWithAttributes, set_variables::Vector{PolySet}; λ::Dict{HybridSystems.OneStateTransition, Float64}, enabled::Base.OneTo{Int64}, volume_heuristic::Nothing, infeasibility_certificates::HybridSystems.OneStateTransitionProperty{MultivariateMoments.MomentMatrix{Float64, MonomialBasis{DynamicPolynomials.Monomial{true}, DynamicPolynomials.MonomialVector{true}}}}, verbose::Int64)
      @ SwitchOnSafety ~/.julia/packages/SwitchOnSafety/iHVIh/src/invariant.jl:193
   [13] soslyap(s::ScaledHybridSystem{Float64, HybridSystem{OneStateAutomaton, ContinuousIdentitySystem, LinearMap{Int64, Matrix{Int64}}, AutonomousSwitching, Vector{ContinuousIdentitySystem}, Vector{LinearMap{Int64, Matrix{Int64}}}, FillArrays.Fill{AutonomousSwitching, 1, Tuple{Base.OneTo{Int64}}}}}, d::Int64; optimizer_constructor::MathOptInterface.OptimizerWithAttributes)
      @ SwitchOnSafety ~/.julia/packages/SwitchOnSafety/iHVIh/src/sos.jl:73
   [14] _lyap
      @ ~/.julia/packages/SwitchOnSafety/iHVIh/src/sos.jl:177 [inlined]
   [15] soslyapbs(s::HybridSystem{OneStateAutomaton, ContinuousIdentitySystem, LinearMap{Int64, Matrix{Int64}}, AutonomousSwitching, Vector{ContinuousIdentitySystem}, Vector{LinearMap{Int64, Matrix{Int64}}}, FillArrays.Fill{AutonomousSwitching, 1, Tuple{Base.OneTo{Int64}}}}, d::Int64, soslb::Float64, dual::Nothing, sosub::Float64, primal::Nothing; verbose::Int64, tol::Float64, step::Float64, scaling::Float64, ranktols::Float64, disttols::Float64, kws::Base.Iterators.Pairs{Symbol, MathOptInterface.OptimizerWithAttributes, Tuple{Symbol}, NamedTuple{(:optimizer_constructor,), Tuple{MathOptInterface.OptimizerWithAttributes}}})
      @ SwitchOnSafety ~/.julia/packages/SwitchOnSafety/iHVIh/src/sos.jl:181
   [16] soslyapb(s::HybridSystem{OneStateAutomaton, ContinuousIdentitySystem, LinearMap{Int64, Matrix{Int64}}, AutonomousSwitching, Vector{ContinuousIdentitySystem}, Vector{LinearMap{Int64, Matrix{Int64}}}, FillArrays.Fill{AutonomousSwitching, 1, Tuple{Base.OneTo{Int64}}}}, d::Int64; optimizer_constructor::MathOptInterface.OptimizerWithAttributes, tol::Float64, cached::Bool, kws::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ SwitchOnSafety ~/.julia/packages/SwitchOnSafety/iHVIh/src/sos.jl:264
   [17] macro expansion
      @ ~/.julia/packages/SwitchOnSafety/iHVIh/test/AP12e21.jl:17 [inlined]
   [18] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [19] top-level scope
      @ ~/.julia/packages/SwitchOnSafety/iHVIh/test/AP12e21.jl:8
   [20] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [21] top-level scope
      @ ~/.julia/packages/SwitchOnSafety/iHVIh/test/discrete.jl:5
   [22] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [23] top-level scope
      @ ~/.julia/packages/SwitchOnSafety/iHVIh/test/discrete.jl:2
   [24] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [25] top-level scope
      @ ~/.julia/packages/SwitchOnSafety/iHVIh/test/jsr.jl:3
   [26] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [27] top-level scope
      @ ~/.julia/packages/SwitchOnSafety/iHVIh/test/runtests.jl:8
   [28] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [29] top-level scope
      @ none:6
   [30] eval(m::Module, e::Any)
      @ Core ./boot.jl:345
   [31] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [32] _start()
      @ Base ./client.jl:485
[JCG14] Example 6.1: Error During Test at /home/pkgeval/.julia/packages/SwitchOnSafety/iHVIh/test/JCG14e61.jl:7
  Got exception outside of a @test
  MethodError: no method matching copy(::SumOfSquares.SOSPolynomialSet{SemialgebraicSets.FullSpace, DynamicPolynomials.Monomial{true}, DynamicPolynomials.MonomialVector{true}, SumOfSquares.Certificate.Newton{SumOfSquares.SOSCone, MonomialBasis, Tuple{}}})
  Closest candidates are:
    copy(!Matched::S) where S<:Union{MathOptInterface.SOS1, MathOptInterface.SOS2} at /home/pkgeval/.julia/packages/MathOptInterface/8Mxwr/src/sets.jl:837
    copy(!Matched::Union{MathOptInterface.DualExponentialCone, MathOptInterface.ExponentialCone, MathOptInterface.Integer, MathOptInterface.ZeroOne, MathOptInterface.Complements, MathOptInterface.GeometricMeanCone, MathOptInterface.LogDetConeSquare, MathOptInterface.LogDetConeTriangle, MathOptInterface.Nonnegatives, MathOptInterface.Nonpositives, MathOptInterface.NormInfinityCone, MathOptInterface.NormNuclearCone, MathOptInterface.NormOneCone, MathOptInterface.NormSpectralCone, MathOptInterface.PositiveSemidefiniteConeSquare, MathOptInterface.PositiveSemidefiniteConeTriangle, MathOptInterface.Reals, MathOptInterface.RelativeEntropyCone, MathOptInterface.RootDetConeSquare, MathOptInterface.RootDetConeTriangle, MathOptInterface.RotatedSecondOrderCone, MathOptInterface.SecondOrderCone, MathOptInterface.Zeros, MathOptInterface.DualPowerCone, MathOptInterface.EqualTo, MathOptInterface.GreaterThan, MathOptInterface.Interval, MathOptInterface.LessThan, MathOptInterface.PowerCone, MathOptInterface.Semicontinuous, MathOptInterface.Semiinteger}) at /home/pkgeval/.julia/packages/MathOptInterface/8Mxwr/src/sets.jl:822
    copy(!Matched::F) where F<:Union{MathOptInterface.ScalarQuadraticFunction, MathOptInterface.VectorQuadraticFunction} at /home/pkgeval/.julia/packages/MathOptInterface/8Mxwr/src/functions.jl:415
    ...
  Stacktrace:
    [1] add_constraint(uf::MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}, f::MathOptInterface.VectorAffineFunction{Float64}, s::SumOfSquares.SOSPolynomialSet{SemialgebraicSets.FullSpace, DynamicPolynomials.Monomial{true}, DynamicPolynomials.MonomialVector{true}, SumOfSquares.Certificate.Newton{SumOfSquares.SOSCone, MonomialBasis, Tuple{}}})
      @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/8Mxwr/src/Utilities/universalfallback.jl:460
    [2] add_constraint(m::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.AbstractOptimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, func::MathOptInterface.VectorAffineFunction{Float64}, set::SumOfSquares.SOSPolynomialSet{SemialgebraicSets.FullSpace, DynamicPolynomials.Monomial{true}, DynamicPolynomials.MonomialVector{true}, SumOfSquares.Certificate.Newton{SumOfSquares.SOSCone, MonomialBasis, Tuple{}}})
      @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/8Mxwr/src/Utilities/cachingoptimizer.jl:362
    [3] moi_add_constraint(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.AbstractOptimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, f::MathOptInterface.VectorAffineFunction{Float64}, s::SumOfSquares.SOSPolynomialSet{SemialgebraicSets.FullSpace, DynamicPolynomials.Monomial{true}, DynamicPolynomials.MonomialVector{true}, SumOfSquares.Certificate.Newton{SumOfSquares.SOSCone, MonomialBasis, Tuple{}}})
      @ JuMP ~/.julia/packages/JuMP/e0Uc2/src/constraints.jl:390
    [4] add_constraint(model::Model, con::VectorConstraint{AffExpr, SumOfSquares.SOSPolynomialSet{SemialgebraicSets.FullSpace, DynamicPolynomials.Monomial{true}, DynamicPolynomials.MonomialVector{true}, SumOfSquares.Certificate.Newton{SumOfSquares.SOSCone, MonomialBasis, Tuple{}}}, PolyJuMP.PolynomialShape{DynamicPolynomials.Monomial{true}, DynamicPolynomials.MonomialVector{true}}}, name::String)
      @ JuMP ~/.julia/packages/JuMP/e0Uc2/src/constraints.jl:402
    [5] add_constraint(model::Model, con::BridgeableConstraint{VectorConstraint{AffExpr, SumOfSquares.SOSPolynomialSet{SemialgebraicSets.FullSpace, DynamicPolynomials.Monomial{true}, DynamicPolynomials.MonomialVector{true}, SumOfSquares.Certificate.Newton{SumOfSquares.SOSCone, MonomialBasis, Tuple{}}}, PolyJuMP.PolynomialShape{DynamicPolynomials.Monomial{true}, DynamicPolynomials.MonomialVector{true}}}, UnionAll}, name::String)
      @ JuMP ~/.julia/packages/JuMP/e0Uc2/src/constraints.jl:269
    [6] add_constraint(model::Model, con::BridgeableConstraint{BridgeableConstraint{BridgeableConstraint{BridgeableConstraint{VectorConstraint{AffExpr, SumOfSquares.SOSPolynomialSet{SemialgebraicSets.FullSpace, DynamicPolynomials.Monomial{true}, DynamicPolynomials.MonomialVector{true}, SumOfSquares.Certificate.Newton{SumOfSquares.SOSCone, MonomialBasis, Tuple{}}}, PolyJuMP.PolynomialShape{DynamicPolynomials.Monomial{true}, DynamicPolynomials.MonomialVector{true}}}, UnionAll}, UnionAll}, UnionAll}, UnionAll})
      @ JuMP ~/.julia/packages/JuMP/e0Uc2/src/constraints.jl:268
    [7] load(model::Model, constraint::SetProg.InclusionConstraint{SetProg.Sets.LinearImage{SetProg.SetVariableRef{Model, PolySet}, Float64, Matrix{Float64}}, SetProg.SetVariableRef{Model, PolySet}, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}})
      @ SetProg ~/.julia/packages/SetProg/lVxiA/src/constraints.jl:18
    [8] load(model::Model, d::SetProg.Data)
      @ SetProg ~/.julia/packages/SetProg/lVxiA/src/optimize.jl:7
    [9] optimize_hook(model::Model)
      @ SetProg ~/.julia/packages/SetProg/lVxiA/src/optimize.jl:28
   [10] optimize!(model::Model, optimizer_factory::Nothing; bridge_constraints::Bool, ignore_optimize_hook::Bool, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ JuMP ~/.julia/packages/JuMP/e0Uc2/src/optimizer_interface.jl:120
   [11] optimize!
      @ ~/.julia/packages/JuMP/e0Uc2/src/optimizer_interface.jl:106 [inlined]
   [12] invariant_sets!(sets::HybridSystems.OneStateStateProperty{SetProg.Sets.PolySet{Float64, MonomialBasis{DynamicPolynomials.Monomial{true}, DynamicPolynomials.MonomialVector{true}}, Float64}}, modes_to_compute::UnitRange{Int64}, s::ScaledHybridSystem{Float64, HybridSystem{OneStateAutomaton, ContinuousIdentitySystem, LinearMap{Int64, Matrix{Int64}}, AutonomousSwitching, Vector{ContinuousIdentitySystem}, Vector{LinearMap{Int64, Matrix{Int64}}}, FillArrays.Fill{AutonomousSwitching, 1, Tuple{Base.OneTo{Int64}}}}}, optimizer_constructor::MathOptInterface.OptimizerWithAttributes, set_variables::Vector{PolySet}; λ::Dict{HybridSystems.OneStateTransition, Float64}, enabled::Base.OneTo{Int64}, volume_heuristic::Nothing, infeasibility_certificates::HybridSystems.OneStateTransitionProperty{MultivariateMoments.MomentMatrix{Float64, MonomialBasis{DynamicPolynomials.Monomial{true}, DynamicPolynomials.MonomialVector{true}}}}, verbose::Int64)
      @ SwitchOnSafety ~/.julia/packages/SwitchOnSafety/iHVIh/src/invariant.jl:193
   [13] soslyap(s::ScaledHybridSystem{Float64, HybridSystem{OneStateAutomaton, ContinuousIdentitySystem, LinearMap{Int64, Matrix{Int64}}, AutonomousSwitching, Vector{ContinuousIdentitySystem}, Vector{LinearMap{Int64, Matrix{Int64}}}, FillArrays.Fill{AutonomousSwitching, 1, Tuple{Base.OneTo{Int64}}}}}, d::Int64; optimizer_constructor::MathOptInterface.OptimizerWithAttributes)
      @ SwitchOnSafety ~/.julia/packages/SwitchOnSafety/iHVIh/src/sos.jl:73
   [14] _lyap
      @ ~/.julia/packages/SwitchOnSafety/iHVIh/src/sos.jl:177 [inlined]
   [15] soslyapbs(s::HybridSystem{OneStateAutomaton, ContinuousIdentitySystem, LinearMap{Int64, Matrix{Int64}}, AutonomousSwitching, Vector{ContinuousIdentitySystem}, Vector{LinearMap{Int64, Matrix{Int64}}}, FillArrays.Fill{AutonomousSwitching, 1, Tuple{Base.OneTo{Int64}}}}, d::Int64, soslb::Float64, dual::Nothing, sosub::Float64, primal::Nothing; verbose::Int64, tol::Float64, step::Float64, scaling::Float64, ranktols::Float64, disttols::Float64, kws::Base.Iterators.Pairs{Symbol, MathOptInterface.OptimizerWithAttributes, Tuple{Symbol}, NamedTuple{(:optimizer_constructor,), Tuple{MathOptInterface.OptimizerWithAttributes}}})
      @ SwitchOnSafety ~/.julia/packages/SwitchOnSafety/iHVIh/src/sos.jl:181
   [16] soslyapb(s::HybridSystem{OneStateAutomaton, ContinuousIdentitySystem, LinearMap{Int64, Matrix{Int64}}, AutonomousSwitching, Vector{ContinuousIdentitySystem}, Vector{LinearMap{Int64, Matrix{Int64}}}, FillArrays.Fill{AutonomousSwitching, 1, Tuple{Base.OneTo{Int64}}}}, d::Int64; optimizer_constructor::MathOptInterface.OptimizerWithAttributes, tol::Float64, cached::Bool, kws::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ SwitchOnSafety ~/.julia/packages/SwitchOnSafety/iHVIh/src/sos.jl:264
   [17] macro expansion
      @ ~/.julia/packages/SwitchOnSafety/iHVIh/test/JCG14e61.jl:23 [inlined]
   [18] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [19] top-level scope
      @ ~/.julia/packages/SwitchOnSafety/iHVIh/test/JCG14e61.jl:8
   [20] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [21] top-level scope
      @ ~/.julia/packages/SwitchOnSafety/iHVIh/test/discrete.jl:6
   [22] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [23] top-level scope
      @ ~/.julia/packages/SwitchOnSafety/iHVIh/test/discrete.jl:2
   [24] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [25] top-level scope
      @ ~/.julia/packages/SwitchOnSafety/iHVIh/test/jsr.jl:3
   [26] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [27] top-level scope
      @ ~/.julia/packages/SwitchOnSafety/iHVIh/test/runtests.jl:8
   [28] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [29] top-level scope
      @ none:6
   [30] eval(m::Module, e::Any)
      @ Core ./boot.jl:345
   [31] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [32] _start()
      @ Base ./client.jl:485
[JCG14] Example 6.3: Error During Test at /home/pkgeval/.julia/packages/SwitchOnSafety/iHVIh/test/JCG14e63.jl:7
  Got exception outside of a @test
  MethodError: no method matching copy(::SumOfSquares.SOSPolynomialSet{SemialgebraicSets.FullSpace, DynamicPolynomials.Monomial{true}, DynamicPolynomials.MonomialVector{true}, SumOfSquares.Certificate.Newton{SumOfSquares.SOSCone, MonomialBasis, Tuple{}}})
  Closest candidates are:
    copy(!Matched::S) where S<:Union{MathOptInterface.SOS1, MathOptInterface.SOS2} at /home/pkgeval/.julia/packages/MathOptInterface/8Mxwr/src/sets.jl:837
    copy(!Matched::Union{MathOptInterface.DualExponentialCone, MathOptInterface.ExponentialCone, MathOptInterface.Integer, MathOptInterface.ZeroOne, MathOptInterface.Complements, MathOptInterface.GeometricMeanCone, MathOptInterface.LogDetConeSquare, MathOptInterface.LogDetConeTriangle, MathOptInterface.Nonnegatives, MathOptInterface.Nonpositives, MathOptInterface.NormInfinityCone, MathOptInterface.NormNuclearCone, MathOptInterface.NormOneCone, MathOptInterface.NormSpectralCone, MathOptInterface.PositiveSemidefiniteConeSquare, MathOptInterface.PositiveSemidefiniteConeTriangle, MathOptInterface.Reals, MathOptInterface.RelativeEntropyCone, MathOptInterface.RootDetConeSquare, MathOptInterface.RootDetConeTriangle, MathOptInterface.RotatedSecondOrderCone, MathOptInterface.SecondOrderCone, MathOptInterface.Zeros, MathOptInterface.DualPowerCone, MathOptInterface.EqualTo, MathOptInterface.GreaterThan, MathOptInterface.Interval, MathOptInterface.LessThan, MathOptInterface.PowerCone, MathOptInterface.Semicontinuous, MathOptInterface.Semiinteger}) at /home/pkgeval/.julia/packages/MathOptInterface/8Mxwr/src/sets.jl:822
    copy(!Matched::F) where F<:Union{MathOptInterface.ScalarQuadraticFunction, MathOptInterface.VectorQuadraticFunction} at /home/pkgeval/.julia/packages/MathOptInterface/8Mxwr/src/functions.jl:415
    ...
  Stacktrace:
    [1] add_constraint(uf::MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}, f::MathOptInterface.VectorAffineFunction{Float64}, s::SumOfSquares.SOSPolynomialSet{SemialgebraicSets.FullSpace, DynamicPolynomials.Monomial{true}, DynamicPolynomials.MonomialVector{true}, SumOfSquares.Certificate.Newton{SumOfSquares.SOSCone, MonomialBasis, Tuple{}}})
      @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/8Mxwr/src/Utilities/universalfallback.jl:460
    [2] add_constraint(m::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.AbstractOptimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, func::MathOptInterface.VectorAffineFunction{Float64}, set::SumOfSquares.SOSPolynomialSet{SemialgebraicSets.FullSpace, DynamicPolynomials.Monomial{true}, DynamicPolynomials.MonomialVector{true}, SumOfSquares.Certificate.Newton{SumOfSquares.SOSCone, MonomialBasis, Tuple{}}})
      @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/8Mxwr/src/Utilities/cachingoptimizer.jl:362
    [3] moi_add_constraint(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.AbstractOptimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, f::MathOptInterface.VectorAffineFunction{Float64}, s::SumOfSquares.SOSPolynomialSet{SemialgebraicSets.FullSpace, DynamicPolynomials.Monomial{true}, DynamicPolynomials.MonomialVector{true}, SumOfSquares.Certificate.Newton{SumOfSquares.SOSCone, MonomialBasis, Tuple{}}})
      @ JuMP ~/.julia/packages/JuMP/e0Uc2/src/constraints.jl:390
    [4] add_constraint(model::Model, con::VectorConstraint{AffExpr, SumOfSquares.SOSPolynomialSet{SemialgebraicSets.FullSpace, DynamicPolynomials.Monomial{true}, DynamicPolynomials.MonomialVector{true}, SumOfSquares.Certificate.Newton{SumOfSquares.SOSCone, MonomialBasis, Tuple{}}}, PolyJuMP.PolynomialShape{DynamicPolynomials.Monomial{true}, DynamicPolynomials.MonomialVector{true}}}, name::String)
      @ JuMP ~/.julia/packages/JuMP/e0Uc2/src/constraints.jl:402
    [5] add_constraint(model::Model, con::BridgeableConstraint{VectorConstraint{AffExpr, SumOfSquares.SOSPolynomialSet{SemialgebraicSets.FullSpace, DynamicPolynomials.Monomial{true}, DynamicPolynomials.MonomialVector{true}, SumOfSquares.Certificate.Newton{SumOfSquares.SOSCone, MonomialBasis, Tuple{}}}, PolyJuMP.PolynomialShape{DynamicPolynomials.Monomial{true}, DynamicPolynomials.MonomialVector{true}}}, UnionAll}, name::String)
      @ JuMP ~/.julia/packages/JuMP/e0Uc2/src/constraints.jl:269
    [6] add_constraint(model::Model, con::BridgeableConstraint{BridgeableConstraint{BridgeableConstraint{BridgeableConstraint{VectorConstraint{AffExpr, SumOfSquares.SOSPolynomialSet{SemialgebraicSets.FullSpace, DynamicPolynomials.Monomial{true}, DynamicPolynomials.MonomialVector{true}, SumOfSquares.Certificate.Newton{SumOfSquares.SOSCone, MonomialBasis, Tuple{}}}, PolyJuMP.PolynomialShape{DynamicPolynomials.Monomial{true}, DynamicPolynomials.MonomialVector{true}}}, UnionAll}, UnionAll}, UnionAll}, UnionAll})
      @ JuMP ~/.julia/packages/JuMP/e0Uc2/src/constraints.jl:268
    [7] load(model::Model, constraint::SetProg.InclusionConstraint{SetProg.Sets.LinearImage{SetProg.SetVariableRef{Model, PolySet}, Float64, Matrix{Float64}}, SetProg.SetVariableRef{Model, PolySet}, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}})
      @ SetProg ~/.julia/packages/SetProg/lVxiA/src/constraints.jl:18
    [8] load(model::Model, d::SetProg.Data)
      @ SetProg ~/.julia/packages/SetProg/lVxiA/src/optimize.jl:7
    [9] optimize_hook(model::Model)
      @ SetProg ~/.julia/packages/SetProg/lVxiA/src/optimize.jl:28
   [10] optimize!(model::Model, optimizer_factory::Nothing; bridge_constraints::Bool, ignore_optimize_hook::Bool, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ JuMP ~/.julia/packages/JuMP/e0Uc2/src/optimizer_interface.jl:120
   [11] optimize!
      @ ~/.julia/packages/JuMP/e0Uc2/src/optimizer_interface.jl:106 [inlined]
   [12] invariant_sets!(sets::HybridSystems.OneStateStateProperty{SetProg.Sets.PolySet{Float64, MonomialBasis{DynamicPolynomials.Monomial{true}, DynamicPolynomials.MonomialVector{true}}, Float64}}, modes_to_compute::UnitRange{Int64}, s::ScaledHybridSystem{Float64, HybridSystem{OneStateAutomaton, ContinuousIdentitySystem, LinearMap{Int64, Matrix{Int64}}, AutonomousSwitching, Vector{ContinuousIdentitySystem}, Vector{LinearMap{Int64, Matrix{Int64}}}, FillArrays.Fill{AutonomousSwitching, 1, Tuple{Base.OneTo{Int64}}}}}, optimizer_constructor::MathOptInterface.OptimizerWithAttributes, set_variables::Vector{PolySet}; λ::Dict{HybridSystems.OneStateTransition, Float64}, enabled::Base.OneTo{Int64}, volume_heuristic::Nothing, infeasibility_certificates::HybridSystems.OneStateTransitionProperty{MultivariateMoments.MomentMatrix{Float64, MonomialBasis{DynamicPolynomials.Monomial{true}, DynamicPolynomials.MonomialVector{true}}}}, verbose::Int64)
      @ SwitchOnSafety ~/.julia/packages/SwitchOnSafety/iHVIh/src/invariant.jl:193
   [13] soslyap(s::ScaledHybridSystem{Float64, HybridSystem{OneStateAutomaton, ContinuousIdentitySystem, LinearMap{Int64, Matrix{Int64}}, AutonomousSwitching, Vector{ContinuousIdentitySystem}, Vector{LinearMap{Int64, Matrix{Int64}}}, FillArrays.Fill{AutonomousSwitching, 1, Tuple{Base.OneTo{Int64}}}}}, d::Int64; optimizer_constructor::MathOptInterface.OptimizerWithAttributes)
      @ SwitchOnSafety ~/.julia/packages/SwitchOnSafety/iHVIh/src/sos.jl:73
   [14] _lyap
      @ ~/.julia/packages/SwitchOnSafety/iHVIh/src/sos.jl:177 [inlined]
   [15] soslyapbs(s::HybridSystem{OneStateAutomaton, ContinuousIdentitySystem, LinearMap{Int64, Matrix{Int64}}, AutonomousSwitching, Vector{ContinuousIdentitySystem}, Vector{LinearMap{Int64, Matrix{Int64}}}, FillArrays.Fill{AutonomousSwitching, 1, Tuple{Base.OneTo{Int64}}}}, d::Int64, soslb::Float64, dual::Nothing, sosub::Float64, primal::Nothing; verbose::Int64, tol::Float64, step::Float64, scaling::Float64, ranktols::Float64, disttols::Float64, kws::Base.Iterators.Pairs{Symbol, MathOptInterface.OptimizerWithAttributes, Tuple{Symbol}, NamedTuple{(:optimizer_constructor,), Tuple{MathOptInterface.OptimizerWithAttributes}}})
      @ SwitchOnSafety ~/.julia/packages/SwitchOnSafety/iHVIh/src/sos.jl:181
   [16] soslyapb(s::HybridSystem{OneStateAutomaton, ContinuousIdentitySystem, LinearMap{Int64, Matrix{Int64}}, AutonomousSwitching, Vector{ContinuousIdentitySystem}, Vector{LinearMap{Int64, Matrix{Int64}}}, FillArrays.Fill{AutonomousSwitching, 1, Tuple{Base.OneTo{Int64}}}}, d::Int64; optimizer_constructor::MathOptInterface.OptimizerWithAttributes, tol::Float64, cached::Bool, kws::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ SwitchOnSafety ~/.julia/packages/SwitchOnSafety/iHVIh/src/sos.jl:264
   [17] macro expansion
      @ ~/.julia/packages/SwitchOnSafety/iHVIh/test/JCG14e63.jl:21 [inlined]
   [18] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [19] top-level scope
      @ ~/.julia/packages/SwitchOnSafety/iHVIh/test/JCG14e63.jl:8
   [20] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [21] top-level scope
      @ ~/.julia/packages/SwitchOnSafety/iHVIh/test/discrete.jl:7
   [22] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [23] top-level scope
      @ ~/.julia/packages/SwitchOnSafety/iHVIh/test/discrete.jl:2
   [24] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [25] top-level scope
      @ ~/.julia/packages/SwitchOnSafety/iHVIh/test/jsr.jl:3
   [26] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [27] top-level scope
      @ ~/.julia/packages/SwitchOnSafety/iHVIh/test/runtests.jl:8
   [28] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [29] top-level scope
      @ none:6
   [30] eval(m::Module, e::Any)
      @ Core ./boot.jl:345
   [31] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [32] _start()
      @ Base ./client.jl:485
[PJ08] Example 2.8: Error During Test at /home/pkgeval/.julia/packages/SwitchOnSafety/iHVIh/test/PJ08e28.jl:11
  Got exception outside of a @test
  MethodError: no method matching copy(::SumOfSquares.SOSPolynomialSet{SemialgebraicSets.FullSpace, DynamicPolynomials.Monomial{true}, DynamicPolynomials.MonomialVector{true}, SumOfSquares.Certificate.Newton{SumOfSquares.SOSCone, MonomialBasis, Tuple{}}})
  Closest candidates are:
    copy(!Matched::S) where S<:Union{MathOptInterface.SOS1, MathOptInterface.SOS2} at /home/pkgeval/.julia/packages/MathOptInterface/8Mxwr/src/sets.jl:837
    copy(!Matched::Union{MathOptInterface.DualExponentialCone, MathOptInterface.ExponentialCone, MathOptInterface.Integer, MathOptInterface.ZeroOne, MathOptInterface.Complements, MathOptInterface.GeometricMeanCone, MathOptInterface.LogDetConeSquare, MathOptInterface.LogDetConeTriangle, MathOptInterface.Nonnegatives, MathOptInterface.Nonpositives, MathOptInterface.NormInfinityCone, MathOptInterface.NormNuclearCone, MathOptInterface.NormOneCone, MathOptInterface.NormSpectralCone, MathOptInterface.PositiveSemidefiniteConeSquare, MathOptInterface.PositiveSemidefiniteConeTriangle, MathOptInterface.Reals, MathOptInterface.RelativeEntropyCone, MathOptInterface.RootDetConeSquare, MathOptInterface.RootDetConeTriangle, MathOptInterface.RotatedSecondOrderCone, MathOptInterface.SecondOrderCone, MathOptInterface.Zeros, MathOptInterface.DualPowerCone, MathOptInterface.EqualTo, MathOptInterface.GreaterThan, MathOptInterface.Interval, MathOptInterface.LessThan, MathOptInterface.PowerCone, MathOptInterface.Semicontinuous, MathOptInterface.Semiinteger}) at /home/pkgeval/.julia/packages/MathOptInterface/8Mxwr/src/sets.jl:822
    copy(!Matched::F) where F<:Union{MathOptInterface.ScalarQuadraticFunction, MathOptInterface.VectorQuadraticFunction} at /home/pkgeval/.julia/packages/MathOptInterface/8Mxwr/src/functions.jl:415
    ...
  Stacktrace:
    [1] add_constraint(uf::MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}, f::MathOptInterface.VectorAffineFunction{Float64}, s::SumOfSquares.SOSPolynomialSet{SemialgebraicSets.FullSpace, DynamicPolynomials.Monomial{true}, DynamicPolynomials.MonomialVector{true}, SumOfSquares.Certificate.Newton{SumOfSquares.SOSCone, MonomialBasis, Tuple{}}})
      @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/8Mxwr/src/Utilities/universalfallback.jl:460
    [2] add_constraint(m::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.AbstractOptimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, func::MathOptInterface.VectorAffineFunction{Float64}, set::SumOfSquares.SOSPolynomialSet{SemialgebraicSets.FullSpace, DynamicPolynomials.Monomial{true}, DynamicPolynomials.MonomialVector{true}, SumOfSquares.Certificate.Newton{SumOfSquares.SOSCone, MonomialBasis, Tuple{}}})
      @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/8Mxwr/src/Utilities/cachingoptimizer.jl:362
    [3] moi_add_constraint(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.AbstractOptimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, f::MathOptInterface.VectorAffineFunction{Float64}, s::SumOfSquares.SOSPolynomialSet{SemialgebraicSets.FullSpace, DynamicPolynomials.Monomial{true}, DynamicPolynomials.MonomialVector{true}, SumOfSquares.Certificate.Newton{SumOfSquares.SOSCone, MonomialBasis, Tuple{}}})
      @ JuMP ~/.julia/packages/JuMP/e0Uc2/src/constraints.jl:390
    [4] add_constraint(model::Model, con::VectorConstraint{AffExpr, SumOfSquares.SOSPolynomialSet{SemialgebraicSets.FullSpace, DynamicPolynomials.Monomial{true}, DynamicPolynomials.MonomialVector{true}, SumOfSquares.Certificate.Newton{SumOfSquares.SOSCone, MonomialBasis, Tuple{}}}, PolyJuMP.PolynomialShape{DynamicPolynomials.Monomial{true}, DynamicPolynomials.MonomialVector{true}}}, name::String)
      @ JuMP ~/.julia/packages/JuMP/e0Uc2/src/constraints.jl:402
    [5] add_constraint(model::Model, con::BridgeableConstraint{VectorConstraint{AffExpr, SumOfSquares.SOSPolynomialSet{SemialgebraicSets.FullSpace, DynamicPolynomials.Monomial{true}, DynamicPolynomials.MonomialVector{true}, SumOfSquares.Certificate.Newton{SumOfSquares.SOSCone, MonomialBasis, Tuple{}}}, PolyJuMP.PolynomialShape{DynamicPolynomials.Monomial{true}, DynamicPolynomials.MonomialVector{true}}}, UnionAll}, name::String)
      @ JuMP ~/.julia/packages/JuMP/e0Uc2/src/constraints.jl:269
    [6] add_constraint(model::Model, con::BridgeableConstraint{BridgeableConstraint{BridgeableConstraint{BridgeableConstraint{VectorConstraint{AffExpr, SumOfSquares.SOSPolynomialSet{SemialgebraicSets.FullSpace, DynamicPolynomials.Monomial{true}, DynamicPolynomials.MonomialVector{true}, SumOfSquares.Certificate.Newton{SumOfSquares.SOSCone, MonomialBasis, Tuple{}}}, PolyJuMP.PolynomialShape{DynamicPolynomials.Monomial{true}, DynamicPolynomials.MonomialVector{true}}}, UnionAll}, UnionAll}, UnionAll}, UnionAll})
      @ JuMP ~/.julia/packages/JuMP/e0Uc2/src/constraints.jl:268
    [7] load(model::Model, constraint::SetProg.InclusionConstraint{SetProg.Sets.LinearImage{SetProg.SetVariableRef{Model, PolySet}, Float64, Matrix{Float64}}, SetProg.SetVariableRef{Model, PolySet}, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}})
      @ SetProg ~/.julia/packages/SetProg/lVxiA/src/constraints.jl:18
    [8] load(model::Model, d::SetProg.Data)
      @ SetProg ~/.julia/packages/SetProg/lVxiA/src/optimize.jl:7
    [9] optimize_hook(model::Model)
      @ SetProg ~/.julia/packages/SetProg/lVxiA/src/optimize.jl:28
   [10] optimize!(model::Model, optimizer_factory::Nothing; bridge_constraints::Bool, ignore_optimize_hook::Bool, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ JuMP ~/.julia/packages/JuMP/e0Uc2/src/optimizer_interface.jl:120
   [11] optimize!
      @ ~/.julia/packages/JuMP/e0Uc2/src/optimizer_interface.jl:106 [inlined]
   [12] invariant_sets!(sets::HybridSystems.OneStateStateProperty{SetProg.Sets.PolySet{Float64, MonomialBasis{DynamicPolynomials.Monomial{true}, DynamicPolynomials.MonomialVector{true}}, Float64}}, modes_to_compute::UnitRange{Int64}, s::ScaledHybridSystem{Float64, HybridSystem{OneStateAutomaton, ContinuousIdentitySystem, LinearMap{Int64, Matrix{Int64}}, AutonomousSwitching, Vector{ContinuousIdentitySystem}, Vector{LinearMap{Int64, Matrix{Int64}}}, FillArrays.Fill{AutonomousSwitching, 1, Tuple{Base.OneTo{Int64}}}}}, optimizer_constructor::MathOptInterface.OptimizerWithAttributes, set_variables::Vector{PolySet}; λ::Dict{HybridSystems.OneStateTransition, Float64}, enabled::Base.OneTo{Int64}, volume_heuristic::Nothing, infeasibility_certificates::HybridSystems.OneStateTransitionProperty{MultivariateMoments.MomentMatrix{Float64, MonomialBasis{DynamicPolynomials.Monomial{true}, DynamicPolynomials.MonomialVector{true}}}}, verbose::Int64)
      @ SwitchOnSafety ~/.julia/packages/SwitchOnSafety/iHVIh/src/invariant.jl:193
   [13] soslyap(s::ScaledHybridSystem{Float64, HybridSystem{OneStateAutomaton, ContinuousIdentitySystem, LinearMap{Int64, Matrix{Int64}}, AutonomousSwitching, Vector{ContinuousIdentitySystem}, Vector{LinearMap{Int64, Matrix{Int64}}}, FillArrays.Fill{AutonomousSwitching, 1, Tuple{Base.OneTo{Int64}}}}}, d::Int64; optimizer_constructor::MathOptInterface.OptimizerWithAttributes)
      @ SwitchOnSafety ~/.julia/packages/SwitchOnSafety/iHVIh/src/sos.jl:73
   [14] _lyap
      @ ~/.julia/packages/SwitchOnSafety/iHVIh/src/sos.jl:177 [inlined]
   [15] soslyapbs(s::HybridSystem{OneStateAutomaton, ContinuousIdentitySystem, LinearMap{Int64, Matrix{Int64}}, AutonomousSwitching, Vector{ContinuousIdentitySystem}, Vector{LinearMap{Int64, Matrix{Int64}}}, FillArrays.Fill{AutonomousSwitching, 1, Tuple{Base.OneTo{Int64}}}}, d::Int64, soslb::Float64, dual::Nothing, sosub::Float64, primal::Nothing; verbose::Int64, tol::Float64, step::Float64, scaling::Float64, ranktols::Float64, disttols::Float64, kws::Base.Iterators.Pairs{Symbol, MathOptInterface.OptimizerWithAttributes, Tuple{Symbol}, NamedTuple{(:optimizer_constructor,), Tuple{MathOptInterface.OptimizerWithAttributes}}})
      @ SwitchOnSafety ~/.julia/packages/SwitchOnSafety/iHVIh/src/sos.jl:181
   [16] soslyapb(s::HybridSystem{OneStateAutomaton, ContinuousIdentitySystem, LinearMap{Int64, Matrix{Int64}}, AutonomousSwitching, Vector{ContinuousIdentitySystem}, Vector{LinearMap{Int64, Matrix{Int64}}}, FillArrays.Fill{AutonomousSwitching, 1, Tuple{Base.OneTo{Int64}}}}, d::Int64; optimizer_constructor::MathOptInterface.OptimizerWithAttributes, tol::Float64, cached::Bool, kws::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ SwitchOnSafety ~/.julia/packages/SwitchOnSafety/iHVIh/src/sos.jl:264
   [17] macro expansion
      @ ~/.julia/packages/SwitchOnSafety/iHVIh/test/PJ08e28.jl:20 [inlined]
   [18] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [19] top-level scope
      @ ~/.julia/packages/SwitchOnSafety/iHVIh/test/PJ08e28.jl:12
   [20] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [21] top-level scope
      @ ~/.julia/packages/SwitchOnSafety/iHVIh/test/discrete.jl:8
   [22] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [23] top-level scope
      @ ~/.julia/packages/SwitchOnSafety/iHVIh/test/discrete.jl:2
   [24] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [25] top-level scope
      @ ~/.julia/packages/SwitchOnSafety/iHVIh/test/jsr.jl:3
   [26] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [27] top-level scope
      @ ~/.julia/packages/SwitchOnSafety/iHVIh/test/runtests.jl:8
   [28] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [29] top-level scope
      @ none:6
   [30] eval(m::Module, e::Any)
      @ Core ./boot.jl:345
   [31] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [32] _start()
      @ Base ./client.jl:485
[PJ08] Example 5.4: Error During Test at /home/pkgeval/.julia/packages/SwitchOnSafety/iHVIh/test/PJ08e54.jl:9
  Got exception outside of a @test
  MethodError: no method matching copy(::SumOfSquares.SOSPolynomialSet{SemialgebraicSets.FullSpace, DynamicPolynomials.Monomial{true}, DynamicPolynomials.MonomialVector{true}, SumOfSquares.Certificate.Newton{SumOfSquares.SOSCone, MonomialBasis, Tuple{}}})
  Closest candidates are:
    copy(!Matched::S) where S<:Union{MathOptInterface.SOS1, MathOptInterface.SOS2} at /home/pkgeval/.julia/packages/MathOptInterface/8Mxwr/src/sets.jl:837
    copy(!Matched::Union{MathOptInterface.DualExponentialCone, MathOptInterface.ExponentialCone, MathOptInterface.Integer, MathOptInterface.ZeroOne, MathOptInterface.Complements, MathOptInterface.GeometricMeanCone, MathOptInterface.LogDetConeSquare, MathOptInterface.LogDetConeTriangle, MathOptInterface.Nonnegatives, MathOptInterface.Nonpositives, MathOptInterface.NormInfinityCone, MathOptInterface.NormNuclearCone, MathOptInterface.NormOneCone, MathOptInterface.NormSpectralCone, MathOptInterface.PositiveSemidefiniteConeSquare, MathOptInterface.PositiveSemidefiniteConeTriangle, MathOptInterface.Reals, MathOptInterface.RelativeEntropyCone, MathOptInterface.RootDetConeSquare, MathOptInterface.RootDetConeTriangle, MathOptInterface.RotatedSecondOrderCone, MathOptInterface.SecondOrderCone, MathOptInterface.Zeros, MathOptInterface.DualPowerCone, MathOptInterface.EqualTo, MathOptInterface.GreaterThan, MathOptInterface.Interval, MathOptInterface.LessThan, MathOptInterface.PowerCone, MathOptInterface.Semicontinuous, MathOptInterface.Semiinteger}) at /home/pkgeval/.julia/packages/MathOptInterface/8Mxwr/src/sets.jl:822
    copy(!Matched::F) where F<:Union{MathOptInterface.ScalarQuadraticFunction, MathOptInterface.VectorQuadraticFunction} at /home/pkgeval/.julia/packages/MathOptInterface/8Mxwr/src/functions.jl:415
    ...
  Stacktrace:
    [1] add_constraint(uf::MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}, f::MathOptInterface.VectorAffineFunction{Float64}, s::SumOfSquares.SOSPolynomialSet{SemialgebraicSets.FullSpace, DynamicPolynomials.Monomial{true}, DynamicPolynomials.MonomialVector{true}, SumOfSquares.Certificate.Newton{SumOfSquares.SOSCone, MonomialBasis, Tuple{}}})
      @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/8Mxwr/src/Utilities/universalfallback.jl:460
    [2] add_constraint(m::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.AbstractOptimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, func::MathOptInterface.VectorAffineFunction{Float64}, set::SumOfSquares.SOSPolynomialSet{SemialgebraicSets.FullSpace, DynamicPolynomials.Monomial{true}, DynamicPolynomials.MonomialVector{true}, SumOfSquares.Certificate.Newton{SumOfSquares.SOSCone, MonomialBasis, Tuple{}}})
      @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/8Mxwr/src/Utilities/cachingoptimizer.jl:362
    [3] moi_add_constraint(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.AbstractOptimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, f::MathOptInterface.VectorAffineFunction{Float64}, s::SumOfSquares.SOSPolynomialSet{SemialgebraicSets.FullSpace, DynamicPolynomials.Monomial{true}, DynamicPolynomials.MonomialVector{true}, SumOfSquares.Certificate.Newton{SumOfSquares.SOSCone, MonomialBasis, Tuple{}}})
      @ JuMP ~/.julia/packages/JuMP/e0Uc2/src/constraints.jl:390
    [4] add_constraint(model::Model, con::VectorConstraint{AffExpr, SumOfSquares.SOSPolynomialSet{SemialgebraicSets.FullSpace, DynamicPolynomials.Monomial{true}, DynamicPolynomials.MonomialVector{true}, SumOfSquares.Certificate.Newton{SumOfSquares.SOSCone, MonomialBasis, Tuple{}}}, PolyJuMP.PolynomialShape{DynamicPolynomials.Monomial{true}, DynamicPolynomials.MonomialVector{true}}}, name::String)
      @ JuMP ~/.julia/packages/JuMP/e0Uc2/src/constraints.jl:402
    [5] add_constraint(model::Model, con::BridgeableConstraint{VectorConstraint{AffExpr, SumOfSquares.SOSPolynomialSet{SemialgebraicSets.FullSpace, DynamicPolynomials.Monomial{true}, DynamicPolynomials.MonomialVector{true}, SumOfSquares.Certificate.Newton{SumOfSquares.SOSCone, MonomialBasis, Tuple{}}}, PolyJuMP.PolynomialShape{DynamicPolynomials.Monomial{true}, DynamicPolynomials.MonomialVector{true}}}, UnionAll}, name::String)
      @ JuMP ~/.julia/packages/JuMP/e0Uc2/src/constraints.jl:269
    [6] add_constraint(model::Model, con::BridgeableConstraint{BridgeableConstraint{BridgeableConstraint{BridgeableConstraint{VectorConstraint{AffExpr, SumOfSquares.SOSPolynomialSet{SemialgebraicSets.FullSpace, DynamicPolynomials.Monomial{true}, DynamicPolynomials.MonomialVector{true}, SumOfSquares.Certificate.Newton{SumOfSquares.SOSCone, MonomialBasis, Tuple{}}}, PolyJuMP.PolynomialShape{DynamicPolynomials.Monomial{true}, DynamicPolynomials.MonomialVector{true}}}, UnionAll}, UnionAll}, UnionAll}, UnionAll})
      @ JuMP ~/.julia/packages/JuMP/e0Uc2/src/constraints.jl:268
    [7] load(model::Model, constraint::SetProg.InclusionConstraint{SetProg.Sets.LinearImage{SetProg.SetVariableRef{Model, PolySet}, Float64, Matrix{Float64}}, SetProg.SetVariableRef{Model, PolySet}, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}})
      @ SetProg ~/.julia/packages/SetProg/lVxiA/src/constraints.jl:18
    [8] load(model::Model, d::SetProg.Data)
      @ SetProg ~/.julia/packages/SetProg/lVxiA/src/optimize.jl:7
    [9] optimize_hook(model::Model)
      @ SetProg ~/.julia/packages/SetProg/lVxiA/src/optimize.jl:28
   [10] optimize!(model::Model, optimizer_factory::Nothing; bridge_constraints::Bool, ignore_optimize_hook::Bool, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ JuMP ~/.julia/packages/JuMP/e0Uc2/src/optimizer_interface.jl:120
   [11] optimize!
      @ ~/.julia/packages/JuMP/e0Uc2/src/optimizer_interface.jl:106 [inlined]
   [12] invariant_sets!(sets::HybridSystems.OneStateStateProperty{SetProg.Sets.PolySet{Float64, MonomialBasis{DynamicPolynomials.Monomial{true}, DynamicPolynomials.MonomialVector{true}}, Float64}}, modes_to_compute::UnitRange{Int64}, s::ScaledHybridSystem{Float64, HybridSystem{OneStateAutomaton, ContinuousIdentitySystem, LinearMap{Int64, Matrix{Int64}}, AutonomousSwitching, Vector{ContinuousIdentitySystem}, Vector{LinearMap{Int64, Matrix{Int64}}}, FillArrays.Fill{AutonomousSwitching, 1, Tuple{Base.OneTo{Int64}}}}}, optimizer_constructor::MathOptInterface.OptimizerWithAttributes, set_variables::Vector{PolySet}; λ::Dict{HybridSystems.OneStateTransition, Float64}, enabled::Base.OneTo{Int64}, volume_heuristic::Nothing, infeasibility_certificates::HybridSystems.OneStateTransitionProperty{MultivariateMoments.MomentMatrix{Float64, MonomialBasis{DynamicPolynomials.Monomial{true}, DynamicPolynomials.MonomialVector{true}}}}, verbose::Int64)
      @ SwitchOnSafety ~/.julia/packages/SwitchOnSafety/iHVIh/src/invariant.jl:193
   [13] soslyap(s::ScaledHybridSystem{Float64, HybridSystem{OneStateAutomaton, ContinuousIdentitySystem, LinearMap{Int64, Matrix{Int64}}, AutonomousSwitching, Vector{ContinuousIdentitySystem}, Vector{LinearMap{Int64, Matrix{Int64}}}, FillArrays.Fill{AutonomousSwitching, 1, Tuple{Base.OneTo{Int64}}}}}, d::Int64; optimizer_constructor::MathOptInterface.OptimizerWithAttributes)
      @ SwitchOnSafety ~/.julia/packages/SwitchOnSafety/iHVIh/src/sos.jl:73
   [14] _lyap
      @ ~/.julia/packages/SwitchOnSafety/iHVIh/src/sos.jl:177 [inlined]
   [15] soslyapbs(s::HybridSystem{OneStateAutomaton, ContinuousIdentitySystem, LinearMap{Int64, Matrix{Int64}}, AutonomousSwitching, Vector{ContinuousIdentitySystem}, Vector{LinearMap{Int64, Matrix{Int64}}}, FillArrays.Fill{AutonomousSwitching, 1, Tuple{Base.OneTo{Int64}}}}, d::Int64, soslb::Float64, dual::Nothing, sosub::Float64, primal::Nothing; verbose::Int64, tol::Float64, step::Float64, scaling::Float64, ranktols::Float64, disttols::Float64, kws::Base.Iterators.Pairs{Symbol, MathOptInterface.OptimizerWithAttributes, Tuple{Symbol}, NamedTuple{(:optimizer_constructor,), Tuple{MathOptInterface.OptimizerWithAttributes}}})
      @ SwitchOnSafety ~/.julia/packages/SwitchOnSafety/iHVIh/src/sos.jl:181
   [16] soslyapb(s::HybridSystem{OneStateAutomaton, ContinuousIdentitySystem, LinearMap{Int64, Matrix{Int64}}, AutonomousSwitching, Vector{ContinuousIdentitySystem}, Vector{LinearMap{Int64, Matrix{Int64}}}, FillArrays.Fill{AutonomousSwitching, 1, Tuple{Base.OneTo{Int64}}}}, d::Int64; optimizer_constructor::MathOptInterface.OptimizerWithAttributes, tol::Float64, cached::Bool, kws::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ SwitchOnSafety ~/.julia/packages/SwitchOnSafety/iHVIh/src/sos.jl:264
   [17] top-level scope
      @ ~/.julia/packages/SwitchOnSafety/iHVIh/test/PJ08e54.jl:43
   [18] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [19] top-level scope
      @ ~/.julia/packages/SwitchOnSafety/iHVIh/test/PJ08e54.jl:11
   [20] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [21] top-level scope
      @ ~/.julia/packages/SwitchOnSafety/iHVIh/test/discrete.jl:9
   [22] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [23] top-level scope
      @ ~/.julia/packages/SwitchOnSafety/iHVIh/test/discrete.jl:2
   [24] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [25] top-level scope
      @ ~/.julia/packages/SwitchOnSafety/iHVIh/test/jsr.jl:3
   [26] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [27] top-level scope
      @ ~/.julia/packages/SwitchOnSafety/iHVIh/test/runtests.jl:8
   [28] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [29] top-level scope
      @ none:6
   [30] eval(m::Module, e::Any)
      @ Core ./boot.jl:345
   [31] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [32] _start()
      @ Base ./client.jl:485
Test Summary:                                                                                                                                                                                   | Pass  Fail  Error  Total
Unconstrained                                                                                                                                                                                   |   47     3      6     56
  Finiteness conjecture counterexample with MathOptInterface.OptimizerWithAttributes(GLPK.Optimizer, Pair{MathOptInterface.AbstractOptimizerAttribute, Any}[MathOptInterface.Silent() => true]) |    8                   8
  Quick bounds update smp                                                                                                                                                                       |    5                   5
  [AJPR14] Example 5.4                                                                                                                                                                          |   24     3      1     28
    p-radius with VeroneseLift()                                                                                                                                                                |    6                   6
    p-radius with KroneckerLift()                                                                                                                                                               |    6                   6
    JSR with MathOptInterface.OptimizerWithAttributes(CSDP.Optimizer, Pair{MathOptInterface.AbstractOptimizerAttribute, Any}[MathOptInterface.RawParameter("printlevel") => 0])                 |                 1      1
  [AP12] Example 2.1                                                                                                                                                                            |    2            1      3
  [JCG14] Example 6.1                                                                                                                                                                           |                 1      1
  [JCG14] Example 6.3                                                                                                                                                                           |                 1      1
  [PJ08] Example 2.8                                                                                                                                                                            |                 1      1
  [PJ08] Example 5.4                                                                                                                                                                            |    8            1      9
    Gripenberg                                                                                                                                                                                  |    8                   8
ERROR: LoadError: LoadError: LoadError: Some tests did not pass: 47 passed, 3 failed, 6 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/SwitchOnSafety/iHVIh/test/discrete.jl:1
in expression starting at /home/pkgeval/.julia/packages/SwitchOnSafety/iHVIh/test/jsr.jl:3
in expression starting at /home/pkgeval/.julia/packages/SwitchOnSafety/iHVIh/test/runtests.jl:8
ERROR: Package SwitchOnSafety errored during testing
Stacktrace:
  [1] pkgerror(::String, ::Vararg{String, N} where N)
    @ Pkg.Types /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1580
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:328
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:315
  [5] #test#62
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [6] test
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [7] #test#61
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [8] test
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [10] test(pkg::String)
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [11] top-level scope
    @ none:19
