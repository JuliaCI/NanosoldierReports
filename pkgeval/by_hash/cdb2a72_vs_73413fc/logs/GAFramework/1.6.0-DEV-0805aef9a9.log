Julia Version 1.6.0-DEV.968
Commit 0805aef9a9* (2020-09-18 09:12 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.4.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.4.3
  [91ca9103] + GAFramework v0.4.1
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_QCsz6q/Project.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_QCsz6q/Manifest.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.2172288845383032
curgen: 20 fitness: 0.21723286435080397
curgen: 30 fitness: 0.21723286435080397
curgen: 40 fitness: 0.21723286435080397
curgen: 50 fitness: 0.21723286435080397
CoordinateCreature{Vector{Float64}}([-0.22267955303813483], -0.21723286435080397) -0.22267955303813483 -0.21723286435080397
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.25702504191416
curgen: 100 fitness: 3.258130476904738
curgen: 150 fitness: 3.2581795088257706
curgen: 200 fitness: 3.2582414756312295
curgen: 250 fitness: 3.2583634721513866
curgen: 300 fitness: 3.2584301303418624
curgen: 350 fitness: 3.25843306535658
curgen: 400 fitness: 3.2584579323048644
curgen: 450 fitness: 3.258464486128513
curgen: 500 fitness: 3.2584656747499734
CoordinateCreature{Vector{Float64}}([-0.22198543330394474, -0.22226036127513468, 0.22217617748835586, -0.2225589504727514, 0.22250209221353512, -0.22264008972667584, -0.22254287292856645, -0.22235262652070378, 0.22253927957751066, -0.2230336455871522, 0.222459838919222, 0.22273939699376621, 0.22247431797096529, 0.2225459885998341, -0.22250528650356094], -3.2584656747499734) [-0.22198543330394474, -0.22226036127513468, 0.22217617748835586, -0.2225589504727514, 0.22250209221353512, -0.22264008972667584, -0.22254287292856645, -0.22235262652070378, 0.22253927957751066, -0.2230336455871522, 0.222459838919222, 0.22273939699376621, 0.22247431797096529, 0.2225459885998341, -0.22250528650356094] -3.2584656747499734
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0013019383259802453
curgen: 100 fitness: -0.0010604625967971515
curgen: 150 fitness: -0.0010604625967971515
curgen: 200 fitness: -0.0010604625967971515
curgen: 250 fitness: -0.0006154814304011325
curgen: 300 fitness: -0.0006055934602500201
curgen: 350 fitness: -0.0005775041270226211
curgen: 400 fitness: -0.00038444455566377655
curgen: 450 fitness: -0.00038444455566377655
curgen: 500 fitness: -0.00038444455566377655
CoordinateCreature{Vector{Float64}}([-0.00026287257458339474, -0.00012949788810557146, 7.245825961448135e-5, -0.0002154210190345274, 0.00014346556763776205, 0.00040331395409045755, -0.0002422740370278259, 0.0008475756884295076, 0.0005081672941091458, -0.0002798588822372131, 3.207156247809291e-5, -0.0004877881146473765, 0.00044696015656027575, 0.0002076284932148833, 0.00014678743591804342], 0.00038444455566377655) [-0.00026287257458339474, -0.00012949788810557146, 7.245825961448135e-5, -0.0002154210190345274, 0.00014346556763776205, 0.00040331395409045755, -0.0002422740370278259, 0.0008475756884295076, 0.0005081672941091458, -0.0002798588822372131, 3.207156247809291e-5, -0.0004877881146473765, 0.00044696015656027575, 0.0002076284932148833, 0.00014678743591804342] 0.00038444455566377655
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
