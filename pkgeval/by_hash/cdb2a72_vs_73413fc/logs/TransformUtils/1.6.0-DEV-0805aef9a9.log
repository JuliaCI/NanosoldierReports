Julia Version 1.6.0-DEV.968
Commit 0805aef9a9* (2020-09-18 09:12 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.6
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.6
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_5nflz5/Project.toml`
  [9b8138ad] TransformUtils v0.2.6
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_5nflz5/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.6
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
    Testing Running tests...
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/cFZOw/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.01717434263804526 0.0700752398987014; -0.01717434263804526 0.0 0.07631791750837962; -0.0700752398987014 -0.07631791750837962 0.0])
dAA = so3([0.0 -0.09124484389917091 -0.19335707934080895; 0.09124484389917091 0.0 -0.1200792798531118; 0.19335707934080895 0.1200792798531118 0.0])
dAA = so3([0.0 0.1058620336902662 0.05629502054825715; -0.1058620336902662 0.0 -0.3227456271340856; -0.05629502054825715 0.3227456271340856 0.0])
dAA = Quaternion(0.9978938307371433, [0.04851224598440391, -0.04089695284108108, 0.013487172224477187])
dAA = SO3([0.9995366206139739 -0.027855727253827716 0.012272021461725968; 0.026772873097966162 0.9963562661964039 0.08097779990368106; -0.0144830009900194 -0.08061171918722965 0.9966403530923288])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.861566422011853 -0.28440264344739585 -0.42049784406323326; 0.14377722024651657 0.9311212831316782 -0.33517348796914376; 0.48685871811017045 0.22831621164374313 0.8431134538724732]), [-0.7631791750837961, 0.700752398987014, -0.17174342638045262])
xj = SE3(SO3([0.9770018490934179 -0.08132468820406978 -0.19711337335795664; 0.03183966002701413 0.9696893018920789 -0.24225790770461333; 0.21084027821411766 0.23041040099041454 0.949977591418887]), [3.227456271340856, 0.5629502054825715, -1.0586203369026619])
Dx = SE3(SO3([0.9489792328119755 0.18152992415706198 0.25784744002437915; -0.20007706985257184 0.9786337331970338 0.047383355390329146; -0.24373670591604268 -0.09655518051543624 0.9650230646491452]), [2.986600931025468, -1.4657462016370042, -2.37960381500733])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
