Julia Version 1.6.0-DEV.961
Commit 73413fc2b2 (2020-09-17 22:47 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed FastGaussQuadrature ────────── v0.4.3
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_R17hBp/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_R17hBp/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.947567 seconds (1.36 M allocations: 72.672 MiB, 1.77% gc time)
Running: chebyshev_quadrature with k=1
  1.792854 seconds (2.15 M allocations: 123.858 MiB, 10.00% gc time)
Running: chebyshev_quadrature with k=2
  0.424685 seconds (409.77 k allocations: 23.552 MiB, 4.02% gc time)
Running: chebyshev_quadrature with k=3
  0.382832 seconds (523.26 k allocations: 28.733 MiB)
Running: chebyshev_quadrature with k=4
  0.341628 seconds (467.82 k allocations: 25.342 MiB, 5.15% gc time)
Running: jacobi_quadrature with α=β=1
 41.124415 seconds (37.21 M allocations: 3.043 GiB, 10.31% gc time)
Running: laguerre_quadrature with k=1
  2.851512 seconds (3.17 M allocations: 177.093 MiB, 4.04% gc time)
Running: legendre_quadrature
  0.224246 seconds (206.45 k allocations: 11.862 MiB)
Running: lobatto_quadrature
  0.335992 seconds (330.83 k allocations: 20.039 MiB)
Running: radau_quadrature
  0.320138 seconds (415.81 k allocations: 25.340 MiB, 7.63% gc time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 83.306966 seconds (100.02 M allocations: 1.491 GiB, 0.27% gc time)
Running: rectangle_rule_midpoint.
  0.145489 seconds (172.67 k allocations: 3.837 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 80.073583 seconds (100.02 M allocations: 1.491 GiB, 0.22% gc time)
Running: rombergs_method
  0.601806 seconds (722.98 k allocations: 41.738 MiB, 5.57% gc time)
Running: simpsons_rule
  0.038223 seconds (46.01 k allocations: 2.055 MiB)
Running: simpsons38_rule
  0.097832 seconds (109.31 k allocations: 5.789 MiB)
Running: trapezoidal_rule
  0.492847 seconds (1.51 M allocations: 25.698 MiB, 4.72% gc time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.082587 seconds (31.28 k allocations: 1.878 MiB)
Running: chebyshev_quadrature with k=1
  0.534843 seconds (275.81 k allocations: 14.350 MiB, 5.39% gc time)
Running: chebyshev_quadrature with k=2
  0.166611 seconds (93.87 k allocations: 2.678 MiB)
Running: chebyshev_quadrature with k=3
  0.189695 seconds (82.12 k allocations: 2.479 MiB)
Running: chebyshev_quadrature with k=4
  0.173313 seconds (64.73 k allocations: 2.125 MiB)
Running: jacobi_quadrature with α=β=1
  2.077909 seconds (499.58 k allocations: 161.614 MiB, 3.66% gc time)
Running: legendre_quadrature
  0.158823 seconds (41.75 k allocations: 2.413 MiB)
Running: lobatto_quadrature
  0.020517 seconds (16.21 k allocations: 1.010 MiB)
Running: radau_quadrature
  0.020847 seconds (16.32 k allocations: 1.017 MiB)
Running: rectangle_rule_left
 30.276545 seconds (471.41 M allocations: 7.025 GiB, 3.19% gc time)
Running: rectangle_rule_midpoint
  0.000028 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 30.602439 seconds (476.96 M allocations: 7.107 GiB, 1.88% gc time)
Running: rombergs_method
  0.608748 seconds (326.92 k allocations: 18.566 MiB, 0.92% gc time)
Running: simpsons_rule
  0.000026 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.077971 seconds (19.13 k allocations: 1.156 MiB)
Running: trapezoidal_rule
  0.096950 seconds (17.62 k allocations: 1.064 MiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.029060 seconds (1.99 k allocations: 53.594 KiB)
Running: chebyshev_quadrature with k=1
  0.101497 seconds (2.40 k allocations: 113.328 KiB)
Running: chebyshev_quadrature with k=2
  0.102382 seconds (2.65 k allocations: 121.344 KiB)
Running: chebyshev_quadrature with k=3
  0.109828 seconds (3.08 k allocations: 133.547 KiB)
Running: chebyshev_quadrature with k=4
  0.111174 seconds (3.08 k allocations: 133.609 KiB)
Running: jacobi_quadrature with α=β=1
  0.309759 seconds (362.50 k allocations: 18.907 MiB, 6.94% gc time)
Running: legendre_quadrature
  0.069136 seconds (1.24 k allocations: 63.531 KiB)
Running: lobatto_quadrature
  0.000141 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000111 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000537 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000360 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000840 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.081617 seconds (1.01 k allocations: 54.094 KiB)
Running: simpsons_rule
  0.000055 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.028215 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.024787 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.063491 seconds (72.83 k allocations: 4.239 MiB)
Running: chebyshev_quadrature with k=1
  0.208910 seconds (230.43 k allocations: 12.944 MiB)
Running: chebyshev_quadrature with k=2
  0.244013 seconds (283.15 k allocations: 15.925 MiB)
Running: chebyshev_quadrature with k=3
  0.257773 seconds (262.66 k allocations: 14.296 MiB, 7.89% gc time)
Running: chebyshev_quadrature with k=4
  0.203572 seconds (262.68 k allocations: 14.226 MiB)
Running: jacobi_quadrature with α=β=1
  2.672253 seconds (446.19 k allocations: 163.135 MiB, 6.45% gc time)
Running: legendre_quadrature
  0.195352 seconds (185.29 k allocations: 10.695 MiB)
Running: lobatto_quadrature
  0.186042 seconds (196.17 k allocations: 11.388 MiB)
Running: radau_quadrature
  0.190757 seconds (196.17 k allocations: 11.403 MiB)
Running: rectangle_rule_left
  1.194242 seconds (18.96 k allocations: 1.154 MiB, 1.31% gc time)
Running: rectangle_rule_midpoint
  0.025027 seconds (24.88 k allocations: 1.565 MiB)
Running: rectangle_rule_right
  1.162016 seconds (17.52 k allocations: 1.071 MiB)
Running: rombergs_method
  0.141288 seconds (133.79 k allocations: 7.736 MiB)
Running: simpsons_rule
  0.029426 seconds (27.77 k allocations: 1.740 MiB)
Running: simpsons38_rule
  0.042548 seconds (42.75 k allocations: 2.697 MiB)
Running: trapezoidal_rule
  0.030455 seconds (44.30 k allocations: 1.782 MiB)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.041032 seconds (99.79 k allocations: 2.991 MiB)
Running: chebyshev_quadrature with k=1
  0.192844 seconds (237.01 k allocations: 13.015 MiB)
Running: chebyshev_quadrature with k=2
  0.264209 seconds (290.15 k allocations: 15.857 MiB, 15.41% gc time)
Running: chebyshev_quadrature with k=3
  0.210430 seconds (269.37 k allocations: 14.306 MiB)
Running: chebyshev_quadrature with k=4
  0.201648 seconds (269.39 k allocations: 14.296 MiB)
Running: hermite_quadrature with k=2
 15.011036 seconds (20.88 M allocations: 1.087 GiB, 9.02% gc time)
Running: jacobi_quadrature with α=β=1
  0.458130 seconds (455.39 k allocations: 49.338 MiB, 12.36% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.216868 seconds (276.34 k allocations: 15.236 MiB)
Running: legendre_quadrature
  0.152678 seconds (191.84 k allocations: 11.015 MiB)
Running: lobatto_quadrature
  0.361046 seconds (216.98 k allocations: 37.163 MiB, 42.25% gc time)
Running: radau_quadrature
  0.215924 seconds (213.58 k allocations: 29.822 MiB, 7.49% gc time)
Running: rectangle_rule_left
  0.028329 seconds (21.89 k allocations: 1.300 MiB)
Running: rectangle_rule_midpoint
  0.027031 seconds (26.69 k allocations: 1.653 MiB)
Running: rectangle_rule_right
  0.024775 seconds (18.65 k allocations: 1.124 MiB)
Running: rombergs_method
  0.108997 seconds (136.26 k allocations: 7.773 MiB)
Running: simpsons_rule
  0.037385 seconds (39.64 k allocations: 2.073 MiB)
Running: simpsons38_rule
  0.040228 seconds (57.74 k allocations: 3.082 MiB)
Running: trapezoidal_rule
  0.028552 seconds (30.35 k allocations: 1.708 MiB)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.042094 seconds (60.16 k allocations: 2.292 MiB)
Running: chebyshev_quadrature with k=1
  0.228536 seconds (232.54 k allocations: 12.812 MiB)
Running: chebyshev_quadrature with k=2
  0.218792 seconds (285.36 k allocations: 15.623 MiB)
Running: chebyshev_quadrature with k=3
  0.226192 seconds (264.79 k allocations: 14.092 MiB)
Running: chebyshev_quadrature with k=4
  0.211434 seconds (264.81 k allocations: 14.094 MiB)
Running: hermite_quadrature with k=2
  0.176563 seconds (170.52 k allocations: 9.776 MiB, 13.98% gc time)
Running: jacobi_quadrature with α=β=1
 13.492493 seconds (448.64 k allocations: 1.175 GiB, 15.19% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.301188 seconds (271.63 k allocations: 15.118 MiB, 7.16% gc time)
Running: legendre_quadrature
  0.214208 seconds (187.41 k allocations: 10.802 MiB)
Running: lobatto_quadrature
  0.224717 seconds (207.74 k allocations: 22.889 MiB)
Running: radau_quadrature
  0.223283 seconds (206.89 k allocations: 20.822 MiB, 6.62% gc time)
Running: rectangle_rule_left
  0.025251 seconds (19.67 k allocations: 1.195 MiB)
Running: rectangle_rule_midpoint
  0.026355 seconds (25.58 k allocations: 1.601 MiB)
Running: rectangle_rule_right
  0.023919 seconds (17.50 k allocations: 1.069 MiB)
Running: rombergs_method
  0.112125 seconds (132.09 k allocations: 7.613 MiB)
Running: simpsons_rule
  0.033700 seconds (32.15 k allocations: 1.867 MiB)
Running: simpsons38_rule
  0.078857 seconds (48.54 k allocations: 2.840 MiB)
Running: trapezoidal_rule
  0.027503 seconds (25.25 k allocations: 1.545 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.031287 seconds (31.12 k allocations: 1.887 MiB)
Running: chebyshev_quadrature with k=1
  0.216534 seconds (230.92 k allocations: 13.027 MiB, 8.04% gc time)
Running: chebyshev_quadrature with k=2
  0.224490 seconds (283.65 k allocations: 15.969 MiB)
Running: chebyshev_quadrature with k=3
  0.214868 seconds (263.17 k allocations: 14.302 MiB)
Running: chebyshev_quadrature with k=4
  0.230697 seconds (263.19 k allocations: 14.143 MiB, 7.89% gc time)
Running: jacobi_quadrature with α=β=1
  3.198406 seconds (446.73 k allocations: 194.199 MiB, 5.31% gc time)
Running: legendre_quadrature
  0.172702 seconds (185.79 k allocations: 10.727 MiB)
Running: lobatto_quadrature
  0.222312 seconds (196.67 k allocations: 11.413 MiB, 7.67% gc time)
Running: radau_quadrature
  0.224688 seconds (196.67 k allocations: 11.414 MiB)
Running: rectangle_rule_left
  0.322887 seconds (19.48 k allocations: 1.179 MiB)
Running: rectangle_rule_midpoint
  0.028388 seconds (25.22 k allocations: 1.583 MiB)
Running: rectangle_rule_right
  0.120907 seconds (17.86 k allocations: 1.087 MiB)
Running: rombergs_method
  0.147214 seconds (144.65 k allocations: 8.464 MiB)
Running: simpsons_rule
  0.036357 seconds (28.46 k allocations: 1.770 MiB)
Running: simpsons38_rule
  0.038432 seconds (43.46 k allocations: 2.726 MiB)
Running: trapezoidal_rule
  0.028876 seconds (45.23 k allocations: 1.815 MiB)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.035181 seconds (31.88 k allocations: 1.838 MiB)
Running: chebyshev_quadrature with k=1
  0.227299 seconds (231.51 k allocations: 13.038 MiB, 8.50% gc time)
Running: chebyshev_quadrature with k=2
  0.343981 seconds (284.28 k allocations: 15.877 MiB)
Running: chebyshev_quadrature with k=3
  0.242449 seconds (263.75 k allocations: 14.228 MiB)
Running: chebyshev_quadrature with k=4
  0.248760 seconds (263.77 k allocations: 14.307 MiB, 7.95% gc time)
Running: jacobi_quadrature with α=β=1
  2.496111 seconds (447.44 k allocations: 148.874 MiB, 6.93% gc time)
Running: legendre_quadrature
  0.149022 seconds (186.38 k allocations: 10.737 MiB)
Running: lobatto_quadrature
  0.179118 seconds (197.27 k allocations: 11.430 MiB, 9.73% gc time)
Running: radau_quadrature
  0.178627 seconds (197.26 k allocations: 11.448 MiB)
Running: rectangle_rule_left
  1.276505 seconds (19.73 k allocations: 1.192 MiB)
Running: rectangle_rule_midpoint
  0.027159 seconds (25.22 k allocations: 1.584 MiB)
Running: rectangle_rule_right
  1.314826 seconds (17.82 k allocations: 1.084 MiB)
Running: rombergs_method
  0.165502 seconds (135.02 k allocations: 7.790 MiB)
Running: simpsons_rule
  0.040660 seconds (29.17 k allocations: 1.796 MiB)
Running: simpsons38_rule
  0.040153 seconds (44.16 k allocations: 2.753 MiB)
Running: trapezoidal_rule
  0.028687 seconds (57.47 k allocations: 2.016 MiB)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.192331 seconds (146.19 k allocations: 8.745 MiB)
Running: chebyshev_quadrature with k=1
  0.171147 seconds (70.00 k allocations: 2.208 MiB)
Running: chebyshev_quadrature with k=2
  0.185581 seconds (105.15 k allocations: 2.870 MiB)
Running: chebyshev_quadrature with k=3
  0.169979 seconds (92.64 k allocations: 2.658 MiB)
Running: chebyshev_quadrature with k=4
  0.171648 seconds (72.17 k allocations: 2.253 MiB)
Running: jacobi_quadrature with α=β=1
  2.272631 seconds (475.09 k allocations: 167.512 MiB, 4.39% gc time)
Running: legendre_quadrature
  0.140716 seconds (18.79 k allocations: 1.094 MiB)
Running: lobatto_quadrature
  0.000113 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000048 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 44.266613 seconds (590.00 M allocations: 8.792 GiB, 2.42% gc time)
Running: rectangle_rule_midpoint
  0.000034 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 43.969398 seconds (592.75 M allocations: 8.833 GiB, 2.27% gc time)
Running: rombergs_method
  0.126263 seconds (20.57 k allocations: 1.168 MiB)
Running: simpsons_rule
  0.000067 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.038340 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.024857 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 33.144929 seconds (629.33 M allocations: 9.387 GiB, 3.47% gc time)
Running: chebyshev_quadrature with k=1
  0.508704 seconds (419.45 k allocations: 23.230 MiB)
Running: chebyshev_quadrature with k=2
 14.263520 seconds (474.22 k allocations: 4.041 GiB, 4.10% gc time)
Running: chebyshev_quadrature with k=3
  6.568888 seconds (277.07 k allocations: 1.643 GiB, 4.41% gc time)
Running: chebyshev_quadrature with k=4
 10.411707 seconds (277.10 k allocations: 2.261 GiB, 2.10% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 56.583010 seconds (484.20 k allocations: 13.254 GiB, 3.35% gc time)
Running: legendre_quadrature.
  5.667504 seconds (223.60 k allocations: 1.976 GiB, 1.42% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 56.435433 seconds (8.23 M allocations: 13.384 GiB, 4.30% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 53.590565 seconds (7.23 M allocations: 13.369 GiB, 3.53% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.098379 seconds (22.39 k allocations: 1.354 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.259307 seconds (30.67 k allocations: 1.895 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.460895 seconds (22.60 k allocations: 1.364 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  1.432533 seconds (438.39 k allocations: 152.693 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 40.661302 seconds (600.04 M allocations: 8.943 GiB, 8.34% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 41.817089 seconds (600.05 M allocations: 8.943 GiB, 8.43% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 41.304876 seconds (600.03 M allocations: 8.943 GiB, 8.58% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.066295 seconds (180.73 k allocations: 4.419 MiB)
Running: chebyshev_quadrature with k=1
  0.225971 seconds (247.49 k allocations: 13.428 MiB)
Running: chebyshev_quadrature with k=2
  0.256279 seconds (272.08 k allocations: 14.498 MiB)
Running: chebyshev_quadrature with k=3
  0.246021 seconds (248.13 k allocations: 12.792 MiB)
Running: chebyshev_quadrature with k=4
  0.217284 seconds (248.16 k allocations: 12.807 MiB)
Running: jacobi_quadrature with α=β=1
  0.411427 seconds (387.87 k allocations: 34.898 MiB)
Running: laguerre_quadrature with k=2
  0.200910 seconds (180.35 k allocations: 10.464 MiB)
Running: legendre_quadrature
  0.133350 seconds (145.50 k allocations: 8.044 MiB)
Running: lobatto_quadrature
  0.036134 seconds (10.69 k allocations: 15.100 MiB)
Running: radau_quadrature
  0.031774 seconds (9.47 k allocations: 13.174 MiB)
Running: rectangle_rule_left
  0.053304 seconds (19.00 k allocations: 1.128 MiB)
Running: rectangle_rule_midpoint
  0.043410 seconds (25.68 k allocations: 1.585 MiB)
Running: rectangle_rule_right
  0.048326 seconds (17.60 k allocations: 1.055 MiB)
Running: rombergs_method
  0.240937 seconds (171.34 k allocations: 9.841 MiB)
Running: simpsons_rule
  0.002250 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.057724 seconds (79.23 k allocations: 3.402 MiB)
Running: trapezoidal_rule
  0.198136 seconds (2.39 M allocations: 37.701 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.001955 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.137286 seconds (2.40 k allocations: 1.688 MiB)
Running: chebyshev_quadrature with k=2
  0.142627 seconds (2.65 k allocations: 2.352 MiB)
Running: chebyshev_quadrature with k=3
  0.140711 seconds (3.08 k allocations: 2.052 MiB)
Running: chebyshev_quadrature with k=4
  0.136024 seconds (3.08 k allocations: 1.493 MiB)
Running: jacobi_quadrature with α=β=1
  6.235154 seconds (364.90 k allocations: 904.796 MiB, 7.16% gc time)
Running: legendre_quadrature
  0.080107 seconds (1.23 k allocations: 65.688 KiB)
Running: lobatto_quadrature
  0.000197 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000153 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  3.645038 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000518 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  3.981140 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.098849 seconds (959 allocations: 54.031 KiB)
Running: simpsons_rule
  0.000076 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000050 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000910 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000767 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.114253 seconds (2.48 k allocations: 576.484 KiB)
Running: chebyshev_quadrature with k=2
  0.116372 seconds (2.73 k allocations: 777.266 KiB)
Running: chebyshev_quadrature with k=3
  0.121376 seconds (3.15 k allocations: 685.500 KiB)
Running: chebyshev_quadrature with k=4
  0.124751 seconds (3.16 k allocations: 516.062 KiB)
Running: jacobi_quadrature with α=β=1
  3.131349 seconds (371.46 k allocations: 252.876 MiB)
Running: legendre_quadrature
  0.072253 seconds (1.28 k allocations: 65.359 KiB)
Running: lobatto_quadrature
  0.000096 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000050 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 11.312701 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001066 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 10.979641 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.100240 seconds (1.18 k allocations: 62.547 KiB)
Running: simpsons_rule
  0.000051 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000048 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.002017 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
