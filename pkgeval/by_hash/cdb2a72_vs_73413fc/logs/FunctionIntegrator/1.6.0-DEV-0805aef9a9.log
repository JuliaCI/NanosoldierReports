Julia Version 1.6.0-DEV.968
Commit 0805aef9a9* (2020-09-18 09:12 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed SpecialFunctions ───────────── v0.10.3
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed FastGaussQuadrature ────────── v0.4.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_cBtvyD/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_cBtvyD/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.847554 seconds (1.36 M allocations: 72.353 MiB, 1.52% gc time)
Running: chebyshev_quadrature with k=1
  1.773249 seconds (2.20 M allocations: 126.855 MiB, 4.38% gc time)
Running: chebyshev_quadrature with k=2
  0.298803 seconds (411.05 k allocations: 23.653 MiB, 8.61% gc time)
Running: chebyshev_quadrature with k=3
  0.320520 seconds (524.55 k allocations: 28.832 MiB)
Running: chebyshev_quadrature with k=4
  0.352644 seconds (469.11 k allocations: 25.431 MiB, 11.56% gc time)
Running: jacobi_quadrature with α=β=1
 44.204451 seconds (37.44 M allocations: 3.052 GiB, 9.81% gc time)
Running: laguerre_quadrature with k=1
  3.074031 seconds (3.19 M allocations: 177.977 MiB, 6.27% gc time)
Running: legendre_quadrature
  0.194017 seconds (207.69 k allocations: 11.920 MiB)
Running: lobatto_quadrature
  0.300105 seconds (331.45 k allocations: 19.991 MiB)
Running: radau_quadrature
  0.316968 seconds (440.68 k allocations: 26.910 MiB, 5.09% gc time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 84.395667 seconds (100.02 M allocations: 1.491 GiB, 0.75% gc time)
Running: rectangle_rule_midpoint.
  0.208371 seconds (172.67 k allocations: 3.837 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 88.500163 seconds (100.02 M allocations: 1.491 GiB, 0.76% gc time)
Running: rombergs_method
  0.543671 seconds (726.79 k allocations: 41.925 MiB, 6.77% gc time)
Running: simpsons_rule
  0.034663 seconds (46.01 k allocations: 2.055 MiB)
Running: simpsons38_rule
  0.094860 seconds (109.25 k allocations: 5.784 MiB)
Running: trapezoidal_rule
  0.339278 seconds (1.51 M allocations: 25.691 MiB, 5.17% gc time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.082198 seconds (31.30 k allocations: 1.879 MiB)
Running: chebyshev_quadrature with k=1
  0.457051 seconds (298.79 k allocations: 15.815 MiB, 5.93% gc time)
Running: chebyshev_quadrature with k=2
  0.159424 seconds (93.90 k allocations: 2.680 MiB)
Running: chebyshev_quadrature with k=3
  0.202399 seconds (82.15 k allocations: 2.481 MiB)
Running: chebyshev_quadrature with k=4
  0.192130 seconds (64.77 k allocations: 2.127 MiB)
Running: jacobi_quadrature with α=β=1
  2.592906 seconds (499.72 k allocations: 161.618 MiB, 4.72% gc time)
Running: legendre_quadrature
  0.198874 seconds (41.88 k allocations: 2.414 MiB, 6.44% gc time)
Running: lobatto_quadrature
  0.024729 seconds (16.20 k allocations: 1.010 MiB)
Running: radau_quadrature
  0.020465 seconds (16.31 k allocations: 1.017 MiB)
Running: rectangle_rule_left
 35.955194 seconds (471.41 M allocations: 7.025 GiB, 8.13% gc time)
Running: rectangle_rule_midpoint
  0.000040 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 38.085084 seconds (476.96 M allocations: 7.107 GiB, 7.68% gc time)
Running: rombergs_method
  0.386225 seconds (328.38 k allocations: 18.633 MiB, 3.92% gc time)
Running: simpsons_rule
  0.000035 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.082664 seconds (19.14 k allocations: 1.157 MiB)
Running: trapezoidal_rule
  0.062945 seconds (17.62 k allocations: 1.064 MiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.030393 seconds (1.99 k allocations: 53.594 KiB)
Running: chebyshev_quadrature with k=1
  0.118187 seconds (2.46 k allocations: 116.359 KiB)
Running: chebyshev_quadrature with k=2
  0.121553 seconds (2.71 k allocations: 124.266 KiB)
Running: chebyshev_quadrature with k=3
  0.130612 seconds (3.13 k allocations: 136.422 KiB)
Running: chebyshev_quadrature with k=4
  0.129084 seconds (3.14 k allocations: 136.484 KiB)
Running: jacobi_quadrature with α=β=1
  0.365705 seconds (363.73 k allocations: 18.989 MiB)
Running: legendre_quadrature
  0.085953 seconds (1.28 k allocations: 65.891 KiB)
Running: lobatto_quadrature
  0.000100 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000057 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000522 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000363 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000512 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.096850 seconds (1.04 k allocations: 56.531 KiB)
Running: simpsons_rule
  0.000037 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.031152 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.027196 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.070571 seconds (72.83 k allocations: 4.239 MiB)
Running: chebyshev_quadrature with k=1
  0.222390 seconds (231.64 k allocations: 13.019 MiB)
Running: chebyshev_quadrature with k=2
  0.261288 seconds (284.38 k allocations: 15.965 MiB)
Running: chebyshev_quadrature with k=3
  0.311667 seconds (263.93 k allocations: 14.393 MiB, 13.95% gc time)
Running: chebyshev_quadrature with k=4
  0.251283 seconds (263.95 k allocations: 14.287 MiB)
Running: jacobi_quadrature with α=β=1
  2.781930 seconds (447.42 k allocations: 163.230 MiB, 17.85% gc time)
Running: legendre_quadrature
  0.170375 seconds (186.44 k allocations: 10.760 MiB)
Running: lobatto_quadrature
  0.193362 seconds (197.32 k allocations: 11.471 MiB)
Running: radau_quadrature
  0.342356 seconds (197.32 k allocations: 11.454 MiB, 39.45% gc time)
Running: rectangle_rule_left
  1.132521 seconds (18.96 k allocations: 1.154 MiB)
Running: rectangle_rule_midpoint
  0.025248 seconds (24.88 k allocations: 1.565 MiB)
Running: rectangle_rule_right
  1.058137 seconds (17.52 k allocations: 1.071 MiB)
Running: rombergs_method
  0.136307 seconds (134.98 k allocations: 7.862 MiB)
Running: simpsons_rule
  0.028654 seconds (27.77 k allocations: 1.740 MiB)
Running: simpsons38_rule
  0.034441 seconds (42.75 k allocations: 2.697 MiB)
Running: trapezoidal_rule
  0.026648 seconds (44.30 k allocations: 1.782 MiB)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.054643 seconds (99.79 k allocations: 2.991 MiB)
Running: chebyshev_quadrature with k=1
  0.214288 seconds (238.23 k allocations: 13.097 MiB)
Running: chebyshev_quadrature with k=2
  0.283175 seconds (291.42 k allocations: 15.934 MiB, 13.16% gc time)
Running: chebyshev_quadrature with k=3
  0.222798 seconds (270.64 k allocations: 14.387 MiB)
Running: chebyshev_quadrature with k=4
  0.240406 seconds (270.67 k allocations: 14.376 MiB)
Running: hermite_quadrature with k=2
 17.616759 seconds (20.98 M allocations: 1.092 GiB, 8.46% gc time)
Running: jacobi_quadrature with α=β=1
  0.527632 seconds (456.62 k allocations: 49.430 MiB, 10.22% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.244168 seconds (277.51 k allocations: 15.307 MiB)
Running: legendre_quadrature
  0.176587 seconds (192.99 k allocations: 11.096 MiB)
Running: lobatto_quadrature
  0.283851 seconds (218.12 k allocations: 37.228 MiB, 14.80% gc time)
Running: radau_quadrature
  0.253868 seconds (214.72 k allocations: 29.890 MiB, 8.58% gc time)
Running: rectangle_rule_left
  0.025763 seconds (21.89 k allocations: 1.300 MiB)
Running: rectangle_rule_midpoint
  0.025137 seconds (26.69 k allocations: 1.653 MiB)
Running: rectangle_rule_right
  0.022116 seconds (18.65 k allocations: 1.124 MiB)
Running: rombergs_method
  0.109559 seconds (137.45 k allocations: 7.844 MiB)
Running: simpsons_rule
  0.033974 seconds (39.64 k allocations: 2.073 MiB)
Running: simpsons38_rule
  0.037603 seconds (57.74 k allocations: 3.082 MiB)
Running: trapezoidal_rule
  0.026612 seconds (30.35 k allocations: 1.708 MiB)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.048405 seconds (60.16 k allocations: 2.292 MiB)
Running: chebyshev_quadrature with k=1
  0.219278 seconds (233.75 k allocations: 12.878 MiB)
Running: chebyshev_quadrature with k=2
  0.282100 seconds (286.60 k allocations: 15.707 MiB, 12.99% gc time)
Running: chebyshev_quadrature with k=3
  0.202720 seconds (266.06 k allocations: 14.170 MiB)
Running: chebyshev_quadrature with k=4
  0.287720 seconds (266.09 k allocations: 14.235 MiB)
Running: hermite_quadrature with k=2
  0.190459 seconds (171.66 k allocations: 9.835 MiB)
Running: jacobi_quadrature with α=β=1
  9.997302 seconds (449.86 k allocations: 1.175 GiB, 10.96% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.220340 seconds (272.79 k allocations: 15.130 MiB)
Running: legendre_quadrature
  0.195242 seconds (188.56 k allocations: 10.867 MiB)
Running: lobatto_quadrature
  0.212228 seconds (208.88 k allocations: 22.957 MiB)
Running: radau_quadrature
  0.408493 seconds (208.03 k allocations: 20.891 MiB, 44.17% gc time)
Running: rectangle_rule_left
  0.026186 seconds (19.67 k allocations: 1.195 MiB)
Running: rectangle_rule_midpoint
  0.024868 seconds (25.58 k allocations: 1.601 MiB)
Running: rectangle_rule_right
  0.022648 seconds (17.50 k allocations: 1.069 MiB)
Running: rombergs_method
  0.195726 seconds (133.28 k allocations: 7.658 MiB)
Running: simpsons_rule
  0.066216 seconds (32.15 k allocations: 1.867 MiB)
Running: simpsons38_rule
  0.035580 seconds (48.54 k allocations: 2.840 MiB)
Running: trapezoidal_rule
  0.025641 seconds (25.25 k allocations: 1.545 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.030564 seconds (31.12 k allocations: 1.887 MiB)
Running: chebyshev_quadrature with k=1
  0.194688 seconds (232.12 k allocations: 13.096 MiB)
Running: chebyshev_quadrature with k=2
  0.256901 seconds (284.88 k allocations: 16.049 MiB)
Running: chebyshev_quadrature with k=3
  0.443377 seconds (264.44 k allocations: 14.387 MiB, 38.50% gc time)
Running: chebyshev_quadrature with k=4
  0.247890 seconds (264.46 k allocations: 14.275 MiB)
Running: jacobi_quadrature with α=β=1
  1.156185 seconds (447.96 k allocations: 194.276 MiB, 4.29% gc time)
Running: legendre_quadrature
  0.189372 seconds (186.93 k allocations: 10.797 MiB, 7.85% gc time)
Running: lobatto_quadrature
  0.215421 seconds (197.82 k allocations: 11.483 MiB)
Running: radau_quadrature
  0.170361 seconds (197.82 k allocations: 11.540 MiB)
Running: rectangle_rule_left
  0.293788 seconds (19.48 k allocations: 1.179 MiB)
Running: rectangle_rule_midpoint
  0.024121 seconds (25.22 k allocations: 1.583 MiB)
Running: rectangle_rule_right
  0.118893 seconds (17.86 k allocations: 1.087 MiB)
Running: rombergs_method
  0.123463 seconds (145.84 k allocations: 8.526 MiB)
Running: simpsons_rule
  0.028132 seconds (28.46 k allocations: 1.770 MiB)
Running: simpsons38_rule
  0.032986 seconds (43.46 k allocations: 2.726 MiB)
Running: trapezoidal_rule
  0.042664 seconds (45.23 k allocations: 1.815 MiB, 42.63% gc time)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.031987 seconds (31.88 k allocations: 1.838 MiB)
Running: chebyshev_quadrature with k=1
  0.189884 seconds (232.72 k allocations: 13.041 MiB)
Running: chebyshev_quadrature with k=2
  0.235812 seconds (285.51 k allocations: 15.954 MiB)
Running: chebyshev_quadrature with k=3
  0.229566 seconds (265.02 k allocations: 14.307 MiB)
Running: chebyshev_quadrature with k=4
  0.229214 seconds (265.04 k allocations: 14.449 MiB)
Running: jacobi_quadrature with α=β=1
  2.155824 seconds (448.67 k allocations: 148.974 MiB, 6.91% gc time)
Running: legendre_quadrature
  0.193946 seconds (187.53 k allocations: 10.822 MiB, 9.34% gc time)
Running: lobatto_quadrature
  0.185575 seconds (198.42 k allocations: 11.508 MiB)
Running: radau_quadrature
  0.200662 seconds (198.41 k allocations: 11.494 MiB)
Running: rectangle_rule_left
  1.156635 seconds (19.73 k allocations: 1.192 MiB)
Running: rectangle_rule_midpoint
  0.044817 seconds (25.22 k allocations: 1.584 MiB)
Running: rectangle_rule_right
  1.164274 seconds (17.82 k allocations: 1.084 MiB)
Running: rombergs_method
  0.126897 seconds (136.21 k allocations: 7.852 MiB)
Running: simpsons_rule
  0.031163 seconds (29.17 k allocations: 1.797 MiB)
Running: simpsons38_rule
  0.033334 seconds (44.16 k allocations: 2.753 MiB)
Running: trapezoidal_rule
  0.026145 seconds (57.47 k allocations: 2.016 MiB)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.144684 seconds (146.20 k allocations: 8.746 MiB)
Running: chebyshev_quadrature with k=1
  0.145608 seconds (70.03 k allocations: 2.209 MiB)
Running: chebyshev_quadrature with k=2
  0.201909 seconds (105.19 k allocations: 2.872 MiB, 15.69% gc time)
Running: chebyshev_quadrature with k=3
  0.194006 seconds (92.67 k allocations: 2.659 MiB)
Running: chebyshev_quadrature with k=4
  0.168504 seconds (72.20 k allocations: 2.253 MiB)
Running: jacobi_quadrature with α=β=1
  2.389288 seconds (475.24 k allocations: 167.519 MiB, 7.32% gc time)
Running: legendre_quadrature
  0.144769 seconds (18.82 k allocations: 1.099 MiB, 14.12% gc time)
Running: lobatto_quadrature
  0.000109 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000063 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 48.206470 seconds (590.00 M allocations: 8.792 GiB, 2.96% gc time)
Running: rectangle_rule_midpoint
  0.000046 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 47.434871 seconds (592.75 M allocations: 8.833 GiB, 2.85% gc time)
Running: rombergs_method
  0.136813 seconds (20.60 k allocations: 1.170 MiB)
Running: simpsons_rule
  0.000123 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.031416 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.021359 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 30.488307 seconds (629.33 M allocations: 9.387 GiB, 4.59% gc time)
Running: chebyshev_quadrature with k=1
  0.546831 seconds (421.71 k allocations: 23.284 MiB)
Running: chebyshev_quadrature with k=2
 13.079115 seconds (476.55 k allocations: 4.041 GiB, 4.82% gc time)
Running: chebyshev_quadrature with k=3
  6.423671 seconds (278.42 k allocations: 1.643 GiB, 4.53% gc time)
Running: chebyshev_quadrature with k=4
  8.288498 seconds (278.45 k allocations: 2.261 GiB, 2.37% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 61.001059 seconds (485.52 k allocations: 13.254 GiB, 3.07% gc time)
Running: legendre_quadrature.
  6.076232 seconds (224.92 k allocations: 1.976 GiB, 2.98% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 67.178706 seconds (8.23 M allocations: 13.383 GiB, 4.16% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 65.401451 seconds (7.23 M allocations: 13.369 GiB, 3.05% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.311812 seconds (22.41 k allocations: 1.355 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.671365 seconds (30.69 k allocations: 1.896 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.827388 seconds (22.62 k allocations: 1.365 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  1.178483 seconds (441.04 k allocations: 152.823 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 44.435440 seconds (600.04 M allocations: 8.943 GiB, 8.49% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 42.331467 seconds (600.05 M allocations: 8.943 GiB, 8.31% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 43.290019 seconds (600.03 M allocations: 8.943 GiB, 8.66% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.058679 seconds (180.73 k allocations: 4.418 MiB)
Running: chebyshev_quadrature with k=1
  0.243178 seconds (248.72 k allocations: 13.502 MiB)
Running: chebyshev_quadrature with k=2
  0.262984 seconds (273.35 k allocations: 14.576 MiB)
Running: chebyshev_quadrature with k=3
  0.254560 seconds (249.40 k allocations: 12.873 MiB)
Running: chebyshev_quadrature with k=4
  0.214009 seconds (249.43 k allocations: 12.869 MiB)
Running: jacobi_quadrature with α=β=1
  0.351996 seconds (389.10 k allocations: 34.983 MiB)
Running: laguerre_quadrature with k=2
  0.199130 seconds (181.49 k allocations: 10.526 MiB)
Running: legendre_quadrature
  0.154695 seconds (146.65 k allocations: 8.116 MiB)
Running: lobatto_quadrature
  0.036931 seconds (10.69 k allocations: 15.100 MiB)
Running: radau_quadrature
  0.033680 seconds (9.47 k allocations: 13.173 MiB)
Running: rectangle_rule_left
  0.061607 seconds (19.00 k allocations: 1.128 MiB)
Running: rectangle_rule_midpoint
  0.054333 seconds (25.68 k allocations: 1.585 MiB)
Running: rectangle_rule_right
  0.062392 seconds (17.60 k allocations: 1.055 MiB)
Running: rombergs_method
  0.328326 seconds (171.46 k allocations: 9.784 MiB)
Running: simpsons_rule
  0.002191 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.067637 seconds (79.23 k allocations: 3.402 MiB)
Running: trapezoidal_rule
  0.213314 seconds (2.39 M allocations: 37.701 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.001977 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.120504 seconds (2.46 k allocations: 1.691 MiB)
Running: chebyshev_quadrature with k=2
  0.126734 seconds (2.71 k allocations: 2.355 MiB)
Running: chebyshev_quadrature with k=3
  0.123611 seconds (3.13 k allocations: 2.055 MiB)
Running: chebyshev_quadrature with k=4
  0.124590 seconds (3.14 k allocations: 1.496 MiB)
Running: jacobi_quadrature with α=β=1
  8.528597 seconds (366.12 k allocations: 904.813 MiB, 3.02% gc time)
Running: legendre_quadrature
  0.104444 seconds (1.27 k allocations: 68.203 KiB)
Running: lobatto_quadrature
  0.000234 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000223 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  3.980512 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000538 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  4.450122 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.073028 seconds (997 allocations: 56.672 KiB)
Running: simpsons_rule
  0.000044 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000051 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000850 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000784 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.152166 seconds (2.53 k allocations: 579.203 KiB)
Running: chebyshev_quadrature with k=2
  0.114543 seconds (2.79 k allocations: 780.188 KiB)
Running: chebyshev_quadrature with k=3
  0.191370 seconds (3.21 k allocations: 688.438 KiB)
Running: chebyshev_quadrature with k=4
  0.136570 seconds (3.21 k allocations: 519.000 KiB)
Running: jacobi_quadrature with α=β=1
  2.955972 seconds (372.69 k allocations: 252.949 MiB)
Running: legendre_quadrature
  0.114187 seconds (1.32 k allocations: 67.859 KiB)
Running: lobatto_quadrature
  0.000110 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000053 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 11.760909 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001235 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 12.081336 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.088376 seconds (1.21 k allocations: 64.938 KiB)
Running: simpsons_rule
  0.000065 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000049 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001911 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
