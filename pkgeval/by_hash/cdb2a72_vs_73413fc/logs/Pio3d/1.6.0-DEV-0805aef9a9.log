Julia Version 1.6.0-DEV.968
Commit 0805aef9a9* (2020-09-18 09:12 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed Pio3d ────────── v0.0.2
  Installed VersionParsing ─ v1.2.0
  Installed PyCall ───────── v1.91.4
  Installed Parsers ──────── v1.0.10
  Installed MacroTools ───── v0.5.5
  Installed JSON ─────────── v0.21.1
  Installed Conda ────────── v1.4.1
Updating `~/.julia/environments/v1.6/Project.toml`
  [276a7f50] + Pio3d v0.0.2
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [8f4d0f93] + Conda v1.4.1
  [682c06a0] + JSON v0.21.1
  [1914dd2f] + MacroTools v0.5.5
  [69de0a69] + Parsers v1.0.10
  [276a7f50] + Pio3d v0.0.2
  [438e738f] + PyCall v1.91.4
  [81def892] + VersionParsing v1.2.0
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [de0858da] + Printf
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [4ec0a83e] + Unicode
   Building Conda ─→ `~/.julia/packages/Conda/3rPhK/deps/build.log`
   Building PyCall → `~/.julia/packages/PyCall/zqDXB/deps/build.log`
    Testing Pio3d
Status `/tmp/jl_id3dUV/Project.toml`
  [276a7f50] Pio3d v0.0.2
  [438e738f] PyCall v1.91.4
  [8dfed614] Test
Status `/tmp/jl_id3dUV/Manifest.toml`
  [8f4d0f93] Conda v1.4.1
  [682c06a0] JSON v0.21.1
  [1914dd2f] MacroTools v0.5.5
  [69de0a69] Parsers v1.0.10
  [276a7f50] Pio3d v0.0.2
  [438e738f] PyCall v1.91.4
  [81def892] VersionParsing v1.2.0
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [de0858da] Printf
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [4ec0a83e] Unicode
    Testing Running tests...
Pio3d.jl: Error During Test at /home/pkgeval/.julia/packages/Pio3d/qsitX/test/runtests.jl:6
  Test threw exception
  Expression: "nrn4" in Pio3d.get_labels()
  PyError (PyImport_ImportModule
  
  The Python package io3d.datasets could not be found by pyimport. Usually this means
  that you did not install io3d.datasets in the Python version being used by PyCall.
  
  PyCall is currently configured to use the Julia-specific Python distribution
  installed by the Conda.jl package.  To install the io3d.datasets module, you can
  use `pyimport_conda("io3d.datasets", PKG)`, where PKG is the Anaconda
  package the contains the module io3d.datasets, or alternatively you can use the
  Conda package directly (via `using Conda` followed by `Conda.add` etcetera).
  
  Alternatively, if you want to use a different Python distribution on your
  system, such as a system-wide Python (as opposed to the Julia-specific Python),
  you can re-configure PyCall with that Python.   As explained in the PyCall
  documentation, set ENV["PYTHON"] to the path/name of the python executable
  you want to use, run Pkg.build("PyCall"), and re-launch Julia.
  
  ) <class 'ModuleNotFoundError'>
  ModuleNotFoundError("No module named 'io3d'")
  
  Stacktrace:
   [1] pyimport(name::String)
     @ PyCall ~/.julia/packages/PyCall/zqDXB/src/PyCall.jl:536
   [2] get_labels()
     @ Pio3d ~/.julia/packages/Pio3d/qsitX/src/Pio3d.jl:52
   [3] top-level scope
     @ ~/.julia/packages/Pio3d/qsitX/test/runtests.jl:6
   [4] top-level scope
     @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [5] top-level scope
     @ ~/.julia/packages/Pio3d/qsitX/test/runtests.jl:6
Pio3d.jl: Error During Test at /home/pkgeval/.julia/packages/Pio3d/qsitX/test/runtests.jl:4
  Got exception outside of a @test
  PyError (PyImport_ImportModule
  
  The Python package io3d.datasets could not be found by pyimport. Usually this means
  that you did not install io3d.datasets in the Python version being used by PyCall.
  
  PyCall is currently configured to use the Julia-specific Python distribution
  installed by the Conda.jl package.  To install the io3d.datasets module, you can
  use `pyimport_conda("io3d.datasets", PKG)`, where PKG is the Anaconda
  package the contains the module io3d.datasets, or alternatively you can use the
  Conda package directly (via `using Conda` followed by `Conda.add` etcetera).
  
  Alternatively, if you want to use a different Python distribution on your
  system, such as a system-wide Python (as opposed to the Julia-specific Python),
  you can re-configure PyCall with that Python.   As explained in the PyCall
  documentation, set ENV["PYTHON"] to the path/name of the python executable
  you want to use, run Pkg.build("PyCall"), and re-launch Julia.
  
  ) <class 'ModuleNotFoundError'>
  ModuleNotFoundError("No module named 'io3d'")
  
  Stacktrace:
    [1] pyimport(name::String)
      @ PyCall ~/.julia/packages/PyCall/zqDXB/src/PyCall.jl:536
    [2] datasets_download(label::String)
      @ Pio3d ~/.julia/packages/Pio3d/qsitX/src/Pio3d.jl:33
    [3] top-level scope
      @ ~/.julia/packages/Pio3d/qsitX/test/runtests.jl:7
    [4] top-level scope
      @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
    [5] top-level scope
      @ ~/.julia/packages/Pio3d/qsitX/test/runtests.jl:6
    [6] include(fname::String)
      @ Base.MainInclude ./client.jl:444
    [7] top-level scope
      @ none:6
    [8] eval(m::Module, e::Any)
      @ Core ./boot.jl:345
    [9] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [10] _start()
      @ Base ./client.jl:485
Test Summary: | Error  Total
Pio3d.jl      |     2      2
ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 2 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/Pio3d/qsitX/test/runtests.jl:4
ERROR: Package Pio3d errored during testing
Stacktrace:
  [1] pkgerror(msg::String)
    @ Pkg.Types /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1580
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:327
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:314
  [5] #test#62
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [6] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [7] #test#61
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [8] test
    @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [10] test(pkg::String)
    @ Pkg.API /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [11] top-level scope
    @ none:19
