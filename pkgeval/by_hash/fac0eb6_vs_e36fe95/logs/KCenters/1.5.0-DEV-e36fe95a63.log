Julia Version 1.5.0-DEV.285
Commit e36fe95a63 (2020-02-18 00:48 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed LearnBase ─────────────────── v0.2.2
  Installed SortingAlgorithms ─────────── v0.3.1
  Installed PooledArrays ──────────────── v0.5.3
  Installed Parsers ───────────────────── v0.3.11
  Installed TableTraits ───────────────── v1.0.0
  Installed Compat ────────────────────── v3.5.0
  Installed OrderedCollections ────────── v1.1.0
  Installed KCenters ──────────────────── v0.2.1
  Installed InvertedIndices ───────────── v1.0.0
  Installed MLDataUtils ───────────────── v0.5.0
  Installed Missings ──────────────────── v0.4.3
  Installed MappedArrays ──────────────── v0.2.2
  Installed DataStructures ────────────── v0.17.9
  Installed Tables ────────────────────── v1.0.1
  Installed MLLabelUtils ──────────────── v0.5.1
  Installed StatsBase ─────────────────── v0.32.1
  Installed Reexport ──────────────────── v0.2.0
  Installed DataFrames ────────────────── v0.20.2
  Installed JSON ──────────────────────── v0.21.0
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed DataValueInterfaces ───────── v1.0.0
  Installed DataAPI ───────────────────── v1.1.0
  Installed CategoricalArrays ─────────── v0.7.7
  Installed MLDataPattern ─────────────── v0.5.0
  Installed SimilaritySearch ──────────── v0.3.19
   Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.2.1
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.5.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.2
  [864edb3b] + DataStructures v0.17.9
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.2.1
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.11
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.19
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.1
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.0.1
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
    Testing KCenters
Status `/tmp/jl_Q37IXD/Manifest.toml`
  [324d7699] CategoricalArrays v0.7.7
  [34da2185] Compat v3.5.0
  [9a962f9c] DataAPI v1.1.0
  [a93c6f00] DataFrames v0.20.2
  [864edb3b] DataStructures v0.17.9
  [e2d170a0] DataValueInterfaces v1.0.0
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.1
  [7f8f8fb0] LearnBase v0.2.2
  [9920b226] MLDataPattern v0.5.0
  [cc2ba9b6] MLDataUtils v0.5.0
  [66a33bbf] MLLabelUtils v0.5.1
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.1.0
  [69de0a69] Parsers v0.3.11
  [2dfb63ee] PooledArrays v0.5.3
  [189a3867] Reexport v0.2.0
  [053f045d] SimilaritySearch v0.3.19
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.1
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.1
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [9fa8497b] Future 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [1a1011a3] SharedArrays 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
Test Summary: | Pass  Total
Scores        |    9      9
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 1.0716527590155602
[ Info: 0.9323044313987097
[ Info: 0.8302954188982645
[ Info: 0.5544053038458029
Test Summary:        |
Clustering with dnet | No tests
mean(cfft.distances) = 0.3260770692676306
mean(cdnet.distances) = 0.4302204669266939
mean(crand.distances) = 0.354335672557354
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.21484375, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.21484375,"f1":null,"seconds":3.7476420402526855e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":6.703125,"distances_sum":621.6005429122558}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.21484375,"state":{"ssize":4,"bsize":1},"perf":{"precision":null,"recall":0.21484375,"f1":null,"seconds":3.7476420402526855e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":6.703125,"distances_sum":621.6005429122558}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6826171875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6826171875,"f1":0.8020391067266076,"seconds":5.00120222568512e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.5625,"distances_sum":2029.5666148899352}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.783203125, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.783203125,"f1":0.8693774975024983,"seconds":5.4370611906051636e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.671875,"distances_sum":2367.086808609428}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.787109375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.787109375,"f1":0.8732090825840834,"seconds":5.418434739112854e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.7421875,"distances_sum":2399.9626697519807}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.787109375,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.787109375,"f1":0.8732090825840834,"seconds":5.418434739112854e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.7421875,"distances_sum":2399.9626697519807}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8359375, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8359375,"f1":0.9039439726939735,"seconds":5.677342414855957e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.7109375,"distances_sum":2571.630006437094}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9588598901098908,"seconds":5.999580025672913e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.8984375,"distances_sum":3029.3224289990376}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9525755494505499,"seconds":5.707144737243652e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.9375,"distances_sum":2940.686077558582}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":9,"bsize":7}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9448005119880125,"seconds":5.977228283882141e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.9296875,"distances_sum":2888.0669546119743}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":9,"bsize":8}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9530963827838834,"seconds":5.969777703285217e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.8671875,"distances_sum":2977.143756419882}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":10,"bsize":8}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9538976648351655,"seconds":6.01448118686676e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.859375,"distances_sum":2994.091005047195}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8662109375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8662109375,"f1":0.9230972152847161,"seconds":5.62518835067749e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.75,"distances_sum":2731.6117173304974}, best_list's length: 14, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.791015625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.791015625,"f1":0.8754183316683324,"seconds":5.638226866722107e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.6796875,"distances_sum":2416.6123542727355}, best_list's length: 15, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.927734375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9588598901098908,"seconds":5.999580025672913e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.8984375,"distances_sum":3029.3224289990376}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.927734375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9588598901098908,"seconds":5.999580025672913e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.8984375,"distances_sum":3029.3224289990376}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7734375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7734375,"f1":0.8640961469086477,"seconds":5.31412661075592e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.6875,"distances_sum":2262.565357338914}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7861328125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7861328125,"f1":0.8737184690309697,"seconds":5.48921525478363e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.734375,"distances_sum":2268.3989611495476}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7861328125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7861328125,"f1":0.8737184690309697,"seconds":5.48921525478363e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.734375,"distances_sum":2268.3989611495476}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.954023580586081,"seconds":5.928799510002136e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.9609375,"distances_sum":2856.458196514787}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9449862637362644,"seconds":5.634501576423645e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.9296875,"distances_sum":2768.4254290257304}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8544921875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8544921875,"f1":0.9173305860805869,"seconds":5.720183253288269e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.7578125,"distances_sum":2518.312745872149}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.919921875,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.919921875,"f1":0.954023580586081,"seconds":5.928799510002136e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.9609375,"distances_sum":2856.458196514787}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9731799450549454,"seconds":6.424263119697571e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.984375,"distances_sum":2998.8137638363532}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9682520604395607,"seconds":6.204470992088318e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.96875,"distances_sum":2941.930988400149}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.976825778388279,"seconds":6.198883056640625e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.984375,"distances_sum":3038.6493596126543}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.966796875, conf: {"ssize":7,"bsize":12}, perf: {"precision":1.0,"recall":0.966796875,"f1":0.9816792582417585,"seconds":6.3944607973098755e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":9.0,"distances_sum":3083.400744535252}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9624656593406596,"seconds":0.00010238401591777802,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.96875,"distances_sum":2927.952206467092}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9712053571428576,"seconds":5.910173058509827e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.9921875,"distances_sum":2963.4925465152924}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.966796875,"state":{"ssize":7,"bsize":12},"perf":{"precision":1.0,"recall":0.966796875,"f1":0.9816792582417585,"seconds":6.3944607973098755e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":9.0,"distances_sum":3083.400744535252}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.966796875,"state":{"ssize":7,"bsize":12},"perf":{"precision":1.0,"recall":0.966796875,"f1":0.9816792582417585,"seconds":6.3944607973098755e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":9.0,"distances_sum":3083.400744535252}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.53125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.53125,"f1":0.6752282439782445,"seconds":4.0084123611450195e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":7.0390625,"distances_sum":1282.718793912768}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4267578125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4267578125,"f1":null,"seconds":3.648921847343445e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":6.3125,"distances_sum":1003.0684909903507}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.53125,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.53125,"f1":0.6752282439782445,"seconds":4.0084123611450195e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":7.0390625,"distances_sum":1282.718793912768}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8369140625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8369140625,"f1":0.9054658882783889,"seconds":7.947906851768494e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.453125,"distances_sum":2264.85308598392}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.705078125, conf: {"ssize":3,"bsize":4}, perf: {"precision":null,"recall":0.705078125,"f1":null,"seconds":4.675239324569702e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.03125,"distances_sum":1802.7160709906439}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.89453125,"f1":0.9407623626373632,"seconds":8.026137948036194e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.6953125,"distances_sum":2527.0370859802506}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7724609375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7724609375,"f1":0.8644574175824187,"seconds":4.937872290611267e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.1875,"distances_sum":2030.9869645111226}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7275390625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7275390625,"f1":0.8351029179154187,"seconds":4.861503839492798e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.0234375,"distances_sum":1831.9740497205498}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.89453125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.89453125,"f1":0.9407623626373632,"seconds":8.026137948036194e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.6953125,"distances_sum":2527.0370859802506}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9586767399267403,"seconds":5.597248673439026e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.84375,"distances_sum":2679.3094714014883}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.951940247252748,"seconds":6.774440407752991e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.8515625,"distances_sum":2608.963228159066}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9518117299367304,"seconds":5.5655837059021e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.7890625,"distances_sum":2637.3694207362632}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9612408424908427,"seconds":5.837529897689819e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.890625,"distances_sum":2671.8455332983726}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9696829212454214,"seconds":6.424263119697571e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.859375,"distances_sum":2748.938884310611}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.956421703296704,"seconds":5.841255187988281e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.8515625,"distances_sum":2645.606101704045}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9453125,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9696829212454214,"seconds":6.424263119697571e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.859375,"distances_sum":2748.938884310611}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9453125,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9696829212454214,"seconds":6.424263119697571e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.859375,"distances_sum":2748.938884310611}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.404296875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.404296875,"f1":null,"seconds":3.8016587495803833e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":6.0234375,"distances_sum":984.6781310414934}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5478515625, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.5478515625,"f1":0.6920182248307253,"seconds":4.250556230545044e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":6.8984375,"distances_sum":1411.4842500713507}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.19921875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.19921875,"f1":null,"seconds":3.3564865589141846e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":5.6953125,"distances_sum":486.0321620367703}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5478515625,"state":{"ssize":5,"bsize":3},"perf":{"precision":1.0,"recall":0.5478515625,"f1":0.6920182248307253,"seconds":4.250556230545044e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":6.8984375,"distances_sum":1411.4842500713507}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6533203125, conf: {"ssize":8,"bsize":4}, perf: {"precision":1.0,"recall":0.6533203125,"f1":0.7799835581085588,"seconds":4.777684807777405e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":7.4453125,"distances_sum":1718.2540425476163}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.85546875, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.85546875,"f1":0.9159340659340668,"seconds":5.671754479408264e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.53125,"distances_sum":2425.1757263573245}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7724609375, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7724609375,"f1":0.8632617382617391,"seconds":5.297362804412842e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.03125,"distances_sum":2138.8146363159894}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.703125, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.703125,"f1":0.8168565809190818,"seconds":4.958361387252808e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":7.5625,"distances_sum":1928.7233229595147}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6796875, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6796875,"f1":0.7992830086580093,"seconds":5.09992241859436e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":7.546875,"distances_sum":1815.3783666957759}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6787109375, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6787109375,"f1":0.7974551490176498,"seconds":4.887580871582031e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":7.5390625,"distances_sum":1826.7227870579377}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5546875, conf: {"ssize":7,"bsize":3}, perf: {"precision":1.0,"recall":0.5546875,"f1":0.6959269896769901,"seconds":4.6156346797943115e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":6.96875,"distances_sum":1452.8495634862163}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.85546875,"state":{"ssize":8,"bsize":6},"perf":{"precision":1.0,"recall":0.85546875,"f1":0.9159340659340668,"seconds":5.671754479408264e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.53125,"distances_sum":2425.1757263573245}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9574633699633703,"seconds":7.212162017822266e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.7890625,"distances_sum":2758.074006558696}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9507154304029309,"seconds":6.3050538301467896e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.7578125,"distances_sum":2727.928082530127}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9466434607059612,"seconds":6.0889869928359985e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.7578125,"distances_sum":2698.306581063447}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.859375, conf: {"ssize":9,"bsize":6}, perf: {"precision":1.0,"recall":0.859375,"f1":0.9183925449550454,"seconds":5.939975380897522e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.578125,"distances_sum":2447.807781637914}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9486149267399271,"seconds":6.128102540969849e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.6953125,"distances_sum":2747.0632067395723}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8662109375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8662109375,"f1":0.9222615925740931,"seconds":5.990266799926758e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.6171875,"distances_sum":2467.95074076404}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.923828125,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.9574633699633703,"seconds":7.212162017822266e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.7890625,"distances_sum":2758.074006558696}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.923828125,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.9574633699633703,"seconds":7.212162017822266e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.7890625,"distances_sum":2758.074006558696}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6708984375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6708984375,"f1":0.7916292041292049,"seconds":4.967674612998962e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":7.5703125,"distances_sum":1660.5643103058915}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.23046875, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.23046875,"f1":null,"seconds":3.4831464290618896e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":6.234375,"distances_sum":501.3065307655285}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.748046875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.748046875,"f1":0.8465726981351989,"seconds":5.6121498346328735e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.2890625,"distances_sum":1859.5187605844844}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.748046875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.748046875,"f1":0.8465726981351989,"seconds":5.6121498346328735e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.2890625,"distances_sum":1859.5187605844844}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.837890625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.837890625,"f1":0.906619422244423,"seconds":9.190291166305542e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.6015625,"distances_sum":2184.2898578012077}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.837890625,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.837890625,"f1":0.906619422244423,"seconds":9.190291166305542e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.6015625,"distances_sum":2184.2898578012077}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9723958333333337,"seconds":6.338581442832947e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.8984375,"distances_sum":2666.1648384065043}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.869140625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.869140625,"f1":0.9231747419247426,"seconds":9.058043360710144e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.6875,"distances_sum":2288.8135464861966}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9501953125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9723958333333337,"seconds":6.338581442832947e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.8984375,"distances_sum":2666.1648384065043}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9501953125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9723958333333337,"seconds":6.338581442832947e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.8984375,"distances_sum":2666.1648384065043}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2177734375, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2177734375,"f1":null,"seconds":3.3602118492126465e-6,"exhaustive_search_seconds":1.6707926988601685e-6,"evaluations":5.7109375,"distances_sum":466.47877691562525}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.521484375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.521484375,"f1":0.6727529415029421,"seconds":4.276633262634277e-6,"exhaustive_search_seconds":1.6707926988601685e-6,"evaluations":7.0078125,"distances_sum":1046.1561500182274}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.736328125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.736328125,"f1":0.8400510947385954,"seconds":6.802380084991455e-6,"exhaustive_search_seconds":1.6707926988601685e-6,"evaluations":7.953125,"distances_sum":1709.3932011689117}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.736328125,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.736328125,"f1":0.8400510947385954,"seconds":6.802380084991455e-6,"exhaustive_search_seconds":1.6707926988601685e-6,"evaluations":7.953125,"distances_sum":1709.3932011689117}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.736328125,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.736328125,"f1":0.8400510947385954,"seconds":6.802380084991455e-6,"exhaustive_search_seconds":1.6707926988601685e-6,"evaluations":7.953125,"distances_sum":1709.3932011689117}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.736328125,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.736328125,"f1":0.8400510947385954,"seconds":6.802380084991455e-6,"exhaustive_search_seconds":1.6707926988601685e-6,"evaluations":7.953125,"distances_sum":1709.3932011689117}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7587890625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7587890625,"f1":0.8538981851481859,"seconds":5.401670932769775e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.1484375,"distances_sum":1874.3728780269087}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.25390625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.25390625,"f1":null,"seconds":3.559514880180359e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":6.2109375,"distances_sum":593.0368293240938}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5556640625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5556640625,"f1":0.6981442168942175,"seconds":4.3977051973342896e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.203125,"distances_sum":1297.6984094893032}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7587890625,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7587890625,"f1":0.8538981851481859,"seconds":5.401670932769775e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.1484375,"distances_sum":1874.3728780269087}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8408203125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8408203125,"f1":0.9078499625374632,"seconds":5.457550287246704e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.6015625,"distances_sum":2181.9613402727477}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9490041208791217,"seconds":5.681067705154419e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.734375,"distances_sum":2473.4034851897795}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9711710164835166,"seconds":5.826354026794434e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.8828125,"distances_sum":2657.8902724625027}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.822265625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.822265625,"f1":0.8966720779220785,"seconds":6.126239895820618e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.59375,"distances_sum":2129.736386893744}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7685546875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7685546875,"f1":0.8619994588744598,"seconds":5.111098289489746e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.1875,"distances_sum":1928.85001928816}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7783203125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7783203125,"f1":0.868372773060274,"seconds":5.098059773445129e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.3046875,"distances_sum":1985.329373168691}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9482421875,"state":{"ssize":8,"bsize":9},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9711710164835166,"seconds":5.826354026794434e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.8828125,"distances_sum":2657.8902724625027}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9677734375, conf: {"ssize":11,"bsize":13}, perf: {"precision":1.0,"recall":0.9677734375,"f1":0.9824404761904766,"seconds":6.3907355070114136e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.9609375,"distances_sum":2717.1893435136612}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9677734375,"state":{"ssize":11,"bsize":13},"perf":{"precision":1.0,"recall":0.9677734375,"f1":0.9824404761904766,"seconds":6.3907355070114136e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.9609375,"distances_sum":2717.1893435136612}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9677734375,"state":{"ssize":11,"bsize":13},"perf":{"precision":1.0,"recall":0.9677734375,"f1":0.9824404761904766,"seconds":6.3907355070114136e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.9609375,"distances_sum":2717.1893435136612}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4462890625, conf: {"ssize":2,"bsize":3}, perf: {"precision":null,"recall":0.4462890625,"f1":null,"seconds":3.77558171749115e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":6.2421875,"distances_sum":1139.5141114856635}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.71875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.71875,"f1":0.8221022033522041,"seconds":5.105510354042053e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":7.9765625,"distances_sum":1929.7946329548056}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.71875,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.71875,"f1":0.8221022033522041,"seconds":5.105510354042053e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":7.9765625,"distances_sum":1929.7946329548056}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8671875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8671875,"f1":0.9213375166500174,"seconds":5.321577191352844e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.53125,"distances_sum":2489.344335982644}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9506925366300372,"seconds":5.686655640602112e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.7421875,"distances_sum":2658.6909002084326}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.724609375, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.724609375,"f1":0.8311511405261415,"seconds":4.8857182264328e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.203125,"distances_sum":1876.4812512958622}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9130859375,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9130859375,"f1":0.9506925366300372,"seconds":5.686655640602112e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.7421875,"distances_sum":2658.6909002084326}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9693280677655681,"seconds":5.902722477912903e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.859375,"distances_sum":2772.180949243574}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":7,"bsize":13}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9708161630036635,"seconds":5.990266799926758e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.8984375,"distances_sum":2766.453855851391}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9659970238095243,"seconds":5.895271897315979e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.875,"distances_sum":2746.6042825656227}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9551167582417588,"seconds":5.712732672691345e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.8515625,"distances_sum":2643.5418085812926}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.947265625,"state":{"ssize":7,"bsize":13},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9708161630036635,"seconds":5.990266799926758e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.8984375,"distances_sum":2766.453855851391}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.947265625,"state":{"ssize":7,"bsize":13},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9708161630036635,"seconds":5.990266799926758e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.8984375,"distances_sum":2766.453855851391}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.783203125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.783203125,"f1":0.8653664044289052,"seconds":5.1818788051605225e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.46875,"distances_sum":2143.5029334013184}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4599609375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.4599609375,"f1":0.6224768287268292,"seconds":3.812834620475769e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":6.4140625,"distances_sum":1282.396748165939}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6640625, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6640625,"f1":0.7853493728493737,"seconds":4.6603381633758545e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":7.9921875,"distances_sum":1769.6422725356797}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.783203125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.783203125,"f1":0.8653664044289052,"seconds":5.1818788051605225e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.46875,"distances_sum":2143.5029334013184}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.951917353479854,"seconds":5.509704351425171e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.796875,"distances_sum":2660.110385876552}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.822265625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.822265625,"f1":0.8896436896436903,"seconds":5.211681127548218e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.578125,"distances_sum":2281.075213381385}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9502117673992676,"seconds":5.381181836128235e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.765625,"distances_sum":2656.421282279562}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9150390625,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9150390625,"f1":0.951917353479854,"seconds":5.509704351425171e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.796875,"distances_sum":2660.110385876552}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":7,"bsize":13}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9771577380952383,"seconds":5.826354026794434e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.9375,"distances_sum":2820.652776509467}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.958984375, conf: {"ssize":9,"bsize":13}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.9771062271062274,"seconds":6.094574928283691e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.9140625,"distances_sum":2828.743862178487}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9579155219780227,"seconds":5.416572093963623e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.8203125,"distances_sum":2694.784291854627}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9769917582417583,"seconds":5.60469925403595e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.9140625,"distances_sum":2819.7977657260185}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9573317307692314,"seconds":5.478039383888245e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.8125,"distances_sum":2691.3865265615214}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9611320970695976,"seconds":5.768612027168274e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.8671875,"distances_sum":2725.8776639794078}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.958984375,"state":{"ssize":9,"bsize":13},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9771062271062274,"seconds":6.094574928283691e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.9140625,"distances_sum":2828.743862178487}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.958984375,"state":{"ssize":9,"bsize":13},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9771062271062274,"seconds":6.094574928283691e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.9140625,"distances_sum":2828.743862178487}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.404296875, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.404296875,"f1":null,"seconds":3.5874545574188232e-6,"exhaustive_search_seconds":1.1809170246124268e-6,"evaluations":6.828125,"distances_sum":910.2515809268034}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.27734375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.27734375,"f1":null,"seconds":3.3918768167495728e-6,"exhaustive_search_seconds":1.1809170246124268e-6,"evaluations":6.6328125,"distances_sum":603.905633663342}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.404296875,"state":{"ssize":5,"bsize":2},"perf":{"precision":null,"recall":0.404296875,"f1":null,"seconds":3.5874545574188232e-6,"exhaustive_search_seconds":1.1809170246124268e-6,"evaluations":6.828125,"distances_sum":910.2515809268034}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7119140625, conf: {"ssize":5,"bsize":4}, perf: {"precision":null,"recall":0.7119140625,"f1":null,"seconds":4.608184099197388e-6,"exhaustive_search_seconds":1.1809170246124268e-6,"evaluations":8.1171875,"distances_sum":1756.901352540993}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.80859375, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.80859375,"f1":0.8835482226107233,"seconds":5.172565579414368e-6,"exhaustive_search_seconds":1.1809170246124268e-6,"evaluations":8.2890625,"distances_sum":2070.052964322577}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.58984375, conf: {"ssize":8,"bsize":3}, perf: {"precision":1.0,"recall":0.58984375,"f1":0.7297055375180381,"seconds":4.258006811141968e-6,"exhaustive_search_seconds":1.1809170246124268e-6,"evaluations":7.65625,"distances_sum":1364.9194257309196}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.80859375,"state":{"ssize":6,"bsize":5},"perf":{"precision":1.0,"recall":0.80859375,"f1":0.8835482226107233,"seconds":5.172565579414368e-6,"exhaustive_search_seconds":1.1809170246124268e-6,"evaluations":8.2890625,"distances_sum":2070.052964322577}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8134765625, conf: {"ssize":9,"bsize":5}, perf: {"precision":1.0,"recall":0.8134765625,"f1":0.8894922785547791,"seconds":4.984438419342041e-6,"exhaustive_search_seconds":1.1809170246124268e-6,"evaluations":8.3515625,"distances_sum":2068.320291152582}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":9,"bsize":7}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.9371940559440568,"seconds":5.144625902175903e-6,"exhaustive_search_seconds":1.1809170246124268e-6,"evaluations":8.5703125,"distances_sum":2386.3912554840877}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.814453125, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.814453125,"f1":0.8888455294705304,"seconds":5.1818788051605225e-6,"exhaustive_search_seconds":1.1809170246124268e-6,"evaluations":8.28125,"distances_sum":2071.5511015661104}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.9318910256410261,"seconds":5.636364221572876e-6,"exhaustive_search_seconds":1.1809170246124268e-6,"evaluations":8.4609375,"distances_sum":2316.9707054910773}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8916015625,"state":{"ssize":9,"bsize":7},"perf":{"precision":1.0,"recall":0.8916015625,"f1":0.9371940559440568,"seconds":5.144625902175903e-6,"exhaustive_search_seconds":1.1809170246124268e-6,"evaluations":8.5703125,"distances_sum":2386.3912554840877}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8916015625,"state":{"ssize":9,"bsize":7},"perf":{"precision":1.0,"recall":0.8916015625,"f1":0.9371940559440568,"seconds":5.144625902175903e-6,"exhaustive_search_seconds":1.1809170246124268e-6,"evaluations":8.5703125,"distances_sum":2386.3912554840877}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.744140625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.744140625,"f1":0.8475623334998343,"seconds":5.237758159637451e-6,"exhaustive_search_seconds":1.0933727025985718e-6,"evaluations":8.0,"distances_sum":1515.9784249479012}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3935546875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3935546875,"f1":null,"seconds":3.77558171749115e-6,"exhaustive_search_seconds":1.0933727025985718e-6,"evaluations":6.3203125,"distances_sum":714.6319483029658}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.744140625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.744140625,"f1":0.8475623334998343,"seconds":5.237758159637451e-6,"exhaustive_search_seconds":1.0933727025985718e-6,"evaluations":8.0,"distances_sum":1515.9784249479012}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7646484375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7646484375,"f1":0.8607288544788553,"seconds":5.191192030906677e-6,"exhaustive_search_seconds":1.0933727025985718e-6,"evaluations":8.078125,"distances_sum":1566.0799512130402}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9537462537462543,"seconds":5.781650543212891e-6,"exhaustive_search_seconds":1.0933727025985718e-6,"evaluations":8.90625,"distances_sum":2160.322013860418}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8974609375,"f1":0.9421188186813192,"seconds":5.99399209022522e-6,"exhaustive_search_seconds":1.0933727025985718e-6,"evaluations":8.875,"distances_sum":2071.6116133485216}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.849609375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.849609375,"f1":0.914019834332335,"seconds":5.619600415229797e-6,"exhaustive_search_seconds":1.0933727025985718e-6,"evaluations":8.484375,"distances_sum":1904.4538142863096}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9189453125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.9537462537462543,"seconds":5.781650543212891e-6,"exhaustive_search_seconds":1.0933727025985718e-6,"evaluations":8.90625,"distances_sum":2160.322013860418}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9632326007326009,"seconds":6.042420864105225e-6,"exhaustive_search_seconds":1.0933727025985718e-6,"evaluations":8.96875,"distances_sum":2209.2521872322695}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.9754292582417585,"seconds":6.44288957118988e-6,"exhaustive_search_seconds":1.0933727025985718e-6,"evaluations":8.9765625,"distances_sum":2291.0404123778476}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9558436355311362,"seconds":6.074085831642151e-6,"exhaustive_search_seconds":1.0933727025985718e-6,"evaluations":8.90625,"distances_sum":2166.456075859637}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.962890625, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.962890625,"f1":0.9795043498168501,"seconds":6.632879376411438e-6,"exhaustive_search_seconds":1.0933727025985718e-6,"evaluations":8.953125,"distances_sum":2323.156525291435}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9769745879120882,"seconds":6.161630153656006e-6,"exhaustive_search_seconds":1.0933727025985718e-6,"evaluations":8.9921875,"distances_sum":2301.8792026943584}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.962890625,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.962890625,"f1":0.9795043498168501,"seconds":6.632879376411438e-6,"exhaustive_search_seconds":1.0933727025985718e-6,"evaluations":8.953125,"distances_sum":2323.156525291435}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.962890625,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.962890625,"f1":0.9795043498168501,"seconds":6.632879376411438e-6,"exhaustive_search_seconds":1.0933727025985718e-6,"evaluations":8.953125,"distances_sum":2323.156525291435}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5380859375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5380859375,"f1":0.6851578976578983,"seconds":4.04752790927887e-6,"exhaustive_search_seconds":2.33575701713562e-6,"evaluations":6.796875,"distances_sum":1195.3058216939025}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3857421875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3857421875,"f1":null,"seconds":3.939494490623474e-6,"exhaustive_search_seconds":2.33575701713562e-6,"evaluations":6.4453125,"distances_sum":837.6565610043441}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5380859375,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5380859375,"f1":0.6851578976578983,"seconds":4.04752790927887e-6,"exhaustive_search_seconds":2.33575701713562e-6,"evaluations":6.796875,"distances_sum":1195.3058216939025}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.744140625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.744140625,"f1":0.8448161213786222,"seconds":4.999339580535889e-6,"exhaustive_search_seconds":2.33575701713562e-6,"evaluations":7.7109375,"distances_sum":1807.4790523050283}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.744140625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.744140625,"f1":0.8448161213786222,"seconds":4.999339580535889e-6,"exhaustive_search_seconds":2.33575701713562e-6,"evaluations":7.7109375,"distances_sum":1807.4790523050283}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.802734375, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.802734375,"f1":0.8849962537462546,"seconds":5.580484867095947e-6,"exhaustive_search_seconds":2.33575701713562e-6,"evaluations":8.2578125,"distances_sum":2012.1220913609661}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9670444139194143,"seconds":6.284564733505249e-6,"exhaustive_search_seconds":2.33575701713562e-6,"evaluations":8.921875,"distances_sum":2610.393603519617}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.96854967948718,"seconds":6.278976798057556e-6,"exhaustive_search_seconds":2.33575701713562e-6,"evaluations":8.90625,"distances_sum":2604.8226802790623}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.80078125, conf: {"ssize":9,"bsize":6}, perf: {"precision":1.0,"recall":0.80078125,"f1":0.8827812812187819,"seconds":5.498528480529785e-6,"exhaustive_search_seconds":2.33575701713562e-6,"evaluations":8.171875,"distances_sum":2042.3025636001291}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9443359375,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.96854967948718,"seconds":6.278976798057556e-6,"exhaustive_search_seconds":2.33575701713562e-6,"evaluations":8.90625,"distances_sum":2604.8226802790623}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9443359375,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.96854967948718,"seconds":6.278976798057556e-6,"exhaustive_search_seconds":2.33575701713562e-6,"evaluations":8.90625,"distances_sum":2604.8226802790623}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4169921875, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.4169921875,"f1":null,"seconds":3.4533441066741943e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":5.78125,"distances_sum":932.5813908459703}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4169921875,"state":{"ssize":5,"bsize":2},"perf":{"precision":null,"recall":0.4169921875,"f1":null,"seconds":3.4533441066741943e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":5.78125,"distances_sum":932.5813908459703}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.73828125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.73828125,"f1":0.8403768106893114,"seconds":5.085021257400513e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.7109375,"distances_sum":1807.8154357911717}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7490234375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7490234375,"f1":0.8489562520812529,"seconds":5.0477683544158936e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.625,"distances_sum":1858.5451821122278}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.845703125, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.845703125,"f1":0.9098760614385621,"seconds":5.4370611906051636e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.3046875,"distances_sum":2191.957454950659}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.845703125,"state":{"ssize":2,"bsize":6},"perf":{"precision":1.0,"recall":0.845703125,"f1":0.9098760614385621,"seconds":5.4370611906051636e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.3046875,"distances_sum":2191.957454950659}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9723214285714288,"seconds":5.763024091720581e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.8828125,"distances_sum":2643.9233914800657}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9553456959706965,"seconds":5.250796675682068e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.8046875,"distances_sum":2515.2830423758282}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9415267024642031,"seconds":5.407258868217468e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.6796875,"distances_sum":2424.4873028787074}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9570226648351655,"seconds":5.662441253662109e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.8046875,"distances_sum":2536.463484955281}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94921875,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9723214285714288,"seconds":5.763024091720581e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.8828125,"distances_sum":2643.9233914800657}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94921875,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9723214285714288,"seconds":5.763024091720581e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.8828125,"distances_sum":2643.9233914800657}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6650390625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6650390625,"f1":0.7838102869352876,"seconds":4.582107067108154e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":7.3515625,"distances_sum":1660.9537556570122}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6650390625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6650390625,"f1":0.7838102869352876,"seconds":4.582107067108154e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":7.3515625,"distances_sum":1660.9537556570122}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.9379578754578759,"seconds":5.7034194469451904e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.4921875,"distances_sum":2662.381005778831}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8916015625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.8916015625,"f1":0.9379578754578759,"seconds":5.7034194469451904e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.4921875,"distances_sum":2662.381005778831}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9609203296703301,"seconds":5.6438148021698e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.78125,"distances_sum":2764.3065425531768}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9720066391941395,"seconds":5.60469925403595e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.8828125,"distances_sum":2833.810662704824}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94921875,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9720066391941395,"seconds":5.60469925403595e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.8828125,"distances_sum":2833.810662704824}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94921875,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9720066391941395,"seconds":5.60469925403595e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.8828125,"distances_sum":2833.810662704824}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.224609375,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.224609375,"f1":null,"seconds":3.1422823667526245e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":4.875,"distances_sum":635.2661219295466}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.224609375,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.224609375,"f1":null,"seconds":3.1422823667526245e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":4.875,"distances_sum":635.2661219295466}}, n: 9
mean(cfft.distances) = 0.32607706864027086
mean(cdnet.distances) = 0.4313454654563584
mean(crand.distances) = 0.8793607899838746
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8555555555555555
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.8977777777777778
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8977777777777778
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8733333333333334
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.888888888888889
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.9022222222222221
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8688888888888888
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8933333333333332
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8911111111111111
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.8933333333333334
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9466666666666667
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.8911111111111111
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8488888888888888
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8755555555555555
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8911111111111111
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.88
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.8844444444444445
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.9333333333333332
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9244444444444445
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9199999999999999
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.9111111111111111
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.8666666666666666
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.9133333333333334
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.9199999999999999
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.9355555555555556
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.9311111111111111
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.88
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.9066666666666666
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.9066666666666666
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.8777777777777778
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.9
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.8355555555555556
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.9133333333333334
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.9088888888888889
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX==== split_entropy>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 8, 6]]
** centroid: 6, normalized-entropy: 0.9852281360342514, [(2, 8), (3, 6)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 9, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 10: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 1, 8]]
** centroid: 11, normalized-entropy: 0.5032583347756457, [(2, 1), (3, 8)]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 1, 3, 2, 3, 2, 3, 2, 1, 2, 3, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 8, 6]]
** centroid: 6, normalized-entropy: 0.9852281360342514, [(2, 8), (3, 6)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 9, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 10: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 1, 8]]
** centroid: 11, normalized-entropy: 0.5032583347756457, [(2, 1), (3, 8)]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 1, 3, 2, 3, 2, 3, 2, 1, 2, 3, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 8, 6]]
** centroid: 6, normalized-entropy: 0.9852281360342514, [(2, 8), (3, 6)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 9, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 10: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 1, 8]]
** centroid: 11, normalized-entropy: 0.5032583347756457, [(2, 1), (3, 8)]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 1, 3, 2, 3, 2, 3, 2, 1, 2, 3, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 8, 6]]
** centroid: 6, normalized-entropy: 0.9852281360342514, [(2, 8), (3, 6)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 9, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 10: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 1, 8]]
** centroid: 11, normalized-entropy: 0.5032583347756457, [(2, 1), (3, 8)]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 1, 3, 2, 3, 2, 3, 2, 1, 2, 3, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 8, 6]]
** centroid: 6, normalized-entropy: 0.9852281360342514, [(2, 8), (3, 6)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 9, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 10: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 1, 8]]
** centroid: 11, normalized-entropy: 0.5032583347756457, [(2, 1), (3, 8)]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 1, 3, 2, 3, 2, 3, 2, 1, 2, 3, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 8, 6]]
** centroid: 6, normalized-entropy: 0.9852281360342514, [(2, 8), (3, 6)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 9, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 10: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 1, 8]]
** centroid: 11, normalized-entropy: 0.5032583347756457, [(2, 1), (3, 8)]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 1, 3, 2, 3, 2, 3, 2, 1, 2, 3, 3]
acc = 0.9666666666666667
[ Info: ("XXXXXX==== split_entropy>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 8, 6]]
** centroid: 6, normalized-entropy: 0.9852281360342514, [(2, 8), (3, 6)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 9, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 10: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 1, 8]]
** centroid: 11, normalized-entropy: 0.5032583347756457, [(2, 1), (3, 8)]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 1, 3, 2, 3, 2, 3, 2, 1, 2, 3, 3]
acc = 0.9666666666666667
*** finished computation of 12 references, err: [Inf, 0.585012555172046] ***
*** center 1: selecting labels [1] (freq >= 1) [from [42, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 15, 2]]
** centroid: 4, normalized-entropy: 0.5225593745369407, [(2, 15), (3, 2)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 6: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 23, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 7]]
** centroid: 9, normalized-entropy: 0.8812908992306927, [(2, 3), (3, 7)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 13]]
** centroid: 12, normalized-entropy: 0.3712323266408756, [(2, 1), (3, 13)]
finished with 15 centroids; started with 12
acc = 0.9333333333333333
Test Summary: | Pass  Total
KNC           |    8      8
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.1911777486373019] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1911777486373019, 0.16505742303512475] ***
*** starting iteration: 2; err: [Inf, 0.1911777486373019, 0.16505742303512475] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1911777486373019, 0.16505742303512475, 0.15504929456543792] ***
*** starting iteration: 3; err: [Inf, 0.1911777486373019, 0.16505742303512475, 0.15504929456543792] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1911777486373019, 0.16505742303512475, 0.15504929456543792, 0.1525104719154011] ***
*** finished computation of 7 references, err: [Inf, 0.1911777486373019, 0.16505742303512475, 0.15504929456543792, 0.1525104719154011] ***
*** center 1: selecting labels [1] (freq >= 1) [from [80, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [42, 39, 0]]
** centroid: 2, normalized-entropy: 0.9990102708804813, [(1, 42), (2, 39)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [83, 60, 0]]
** centroid: 3, normalized-entropy: 0.9812579903566702, [(1, 83), (2, 60)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [19, 48, 0]]
** centroid: 4, normalized-entropy: 0.8602858652332406, [(1, 19), (2, 48)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 99, 25]]
** centroid: 5, normalized-entropy: 0.7251421964171215, [(2, 99), (3, 25)]
*** center 6: selecting labels [1] (freq >= 1) [from [89, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [82, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1746543543538947] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1746543543538947, 0.15292738889018703] ***
*** starting iteration: 2; err: [Inf, 0.1746543543538947, 0.15292738889018703] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1746543543538947, 0.15292738889018703, 0.1507196360591637] ***
*** starting iteration: 3; err: [Inf, 0.1746543543538947, 0.15292738889018703, 0.1507196360591637] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1746543543538947, 0.15292738889018703, 0.1507196360591637, 0.14948615810597898] ***
*** finished computation of 7 references, err: [Inf, 0.1746543543538947, 0.15292738889018703, 0.1507196360591637, 0.14948615810597898] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [85, 1, 0]]
** centroid: 1, normalized-entropy: 0.09140162014739266, [(1, 85), (2, 1)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 99, 24]]
** centroid: 2, normalized-entropy: 0.7120640548905481, [(2, 99), (3, 24)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 84, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [40, 48, 0]]
** centroid: 4, normalized-entropy: 0.9940302114769566, [(1, 40), (2, 48)]
*** center 5: selecting labels [1] (freq >= 1) [from [103, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [72, 9, 0]]
** centroid: 6, normalized-entropy: 0.5032583347756457, [(1, 72), (2, 9)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [77, 25, 0]]
** centroid: 7, normalized-entropy: 0.8034158480707552, [(1, 77), (2, 25)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.26246528758227927] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26246528758227927, 0.19635414672984758] ***
*** starting iteration: 2; err: [Inf, 0.26246528758227927, 0.19635414672984758] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26246528758227927, 0.19635414672984758, 0.169981578314702] ***
*** starting iteration: 3; err: [Inf, 0.26246528758227927, 0.19635414672984758, 0.169981578314702] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26246528758227927, 0.19635414672984758, 0.169981578314702, 0.16214993452399165] ***
*** finished computation of 7 references, err: [Inf, 0.26246528758227927, 0.19635414672984758, 0.169981578314702, 0.16214993452399165] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [121, 34, 0]]
** centroid: 1, normalized-entropy: 0.7589877064823829, [(1, 121), (2, 34)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 80, 15]]
** centroid: 2, normalized-entropy: 0.6292492238560344, [(2, 80), (3, 15)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 57, 0]]
*** center 4: selecting labels [1, 2, 3] (freq >= 1) [from [1, 78, 8]]
** centroid: 4, normalized-entropy: 0.3355872649478294, [(1, 1), (2, 78), (3, 8)]
*** center 5: selecting labels [1] (freq >= 1) [from [102, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [116, 13, 0]]
** centroid: 6, normalized-entropy: 0.4714480944105985, [(1, 116), (2, 13)]
*** center 7: selecting labels [1] (freq >= 1) [from [42, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2764338377287035] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2764338377287035, 0.2396288174777865] ***
*** finished computation of 3 references, err: [Inf, 0.2764338377287035, 0.2396288174777865] ***
*** center 1: selecting labels [1] (freq >= 2) [from [231, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [20, 174, 25]]
** centroid: 2, normalized-entropy: 0.5908015585536646, [(1, 20), (2, 174), (3, 25)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [144, 72, 0]]
** centroid: 3, normalized-entropy: 0.9182958340544894, [(1, 144), (2, 72)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3103335427086817] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3103335427086817, 0.2645159940719828] ***
*** finished computation of 3 references, err: [Inf, 0.3103335427086817, 0.2645159940719828] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [245, 91, 0]]
** centroid: 1, normalized-entropy: 0.842657877202239, [(1, 245), (2, 91)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 174, 24]]
** centroid: 2, normalized-entropy: 0.5328350630342235, [(2, 174), (3, 24)]
*** center 3: selecting labels [1] (freq >= 2) [from [132, 1, 0]]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3911245951688719] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3911245951688719, 0.27790878979681893] ***
*** finished computation of 3 references, err: [Inf, 0.3911245951688719, 0.27790878979681893] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [232, 20, 0]]
** centroid: 1, normalized-entropy: 0.39993804743902767, [(1, 232), (2, 20)]
*** center 2: selecting labels [1] (freq >= 2) [from [73, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [77, 242, 23]]
** centroid: 3, normalized-entropy: 0.6935729019298505, [(1, 77), (2, 242), (3, 23)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.19277964870294406] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19277964870294406, 0.16320612229680917] ***
*** starting iteration: 2; err: [Inf, 0.19277964870294406, 0.16320612229680917] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19277964870294406, 0.16320612229680917, 0.1578156374560602] ***
*** starting iteration: 3; err: [Inf, 0.19277964870294406, 0.16320612229680917, 0.1578156374560602] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19277964870294406, 0.16320612229680917, 0.1578156374560602, 0.1559992170509499] ***
*** starting iteration: 4; err: [Inf, 0.19277964870294406, 0.16320612229680917, 0.1578156374560602, 0.1559992170509499] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19277964870294406, 0.16320612229680917, 0.1578156374560602, 0.1559992170509499, 0.15523249212884577] ***
*** finished computation of 7 references, err: [Inf, 0.19277964870294406, 0.16320612229680917, 0.1578156374560602, 0.1559992170509499, 0.15523249212884577] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [15, 64, 0]]
** centroid: 1, normalized-entropy: 0.7012065844539666, [(1, 15), (2, 64)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [49, 66, 0]]
** centroid: 2, normalized-entropy: 0.9841787966895654, [(1, 49), (2, 66)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 36, 10]]
** centroid: 3, normalized-entropy: 0.7553754125614286, [(2, 36), (3, 10)]
*** center 4: selecting labels [1] (freq >= 1) [from [143, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [109, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 69, 15]]
** centroid: 6, normalized-entropy: 0.6769418697808861, [(2, 69), (3, 15)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [79, 11, 0]]
** centroid: 7, normalized-entropy: 0.5357150195407704, [(1, 79), (2, 11)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18444159017272596] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18444159017272596, 0.1525008505764606] ***
*** starting iteration: 2; err: [Inf, 0.18444159017272596, 0.1525008505764606] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18444159017272596, 0.1525008505764606, 0.1461003928276329] ***
*** starting iteration: 3; err: [Inf, 0.18444159017272596, 0.1525008505764606, 0.1461003928276329] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18444159017272596, 0.1525008505764606, 0.1461003928276329, 0.1452296629710042] ***
*** finished computation of 7 references, err: [Inf, 0.18444159017272596, 0.1525008505764606, 0.1461003928276329, 0.1452296629710042] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [38, 65, 0]]
** centroid: 1, normalized-entropy: 0.9498485528365604, [(1, 38), (2, 65)]
*** center 2: selecting labels [1] (freq >= 1) [from [104, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [40, 49, 0]]
** centroid: 3, normalized-entropy: 0.9926108898749407, [(1, 40), (2, 49)]
*** center 4: selecting labels [1] (freq >= 1) [from [76, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [73, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [46, 56, 0]]
** centroid: 6, normalized-entropy: 0.9930554830121975, [(1, 46), (2, 56)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 96, 24]]
** centroid: 7, normalized-entropy: 0.7219280948873623, [(2, 96), (3, 24)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19855629150983298] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19855629150983298, 0.1631115185902517] ***
*** starting iteration: 2; err: [Inf, 0.19855629150983298, 0.1631115185902517] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19855629150983298, 0.1631115185902517, 0.1568909323909718] ***
*** starting iteration: 3; err: [Inf, 0.19855629150983298, 0.1631115185902517, 0.1568909323909718] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19855629150983298, 0.1631115185902517, 0.1568909323909718, 0.1553018333312163] ***
*** starting iteration: 4; err: [Inf, 0.19855629150983298, 0.1631115185902517, 0.1568909323909718, 0.1553018333312163] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19855629150983298, 0.1631115185902517, 0.1568909323909718, 0.1553018333312163, 0.15413440439872433] ***
*** starting iteration: 5; err: [Inf, 0.19855629150983298, 0.1631115185902517, 0.1568909323909718, 0.1553018333312163, 0.15413440439872433] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19855629150983298, 0.1631115185902517, 0.1568909323909718, 0.1553018333312163, 0.15413440439872433, 0.15268918905390436] ***
*** starting iteration: 6; err: [Inf, 0.19855629150983298, 0.1631115185902517, 0.1568909323909718, 0.1553018333312163, 0.15413440439872433, 0.15268918905390436] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19855629150983298, 0.1631115185902517, 0.1568909323909718, 0.1553018333312163, 0.15413440439872433, 0.15268918905390436, 0.15127085758976336] ***
*** starting iteration: 7; err: [Inf, 0.19855629150983298, 0.1631115185902517, 0.1568909323909718, 0.1553018333312163, 0.15413440439872433, 0.15268918905390436, 0.15127085758976336] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19855629150983298, 0.1631115185902517, 0.1568909323909718, 0.1553018333312163, 0.15413440439872433, 0.15268918905390436, 0.15127085758976336, 0.15034368247033908] ***
*** finished computation of 7 references, err: [Inf, 0.19855629150983298, 0.1631115185902517, 0.1568909323909718, 0.1553018333312163, 0.15413440439872433, 0.15268918905390436, 0.15127085758976336, 0.15034368247033908] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 75, 23]]
** centroid: 1, normalized-entropy: 0.7861044688447759, [(2, 75), (3, 23)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [80, 46, 0]]
** centroid: 2, normalized-entropy: 0.9468188316776024, [(1, 80), (2, 46)]
*** center 3: selecting labels [1] (freq >= 1) [from [96, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [88, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [22, 67, 0]]
** centroid: 5, normalized-entropy: 0.8067955503968327, [(1, 22), (2, 67)]
*** center 6: selecting labels [1] (freq >= 1) [from [86, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [10, 74, 0]]
** centroid: 7, normalized-entropy: 0.5266170655714281, [(1, 10), (2, 74)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21729666522813137] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21729666522813137, 0.19706301272821589] ***
*** starting iteration: 2; err: [Inf, 0.21729666522813137, 0.19706301272821589] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21729666522813137, 0.19706301272821589, 0.19175377510475447] ***
*** starting iteration: 3; err: [Inf, 0.21729666522813137, 0.19706301272821589, 0.19175377510475447] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21729666522813137, 0.19706301272821589, 0.19175377510475447, 0.19044114228277872] ***
*** starting iteration: 4; err: [Inf, 0.21729666522813137, 0.19706301272821589, 0.19175377510475447, 0.19044114228277872] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21729666522813137, 0.19706301272821589, 0.19175377510475447, 0.19044114228277872, 0.18981910427170876] ***
*** finished computation of 7 references, err: [Inf, 0.21729666522813137, 0.19706301272821589, 0.19175377510475447, 0.19044114228277872, 0.18981910427170876] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [59, 33, 0]]
** centroid: 1, normalized-entropy: 0.9415951533268216, [(1, 59), (2, 33)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [41, 40, 0]]
** centroid: 2, normalized-entropy: 0.9998900524545515, [(1, 41), (2, 40)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [78, 12, 0]]
** centroid: 3, normalized-entropy: 0.5665095065529052, [(1, 78), (2, 12)]
*** center 4: selecting labels [1] (freq >= 1) [from [90, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 93, 25]]
** centroid: 5, normalized-entropy: 0.7450314037905273, [(2, 93), (3, 25)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [11, 68, 0]]
** centroid: 6, normalized-entropy: 0.5822463050121238, [(1, 11), (2, 68)]
*** center 7: selecting labels [1] (freq >= 1) [from [116, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2366376824958342] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2366376824958342, 0.19510577155997616] ***
*** starting iteration: 2; err: [Inf, 0.2366376824958342, 0.19510577155997616] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2366376824958342, 0.19510577155997616, 0.1923970523998253] ***
*** starting iteration: 3; err: [Inf, 0.2366376824958342, 0.19510577155997616, 0.1923970523998253] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2366376824958342, 0.19510577155997616, 0.1923970523998253, 0.19138691656715956] ***
*** starting iteration: 4; err: [Inf, 0.2366376824958342, 0.19510577155997616, 0.1923970523998253, 0.19138691656715956] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2366376824958342, 0.19510577155997616, 0.1923970523998253, 0.19138691656715956, 0.19087992296337725] ***
*** finished computation of 7 references, err: [Inf, 0.2366376824958342, 0.19510577155997616, 0.1923970523998253, 0.19138691656715956, 0.19087992296337725] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [66, 12, 0]]
** centroid: 1, normalized-entropy: 0.6193821946787638, [(1, 66), (2, 12)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [65, 29, 0]]
** centroid: 2, normalized-entropy: 0.8914467590654126, [(1, 65), (2, 29)]
*** center 3: selecting labels [1] (freq >= 1) [from [74, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 88, 24]]
** centroid: 4, normalized-entropy: 0.7495952572594798, [(2, 88), (3, 24)]
*** center 5: selecting labels [1] (freq >= 1) [from [103, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [69, 56, 0]]
** centroid: 6, normalized-entropy: 0.9921837794387313, [(1, 69), (2, 56)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 81, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2682924169887868] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2682924169887868, 0.20604362960303038] ***
*** starting iteration: 2; err: [Inf, 0.2682924169887868, 0.20604362960303038] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2682924169887868, 0.20604362960303038, 0.2016272858187355] ***
*** starting iteration: 3; err: [Inf, 0.2682924169887868, 0.20604362960303038, 0.2016272858187355] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2682924169887868, 0.20604362960303038, 0.2016272858187355, 0.19924143318930218] ***
*** starting iteration: 4; err: [Inf, 0.2682924169887868, 0.20604362960303038, 0.2016272858187355, 0.19924143318930218] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2682924169887868, 0.20604362960303038, 0.2016272858187355, 0.19924143318930218, 0.1967715526438099] ***
*** starting iteration: 5; err: [Inf, 0.2682924169887868, 0.20604362960303038, 0.2016272858187355, 0.19924143318930218, 0.1967715526438099] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2682924169887868, 0.20604362960303038, 0.2016272858187355, 0.19924143318930218, 0.1967715526438099, 0.19500268660356587] ***
*** starting iteration: 6; err: [Inf, 0.2682924169887868, 0.20604362960303038, 0.2016272858187355, 0.19924143318930218, 0.1967715526438099, 0.19500268660356587] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2682924169887868, 0.20604362960303038, 0.2016272858187355, 0.19924143318930218, 0.1967715526438099, 0.19500268660356587, 0.19426292367558787] ***
*** finished computation of 7 references, err: [Inf, 0.2682924169887868, 0.20604362960303038, 0.2016272858187355, 0.19924143318930218, 0.1967715526438099, 0.19500268660356587, 0.19426292367558787] ***
*** center 1: selecting labels [1] (freq >= 1) [from [78, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [97, 13, 0]]
** centroid: 2, normalized-entropy: 0.5241118769066088, [(1, 97), (2, 13)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [81, 1, 0]]
** centroid: 3, normalized-entropy: 0.09501724567107643, [(1, 81), (2, 1)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [56, 10, 0]]
** centroid: 4, normalized-entropy: 0.6136190195993708, [(1, 56), (2, 10)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 87, 23]]
** centroid: 5, normalized-entropy: 0.73974144872329, [(2, 87), (3, 23)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [4, 88, 0]]
** centroid: 6, normalized-entropy: 0.2580186686648155, [(1, 4), (2, 88)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [66, 63, 0]]
** centroid: 7, normalized-entropy: 0.9996098363678071, [(1, 66), (2, 63)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1879788637231174] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1879788637231174, 0.16004002925467203] ***
*** starting iteration: 2; err: [Inf, 0.1879788637231174, 0.16004002925467203] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1879788637231174, 0.16004002925467203, 0.15720891261355485] ***
*** starting iteration: 3; err: [Inf, 0.1879788637231174, 0.16004002925467203, 0.15720891261355485] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1879788637231174, 0.16004002925467203, 0.15720891261355485, 0.1547650855758952] ***
*** starting iteration: 4; err: [Inf, 0.1879788637231174, 0.16004002925467203, 0.15720891261355485, 0.1547650855758952] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1879788637231174, 0.16004002925467203, 0.15720891261355485, 0.1547650855758952, 0.1529668638903603] ***
*** starting iteration: 5; err: [Inf, 0.1879788637231174, 0.16004002925467203, 0.15720891261355485, 0.1547650855758952, 0.1529668638903603] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1879788637231174, 0.16004002925467203, 0.15720891261355485, 0.1547650855758952, 0.1529668638903603, 0.1515915779391298] ***
*** starting iteration: 6; err: [Inf, 0.1879788637231174, 0.16004002925467203, 0.15720891261355485, 0.1547650855758952, 0.1529668638903603, 0.1515915779391298] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1879788637231174, 0.16004002925467203, 0.15720891261355485, 0.1547650855758952, 0.1529668638903603, 0.1515915779391298, 0.150298093734365] ***
*** starting iteration: 7; err: [Inf, 0.1879788637231174, 0.16004002925467203, 0.15720891261355485, 0.1547650855758952, 0.1529668638903603, 0.1515915779391298, 0.150298093734365] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1879788637231174, 0.16004002925467203, 0.15720891261355485, 0.1547650855758952, 0.1529668638903603, 0.1515915779391298, 0.150298093734365, 0.14970945253375326] ***
*** finished computation of 7 references, err: [Inf, 0.1879788637231174, 0.16004002925467203, 0.15720891261355485, 0.1547650855758952, 0.1529668638903603, 0.1515915779391298, 0.150298093734365, 0.14970945253375326] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [67, 33, 0]]
** centroid: 1, normalized-entropy: 0.9149263727797277, [(1, 67), (2, 33)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 90, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [40, 35, 0]]
** centroid: 3, normalized-entropy: 0.9967916319816367, [(1, 40), (2, 35)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [96, 18, 0]]
** centroid: 4, normalized-entropy: 0.6292492238560344, [(1, 96), (2, 18)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [98, 7, 0]]
** centroid: 5, normalized-entropy: 0.3533593350214213, [(1, 98), (2, 7)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 63, 25]]
** centroid: 6, normalized-entropy: 0.8609652558547648, [(2, 63), (3, 25)]
*** center 7: selecting labels [1] (freq >= 1) [from [94, 0, 0]]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.21303799578073856] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21303799578073856, 0.16304805689877755] ***
*** starting iteration: 2; err: [Inf, 0.21303799578073856, 0.16304805689877755] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21303799578073856, 0.16304805689877755, 0.15629973284190876] ***
*** starting iteration: 3; err: [Inf, 0.21303799578073856, 0.16304805689877755, 0.15629973284190876] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21303799578073856, 0.16304805689877755, 0.15629973284190876, 0.1527942796928928] ***
*** starting iteration: 4; err: [Inf, 0.21303799578073856, 0.16304805689877755, 0.15629973284190876, 0.1527942796928928] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21303799578073856, 0.16304805689877755, 0.15629973284190876, 0.1527942796928928, 0.149126425101331] ***
*** starting iteration: 5; err: [Inf, 0.21303799578073856, 0.16304805689877755, 0.15629973284190876, 0.1527942796928928, 0.149126425101331] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21303799578073856, 0.16304805689877755, 0.15629973284190876, 0.1527942796928928, 0.149126425101331, 0.14699015315940445] ***
*** starting iteration: 6; err: [Inf, 0.21303799578073856, 0.16304805689877755, 0.15629973284190876, 0.1527942796928928, 0.149126425101331, 0.14699015315940445] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21303799578073856, 0.16304805689877755, 0.15629973284190876, 0.1527942796928928, 0.149126425101331, 0.14699015315940445, 0.14612789338243765] ***
*** finished computation of 7 references, err: [Inf, 0.21303799578073856, 0.16304805689877755, 0.15629973284190876, 0.1527942796928928, 0.149126425101331, 0.14699015315940445, 0.14612789338243765] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 82, 24]]
** centroid: 1, normalized-entropy: 0.7717094696953635, [(2, 82), (3, 24)]
*** center 2: selecting labels [1] (freq >= 1) [from [106, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [32, 49, 0]]
** centroid: 3, normalized-entropy: 0.9679884922470298, [(1, 32), (2, 49)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 89, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [53, 46, 0]]
** centroid: 5, normalized-entropy: 0.9963906193677697, [(1, 53), (2, 46)]
*** center 6: selecting labels [1] (freq >= 1) [from [70, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [116, 0, 0]]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2030672722494696] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2030672722494696, 0.17738623998925157] ***
*** starting iteration: 2; err: [Inf, 0.2030672722494696, 0.17738623998925157] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2030672722494696, 0.17738623998925157, 0.16574962969067908] ***
*** starting iteration: 3; err: [Inf, 0.2030672722494696, 0.17738623998925157, 0.16574962969067908] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2030672722494696, 0.17738623998925157, 0.16574962969067908, 0.1603446166384323] ***
*** starting iteration: 4; err: [Inf, 0.2030672722494696, 0.17738623998925157, 0.16574962969067908, 0.1603446166384323] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2030672722494696, 0.17738623998925157, 0.16574962969067908, 0.1603446166384323, 0.15513195970718438] ***
*** starting iteration: 5; err: [Inf, 0.2030672722494696, 0.17738623998925157, 0.16574962969067908, 0.1603446166384323, 0.15513195970718438] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2030672722494696, 0.17738623998925157, 0.16574962969067908, 0.1603446166384323, 0.15513195970718438, 0.15128779545359347] ***
*** starting iteration: 6; err: [Inf, 0.2030672722494696, 0.17738623998925157, 0.16574962969067908, 0.1603446166384323, 0.15513195970718438, 0.15128779545359347] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2030672722494696, 0.17738623998925157, 0.16574962969067908, 0.1603446166384323, 0.15513195970718438, 0.15128779545359347, 0.14726438495537164] ***
*** starting iteration: 7; err: [Inf, 0.2030672722494696, 0.17738623998925157, 0.16574962969067908, 0.1603446166384323, 0.15513195970718438, 0.15128779545359347, 0.14726438495537164] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2030672722494696, 0.17738623998925157, 0.16574962969067908, 0.1603446166384323, 0.15513195970718438, 0.15128779545359347, 0.14726438495537164, 0.14545459562659158] ***
*** starting iteration: 8; err: [Inf, 0.2030672722494696, 0.17738623998925157, 0.16574962969067908, 0.1603446166384323, 0.15513195970718438, 0.15128779545359347, 0.14726438495537164, 0.14545459562659158] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2030672722494696, 0.17738623998925157, 0.16574962969067908, 0.1603446166384323, 0.15513195970718438, 0.15128779545359347, 0.14726438495537164, 0.14545459562659158, 0.14465076488762468] ***
*** finished computation of 7 references, err: [Inf, 0.2030672722494696, 0.17738623998925157, 0.16574962969067908, 0.1603446166384323, 0.15513195970718438, 0.15128779545359347, 0.14726438495537164, 0.14545459562659158, 0.14465076488762468] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 76, 23]]
** centroid: 1, normalized-entropy: 0.7820392866349247, [(2, 76), (3, 23)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [16, 65, 0]]
** centroid: 2, normalized-entropy: 0.7169622516889513, [(1, 16), (2, 65)]
*** center 3: selecting labels [1] (freq >= 1) [from [75, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [50, 50, 0]]
** centroid: 4, normalized-entropy: 1.0, [(1, 50), (2, 50)]
*** center 5: selecting labels [1] (freq >= 1) [from [115, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [23, 71, 0]]
** centroid: 6, normalized-entropy: 0.8027381019527042, [(1, 23), (2, 71)]
*** center 7: selecting labels [1] (freq >= 1) [from [103, 0, 0]]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3329956679389597] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3329956679389597, 0.24391064201915139] ***
*** starting iteration: 2; err: [Inf, 0.3329956679389597, 0.24391064201915139] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3329956679389597, 0.24391064201915139, 0.2397814606177948] ***
*** starting iteration: 3; err: [Inf, 0.3329956679389597, 0.24391064201915139, 0.2397814606177948] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3329956679389597, 0.24391064201915139, 0.2397814606177948, 0.23858099840944996] ***
*** finished computation of 3 references, err: [Inf, 0.3329956679389597, 0.24391064201915139, 0.2397814606177948, 0.23858099840944996] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [80, 142, 25]]
** centroid: 1, normalized-entropy: 0.8330621821133488, [(1, 80), (2, 142), (3, 25)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [112, 104, 0]]
** centroid: 2, normalized-entropy: 0.9990102708804813, [(1, 112), (2, 104)]
*** center 3: selecting labels [1] (freq >= 2) [from [203, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.31953620081390444] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31953620081390444, 0.24285272506904834] ***
*** starting iteration: 2; err: [Inf, 0.31953620081390444, 0.24285272506904834] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31953620081390444, 0.24285272506904834, 0.2359059271860377] ***
*** starting iteration: 3; err: [Inf, 0.31953620081390444, 0.24285272506904834, 0.2359059271860377] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31953620081390444, 0.24285272506904834, 0.2359059271860377, 0.23394474714179] ***
*** finished computation of 3 references, err: [Inf, 0.31953620081390444, 0.24285272506904834, 0.2359059271860377, 0.23394474714179] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [246, 15, 0]]
** centroid: 1, normalized-entropy: 0.3173238998358585, [(1, 246), (2, 15)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [131, 60, 0]]
** centroid: 2, normalized-entropy: 0.8978903519209995, [(1, 131), (2, 60)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 191, 24]]
** centroid: 3, normalized-entropy: 0.5048067743702243, [(2, 191), (3, 24)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3561265598256504] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3561265598256504, 0.2307918810647266] ***
*** starting iteration: 2; err: [Inf, 0.3561265598256504, 0.2307918810647266] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3561265598256504, 0.2307918810647266, 0.2300152234828052] ***
*** finished computation of 3 references, err: [Inf, 0.3561265598256504, 0.2307918810647266, 0.2300152234828052] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [76, 176, 23]]
** centroid: 1, normalized-entropy: 0.772395139876841, [(1, 76), (2, 176), (3, 23)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [119, 86, 0]]
** centroid: 2, normalized-entropy: 0.9812260373687354, [(1, 119), (2, 86)]
*** center 3: selecting labels [1] (freq >= 2) [from [187, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.19483910068623475] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19483910068623475, 0.15421246202500374] ***
*** finished computation of 7 references, err: [Inf, 0.19483910068623475, 0.15421246202500374] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 115, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [68, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [54, 42, 0]]
** centroid: 3, normalized-entropy: 0.9886994082884974, [(1, 54), (2, 42)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [61, 30, 0]]
** centroid: 4, normalized-entropy: 0.9145891955877994, [(1, 61), (2, 30)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [104, 3, 0]]
** centroid: 5, normalized-entropy: 0.18445186314098744, [(1, 104), (2, 3)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [108, 4, 0]]
** centroid: 6, normalized-entropy: 0.2222848306856879, [(1, 108), (2, 4)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 52, 25]]
** centroid: 7, normalized-entropy: 0.9093934226727598, [(2, 52), (3, 25)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18967450351762896] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18967450351762896, 0.15623784615103897] ***
*** finished computation of 7 references, err: [Inf, 0.18967450351762896, 0.15623784615103897] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 127, 22]]
** centroid: 1, normalized-entropy: 0.60393059542803, [(2, 127), (3, 22)]
*** center 2: selecting labels [1] (freq >= 1) [from [66, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [51, 5, 0]]
** centroid: 3, normalized-entropy: 0.4340811200043348, [(1, 51), (2, 5)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [65, 29, 0]]
** centroid: 4, normalized-entropy: 0.8914467590654126, [(1, 65), (2, 29)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [104, 20, 0]]
** centroid: 5, normalized-entropy: 0.6373874992221911, [(1, 104), (2, 20)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 83, 2]]
** centroid: 6, normalized-entropy: 0.16082302082246946, [(2, 83), (3, 2)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [91, 2, 0]]
** centroid: 7, normalized-entropy: 0.14981136747274781, [(1, 91), (2, 2)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20201541543198187] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20201541543198187, 0.15039933872069866] ***
*** finished computation of 7 references, err: [Inf, 0.20201541543198187, 0.15039933872069866] ***
*** center 1: selecting labels [1] (freq >= 1) [from [128, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 44, 23]]
** centroid: 2, normalized-entropy: 0.9279262619599757, [(2, 44), (3, 23)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [94, 5, 0]]
** centroid: 3, normalized-entropy: 0.2885385136944103, [(1, 94), (2, 5)]
*** center 4: selecting labels [1] (freq >= 1) [from [88, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [71, 36, 0]]
** centroid: 5, normalized-entropy: 0.9213796449361407, [(1, 71), (2, 36)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [1, 86, 0]]
** centroid: 6, normalized-entropy: 0.09054385326964301, [(1, 1), (2, 86)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 91, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2452575941360346] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2452575941360346, 0.1922541092745624] ***
*** finished computation of 7 references, err: [Inf, 0.2452575941360346, 0.1922541092745624] ***
*** center 1: selecting labels [1] (freq >= 2) [from [103, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 84, 25]]
** centroid: 2, normalized-entropy: 0.7768901205770734, [(2, 84), (3, 25)]
*** center 3: selecting labels [1] (freq >= 2) [from [72, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [69, 41, 0]]
** centroid: 4, normalized-entropy: 0.9527431707334316, [(1, 69), (2, 41)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [49, 59, 0]]
** centroid: 5, normalized-entropy: 0.9938067403672294, [(1, 49), (2, 59)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [9, 62, 0]]
** centroid: 6, normalized-entropy: 0.5484866088431741, [(1, 9), (2, 62)]
*** center 7: selecting labels [1] (freq >= 2) [from [93, 0, 0]]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.23843259421893503] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23843259421893503, 0.19481590720287328] ***
*** finished computation of 7 references, err: [Inf, 0.23843259421893503, 0.19481590720287328] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 120, 24]]
** centroid: 1, normalized-entropy: 0.6500224216483541, [(2, 120), (3, 24)]
*** center 2: selecting labels [1] (freq >= 2) [from [72, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [71, 2, 0]]
** centroid: 3, normalized-entropy: 0.18116640155354563, [(1, 71), (2, 2)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [51, 33, 0]]
** centroid: 4, normalized-entropy: 0.9666186325481027, [(1, 51), (2, 33)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [104, 18, 0]]
** centroid: 5, normalized-entropy: 0.603652249754401, [(1, 104), (2, 18)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 93, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [79, 0, 0]]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2249285620298639] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2249285620298639, 0.19367561808115674] ***
*** finished computation of 7 references, err: [Inf, 0.2249285620298639, 0.19367561808115674] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [35, 85, 0]]
** centroid: 1, normalized-entropy: 0.8708644692353648, [(1, 35), (2, 85)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [56, 20, 0]]
** centroid: 2, normalized-entropy: 0.8314743880097292, [(1, 56), (2, 20)]
*** center 3: selecting labels [1] (freq >= 2) [from [63, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 89, 23]]
** centroid: 4, normalized-entropy: 0.7325138475458123, [(2, 89), (3, 23)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [57, 68, 0]]
** centroid: 5, normalized-entropy: 0.9944066525627803, [(1, 57), (2, 68)]
*** center 6: selecting labels [1] (freq >= 2) [from [95, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [76, 0, 0]]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.19904948151656413] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19904948151656413, 0.1575496950698597] ***
*** finished computation of 7 references, err: [Inf, 0.19904948151656413, 0.1575496950698597] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 84, 24]]
** centroid: 1, normalized-entropy: 0.7642045065086204, [(2, 84), (3, 24)]
*** center 2: selecting labels [1] (freq >= 1) [from [93, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [49, 10, 0]]
** centroid: 3, normalized-entropy: 0.656540281386946, [(1, 49), (2, 10)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [100, 30, 0]]
** centroid: 4, normalized-entropy: 0.7793498372920851, [(1, 100), (2, 30)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [75, 31, 0]]
** centroid: 5, normalized-entropy: 0.8718686865520275, [(1, 75), (2, 31)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 91, 1]]
** centroid: 6, normalized-entropy: 0.08650421412134586, [(2, 91), (3, 1)]
*** center 7: selecting labels [1] (freq >= 1) [from [78, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1931966274873405] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1931966274873405, 0.1567006711191826] ***
*** finished computation of 7 references, err: [Inf, 0.1931966274873405, 0.1567006711191826] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [123, 5, 0]]
** centroid: 1, normalized-entropy: 0.23797715131903674, [(1, 123), (2, 5)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [55, 17, 0]]
** centroid: 2, normalized-entropy: 0.7885131605379784, [(1, 55), (2, 17)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 68, 24]]
** centroid: 3, normalized-entropy: 0.828055725379504, [(2, 68), (3, 24)]
*** center 4: selecting labels [1] (freq >= 1) [from [119, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [36, 86, 0]]
** centroid: 5, normalized-entropy: 0.8751957887407251, [(1, 36), (2, 86)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [3, 87, 0]]
** centroid: 6, normalized-entropy: 0.2108423003185322, [(1, 3), (2, 87)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [41, 3, 0]]
** centroid: 7, normalized-entropy: 0.3591016256485496, [(1, 41), (2, 3)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18466937092654379] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18466937092654379, 0.15299541748378767] ***
*** finished computation of 7 references, err: [Inf, 0.18466937092654379, 0.15299541748378767] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [17, 110, 0]]
** centroid: 1, normalized-entropy: 0.5679253419771396, [(1, 17), (2, 110)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [58, 3, 0]]
** centroid: 2, normalized-entropy: 0.28290479297989196, [(1, 58), (2, 3)]
*** center 3: selecting labels [1] (freq >= 1) [from [78, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [117, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 90, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [112, 18, 0]]
** centroid: 6, normalized-entropy: 0.5801954953637372, [(1, 112), (2, 18)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 41, 23]]
** centroid: 7, normalized-entropy: 0.9421631690835511, [(2, 41), (3, 23)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18745774095011009] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18745774095011009, 0.15068020842628213] ***
*** starting iteration: 2; err: [Inf, 0.18745774095011009, 0.15068020842628213] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18745774095011009, 0.15068020842628213, 0.14674912173617016] ***
*** starting iteration: 3; err: [Inf, 0.18745774095011009, 0.15068020842628213, 0.14674912173617016] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18745774095011009, 0.15068020842628213, 0.14674912173617016, 0.1462982910973308] ***
*** finished computation of 7 references, err: [Inf, 0.18745774095011009, 0.15068020842628213, 0.14674912173617016, 0.1462982910973308] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [115, 7, 0]]
** centroid: 1, normalized-entropy: 0.3169435645054571, [(1, 115), (2, 7)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [67, 17, 0]]
** centroid: 2, normalized-entropy: 0.7266645172796352, [(1, 67), (2, 17)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 69, 25]]
** centroid: 3, normalized-entropy: 0.8356038276131503, [(2, 69), (3, 25)]
*** center 4: selecting labels [1] (freq >= 1) [from [90, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [9, 76, 0]]
** centroid: 5, normalized-entropy: 0.48736957102366285, [(1, 9), (2, 76)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [15, 77, 0]]
** centroid: 6, normalized-entropy: 0.6415410585827175, [(1, 15), (2, 77)]
*** center 7: selecting labels [1] (freq >= 1) [from [99, 0, 0]]
finished with 7 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.19657567045490804] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19657567045490804, 0.15756790795484962] ***
*** starting iteration: 2; err: [Inf, 0.19657567045490804, 0.15756790795484962] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19657567045490804, 0.15756790795484962, 0.1528986452895774] ***
*** starting iteration: 3; err: [Inf, 0.19657567045490804, 0.15756790795484962, 0.1528986452895774] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19657567045490804, 0.15756790795484962, 0.1528986452895774, 0.15177017047434396] ***
*** finished computation of 7 references, err: [Inf, 0.19657567045490804, 0.15756790795484962, 0.1528986452895774, 0.15177017047434396] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [69, 42, 0]]
** centroid: 1, normalized-entropy: 0.9568886656798214, [(1, 69), (2, 42)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [61, 9, 0]]
** centroid: 2, normalized-entropy: 0.5535072654547254, [(1, 61), (2, 9)]
*** center 3: selecting labels [1] (freq >= 1) [from [105, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 87, 24]]
** centroid: 4, normalized-entropy: 0.7531979910695015, [(2, 87), (3, 24)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [92, 6, 0]]
** centroid: 5, normalized-entropy: 0.3322866302216152, [(1, 92), (2, 6)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 92, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [50, 30, 0]]
** centroid: 7, normalized-entropy: 0.954434002924965, [(1, 50), (2, 30)]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.1855434472011151] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1855434472011151, 0.15368130724148257] ***
*** starting iteration: 2; err: [Inf, 0.1855434472011151, 0.15368130724148257] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1855434472011151, 0.15368130724148257, 0.1498573742149959] ***
*** starting iteration: 3; err: [Inf, 0.1855434472011151, 0.15368130724148257, 0.1498573742149959] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1855434472011151, 0.15368130724148257, 0.1498573742149959, 0.1492175257155976] ***
*** finished computation of 7 references, err: [Inf, 0.1855434472011151, 0.15368130724148257, 0.1498573742149959, 0.1492175257155976] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [97, 3, 0]]
** centroid: 1, normalized-entropy: 0.19439185783157603, [(1, 97), (2, 3)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [78, 7, 0]]
** centroid: 2, normalized-entropy: 0.4104161417181887, [(1, 78), (2, 7)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 65, 23]]
** centroid: 3, normalized-entropy: 0.828797154590015, [(2, 65), (3, 23)]
*** center 4: selecting labels [1] (freq >= 1) [from [105, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [2, 83, 0]]
** centroid: 5, normalized-entropy: 0.16082302082246946, [(1, 2), (2, 83)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [32, 97, 0]]
** centroid: 6, normalized-entropy: 0.8081920174996, [(1, 32), (2, 97)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [68, 7, 0]]
** centroid: 7, normalized-entropy: 0.44749925503686355, [(1, 68), (2, 7)]
finished with 7 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
generating 4 configurations using top 12 configurations, starting with 12)
[0.9500248751745758, 0.9499979020937106, 0.9379918840996685, 0.9270018521515527, 0.9269928611245977, 0.9160118202034369, 0.9099788411165658, 0.8980207752662842, 0.8769997542452632, 0.8759627891364419, 0.8649607691523858, 0.7720025414636194]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.3, 1) => 0.9500248751745758
finished with 13
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.3322825144148535] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3322825144148535, 0.24124033375735487] ***
*** starting iteration: 2; err: [Inf, 0.3322825144148535, 0.24124033375735487] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3322825144148535, 0.24124033375735487, 0.23828057135390984] ***
*** starting iteration: 3; err: [Inf, 0.3322825144148535, 0.24124033375735487, 0.23828057135390984] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3322825144148535, 0.24124033375735487, 0.23828057135390984, 0.2376758196774322] ***
*** finished computation of 3 references, err: [Inf, 0.3322825144148535, 0.24124033375735487, 0.23828057135390984, 0.2376758196774322] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [256, 13, 0]]
** centroid: 1, normalized-entropy: 0.279247803687352, [(1, 256), (2, 13)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 163, 25]]
** centroid: 2, normalized-entropy: 0.5655511182519258, [(2, 163), (3, 25)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [139, 70, 0]]
** centroid: 3, normalized-entropy: 0.9198824799530589, [(1, 139), (2, 70)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3768395960213675] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3768395960213675, 0.23681290200569372] ***
*** starting iteration: 2; err: [Inf, 0.3768395960213675, 0.23681290200569372] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3768395960213675, 0.23681290200569372, 0.23476676370060515] ***
*** starting iteration: 3; err: [Inf, 0.3768395960213675, 0.23681290200569372, 0.23476676370060515] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3768395960213675, 0.23681290200569372, 0.23476676370060515, 0.23424348739189454] ***
*** finished computation of 3 references, err: [Inf, 0.3768395960213675, 0.23681290200569372, 0.23476676370060515, 0.23424348739189454] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [69, 153, 23]]
** centroid: 1, normalized-entropy: 0.7946260042558838, [(1, 69), (2, 153), (3, 23)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [104, 113, 1]]
** centroid: 2, normalized-entropy: 0.9987588202804709, [(1, 104), (2, 113)]
*** center 3: selecting labels [1] (freq >= 2) [from [204, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3170710777810801] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3170710777810801, 0.23489953782912093] ***
*** starting iteration: 2; err: [Inf, 0.3170710777810801, 0.23489953782912093] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3170710777810801, 0.23489953782912093, 0.23105433425479296] ***
*** starting iteration: 3; err: [Inf, 0.3170710777810801, 0.23489953782912093, 0.23105433425479296] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3170710777810801, 0.23489953782912093, 0.23105433425479296, 0.23005161273839145] ***
*** finished computation of 3 references, err: [Inf, 0.3170710777810801, 0.23489953782912093, 0.23105433425479296, 0.23005161273839145] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [77, 174, 23]]
** centroid: 1, normalized-entropy: 0.7764675951134016, [(1, 77), (2, 174), (3, 23)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [121, 88, 0]]
** centroid: 2, normalized-entropy: 0.9819407868640977, [(1, 121), (2, 88)]
*** center 3: selecting labels [1] (freq >= 2) [from [184, 0, 0]]
finished with 6 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 13)
[0.9500248751745758, 0.9499979020937106, 0.9379918840996685, 0.9270018521515527, 0.9269928611245977, 0.9160118202034369, 0.9099788411165658, 0.9020008031984079, 0.8980207752662842, 0.8769997542452632, 0.8759627891364419, 0.8649607691523858, 0.7720025414636194]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.3, 1) => 0.9500248751745758
finished with 13
iteration 3 finished
generating 4 configurations using top 12 configurations, starting with 13)
[0.9500248751745758, 0.9499979020937106, 0.9379918840996685, 0.9270018521515527, 0.9269928611245977, 0.9160118202034369, 0.9099788411165658, 0.9020008031984079, 0.8980207752662842, 0.8769997542452632, 0.8759627891364419, 0.8649607691523858, 0.7720025414636194]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.3, 1) => 0.9500248751745758
finished with 14
iteration 4 finished
*** starting iteration: 1; err: [Inf, 0.32821578540288293] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.32821578540288293, 0.2453914230253111] ***
*** starting iteration: 2; err: [Inf, 0.32821578540288293, 0.2453914230253111] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.32821578540288293, 0.2453914230253111, 0.24008325980060283] ***
*** starting iteration: 3; err: [Inf, 0.32821578540288293, 0.2453914230253111, 0.24008325980060283] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.32821578540288293, 0.2453914230253111, 0.24008325980060283, 0.2386317715487882] ***
*** finished computation of 3 references, err: [Inf, 0.32821578540288293, 0.2453914230253111, 0.24008325980060283, 0.2386317715487882] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [82, 139, 25]]
** centroid: 1, normalized-entropy: 0.8384443194120113, [(1, 82), (2, 139), (3, 25)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [110, 107, 0]]
** centroid: 2, normalized-entropy: 0.9998621263033028, [(1, 110), (2, 107)]
*** center 3: selecting labels [1] (freq >= 2) [from [203, 0, 0]]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.4091075011159013] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4091075011159013, 0.2358234461935899] ***
*** starting iteration: 2; err: [Inf, 0.4091075011159013, 0.2358234461935899] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4091075011159013, 0.2358234461935899, 0.23496529579614994] ***
*** finished computation of 3 references, err: [Inf, 0.4091075011159013, 0.2358234461935899, 0.23496529579614994] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [247, 3, 0]]
** centroid: 1, normalized-entropy: 0.09377790984777166, [(1, 247), (2, 3)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [26, 201, 24]]
** centroid: 2, normalized-entropy: 0.5800167625485226, [(1, 26), (2, 201), (3, 24)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [104, 62, 0]]
** centroid: 3, normalized-entropy: 0.9533171305598173, [(1, 104), (2, 62)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.35984507191094056] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35984507191094056, 0.2346875820828342] ***
*** starting iteration: 2; err: [Inf, 0.35984507191094056, 0.2346875820828342] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35984507191094056, 0.2346875820828342, 0.2339039729821539] ***
*** finished computation of 3 references, err: [Inf, 0.35984507191094056, 0.2346875820828342, 0.2339039729821539] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [233, 17, 0]]
** centroid: 1, normalized-entropy: 0.3584153246392747, [(1, 233), (2, 17)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [149, 59, 0]]
** centroid: 2, normalized-entropy: 0.8603817880391175, [(1, 149), (2, 59)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 186, 23]]
** centroid: 3, normalized-entropy: 0.500060261959327, [(2, 186), (3, 23)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
generating 4 configurations using top 12 configurations, starting with 14)
[0.9500248751745758, 0.9499979020937106, 0.9379918840996685, 0.9270018521515527, 0.9269928611245977, 0.9160118202034369, 0.9099788411165658, 0.9020008031984079, 0.8980207752662842, 0.8769997542452632, 0.8759627891364419, 0.8679937422452393, 0.8649607691523858, 0.7720025414636194]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.3, 1) => 0.9500248751745758
finished with 14
iteration 5 finished
generating 4 configurations using top 12 configurations, starting with 14)
[0.9500248751745758, 0.9499979020937106, 0.9379918840996685, 0.9270018521515527, 0.9269928611245977, 0.9160118202034369, 0.9099788411165658, 0.9020008031984079, 0.8980207752662842, 0.8769997542452632, 0.8759627891364419, 0.8679937422452393, 0.8649607691523858, 0.7720025414636194]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.3, 1) => 0.9500248751745758
finished with 14
iteration 6 finished
generating 4 configurations using top 12 configurations, starting with 14)
[0.9500248751745758, 0.9499979020937106, 0.9379918840996685, 0.9270018521515527, 0.9269928611245977, 0.9160118202034369, 0.9099788411165658, 0.9020008031984079, 0.8980207752662842, 0.8769997542452632, 0.8759627891364419, 0.8679937422452393, 0.8649607691523858, 0.7720025414636194]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.3, 1) => 0.9500248751745758
finished with 15
iteration 7 finished
*** starting iteration: 1; err: [Inf, 0.3739708585066122] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3739708585066122, 0.26520841936832545] ***
*** starting iteration: 2; err: [Inf, 0.3739708585066122, 0.26520841936832545] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3739708585066122, 0.26520841936832545, 0.23935451943080527] ***
*** starting iteration: 3; err: [Inf, 0.3739708585066122, 0.26520841936832545, 0.23935451943080527] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3739708585066122, 0.26520841936832545, 0.23935451943080527, 0.23462031753985463] ***
*** finished computation of 3 references, err: [Inf, 0.3739708585066122, 0.26520841936832545, 0.23935451943080527, 0.23462031753985463] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [116, 84, 0]]
** centroid: 1, normalized-entropy: 0.9814538950336533, [(1, 116), (2, 84)]
*** center 2: selecting labels [1] (freq >= 1) [from [234, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [45, 162, 25]]
** centroid: 3, normalized-entropy: 0.7363551139165039, [(1, 45), (2, 162), (3, 25)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3102641626536243] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3102641626536243, 0.23951520085491163] ***
*** starting iteration: 2; err: [Inf, 0.3102641626536243, 0.23951520085491163] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3102641626536243, 0.23951520085491163, 0.2348840905568455] ***
*** starting iteration: 3; err: [Inf, 0.3102641626536243, 0.23951520085491163, 0.2348840905568455] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3102641626536243, 0.23951520085491163, 0.2348840905568455, 0.2340051499635227] ***
*** finished computation of 3 references, err: [Inf, 0.3102641626536243, 0.23951520085491163, 0.2348840905568455, 0.2340051499635227] ***
*** center 1: selecting labels [1] (freq >= 1) [from [209, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [66, 161, 24]]
** centroid: 2, normalized-entropy: 0.7832847167691098, [(1, 66), (2, 161), (3, 24)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [102, 105, 0]]
** centroid: 3, normalized-entropy: 0.9998484829291058, [(1, 102), (2, 105)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3678825336998549] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3678825336998549, 0.2800325841930551] ***
*** starting iteration: 2; err: [Inf, 0.3678825336998549, 0.2800325841930551] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3678825336998549, 0.2800325841930551, 0.23975847911290724] ***
*** starting iteration: 3; err: [Inf, 0.3678825336998549, 0.2800325841930551, 0.23975847911290724] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3678825336998549, 0.2800325841930551, 0.23975847911290724, 0.2338901217984988] ***
*** finished computation of 3 references, err: [Inf, 0.3678825336998549, 0.2800325841930551, 0.23975847911290724, 0.2338901217984988] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [249, 21, 0]]
** centroid: 1, normalized-entropy: 0.39430023792747493, [(1, 249), (2, 21)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [131, 72, 0]]
** centroid: 2, normalized-entropy: 0.9381782161740805, [(1, 131), (2, 72)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [2, 169, 23]]
** centroid: 3, normalized-entropy: 0.3824362542962303, [(1, 2), (2, 169), (3, 23)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
generating 4 configurations using top 12 configurations, starting with 15)
[0.9500248751745758, 0.9499979020937106, 0.9379918840996685, 0.9270018521515527, 0.9269928611245977, 0.9160118202034369, 0.9099788411165658, 0.9020008031984079, 0.8980207752662842, 0.8769997542452632, 0.8759627891364419, 0.8679937422452393, 0.8649607691523858, 0.8590087093081106, 0.7720025414636194]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.3, 1) => 0.9500248751745758
finished with 16
iteration 8 finished
*** starting iteration: 1; err: [Inf, 0.4598169533547025] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4598169533547025, 0.32943711941082915] ***
*** finished computation of 3 references, err: [Inf, 0.4598169533547025, 0.32943711941082915] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [157, 132, 1]]
** centroid: 1, normalized-entropy: 0.9945952972712626, [(1, 157), (2, 132)]
*** center 2: selecting labels [1] (freq >= 2) [from [193, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [45, 114, 24]]
** centroid: 3, normalized-entropy: 0.8248669389583551, [(1, 45), (2, 114), (3, 24)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3333455484187317] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3333455484187317, 0.2952303170274337] ***
*** finished computation of 3 references, err: [Inf, 0.3333455484187317, 0.2952303170274337] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [89, 111, 0]]
** centroid: 1, normalized-entropy: 0.9912540071703689, [(1, 89), (2, 111)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [63, 155, 24]]
** centroid: 2, normalized-entropy: 0.7872488191224173, [(1, 63), (2, 155), (3, 24)]
*** center 3: selecting labels [1] (freq >= 2) [from [225, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4079923619512005] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4079923619512005, 0.32448983977453133] ***
*** finished computation of 3 references, err: [Inf, 0.4079923619512005, 0.32448983977453133] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [223, 2, 0]]
** centroid: 1, normalized-entropy: 0.07333373485157951, [(1, 223), (2, 2)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [82, 115, 23]]
** centroid: 2, normalized-entropy: 0.8583701553381851, [(1, 82), (2, 115), (3, 23)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [77, 145, 0]]
** centroid: 3, normalized-entropy: 0.9312204533515793, [(1, 77), (2, 145)]
finished with 6 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 16)
[0.9500248751745758, 0.9499979020937106, 0.9379918840996685, 0.9270018521515527, 0.9269928611245977, 0.9160118202034369, 0.9099788411165658, 0.9020008031984079, 0.8980207752662842, 0.8890027752303201, 0.8769997542452632, 0.8759627891364419, 0.8679937422452393, 0.8649607691523858, 0.8590087093081106, 0.7720025414636194]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.3, 1) => 0.9500248751745758
finished with 17
iteration 9 finished
*** starting iteration: 1; err: [Inf, 0.2474064520384009] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2474064520384009, 0.19614156395163354] ***
*** finished computation of 7 references, err: [Inf, 0.2474064520384009, 0.19614156395163354] ***
*** center 1: selecting labels [1] (freq >= 1) [from [100, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [79, 10, 0]]
** centroid: 2, normalized-entropy: 0.5069923067544342, [(1, 79), (2, 10)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 57, 25]]
** centroid: 3, normalized-entropy: 0.8871723027673716, [(2, 57), (3, 25)]
*** center 4: selecting labels [1] (freq >= 1) [from [122, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [76, 36, 0]]
** centroid: 5, normalized-entropy: 0.9059282160429994, [(1, 76), (2, 36)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 83, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [18, 60, 0]]
** centroid: 7, normalized-entropy: 0.7793498372920851, [(1, 18), (2, 60)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.25278828851878643] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25278828851878643, 0.19728158409337232] ***
*** finished computation of 7 references, err: [Inf, 0.25278828851878643, 0.19728158409337232] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [87, 51, 0]]
** centroid: 1, normalized-entropy: 0.9503376699710269, [(1, 87), (2, 51)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [41, 7, 0]]
** centroid: 2, normalized-entropy: 0.5993142373098089, [(1, 41), (2, 7)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 83, 24]]
** centroid: 3, normalized-entropy: 0.7679401376244881, [(2, 83), (3, 24)]
*** center 4: selecting labels [1] (freq >= 1) [from [106, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [52, 31, 0]]
** centroid: 5, normalized-entropy: 0.9533171305598173, [(1, 52), (2, 31)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [90, 4, 0]]
** centroid: 6, normalized-entropy: 0.2538784402981617, [(1, 90), (2, 4)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [1, 90, 0]]
** centroid: 7, normalized-entropy: 0.08728058888363333, [(1, 1), (2, 90)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2293420406616945] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2293420406616945, 0.1935376850622839] ***
*** finished computation of 7 references, err: [Inf, 0.2293420406616945, 0.1935376850622839] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 107, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [94, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [35, 43, 0]]
** centroid: 3, normalized-entropy: 0.9923985003332222, [(1, 35), (2, 43)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [118, 15, 0]]
** centroid: 4, normalized-entropy: 0.5082505651340841, [(1, 118), (2, 15)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [76, 26, 0]]
** centroid: 5, normalized-entropy: 0.8189555018403103, [(1, 76), (2, 26)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 71, 23]]
** centroid: 6, normalized-entropy: 0.8027381019527042, [(2, 71), (3, 23)]
*** center 7: selecting labels [1] (freq >= 1) [from [59, 0, 0]]
finished with 11 centroids; started with 7
[ Info: ========== BEST MODEL ==========
*** starting iteration: 1; err: [Inf, 0.18290595152741299] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18290595152741299, 0.15728185683768242] ***
*** starting iteration: 2; err: [Inf, 0.18290595152741299, 0.15728185683768242] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18290595152741299, 0.15728185683768242, 0.1523455267995596] ***
*** starting iteration: 3; err: [Inf, 0.18290595152741299, 0.15728185683768242, 0.1523455267995596] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18290595152741299, 0.15728185683768242, 0.1523455267995596, 0.15023114488553255] ***
*** starting iteration: 4; err: [Inf, 0.18290595152741299, 0.15728185683768242, 0.1523455267995596, 0.15023114488553255] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18290595152741299, 0.15728185683768242, 0.1523455267995596, 0.15023114488553255, 0.14925043941382318] ***
*** finished computation of 7 references, err: [Inf, 0.18290595152741299, 0.15728185683768242, 0.1523455267995596, 0.15023114488553255, 0.14925043941382318] ***
*** center 1: selecting labels [1] (freq >= 1) [from [146, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [165, 6, 0]]
** centroid: 2, normalized-entropy: 0.2192973081321754, [(1, 165), (2, 6)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [97, 36, 0]]
** centroid: 3, normalized-entropy: 0.842433971260027, [(1, 97), (2, 36)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 83, 36]]
** centroid: 4, normalized-entropy: 0.8843507645372041, [(2, 83), (3, 36)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [2, 122, 0]]
** centroid: 5, normalized-entropy: 0.11911602665564841, [(1, 2), (2, 122)]
*** center 6: selecting labels [1] (freq >= 1) [from [162, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [5, 140, 0]]
** centroid: 7, normalized-entropy: 0.21639693245126485, [(1, 5), (2, 140)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18524306558817624] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18524306558817624, 0.1556910838885233] ***
*** starting iteration: 2; err: [Inf, 0.18524306558817624, 0.1556910838885233] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18524306558817624, 0.1556910838885233, 0.14843820897489787] ***
*** starting iteration: 3; err: [Inf, 0.18524306558817624, 0.1556910838885233, 0.14843820897489787] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18524306558817624, 0.1556910838885233, 0.14843820897489787, 0.1461530245989561] ***
*** starting iteration: 4; err: [Inf, 0.18524306558817624, 0.1556910838885233, 0.14843820897489787, 0.1461530245989561] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18524306558817624, 0.1556910838885233, 0.14843820897489787, 0.1461530245989561, 0.14495109554752708] ***
*** starting iteration: 5; err: [Inf, 0.18524306558817624, 0.1556910838885233, 0.14843820897489787, 0.1461530245989561, 0.14495109554752708] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18524306558817624, 0.1556910838885233, 0.14843820897489787, 0.1461530245989561, 0.14495109554752708, 0.14462637160345912] ***
*** finished computation of 7 references, err: [Inf, 0.18524306558817624, 0.1556910838885233, 0.14843820897489787, 0.1461530245989561, 0.14495109554752708, 0.14462637160345912] ***
*** center 1: selecting labels [1] (freq >= 1) [from [95, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [13, 54, 0]]
** centroid: 2, normalized-entropy: 0.709825885194168, [(1, 13), (2, 54)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [16, 50, 0]]
** centroid: 3, normalized-entropy: 0.7990485210442682, [(1, 16), (2, 50)]
*** center 4: selecting labels [1] (freq >= 1) [from [66, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 68, 23]]
** centroid: 5, normalized-entropy: 0.8156034512499668, [(2, 68), (3, 23)]
*** center 6: selecting labels [1] (freq >= 1) [from [51, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [43, 21, 0]]
** centroid: 7, normalized-entropy: 0.912999213585247, [(1, 43), (2, 21)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21663680999353527] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21663680999353527, 0.16794745471095665] ***
*** starting iteration: 2; err: [Inf, 0.21663680999353527, 0.16794745471095665] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21663680999353527, 0.16794745471095665, 0.16208026018738747] ***
*** starting iteration: 3; err: [Inf, 0.21663680999353527, 0.16794745471095665, 0.16208026018738747] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21663680999353527, 0.16794745471095665, 0.16208026018738747, 0.1560983496773988] ***
*** starting iteration: 4; err: [Inf, 0.21663680999353527, 0.16794745471095665, 0.16208026018738747, 0.1560983496773988] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21663680999353527, 0.16794745471095665, 0.16208026018738747, 0.1560983496773988, 0.15240996582899244] ***
*** starting iteration: 5; err: [Inf, 0.21663680999353527, 0.16794745471095665, 0.16208026018738747, 0.1560983496773988, 0.15240996582899244] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21663680999353527, 0.16794745471095665, 0.16208026018738747, 0.1560983496773988, 0.15240996582899244, 0.150743762858212] ***
*** starting iteration: 6; err: [Inf, 0.21663680999353527, 0.16794745471095665, 0.16208026018738747, 0.1560983496773988, 0.15240996582899244, 0.150743762858212] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21663680999353527, 0.16794745471095665, 0.16208026018738747, 0.1560983496773988, 0.15240996582899244, 0.150743762858212, 0.1496860369555652] ***
*** starting iteration: 7; err: [Inf, 0.21663680999353527, 0.16794745471095665, 0.16208026018738747, 0.1560983496773988, 0.15240996582899244, 0.150743762858212, 0.1496860369555652] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21663680999353527, 0.16794745471095665, 0.16208026018738747, 0.1560983496773988, 0.15240996582899244, 0.150743762858212, 0.1496860369555652, 0.148486995969899] ***
*** starting iteration: 8; err: [Inf, 0.21663680999353527, 0.16794745471095665, 0.16208026018738747, 0.1560983496773988, 0.15240996582899244, 0.150743762858212, 0.1496860369555652, 0.148486995969899] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21663680999353527, 0.16794745471095665, 0.16208026018738747, 0.1560983496773988, 0.15240996582899244, 0.150743762858212, 0.1496860369555652, 0.148486995969899, 0.1470668465308845] ***
*** starting iteration: 9; err: [Inf, 0.21663680999353527, 0.16794745471095665, 0.16208026018738747, 0.1560983496773988, 0.15240996582899244, 0.150743762858212, 0.1496860369555652, 0.148486995969899, 0.1470668465308845] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21663680999353527, 0.16794745471095665, 0.16208026018738747, 0.1560983496773988, 0.15240996582899244, 0.150743762858212, 0.1496860369555652, 0.148486995969899, 0.1470668465308845, 0.14572285727132112] ***
*** starting iteration: 10; err: [Inf, 0.21663680999353527, 0.16794745471095665, 0.16208026018738747, 0.1560983496773988, 0.15240996582899244, 0.150743762858212, 0.1496860369555652, 0.148486995969899, 0.1470668465308845, 0.14572285727132112] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21663680999353527, 0.16794745471095665, 0.16208026018738747, 0.1560983496773988, 0.15240996582899244, 0.150743762858212, 0.1496860369555652, 0.148486995969899, 0.1470668465308845, 0.14572285727132112, 0.1446837287116796] ***
*** finished computation of 7 references, err: [Inf, 0.21663680999353527, 0.16794745471095665, 0.16208026018738747, 0.1560983496773988, 0.15240996582899244, 0.150743762858212, 0.1496860369555652, 0.148486995969899, 0.1470668465308845, 0.14572285727132112, 0.1446837287116796] ***
*** center 1: selecting labels [1] (freq >= 1) [from [66, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [68, 33, 0]]
** centroid: 2, normalized-entropy: 0.9115532734067251, [(1, 68), (2, 33)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [56, 15, 0]]
** centroid: 3, normalized-entropy: 0.743898745288434, [(1, 56), (2, 15)]
*** center 4: selecting labels [1] (freq >= 1) [from [61, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 53, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 70, 18]]
** centroid: 6, normalized-entropy: 0.7309263775906009, [(2, 70), (3, 18)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [55, 5, 0]]
** centroid: 7, normalized-entropy: 0.4138168503036336, [(1, 55), (2, 5)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.17787801189161837] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17787801189161837, 0.16415829375199972] ***
*** starting iteration: 2; err: [Inf, 0.17787801189161837, 0.16415829375199972] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17787801189161837, 0.16415829375199972, 0.1598210402559489] ***
*** starting iteration: 3; err: [Inf, 0.17787801189161837, 0.16415829375199972, 0.1598210402559489] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17787801189161837, 0.16415829375199972, 0.1598210402559489, 0.15797411555144936] ***
*** starting iteration: 4; err: [Inf, 0.17787801189161837, 0.16415829375199972, 0.1598210402559489, 0.15797411555144936] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17787801189161837, 0.16415829375199972, 0.1598210402559489, 0.15797411555144936, 0.1565829713344574] ***
*** starting iteration: 5; err: [Inf, 0.17787801189161837, 0.16415829375199972, 0.1598210402559489, 0.15797411555144936, 0.1565829713344574] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17787801189161837, 0.16415829375199972, 0.1598210402559489, 0.15797411555144936, 0.1565829713344574, 0.15594597275555133] ***
*** finished computation of 7 references, err: [Inf, 0.17787801189161837, 0.16415829375199972, 0.1598210402559489, 0.15797411555144936, 0.1565829713344574, 0.15594597275555133] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 55, 20]]
** centroid: 1, normalized-entropy: 0.8366407419411671, [(2, 55), (3, 20)]
*** center 2: selecting labels [1] (freq >= 1) [from [77, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [43, 16, 0]]
** centroid: 3, normalized-entropy: 0.8431619569518377, [(1, 43), (2, 16)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 66, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [47, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [73, 44, 0]]
** centroid: 6, normalized-entropy: 0.9552178476322734, [(1, 73), (2, 44)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [34, 25, 0]]
** centroid: 7, normalized-entropy: 0.9831491282282879, [(1, 34), (2, 25)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20465780466608702] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20465780466608702, 0.15732132686860859] ***
*** starting iteration: 2; err: [Inf, 0.20465780466608702, 0.15732132686860859] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20465780466608702, 0.15732132686860859, 0.1503068716134876] ***
*** starting iteration: 3; err: [Inf, 0.20465780466608702, 0.15732132686860859, 0.1503068716134876] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20465780466608702, 0.15732132686860859, 0.1503068716134876, 0.14910299707297237] ***
*** starting iteration: 4; err: [Inf, 0.20465780466608702, 0.15732132686860859, 0.1503068716134876, 0.14910299707297237] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20465780466608702, 0.15732132686860859, 0.1503068716134876, 0.14910299707297237, 0.14798299209214746] ***
*** starting iteration: 5; err: [Inf, 0.20465780466608702, 0.15732132686860859, 0.1503068716134876, 0.14910299707297237, 0.14798299209214746] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20465780466608702, 0.15732132686860859, 0.1503068716134876, 0.14910299707297237, 0.14798299209214746, 0.14741318701021372] ***
*** finished computation of 7 references, err: [Inf, 0.20465780466608702, 0.15732132686860859, 0.1503068716134876, 0.14910299707297237, 0.14798299209214746, 0.14741318701021372] ***
*** center 1: selecting labels [1] (freq >= 1) [from [70, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [86, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [27, 49, 0]]
** centroid: 3, normalized-entropy: 0.9386808697586004, [(1, 27), (2, 49)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 53, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [31, 29, 0]]
** centroid: 5, normalized-entropy: 0.99919835426364, [(1, 31), (2, 29)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 60, 22]]
** centroid: 6, normalized-entropy: 0.8390040613676978, [(2, 60), (3, 22)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [72, 1, 0]]
** centroid: 7, normalized-entropy: 0.1044190780054077, [(1, 72), (2, 1)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20022139374166728] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20022139374166728, 0.16356896140053867] ***
*** starting iteration: 2; err: [Inf, 0.20022139374166728, 0.16356896140053867] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20022139374166728, 0.16356896140053867, 0.15623930050106719] ***
*** starting iteration: 3; err: [Inf, 0.20022139374166728, 0.16356896140053867, 0.15623930050106719] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20022139374166728, 0.16356896140053867, 0.15623930050106719, 0.15409173094294965] ***
*** starting iteration: 4; err: [Inf, 0.20022139374166728, 0.16356896140053867, 0.15623930050106719, 0.15409173094294965] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20022139374166728, 0.16356896140053867, 0.15623930050106719, 0.15409173094294965, 0.15334209495969117] ***
*** finished computation of 7 references, err: [Inf, 0.20022139374166728, 0.16356896140053867, 0.15623930050106719, 0.15409173094294965, 0.15334209495969117] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [36, 24, 0]]
** centroid: 1, normalized-entropy: 0.9709505944546688, [(1, 36), (2, 24)]
*** center 2: selecting labels [1] (freq >= 1) [from [66, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [46, 7, 0]]
** centroid: 3, normalized-entropy: 0.5631028237513912, [(1, 46), (2, 7)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 71, 7]]
** centroid: 4, normalized-entropy: 0.4356133734874324, [(2, 71), (3, 7)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [77, 27, 0]]
** centroid: 5, normalized-entropy: 0.826165427834159, [(1, 77), (2, 27)]
*** center 6: selecting labels [1] (freq >= 1) [from [64, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 68, 7]]
** centroid: 7, normalized-entropy: 0.44749925503686355, [(2, 68), (3, 7)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21694935819134117] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21694935819134117, 0.17618157717585564] ***
*** starting iteration: 2; err: [Inf, 0.21694935819134117, 0.17618157717585564] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21694935819134117, 0.17618157717585564, 0.1628617065679282] ***
*** starting iteration: 3; err: [Inf, 0.21694935819134117, 0.17618157717585564, 0.1628617065679282] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21694935819134117, 0.17618157717585564, 0.1628617065679282, 0.1538753978777677] ***
*** starting iteration: 4; err: [Inf, 0.21694935819134117, 0.17618157717585564, 0.1628617065679282, 0.1538753978777677] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21694935819134117, 0.17618157717585564, 0.1628617065679282, 0.1538753978777677, 0.14880915001779796] ***
*** starting iteration: 5; err: [Inf, 0.21694935819134117, 0.17618157717585564, 0.1628617065679282, 0.1538753978777677, 0.14880915001779796] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21694935819134117, 0.17618157717585564, 0.1628617065679282, 0.1538753978777677, 0.14880915001779796, 0.1459362262710929] ***
*** starting iteration: 6; err: [Inf, 0.21694935819134117, 0.17618157717585564, 0.1628617065679282, 0.1538753978777677, 0.14880915001779796, 0.1459362262710929] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21694935819134117, 0.17618157717585564, 0.1628617065679282, 0.1538753978777677, 0.14880915001779796, 0.1459362262710929, 0.14534292217716574] ***
*** finished computation of 7 references, err: [Inf, 0.21694935819134117, 0.17618157717585564, 0.1628617065679282, 0.1538753978777677, 0.14880915001779796, 0.1459362262710929, 0.14534292217716574] ***
*** center 1: selecting labels [1] (freq >= 1) [from [83, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [22, 56, 0]]
** centroid: 2, normalized-entropy: 0.8582307926411409, [(1, 22), (2, 56)]
*** center 3: selecting labels [1] (freq >= 1) [from [72, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 45, 22]]
** centroid: 4, normalized-entropy: 0.9132401614300725, [(2, 45), (3, 22)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [27, 55, 0]]
** centroid: 5, normalized-entropy: 0.9141770436147919, [(1, 27), (2, 55)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [23, 37, 0]]
** centroid: 6, normalized-entropy: 0.9603622703154779, [(1, 23), (2, 37)]
*** center 7: selecting labels [1] (freq >= 1) [from [58, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22854422503896057] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22854422503896057, 0.16715346996113659] ***
*** starting iteration: 2; err: [Inf, 0.22854422503896057, 0.16715346996113659] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22854422503896057, 0.16715346996113659, 0.1574041842026636] ***
*** starting iteration: 3; err: [Inf, 0.22854422503896057, 0.16715346996113659, 0.1574041842026636] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22854422503896057, 0.16715346996113659, 0.1574041842026636, 0.15394445786625147] ***
*** starting iteration: 4; err: [Inf, 0.22854422503896057, 0.16715346996113659, 0.1574041842026636, 0.15394445786625147] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22854422503896057, 0.16715346996113659, 0.1574041842026636, 0.15394445786625147, 0.15236299894191324] ***
*** starting iteration: 5; err: [Inf, 0.22854422503896057, 0.16715346996113659, 0.1574041842026636, 0.15394445786625147, 0.15236299894191324] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22854422503896057, 0.16715346996113659, 0.1574041842026636, 0.15394445786625147, 0.15236299894191324, 0.1517954359119758] ***
*** finished computation of 7 references, err: [Inf, 0.22854422503896057, 0.16715346996113659, 0.1574041842026636, 0.15394445786625147, 0.15236299894191324, 0.1517954359119758] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [59, 14, 0]]
** centroid: 1, normalized-entropy: 0.7051819722888517, [(1, 59), (2, 14)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [62, 6, 0]]
** centroid: 2, normalized-entropy: 0.43055186701043935, [(1, 62), (2, 6)]
*** center 3: selecting labels [1] (freq >= 1) [from [46, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [42, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 93, 20]]
** centroid: 5, normalized-entropy: 0.6734503665674518, [(2, 93), (3, 20)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [40, 51, 0]]
** centroid: 6, normalized-entropy: 0.9894340222202265, [(1, 40), (2, 51)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [31, 36, 0]]
** centroid: 7, normalized-entropy: 0.995978956518722, [(1, 31), (2, 36)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21259861757047474] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21259861757047474, 0.17066561932489277] ***
*** starting iteration: 2; err: [Inf, 0.21259861757047474, 0.17066561932489277] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21259861757047474, 0.17066561932489277, 0.1588699102550745] ***
*** starting iteration: 3; err: [Inf, 0.21259861757047474, 0.17066561932489277, 0.1588699102550745] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21259861757047474, 0.17066561932489277, 0.1588699102550745, 0.15204476668406278] ***
*** starting iteration: 4; err: [Inf, 0.21259861757047474, 0.17066561932489277, 0.1588699102550745, 0.15204476668406278] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21259861757047474, 0.17066561932489277, 0.1588699102550745, 0.15204476668406278, 0.1497692850753665] ***
*** starting iteration: 5; err: [Inf, 0.21259861757047474, 0.17066561932489277, 0.1588699102550745, 0.15204476668406278, 0.1497692850753665] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21259861757047474, 0.17066561932489277, 0.1588699102550745, 0.15204476668406278, 0.1497692850753665, 0.14924710713140665] ***
*** finished computation of 7 references, err: [Inf, 0.21259861757047474, 0.17066561932489277, 0.1588699102550745, 0.15204476668406278, 0.1497692850753665, 0.14924710713140665] ***
*** center 1: selecting labels [1] (freq >= 1) [from [84, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [57, 9, 0]]
** centroid: 2, normalized-entropy: 0.5746356978376794, [(1, 57), (2, 9)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 59, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [64, 21, 0]]
** centroid: 4, normalized-entropy: 0.806583102274714, [(1, 64), (2, 21)]
*** center 5: selecting labels [1] (freq >= 1) [from [61, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [30, 45, 0]]
** centroid: 6, normalized-entropy: 0.9709505944546688, [(1, 30), (2, 45)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 48, 22]]
** centroid: 7, normalized-entropy: 0.8980587934501658, [(2, 48), (3, 22)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.218530065825209] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.218530065825209, 0.1739460557529237] ***
*** starting iteration: 2; err: [Inf, 0.218530065825209, 0.1739460557529237] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.218530065825209, 0.1739460557529237, 0.1601054461337626] ***
*** starting iteration: 3; err: [Inf, 0.218530065825209, 0.1739460557529237, 0.1601054461337626] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.218530065825209, 0.1739460557529237, 0.1601054461337626, 0.15696473953174428] ***
*** starting iteration: 4; err: [Inf, 0.218530065825209, 0.1739460557529237, 0.1601054461337626, 0.15696473953174428] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.218530065825209, 0.1739460557529237, 0.1601054461337626, 0.15696473953174428, 0.15536349365115165] ***
*** starting iteration: 5; err: [Inf, 0.218530065825209, 0.1739460557529237, 0.1601054461337626, 0.15696473953174428, 0.15536349365115165] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.218530065825209, 0.1739460557529237, 0.1601054461337626, 0.15696473953174428, 0.15536349365115165, 0.15452058030106128] ***
*** finished computation of 7 references, err: [Inf, 0.218530065825209, 0.1739460557529237, 0.1601054461337626, 0.15696473953174428, 0.15536349365115165, 0.15452058030106128] ***
*** center 1: selecting labels [1] (freq >= 1) [from [41, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 69, 20]]
** centroid: 2, normalized-entropy: 0.7686913027030167, [(2, 69), (3, 20)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [22, 22, 0]]
** centroid: 3, normalized-entropy: 1.0, [(1, 22), (2, 22)]
*** center 4: selecting labels [1] (freq >= 1) [from [82, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [78, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [78, 34, 0]]
** centroid: 6, normalized-entropy: 0.8856128713989709, [(1, 78), (2, 34)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 54, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19105950762773863] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19105950762773863, 0.15759954576566815] ***
*** starting iteration: 2; err: [Inf, 0.19105950762773863, 0.15759954576566815] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19105950762773863, 0.15759954576566815, 0.15387458622083067] ***
*** starting iteration: 3; err: [Inf, 0.19105950762773863, 0.15759954576566815, 0.15387458622083067] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19105950762773863, 0.15759954576566815, 0.15387458622083067, 0.15219735687971114] ***
*** starting iteration: 4; err: [Inf, 0.19105950762773863, 0.15759954576566815, 0.15387458622083067, 0.15219735687971114] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19105950762773863, 0.15759954576566815, 0.15387458622083067, 0.15219735687971114, 0.1509152830634266] ***
*** starting iteration: 5; err: [Inf, 0.19105950762773863, 0.15759954576566815, 0.15387458622083067, 0.15219735687971114, 0.1509152830634266] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19105950762773863, 0.15759954576566815, 0.15387458622083067, 0.15219735687971114, 0.1509152830634266, 0.14957224442623557] ***
*** starting iteration: 6; err: [Inf, 0.19105950762773863, 0.15759954576566815, 0.15387458622083067, 0.15219735687971114, 0.1509152830634266, 0.14957224442623557] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19105950762773863, 0.15759954576566815, 0.15387458622083067, 0.15219735687971114, 0.1509152830634266, 0.14957224442623557, 0.14794768558815122] ***
*** starting iteration: 7; err: [Inf, 0.19105950762773863, 0.15759954576566815, 0.15387458622083067, 0.15219735687971114, 0.1509152830634266, 0.14957224442623557, 0.14794768558815122] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19105950762773863, 0.15759954576566815, 0.15387458622083067, 0.15219735687971114, 0.1509152830634266, 0.14957224442623557, 0.14794768558815122, 0.1466283394508064] ***
*** starting iteration: 8; err: [Inf, 0.19105950762773863, 0.15759954576566815, 0.15387458622083067, 0.15219735687971114, 0.1509152830634266, 0.14957224442623557, 0.14794768558815122, 0.1466283394508064] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19105950762773863, 0.15759954576566815, 0.15387458622083067, 0.15219735687971114, 0.1509152830634266, 0.14957224442623557, 0.14794768558815122, 0.1466283394508064, 0.14594959420897066] ***
*** finished computation of 7 references, err: [Inf, 0.19105950762773863, 0.15759954576566815, 0.15387458622083067, 0.15219735687971114, 0.1509152830634266, 0.14957224442623557, 0.14794768558815122, 0.1466283394508064, 0.14594959420897066] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [75, 5, 0]]
** centroid: 1, normalized-entropy: 0.3372900666170139, [(1, 75), (2, 5)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [50, 25, 0]]
** centroid: 2, normalized-entropy: 0.9182958340544894, [(1, 50), (2, 25)]
*** center 3: selecting labels [1] (freq >= 1) [from [53, 0, 0]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 65, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [56, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 70, 18]]
** centroid: 6, normalized-entropy: 0.7309263775906009, [(2, 70), (3, 18)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [52, 31, 0]]
** centroid: 7, normalized-entropy: 0.9533171305598173, [(1, 52), (2, 31)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19679369757615495] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19679369757615495, 0.15274442255683243] ***
*** starting iteration: 2; err: [Inf, 0.19679369757615495, 0.15274442255683243] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19679369757615495, 0.15274442255683243, 0.1489994888175279] ***
*** starting iteration: 3; err: [Inf, 0.19679369757615495, 0.15274442255683243, 0.1489994888175279] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19679369757615495, 0.15274442255683243, 0.1489994888175279, 0.1472783747408539] ***
*** starting iteration: 4; err: [Inf, 0.19679369757615495, 0.15274442255683243, 0.1489994888175279, 0.1472783747408539] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19679369757615495, 0.15274442255683243, 0.1489994888175279, 0.1472783747408539, 0.14609034578781574] ***
*** starting iteration: 5; err: [Inf, 0.19679369757615495, 0.15274442255683243, 0.1489994888175279, 0.1472783747408539, 0.14609034578781574] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19679369757615495, 0.15274442255683243, 0.1489994888175279, 0.1472783747408539, 0.14609034578781574, 0.1447509840875864] ***
*** starting iteration: 6; err: [Inf, 0.19679369757615495, 0.15274442255683243, 0.1489994888175279, 0.1472783747408539, 0.14609034578781574, 0.1447509840875864] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19679369757615495, 0.15274442255683243, 0.1489994888175279, 0.1472783747408539, 0.14609034578781574, 0.1447509840875864, 0.14391275051608682] ***
*** finished computation of 7 references, err: [Inf, 0.19679369757615495, 0.15274442255683243, 0.1489994888175279, 0.1472783747408539, 0.14609034578781574, 0.1447509840875864, 0.14391275051608682] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [61, 7, 0]]
** centroid: 1, normalized-entropy: 0.4782501641071144, [(1, 61), (2, 7)]
*** center 2: selecting labels [1] (freq >= 1) [from [62, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [75, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 71, 16]]
** centroid: 4, normalized-entropy: 0.6885521684368613, [(2, 71), (3, 16)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 39, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [72, 33, 0]]
** centroid: 6, normalized-entropy: 0.8980587934501658, [(1, 72), (2, 33)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [31, 33, 0]]
** centroid: 7, normalized-entropy: 0.9992954443621548, [(1, 31), (2, 33)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1800986409727484] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1800986409727484, 0.1553984200851992] ***
*** starting iteration: 2; err: [Inf, 0.1800986409727484, 0.1553984200851992] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1800986409727484, 0.1553984200851992, 0.15312923872563988] ***
*** starting iteration: 3; err: [Inf, 0.1800986409727484, 0.1553984200851992, 0.15312923872563988] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1800986409727484, 0.1553984200851992, 0.15312923872563988, 0.15246193455485627] ***
*** finished computation of 7 references, err: [Inf, 0.1800986409727484, 0.1553984200851992, 0.15312923872563988, 0.15246193455485627] ***
*** center 1: selecting labels [1] (freq >= 1) [from [46, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [78, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [64, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [62, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [23, 62, 0]]
** centroid: 5, normalized-entropy: 0.8423074510400833, [(1, 23), (2, 62)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [15, 65, 0]]
** centroid: 6, normalized-entropy: 0.6962122601251459, [(1, 15), (2, 65)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 61, 24]]
** centroid: 7, normalized-entropy: 0.8586370819183629, [(2, 61), (3, 24)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18912356730550528] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18912356730550528, 0.15494251521956176] ***
*** starting iteration: 2; err: [Inf, 0.18912356730550528, 0.15494251521956176] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18912356730550528, 0.15494251521956176, 0.15015200659260153] ***
*** starting iteration: 3; err: [Inf, 0.18912356730550528, 0.15494251521956176, 0.15015200659260153] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18912356730550528, 0.15494251521956176, 0.15015200659260153, 0.14733752083592117] ***
*** starting iteration: 4; err: [Inf, 0.18912356730550528, 0.15494251521956176, 0.15015200659260153, 0.14733752083592117] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18912356730550528, 0.15494251521956176, 0.15015200659260153, 0.14733752083592117, 0.14645248178672046] ***
*** finished computation of 7 references, err: [Inf, 0.18912356730550528, 0.15494251521956176, 0.15015200659260153, 0.14733752083592117, 0.14645248178672046] ***
*** center 1: selecting labels [1] (freq >= 1) [from [69, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 59, 23]]
** centroid: 2, normalized-entropy: 0.8561146277685725, [(2, 59), (3, 23)]
*** center 3: selecting labels [1] (freq >= 1) [from [84, 0, 0]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 55, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [31, 23, 0]]
** centroid: 5, normalized-entropy: 0.9841095278800533, [(1, 31), (2, 23)]
*** center 6: selecting labels [1] (freq >= 1) [from [93, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [15, 48, 0]]
** centroid: 7, normalized-entropy: 0.7918583525674836, [(1, 15), (2, 48)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2353594314623624] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2353594314623624, 0.16310846321564168] ***
*** starting iteration: 2; err: [Inf, 0.2353594314623624, 0.16310846321564168] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2353594314623624, 0.16310846321564168, 0.15525462643429638] ***
*** starting iteration: 3; err: [Inf, 0.2353594314623624, 0.16310846321564168, 0.15525462643429638] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2353594314623624, 0.16310846321564168, 0.15525462643429638, 0.15218526505306362] ***
*** starting iteration: 4; err: [Inf, 0.2353594314623624, 0.16310846321564168, 0.15525462643429638, 0.15218526505306362] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2353594314623624, 0.16310846321564168, 0.15525462643429638, 0.15218526505306362, 0.15043764785816893] ***
*** starting iteration: 5; err: [Inf, 0.2353594314623624, 0.16310846321564168, 0.15525462643429638, 0.15218526505306362, 0.15043764785816893] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2353594314623624, 0.16310846321564168, 0.15525462643429638, 0.15218526505306362, 0.15043764785816893, 0.14932987655419858] ***
*** starting iteration: 6; err: [Inf, 0.2353594314623624, 0.16310846321564168, 0.15525462643429638, 0.15218526505306362, 0.15043764785816893, 0.14932987655419858] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2353594314623624, 0.16310846321564168, 0.15525462643429638, 0.15218526505306362, 0.15043764785816893, 0.14932987655419858, 0.14865435785613954] ***
*** finished computation of 7 references, err: [Inf, 0.2353594314623624, 0.16310846321564168, 0.15525462643429638, 0.15218526505306362, 0.15043764785816893, 0.14932987655419858, 0.14865435785613954] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 63, 17]]
** centroid: 1, normalized-entropy: 0.7462343013654809, [(2, 63), (3, 17)]
*** center 2: selecting labels [1] (freq >= 1) [from [70, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 46, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [70, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [23, 31, 0]]
** centroid: 5, normalized-entropy: 0.9841095278800533, [(1, 23), (2, 31)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [58, 2, 0]]
** centroid: 6, normalized-entropy: 0.2108423003185322, [(1, 58), (2, 2)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [83, 37, 0]]
** centroid: 7, normalized-entropy: 0.8912402011913028, [(1, 83), (2, 37)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19908938596583903] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19908938596583903, 0.16727181066945196] ***
*** starting iteration: 2; err: [Inf, 0.19908938596583903, 0.16727181066945196] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19908938596583903, 0.16727181066945196, 0.15789652584213765] ***
*** starting iteration: 3; err: [Inf, 0.19908938596583903, 0.16727181066945196, 0.15789652584213765] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19908938596583903, 0.16727181066945196, 0.15789652584213765, 0.15366210409626366] ***
*** starting iteration: 4; err: [Inf, 0.19908938596583903, 0.16727181066945196, 0.15789652584213765, 0.15366210409626366] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19908938596583903, 0.16727181066945196, 0.15789652584213765, 0.15366210409626366, 0.15142386585101486] ***
*** starting iteration: 5; err: [Inf, 0.19908938596583903, 0.16727181066945196, 0.15789652584213765, 0.15366210409626366, 0.15142386585101486] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19908938596583903, 0.16727181066945196, 0.15789652584213765, 0.15366210409626366, 0.15142386585101486, 0.1500590627975762] ***
*** starting iteration: 6; err: [Inf, 0.19908938596583903, 0.16727181066945196, 0.15789652584213765, 0.15366210409626366, 0.15142386585101486, 0.1500590627975762] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19908938596583903, 0.16727181066945196, 0.15789652584213765, 0.15366210409626366, 0.15142386585101486, 0.1500590627975762, 0.148668177139014] ***
*** starting iteration: 7; err: [Inf, 0.19908938596583903, 0.16727181066945196, 0.15789652584213765, 0.15366210409626366, 0.15142386585101486, 0.1500590627975762, 0.148668177139014] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19908938596583903, 0.16727181066945196, 0.15789652584213765, 0.15366210409626366, 0.15142386585101486, 0.1500590627975762, 0.148668177139014, 0.14654299082048236] ***
*** starting iteration: 8; err: [Inf, 0.19908938596583903, 0.16727181066945196, 0.15789652584213765, 0.15366210409626366, 0.15142386585101486, 0.1500590627975762, 0.148668177139014, 0.14654299082048236] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19908938596583903, 0.16727181066945196, 0.15789652584213765, 0.15366210409626366, 0.15142386585101486, 0.1500590627975762, 0.148668177139014, 0.14654299082048236, 0.1452881378289312] ***
*** starting iteration: 9; err: [Inf, 0.19908938596583903, 0.16727181066945196, 0.15789652584213765, 0.15366210409626366, 0.15142386585101486, 0.1500590627975762, 0.148668177139014, 0.14654299082048236, 0.1452881378289312] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19908938596583903, 0.16727181066945196, 0.15789652584213765, 0.15366210409626366, 0.15142386585101486, 0.1500590627975762, 0.148668177139014, 0.14654299082048236, 0.1452881378289312, 0.1449436605423689] ***
*** finished computation of 7 references, err: [Inf, 0.19908938596583903, 0.16727181066945196, 0.15789652584213765, 0.15366210409626366, 0.15142386585101486, 0.1500590627975762, 0.148668177139014, 0.14654299082048236, 0.1452881378289312, 0.1449436605423689] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [23, 44, 0]]
** centroid: 1, normalized-entropy: 0.9279262619599757, [(1, 23), (2, 44)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [24, 46, 0]]
** centroid: 2, normalized-entropy: 0.927526588431676, [(1, 24), (2, 46)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 77, 14]]
** centroid: 3, normalized-entropy: 0.6193821946787638, [(2, 77), (3, 14)]
*** center 4: selecting labels [1] (freq >= 1) [from [62, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [67, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [71, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [39, 33, 0]]
** centroid: 7, normalized-entropy: 0.9949848281859699, [(1, 39), (2, 33)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.27997707382543013] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27997707382543013, 0.19788950013602152] ***
*** starting iteration: 2; err: [Inf, 0.27997707382543013, 0.19788950013602152] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27997707382543013, 0.19788950013602152, 0.18283248646464198] ***
*** starting iteration: 3; err: [Inf, 0.27997707382543013, 0.19788950013602152, 0.18283248646464198] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27997707382543013, 0.19788950013602152, 0.18283248646464198, 0.1713875180836767] ***
*** starting iteration: 4; err: [Inf, 0.27997707382543013, 0.19788950013602152, 0.18283248646464198, 0.1713875180836767] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27997707382543013, 0.19788950013602152, 0.18283248646464198, 0.1713875180836767, 0.1611338776499033] ***
*** starting iteration: 5; err: [Inf, 0.27997707382543013, 0.19788950013602152, 0.18283248646464198, 0.1713875180836767, 0.1611338776499033] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27997707382543013, 0.19788950013602152, 0.18283248646464198, 0.1713875180836767, 0.1611338776499033, 0.156604290753603] ***
*** starting iteration: 6; err: [Inf, 0.27997707382543013, 0.19788950013602152, 0.18283248646464198, 0.1713875180836767, 0.1611338776499033, 0.156604290753603] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27997707382543013, 0.19788950013602152, 0.18283248646464198, 0.1713875180836767, 0.1611338776499033, 0.156604290753603, 0.15559864692902192] ***
*** starting iteration: 7; err: [Inf, 0.27997707382543013, 0.19788950013602152, 0.18283248646464198, 0.1713875180836767, 0.1611338776499033, 0.156604290753603, 0.15559864692902192] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27997707382543013, 0.19788950013602152, 0.18283248646464198, 0.1713875180836767, 0.1611338776499033, 0.156604290753603, 0.15559864692902192, 0.15428199845738708] ***
*** starting iteration: 8; err: [Inf, 0.27997707382543013, 0.19788950013602152, 0.18283248646464198, 0.1713875180836767, 0.1611338776499033, 0.156604290753603, 0.15559864692902192, 0.15428199845738708] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27997707382543013, 0.19788950013602152, 0.18283248646464198, 0.1713875180836767, 0.1611338776499033, 0.156604290753603, 0.15559864692902192, 0.15428199845738708, 0.15314306409470738] ***
*** starting iteration: 9; err: [Inf, 0.27997707382543013, 0.19788950013602152, 0.18283248646464198, 0.1713875180836767, 0.1611338776499033, 0.156604290753603, 0.15559864692902192, 0.15428199845738708, 0.15314306409470738] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27997707382543013, 0.19788950013602152, 0.18283248646464198, 0.1713875180836767, 0.1611338776499033, 0.156604290753603, 0.15559864692902192, 0.15428199845738708, 0.15314306409470738, 0.1525119024552405] ***
*** finished computation of 7 references, err: [Inf, 0.27997707382543013, 0.19788950013602152, 0.18283248646464198, 0.1713875180836767, 0.1611338776499033, 0.156604290753603, 0.15559864692902192, 0.15428199845738708, 0.15314306409470738, 0.1525119024552405] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 69, 12]]
** centroid: 1, normalized-entropy: 0.6051865766334207, [(2, 69), (3, 12)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [32, 37, 0]]
** centroid: 2, normalized-entropy: 0.9962088839046743, [(1, 32), (2, 37)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [81, 24, 0]]
** centroid: 3, normalized-entropy: 0.775512658133148, [(1, 81), (2, 24)]
*** center 4: selecting labels [1] (freq >= 1) [from [83, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [36, 20, 0]]
** centroid: 5, normalized-entropy: 0.940285958670631, [(1, 36), (2, 20)]
*** center 6: selecting labels [1] (freq >= 1) [from [52, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 49, 5]]
** centroid: 7, normalized-entropy: 0.44506485705083854, [(2, 49), (3, 5)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1993072398044169] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1993072398044169, 0.16788509001769125] ***
*** starting iteration: 2; err: [Inf, 0.1993072398044169, 0.16788509001769125] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1993072398044169, 0.16788509001769125, 0.1593016126593575] ***
*** starting iteration: 3; err: [Inf, 0.1993072398044169, 0.16788509001769125, 0.1593016126593575] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1993072398044169, 0.16788509001769125, 0.1593016126593575, 0.1523870730670169] ***
*** starting iteration: 4; err: [Inf, 0.1993072398044169, 0.16788509001769125, 0.1593016126593575, 0.1523870730670169] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1993072398044169, 0.16788509001769125, 0.1593016126593575, 0.1523870730670169, 0.14958966126665474] ***
*** starting iteration: 5; err: [Inf, 0.1993072398044169, 0.16788509001769125, 0.1593016126593575, 0.1523870730670169, 0.14958966126665474] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1993072398044169, 0.16788509001769125, 0.1593016126593575, 0.1523870730670169, 0.14958966126665474, 0.14704128800705074] ***
*** starting iteration: 6; err: [Inf, 0.1993072398044169, 0.16788509001769125, 0.1593016126593575, 0.1523870730670169, 0.14958966126665474, 0.14704128800705074] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1993072398044169, 0.16788509001769125, 0.1593016126593575, 0.1523870730670169, 0.14958966126665474, 0.14704128800705074, 0.14583175997808576] ***
*** starting iteration: 7; err: [Inf, 0.1993072398044169, 0.16788509001769125, 0.1593016126593575, 0.1523870730670169, 0.14958966126665474, 0.14704128800705074, 0.14583175997808576] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1993072398044169, 0.16788509001769125, 0.1593016126593575, 0.1523870730670169, 0.14958966126665474, 0.14704128800705074, 0.14583175997808576, 0.14532701239362358] ***
*** finished computation of 7 references, err: [Inf, 0.1993072398044169, 0.16788509001769125, 0.1593016126593575, 0.1523870730670169, 0.14958966126665474, 0.14704128800705074, 0.14583175997808576, 0.14532701239362358] ***
*** center 1: selecting labels [1] (freq >= 1) [from [67, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 76, 18]]
** centroid: 2, normalized-entropy: 0.7045767128725937, [(2, 76), (3, 18)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [24, 49, 0]]
** centroid: 3, normalized-entropy: 0.9136617865655933, [(1, 24), (2, 49)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [42, 32, 0]]
** centroid: 4, normalized-entropy: 0.9867867202680318, [(1, 42), (2, 32)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [34, 37, 0]]
** centroid: 5, normalized-entropy: 0.9987117514654895, [(1, 34), (2, 37)]
*** center 6: selecting labels [1] (freq >= 1) [from [57, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [64, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1876319597568363] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1876319597568363, 0.1561991864470765] ***
*** starting iteration: 2; err: [Inf, 0.1876319597568363, 0.1561991864470765] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1876319597568363, 0.1561991864470765, 0.1518414671290666] ***
*** starting iteration: 3; err: [Inf, 0.1876319597568363, 0.1561991864470765, 0.1518414671290666] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1876319597568363, 0.1561991864470765, 0.1518414671290666, 0.15123383707366883] ***
*** finished computation of 7 references, err: [Inf, 0.1876319597568363, 0.1561991864470765, 0.1518414671290666, 0.15123383707366883] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [36, 7, 0]]
** centroid: 1, normalized-entropy: 0.6409441847875289, [(1, 36), (2, 7)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [73, 12, 0]]
** centroid: 2, normalized-entropy: 0.5873116089977589, [(1, 73), (2, 12)]
*** center 3: selecting labels [1] (freq >= 1) [from [67, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [17, 66, 0]]
** centroid: 4, normalized-entropy: 0.7314625617214586, [(1, 17), (2, 66)]
*** center 5: selecting labels [1] (freq >= 1) [from [90, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 57, 22]]
** centroid: 6, normalized-entropy: 0.8533728188427888, [(2, 57), (3, 22)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 53, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.17190556829608977] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17190556829608977, 0.15198486723937094] ***
*** starting iteration: 2; err: [Inf, 0.17190556829608977, 0.15198486723937094] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17190556829608977, 0.15198486723937094, 0.1480574798732996] ***
*** starting iteration: 3; err: [Inf, 0.17190556829608977, 0.15198486723937094, 0.1480574798732996] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17190556829608977, 0.15198486723937094, 0.1480574798732996, 0.14634158684313298] ***
*** starting iteration: 4; err: [Inf, 0.17190556829608977, 0.15198486723937094, 0.1480574798732996, 0.14634158684313298] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17190556829608977, 0.15198486723937094, 0.1480574798732996, 0.14634158684313298, 0.1455542221739888] ***
*** finished computation of 7 references, err: [Inf, 0.17190556829608977, 0.15198486723937094, 0.1480574798732996, 0.14634158684313298, 0.1455542221739888] ***
*** center 1: selecting labels [1] (freq >= 1) [from [79, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 66, 23]]
** centroid: 2, normalized-entropy: 0.8243633538094403, [(2, 66), (3, 23)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [64, 3, 0]]
** centroid: 3, normalized-entropy: 0.26377743669413856, [(1, 64), (2, 3)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 65, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [53, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [47, 23, 0]]
** centroid: 6, normalized-entropy: 0.9134601452569628, [(1, 47), (2, 23)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [49, 28, 0]]
** centroid: 7, normalized-entropy: 0.9456603046006401, [(1, 49), (2, 28)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.184681556224823] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.184681556224823, 0.1594623044654727] ***
*** starting iteration: 2; err: [Inf, 0.184681556224823, 0.1594623044654727] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.184681556224823, 0.1594623044654727, 0.15642768804728985] ***
*** starting iteration: 3; err: [Inf, 0.184681556224823, 0.1594623044654727, 0.15642768804728985] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.184681556224823, 0.1594623044654727, 0.15642768804728985, 0.1548382095657289] ***
*** starting iteration: 4; err: [Inf, 0.184681556224823, 0.1594623044654727, 0.15642768804728985, 0.1548382095657289] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.184681556224823, 0.1594623044654727, 0.15642768804728985, 0.1548382095657289, 0.15341800151392818] ***
*** starting iteration: 5; err: [Inf, 0.184681556224823, 0.1594623044654727, 0.15642768804728985, 0.1548382095657289, 0.15341800151392818] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.184681556224823, 0.1594623044654727, 0.15642768804728985, 0.1548382095657289, 0.15341800151392818, 0.1522859086347744] ***
*** starting iteration: 6; err: [Inf, 0.184681556224823, 0.1594623044654727, 0.15642768804728985, 0.1548382095657289, 0.15341800151392818, 0.1522859086347744] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.184681556224823, 0.1594623044654727, 0.15642768804728985, 0.1548382095657289, 0.15341800151392818, 0.1522859086347744, 0.15178203404601665] ***
*** finished computation of 7 references, err: [Inf, 0.184681556224823, 0.1594623044654727, 0.15642768804728985, 0.1548382095657289, 0.15341800151392818, 0.1522859086347744, 0.15178203404601665] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 64, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [78, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [35, 25, 0]]
** centroid: 3, normalized-entropy: 0.9798687566511527, [(1, 35), (2, 25)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 79, 20]]
** centroid: 4, normalized-entropy: 0.7259501452943735, [(2, 79), (3, 20)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [69, 3, 0]]
** centroid: 5, normalized-entropy: 0.24988229283318547, [(1, 69), (2, 3)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [60, 12, 0]]
** centroid: 6, normalized-entropy: 0.6500224216483541, [(1, 60), (2, 12)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [50, 5, 0]]
** centroid: 7, normalized-entropy: 0.43949698692151346, [(1, 50), (2, 5)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2602965146768838] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2602965146768838, 0.16627073378674687] ***
*** starting iteration: 2; err: [Inf, 0.2602965146768838, 0.16627073378674687] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2602965146768838, 0.16627073378674687, 0.15402598396409303] ***
*** starting iteration: 3; err: [Inf, 0.2602965146768838, 0.16627073378674687, 0.15402598396409303] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2602965146768838, 0.16627073378674687, 0.15402598396409303, 0.14928466004505753] ***
*** starting iteration: 4; err: [Inf, 0.2602965146768838, 0.16627073378674687, 0.15402598396409303, 0.14928466004505753] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2602965146768838, 0.16627073378674687, 0.15402598396409303, 0.14928466004505753, 0.14720435392763465] ***
*** starting iteration: 5; err: [Inf, 0.2602965146768838, 0.16627073378674687, 0.15402598396409303, 0.14928466004505753, 0.14720435392763465] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2602965146768838, 0.16627073378674687, 0.15402598396409303, 0.14928466004505753, 0.14720435392763465, 0.1469076737873256] ***
*** finished computation of 7 references, err: [Inf, 0.2602965146768838, 0.16627073378674687, 0.15402598396409303, 0.14928466004505753, 0.14720435392763465, 0.1469076737873256] ***
*** center 1: selecting labels [1] (freq >= 1) [from [43, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [69, 45, 0]]
** centroid: 2, normalized-entropy: 0.9677884628267678, [(1, 69), (2, 45)]
*** center 3: selecting labels [1] (freq >= 1) [from [79, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [64, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [16, 43, 0]]
** centroid: 5, normalized-entropy: 0.8431619569518377, [(1, 16), (2, 43)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [1, 46, 0]]
** centroid: 6, normalized-entropy: 0.14854949043034832, [(1, 1), (2, 46)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 72, 22]]
** centroid: 7, normalized-entropy: 0.7849920887641585, [(2, 72), (3, 22)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19856519117671997] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19856519117671997, 0.16225939246453344] ***
*** starting iteration: 2; err: [Inf, 0.19856519117671997, 0.16225939246453344] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19856519117671997, 0.16225939246453344, 0.15475960961543023] ***
*** starting iteration: 3; err: [Inf, 0.19856519117671997, 0.16225939246453344, 0.15475960961543023] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19856519117671997, 0.16225939246453344, 0.15475960961543023, 0.15151159760262817] ***
*** starting iteration: 4; err: [Inf, 0.19856519117671997, 0.16225939246453344, 0.15475960961543023, 0.15151159760262817] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19856519117671997, 0.16225939246453344, 0.15475960961543023, 0.15151159760262817, 0.15078774508740753] ***
*** finished computation of 7 references, err: [Inf, 0.19856519117671997, 0.16225939246453344, 0.15475960961543023, 0.15151159760262817, 0.15078774508740753] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [54, 2, 0]]
** centroid: 1, normalized-entropy: 0.2222848306856879, [(1, 54), (2, 2)]
*** center 2: selecting labels [1] (freq >= 1) [from [47, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [74, 34, 0]]
** centroid: 3, normalized-entropy: 0.8986533756907481, [(1, 74), (2, 34)]
*** center 4: selecting labels [1] (freq >= 1) [from [51, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 82, 16]]
** centroid: 5, normalized-entropy: 0.6420642892306891, [(2, 82), (3, 16)]
*** center 6: selecting labels [1, 2, 3] (freq >= 1) [from [1, 68, 1]]
** centroid: 6, normalized-entropy: 0.13612163401119687, [(1, 1), (2, 68), (3, 1)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [60, 10, 0]]
** centroid: 7, normalized-entropy: 0.5916727785823274, [(1, 60), (2, 10)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1723583279363811] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1723583279363811, 0.1602783336546272] ***
*** starting iteration: 2; err: [Inf, 0.1723583279363811, 0.1602783336546272] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1723583279363811, 0.1602783336546272, 0.15796207894897088] ***
*** starting iteration: 3; err: [Inf, 0.1723583279363811, 0.1602783336546272, 0.15796207894897088] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1723583279363811, 0.1602783336546272, 0.15796207894897088, 0.1572347210943699] ***
*** finished computation of 7 references, err: [Inf, 0.1723583279363811, 0.1602783336546272, 0.15796207894897088, 0.1572347210943699] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 88, 18]]
** centroid: 1, normalized-entropy: 0.6572729784684466, [(2, 88), (3, 18)]
*** center 2: selecting labels [1] (freq >= 1) [from [75, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [28, 4, 0]]
** centroid: 3, normalized-entropy: 0.5435644431995963, [(1, 28), (2, 4)]
*** center 4: selecting labels [1] (freq >= 1) [from [54, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [55, 54, 0]]
** centroid: 5, normalized-entropy: 0.9999392847706552, [(1, 55), (2, 54)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [33, 30, 0]]
** centroid: 6, normalized-entropy: 0.998363672593813, [(1, 33), (2, 30)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [32, 29, 0]]
** centroid: 7, normalized-entropy: 0.9982545693874832, [(1, 32), (2, 29)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.17585196935944258] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17585196935944258, 0.15834346452727913] ***
*** starting iteration: 2; err: [Inf, 0.17585196935944258, 0.15834346452727913] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17585196935944258, 0.15834346452727913, 0.1481816507987678] ***
*** starting iteration: 3; err: [Inf, 0.17585196935944258, 0.15834346452727913, 0.1481816507987678] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17585196935944258, 0.15834346452727913, 0.1481816507987678, 0.14588825399242342] ***
*** starting iteration: 4; err: [Inf, 0.17585196935944258, 0.15834346452727913, 0.1481816507987678, 0.14588825399242342] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17585196935944258, 0.15834346452727913, 0.1481816507987678, 0.14588825399242342, 0.1449217978650704] ***
*** finished computation of 7 references, err: [Inf, 0.17585196935944258, 0.15834346452727913, 0.1481816507987678, 0.14588825399242342, 0.1449217978650704] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [8, 63, 0]]
** centroid: 1, normalized-entropy: 0.5079353563991225, [(1, 8), (2, 63)]
*** center 2: selecting labels [1] (freq >= 1) [from [86, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [30, 32, 0]]
** centroid: 3, normalized-entropy: 0.9992492479956566, [(1, 30), (2, 32)]
*** center 4: selecting labels [1] (freq >= 1) [from [70, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [51, 32, 0]]
** centroid: 5, normalized-entropy: 0.9618624139909456, [(1, 51), (2, 32)]
*** center 6: selecting labels [1] (freq >= 1) [from [47, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 62, 19]]
** centroid: 7, normalized-entropy: 0.785889583138768, [(2, 62), (3, 19)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22903491531684994] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22903491531684994, 0.17032165735028684] ***
*** starting iteration: 2; err: [Inf, 0.22903491531684994, 0.17032165735028684] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22903491531684994, 0.17032165735028684, 0.15777861447259783] ***
*** starting iteration: 3; err: [Inf, 0.22903491531684994, 0.17032165735028684, 0.15777861447259783] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22903491531684994, 0.17032165735028684, 0.15777861447259783, 0.15470679199136794] ***
*** starting iteration: 4; err: [Inf, 0.22903491531684994, 0.17032165735028684, 0.15777861447259783, 0.15470679199136794] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22903491531684994, 0.17032165735028684, 0.15777861447259783, 0.15470679199136794, 0.15296907138824462] ***
*** starting iteration: 5; err: [Inf, 0.22903491531684994, 0.17032165735028684, 0.15777861447259783, 0.15470679199136794, 0.15296907138824462] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22903491531684994, 0.17032165735028684, 0.15777861447259783, 0.15470679199136794, 0.15296907138824462, 0.1522968460638076] ***
*** finished computation of 7 references, err: [Inf, 0.22903491531684994, 0.17032165735028684, 0.15777861447259783, 0.15470679199136794, 0.15296907138824462, 0.1522968460638076] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 66, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [84, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [68, 2, 0]]
** centroid: 3, normalized-entropy: 0.18717625687320805, [(1, 68), (2, 2)]
*** center 4: selecting labels [1] (freq >= 1) [from [82, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 31, 17]]
** centroid: 5, normalized-entropy: 0.9377342939868042, [(2, 31), (3, 17)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [14, 60, 0]]
** centroid: 6, normalized-entropy: 0.699772221773307, [(1, 14), (2, 60)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [49, 27, 0]]
** centroid: 7, normalized-entropy: 0.9386808697586004, [(1, 49), (2, 27)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.17444615475647152] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17444615475647152, 0.16353988810814918] ***
*** starting iteration: 2; err: [Inf, 0.17444615475647152, 0.16353988810814918] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17444615475647152, 0.16353988810814918, 0.15834630333818495] ***
*** starting iteration: 3; err: [Inf, 0.17444615475647152, 0.16353988810814918, 0.15834630333818495] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17444615475647152, 0.16353988810814918, 0.15834630333818495, 0.15515891310572624] ***
*** starting iteration: 4; err: [Inf, 0.17444615475647152, 0.16353988810814918, 0.15834630333818495, 0.15515891310572624] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17444615475647152, 0.16353988810814918, 0.15834630333818495, 0.15515891310572624, 0.1531184178153053] ***
*** starting iteration: 5; err: [Inf, 0.17444615475647152, 0.16353988810814918, 0.15834630333818495, 0.15515891310572624, 0.1531184178153053] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17444615475647152, 0.16353988810814918, 0.15834630333818495, 0.15515891310572624, 0.1531184178153053, 0.15204414400830865] ***
*** starting iteration: 6; err: [Inf, 0.17444615475647152, 0.16353988810814918, 0.15834630333818495, 0.15515891310572624, 0.1531184178153053, 0.15204414400830865] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17444615475647152, 0.16353988810814918, 0.15834630333818495, 0.15515891310572624, 0.1531184178153053, 0.15204414400830865, 0.1507395355901681] ***
*** starting iteration: 7; err: [Inf, 0.17444615475647152, 0.16353988810814918, 0.15834630333818495, 0.15515891310572624, 0.1531184178153053, 0.15204414400830865, 0.1507395355901681] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17444615475647152, 0.16353988810814918, 0.15834630333818495, 0.15515891310572624, 0.1531184178153053, 0.15204414400830865, 0.1507395355901681, 0.14923777292249724] ***
*** starting iteration: 8; err: [Inf, 0.17444615475647152, 0.16353988810814918, 0.15834630333818495, 0.15515891310572624, 0.1531184178153053, 0.15204414400830865, 0.1507395355901681, 0.14923777292249724] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17444615475647152, 0.16353988810814918, 0.15834630333818495, 0.15515891310572624, 0.1531184178153053, 0.15204414400830865, 0.1507395355901681, 0.14923777292249724, 0.14766225521534215] ***
*** starting iteration: 9; err: [Inf, 0.17444615475647152, 0.16353988810814918, 0.15834630333818495, 0.15515891310572624, 0.1531184178153053, 0.15204414400830865, 0.1507395355901681, 0.14923777292249724, 0.14766225521534215] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17444615475647152, 0.16353988810814918, 0.15834630333818495, 0.15515891310572624, 0.1531184178153053, 0.15204414400830865, 0.1507395355901681, 0.14923777292249724, 0.14766225521534215, 0.14638987847417592] ***
*** starting iteration: 10; err: [Inf, 0.17444615475647152, 0.16353988810814918, 0.15834630333818495, 0.15515891310572624, 0.1531184178153053, 0.15204414400830865, 0.1507395355901681, 0.14923777292249724, 0.14766225521534215, 0.14638987847417592] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17444615475647152, 0.16353988810814918, 0.15834630333818495, 0.15515891310572624, 0.1531184178153053, 0.15204414400830865, 0.1507395355901681, 0.14923777292249724, 0.14766225521534215, 0.14638987847417592, 0.14596935919672252] ***
*** finished computation of 7 references, err: [Inf, 0.17444615475647152, 0.16353988810814918, 0.15834630333818495, 0.15515891310572624, 0.1531184178153053, 0.15204414400830865, 0.1507395355901681, 0.14923777292249724, 0.14766225521534215, 0.14638987847417592, 0.14596935919672252] ***
*** center 1: selecting labels [1] (freq >= 1) [from [70, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [75, 39, 0]]
** centroid: 2, normalized-entropy: 0.9268190639645774, [(1, 75), (2, 39)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [26, 36, 0]]
** centroid: 3, normalized-entropy: 0.9811522341999134, [(1, 26), (2, 36)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 68, 19]]
** centroid: 4, normalized-entropy: 0.7572182549240017, [(2, 68), (3, 19)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [6, 48, 0]]
** centroid: 5, normalized-entropy: 0.5032583347756457, [(1, 6), (2, 48)]
*** center 6: selecting labels [1] (freq >= 1) [from [43, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [70, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18224719655886293] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18224719655886293, 0.15317274777963757] ***
*** starting iteration: 2; err: [Inf, 0.18224719655886293, 0.15317274777963757] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18224719655886293, 0.15317274777963757, 0.1514269521534443] ***
*** starting iteration: 3; err: [Inf, 0.18224719655886293, 0.15317274777963757, 0.1514269521534443] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18224719655886293, 0.15317274777963757, 0.1514269521534443, 0.15077927922271192] ***
*** finished computation of 7 references, err: [Inf, 0.18224719655886293, 0.15317274777963757, 0.1514269521534443, 0.15077927922271192] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [30, 39, 0]]
** centroid: 1, normalized-entropy: 0.9876925088958032, [(1, 30), (2, 39)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [31, 32, 0]]
** centroid: 2, normalized-entropy: 0.9998182469603427, [(1, 31), (2, 32)]
*** center 3: selecting labels [1] (freq >= 1) [from [79, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [55, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 68, 22]]
** centroid: 5, normalized-entropy: 0.80235344282919, [(2, 68), (3, 22)]
*** center 6: selecting labels [1] (freq >= 1) [from [73, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [22, 49, 0]]
** centroid: 7, normalized-entropy: 0.893010810044601, [(1, 22), (2, 49)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21451759541034698] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21451759541034698, 0.168412447148934] ***
*** starting iteration: 2; err: [Inf, 0.21451759541034698, 0.168412447148934] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21451759541034698, 0.168412447148934, 0.15083224813453852] ***
*** starting iteration: 3; err: [Inf, 0.21451759541034698, 0.168412447148934, 0.15083224813453852] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21451759541034698, 0.168412447148934, 0.15083224813453852, 0.14672792530432344] ***
*** starting iteration: 4; err: [Inf, 0.21451759541034698, 0.168412447148934, 0.15083224813453852, 0.14672792530432344] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21451759541034698, 0.168412447148934, 0.15083224813453852, 0.14672792530432344, 0.14590994280809536] ***
*** finished computation of 7 references, err: [Inf, 0.21451759541034698, 0.168412447148934, 0.15083224813453852, 0.14672792530432344, 0.14590994280809536] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [37, 28, 0]]
** centroid: 1, normalized-entropy: 0.9861260846302384, [(1, 37), (2, 28)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [17, 53, 0]]
** centroid: 2, normalized-entropy: 0.7997594113291759, [(1, 17), (2, 53)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [25, 41, 0]]
** centroid: 3, normalized-entropy: 0.9571814385446724, [(1, 25), (2, 41)]
*** center 4: selecting labels [1] (freq >= 1) [from [76, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [67, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [68, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 69, 19]]
** centroid: 7, normalized-entropy: 0.7526269564427315, [(2, 69), (3, 19)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18787628425098957] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18787628425098957, 0.15934926103055477] ***
*** starting iteration: 2; err: [Inf, 0.18787628425098957, 0.15934926103055477] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18787628425098957, 0.15934926103055477, 0.1532007748465985] ***
*** starting iteration: 3; err: [Inf, 0.18787628425098957, 0.15934926103055477, 0.1532007748465985] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18787628425098957, 0.15934926103055477, 0.1532007748465985, 0.15125143076851963] ***
*** starting iteration: 4; err: [Inf, 0.18787628425098957, 0.15934926103055477, 0.1532007748465985, 0.15125143076851963] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18787628425098957, 0.15934926103055477, 0.1532007748465985, 0.15125143076851963, 0.15012076358683407] ***
*** starting iteration: 5; err: [Inf, 0.18787628425098957, 0.15934926103055477, 0.1532007748465985, 0.15125143076851963, 0.15012076358683407] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18787628425098957, 0.15934926103055477, 0.1532007748465985, 0.15125143076851963, 0.15012076358683407, 0.14995980601012707] ***
*** finished computation of 7 references, err: [Inf, 0.18787628425098957, 0.15934926103055477, 0.1532007748465985, 0.15125143076851963, 0.15012076358683407, 0.14995980601012707] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [72, 15, 0]]
** centroid: 1, normalized-entropy: 0.6631968402398286, [(1, 72), (2, 15)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [33, 33, 0]]
** centroid: 2, normalized-entropy: 1.0, [(1, 33), (2, 33)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 56, 10]]
** centroid: 3, normalized-entropy: 0.6136190195993708, [(2, 56), (3, 10)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 50, 2]]
** centroid: 4, normalized-entropy: 0.23519338181924157, [(2, 50), (3, 2)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [40, 30, 0]]
** centroid: 5, normalized-entropy: 0.9852281360342514, [(1, 40), (2, 30)]
*** center 6: selecting labels [1] (freq >= 1) [from [66, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [93, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19791716943122448] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19791716943122448, 0.1642779002476018] ***
*** starting iteration: 2; err: [Inf, 0.19791716943122448, 0.1642779002476018] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19791716943122448, 0.1642779002476018, 0.15459613679768516] ***
*** starting iteration: 3; err: [Inf, 0.19791716943122448, 0.1642779002476018, 0.15459613679768516] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19791716943122448, 0.1642779002476018, 0.15459613679768516, 0.1500546369254589] ***
*** starting iteration: 4; err: [Inf, 0.19791716943122448, 0.1642779002476018, 0.15459613679768516, 0.1500546369254589] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19791716943122448, 0.1642779002476018, 0.15459613679768516, 0.1500546369254589, 0.14776011580787599] ***
*** starting iteration: 5; err: [Inf, 0.19791716943122448, 0.1642779002476018, 0.15459613679768516, 0.1500546369254589, 0.14776011580787599] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19791716943122448, 0.1642779002476018, 0.15459613679768516, 0.1500546369254589, 0.14776011580787599, 0.14600973700359463] ***
*** starting iteration: 6; err: [Inf, 0.19791716943122448, 0.1642779002476018, 0.15459613679768516, 0.1500546369254589, 0.14776011580787599, 0.14600973700359463] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19791716943122448, 0.1642779002476018, 0.15459613679768516, 0.1500546369254589, 0.14776011580787599, 0.14600973700359463, 0.14511840838752688] ***
*** finished computation of 7 references, err: [Inf, 0.19791716943122448, 0.1642779002476018, 0.15459613679768516, 0.1500546369254589, 0.14776011580787599, 0.14600973700359463, 0.14511840838752688] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 45, 18]]
** centroid: 1, normalized-entropy: 0.8631205685666311, [(2, 45), (3, 18)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [24, 42, 0]]
** centroid: 2, normalized-entropy: 0.9456603046006401, [(1, 24), (2, 42)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [43, 30, 0]]
** centroid: 3, normalized-entropy: 0.9770012394218561, [(1, 43), (2, 30)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 63, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [89, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [84, 12, 0]]
** centroid: 6, normalized-entropy: 0.5435644431995963, [(1, 84), (2, 12)]
*** center 7: selecting labels [1] (freq >= 1) [from [50, 0, 0]]
finished with 11 centroids; started with 7
[ Info: ("class distribution: ", Dict(2 => 387,3 => 36,1 => 577), Dict(2 => 377,3 => 29,1 => 594))
[ Info: ===== scores for single classifier: {"micro_f1":0.976,"precision":0.976,"recall":0.976,"macro_recall":0.983624931900794,"macro_f1":0.9487535532776294,"accuracy":0.976,"class_f1":{"2":0.968421052631579,"3":0.8923076923076924,"1":0.985531914893617},"class_precision":{"2":0.9608355091383812,"3":0.8055555555555556,"1":0.9965576592082617},"class_recall":{"2":0.9761273209549072,"3":1.0,"1":0.9747474747474747}}
[ Info: ===== scores for 1: {"micro_f1":0.975,"precision":0.975,"recall":0.975,"macro_recall":0.9811257282521649,"macro_f1":0.9356279037633968,"accuracy":0.975,"class_f1":{"2":0.9666221628838452,"3":0.8529411764705882,"1":0.9873203719357566},"class_precision":{"2":0.9731182795698925,"3":0.7435897435897436,"1":0.9915110356536503},"class_recall":{"2":0.9602122015915119,"3":1.0,"1":0.9831649831649831}}
[ Info: ===== scores for 5: {"micro_f1":0.963,"precision":0.963,"recall":0.963,"macro_recall":0.9721306790272308,"macro_f1":0.9121830250723469,"accuracy":0.963,"class_f1":{"2":0.9504685408299867,"3":0.8055555555555556,"1":0.9805249788314987},"class_precision":{"2":0.9594594594594594,"3":0.6744186046511628,"1":0.9863713798977853},"class_recall":{"2":0.9416445623342176,"3":1.0,"1":0.9747474747474747}}
[ Info: ===== scores for 7: {"micro_f1":0.966,"precision":0.966,"recall":0.966,"macro_recall":0.9738141807107324,"macro_f1":0.9143215796441603,"accuracy":0.966,"class_f1":{"2":0.9543010752688172,"3":0.8055555555555556,"1":0.983108108108108},"class_precision":{"2":0.9673024523160763,"3":0.6744186046511628,"1":0.9864406779661017},"class_recall":{"2":0.9416445623342176,"3":1.0,"1":0.9797979797979798}}
[ Info: ===== scores for 9: {"micro_f1":0.976,"precision":0.976,"recall":0.976,"macro_recall":0.9810408833397339,"macro_f1":0.9251202145042114,"accuracy":0.976,"class_f1":{"2":0.967741935483871,"3":0.8169014084507042,"1":0.990717299578059},"class_precision":{"2":0.9809264305177112,"3":0.6904761904761905,"1":0.9932318104906938},"class_recall":{"2":0.9549071618037135,"3":1.0,"1":0.9882154882154882}}
[ Info: ===== scores for 11: {"micro_f1":0.977,"precision":0.977,"recall":0.977,"macro_recall":0.9822480627078328,"macro_f1":0.9223816897092556,"accuracy":0.977,"class_f1":{"2":0.9692101740294511,"3":0.8055555555555556,"1":0.9923793395427604},"class_precision":{"2":0.9783783783783784,"3":0.6744186046511628,"1":0.9982964224872232},"class_recall":{"2":0.9602122015915119,"3":1.0,"1":0.9865319865319865}}
(score = 0.974, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.974, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.975, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.975, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.962, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.962, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.968, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.968, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.964, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.964, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.963, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.963, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.969, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.969, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.966, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.966, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
[ Info: config: {"score":0.975,"k":1,"kernel":"direct_kernel","dist":"l2_distance","summary":"most_frequent_label","kernel_fun":"fun"}
[ Info: ===== scores optimized! B: {"micro_f1":0.975,"precision":0.975,"recall":0.975,"macro_recall":0.9811257282521649,"macro_f1":0.9356279037633968,"accuracy":0.975,"class_f1":{"2":0.9666221628838452,"3":0.8529411764705882,"1":0.9873203719357566},"class_precision":{"2":0.9731182795698925,"3":0.7435897435897436,"1":0.9915110356536503},"class_recall":{"2":0.9602122015915119,"3":1.0,"1":0.9831649831649831}}
Test Summary: | Pass  Total
AKNC          |    8      8
[82, 9, 2, 4, 1, 3, 2, 7, 5, 1, 8, 14, 4, 5, 3, 1, 11, 1, 20, 8, 2, 2, 9, 46, 6, 8, 9, 3, 3, 4, 3, 13, 1, 4, 18, 5, 5, 46, 20, 3, 11, 4, 12, 10, 7, 8, 2, 13, 2, 26, 4, 1, 6, 10, 9, 23, 13, 4, 22, 4, 17, 7, 49, 19, 18, 23, 15, 40, 102, 5, 35, 8, 7, 22, 2, 60, 14, 10, 54, 6, 24, 28, 449, 8, 53, 15, 20, 19, 9, 8, 13, 37, 6, 8, 7, 19, 35, 21, 25, 1, 30, 8, 8, 13, 15, 2, 17, 1, 30, 1, 21, 29, 9, 26, 32, 16, 39, 19, 3, 1, 6, 14, 2, 30, 16, 45, 90, 51, 49, 17, 6, 9, 13, 6, 18, 90, 10, 8, 23, 27, 15, 2, 15, 23, 16, 7, 52, 227, 37, 28, 88, 58, 30, 30, 8, 97, 12, 7, 12, 5, 722, 20, 2, 8, 7, 49, 23, 35, 12, 26, 19, 10, 20, 2, 4, 16, 34, 10, 4, 51, 1, 3, 46, 31, 102, 56, 23, 65, 13, 2, 107, 13, 2, 26, 9, 22, 53, 2, 37, 38, 15, 7, 129, 52, 55, 4, 32, 56, 73, 25, 341, 452, 33, 41, 8, 9, 21, 34, 52, 11, 49, 11, 106, 7, 1, 4, 17, 1, 10, 185, 5, 21, 86, 102, 7, 3, 24, 6, 83, 15, 12, 20, 11, 7, 1, 29, 20, 13, 9, 106, 42, 14, 34, 17, 15, 40, 2, 26, 13, 10, 51, 27, 89, 1, 28, 21, 50, 30, 38, 41, 21, 3, 2, 18, 14, 4, 60, 32, 6, 5, 41, 41, 3, 26, 4, 14, 8, 24, 8, 215, 1, 149, 12, 767, 5, 31, 34, 36, 143, 9]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.6459999999999998, speedup = 0.2703510653243633, eval_ratio = 0.08042)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.41742001488095243,"recall":0.4019097222222223,"f1":null,"seconds":0.00017930381000041962,"exhaustive_search_seconds":0.00036606378853321075,"evaluations":490.4921875,"distances_sum":1725.4600051597279}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5529513888888887,"recall":0.5529513888888887,"f1":null,"seconds":0.0002967808395624161,"exhaustive_search_seconds":0.00036606378853321075,"evaluations":646.8984375,"distances_sum":1660.6699654817833}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6631944444444443,"recall":0.6631944444444443,"f1":0.6631944444444443,"seconds":0.00039784982800483704,"exhaustive_search_seconds":0.00036606378853321075,"evaluations":784.859375,"distances_sum":1606.4065574932058}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7447916666666663,"recall":0.7447916666666663,"f1":0.7447916666666663,"seconds":0.00047374702990055084,"exhaustive_search_seconds":0.00036606378853321075,"evaluations":926.265625,"distances_sum":1577.5840258269043}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7994791666666662,"recall":0.7994791666666662,"f1":0.7994791666666662,"seconds":0.0005985815078020096,"exhaustive_search_seconds":0.00036606378853321075,"evaluations":1056.1875,"distances_sum":1560.0357890816697}
KCenters.DeloneInvIndex> reached performance {"precision":0.8454861111111105,"recall":0.8454861111111105,"f1":0.8454861111111105,"seconds":0.00078619085252285,"exhaustive_search_seconds":0.00036606378853321075,"evaluations":1171.453125,"distances_sum":1548.393563264567}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.8329999999999997, speedup = 0.5170533776843595, eval_ratio = 0.12303499999999999)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
    Testing KCenters tests passed 
