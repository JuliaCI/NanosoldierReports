Julia Version 1.5.0-DEV.287
Commit 80dde8d25e (2020-02-18 13:32 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed InvertedIndices ───────────── v1.0.0
  Installed LearnBase ─────────────────── v0.2.2
  Installed OrderedCollections ────────── v1.1.0
  Installed KCenters ──────────────────── v0.2.1
  Installed MLLabelUtils ──────────────── v0.5.1
  Installed DataStructures ────────────── v0.17.9
  Installed JSON ──────────────────────── v0.21.0
  Installed StatsBase ─────────────────── v0.32.1
  Installed Tables ────────────────────── v1.0.1
  Installed Compat ────────────────────── v3.5.0
  Installed DataValueInterfaces ───────── v1.0.0
  Installed Reexport ──────────────────── v0.2.0
  Installed SortingAlgorithms ─────────── v0.3.1
  Installed DataAPI ───────────────────── v1.1.0
  Installed PooledArrays ──────────────── v0.5.3
  Installed Missings ──────────────────── v0.4.3
  Installed MLDataPattern ─────────────── v0.5.0
  Installed MLDataUtils ───────────────── v0.5.0
  Installed TableTraits ───────────────── v1.0.0
  Installed SimilaritySearch ──────────── v0.3.19
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed CategoricalArrays ─────────── v0.7.7
  Installed MappedArrays ──────────────── v0.2.2
  Installed Parsers ───────────────────── v0.3.11
  Installed DataFrames ────────────────── v0.20.2
   Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.2.1
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.5.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.2
  [864edb3b] + DataStructures v0.17.9
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.2.1
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.11
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.19
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.1
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.0.1
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
    Testing KCenters
Status `/tmp/jl_4qnGQG/Manifest.toml`
  [324d7699] CategoricalArrays v0.7.7
  [34da2185] Compat v3.5.0
  [9a962f9c] DataAPI v1.1.0
  [a93c6f00] DataFrames v0.20.2
  [864edb3b] DataStructures v0.17.9
  [e2d170a0] DataValueInterfaces v1.0.0
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.1
  [7f8f8fb0] LearnBase v0.2.2
  [9920b226] MLDataPattern v0.5.0
  [cc2ba9b6] MLDataUtils v0.5.0
  [66a33bbf] MLLabelUtils v0.5.1
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.1.0
  [69de0a69] Parsers v0.3.11
  [2dfb63ee] PooledArrays v0.5.3
  [189a3867] Reexport v0.2.0
  [053f045d] SimilaritySearch v0.3.19
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.1
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.1
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [9fa8497b] Future 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [1a1011a3] SharedArrays 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
Test Summary: | Pass  Total
Scores        |    9      9
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 1.0716527590155602
[ Info: 0.9326678744951884
[ Info: 0.8326150393486023
[ Info: 0.5556568817794323
Test Summary:        |
Clustering with dnet | No tests
mean(cfft.distances) = 0.33252118043601514
mean(cdnet.distances) = 0.40253845535218713
mean(crand.distances) = 0.329429331595699
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5556640625, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.5556640625,"f1":0.7010139166389173,"seconds":4.9211084842681885e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":6.71875,"distances_sum":1434.7971066943182}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5556640625,"state":{"ssize":2,"bsize":3},"perf":{"precision":1.0,"recall":0.5556640625,"f1":0.7010139166389173,"seconds":4.9211084842681885e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":6.71875,"distances_sum":1434.7971066943182}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8720703125, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8720703125,"f1":0.9251805486180492,"seconds":5.867332220077515e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":8.65625,"distances_sum":2439.2996477532342}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8720703125,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.8720703125,"f1":0.9251805486180492,"seconds":5.867332220077515e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":8.65625,"distances_sum":2439.2996477532342}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9403991841491846,"seconds":6.2175095081329346e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":8.78125,"distances_sum":2530.5218047717212}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9593978937728944,"seconds":6.182119250297546e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":8.8984375,"distances_sum":2642.8647776558005}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.927734375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9593978937728944,"seconds":6.182119250297546e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":8.8984375,"distances_sum":2642.8647776558005}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.927734375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9593978937728944,"seconds":6.182119250297546e-6,"exhaustive_search_seconds":1.7043203115463257e-6,"evaluations":8.8984375,"distances_sum":2642.8647776558005}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5732421875, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.5732421875,"f1":0.716074550449551,"seconds":4.610046744346619e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":6.7421875,"distances_sum":1346.5097532662971}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6396484375, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6396484375,"f1":0.7697708541458549,"seconds":4.764646291732788e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":7.0703125,"distances_sum":1541.891448555447}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5390625, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.5390625,"f1":0.6878149628149635,"seconds":4.3995678424835205e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":6.5,"distances_sum":1223.08681892618}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7421875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7421875,"f1":0.8425891816516825,"seconds":5.41098415851593e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.0390625,"distances_sum":1847.653514907525}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7421875,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7421875,"f1":0.8425891816516825,"seconds":5.41098415851593e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.0390625,"distances_sum":1847.653514907525}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9601591117216121,"seconds":6.3087791204452515e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.7734375,"distances_sum":2502.7509124720555}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9510302197802206,"seconds":6.07222318649292e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.7578125,"distances_sum":2442.7653747166614}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9530563186813195,"seconds":5.995854735374451e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.8046875,"distances_sum":2444.1896447886534}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8662109375, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.8662109375,"f1":0.9218895687645693,"seconds":5.943700671195984e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.515625,"distances_sum":2227.8290521711}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8154296875, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.8154296875,"f1":0.8903887778887787,"seconds":5.48921525478363e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.1796875,"distances_sum":2067.9275333769106}, best_list's length: 13, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9362580128205135,"seconds":6.338581442832947e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.65625,"distances_sum":2341.5964273575264}, best_list's length: 14, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8125,"f1":0.8910027472527482,"seconds":5.545094609260559e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.15625,"distances_sum":2057.05521488847}, best_list's length: 15, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9287109375,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9601591117216121,"seconds":6.3087791204452515e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.7734375,"distances_sum":2502.7509124720555}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9658203125, conf: {"ssize":1,"bsize":13}, perf: {"precision":1.0,"recall":0.9658203125,"f1":0.9813988095238096,"seconds":6.4801424741744995e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.9609375,"distances_sum":2625.9628384308526}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9639365842490843,"seconds":0.00011016800999641418,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.8671875,"distances_sum":2508.3796461509605}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":9,"bsize":9}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.961704441391942,"seconds":5.95487654209137e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.828125,"distances_sum":2526.4263375288515}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.96875, conf: {"ssize":10,"bsize":12}, perf: {"precision":1.0,"recall":0.96875,"f1":0.9829613095238096,"seconds":6.191432476043701e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.9453125,"distances_sum":2629.4638467067425}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.973214285714286,"seconds":6.075948476791382e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.921875,"distances_sum":2581.619624546824}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.96875,"state":{"ssize":10,"bsize":12},"perf":{"precision":1.0,"recall":0.96875,"f1":0.9829613095238096,"seconds":6.191432476043701e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.9453125,"distances_sum":2629.4638467067425}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.96875,"state":{"ssize":10,"bsize":12},"perf":{"precision":1.0,"recall":0.96875,"f1":0.9829613095238096,"seconds":6.191432476043701e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.9453125,"distances_sum":2629.4638467067425}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.412109375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.412109375,"f1":null,"seconds":3.6563724279403687e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":5.8359375,"distances_sum":864.3102189130262}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.412109375,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.412109375,"f1":null,"seconds":3.6563724279403687e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":5.8359375,"distances_sum":864.3102189130262}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5517578125, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5517578125,"f1":null,"seconds":4.252418875694275e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":6.453125,"distances_sum":1275.0087312490907}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8056640625, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8056640625,"f1":0.8855711996337003,"seconds":5.494803190231323e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.3515625,"distances_sum":1955.6647006899643}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6708984375, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6708984375,"f1":0.7923612845487853,"seconds":4.755333065986633e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.453125,"distances_sum":1534.883877599452}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.41796875, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.41796875,"f1":null,"seconds":3.596767783164978e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":5.765625,"distances_sum":905.6201906309751}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8056640625,"state":{"ssize":5,"bsize":6},"perf":{"precision":1.0,"recall":0.8056640625,"f1":0.8855711996337003,"seconds":5.494803190231323e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.3515625,"distances_sum":1955.6647006899643}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8056640625,"state":{"ssize":5,"bsize":6},"perf":{"precision":1.0,"recall":0.8056640625,"f1":0.8855711996337003,"seconds":5.494803190231323e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.3515625,"distances_sum":1955.6647006899643}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8056640625,"state":{"ssize":5,"bsize":6},"perf":{"precision":1.0,"recall":0.8056640625,"f1":0.8855711996337003,"seconds":5.494803190231323e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.3515625,"distances_sum":1955.6647006899643}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.203125, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.203125,"f1":null,"seconds":3.170222043991089e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":6.0234375,"distances_sum":442.2737214229091}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.59375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.59375,"f1":0.7272944069819075,"seconds":5.334615707397461e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":7.1015625,"distances_sum":1330.5591954589333}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.59375,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.59375,"f1":0.7272944069819075,"seconds":5.334615707397461e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":7.1015625,"distances_sum":1330.5591954589333}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7158203125, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.7158203125,"f1":0.8240483474858484,"seconds":5.163252353668213e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":7.90625,"distances_sum":1663.3951979801122}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7734375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7734375,"f1":0.8648809523809534,"seconds":5.25452196598053e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.296875,"distances_sum":1825.3994501869204}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7822265625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7822265625,"f1":0.8696922868797877,"seconds":5.349516868591309e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.2421875,"distances_sum":1868.1681313728411}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7822265625,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7822265625,"f1":0.8696922868797877,"seconds":5.349516868591309e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.2421875,"distances_sum":1868.1681313728411}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.857421875, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.857421875,"f1":0.917479915917417,"seconds":6.025657057762146e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.515625,"distances_sum":2078.6712077022703}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7900390625, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7900390625,"f1":0.8749063436563446,"seconds":5.5711716413497925e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.25,"distances_sum":1869.0447641063681}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.857421875,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.857421875,"f1":0.917479915917417,"seconds":6.025657057762146e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.515625,"distances_sum":2078.6712077022703}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.857421875,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.857421875,"f1":0.917479915917417,"seconds":6.025657057762146e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.515625,"distances_sum":2078.6712077022703}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.646484375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.646484375,"f1":0.7705879190254199,"seconds":5.736947059631348e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":7.890625,"distances_sum":1477.6258418904467}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.646484375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.646484375,"f1":0.7705879190254199,"seconds":5.736947059631348e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":7.890625,"distances_sum":1477.6258418904467}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.759765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.759765625,"f1":0.8510952589077597,"seconds":5.405396223068237e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.421875,"distances_sum":1715.373988229037}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7880859375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7880859375,"f1":0.873195034132535,"seconds":5.461275577545166e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.5859375,"distances_sum":1816.1436321793815}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7880859375,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7880859375,"f1":0.873195034132535,"seconds":5.461275577545166e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.5859375,"distances_sum":1816.1436321793815}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9644574175824181,"seconds":6.128102540969849e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.859375,"distances_sum":2363.408672391565}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.873046875, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.873046875,"f1":0.9234692390942398,"seconds":6.278976798057556e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.71875,"distances_sum":2123.024063216135}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8818359375,"f1":0.932360347985349,"seconds":6.234273314476013e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.8125,"distances_sum":2124.662933496283}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9365234375,"state":{"ssize":8,"bsize":8},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9644574175824181,"seconds":6.128102540969849e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.859375,"distances_sum":2363.408672391565}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9365234375,"state":{"ssize":8,"bsize":8},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9644574175824181,"seconds":6.128102540969849e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.859375,"distances_sum":2363.408672391565}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7705078125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7705078125,"f1":0.8625582750582759,"seconds":5.574896931648254e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.2109375,"distances_sum":1882.2127672076558}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5859375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5859375,"f1":0.7202283827283833,"seconds":4.809349775314331e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":7.046875,"distances_sum":1317.9555404333894}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7685546875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7685546875,"f1":0.8607751623376632,"seconds":5.608424544334412e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.2890625,"distances_sum":1829.8704245225822}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7705078125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7705078125,"f1":0.8625582750582759,"seconds":5.574896931648254e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.2109375,"distances_sum":1882.2127672076558}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9560897435897443,"seconds":6.295740604400635e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.8515625,"distances_sum":2377.075587053921}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.875,"f1":0.9264022435897439,"seconds":6.0014426708221436e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.8046875,"distances_sum":2179.90812774067}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8349609375, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8349609375,"f1":0.9026275807525816,"seconds":5.820766091346741e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.5703125,"distances_sum":2021.4391178254195}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9228515625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9228515625,"f1":0.9560897435897443,"seconds":6.295740604400635e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.8515625,"distances_sum":2377.075587053921}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9641285797535801,"seconds":7.107853889465332e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.8984375,"distances_sum":2411.1941219985147}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9692364926739931,"seconds":6.377696990966797e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.9296875,"distances_sum":2451.8175154135506}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9443359375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9692364926739931,"seconds":6.377696990966797e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.9296875,"distances_sum":2451.8175154135506}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9443359375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9692364926739931,"seconds":6.377696990966797e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.9296875,"distances_sum":2451.8175154135506}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4052734375, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.4052734375,"f1":null,"seconds":4.898756742477417e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":6.9140625,"distances_sum":850.5665038399143}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7822265625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7822265625,"f1":0.8720727189477199,"seconds":5.54695725440979e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.4921875,"distances_sum":1852.4618936410666}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7822265625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7822265625,"f1":0.8720727189477199,"seconds":5.54695725440979e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.4921875,"distances_sum":1852.4618936410666}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9719150641025645,"seconds":6.586313247680664e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.9296875,"distances_sum":2489.1555772015977}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8525390625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8525390625,"f1":0.9140644078144086,"seconds":6.547197699546814e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.6171875,"distances_sum":2097.372287470201}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9635073260073264,"seconds":6.357207894325256e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.875,"distances_sum":2435.9006768766126}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9501953125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9719150641025645,"seconds":6.586313247680664e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.9296875,"distances_sum":2489.1555772015977}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9638671875, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9638671875,"f1":0.9800423534798538,"seconds":6.806105375289917e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.96875,"distances_sum":2548.824128039217}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9734203296703301,"seconds":7.22147524356842e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.9375,"distances_sum":2508.338474068863}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9638671875,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9638671875,"f1":0.9800423534798538,"seconds":6.806105375289917e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.96875,"distances_sum":2548.824128039217}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9638671875,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9638671875,"f1":0.9800423534798538,"seconds":6.806105375289917e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.96875,"distances_sum":2548.824128039217}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.576171875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.576171875,"f1":0.7168433996559004,"seconds":4.4833868741989136e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":7.09375,"distances_sum":1223.1089405702157}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.201171875, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.201171875,"f1":null,"seconds":3.3285468816757202e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":5.59375,"distances_sum":475.5847190528011}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.576171875,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.576171875,"f1":0.7168433996559004,"seconds":4.4833868741989136e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":7.09375,"distances_sum":1223.1089405702157}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.59375, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.59375,"f1":0.7286047286047292,"seconds":4.472211003303528e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":6.9921875,"distances_sum":1293.1206834795548}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.59375,"state":{"ssize":5,"bsize":3},"perf":{"precision":1.0,"recall":0.59375,"f1":0.7286047286047292,"seconds":4.472211003303528e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":6.9921875,"distances_sum":1293.1206834795548}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.701171875, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.701171875,"f1":0.8133175851925861,"seconds":5.796551704406738e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":7.703125,"distances_sum":1555.8772499333327}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8876953125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8876953125,"f1":0.9349676365301373,"seconds":5.984678864479065e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.7265625,"distances_sum":2171.911127844471}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8486328125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8486328125,"f1":0.9123974983349992,"seconds":5.770474672317505e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.5390625,"distances_sum":2006.3223791952958}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8876953125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8876953125,"f1":0.9349676365301373,"seconds":5.984678864479065e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.7265625,"distances_sum":2171.911127844471}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8876953125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8876953125,"f1":0.9349676365301373,"seconds":5.984678864479065e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.7265625,"distances_sum":2171.911127844471}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.572265625, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.572265625,"f1":0.7108474858474865,"seconds":4.49642539024353e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":7.5625,"distances_sum":1311.9153161027766}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.73046875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.73046875,"f1":0.8325367340992349,"seconds":5.77978789806366e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.3515625,"distances_sum":1673.1364119667326}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.73046875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.73046875,"f1":0.8325367340992349,"seconds":5.77978789806366e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.3515625,"distances_sum":1673.1364119667326}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87890625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.87890625,"f1":0.9267919580419587,"seconds":5.9623271226882935e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.75,"distances_sum":2183.2756676946487}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.87890625,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.87890625,"f1":0.9267919580419587,"seconds":5.9623271226882935e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.75,"distances_sum":2183.2756676946487}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9526072885447889,"seconds":5.578622221946716e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.7734375,"distances_sum":2349.052656104229}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.949336080586081,"seconds":5.89713454246521e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.8203125,"distances_sum":2301.515577422898}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9675251831501834,"seconds":6.064772605895996e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.890625,"distances_sum":2427.590762716167}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94140625,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9675251831501834,"seconds":6.064772605895996e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.890625,"distances_sum":2427.590762716167}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94140625,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9675251831501834,"seconds":6.064772605895996e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.890625,"distances_sum":2427.590762716167}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.251953125, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.251953125,"f1":null,"seconds":3.648921847343445e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":6.71875,"distances_sum":642.3844682564888}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.673828125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.673828125,"f1":0.7963666541791551,"seconds":4.908069968223572e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":7.9296875,"distances_sum":1646.4742774510605}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.673828125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.673828125,"f1":0.7963666541791551,"seconds":4.908069968223572e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":7.9296875,"distances_sum":1646.4742774510605}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.744140625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.744140625,"f1":0.8456876456876465,"seconds":5.3979456424713135e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.375,"distances_sum":1948.2227172825314}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6845703125, conf: {"ssize":7,"bsize":4}, perf: {"precision":1.0,"recall":0.6845703125,"f1":0.8048461954711962,"seconds":4.94346022605896e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.0078125,"distances_sum":1660.5150974935175}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.744140625,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.744140625,"f1":0.8456876456876465,"seconds":5.3979456424713135e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.375,"distances_sum":1948.2227172825314}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.961961996336997,"seconds":6.116926670074463e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.8828125,"distances_sum":2758.503281667572}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9516769688644693,"seconds":5.885958671569824e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.8671875,"distances_sum":2689.8042147978936}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7529296875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7529296875,"f1":0.850718552281053,"seconds":5.241483449935913e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.390625,"distances_sum":1987.69591093144}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.931640625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.961961996336997,"seconds":6.116926670074463e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.8828125,"distances_sum":2758.503281667572}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.931640625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.961961996336997,"seconds":6.116926670074463e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.8828125,"distances_sum":2758.503281667572}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7607421875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7607421875,"f1":0.8553639069264076,"seconds":5.3513795137405396e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.4375,"distances_sum":1969.069271479328}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5263671875, conf: {"ssize":2,"bsize":3}, perf: {"precision":null,"recall":0.5263671875,"f1":null,"seconds":4.427507519721985e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":6.8984375,"distances_sum":1268.7493858091198}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7685546875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7685546875,"f1":0.8608750624375633,"seconds":5.5246055126190186e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.4453125,"distances_sum":1994.9287383155545}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7685546875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7685546875,"f1":0.8608750624375633,"seconds":5.5246055126190186e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.4453125,"distances_sum":1994.9287383155545}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.88671875,"f1":0.9352449633699642,"seconds":5.666166543960571e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.6796875,"distances_sum":2533.8328136669807}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.837890625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.837890625,"f1":0.905591804029305,"seconds":5.690380930900574e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.6875,"distances_sum":2246.264085498428}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8427734375, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8427734375,"f1":0.9061932858807865,"seconds":5.597248673439026e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.6328125,"distances_sum":2300.8244778705352}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9438015109890111,"seconds":5.608424544334412e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.6796875,"distances_sum":2617.5796697745254}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.90234375,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.90234375,"f1":0.9438015109890111,"seconds":5.608424544334412e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.6796875,"distances_sum":2617.5796697745254}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9632841117216124,"seconds":5.9176236391067505e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.796875,"distances_sum":2735.191760461986}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":6,"bsize":11}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.9744047619047622,"seconds":6.234273314476013e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.890625,"distances_sum":2798.766362262775}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9577609890109896,"seconds":5.854293704032898e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.859375,"distances_sum":2669.5488561288525}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.9748912545787549,"seconds":6.187707185745239e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.8828125,"distances_sum":2812.1744838478303}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9699061355311358,"seconds":5.967915058135986e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.875,"distances_sum":2769.178156984934}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9512565559440566,"seconds":5.763024091720581e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.765625,"distances_sum":2642.842789996336}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.955078125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9748912545787549,"seconds":6.187707185745239e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.8828125,"distances_sum":2812.1744838478303}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.955078125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9748912545787549,"seconds":6.187707185745239e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.8828125,"distances_sum":2812.1744838478303}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6708984375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6708984375,"f1":0.7943041333666342,"seconds":4.893168807029724e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.0859375,"distances_sum":1596.6565103340358}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6708984375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6708984375,"f1":0.7943041333666342,"seconds":4.893168807029724e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.0859375,"distances_sum":1596.6565103340358}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.69140625, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.69140625,"f1":0.8059081543456552,"seconds":4.67151403427124e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.3359375,"distances_sum":1676.8970765855152}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.69140625,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.69140625,"f1":0.8059081543456552,"seconds":4.67151403427124e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.3359375,"distances_sum":1676.8970765855152}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7119140625, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.7119140625,"f1":0.8205386627261637,"seconds":4.673376679420471e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.421875,"distances_sum":1765.9279900230567}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.875,"f1":0.9263939185814193,"seconds":5.790963768959045e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.4609375,"distances_sum":2436.7149878378946}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7607421875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7607421875,"f1":0.857420704295705,"seconds":5.204230546951294e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.078125,"distances_sum":1931.9573511200817}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.82421875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.82421875,"f1":0.8983173076923086,"seconds":5.554407835006714e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.09375,"distances_sum":2230.2969480747033}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.875,"state":{"ssize":8,"bsize":7},"perf":{"precision":1.0,"recall":0.875,"f1":0.9263939185814193,"seconds":5.790963768959045e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.4609375,"distances_sum":2436.7149878378946}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.875,"state":{"ssize":8,"bsize":7},"perf":{"precision":1.0,"recall":0.875,"f1":0.9263939185814193,"seconds":5.790963768959045e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.4609375,"distances_sum":2436.7149878378946}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.578125, conf: {"ssize":5,"bsize":3}, perf: {"precision":null,"recall":0.578125,"f1":null,"seconds":4.256144165992737e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":6.546875,"distances_sum":1252.7540914156502}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7314453125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7314453125,"f1":0.8368829087579096,"seconds":5.086883902549744e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":7.734375,"distances_sum":1756.47855480603}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1982421875, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.1982421875,"f1":null,"seconds":3.373250365257263e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":5.5078125,"distances_sum":406.65073051985155}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7314453125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7314453125,"f1":0.8368829087579096,"seconds":5.086883902549744e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":7.734375,"distances_sum":1756.47855480603}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9656650641025647,"seconds":6.083399057388306e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.828125,"distances_sum":2650.0032857895426}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.861328125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.861328125,"f1":0.9187645687645692,"seconds":5.811452865600586e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.390625,"distances_sum":2310.4706245442644}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.939453125,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9656650641025647,"seconds":6.083399057388306e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.828125,"distances_sum":2650.0032857895426}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9737351190476194,"seconds":6.172806024551392e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.921875,"distances_sum":2665.155881791717}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9720066391941393,"seconds":7.212162017822266e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.8828125,"distances_sum":2684.294878276006}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.958984375, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.9775297619047623,"seconds":6.195157766342163e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.90625,"distances_sum":2709.1434458344706}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.958984375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.9775297619047622,"seconds":6.143003702163696e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.9375,"distances_sum":2695.2906302315305}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.958984375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9775297619047623,"seconds":6.195157766342163e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.90625,"distances_sum":2709.1434458344706}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.958984375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9775297619047623,"seconds":6.195157766342163e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.90625,"distances_sum":2709.1434458344706}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.20703125, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.20703125,"f1":null,"seconds":3.460794687271118e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":5.3828125,"distances_sum":527.2076577309448}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7216796875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7216796875,"f1":0.8305127164502173,"seconds":5.54695725440979e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":7.8125,"distances_sum":1773.0591924446771}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7216796875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7216796875,"f1":0.8305127164502173,"seconds":5.54695725440979e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":7.8125,"distances_sum":1773.0591924446771}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9522092490842498,"seconds":5.971640348434448e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.828125,"distances_sum":2601.99199200232}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.916015625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.916015625,"f1":0.9522092490842498,"seconds":5.971640348434448e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.828125,"distances_sum":2601.99199200232}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.953153617216118,"seconds":5.794689059257507e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.8125,"distances_sum":2630.1618335106664}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9634729853479858,"seconds":6.0498714447021484e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.8671875,"distances_sum":2710.379848092978}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9345703125,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9634729853479858,"seconds":6.0498714447021484e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.8671875,"distances_sum":2710.379848092978}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9345703125,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9634729853479858,"seconds":6.0498714447021484e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.8671875,"distances_sum":2710.379848092978}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1640625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.1640625,"f1":null,"seconds":3.216788172721863e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":4.6875,"distances_sum":468.7176861002999}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1533203125, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.1533203125,"f1":null,"seconds":3.0882656574249268e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":4.40625,"distances_sum":403.3567649708728}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.1640625,"state":{"ssize":2,"bsize":1},"perf":{"precision":null,"recall":0.1640625,"f1":null,"seconds":3.216788172721863e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":4.6875,"distances_sum":468.7176861002999}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1669921875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.1669921875,"f1":null,"seconds":3.5818666219711304e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":4.6484375,"distances_sum":455.430724159906}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.65625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.65625,"f1":0.7788555194805201,"seconds":4.94346022605896e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":7.7109375,"distances_sum":1624.9448894418483}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.486328125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.486328125,"f1":0.640125152625153,"seconds":4.1853636503219604e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":6.5859375,"distances_sum":1199.5819879404917}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.65625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.65625,"f1":0.7788555194805201,"seconds":4.94346022605896e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":7.7109375,"distances_sum":1624.9448894418483}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7607421875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7607421875,"f1":0.8514905233655241,"seconds":5.230307579040527e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.3359375,"distances_sum":1915.1618834630933}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.833984375, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.833984375,"f1":0.9014230561105567,"seconds":6.113201379776001e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.59375,"distances_sum":2172.380842219493}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7470703125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7470703125,"f1":0.8403461122211129,"seconds":5.247071385383606e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.25,"distances_sum":1862.0339421941737}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.833984375,"state":{"ssize":3,"bsize":6},"perf":{"precision":1.0,"recall":0.833984375,"f1":0.9014230561105567,"seconds":6.113201379776001e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.59375,"distances_sum":2172.380842219493}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.833984375,"state":{"ssize":3,"bsize":6},"perf":{"precision":1.0,"recall":0.833984375,"f1":0.9014230561105567,"seconds":6.113201379776001e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.59375,"distances_sum":2172.380842219493}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.427734375, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.427734375,"f1":null,"seconds":3.883615136146545e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":6.5703125,"distances_sum":952.0316810896117}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.427734375,"state":{"ssize":5,"bsize":2},"perf":{"precision":null,"recall":0.427734375,"f1":null,"seconds":3.883615136146545e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":6.5703125,"distances_sum":952.0316810896117}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.767578125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.767578125,"f1":0.8598906302031312,"seconds":5.837529897689819e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.7421875,"distances_sum":1890.80124084923}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6044921875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.6044921875,"f1":0.7369989385614392,"seconds":4.295259714126587e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":7.453125,"distances_sum":1349.8791286556075}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.767578125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.767578125,"f1":0.8598906302031312,"seconds":5.837529897689819e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.7421875,"distances_sum":1890.80124084923}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9616128663003669,"seconds":6.102025508880615e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.90625,"distances_sum":2620.4937891414284}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.950028617216118,"seconds":5.921348929405212e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.8125,"distances_sum":2521.344105773497}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.931640625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.9616128663003669,"seconds":6.102025508880615e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.90625,"distances_sum":2620.4937891414284}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.931640625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.9616128663003669,"seconds":6.102025508880615e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.90625,"distances_sum":2620.4937891414284}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.529296875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.529296875,"f1":0.6766910173160178,"seconds":4.1425228118896484e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":6.5390625,"distances_sum":1233.1238511337026}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3349609375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3349609375,"f1":null,"seconds":3.2670795917510986e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":4.8828125,"distances_sum":781.4724838590103}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.17578125, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.17578125,"f1":null,"seconds":3.339722752571106e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":4.234375,"distances_sum":465.009241406854}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.529296875,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.529296875,"f1":0.6766910173160178,"seconds":4.1425228118896484e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":6.5390625,"distances_sum":1233.1238511337026}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8115234375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8115234375,"f1":0.885938020313021,"seconds":5.424022674560547e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.265625,"distances_sum":2118.889211585288}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7802734375, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.7802734375,"f1":0.8616303835053841,"seconds":5.250796675682068e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.2265625,"distances_sum":2019.4854705885878}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6533203125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6533203125,"f1":0.7754745254745261,"seconds":4.4871121644973755e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":7.359375,"distances_sum":1526.4420808839989}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8203125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8203125,"f1":0.8926380910755919,"seconds":5.459412932395935e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.3828125,"distances_sum":2134.3703270838723}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8046875, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8046875,"f1":0.8814419955044965,"seconds":5.243346095085144e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.3203125,"distances_sum":2080.9979391958177}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8203125,"state":{"ssize":5,"bsize":6},"perf":{"precision":1.0,"recall":0.8203125,"f1":0.8926380910755919,"seconds":5.459412932395935e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.3828125,"distances_sum":2134.3703270838723}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.8974609375,"f1":0.941895604395605,"seconds":5.360692739486694e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.6015625,"distances_sum":2517.2584528322823}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.876953125, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.876953125,"f1":0.9291781135531141,"seconds":5.729496479034424e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.546875,"distances_sum":2446.5015238902406}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8798828125, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.8798828125,"f1":0.9307036713286717,"seconds":5.384907126426697e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.5546875,"distances_sum":2422.712214039687}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9504349816849823,"seconds":5.472451448440552e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.6953125,"distances_sum":2574.0621664875616}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.945987866300367,"seconds":5.364418029785156e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.6328125,"distances_sum":2533.977320038888}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9499516108891115,"seconds":5.3513795137405396e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.734375,"distances_sum":2534.0256056736976}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9140625,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.9140625,"f1":0.9499516108891115,"seconds":5.3513795137405396e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.734375,"distances_sum":2534.0256056736976}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9140625,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.9140625,"f1":0.9499516108891115,"seconds":5.3513795137405396e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.734375,"distances_sum":2534.0256056736976}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.578125, conf: {"ssize":4,"bsize":3}, perf: {"precision":null,"recall":0.578125,"f1":null,"seconds":3.9245933294296265e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":6.953125,"distances_sum":1257.94026268302}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7392578125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7392578125,"f1":0.8386576964701973,"seconds":4.805624485015869e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":7.9921875,"distances_sum":1800.9771062252903}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.734375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.734375,"f1":0.8378413253413263,"seconds":4.841014742851257e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.0234375,"distances_sum":1763.1448563325544}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7392578125,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7392578125,"f1":0.8386576964701973,"seconds":4.805624485015869e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":7.9921875,"distances_sum":1800.9771062252903}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9596039377289384,"seconds":5.366280674934387e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.8359375,"distances_sum":2572.7780060401105}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8232421875, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8232421875,"f1":0.8954649517149526,"seconds":5.217269062995911e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.21875,"distances_sum":2136.170552954315}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.740234375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.740234375,"f1":0.8421339077589086,"seconds":4.813075065612793e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.015625,"distances_sum":1821.7208674236942}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.9393028846153854,"seconds":5.736947059631348e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.6640625,"distances_sum":2427.628723103378}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.9393315018315023,"seconds":5.45009970664978e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.6875,"distances_sum":2441.830616482121}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9418071511821515,"seconds":5.349516868591309e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.6796875,"distances_sum":2465.237701771935}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.927734375,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9596039377289384,"seconds":5.366280674934387e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.8359375,"distances_sum":2572.7780060401105}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9661687271062277,"seconds":5.5711716413497925e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.8828125,"distances_sum":2621.486532377424}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9621165293040297,"seconds":5.589798092842102e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.8203125,"distances_sum":2583.9204527820307}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.962890625, conf: {"ssize":2,"bsize":12}, perf: {"precision":1.0,"recall":0.962890625,"f1":0.9797447344322348,"seconds":5.7425349950790405e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.921875,"distances_sum":2713.8382717368986}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9654246794871798,"seconds":6.074085831642151e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.84375,"distances_sum":2599.3689251809064}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":6,"bsize":11}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9737351190476196,"seconds":6.070360541343689e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.9296875,"distances_sum":2671.3865916333857}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.962890625,"state":{"ssize":2,"bsize":12},"perf":{"precision":1.0,"recall":0.962890625,"f1":0.9797447344322348,"seconds":5.7425349950790405e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.921875,"distances_sum":2713.8382717368986}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.962890625,"state":{"ssize":2,"bsize":12},"perf":{"precision":1.0,"recall":0.962890625,"f1":0.9797447344322348,"seconds":5.7425349950790405e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.921875,"distances_sum":2713.8382717368986}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1572265625, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.1572265625,"f1":null,"seconds":2.6971101760864258e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":4.0546875,"distances_sum":418.57954509418613}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.1572265625,"state":{"ssize":4,"bsize":1},"perf":{"precision":null,"recall":0.1572265625,"f1":null,"seconds":2.6971101760864258e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":4.0546875,"distances_sum":418.57954509418613}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.322265625, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.322265625,"f1":null,"seconds":3.295019268989563e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":5.1640625,"distances_sum":865.2233101799932}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.322265625,"state":{"ssize":3,"bsize":2},"perf":{"precision":null,"recall":0.322265625,"f1":null,"seconds":3.295019268989563e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":5.1640625,"distances_sum":865.2233101799932}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7802734375, conf: {"ssize":3,"bsize":6}, perf: {"precision":0.9826264880952381,"recall":0.7802734375,"f1":0.8609008179320684,"seconds":5.204230546951294e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":7.9921875,"distances_sum":2144.66700832614}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.46484375, conf: {"ssize":6,"bsize":3}, perf: {"precision":null,"recall":0.46484375,"f1":null,"seconds":3.7848949432373047e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":6.2421875,"distances_sum":1173.464079584257}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7734375, conf: {"ssize":1,"bsize":6}, perf: {"precision":0.9836216517857144,"recall":0.7734375,"f1":0.8557549872003001,"seconds":5.278736352920532e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.015625,"distances_sum":2081.7429601443714}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5927734375, conf: {"ssize":5,"bsize":4}, perf: {"precision":0.9833333333333331,"recall":0.5927734375,"f1":0.724183108558109,"seconds":4.481524229049683e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":6.8125,"distances_sum":1473.6513298278085}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.69140625, conf: {"ssize":5,"bsize":5}, perf: {"precision":0.9896949404761904,"recall":0.69140625,"f1":0.8023884969197475,"seconds":4.8317015171051025e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":7.5234375,"distances_sum":1780.8648539223475}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7802734375,"state":{"ssize":3,"bsize":6},"perf":{"precision":0.9826264880952381,"recall":0.7802734375,"f1":0.8609008179320684,"seconds":5.204230546951294e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":7.9921875,"distances_sum":2144.66700832614}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.7802734375,"state":{"ssize":3,"bsize":6},"perf":{"precision":0.9826264880952381,"recall":0.7802734375,"f1":0.8609008179320684,"seconds":5.204230546951294e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":7.9921875,"distances_sum":2144.66700832614}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.64453125, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.64453125,"f1":0.7748361013986023,"seconds":4.628673195838928e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":7.59375,"distances_sum":1550.763795671883}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.171875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.171875,"f1":null,"seconds":3.080815076828003e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":4.4375,"distances_sum":478.0798240781806}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.64453125,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.64453125,"f1":0.7748361013986023,"seconds":4.628673195838928e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":7.59375,"distances_sum":1550.763795671883}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8818359375,"f1":0.9320627289377293,"seconds":5.584210157394409e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.609375,"distances_sum":2411.317542793631}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8974609375,"f1":0.9413576007326017,"seconds":5.541369318962097e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.546875,"distances_sum":2493.400561056686}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8974609375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8974609375,"f1":0.9413576007326017,"seconds":5.541369318962097e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.546875,"distances_sum":2493.400561056686}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9450377747252755,"seconds":5.424022674560547e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.640625,"distances_sum":2503.7472019771326}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9561240842490846,"seconds":5.509704351425171e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.7421875,"distances_sum":2563.8321481093935}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.921875,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.921875,"f1":0.9561240842490846,"seconds":5.509704351425171e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.7421875,"distances_sum":2563.8321481093935}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.921875,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.921875,"f1":0.9561240842490846,"seconds":5.509704351425171e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.7421875,"distances_sum":2563.8321481093935}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4150390625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4150390625,"f1":null,"seconds":3.814697265625e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":6.109375,"distances_sum":915.5689968368324}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.541015625, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.541015625,"f1":0.6857474123099127,"seconds":4.172325134277344e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":6.9765625,"distances_sum":1258.5097807796906}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2177734375, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2177734375,"f1":null,"seconds":3.341585397720337e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":5.3359375,"distances_sum":546.4204973035761}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.541015625,"state":{"ssize":4,"bsize":3},"perf":{"precision":1.0,"recall":0.541015625,"f1":0.6857474123099127,"seconds":4.172325134277344e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":6.9765625,"distances_sum":1258.5097807796906}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5458984375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5458984375,"f1":0.6932725260850268,"seconds":4.071742296218872e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":7.1328125,"distances_sum":1249.936090396619}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.841796875, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.841796875,"f1":0.9074779387279392,"seconds":5.578622221946716e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.4765625,"distances_sum":2197.6773416843503}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7939453125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7939453125,"f1":0.8784205377955386,"seconds":5.280598998069763e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.40625,"distances_sum":1991.4779359697059}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8427734375, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8427734375,"f1":0.9069576257076264,"seconds":5.6549906730651855e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.453125,"distances_sum":2198.991485847902}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6845703125, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.6845703125,"f1":0.8009880744255753,"seconds":4.863366484642029e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.0078125,"distances_sum":1695.1680452946046}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8427734375,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.8427734375,"f1":0.9069576257076264,"seconds":5.6549906730651855e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.453125,"distances_sum":2198.991485847902}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9428800366300373,"seconds":5.7425349950790405e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.671875,"distances_sum":2516.1363009169845}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.9398580586080592,"seconds":5.768612027168274e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.7265625,"distances_sum":2452.4570239924246}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":11,"bsize":7}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9434237637362642,"seconds":5.6140124797821045e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.5859375,"distances_sum":2479.587315348996}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.943612637362638,"seconds":5.563721060752869e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.5859375,"distances_sum":2469.900342443103}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9553857600732603,"seconds":5.718320608139038e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.7734375,"distances_sum":2599.3621997749024}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.861328125, conf: {"ssize":10,"bsize":6}, perf: {"precision":1.0,"recall":0.861328125,"f1":0.918155282217783,"seconds":5.386769771575928e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.4140625,"distances_sum":2362.7243944226525}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9208984375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9208984375,"f1":0.9553857600732603,"seconds":5.718320608139038e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.7734375,"distances_sum":2599.3621997749024}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9208984375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9208984375,"f1":0.9553857600732603,"seconds":5.718320608139038e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.7734375,"distances_sum":2599.3621997749024}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7353515625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7353515625,"f1":0.8381720709845719,"seconds":5.058944225311279e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.0703125,"distances_sum":1745.0598582191474}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.591796875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.591796875,"f1":0.7264931249306258,"seconds":4.233792424201965e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":7.078125,"distances_sum":1322.6476662972225}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7353515625,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7353515625,"f1":0.8381720709845719,"seconds":5.058944225311279e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.0703125,"distances_sum":1745.0598582191474}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9337886072261076,"seconds":5.68293035030365e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.53125,"distances_sum":2397.01110489913}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7548828125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7548828125,"f1":0.8530792124542133,"seconds":5.140900611877441e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":7.9375,"distances_sum":1816.6227601235546}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9422967657342661,"seconds":5.843117833137512e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.6171875,"distances_sum":2399.8347450471497}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7421875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7421875,"f1":0.8437593656343665,"seconds":5.068257451057434e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":7.9296875,"distances_sum":1773.4749742240729}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.744140625, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.744140625,"f1":0.842537150349651,"seconds":5.155801773071289e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":7.9140625,"distances_sum":1768.3577878372225}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.90234375,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.90234375,"f1":0.9422967657342661,"seconds":5.843117833137512e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.6171875,"distances_sum":2399.8347450471497}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9689560439560445,"seconds":6.0480087995529175e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.859375,"distances_sum":2605.359967092201}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9702781593406595,"seconds":5.833804607391357e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.90625,"distances_sum":2579.2276755034477}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9588427197802202,"seconds":5.675479769706726e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.7578125,"distances_sum":2564.167269489937}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":8,"bsize":10}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9644001831501834,"seconds":5.887821316719055e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.8359375,"distances_sum":2566.3594869339317}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9462890625,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9702781593406595,"seconds":5.833804607391357e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.90625,"distances_sum":2579.2276755034477}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9462890625,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9702781593406595,"seconds":5.833804607391357e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.90625,"distances_sum":2579.2276755034477}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.533203125, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.533203125,"f1":null,"seconds":4.10713255405426e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":6.5625,"distances_sum":1139.0881062888643}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1943359375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.1943359375,"f1":null,"seconds":2.982094883918762e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":5.1015625,"distances_sum":438.6178102276319}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.455078125, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.455078125,"f1":null,"seconds":3.682449460029602e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":6.1328125,"distances_sum":992.073037146257}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.533203125,"state":{"ssize":1,"bsize":3},"perf":{"precision":null,"recall":0.533203125,"f1":null,"seconds":4.10713255405426e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":6.5625,"distances_sum":1139.0881062888643}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7509765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7509765625,"f1":0.8505099067599077,"seconds":4.984438419342041e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":7.8984375,"distances_sum":1744.3521698216975}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5771484375, conf: {"ssize":8,"bsize":3}, perf: {"precision":1.0,"recall":0.5771484375,"f1":0.7205102189477195,"seconds":3.973022103309631e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":6.75,"distances_sum":1240.64726428045}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.654296875, conf: {"ssize":9,"bsize":4}, perf: {"precision":null,"recall":0.654296875,"f1":null,"seconds":4.198402166366577e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":7.03125,"distances_sum":1525.9575202673454}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5703125, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.5703125,"f1":0.7136044511044517,"seconds":4.194676876068115e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":6.8203125,"distances_sum":1255.533224620048}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6796875, conf: {"ssize":7,"bsize":4}, perf: {"precision":1.0,"recall":0.6796875,"f1":0.7985446844821853,"seconds":4.49642539024353e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":7.2734375,"distances_sum":1568.332173146898}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6640625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6640625,"f1":0.7856960747585756,"seconds":4.595145583152771e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":7.21875,"distances_sum":1495.3717353331826}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7509765625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7509765625,"f1":0.8505099067599077,"seconds":4.984438419342041e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":7.8984375,"distances_sum":1744.3521698216975}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.949914148351649,"seconds":5.558133125305176e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.734375,"distances_sum":2448.871685357359}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.968063186813187,"seconds":5.77978789806366e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.8515625,"distances_sum":2607.811288690192}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.845703125, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.845703125,"f1":0.9098365176490186,"seconds":5.5655837059021e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.28125,"distances_sum":2136.5507647709514}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9426396520146527,"seconds":5.982816219329834e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.5625,"distances_sum":2415.409101776583}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.9380468489843495,"seconds":5.582347512245178e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.546875,"distances_sum":2384.105454878334}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7626953125, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7626953125,"f1":0.8589316933066942,"seconds":5.034729838371277e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":7.9296875,"distances_sum":1831.2778313201725}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84765625, conf: {"ssize":11,"bsize":6}, perf: {"precision":1.0,"recall":0.84765625,"f1":0.913158195970697,"seconds":5.343928933143616e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.296875,"distances_sum":2116.8472266428194}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9423828125,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.968063186813187,"seconds":5.77978789806366e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.8515625,"distances_sum":2607.811288690192}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9423828125,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.968063186813187,"seconds":5.77978789806366e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.8515625,"distances_sum":2607.811288690192}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2490234375, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2490234375,"f1":null,"seconds":3.6116689443588257e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":6.1015625,"distances_sum":539.8499903873762}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.552734375, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.552734375,"f1":0.6969544344544351,"seconds":4.298985004425049e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":6.46875,"distances_sum":1193.1633493939107}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.236328125, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.236328125,"f1":null,"seconds":3.417953848838806e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":5.984375,"distances_sum":492.1167545096965}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4384765625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4384765625,"f1":null,"seconds":3.85381281375885e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":6.3359375,"distances_sum":949.1235230421275}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.552734375,"state":{"ssize":4,"bsize":3},"perf":{"precision":1.0,"recall":0.552734375,"f1":0.6969544344544351,"seconds":4.298985004425049e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":6.46875,"distances_sum":1193.1633493939107}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7548828125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7548828125,"f1":0.8519803113553122,"seconds":5.3551048040390015e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.125,"distances_sum":1793.4833692018376}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.833984375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.833984375,"f1":0.902158258408259,"seconds":5.228444933891296e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.4296875,"distances_sum":2115.841218374698}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5634765625, conf: {"ssize":8,"bsize":3}, perf: {"precision":1.0,"recall":0.5634765625,"f1":0.7079028610278615,"seconds":4.3585896492004395e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":6.84375,"distances_sum":1238.6318780753732}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.765625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.765625,"f1":0.8601190476190487,"seconds":5.621463060379028e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.2421875,"distances_sum":1832.6536080331434}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6591796875, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6591796875,"f1":0.784836344211345,"seconds":6.106682121753693e-5,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":7.328125,"distances_sum":1524.9834645313288}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5712890625, conf: {"ssize":9,"bsize":3}, perf: {"precision":null,"recall":0.5712890625,"f1":null,"seconds":3.9245933294296265e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":6.7578125,"distances_sum":1241.0430978142567}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.568359375, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.568359375,"f1":0.7076921342546351,"seconds":4.263594746589661e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":6.7265625,"distances_sum":1266.443633725548}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.833984375,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.833984375,"f1":0.902158258408259,"seconds":5.228444933891296e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.4296875,"distances_sum":2115.841218374698}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9549336080586087,"seconds":5.763024091720581e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.7578125,"distances_sum":2528.6351840144207}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9512934981684986,"seconds":6.12996518611908e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.7578125,"distances_sum":2475.6859550409713}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9564217032967035,"seconds":5.688518285751343e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.7734375,"distances_sum":2527.160307826215}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9560871420246426,"seconds":5.925074219703674e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.765625,"distances_sum":2532.630696098928}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.940230082417583,"seconds":5.714595317840576e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.5625,"distances_sum":2382.28779782861}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8447265625, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8447265625,"f1":0.9090976731601738,"seconds":5.602836608886719e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.4140625,"distances_sum":2174.499306004435}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9228515625,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9228515625,"f1":0.9564217032967035,"seconds":5.688518285751343e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.7734375,"distances_sum":2527.160307826215}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9228515625,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9228515625,"f1":0.9564217032967035,"seconds":5.688518285751343e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.7734375,"distances_sum":2527.160307826215}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7587890625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7587890625,"f1":0.8539744977244985,"seconds":5.405396223068237e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.3046875,"distances_sum":1830.06010972394}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4228515625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4228515625,"f1":null,"seconds":3.7848949432373047e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":6.3203125,"distances_sum":857.1111719183293}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7587890625,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7587890625,"f1":0.8539744977244985,"seconds":5.405396223068237e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.3046875,"distances_sum":1830.06010972394}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8388671875, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8388671875,"f1":0.904224421411922,"seconds":5.405396223068237e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.375,"distances_sum":2146.1392868877847}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8515625, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8515625,"f1":0.9128865925740932,"seconds":5.5655837059021e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.5,"distances_sum":2177.8270927302715}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9642170329670334,"seconds":5.925074219703674e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.828125,"distances_sum":2568.2775577634357}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.935546875,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.9642170329670334,"seconds":5.925074219703674e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.828125,"distances_sum":2568.2775577634357}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.9763965201465206,"seconds":6.299465894699097e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.9375,"distances_sum":2625.512753934964}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9640109890109894,"seconds":5.8785080909729e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8515625,"distances_sum":2540.659463784027}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.95703125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9763965201465206,"seconds":6.299465894699097e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.9375,"distances_sum":2625.512753934964}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.95703125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9763965201465206,"seconds":6.299465894699097e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.9375,"distances_sum":2625.512753934964}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6767578125, conf: {"ssize":1,"bsize":4}, perf: {"precision":null,"recall":0.6767578125,"f1":null,"seconds":4.92483377456665e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":7.3125,"distances_sum":1651.4738359147136}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4501953125, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.4501953125,"f1":null,"seconds":3.688037395477295e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":6.140625,"distances_sum":1042.3436687858275}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.220703125, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.220703125,"f1":null,"seconds":3.3266842365264893e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":5.765625,"distances_sum":525.1069948495957}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.416015625, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.416015625,"f1":null,"seconds":3.67872416973114e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":5.734375,"distances_sum":918.3471260772444}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6767578125,"state":{"ssize":1,"bsize":4},"perf":{"precision":null,"recall":0.6767578125,"f1":null,"seconds":4.92483377456665e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":7.3125,"distances_sum":1651.4738359147136}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7236328125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7236328125,"f1":0.8273558039183047,"seconds":4.785135388374329e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":7.671875,"distances_sum":1760.4234065627736}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.82421875, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.82421875,"f1":0.8951236263736271,"seconds":5.46872615814209e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.1328125,"distances_sum":2128.6371205378277}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.82421875,"state":{"ssize":2,"bsize":6},"perf":{"precision":1.0,"recall":0.82421875,"f1":0.8951236263736271,"seconds":5.46872615814209e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.1328125,"distances_sum":2128.6371205378277}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9434237637362646,"seconds":5.384907126426697e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.765625,"distances_sum":2497.0678391121787}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8818359375,"f1":0.9294216200466208,"seconds":5.381181836128235e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.484375,"distances_sum":2468.044222951911}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9435382326007333,"seconds":5.165114998817444e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.59375,"distances_sum":2467.5087946990297}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.90234375,"state":{"ssize":6,"bsize":8},"perf":{"precision":1.0,"recall":0.90234375,"f1":0.9434237637362646,"seconds":5.384907126426697e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.765625,"distances_sum":2497.0678391121787}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.90234375,"state":{"ssize":6,"bsize":8},"perf":{"precision":1.0,"recall":0.90234375,"f1":0.9434237637362646,"seconds":5.384907126426697e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.765625,"distances_sum":2497.0678391121787}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.748046875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.748046875,"f1":0.8478167665667674,"seconds":5.0514936447143555e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.34375,"distances_sum":1789.2840540640896}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7421875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7421875,"f1":0.8440595862470872,"seconds":5.016103386878967e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.2578125,"distances_sum":1781.6760825371466}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.748046875,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.748046875,"f1":0.8478167665667674,"seconds":5.0514936447143555e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.34375,"distances_sum":1789.2840540640896}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8564453125, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8564453125,"f1":0.9162831959706966,"seconds":5.695968866348267e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.5390625,"distances_sum":2220.7038126828556}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8623046875, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8623046875,"f1":0.9196428571428579,"seconds":5.548819899559021e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.4765625,"distances_sum":2254.5405381943997}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9438358516483522,"seconds":5.751848220825195e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.6015625,"distances_sum":2445.529390358942}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7783203125, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7783203125,"f1":0.8682697510822518,"seconds":5.232170224189758e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.4140625,"distances_sum":1912.6862001677114}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9426427738927744,"seconds":5.688518285751343e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.53125,"distances_sum":2424.4969041692775}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.904296875,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.9438358516483522,"seconds":5.751848220825195e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.6015625,"distances_sum":2445.529390358942}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9685840201465206,"seconds":5.850568413734436e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.890625,"distances_sum":2611.5847173588795}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9641998626373627,"seconds":6.012618541717529e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.859375,"distances_sum":2576.1401162002253}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.9764880952380957,"seconds":6.0461461544036865e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.8984375,"distances_sum":2686.7091887769902}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":10,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.952667124542125,"seconds":5.738809704780579e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.765625,"distances_sum":2518.7180840133415}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":8,"bsize":11}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.9746852106227109,"seconds":6.16908073425293e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.8984375,"distances_sum":2656.980544027237}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":9,"bsize":10}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9635645604395611,"seconds":6.034970283508301e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.84375,"distances_sum":2579.528787498839}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":9,"bsize":8}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9453582875457879,"seconds":5.513429641723633e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.71875,"distances_sum":2487.711651654798}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9731227106227109,"seconds":6.040558218955994e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.9140625,"distances_sum":2643.456650214096}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9552140567765572,"seconds":5.9194862842559814e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.8359375,"distances_sum":2514.870853093268}, best_list's length: 13, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9503434065934072,"seconds":5.953013896942139e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.7734375,"distances_sum":2510.993756268331}, best_list's length: 14, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.970667353479854,"seconds":5.727633833885193e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.8984375,"distances_sum":2639.9364105476443}, best_list's length: 15, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.95703125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9764880952380957,"seconds":6.0461461544036865e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.8984375,"distances_sum":2686.7091887769902}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.95703125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9764880952380957,"seconds":6.0461461544036865e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.8984375,"distances_sum":2686.7091887769902}}, n: 9
mean(cfft.distances) = 0.3325211797910535
mean(cdnet.distances) = 0.3498447379489374
mean(crand.distances) = 0.33264028573863685
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.9022222222222221
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.8911111111111111
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8911111111111111
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8622222222222223
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8844444444444445
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8999999999999999
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8866666666666667
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8933333333333334
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.9222222222222222
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9444444444444445
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9444444444444445
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.88
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8911111111111111
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8888888888888888
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.9177777777777777
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.9377777777777778
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.8888888888888888
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.8933333333333334
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9355555555555556
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9333333333333332
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.9088888888888889
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.9088888888888889
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.8711111111111111
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.8911111111111111
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.9355555555555556
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.9222222222222222
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.8955555555555555
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.9044444444444443
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9022222222222221
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.92
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.888888888888889
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.9
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.8999999999999999
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.8377777777777778
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.9066666666666666
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX==== split_entropy>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 2, 7]]
** centroid: 8, normalized-entropy: 0.7642045065086204, [(2, 2), (3, 7)]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 10: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 2, 2, 3, 3, 1, 3, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 2, 7]]
** centroid: 8, normalized-entropy: 0.7642045065086204, [(2, 2), (3, 7)]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 10: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 2, 2, 3, 3, 1, 3, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 2, 7]]
** centroid: 8, normalized-entropy: 0.7642045065086204, [(2, 2), (3, 7)]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 10: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 2, 2, 3, 3, 1, 3, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 2, 7]]
** centroid: 8, normalized-entropy: 0.7642045065086204, [(2, 2), (3, 7)]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 10: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 2, 2, 3, 3, 1, 3, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 2, 7]]
** centroid: 8, normalized-entropy: 0.7642045065086204, [(2, 2), (3, 7)]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 10: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 2, 2, 3, 3, 1, 3, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 2, 7]]
** centroid: 8, normalized-entropy: 0.7642045065086204, [(2, 2), (3, 7)]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 10: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 2, 2, 3, 3, 1, 3, 3]
acc = 0.92
[ Info: ("XXXXXX==== split_entropy>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 2, 7]]
** centroid: 8, normalized-entropy: 0.7642045065086204, [(2, 2), (3, 7)]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 10: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 2, 2, 3, 3, 1, 3, 3]
acc = 0.9733333333333334
*** finished computation of 12 references, err: [Inf, 0.6178791105747223] ***
*** center 1: selecting labels [1] (freq >= 1) [from [39, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 2]]
** centroid: 3, normalized-entropy: 0.9709505944546688, [(2, 3), (3, 2)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 15, 2]]
** centroid: 4, normalized-entropy: 0.5225593745369407, [(2, 15), (3, 2)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 23, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 4, 17]]
** centroid: 9, normalized-entropy: 0.7024665512903904, [(2, 4), (3, 17)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
finished with 15 centroids; started with 12
acc = 0.9466666666666667
Test Summary: | Pass  Total
KNC           |    8      8
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.38309662373647] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38309662373647, 0.2540941837987675] ***
*** starting iteration: 2; err: [Inf, 0.38309662373647, 0.2540941837987675] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38309662373647, 0.2540941837987675, 0.24125055172522594] ***
*** starting iteration: 3; err: [Inf, 0.38309662373647, 0.2540941837987675, 0.24125055172522594] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38309662373647, 0.2540941837987675, 0.24125055172522594, 0.23826108263440532] ***
*** starting iteration: 4; err: [Inf, 0.38309662373647, 0.2540941837987675, 0.24125055172522594, 0.23826108263440532] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38309662373647, 0.2540941837987675, 0.24125055172522594, 0.23826108263440532, 0.23741065069624745] ***
*** finished computation of 3 references, err: [Inf, 0.38309662373647, 0.2540941837987675, 0.24125055172522594, 0.23826108263440532, 0.23741065069624745] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [150, 43, 0]]
** centroid: 1, normalized-entropy: 0.7652436278039749, [(1, 150), (2, 43)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 174, 25]]
** centroid: 2, normalized-entropy: 0.5453252586238155, [(2, 174), (3, 25)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [246, 28, 0]]
** centroid: 3, normalized-entropy: 0.47589884890554157, [(1, 246), (2, 28)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.46527349896103454] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.46527349896103454, 0.2980946643680133] ***
*** starting iteration: 2; err: [Inf, 0.46527349896103454, 0.2980946643680133] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.46527349896103454, 0.2980946643680133, 0.2965300315711787] ***
*** starting iteration: 3; err: [Inf, 0.46527349896103454, 0.2980946643680133, 0.2965300315711787] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.46527349896103454, 0.2980946643680133, 0.2965300315711787, 0.2961771152536573] ***
*** finished computation of 3 references, err: [Inf, 0.46527349896103454, 0.2980946643680133, 0.2965300315711787, 0.2961771152536573] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [252, 5, 0]]
** centroid: 1, normalized-entropy: 0.13837092586152097, [(1, 252), (2, 5)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [4, 182, 25]]
** centroid: 2, normalized-entropy: 0.4145504496360678, [(1, 4), (2, 182), (3, 25)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [146, 53, 0]]
** centroid: 3, normalized-entropy: 0.8361514060294172, [(1, 146), (2, 53)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.43195572378312136] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.43195572378312136, 0.31026176553403867] ***
*** starting iteration: 2; err: [Inf, 0.43195572378312136, 0.31026176553403867] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.43195572378312136, 0.31026176553403867, 0.29792244709480825] ***
*** starting iteration: 3; err: [Inf, 0.43195572378312136, 0.31026176553403867, 0.29792244709480825] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.43195572378312136, 0.31026176553403867, 0.29792244709480825, 0.2959474952559153] ***
*** starting iteration: 4; err: [Inf, 0.43195572378312136, 0.31026176553403867, 0.29792244709480825, 0.2959474952559153] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.43195572378312136, 0.31026176553403867, 0.29792244709480825, 0.2959474952559153, 0.2951077636599407] ***
*** finished computation of 3 references, err: [Inf, 0.43195572378312136, 0.31026176553403867, 0.29792244709480825, 0.2959474952559153, 0.2951077636599407] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [263, 6, 0]]
** centroid: 1, normalized-entropy: 0.15419296036999786, [(1, 263), (2, 6)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [147, 45, 0]]
** centroid: 2, normalized-entropy: 0.7855602922535471, [(1, 147), (2, 45)]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [4, 186, 16]]
** centroid: 3, normalized-entropy: 0.334256689892873, [(1, 4), (2, 186), (3, 16)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3778903988208147] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3778903988208147, 0.25625501615253615] ***
*** starting iteration: 2; err: [Inf, 0.3778903988208147, 0.25625501615253615] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3778903988208147, 0.25625501615253615, 0.24134916529852501] ***
*** starting iteration: 3; err: [Inf, 0.3778903988208147, 0.25625501615253615, 0.24134916529852501] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3778903988208147, 0.25625501615253615, 0.24134916529852501, 0.23893860619127014] ***
*** starting iteration: 4; err: [Inf, 0.3778903988208147, 0.25625501615253615, 0.24134916529852501, 0.23893860619127014] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3778903988208147, 0.25625501615253615, 0.24134916529852501, 0.23893860619127014, 0.23807897496370897] ***
*** finished computation of 3 references, err: [Inf, 0.3778903988208147, 0.25625501615253615, 0.24134916529852501, 0.23893860619127014, 0.23807897496370897] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [1, 202, 25]]
** centroid: 1, normalized-entropy: 0.3399377535592162, [(1, 1), (2, 202), (3, 25)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [239, 2, 0]]
** centroid: 2, normalized-entropy: 0.0692911324648208, [(1, 239), (2, 2)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [162, 36, 0]]
** centroid: 3, normalized-entropy: 0.6840384356390419, [(1, 162), (2, 36)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3003027622784855] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3003027622784855, 0.25324620234443507] ***
*** starting iteration: 2; err: [Inf, 0.3003027622784855, 0.25324620234443507] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3003027622784855, 0.25324620234443507, 0.24042103999619674] ***
*** starting iteration: 3; err: [Inf, 0.3003027622784855, 0.25324620234443507, 0.24042103999619674] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3003027622784855, 0.25324620234443507, 0.24042103999619674, 0.23749217785604443] ***
*** starting iteration: 4; err: [Inf, 0.3003027622784855, 0.25324620234443507, 0.24042103999619674, 0.23749217785604443] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3003027622784855, 0.25324620234443507, 0.24042103999619674, 0.23749217785604443, 0.2360904987069263] ***
*** starting iteration: 5; err: [Inf, 0.3003027622784855, 0.25324620234443507, 0.24042103999619674, 0.23749217785604443, 0.2360904987069263] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3003027622784855, 0.25324620234443507, 0.24042103999619674, 0.23749217785604443, 0.2360904987069263, 0.2353281678046858] ***
*** finished computation of 3 references, err: [Inf, 0.3003027622784855, 0.25324620234443507, 0.24042103999619674, 0.23749217785604443, 0.2360904987069263, 0.2353281678046858] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [8, 189, 16]]
** centroid: 1, normalized-entropy: 0.3857538012753196, [(1, 8), (2, 189), (3, 16)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [264, 2, 0]]
** centroid: 2, normalized-entropy: 0.06385368546122076, [(1, 264), (2, 2)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [142, 46, 0]]
** centroid: 3, normalized-entropy: 0.8027381019527042, [(1, 142), (2, 46)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2700251254795662] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2700251254795662, 0.23716169717517477] ***
*** starting iteration: 2; err: [Inf, 0.2700251254795662, 0.23716169717517477] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2700251254795662, 0.23716169717517477, 0.23634247150406376] ***
*** finished computation of 3 references, err: [Inf, 0.2700251254795662, 0.23716169717517477, 0.23634247150406376] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [249, 13, 0]]
** centroid: 1, normalized-entropy: 0.2847733930611665, [(1, 249), (2, 13)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [1, 177, 25]]
** centroid: 2, normalized-entropy: 0.36737082760540196, [(1, 1), (2, 177), (3, 25)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [146, 55, 0]]
** centroid: 3, normalized-entropy: 0.8466279606299794, [(1, 146), (2, 55)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.297007376886625] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.297007376886625, 0.2735761112398768] ***
*** starting iteration: 2; err: [Inf, 0.297007376886625, 0.2735761112398768] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.297007376886625, 0.2735761112398768, 0.2696757130747217] ***
*** starting iteration: 3; err: [Inf, 0.297007376886625, 0.2735761112398768, 0.2696757130747217] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.297007376886625, 0.2735761112398768, 0.2696757130747217, 0.25247292457262926] ***
*** starting iteration: 4; err: [Inf, 0.297007376886625, 0.2735761112398768, 0.2696757130747217, 0.25247292457262926] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.297007376886625, 0.2735761112398768, 0.2696757130747217, 0.25247292457262926, 0.2367651279219126] ***
*** starting iteration: 5; err: [Inf, 0.297007376886625, 0.2735761112398768, 0.2696757130747217, 0.25247292457262926, 0.2367651279219126] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.297007376886625, 0.2735761112398768, 0.2696757130747217, 0.25247292457262926, 0.2367651279219126, 0.23437775982714174] ***
*** starting iteration: 6; err: [Inf, 0.297007376886625, 0.2735761112398768, 0.2696757130747217, 0.25247292457262926, 0.2367651279219126, 0.23437775982714174] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.297007376886625, 0.2735761112398768, 0.2696757130747217, 0.25247292457262926, 0.2367651279219126, 0.23437775982714174, 0.2340175299228042] ***
*** finished computation of 3 references, err: [Inf, 0.297007376886625, 0.2735761112398768, 0.2696757130747217, 0.25247292457262926, 0.2367651279219126, 0.23437775982714174, 0.2340175299228042] ***
*** center 1: selecting labels [1] (freq >= 1) [from [220, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [123, 80, 0]]
** centroid: 2, normalized-entropy: 0.9673874849304201, [(1, 123), (2, 80)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [59, 160, 25]]
** centroid: 3, normalized-entropy: 0.7768169267850215, [(1, 59), (2, 160), (3, 25)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.28732412704441146] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.28732412704441146, 0.27003435145734045] ***
*** starting iteration: 2; err: [Inf, 0.28732412704441146, 0.27003435145734045] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.28732412704441146, 0.27003435145734045, 0.26864612978817465] ***
*** starting iteration: 3; err: [Inf, 0.28732412704441146, 0.27003435145734045, 0.26864612978817465] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.28732412704441146, 0.27003435145734045, 0.26864612978817465, 0.2675222034567501] ***
*** starting iteration: 4; err: [Inf, 0.28732412704441146, 0.27003435145734045, 0.26864612978817465, 0.2675222034567501] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.28732412704441146, 0.27003435145734045, 0.26864612978817465, 0.2675222034567501, 0.25640642966354626] ***
*** starting iteration: 5; err: [Inf, 0.28732412704441146, 0.27003435145734045, 0.26864612978817465, 0.2675222034567501, 0.25640642966354626] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.28732412704441146, 0.27003435145734045, 0.26864612978817465, 0.2675222034567501, 0.25640642966354626, 0.23630815750753126] ***
*** starting iteration: 6; err: [Inf, 0.28732412704441146, 0.27003435145734045, 0.26864612978817465, 0.2675222034567501, 0.25640642966354626, 0.23630815750753126] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.28732412704441146, 0.27003435145734045, 0.26864612978817465, 0.2675222034567501, 0.25640642966354626, 0.23630815750753126, 0.2340978525112616] ***
*** starting iteration: 7; err: [Inf, 0.28732412704441146, 0.27003435145734045, 0.26864612978817465, 0.2675222034567501, 0.25640642966354626, 0.23630815750753126, 0.2340978525112616] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.28732412704441146, 0.27003435145734045, 0.26864612978817465, 0.2675222034567501, 0.25640642966354626, 0.23630815750753126, 0.2340978525112616, 0.23328583936152542] ***
*** finished computation of 3 references, err: [Inf, 0.28732412704441146, 0.27003435145734045, 0.26864612978817465, 0.2675222034567501, 0.25640642966354626, 0.23630815750753126, 0.2340978525112616, 0.23328583936152542] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [137, 66, 0]]
** centroid: 1, normalized-entropy: 0.9098659307652252, [(1, 137), (2, 66)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [38, 171, 16]]
** centroid: 2, normalized-entropy: 0.6343697016723828, [(1, 38), (2, 171), (3, 16)]
*** center 3: selecting labels [1] (freq >= 1) [from [239, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.21576952370017902] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21576952370017902, 0.19854278458064203] ***
*** starting iteration: 2; err: [Inf, 0.21576952370017902, 0.19854278458064203] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21576952370017902, 0.19854278458064203, 0.1930636658260526] ***
*** starting iteration: 3; err: [Inf, 0.21576952370017902, 0.19854278458064203, 0.1930636658260526] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21576952370017902, 0.19854278458064203, 0.1930636658260526, 0.19167242707494456] ***
*** finished computation of 7 references, err: [Inf, 0.21576952370017902, 0.19854278458064203, 0.1930636658260526, 0.19167242707494456] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [34, 77, 0]]
** centroid: 1, normalized-entropy: 0.8888636119715568, [(1, 34), (2, 77)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 59, 10]]
** centroid: 2, normalized-entropy: 0.5969995167604553, [(2, 59), (3, 10)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [50, 35, 0]]
** centroid: 3, normalized-entropy: 0.9774178175281716, [(1, 50), (2, 35)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [103, 38, 0]]
** centroid: 4, normalized-entropy: 0.8407513537411502, [(1, 103), (2, 38)]
*** center 5: selecting labels [1] (freq >= 2) [from [81, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 36, 15]]
** centroid: 6, normalized-entropy: 0.8739810481273581, [(2, 36), (3, 15)]
*** center 7: selecting labels [1] (freq >= 2) [from [128, 0, 0]]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2140594683699254] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2140594683699254, 0.1961899339772951] ***
*** starting iteration: 2; err: [Inf, 0.2140594683699254, 0.1961899339772951] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2140594683699254, 0.1961899339772951, 0.19408496199566674] ***
*** starting iteration: 3; err: [Inf, 0.2140594683699254, 0.1961899339772951, 0.19408496199566674] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2140594683699254, 0.1961899339772951, 0.19408496199566674, 0.19268603535645504] ***
*** finished computation of 7 references, err: [Inf, 0.2140594683699254, 0.1961899339772951, 0.19408496199566674, 0.19268603535645504] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [9, 95, 0]]
** centroid: 1, normalized-entropy: 0.42480887386781474, [(1, 9), (2, 95)]
*** center 2: selecting labels [1] (freq >= 2) [from [82, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [89, 36, 0]]
** centroid: 3, normalized-entropy: 0.866123681398626, [(1, 89), (2, 36)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 81, 25]]
** centroid: 4, normalized-entropy: 0.7880689925063812, [(2, 81), (3, 25)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [76, 2, 0]]
** centroid: 5, normalized-entropy: 0.17203694935311387, [(1, 76), (2, 2)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [67, 26, 0]]
** centroid: 6, normalized-entropy: 0.8548640967818041, [(1, 67), (2, 26)]
*** center 7: selecting labels [1] (freq >= 2) [from [79, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2673947619109497] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2673947619109497, 0.20091226917956473] ***
*** starting iteration: 2; err: [Inf, 0.2673947619109497, 0.20091226917956473] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2673947619109497, 0.20091226917956473, 0.19229947890726098] ***
*** starting iteration: 3; err: [Inf, 0.2673947619109497, 0.20091226917956473, 0.19229947890726098] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2673947619109497, 0.20091226917956473, 0.19229947890726098, 0.18904045974414074] ***
*** finished computation of 7 references, err: [Inf, 0.2673947619109497, 0.20091226917956473, 0.19229947890726098, 0.18904045974414074] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [83, 23, 0]]
** centroid: 1, normalized-entropy: 0.7546167018169155, [(1, 83), (2, 23)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 78, 16]]
** centroid: 2, normalized-entropy: 0.6581912658132184, [(2, 78), (3, 16)]
*** center 3: selecting labels [1] (freq >= 2) [from [136, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [48, 26, 0]]
** centroid: 4, normalized-entropy: 0.9352691398683568, [(1, 48), (2, 26)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 82, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [65, 28, 0]]
** centroid: 6, normalized-entropy: 0.8826013308449944, [(1, 65), (2, 28)]
*** center 7: selecting labels [1] (freq >= 2) [from [82, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3643588919161788] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3643588919161788, 0.24174509700821215] ***
*** finished computation of 3 references, err: [Inf, 0.3643588919161788, 0.24174509700821215] ***
*** center 1: selecting labels [1] (freq >= 1) [from [152, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [136, 115, 3]]
** centroid: 2, normalized-entropy: 0.6787331664432839, [(1, 136), (2, 115), (3, 3)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [108, 130, 22]]
** centroid: 3, normalized-entropy: 0.837856439682631, [(1, 108), (2, 130), (3, 22)]
finished with 7 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3944217307197078] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3944217307197078, 0.25610075440436514] ***
*** finished computation of 3 references, err: [Inf, 0.3944217307197078, 0.25610075440436514] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [70, 109, 19]]
** centroid: 1, normalized-entropy: 0.8384358114255566, [(1, 70), (2, 109), (3, 19)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [54, 123, 6]]
** centroid: 2, normalized-entropy: 0.6728886029798997, [(1, 54), (2, 123), (3, 6)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [278, 8, 0]]
** centroid: 3, normalized-entropy: 0.18411742692826688, [(1, 278), (2, 8)]
finished with 7 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.25731418306228593] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.25731418306228593, 0.24132069225131214] ***
*** finished computation of 3 references, err: [Inf, 0.25731418306228593, 0.24132069225131214] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [226, 15, 0]]
** centroid: 1, normalized-entropy: 0.33627603979859144, [(1, 226), (2, 15)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [188, 34, 0]]
** centroid: 2, normalized-entropy: 0.6176751423955683, [(1, 188), (2, 34)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 188, 16]]
** centroid: 3, normalized-entropy: 0.3966277727783787, [(2, 188), (3, 16)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.24478051348592159] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24478051348592159, 0.1866272822604165] ***
*** finished computation of 7 references, err: [Inf, 0.24478051348592159, 0.1866272822604165] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [107, 6, 0]]
** centroid: 1, normalized-entropy: 0.2994113292359872, [(1, 107), (2, 6)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 84, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [52, 19, 0]]
** centroid: 3, normalized-entropy: 0.8380078505079931, [(1, 52), (2, 19)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [218, 1, 0]]
** centroid: 4, normalized-entropy: 0.042073896124598435, [(1, 218), (2, 1)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 2, 24]]
** centroid: 5, normalized-entropy: 0.3912435636292556, [(2, 2), (3, 24)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [19, 97, 0]]
** centroid: 6, normalized-entropy: 0.6433071292001625, [(1, 19), (2, 97)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 36, 1]]
** centroid: 7, normalized-entropy: 0.1792560669283214, [(2, 36), (3, 1)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.17968724235317027] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17968724235317027, 0.15280730792878383] ***
*** finished computation of 7 references, err: [Inf, 0.17968724235317027, 0.15280730792878383] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [66, 5, 0]]
** centroid: 1, normalized-entropy: 0.3674984948272913, [(1, 66), (2, 5)]
*** center 2: selecting labels [1] (freq >= 1) [from [65, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [63, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 109, 25]]
** centroid: 4, normalized-entropy: 0.6942347416140927, [(2, 109), (3, 25)]
*** center 5: selecting labels [1] (freq >= 1) [from [137, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [26, 78, 0]]
** centroid: 6, normalized-entropy: 0.8112781244591328, [(1, 26), (2, 78)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [45, 48, 0]]
** centroid: 7, normalized-entropy: 0.9992492479956566, [(1, 45), (2, 48)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21629600805569738] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21629600805569738, 0.1711311329456711] ***
*** finished computation of 7 references, err: [Inf, 0.21629600805569738, 0.1711311329456711] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [109, 11, 0]]
** centroid: 1, normalized-entropy: 0.44200860222772487, [(1, 109), (2, 11)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 26, 13]]
** centroid: 2, normalized-entropy: 0.9182958340544894, [(2, 26), (3, 13)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 71, 3]]
** centroid: 3, normalized-entropy: 0.2447650820208971, [(2, 71), (3, 3)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [67, 35, 0]]
** centroid: 4, normalized-entropy: 0.9277892502681174, [(1, 67), (2, 35)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [91, 23, 0]]
** centroid: 5, normalized-entropy: 0.7254230207665605, [(1, 91), (2, 23)]
*** center 6: selecting labels [1] (freq >= 1) [from [143, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [4, 71, 0]]
** centroid: 7, normalized-entropy: 0.3003914173647818, [(1, 4), (2, 71)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.39255926749660625] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39255926749660625, 0.3028473564655752] ***
*** starting iteration: 2; err: [Inf, 0.39255926749660625, 0.3028473564655752] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39255926749660625, 0.3028473564655752, 0.30097348635663856] ***
*** starting iteration: 3; err: [Inf, 0.39255926749660625, 0.3028473564655752, 0.30097348635663856] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39255926749660625, 0.3028473564655752, 0.30097348635663856, 0.30010499171744864] ***
*** finished computation of 3 references, err: [Inf, 0.39255926749660625, 0.3028473564655752, 0.30097348635663856, 0.30010499171744864] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [91, 153, 25]]
** centroid: 1, normalized-entropy: 0.8268635076015515, [(1, 91), (2, 153), (3, 25)]
*** center 2: selecting labels [1] (freq >= 2) [from [204, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [101, 92, 0]]
** centroid: 3, normalized-entropy: 0.9984308211272699, [(1, 101), (2, 92)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.22366893394953674] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22366893394953674, 0.1865280352479725] ***
*** starting iteration: 2; err: [Inf, 0.22366893394953674, 0.1865280352479725] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22366893394953674, 0.1865280352479725, 0.18382196516139773] ***
*** starting iteration: 3; err: [Inf, 0.22366893394953674, 0.1865280352479725, 0.18382196516139773] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22366893394953674, 0.1865280352479725, 0.18382196516139773, 0.1836564812484804] ***
*** finished computation of 7 references, err: [Inf, 0.22366893394953674, 0.1865280352479725, 0.18382196516139773, 0.1836564812484804] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [51, 48, 0]]
** centroid: 1, normalized-entropy: 0.9993375041688846, [(1, 51), (2, 48)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [71, 34, 0]]
** centroid: 2, normalized-entropy: 0.908476164453323, [(1, 71), (2, 34)]
*** center 3: selecting labels [1] (freq >= 2) [from [87, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 51, 25]]
** centroid: 4, normalized-entropy: 0.9138472873262908, [(2, 51), (3, 25)]
*** center 5: selecting labels [1] (freq >= 2) [from [102, 1, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [85, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 111, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2350985232277772] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2350985232277772, 0.18973430707063554] ***
*** starting iteration: 2; err: [Inf, 0.2350985232277772, 0.18973430707063554] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2350985232277772, 0.18973430707063554, 0.18536132707287079] ***
*** starting iteration: 3; err: [Inf, 0.2350985232277772, 0.18973430707063554, 0.18536132707287079] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2350985232277772, 0.18973430707063554, 0.18536132707287079, 0.18415110594714465] ***
*** starting iteration: 4; err: [Inf, 0.2350985232277772, 0.18973430707063554, 0.18536132707287079, 0.18415110594714465] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2350985232277772, 0.18973430707063554, 0.18536132707287079, 0.18415110594714465, 0.1834198195819577] ***
*** finished computation of 7 references, err: [Inf, 0.2350985232277772, 0.18973430707063554, 0.18536132707287079, 0.18415110594714465, 0.1834198195819577] ***
*** center 1: selecting labels [1] (freq >= 2) [from [107, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [52, 42, 0]]
** centroid: 2, normalized-entropy: 0.9918207974218425, [(1, 52), (2, 42)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 67, 25]]
** centroid: 3, normalized-entropy: 0.8439491244805034, [(2, 67), (3, 25)]
*** center 4: selecting labels [1] (freq >= 2) [from [114, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [41, 61, 0]]
** centroid: 5, normalized-entropy: 0.972086030396226, [(1, 41), (2, 61)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [4, 70, 0]]
** centroid: 6, normalized-entropy: 0.30337483608641397, [(1, 4), (2, 70)]
*** center 7: selecting labels [1] (freq >= 2) [from [84, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2450846835323002] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2450846835323002, 0.19221117284646008] ***
*** starting iteration: 2; err: [Inf, 0.2450846835323002, 0.19221117284646008] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2450846835323002, 0.19221117284646008, 0.18769597922587233] ***
*** starting iteration: 3; err: [Inf, 0.2450846835323002, 0.19221117284646008, 0.18769597922587233] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2450846835323002, 0.19221117284646008, 0.18769597922587233, 0.18671852695117558] ***
*** finished computation of 7 references, err: [Inf, 0.2450846835323002, 0.19221117284646008, 0.18769597922587233, 0.18671852695117558] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 87, 16]]
** centroid: 1, normalized-entropy: 0.6230433996216712, [(2, 87), (3, 16)]
*** center 2: selecting labels [1] (freq >= 2) [from [120, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [60, 5, 0]]
** centroid: 3, normalized-entropy: 0.3912435636292556, [(1, 60), (2, 5)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [80, 29, 0]]
** centroid: 4, normalized-entropy: 0.8357467426696918, [(1, 80), (2, 29)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [71, 35, 0]]
** centroid: 5, normalized-entropy: 0.9151190292999326, [(1, 71), (2, 35)]
*** center 6: selecting labels [1] (freq >= 2) [from [82, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [1, 81, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19351623012815733] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19351623012815733, 0.15178675012447657] ***
*** starting iteration: 2; err: [Inf, 0.19351623012815733, 0.15178675012447657] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19351623012815733, 0.15178675012447657, 0.14881185151485576] ***
*** starting iteration: 3; err: [Inf, 0.19351623012815733, 0.15178675012447657, 0.14881185151485576] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19351623012815733, 0.15178675012447657, 0.14881185151485576, 0.1481893361373399] ***
*** finished computation of 7 references, err: [Inf, 0.19351623012815733, 0.15178675012447657, 0.14881185151485576, 0.1481893361373399] ***
*** center 1: selecting labels [1] (freq >= 1) [from [121, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 58, 25]]
** centroid: 2, normalized-entropy: 0.8827586787955116, [(2, 58), (3, 25)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [57, 17, 0]]
** centroid: 3, normalized-entropy: 0.77753986416076, [(1, 57), (2, 17)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [94, 42, 0]]
** centroid: 4, normalized-entropy: 0.8918107543797084, [(1, 94), (2, 42)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [39, 64, 0]]
** centroid: 5, normalized-entropy: 0.9570763860606195, [(1, 39), (2, 64)]
*** center 6: selecting labels [1] (freq >= 1) [from [85, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 64, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18304450139319567] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18304450139319567, 0.14864209233685446] ***
*** starting iteration: 2; err: [Inf, 0.18304450139319567, 0.14864209233685446] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18304450139319567, 0.14864209233685446, 0.14544682827170077] ***
*** starting iteration: 3; err: [Inf, 0.18304450139319567, 0.14864209233685446, 0.14544682827170077] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18304450139319567, 0.14864209233685446, 0.14544682827170077, 0.14488337279962044] ***
*** finished computation of 7 references, err: [Inf, 0.18304450139319567, 0.14864209233685446, 0.14544682827170077, 0.14488337279962044] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [105, 7, 0]]
** centroid: 1, normalized-entropy: 0.3372900666170139, [(1, 105), (2, 7)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [70, 15, 0]]
** centroid: 2, normalized-entropy: 0.6722948170756378, [(1, 70), (2, 15)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 50, 25]]
** centroid: 3, normalized-entropy: 0.9182958340544894, [(2, 50), (3, 25)]
*** center 4: selecting labels [1] (freq >= 1) [from [115, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [18, 85, 0]]
** centroid: 5, normalized-entropy: 0.6684725699243225, [(1, 18), (2, 85)]
*** center 6: selecting labels [1] (freq >= 1) [from [94, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 83, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18627295033752114] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18627295033752114, 0.15218213559833468] ***
*** starting iteration: 2; err: [Inf, 0.18627295033752114, 0.15218213559833468] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18627295033752114, 0.15218213559833468, 0.14758124315414461] ***
*** starting iteration: 3; err: [Inf, 0.18627295033752114, 0.15218213559833468, 0.14758124315414461] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18627295033752114, 0.15218213559833468, 0.14758124315414461, 0.1453245477387863] ***
*** starting iteration: 4; err: [Inf, 0.18627295033752114, 0.15218213559833468, 0.14758124315414461, 0.1453245477387863] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18627295033752114, 0.15218213559833468, 0.14758124315414461, 0.1453245477387863, 0.1435071480128149] ***
*** starting iteration: 5; err: [Inf, 0.18627295033752114, 0.15218213559833468, 0.14758124315414461, 0.1453245477387863, 0.1435071480128149] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18627295033752114, 0.15218213559833468, 0.14758124315414461, 0.1453245477387863, 0.1435071480128149, 0.14267433447570638] ***
*** finished computation of 7 references, err: [Inf, 0.18627295033752114, 0.15218213559833468, 0.14758124315414461, 0.1453245477387863, 0.1435071480128149, 0.14267433447570638] ***
*** center 1: selecting labels [1] (freq >= 1) [from [103, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 85, 16]]
** centroid: 2, normalized-entropy: 0.6305062394675903, [(2, 85), (3, 16)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [62, 32, 0]]
** centroid: 3, normalized-entropy: 0.9252253278054431, [(1, 62), (2, 32)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [58, 45, 0]]
** centroid: 4, normalized-entropy: 0.9884783227925916, [(1, 58), (2, 45)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [20, 75, 0]]
** centroid: 5, normalized-entropy: 0.7424875695421234, [(1, 20), (2, 75)]
*** center 6: selecting labels [1] (freq >= 1) [from [80, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [91, 0, 0]]
finished with 11 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 10)
[0.9530039021056985, 0.9390078701455947, 0.9389898880916845, 0.9270078461695227, 0.9249878621136106, 0.8830267393141645, 0.882981784179389, 0.8799757841674011, 0.8440296584009159, 0.8060155964347581]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :fft, 0.3, 2) => 0.9530039021056985
finished with 10
iteration 2 finished
generating 4 configurations using top 12 configurations, starting with 10)
[0.9530039021056985, 0.9390078701455947, 0.9389898880916845, 0.9270078461695227, 0.9249878621136106, 0.8830267393141645, 0.882981784179389, 0.8799757841674011, 0.8440296584009159, 0.8060155964347581]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :fft, 0.3, 2) => 0.9530039021056985
finished with 11
iteration 3 finished
*** starting iteration: 1; err: [Inf, 0.3671783709803501] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3671783709803501, 0.3102608315692795] ***
*** finished computation of 3 references, err: [Inf, 0.3671783709803501, 0.3102608315692795] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [19, 213, 25]]
** centroid: 1, normalized-entropy: 0.5232674401990964, [(1, 19), (2, 213), (3, 25)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [220, 1, 0]]
** centroid: 2, normalized-entropy: 0.04175261832615969, [(1, 220), (2, 1)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [157, 31, 0]]
** centroid: 3, normalized-entropy: 0.6458891538160492, [(1, 157), (2, 31)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.426300835372626] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.426300835372626, 0.332614510056229] ***
*** finished computation of 3 references, err: [Inf, 0.426300835372626, 0.332614510056229] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [220, 13, 0]]
** centroid: 1, normalized-entropy: 0.31051724632269523, [(1, 220), (2, 13)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [144, 53, 0]]
** centroid: 2, normalized-entropy: 0.8400772798647897, [(1, 144), (2, 53)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [38, 174, 25]]
** centroid: 3, normalized-entropy: 0.6896097651902953, [(1, 38), (2, 174), (3, 25)]
finished with 7 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4096513412113691] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4096513412113691, 0.3241817118680995] ***
*** finished computation of 3 references, err: [Inf, 0.4096513412113691, 0.3241817118680995] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [2, 196, 16]]
** centroid: 1, normalized-entropy: 0.28949299442751314, [(1, 2), (2, 196), (3, 16)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [231, 11, 0]]
** centroid: 2, normalized-entropy: 0.2667649878030262, [(1, 231), (2, 11)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [181, 30, 0]]
** centroid: 3, normalized-entropy: 0.5899199307436035, [(1, 181), (2, 30)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
generating 4 configurations using top 12 configurations, starting with 11)
[0.9530039021056985, 0.9390078701455947, 0.9389898880916845, 0.9270078461695227, 0.9249878621136106, 0.8830267393141645, 0.882981784179389, 0.8799757841674011, 0.8440296584009159, 0.8430346514178849, 0.8060155964347581]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :fft, 0.3, 2) => 0.9530039021056985
finished with 13
iteration 4 finished
*** starting iteration: 1; err: [Inf, 0.34437336398333357] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34437336398333357, 0.22722422483086296] ***
*** starting iteration: 2; err: [Inf, 0.34437336398333357, 0.22722422483086296] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34437336398333357, 0.22722422483086296, 0.20019991123942552] ***
*** starting iteration: 3; err: [Inf, 0.34437336398333357, 0.22722422483086296, 0.20019991123942552] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34437336398333357, 0.22722422483086296, 0.20019991123942552, 0.19116052093722666] ***
*** starting iteration: 4; err: [Inf, 0.34437336398333357, 0.22722422483086296, 0.20019991123942552, 0.19116052093722666] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34437336398333357, 0.22722422483086296, 0.20019991123942552, 0.19116052093722666, 0.18536587311206637] ***
*** starting iteration: 5; err: [Inf, 0.34437336398333357, 0.22722422483086296, 0.20019991123942552, 0.19116052093722666, 0.18536587311206637] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34437336398333357, 0.22722422483086296, 0.20019991123942552, 0.19116052093722666, 0.18536587311206637, 0.1833496807512265] ***
*** starting iteration: 6; err: [Inf, 0.34437336398333357, 0.22722422483086296, 0.20019991123942552, 0.19116052093722666, 0.18536587311206637, 0.1833496807512265] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.34437336398333357, 0.22722422483086296, 0.20019991123942552, 0.19116052093722666, 0.18536587311206637, 0.1833496807512265, 0.18296762276860373] ***
*** finished computation of 7 references, err: [Inf, 0.34437336398333357, 0.22722422483086296, 0.20019991123942552, 0.19116052093722666, 0.18536587311206637, 0.1833496807512265, 0.18296762276860373] ***
*** center 1: selecting labels [1] (freq >= 1) [from [83, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [49, 35, 0]]
** centroid: 2, normalized-entropy: 0.9798687566511527, [(1, 49), (2, 35)]
*** center 3: selecting labels [1] (freq >= 1) [from [94, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [66, 60, 0]]
** centroid: 4, normalized-entropy: 0.998363672593813, [(1, 66), (2, 60)]
*** center 5: selecting labels [1] (freq >= 1) [from [79, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [25, 76, 0]]
** centroid: 6, normalized-entropy: 0.8073313266519867, [(1, 25), (2, 76)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 74, 25]]
** centroid: 7, normalized-entropy: 0.8152560766360704, [(2, 74), (3, 25)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2669420286285589] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2669420286285589, 0.21682909873804299] ***
*** starting iteration: 2; err: [Inf, 0.2669420286285589, 0.21682909873804299] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2669420286285589, 0.21682909873804299, 0.20432700233036902] ***
*** starting iteration: 3; err: [Inf, 0.2669420286285589, 0.21682909873804299, 0.20432700233036902] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2669420286285589, 0.21682909873804299, 0.20432700233036902, 0.19721917457029647] ***
*** starting iteration: 4; err: [Inf, 0.2669420286285589, 0.21682909873804299, 0.20432700233036902, 0.19721917457029647] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2669420286285589, 0.21682909873804299, 0.20432700233036902, 0.19721917457029647, 0.19358770397730518] ***
*** starting iteration: 5; err: [Inf, 0.2669420286285589, 0.21682909873804299, 0.20432700233036902, 0.19721917457029647, 0.19358770397730518] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2669420286285589, 0.21682909873804299, 0.20432700233036902, 0.19721917457029647, 0.19358770397730518, 0.1912530136421725] ***
*** starting iteration: 6; err: [Inf, 0.2669420286285589, 0.21682909873804299, 0.20432700233036902, 0.19721917457029647, 0.19358770397730518, 0.1912530136421725] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2669420286285589, 0.21682909873804299, 0.20432700233036902, 0.19721917457029647, 0.19358770397730518, 0.1912530136421725, 0.1892294892063853] ***
*** starting iteration: 7; err: [Inf, 0.2669420286285589, 0.21682909873804299, 0.20432700233036902, 0.19721917457029647, 0.19358770397730518, 0.1912530136421725, 0.1892294892063853] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2669420286285589, 0.21682909873804299, 0.20432700233036902, 0.19721917457029647, 0.19358770397730518, 0.1912530136421725, 0.1892294892063853, 0.18798307519380947] ***
*** starting iteration: 8; err: [Inf, 0.2669420286285589, 0.21682909873804299, 0.20432700233036902, 0.19721917457029647, 0.19358770397730518, 0.1912530136421725, 0.1892294892063853, 0.18798307519380947] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2669420286285589, 0.21682909873804299, 0.20432700233036902, 0.19721917457029647, 0.19358770397730518, 0.1912530136421725, 0.1892294892063853, 0.18798307519380947, 0.1855658112635565] ***
*** starting iteration: 9; err: [Inf, 0.2669420286285589, 0.21682909873804299, 0.20432700233036902, 0.19721917457029647, 0.19358770397730518, 0.1912530136421725, 0.1892294892063853, 0.18798307519380947, 0.1855658112635565] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2669420286285589, 0.21682909873804299, 0.20432700233036902, 0.19721917457029647, 0.19358770397730518, 0.1912530136421725, 0.1892294892063853, 0.18798307519380947, 0.1855658112635565, 0.18443799153461807] ***
*** starting iteration: 10; err: [Inf, 0.2669420286285589, 0.21682909873804299, 0.20432700233036902, 0.19721917457029647, 0.19358770397730518, 0.1912530136421725, 0.1892294892063853, 0.18798307519380947, 0.1855658112635565, 0.18443799153461807] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2669420286285589, 0.21682909873804299, 0.20432700233036902, 0.19721917457029647, 0.19358770397730518, 0.1912530136421725, 0.1892294892063853, 0.18798307519380947, 0.1855658112635565, 0.18443799153461807, 0.18336956756890402] ***
*** finished computation of 7 references, err: [Inf, 0.2669420286285589, 0.21682909873804299, 0.20432700233036902, 0.19721917457029647, 0.19358770397730518, 0.1912530136421725, 0.1892294892063853, 0.18798307519380947, 0.1855658112635565, 0.18443799153461807, 0.18336956756890402] ***
*** center 1: selecting labels [1] (freq >= 1) [from [119, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [13, 78, 0]]
** centroid: 2, normalized-entropy: 0.5916727785823274, [(1, 13), (2, 78)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [101, 12, 0]]
** centroid: 3, normalized-entropy: 0.48833020341885913, [(1, 101), (2, 12)]
*** center 4: selecting labels [1] (freq >= 1) [from [98, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [71, 22, 0]]
** centroid: 5, normalized-entropy: 0.7892712724536985, [(1, 71), (2, 22)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 77, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 51, 25]]
** centroid: 7, normalized-entropy: 0.9138472873262908, [(2, 51), (3, 25)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.25705696760873675] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25705696760873675, 0.20514207460667597] ***
*** starting iteration: 2; err: [Inf, 0.25705696760873675, 0.20514207460667597] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25705696760873675, 0.20514207460667597, 0.19681209453480733] ***
*** starting iteration: 3; err: [Inf, 0.25705696760873675, 0.20514207460667597, 0.19681209453480733] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25705696760873675, 0.20514207460667597, 0.19681209453480733, 0.1951178861558549] ***
*** starting iteration: 4; err: [Inf, 0.25705696760873675, 0.20514207460667597, 0.19681209453480733, 0.1951178861558549] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25705696760873675, 0.20514207460667597, 0.19681209453480733, 0.1951178861558549, 0.19376693927296165] ***
*** starting iteration: 5; err: [Inf, 0.25705696760873675, 0.20514207460667597, 0.19681209453480733, 0.1951178861558549, 0.19376693927296165] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25705696760873675, 0.20514207460667597, 0.19681209453480733, 0.1951178861558549, 0.19376693927296165, 0.19247124643404334] ***
*** starting iteration: 6; err: [Inf, 0.25705696760873675, 0.20514207460667597, 0.19681209453480733, 0.1951178861558549, 0.19376693927296165, 0.19247124643404334] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25705696760873675, 0.20514207460667597, 0.19681209453480733, 0.1951178861558549, 0.19376693927296165, 0.19247124643404334, 0.1912354933701154] ***
*** starting iteration: 7; err: [Inf, 0.25705696760873675, 0.20514207460667597, 0.19681209453480733, 0.1951178861558549, 0.19376693927296165, 0.19247124643404334, 0.1912354933701154] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25705696760873675, 0.20514207460667597, 0.19681209453480733, 0.1951178861558549, 0.19376693927296165, 0.19247124643404334, 0.1912354933701154, 0.19035993338139473] ***
*** finished computation of 7 references, err: [Inf, 0.25705696760873675, 0.20514207460667597, 0.19681209453480733, 0.1951178861558549, 0.19376693927296165, 0.19247124643404334, 0.1912354933701154, 0.19035993338139473] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [71, 15, 0]]
** centroid: 1, normalized-entropy: 0.6677135405281421, [(1, 71), (2, 15)]
*** center 2: selecting labels [1] (freq >= 1) [from [106, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [69, 44, 0]]
** centroid: 3, normalized-entropy: 0.9643986196033757, [(1, 69), (2, 44)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 79, 16]]
** centroid: 4, normalized-entropy: 0.6540800387941991, [(2, 79), (3, 16)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [87, 1, 0]]
** centroid: 5, normalized-entropy: 0.08970338978685011, [(1, 87), (2, 1)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [81, 6, 0]]
** centroid: 6, normalized-entropy: 0.36205125173399805, [(1, 81), (2, 6)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 92, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.25055134480863855] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25055134480863855, 0.17645893515543537] ***
*** starting iteration: 2; err: [Inf, 0.25055134480863855, 0.17645893515543537] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25055134480863855, 0.17645893515543537, 0.1565692469494434] ***
*** starting iteration: 3; err: [Inf, 0.25055134480863855, 0.17645893515543537, 0.1565692469494434] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25055134480863855, 0.17645893515543537, 0.1565692469494434, 0.14978291410757033] ***
*** starting iteration: 4; err: [Inf, 0.25055134480863855, 0.17645893515543537, 0.1565692469494434, 0.14978291410757033] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25055134480863855, 0.17645893515543537, 0.1565692469494434, 0.14978291410757033, 0.1467920227891167] ***
*** starting iteration: 5; err: [Inf, 0.25055134480863855, 0.17645893515543537, 0.1565692469494434, 0.14978291410757033, 0.1467920227891167] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25055134480863855, 0.17645893515543537, 0.1565692469494434, 0.14978291410757033, 0.1467920227891167, 0.14532841795596768] ***
*** starting iteration: 6; err: [Inf, 0.25055134480863855, 0.17645893515543537, 0.1565692469494434, 0.14978291410757033, 0.1467920227891167, 0.14532841795596768] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25055134480863855, 0.17645893515543537, 0.1565692469494434, 0.14978291410757033, 0.1467920227891167, 0.14532841795596768, 0.14487950712185096] ***
*** finished computation of 7 references, err: [Inf, 0.25055134480863855, 0.17645893515543537, 0.1565692469494434, 0.14978291410757033, 0.1467920227891167, 0.14532841795596768, 0.14487950712185096] ***
*** center 1: selecting labels [1] (freq >= 1) [from [81, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [58, 44, 0]]
** centroid: 2, normalized-entropy: 0.9863676072907089, [(1, 58), (2, 44)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [90, 4, 0]]
** centroid: 3, normalized-entropy: 0.2538784402981617, [(1, 90), (2, 4)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 85, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [72, 21, 0]]
** centroid: 5, normalized-entropy: 0.7706290693639406, [(1, 72), (2, 21)]
*** center 6: selecting labels [1] (freq >= 1) [from [95, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 91, 25]]
** centroid: 7, normalized-entropy: 0.7518972278650765, [(2, 91), (3, 25)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2737418042741593] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2737418042741593, 0.1721249955871758] ***
*** starting iteration: 2; err: [Inf, 0.2737418042741593, 0.1721249955871758] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2737418042741593, 0.1721249955871758, 0.1577195282892856] ***
*** starting iteration: 3; err: [Inf, 0.2737418042741593, 0.1721249955871758, 0.1577195282892856] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2737418042741593, 0.1721249955871758, 0.1577195282892856, 0.1508385838209086] ***
*** starting iteration: 4; err: [Inf, 0.2737418042741593, 0.1721249955871758, 0.1577195282892856, 0.1508385838209086] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2737418042741593, 0.1721249955871758, 0.1577195282892856, 0.1508385838209086, 0.1474535557004376] ***
*** starting iteration: 5; err: [Inf, 0.2737418042741593, 0.1721249955871758, 0.1577195282892856, 0.1508385838209086, 0.1474535557004376] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2737418042741593, 0.1721249955871758, 0.1577195282892856, 0.1508385838209086, 0.1474535557004376, 0.14580391595266462] ***
*** starting iteration: 6; err: [Inf, 0.2737418042741593, 0.1721249955871758, 0.1577195282892856, 0.1508385838209086, 0.1474535557004376, 0.14580391595266462] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2737418042741593, 0.1721249955871758, 0.1577195282892856, 0.1508385838209086, 0.1474535557004376, 0.14580391595266462, 0.14500385795816265] ***
*** finished computation of 7 references, err: [Inf, 0.2737418042741593, 0.1721249955871758, 0.1577195282892856, 0.1508385838209086, 0.1474535557004376, 0.14580391595266462, 0.14500385795816265] ***
*** center 1: selecting labels [1] (freq >= 1) [from [116, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [85, 36, 0]]
** centroid: 2, normalized-entropy: 0.8782390255090747, [(1, 85), (2, 36)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [67, 13, 0]]
** centroid: 3, normalized-entropy: 0.6402569436810504, [(1, 67), (2, 13)]
*** center 4: selecting labels [1] (freq >= 1) [from [70, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [62, 28, 0]]
** centroid: 5, normalized-entropy: 0.8944518845341284, [(1, 62), (2, 28)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [2, 73, 0]]
** centroid: 6, normalized-entropy: 0.1773894531859976, [(1, 2), (2, 73)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 90, 25]]
** centroid: 7, normalized-entropy: 0.7553754125614286, [(2, 90), (3, 25)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20090609227587794] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20090609227587794, 0.16848657510244752] ***
*** starting iteration: 2; err: [Inf, 0.20090609227587794, 0.16848657510244752] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20090609227587794, 0.16848657510244752, 0.16120879572356814] ***
*** starting iteration: 3; err: [Inf, 0.20090609227587794, 0.16848657510244752, 0.16120879572356814] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20090609227587794, 0.16848657510244752, 0.16120879572356814, 0.15771125472601744] ***
*** starting iteration: 4; err: [Inf, 0.20090609227587794, 0.16848657510244752, 0.16120879572356814, 0.15771125472601744] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20090609227587794, 0.16848657510244752, 0.16120879572356814, 0.15771125472601744, 0.1553112802987938] ***
*** starting iteration: 5; err: [Inf, 0.20090609227587794, 0.16848657510244752, 0.16120879572356814, 0.15771125472601744, 0.1553112802987938] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20090609227587794, 0.16848657510244752, 0.16120879572356814, 0.15771125472601744, 0.1553112802987938, 0.1527650835428169] ***
*** starting iteration: 6; err: [Inf, 0.20090609227587794, 0.16848657510244752, 0.16120879572356814, 0.15771125472601744, 0.1553112802987938, 0.1527650835428169] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20090609227587794, 0.16848657510244752, 0.16120879572356814, 0.15771125472601744, 0.1553112802987938, 0.1527650835428169, 0.14999047656944287] ***
*** starting iteration: 7; err: [Inf, 0.20090609227587794, 0.16848657510244752, 0.16120879572356814, 0.15771125472601744, 0.1553112802987938, 0.1527650835428169, 0.14999047656944287] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20090609227587794, 0.16848657510244752, 0.16120879572356814, 0.15771125472601744, 0.1553112802987938, 0.1527650835428169, 0.14999047656944287, 0.14781528363434382] ***
*** starting iteration: 8; err: [Inf, 0.20090609227587794, 0.16848657510244752, 0.16120879572356814, 0.15771125472601744, 0.1553112802987938, 0.1527650835428169, 0.14999047656944287, 0.14781528363434382] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20090609227587794, 0.16848657510244752, 0.16120879572356814, 0.15771125472601744, 0.1553112802987938, 0.1527650835428169, 0.14999047656944287, 0.14781528363434382, 0.14600660359400366] ***
*** starting iteration: 9; err: [Inf, 0.20090609227587794, 0.16848657510244752, 0.16120879572356814, 0.15771125472601744, 0.1553112802987938, 0.1527650835428169, 0.14999047656944287, 0.14781528363434382, 0.14600660359400366] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20090609227587794, 0.16848657510244752, 0.16120879572356814, 0.15771125472601744, 0.1553112802987938, 0.1527650835428169, 0.14999047656944287, 0.14781528363434382, 0.14600660359400366, 0.14450759494208035] ***
*** starting iteration: 10; err: [Inf, 0.20090609227587794, 0.16848657510244752, 0.16120879572356814, 0.15771125472601744, 0.1553112802987938, 0.1527650835428169, 0.14999047656944287, 0.14781528363434382, 0.14600660359400366, 0.14450759494208035] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20090609227587794, 0.16848657510244752, 0.16120879572356814, 0.15771125472601744, 0.1553112802987938, 0.1527650835428169, 0.14999047656944287, 0.14781528363434382, 0.14600660359400366, 0.14450759494208035, 0.14411284342531053] ***
*** finished computation of 7 references, err: [Inf, 0.20090609227587794, 0.16848657510244752, 0.16120879572356814, 0.15771125472601744, 0.1553112802987938, 0.1527650835428169, 0.14999047656944287, 0.14781528363434382, 0.14600660359400366, 0.14450759494208035, 0.14411284342531053] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [42, 49, 0]]
** centroid: 1, normalized-entropy: 0.9957274520849256, [(1, 42), (2, 49)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [106, 3, 0]]
** centroid: 2, normalized-entropy: 0.18181317169561842, [(1, 106), (2, 3)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [60, 32, 0]]
** centroid: 3, normalized-entropy: 0.9321115676166747, [(1, 60), (2, 32)]
*** center 4: selecting labels [1] (freq >= 1) [from [131, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 79, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [75, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 74, 16]]
** centroid: 7, normalized-entropy: 0.6751914401458716, [(2, 74), (3, 16)]
finished with 10 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 13)
[0.9530039021056985, 0.9500008991026955, 0.9400208591825358, 0.9390078701455947, 0.9389898880916845, 0.9270078461695227, 0.9249878621136106, 0.8830267393141645, 0.882981784179389, 0.8799757841674011, 0.8440296584009159, 0.8430346514178849, 0.8060155964347581]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :fft, 0.3, 2) => 0.9530039021056985
finished with 14
iteration 5 finished
*** starting iteration: 1; err: [Inf, 0.42045626843169154] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.42045626843169154, 0.31804623836148027] ***
*** starting iteration: 2; err: [Inf, 0.42045626843169154, 0.31804623836148027] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.42045626843169154, 0.31804623836148027, 0.3007080745100192] ***
*** starting iteration: 3; err: [Inf, 0.42045626843169154, 0.31804623836148027, 0.3007080745100192] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.42045626843169154, 0.31804623836148027, 0.3007080745100192, 0.2977954709102531] ***
*** starting iteration: 4; err: [Inf, 0.42045626843169154, 0.31804623836148027, 0.3007080745100192, 0.2977954709102531] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.42045626843169154, 0.31804623836148027, 0.3007080745100192, 0.2977954709102531, 0.2967842229538494] ***
*** starting iteration: 5; err: [Inf, 0.42045626843169154, 0.31804623836148027, 0.3007080745100192, 0.2977954709102531, 0.2967842229538494] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.42045626843169154, 0.31804623836148027, 0.3007080745100192, 0.2977954709102531, 0.2967842229538494, 0.29663658141250815] ***
*** finished computation of 3 references, err: [Inf, 0.42045626843169154, 0.31804623836148027, 0.3007080745100192, 0.2977954709102531, 0.2967842229538494, 0.29663658141250815] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [243, 9, 0]]
** centroid: 1, normalized-entropy: 0.2222848306856879, [(1, 243), (2, 9)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [153, 57, 0]]
** centroid: 2, normalized-entropy: 0.8435070855739035, [(1, 153), (2, 57)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 179, 25]]
** centroid: 3, normalized-entropy: 0.5366438278799758, [(2, 179), (3, 25)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.4323930437418296] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4323930437418296, 0.3112588664167735] ***
*** starting iteration: 2; err: [Inf, 0.4323930437418296, 0.3112588664167735] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4323930437418296, 0.3112588664167735, 0.30168502834643696] ***
*** starting iteration: 3; err: [Inf, 0.4323930437418296, 0.3112588664167735, 0.30168502834643696] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4323930437418296, 0.3112588664167735, 0.30168502834643696, 0.2984126048550747] ***
*** starting iteration: 4; err: [Inf, 0.4323930437418296, 0.3112588664167735, 0.30168502834643696, 0.2984126048550747] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4323930437418296, 0.3112588664167735, 0.30168502834643696, 0.2984126048550747, 0.297184317312699] ***
*** starting iteration: 5; err: [Inf, 0.4323930437418296, 0.3112588664167735, 0.30168502834643696, 0.2984126048550747, 0.297184317312699] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4323930437418296, 0.3112588664167735, 0.30168502834643696, 0.2984126048550747, 0.297184317312699, 0.29644847581668504] ***
*** finished computation of 3 references, err: [Inf, 0.4323930437418296, 0.3112588664167735, 0.30168502834643696, 0.2984126048550747, 0.297184317312699, 0.29644847581668504] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [247, 11, 0]]
** centroid: 1, normalized-entropy: 0.25424875152237963, [(1, 247), (2, 11)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [152, 41, 0]]
** centroid: 2, normalized-entropy: 0.7461118858029693, [(1, 152), (2, 41)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [3, 188, 25]]
** centroid: 3, normalized-entropy: 0.3912398442784704, [(1, 3), (2, 188), (3, 25)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.33450838647827486] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33450838647827486, 0.29732221212640203] ***
*** starting iteration: 2; err: [Inf, 0.33450838647827486, 0.29732221212640203] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33450838647827486, 0.29732221212640203, 0.29635464966107256] ***
*** finished computation of 3 references, err: [Inf, 0.33450838647827486, 0.29732221212640203, 0.29635464966107256] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [99, 89, 0]]
** centroid: 1, normalized-entropy: 0.9979581030399204, [(1, 99), (2, 89)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [107, 148, 16]]
** centroid: 2, normalized-entropy: 0.7867445486086373, [(1, 107), (2, 148), (3, 16)]
*** center 3: selecting labels [1] (freq >= 1) [from [208, 0, 0]]
finished with 6 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 14)
[0.9530039021056985, 0.9500008991026955, 0.9400208591825358, 0.9390078701455947, 0.9389898880916845, 0.9270078461695227, 0.9269958581335827, 0.9249878621136106, 0.8830267393141645, 0.882981784179389, 0.8799757841674011, 0.8440296584009159, 0.8430346514178849, 0.8060155964347581]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :fft, 0.3, 2) => 0.9530039021056985
finished with 15
iteration 6 finished
*** starting iteration: 1; err: [Inf, 0.2653437630778917] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2653437630778917, 0.21510191954666744] ***
*** finished computation of 7 references, err: [Inf, 0.2653437630778917, 0.21510191954666744] ***
*** center 1: selecting labels [1] (freq >= 1) [from [105, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [79, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 64, 25]]
** centroid: 3, normalized-entropy: 0.8566727035015875, [(2, 64), (3, 25)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [35, 86, 0]]
** centroid: 4, normalized-entropy: 0.8677584893617495, [(1, 35), (2, 86)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [1, 78, 0]]
** centroid: 5, normalized-entropy: 0.09794058271817412, [(1, 1), (2, 78)]
*** center 6: selecting labels [1] (freq >= 1) [from [142, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [34, 17, 0]]
** centroid: 7, normalized-entropy: 0.9182958340544894, [(1, 34), (2, 17)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2377688905902799] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2377688905902799, 0.20047090236011003] ***
*** finished computation of 7 references, err: [Inf, 0.2377688905902799, 0.20047090236011003] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [27, 46, 0]]
** centroid: 1, normalized-entropy: 0.9505668528932193, [(1, 27), (2, 46)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [34, 70, 0]]
** centroid: 2, normalized-entropy: 0.9117517586347538, [(1, 34), (2, 70)]
*** center 3: selecting labels [1] (freq >= 1) [from [47, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [129, 31, 0]]
** centroid: 4, normalized-entropy: 0.7092505850649067, [(1, 129), (2, 31)]
*** center 5: selecting labels [1] (freq >= 1) [from [117, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [48, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 93, 25]]
** centroid: 7, normalized-entropy: 0.7450314037905273, [(2, 93), (3, 25)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.27110633946329665] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27110633946329665, 0.20388764421060412] ***
*** finished computation of 7 references, err: [Inf, 0.27110633946329665, 0.20388764421060412] ***
*** center 1: selecting labels [1] (freq >= 1) [from [75, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 85, 16]]
** centroid: 2, normalized-entropy: 0.6305062394675903, [(2, 85), (3, 16)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [21, 90, 0]]
** centroid: 3, normalized-entropy: 0.699772221773307, [(1, 21), (2, 90)]
*** center 4: selecting labels [1] (freq >= 1) [from [104, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [75, 61, 0]]
** centroid: 5, normalized-entropy: 0.9923424046435224, [(1, 75), (2, 61)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [73, 1, 0]]
** centroid: 6, normalized-entropy: 0.10327508457163559, [(1, 73), (2, 1)]
*** center 7: selecting labels [1] (freq >= 1) [from [66, 0, 0]]
finished with 10 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 15)
[0.9530039021056985, 0.9500008991026955, 0.9400208591825358, 0.9390078701455947, 0.9389898880916845, 0.9270078461695227, 0.9269958581335827, 0.9249878621136106, 0.9170517823212435, 0.8830267393141645, 0.882981784179389, 0.8799757841674011, 0.8440296584009159, 0.8430346514178849, 0.8060155964347581]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :fft, 0.3, 2) => 0.9530039021056985
finished with 15
iteration 7 finished
generating 4 configurations using top 12 configurations, starting with 15)
[0.9530039021056985, 0.9500008991026955, 0.9400208591825358, 0.9390078701455947, 0.9389898880916845, 0.9270078461695227, 0.9269958581335827, 0.9249878621136106, 0.9170517823212435, 0.8830267393141645, 0.882981784179389, 0.8799757841674011, 0.8440296584009159, 0.8430346514178849, 0.8060155964347581]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :fft, 0.3, 2) => 0.9530039021056985
finished with 15
iteration 8 finished
generating 4 configurations using top 12 configurations, starting with 15)
[0.9530039021056985, 0.9500008991026955, 0.9400208591825358, 0.9390078701455947, 0.9389898880916845, 0.9270078461695227, 0.9269958581335827, 0.9249878621136106, 0.9170517823212435, 0.8830267393141645, 0.882981784179389, 0.8799757841674011, 0.8440296584009159, 0.8430346514178849, 0.8060155964347581]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :fft, 0.3, 2) => 0.9530039021056985
finished with 17
iteration 9 finished
*** starting iteration: 1; err: [Inf, 0.39324465265368913] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39324465265368913, 0.25468403655705646] ***
*** starting iteration: 2; err: [Inf, 0.39324465265368913, 0.25468403655705646] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39324465265368913, 0.25468403655705646, 0.24057147222257838] ***
*** starting iteration: 3; err: [Inf, 0.39324465265368913, 0.25468403655705646, 0.24057147222257838] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39324465265368913, 0.25468403655705646, 0.24057147222257838, 0.23787492051351447] ***
*** finished computation of 3 references, err: [Inf, 0.39324465265368913, 0.25468403655705646, 0.24057147222257838, 0.23787492051351447] ***
*** center 1: selecting labels [1] (freq >= 1) [from [198, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [82, 140, 24]]
** centroid: 2, normalized-entropy: 0.8320080446045924, [(1, 82), (2, 140), (3, 24)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [116, 105, 1]]
** centroid: 3, normalized-entropy: 0.6532076772368174, [(1, 116), (2, 105), (3, 1)]
finished with 7 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.30543749835174616] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30543749835174616, 0.2735832501160933] ***
*** starting iteration: 2; err: [Inf, 0.30543749835174616, 0.2735832501160933] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30543749835174616, 0.2735832501160933, 0.24970216028297368] ***
*** starting iteration: 3; err: [Inf, 0.30543749835174616, 0.2735832501160933, 0.24970216028297368] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30543749835174616, 0.2735832501160933, 0.24970216028297368, 0.24023957679472652] ***
*** finished computation of 3 references, err: [Inf, 0.30543749835174616, 0.2735832501160933, 0.24970216028297368, 0.24023957679472652] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [157, 23, 0]]
** centroid: 1, normalized-entropy: 0.5513120820780261, [(1, 157), (2, 23)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [245, 20, 0]]
** centroid: 2, normalized-entropy: 0.3860189005698936, [(1, 245), (2, 20)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 197, 25]]
** centroid: 3, normalized-entropy: 0.5077464376236455, [(2, 197), (3, 25)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.31283858652342517] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31283858652342517, 0.24384734490216114] ***
*** starting iteration: 2; err: [Inf, 0.31283858652342517, 0.24384734490216114] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31283858652342517, 0.24384734490216114, 0.2379597170610746] ***
*** starting iteration: 3; err: [Inf, 0.31283858652342517, 0.24384734490216114, 0.2379597170610746] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31283858652342517, 0.24384734490216114, 0.2379597170610746, 0.2362524083643772] ***
*** finished computation of 3 references, err: [Inf, 0.31283858652342517, 0.24384734490216114, 0.2379597170610746, 0.2362524083643772] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [74, 179, 16]]
** centroid: 1, normalized-entropy: 0.7226861780341116, [(1, 74), (2, 179), (3, 16)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [119, 58, 0]]
** centroid: 2, normalized-entropy: 0.9125422079867012, [(1, 119), (2, 58)]
*** center 3: selecting labels [1] (freq >= 1) [from [221, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4016070858807535] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4016070858807535, 0.30913576040019813] ***
*** starting iteration: 2; err: [Inf, 0.4016070858807535, 0.30913576040019813] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4016070858807535, 0.30913576040019813, 0.3003781395698632] ***
*** starting iteration: 3; err: [Inf, 0.4016070858807535, 0.30913576040019813, 0.3003781395698632] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4016070858807535, 0.30913576040019813, 0.3003781395698632, 0.29742525071856585] ***
*** finished computation of 3 references, err: [Inf, 0.4016070858807535, 0.30913576040019813, 0.3003781395698632, 0.29742525071856585] ***
*** center 1: selecting labels [1] (freq >= 1) [from [218, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [64, 146, 25]]
** centroid: 2, normalized-entropy: 0.8085853214928185, [(1, 64), (2, 146), (3, 25)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [114, 99, 0]]
** centroid: 3, normalized-entropy: 0.9964196342978481, [(1, 114), (2, 99)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.32233364966654704] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.32233364966654704, 0.300584400635397] ***
*** starting iteration: 2; err: [Inf, 0.32233364966654704, 0.300584400635397] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.32233364966654704, 0.300584400635397, 0.2968606321250034] ***
*** starting iteration: 3; err: [Inf, 0.32233364966654704, 0.300584400635397, 0.2968606321250034] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.32233364966654704, 0.300584400635397, 0.2968606321250034, 0.2960728140330749] ***
*** finished computation of 3 references, err: [Inf, 0.32233364966654704, 0.300584400635397, 0.2968606321250034, 0.2960728140330749] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [4, 190, 25]]
** centroid: 1, normalized-entropy: 0.40422544506297825, [(1, 4), (2, 190), (3, 25)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [152, 42, 0]]
** centroid: 2, normalized-entropy: 0.7537153483720096, [(1, 152), (2, 42)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [246, 8, 0]]
** centroid: 3, normalized-entropy: 0.20183992963258704, [(1, 246), (2, 8)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4025059095451209] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4025059095451209, 0.3033325652406178] ***
*** starting iteration: 2; err: [Inf, 0.4025059095451209, 0.3033325652406178] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4025059095451209, 0.3033325652406178, 0.3009202041910372] ***
*** starting iteration: 3; err: [Inf, 0.4025059095451209, 0.3033325652406178, 0.3009202041910372] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4025059095451209, 0.3033325652406178, 0.3009202041910372, 0.30074025524397574] ***
*** finished computation of 3 references, err: [Inf, 0.4025059095451209, 0.3033325652406178, 0.3009202041910372, 0.30074025524397574] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [155, 31, 0]]
** centroid: 1, normalized-entropy: 0.6500224216483541, [(1, 155), (2, 31)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 191, 16]]
** centroid: 2, normalized-entropy: 0.39257436737938334, [(2, 191), (3, 16)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [259, 15, 0]]
** centroid: 3, normalized-entropy: 0.3062192893658362, [(1, 259), (2, 15)]
finished with 6 centroids; started with 3
[ Info: ========== BEST MODEL ==========
*** starting iteration: 1; err: [Inf, 0.24269888398982584] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24269888398982584, 0.19136588151287287] ***
*** starting iteration: 2; err: [Inf, 0.24269888398982584, 0.19136588151287287] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24269888398982584, 0.19136588151287287, 0.1877356629149872] ***
*** starting iteration: 3; err: [Inf, 0.24269888398982584, 0.19136588151287287, 0.1877356629149872] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24269888398982584, 0.19136588151287287, 0.1877356629149872, 0.1874377869423479] ***
*** finished computation of 7 references, err: [Inf, 0.24269888398982584, 0.19136588151287287, 0.1877356629149872, 0.1874377869423479] ***
*** center 1: selecting labels [1] (freq >= 2) [from [147, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 69, 33]]
** centroid: 2, normalized-entropy: 0.9081783472997053, [(2, 69), (3, 33)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [169, 15, 0]]
** centroid: 3, normalized-entropy: 0.40751856656887747, [(1, 169), (2, 15)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [128, 8, 0]]
** centroid: 4, normalized-entropy: 0.32275695889739825, [(1, 128), (2, 8)]
*** center 5: selecting labels [1] (freq >= 2) [from [157, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [2, 131, 0]]
** centroid: 6, normalized-entropy: 0.11258759940039273, [(1, 2), (2, 131)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [3, 138, 0]]
** centroid: 7, normalized-entropy: 0.14854949043034832, [(1, 3), (2, 138)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23870077296812087] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23870077296812087, 0.19263667454756797] ***
*** starting iteration: 2; err: [Inf, 0.23870077296812087, 0.19263667454756797] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23870077296812087, 0.19263667454756797, 0.1868377622058615] ***
*** starting iteration: 3; err: [Inf, 0.23870077296812087, 0.19263667454756797, 0.1868377622058615] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23870077296812087, 0.19263667454756797, 0.1868377622058615, 0.1861959919286892] ***
*** finished computation of 7 references, err: [Inf, 0.23870077296812087, 0.19263667454756797, 0.1868377622058615, 0.1861959919286892] ***
*** center 1: selecting labels [1] (freq >= 2) [from [86, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 59, 13]]
** centroid: 2, normalized-entropy: 0.6812908868842175, [(2, 59), (3, 13)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [44, 22, 0]]
** centroid: 3, normalized-entropy: 0.9182958340544894, [(1, 44), (2, 22)]
*** center 4: selecting labels [1] (freq >= 2) [from [57, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [21, 51, 0]]
** centroid: 5, normalized-entropy: 0.8708644692353648, [(1, 21), (2, 51)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [38, 38, 0]]
** centroid: 6, normalized-entropy: 1.0, [(1, 38), (2, 38)]
*** center 7: selecting labels [1] (freq >= 2) [from [71, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2466397223439999] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2466397223439999, 0.18896734639257193] ***
*** starting iteration: 2; err: [Inf, 0.2466397223439999, 0.18896734639257193] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2466397223439999, 0.18896734639257193, 0.18639978104364127] ***
*** starting iteration: 3; err: [Inf, 0.2466397223439999, 0.18896734639257193, 0.18639978104364127] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2466397223439999, 0.18896734639257193, 0.18639978104364127, 0.1856442649755627] ***
*** finished computation of 7 references, err: [Inf, 0.2466397223439999, 0.18896734639257193, 0.18639978104364127, 0.1856442649755627] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [72, 4, 0]]
** centroid: 1, normalized-entropy: 0.2974722489192896, [(1, 72), (2, 4)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [86, 6, 0]]
** centroid: 2, normalized-entropy: 0.3478169135710632, [(1, 86), (2, 6)]
*** center 3: selecting labels [1] (freq >= 2) [from [80, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 31, 17]]
** centroid: 4, normalized-entropy: 0.9377342939868042, [(2, 31), (3, 17)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [62, 7, 0]]
** centroid: 5, normalized-entropy: 0.47357292491745173, [(1, 62), (2, 7)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [3, 66, 0]]
** centroid: 6, normalized-entropy: 0.2580186686648155, [(1, 3), (2, 66)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 66, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23139144372195006] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23139144372195006, 0.19565118081867694] ***
*** starting iteration: 2; err: [Inf, 0.23139144372195006, 0.19565118081867694] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23139144372195006, 0.19565118081867694, 0.19014235641248525] ***
*** starting iteration: 3; err: [Inf, 0.23139144372195006, 0.19565118081867694, 0.19014235641248525] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23139144372195006, 0.19565118081867694, 0.19014235641248525, 0.189077962718904] ***
*** starting iteration: 4; err: [Inf, 0.23139144372195006, 0.19565118081867694, 0.19014235641248525, 0.189077962718904] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23139144372195006, 0.19565118081867694, 0.19014235641248525, 0.189077962718904, 0.18874461671337486] ***
*** finished computation of 7 references, err: [Inf, 0.23139144372195006, 0.19565118081867694, 0.19014235641248525, 0.189077962718904, 0.18874461671337486] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 51, 20]]
** centroid: 1, normalized-entropy: 0.8577435372751958, [(2, 51), (3, 20)]
*** center 2: selecting labels [1] (freq >= 2) [from [96, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [49, 16, 0]]
** centroid: 3, normalized-entropy: 0.8051250074646822, [(1, 49), (2, 16)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [76, 20, 0]]
** centroid: 4, normalized-entropy: 0.7382848661434506, [(1, 76), (2, 20)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [43, 22, 0]]
** centroid: 5, normalized-entropy: 0.9233388889944429, [(1, 43), (2, 22)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 60, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [47, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2302979817292653] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2302979817292653, 0.18883099090121686] ***
*** starting iteration: 2; err: [Inf, 0.2302979817292653, 0.18883099090121686] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2302979817292653, 0.18883099090121686, 0.18597710147500038] ***
*** starting iteration: 3; err: [Inf, 0.2302979817292653, 0.18883099090121686, 0.18597710147500038] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2302979817292653, 0.18883099090121686, 0.18597710147500038, 0.1851724117323756] ***
*** finished computation of 7 references, err: [Inf, 0.2302979817292653, 0.18883099090121686, 0.18597710147500038, 0.1851724117323756] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 77, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [80, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [55, 21, 0]]
** centroid: 3, normalized-entropy: 0.8503821170987139, [(1, 55), (2, 21)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [45, 23, 0]]
** centroid: 4, normalized-entropy: 0.9231199835423002, [(1, 45), (2, 23)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [71, 6, 0]]
** centroid: 5, normalized-entropy: 0.39481484603049416, [(1, 71), (2, 6)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 42, 18]]
** centroid: 6, normalized-entropy: 0.8812908992306927, [(2, 42), (3, 18)]
*** center 7: selecting labels [1] (freq >= 2) [from [61, 1, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22227886539697647] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22227886539697647, 0.19063131226599217] ***
*** starting iteration: 2; err: [Inf, 0.22227886539697647, 0.19063131226599217] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22227886539697647, 0.19063131226599217, 0.1880478007234633] ***
*** starting iteration: 3; err: [Inf, 0.22227886539697647, 0.19063131226599217, 0.1880478007234633] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22227886539697647, 0.19063131226599217, 0.1880478007234633, 0.18763834252394737] ***
*** finished computation of 7 references, err: [Inf, 0.22227886539697647, 0.19063131226599217, 0.1880478007234633, 0.18763834252394737] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [16, 66, 0]]
** centroid: 1, normalized-entropy: 0.7120640548905481, [(1, 16), (2, 66)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [42, 12, 0]]
** centroid: 2, normalized-entropy: 0.7642045065086204, [(1, 42), (2, 12)]
*** center 3: selecting labels [1] (freq >= 2) [from [81, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 33, 16]]
** centroid: 4, normalized-entropy: 0.9113423759758414, [(2, 33), (3, 16)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [4, 69, 0]]
** centroid: 5, normalized-entropy: 0.306424729870515, [(1, 4), (2, 69)]
*** center 6: selecting labels [1] (freq >= 2) [from [66, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [95, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2200346215069294] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2200346215069294, 0.18861427526548505] ***
*** starting iteration: 2; err: [Inf, 0.2200346215069294, 0.18861427526548505] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2200346215069294, 0.18861427526548505, 0.1869869149532169] ***
*** starting iteration: 3; err: [Inf, 0.2200346215069294, 0.18861427526548505, 0.1869869149532169] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2200346215069294, 0.18861427526548505, 0.1869869149532169, 0.1852508844230324] ***
*** starting iteration: 4; err: [Inf, 0.2200346215069294, 0.18861427526548505, 0.1869869149532169, 0.1852508844230324] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2200346215069294, 0.18861427526548505, 0.1869869149532169, 0.1852508844230324, 0.18366988638415932] ***
*** starting iteration: 5; err: [Inf, 0.2200346215069294, 0.18861427526548505, 0.1869869149532169, 0.1852508844230324, 0.18366988638415932] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2200346215069294, 0.18861427526548505, 0.1869869149532169, 0.1852508844230324, 0.18366988638415932, 0.1830510401725769] ***
*** finished computation of 7 references, err: [Inf, 0.2200346215069294, 0.18861427526548505, 0.1869869149532169, 0.1852508844230324, 0.18366988638415932, 0.1830510401725769] ***
*** center 1: selecting labels [1] (freq >= 2) [from [62, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 52, 17]]
** centroid: 2, normalized-entropy: 0.8054848387405957, [(2, 52), (3, 17)]
*** center 3: selecting labels [1] (freq >= 2) [from [84, 1, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [29, 46, 0]]
** centroid: 4, normalized-entropy: 0.9626147059982517, [(1, 29), (2, 46)]
*** center 5: selecting labels [1] (freq >= 2) [from [78, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [46, 19, 0]]
** centroid: 6, normalized-entropy: 0.871683617119982, [(1, 46), (2, 19)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [5, 61, 0]]
** centroid: 7, normalized-entropy: 0.38705142139219795, [(1, 5), (2, 61)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2500948641058058] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2500948641058058, 0.19450955715589224] ***
*** starting iteration: 2; err: [Inf, 0.2500948641058058, 0.19450955715589224] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2500948641058058, 0.19450955715589224, 0.19003373428806664] ***
*** starting iteration: 3; err: [Inf, 0.2500948641058058, 0.19450955715589224, 0.19003373428806664] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2500948641058058, 0.19450955715589224, 0.19003373428806664, 0.18924795818887652] ***
*** finished computation of 7 references, err: [Inf, 0.2500948641058058, 0.19450955715589224, 0.19003373428806664, 0.18924795818887652] ***
*** center 1: selecting labels [1] (freq >= 2) [from [72, 1, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 33, 15]]
** centroid: 2, normalized-entropy: 0.8960382325345574, [(2, 33), (3, 15)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [85, 4, 0]]
** centroid: 3, normalized-entropy: 0.2645173683629748, [(1, 85), (2, 4)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [64, 6, 0]]
** centroid: 4, normalized-entropy: 0.4220005168831531, [(1, 64), (2, 6)]
*** center 5: selecting labels [1] (freq >= 2) [from [79, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [1, 75, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [2, 63, 0]]
** centroid: 7, normalized-entropy: 0.19823496409776642, [(1, 2), (2, 63)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22944729394465685] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22944729394465685, 0.19269963155128061] ***
*** starting iteration: 2; err: [Inf, 0.22944729394465685, 0.19269963155128061] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22944729394465685, 0.19269963155128061, 0.1879040904827416] ***
*** starting iteration: 3; err: [Inf, 0.22944729394465685, 0.19269963155128061, 0.1879040904827416] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22944729394465685, 0.19269963155128061, 0.1879040904827416, 0.18710045897960662] ***
*** finished computation of 7 references, err: [Inf, 0.22944729394465685, 0.19269963155128061, 0.1879040904827416, 0.18710045897960662] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [2, 56, 0]]
** centroid: 1, normalized-entropy: 0.21639693245126485, [(1, 2), (2, 56)]
*** center 2: selecting labels [1] (freq >= 2) [from [90, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [71, 10, 0]]
** centroid: 3, normalized-entropy: 0.5392163432092415, [(1, 71), (2, 10)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 35, 13]]
** centroid: 4, normalized-entropy: 0.842657877202239, [(2, 35), (3, 13)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [65, 4, 0]]
** centroid: 5, normalized-entropy: 0.3193373865339728, [(1, 65), (2, 4)]
*** center 6: selecting labels [1] (freq >= 2) [from [79, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [3, 72, 0]]
** centroid: 7, normalized-entropy: 0.24229218908241482, [(1, 3), (2, 72)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2172274830993265] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2172274830993265, 0.19025825803354382] ***
*** starting iteration: 2; err: [Inf, 0.2172274830993265, 0.19025825803354382] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2172274830993265, 0.19025825803354382, 0.1884654032960534] ***
*** starting iteration: 3; err: [Inf, 0.2172274830993265, 0.19025825803354382, 0.1884654032960534] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2172274830993265, 0.19025825803354382, 0.1884654032960534, 0.1873438487239182] ***
*** starting iteration: 4; err: [Inf, 0.2172274830993265, 0.19025825803354382, 0.1884654032960534, 0.1873438487239182] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2172274830993265, 0.19025825803354382, 0.1884654032960534, 0.1873438487239182, 0.18630138861387968] ***
*** starting iteration: 5; err: [Inf, 0.2172274830993265, 0.19025825803354382, 0.1884654032960534, 0.1873438487239182, 0.18630138861387968] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2172274830993265, 0.19025825803354382, 0.1884654032960534, 0.1873438487239182, 0.18630138861387968, 0.18561384131759406] ***
*** finished computation of 7 references, err: [Inf, 0.2172274830993265, 0.19025825803354382, 0.1884654032960534, 0.1873438487239182, 0.18630138861387968, 0.18561384131759406] ***
*** center 1: selecting labels [1] (freq >= 2) [from [59, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 50, 21]]
** centroid: 2, normalized-entropy: 0.8760643678555242, [(2, 50), (3, 21)]
*** center 3: selecting labels [1] (freq >= 2) [from [72, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [44, 26, 0]]
** centroid: 4, normalized-entropy: 0.9517626756348312, [(1, 44), (2, 26)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [36, 54, 0]]
** centroid: 5, normalized-entropy: 0.9709505944546688, [(1, 36), (2, 54)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [2, 56, 0]]
** centroid: 6, normalized-entropy: 0.21639693245126485, [(1, 2), (2, 56)]
*** center 7: selecting labels [1] (freq >= 2) [from [80, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24263775689667091] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24263775689667091, 0.19133344965986906] ***
*** starting iteration: 2; err: [Inf, 0.24263775689667091, 0.19133344965986906] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24263775689667091, 0.19133344965986906, 0.18880743020772933] ***
*** starting iteration: 3; err: [Inf, 0.24263775689667091, 0.19133344965986906, 0.18880743020772933] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24263775689667091, 0.19133344965986906, 0.18880743020772933, 0.1889818058302626] ***
*** finished computation of 7 references, err: [Inf, 0.24263775689667091, 0.19133344965986906, 0.18880743020772933, 0.1889818058302626] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 64, 18]]
** centroid: 1, normalized-entropy: 0.7592757847892834, [(2, 64), (3, 18)]
*** center 2: selecting labels [1] (freq >= 2) [from [92, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [57, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [54, 24, 0]]
** centroid: 4, normalized-entropy: 0.8904916402194913, [(1, 54), (2, 24)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [43, 17, 0]]
** centroid: 5, normalized-entropy: 0.8599530497177523, [(1, 43), (2, 17)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [49, 11, 0]]
** centroid: 6, normalized-entropy: 0.6873150928309273, [(1, 49), (2, 11)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 71, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22079957888275384] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22079957888275384, 0.18806275506783277] ***
*** starting iteration: 2; err: [Inf, 0.22079957888275384, 0.18806275506783277] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22079957888275384, 0.18806275506783277, 0.18495365818217396] ***
*** starting iteration: 3; err: [Inf, 0.22079957888275384, 0.18806275506783277, 0.18495365818217396] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22079957888275384, 0.18806275506783277, 0.18495365818217396, 0.1833607433848083] ***
*** starting iteration: 4; err: [Inf, 0.22079957888275384, 0.18806275506783277, 0.18495365818217396, 0.1833607433848083] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22079957888275384, 0.18806275506783277, 0.18495365818217396, 0.1833607433848083, 0.18278697443008424] ***
*** finished computation of 7 references, err: [Inf, 0.22079957888275384, 0.18806275506783277, 0.18495365818217396, 0.1833607433848083, 0.18278697443008424] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [2, 60, 0]]
** centroid: 1, normalized-entropy: 0.2055925081850832, [(1, 2), (2, 60)]
*** center 2: selecting labels [1] (freq >= 2) [from [84, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [44, 28, 0]]
** centroid: 3, normalized-entropy: 0.9640787648082293, [(1, 44), (2, 28)]
*** center 4: selecting labels [1] (freq >= 2) [from [86, 1, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [38, 33, 0]]
** centroid: 5, normalized-entropy: 0.9964196342978481, [(1, 38), (2, 33)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 57, 18]]
** centroid: 6, normalized-entropy: 0.7950402793845225, [(2, 57), (3, 18)]
*** center 7: selecting labels [1] (freq >= 2) [from [49, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2547008490301669] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2547008490301669, 0.1945474547687918] ***
*** starting iteration: 2; err: [Inf, 0.2547008490301669, 0.1945474547687918] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2547008490301669, 0.1945474547687918, 0.18799072813987733] ***
*** starting iteration: 3; err: [Inf, 0.2547008490301669, 0.1945474547687918, 0.18799072813987733] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2547008490301669, 0.1945474547687918, 0.18799072813987733, 0.1861248948145658] ***
*** starting iteration: 4; err: [Inf, 0.2547008490301669, 0.1945474547687918, 0.18799072813987733, 0.1861248948145658] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2547008490301669, 0.1945474547687918, 0.18799072813987733, 0.1861248948145658, 0.18565401355922223] ***
*** finished computation of 7 references, err: [Inf, 0.2547008490301669, 0.1945474547687918, 0.18799072813987733, 0.1861248948145658, 0.18565401355922223] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [56, 20, 0]]
** centroid: 1, normalized-entropy: 0.8314743880097292, [(1, 56), (2, 20)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 67, 14]]
** centroid: 2, normalized-entropy: 0.6641593279528072, [(2, 67), (3, 14)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [37, 16, 0]]
** centroid: 3, normalized-entropy: 0.8835850861052531, [(1, 37), (2, 16)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [63, 23, 0]]
** centroid: 4, normalized-entropy: 0.8377698690066789, [(1, 63), (2, 23)]
*** center 5: selecting labels [1] (freq >= 2) [from [86, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 64, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [54, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22914771635271608] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22914771635271608, 0.18503564197570085] ***
*** starting iteration: 2; err: [Inf, 0.22914771635271608, 0.18503564197570085] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22914771635271608, 0.18503564197570085, 0.18271865252964198] ***
*** starting iteration: 3; err: [Inf, 0.22914771635271608, 0.18503564197570085, 0.18271865252964198] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22914771635271608, 0.18503564197570085, 0.18271865252964198, 0.18231450637150556] ***
*** finished computation of 7 references, err: [Inf, 0.22914771635271608, 0.18503564197570085, 0.18271865252964198, 0.18231450637150556] ***
*** center 1: selecting labels [1] (freq >= 2) [from [92, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 57, 11]]
** centroid: 2, normalized-entropy: 0.6385146263620961, [(2, 57), (3, 11)]
*** center 3: selecting labels [1] (freq >= 2) [from [59, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [66, 29, 0]]
** centroid: 4, normalized-entropy: 0.8876297058429742, [(1, 66), (2, 29)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [30, 50, 0]]
** centroid: 5, normalized-entropy: 0.954434002924965, [(1, 30), (2, 50)]
*** center 6: selecting labels [1] (freq >= 2) [from [58, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [4, 44, 0]]
** centroid: 7, normalized-entropy: 0.4138168503036336, [(1, 4), (2, 44)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24512977695837618] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24512977695837618, 0.1919792293459177] ***
*** starting iteration: 2; err: [Inf, 0.24512977695837618, 0.1919792293459177] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24512977695837618, 0.1919792293459177, 0.18783065147465094] ***
*** starting iteration: 3; err: [Inf, 0.24512977695837618, 0.1919792293459177, 0.18783065147465094] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24512977695837618, 0.1919792293459177, 0.18783065147465094, 0.18672983816079797] ***
*** starting iteration: 4; err: [Inf, 0.24512977695837618, 0.1919792293459177, 0.18783065147465094, 0.18672983816079797] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24512977695837618, 0.1919792293459177, 0.18783065147465094, 0.18672983816079797, 0.18579986244812607] ***
*** finished computation of 7 references, err: [Inf, 0.24512977695837618, 0.1919792293459177, 0.18783065147465094, 0.18672983816079797, 0.18579986244812607] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [60, 14, 0]]
** centroid: 1, normalized-entropy: 0.699772221773307, [(1, 60), (2, 14)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [52, 6, 0]]
** centroid: 2, normalized-entropy: 0.47983202361612853, [(1, 52), (2, 6)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 58, 15]]
** centroid: 3, normalized-entropy: 0.7327525499549903, [(2, 58), (3, 15)]
*** center 4: selecting labels [1] (freq >= 2) [from [84, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [38, 33, 0]]
** centroid: 5, normalized-entropy: 0.9964196342978481, [(1, 38), (2, 33)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [11, 64, 0]]
** centroid: 6, normalized-entropy: 0.6014353864290773, [(1, 11), (2, 64)]
*** center 7: selecting labels [1] (freq >= 2) [from [65, 0, 0]]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22257804108411075] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22257804108411075, 0.1904031877522357] ***
*** starting iteration: 2; err: [Inf, 0.22257804108411075, 0.1904031877522357] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22257804108411075, 0.1904031877522357, 0.1865818545683287] ***
*** starting iteration: 3; err: [Inf, 0.22257804108411075, 0.1904031877522357, 0.1865818545683287] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22257804108411075, 0.1904031877522357, 0.1865818545683287, 0.18599854853656142] ***
*** finished computation of 7 references, err: [Inf, 0.22257804108411075, 0.1904031877522357, 0.1865818545683287, 0.18599854853656142] ***
*** center 1: selecting labels [1] (freq >= 2) [from [110, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 58, 11]]
** centroid: 2, normalized-entropy: 0.6329208984823799, [(2, 58), (3, 11)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [37, 3, 0]]
** centroid: 3, normalized-entropy: 0.3843115441264972, [(1, 37), (2, 3)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [67, 26, 0]]
** centroid: 4, normalized-entropy: 0.8548640967818041, [(1, 67), (2, 26)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [13, 67, 0]]
** centroid: 5, normalized-entropy: 0.6402569436810504, [(1, 13), (2, 67)]
*** center 6: selecting labels [1] (freq >= 2) [from [60, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [11, 37, 0]]
** centroid: 7, normalized-entropy: 0.7765557854444601, [(1, 11), (2, 37)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2265964092183858] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2265964092183858, 0.19447160184010864] ***
*** starting iteration: 2; err: [Inf, 0.2265964092183858, 0.19447160184010864] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2265964092183858, 0.19447160184010864, 0.19013595384731888] ***
*** starting iteration: 3; err: [Inf, 0.2265964092183858, 0.19447160184010864, 0.19013595384731888] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2265964092183858, 0.19447160184010864, 0.19013595384731888, 0.18842527398839592] ***
*** starting iteration: 4; err: [Inf, 0.2265964092183858, 0.19447160184010864, 0.19013595384731888, 0.18842527398839592] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2265964092183858, 0.19447160184010864, 0.19013595384731888, 0.18842527398839592, 0.18814989754371345] ***
*** finished computation of 7 references, err: [Inf, 0.2265964092183858, 0.19447160184010864, 0.19013595384731888, 0.18842527398839592, 0.18814989754371345] ***
*** center 1: selecting labels [1] (freq >= 2) [from [90, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 45, 21]]
** centroid: 2, normalized-entropy: 0.9023932827949788, [(2, 45), (3, 21)]
*** center 3: selecting labels [1] (freq >= 2) [from [55, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [62, 27, 0]]
** centroid: 4, normalized-entropy: 0.8853723770068483, [(1, 62), (2, 27)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [32, 59, 0]]
** centroid: 5, normalized-entropy: 0.9355315642388212, [(1, 32), (2, 59)]
*** center 6: selecting labels [1] (freq >= 2) [from [62, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [1, 46, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24344171883910895] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24344171883910895, 0.19418913635239005] ***
*** starting iteration: 2; err: [Inf, 0.24344171883910895, 0.19418913635239005] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24344171883910895, 0.19418913635239005, 0.18938743779808284] ***
*** starting iteration: 3; err: [Inf, 0.24344171883910895, 0.19418913635239005, 0.18938743779808284] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24344171883910895, 0.19418913635239005, 0.18938743779808284, 0.18845434394013136] ***
*** finished computation of 7 references, err: [Inf, 0.24344171883910895, 0.19418913635239005, 0.18938743779808284, 0.18845434394013136] ***
*** center 1: selecting labels [1] (freq >= 2) [from [79, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 45, 14]]
** centroid: 2, normalized-entropy: 0.7905013842153699, [(2, 45), (3, 14)]
*** center 3: selecting labels [1] (freq >= 2) [from [87, 1, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [72, 2, 0]]
** centroid: 4, normalized-entropy: 0.1792560669283214, [(1, 72), (2, 2)]
*** center 5: selecting labels [1] (freq >= 2) [from [68, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 69, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [2, 61, 0]]
** centroid: 7, normalized-entropy: 0.20307392998664567, [(1, 2), (2, 61)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24448594069294632] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24448594069294632, 0.19986890044622124] ***
*** starting iteration: 2; err: [Inf, 0.24448594069294632, 0.19986890044622124] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24448594069294632, 0.19986890044622124, 0.1948365883966908] ***
*** starting iteration: 3; err: [Inf, 0.24448594069294632, 0.19986890044622124, 0.1948365883966908] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24448594069294632, 0.19986890044622124, 0.1948365883966908, 0.19334985223785042] ***
*** starting iteration: 4; err: [Inf, 0.24448594069294632, 0.19986890044622124, 0.1948365883966908, 0.19334985223785042] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24448594069294632, 0.19986890044622124, 0.1948365883966908, 0.19334985223785042, 0.19247049755044282] ***
*** finished computation of 7 references, err: [Inf, 0.24448594069294632, 0.19986890044622124, 0.1948365883966908, 0.19334985223785042, 0.19247049755044282] ***
*** center 1: selecting labels [1] (freq >= 2) [from [85, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [52, 21, 0]]
** centroid: 2, normalized-entropy: 0.8656939941993219, [(1, 52), (2, 21)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 41, 20]]
** centroid: 3, normalized-entropy: 0.9127341558073343, [(2, 41), (3, 20)]
*** center 4: selecting labels [1] (freq >= 2) [from [77, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [70, 5, 0]]
** centroid: 5, normalized-entropy: 0.3533593350214213, [(1, 70), (2, 5)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 66, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [10, 53, 0]]
** centroid: 7, normalized-entropy: 0.6312630180916119, [(1, 10), (2, 53)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23219663891475648] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23219663891475648, 0.18368518560286612] ***
*** starting iteration: 2; err: [Inf, 0.23219663891475648, 0.18368518560286612] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23219663891475648, 0.18368518560286612, 0.18270025210641325] ***
*** finished computation of 7 references, err: [Inf, 0.23219663891475648, 0.18368518560286612, 0.18270025210641325] ***
*** center 1: selecting labels [1] (freq >= 2) [from [90, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 40, 20]]
** centroid: 2, normalized-entropy: 0.9182958340544894, [(2, 40), (3, 20)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [40, 29, 0]]
** centroid: 3, normalized-entropy: 0.9815886212101388, [(1, 40), (2, 29)]
*** center 4: selecting labels [1] (freq >= 2) [from [74, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [22, 61, 0]]
** centroid: 5, normalized-entropy: 0.8342867421739538, [(1, 22), (2, 61)]
*** center 6: selecting labels [1] (freq >= 2) [from [71, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [7, 46, 0]]
** centroid: 7, normalized-entropy: 0.5631028237513912, [(1, 7), (2, 46)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22414503266662358] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22414503266662358, 0.18794416067772546] ***
*** starting iteration: 2; err: [Inf, 0.22414503266662358, 0.18794416067772546] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22414503266662358, 0.18794416067772546, 0.18407856516959145] ***
*** starting iteration: 3; err: [Inf, 0.22414503266662358, 0.18794416067772546, 0.18407856516959145] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22414503266662358, 0.18794416067772546, 0.18407856516959145, 0.18200342260301114] ***
*** starting iteration: 4; err: [Inf, 0.22414503266662358, 0.18794416067772546, 0.18407856516959145, 0.18200342260301114] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22414503266662358, 0.18794416067772546, 0.18407856516959145, 0.18200342260301114, 0.18103488682303578] ***
*** finished computation of 7 references, err: [Inf, 0.22414503266662358, 0.18794416067772546, 0.18407856516959145, 0.18200342260301114, 0.18103488682303578] ***
*** center 1: selecting labels [1] (freq >= 2) [from [77, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [63, 16, 0]]
** centroid: 2, normalized-entropy: 0.7269625813353975, [(1, 63), (2, 16)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 36, 13]]
** centroid: 3, normalized-entropy: 0.834648285181383, [(2, 36), (3, 13)]
*** center 4: selecting labels [1] (freq >= 2) [from [77, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [77, 5, 0]]
** centroid: 5, normalized-entropy: 0.3313056130577883, [(1, 77), (2, 5)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 59, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [5, 72, 0]]
** centroid: 7, normalized-entropy: 0.34673146824966367, [(1, 5), (2, 72)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2295407628417015] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2295407628417015, 0.19568936859816313] ***
*** starting iteration: 2; err: [Inf, 0.2295407628417015, 0.19568936859816313] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2295407628417015, 0.19568936859816313, 0.18821188300196082] ***
*** starting iteration: 3; err: [Inf, 0.2295407628417015, 0.19568936859816313, 0.18821188300196082] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2295407628417015, 0.19568936859816313, 0.18821188300196082, 0.18587459507957102] ***
*** starting iteration: 4; err: [Inf, 0.2295407628417015, 0.19568936859816313, 0.18821188300196082, 0.18587459507957102] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2295407628417015, 0.19568936859816313, 0.18821188300196082, 0.18587459507957102, 0.18452123577520252] ***
*** starting iteration: 5; err: [Inf, 0.2295407628417015, 0.19568936859816313, 0.18821188300196082, 0.18587459507957102, 0.18452123577520252] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2295407628417015, 0.19568936859816313, 0.18821188300196082, 0.18587459507957102, 0.18452123577520252, 0.18339196136035024] ***
*** starting iteration: 6; err: [Inf, 0.2295407628417015, 0.19568936859816313, 0.18821188300196082, 0.18587459507957102, 0.18452123577520252, 0.18339196136035024] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2295407628417015, 0.19568936859816313, 0.18821188300196082, 0.18587459507957102, 0.18452123577520252, 0.18339196136035024, 0.18255103339999915] ***
*** finished computation of 7 references, err: [Inf, 0.2295407628417015, 0.19568936859816313, 0.18821188300196082, 0.18587459507957102, 0.18452123577520252, 0.18339196136035024, 0.18255103339999915] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [49, 17, 0]]
** centroid: 1, normalized-entropy: 0.8230660790114689, [(1, 49), (2, 17)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [47, 29, 0]]
** centroid: 2, normalized-entropy: 0.9591495543968941, [(1, 47), (2, 29)]
*** center 3: selecting labels [1] (freq >= 2) [from [61, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 55, 14]]
** centroid: 4, normalized-entropy: 0.7276874545656657, [(2, 55), (3, 14)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [68, 4, 0]]
** centroid: 5, normalized-entropy: 0.3095434291503252, [(1, 68), (2, 4)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 83, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [73, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23374410707689822] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23374410707689822, 0.18619518277328462] ***
*** starting iteration: 2; err: [Inf, 0.23374410707689822, 0.18619518277328462] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23374410707689822, 0.18619518277328462, 0.18410212969779968] ***
*** starting iteration: 3; err: [Inf, 0.23374410707689822, 0.18619518277328462, 0.18410212969779968] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23374410707689822, 0.18619518277328462, 0.18410212969779968, 0.18403538380004467] ***
*** finished computation of 7 references, err: [Inf, 0.23374410707689822, 0.18619518277328462, 0.18410212969779968, 0.18403538380004467] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [2, 69, 0]]
** centroid: 1, normalized-entropy: 0.18512476010054582, [(1, 2), (2, 69)]
*** center 2: selecting labels [1] (freq >= 2) [from [77, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [46, 42, 0]]
** centroid: 3, normalized-entropy: 0.9985090989176322, [(1, 46), (2, 42)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [66, 14, 0]]
** centroid: 4, normalized-entropy: 0.6690158350565576, [(1, 66), (2, 14)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 51, 16]]
** centroid: 5, normalized-entropy: 0.7930490047779772, [(2, 51), (3, 16)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [55, 4, 0]]
** centroid: 6, normalized-entropy: 0.3576467062456333, [(1, 55), (2, 4)]
*** center 7: selecting labels [1] (freq >= 2) [from [58, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24968826432898641] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24968826432898641, 0.19234405737370253] ***
*** starting iteration: 2; err: [Inf, 0.24968826432898641, 0.19234405737370253] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24968826432898641, 0.19234405737370253, 0.18455117414798589] ***
*** starting iteration: 3; err: [Inf, 0.24968826432898641, 0.19234405737370253, 0.18455117414798589] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24968826432898641, 0.19234405737370253, 0.18455117414798589, 0.1834436877556145] ***
*** starting iteration: 4; err: [Inf, 0.24968826432898641, 0.19234405737370253, 0.18455117414798589, 0.1834436877556145] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24968826432898641, 0.19234405737370253, 0.18455117414798589, 0.1834436877556145, 0.18310802006814628] ***
*** finished computation of 7 references, err: [Inf, 0.24968826432898641, 0.19234405737370253, 0.18455117414798589, 0.1834436877556145, 0.18310802006814628] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 52, 18]]
** centroid: 1, normalized-entropy: 0.8224042259549892, [(2, 52), (3, 18)]
*** center 2: selecting labels [1] (freq >= 2) [from [83, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [42, 36, 0]]
** centroid: 3, normalized-entropy: 0.9957274520849256, [(1, 42), (2, 36)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [40, 26, 0]]
** centroid: 4, normalized-entropy: 0.9672947789468944, [(1, 40), (2, 26)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [10, 67, 0]]
** centroid: 5, normalized-entropy: 0.557081908103416, [(1, 10), (2, 67)]
*** center 6: selecting labels [1] (freq >= 2) [from [48, 1, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [77, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21629939891025424] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21629939891025424, 0.1850488010845147] ***
*** starting iteration: 2; err: [Inf, 0.21629939891025424, 0.1850488010845147] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21629939891025424, 0.1850488010845147, 0.1840231331437826] ***
*** starting iteration: 3; err: [Inf, 0.21629939891025424, 0.1850488010845147, 0.1840231331437826] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21629939891025424, 0.1850488010845147, 0.1840231331437826, 0.18423046482540667] ***
*** finished computation of 7 references, err: [Inf, 0.21629939891025424, 0.1850488010845147, 0.1840231331437826, 0.18423046482540667] ***
*** center 1: selecting labels [1] (freq >= 2) [from [93, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 34, 21]]
** centroid: 2, normalized-entropy: 0.9593160320543779, [(2, 34), (3, 21)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [60, 3, 0]]
** centroid: 3, normalized-entropy: 0.2761954276479391, [(1, 60), (2, 3)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [18, 62, 0]]
** centroid: 4, normalized-entropy: 0.7691928290130138, [(1, 18), (2, 62)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [59, 18, 0]]
** centroid: 5, normalized-entropy: 0.7845191388986644, [(1, 59), (2, 18)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [3, 55, 0]]
** centroid: 6, normalized-entropy: 0.29367630985136944, [(1, 3), (2, 55)]
*** center 7: selecting labels [1] (freq >= 2) [from [74, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23195290388353168] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23195290388353168, 0.1842025563362986] ***
*** starting iteration: 2; err: [Inf, 0.23195290388353168, 0.1842025563362986] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23195290388353168, 0.1842025563362986, 0.18151657891273498] ***
*** starting iteration: 3; err: [Inf, 0.23195290388353168, 0.1842025563362986, 0.18151657891273498] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23195290388353168, 0.1842025563362986, 0.18151657891273498, 0.180884303804487] ***
*** finished computation of 7 references, err: [Inf, 0.23195290388353168, 0.1842025563362986, 0.18151657891273498, 0.180884303804487] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 67, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [74, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [41, 32, 0]]
** centroid: 3, normalized-entropy: 0.9890076795739703, [(1, 41), (2, 32)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [70, 10, 0]]
** centroid: 4, normalized-entropy: 0.5435644431995963, [(1, 70), (2, 10)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [64, 18, 0]]
** centroid: 5, normalized-entropy: 0.7592757847892834, [(1, 64), (2, 18)]
*** center 6: selecting labels [1] (freq >= 2) [from [62, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 48, 14]]
** centroid: 7, normalized-entropy: 0.7706290693639406, [(2, 48), (3, 14)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22819055309146644] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22819055309146644, 0.18775706863217057] ***
*** starting iteration: 2; err: [Inf, 0.22819055309146644, 0.18775706863217057] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22819055309146644, 0.18775706863217057, 0.18227055058907718] ***
*** starting iteration: 3; err: [Inf, 0.22819055309146644, 0.18775706863217057, 0.18227055058907718] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22819055309146644, 0.18775706863217057, 0.18227055058907718, 0.18078702867031096] ***
*** starting iteration: 4; err: [Inf, 0.22819055309146644, 0.18775706863217057, 0.18227055058907718, 0.18078702867031096] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22819055309146644, 0.18775706863217057, 0.18227055058907718, 0.18078702867031096, 0.18027874869480728] ***
*** finished computation of 7 references, err: [Inf, 0.22819055309146644, 0.18775706863217057, 0.18227055058907718, 0.18078702867031096, 0.18027874869480728] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [51, 18, 0]]
** centroid: 1, normalized-entropy: 0.828055725379504, [(1, 51), (2, 18)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [50, 18, 0]]
** centroid: 2, normalized-entropy: 0.8337649072106652, [(1, 50), (2, 18)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 54, 18]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 54), (3, 18)]
*** center 4: selecting labels [1] (freq >= 2) [from [67, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [7, 78, 0]]
** centroid: 5, normalized-entropy: 0.4104161417181887, [(1, 7), (2, 78)]
*** center 6: selecting labels [1] (freq >= 2) [from [76, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [63, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24713073303736746] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24713073303736746, 0.1837245487207547] ***
*** starting iteration: 2; err: [Inf, 0.24713073303736746, 0.1837245487207547] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24713073303736746, 0.1837245487207547, 0.17950758780911566] ***
*** starting iteration: 3; err: [Inf, 0.24713073303736746, 0.1837245487207547, 0.17950758780911566] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24713073303736746, 0.1837245487207547, 0.17950758780911566, 0.1790527942981571] ***
*** finished computation of 7 references, err: [Inf, 0.24713073303736746, 0.1837245487207547, 0.17950758780911566, 0.1790527942981571] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [27, 43, 0]]
** centroid: 1, normalized-entropy: 0.9619780596506257, [(1, 27), (2, 43)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [50, 10, 0]]
** centroid: 2, normalized-entropy: 0.6500224216483541, [(1, 50), (2, 10)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 48, 24]]
** centroid: 3, normalized-entropy: 0.9182958340544894, [(2, 48), (3, 24)]
*** center 4: selecting labels [1] (freq >= 2) [from [100, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [68, 19, 0]]
** centroid: 5, normalized-entropy: 0.7572182549240017, [(1, 68), (2, 19)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 49, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [62, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2534673138186336] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2534673138186336, 0.18743888538889586] ***
*** starting iteration: 2; err: [Inf, 0.2534673138186336, 0.18743888538889586] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2534673138186336, 0.18743888538889586, 0.1818152197431773] ***
*** starting iteration: 3; err: [Inf, 0.2534673138186336, 0.18743888538889586, 0.1818152197431773] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2534673138186336, 0.18743888538889586, 0.1818152197431773, 0.18118727871682494] ***
*** finished computation of 7 references, err: [Inf, 0.2534673138186336, 0.18743888538889586, 0.1818152197431773, 0.18118727871682494] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [14, 58, 0]]
** centroid: 1, normalized-entropy: 0.710676853856123, [(1, 14), (2, 58)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [48, 11, 0]]
** centroid: 2, normalized-entropy: 0.693965967334286, [(1, 48), (2, 11)]
*** center 3: selecting labels [1] (freq >= 2) [from [90, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 52, 16]]
** centroid: 4, normalized-entropy: 0.787126586201269, [(2, 52), (3, 16)]
*** center 5: selecting labels [1] (freq >= 2) [from [88, 1, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [59, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 63, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24220946499705315] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24220946499705315, 0.18519253255985677] ***
*** starting iteration: 2; err: [Inf, 0.24220946499705315, 0.18519253255985677] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24220946499705315, 0.18519253255985677, 0.18327598729729652] ***
*** starting iteration: 3; err: [Inf, 0.24220946499705315, 0.18519253255985677, 0.18327598729729652] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24220946499705315, 0.18519253255985677, 0.18327598729729652, 0.1830385520402342] ***
*** finished computation of 7 references, err: [Inf, 0.24220946499705315, 0.18519253255985677, 0.18327598729729652, 0.1830385520402342] ***
*** center 1: selecting labels [1] (freq >= 2) [from [89, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 31, 16]]
** centroid: 2, normalized-entropy: 0.9252253278054431, [(2, 31), (3, 16)]
*** center 3: selecting labels [1] (freq >= 2) [from [86, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [3, 66, 0]]
** centroid: 4, normalized-entropy: 0.2580186686648155, [(1, 3), (2, 66)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [48, 18, 0]]
** centroid: 5, normalized-entropy: 0.8453509366224364, [(1, 48), (2, 18)]
*** center 6: selecting labels [1] (freq >= 2) [from [72, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [3, 68, 0]]
** centroid: 7, normalized-entropy: 0.25253077151613923, [(1, 3), (2, 68)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2301230268701911] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2301230268701911, 0.19063360746391117] ***
*** starting iteration: 2; err: [Inf, 0.2301230268701911, 0.19063360746391117] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2301230268701911, 0.19063360746391117, 0.18715583048015833] ***
*** starting iteration: 3; err: [Inf, 0.2301230268701911, 0.19063360746391117, 0.18715583048015833] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2301230268701911, 0.19063360746391117, 0.18715583048015833, 0.18542616530135275] ***
*** starting iteration: 4; err: [Inf, 0.2301230268701911, 0.19063360746391117, 0.18715583048015833, 0.18542616530135275] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2301230268701911, 0.19063360746391117, 0.18715583048015833, 0.18542616530135275, 0.1850270657381043] ***
*** finished computation of 7 references, err: [Inf, 0.2301230268701911, 0.19063360746391117, 0.18715583048015833, 0.18542616530135275, 0.1850270657381043] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [8, 42, 0]]
** centroid: 1, normalized-entropy: 0.634309554640566, [(1, 8), (2, 42)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [53, 28, 0]]
** centroid: 2, normalized-entropy: 0.9301497323974339, [(1, 53), (2, 28)]
*** center 3: selecting labels [1] (freq >= 2) [from [77, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [32, 46, 0]]
** centroid: 4, normalized-entropy: 0.9766349114440099, [(1, 32), (2, 46)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 59, 15]]
** centroid: 5, normalized-entropy: 0.7273006785144036, [(2, 59), (3, 15)]
*** center 6: selecting labels [1] (freq >= 2) [from [60, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [80, 0, 0]]
finished with 11 centroids; started with 7
[ Info: ("class distribution: ", Dict(2 => 361,3 => 33,1 => 606), Dict(2 => 393,3 => 35,1 => 572))
[ Info: ===== scores for single classifier: {"micro_f1":0.901,"precision":0.901,"recall":0.901,"macro_recall":0.910175998725617,"macro_f1":0.8542947389650989,"accuracy":0.901,"class_f1":{"2":0.8828402366863906,"3":0.7529411764705883,"1":0.9271028037383177},"class_precision":{"2":0.8252212389380531,"3":0.64,"1":0.9959839357429718},"class_recall":{"2":0.9491094147582697,"3":0.9142857142857143,"1":0.8671328671328671}}
[ Info: ===== scores for 1: {"micro_f1":0.957,"precision":0.957,"recall":0.957,"macro_recall":0.959365020052043,"macro_f1":0.9517676375517822,"accuracy":0.957,"class_f1":{"2":0.944801026957638,"3":0.9444444444444445,"1":0.9660574412532638},"class_precision":{"2":0.9533678756476683,"3":0.918918918918919,"1":0.9618717504332756},"class_recall":{"2":0.9363867684478372,"3":0.9714285714285714,"1":0.9702797202797203}}
[ Info: ===== scores for 5: {"micro_f1":0.954,"precision":0.954,"recall":0.954,"macro_recall":0.9660269755689602,"macro_f1":0.9461539821602845,"accuracy":0.954,"class_f1":{"2":0.9408740359897171,"3":0.9333333333333333,"1":0.964254577157803},"class_precision":{"2":0.9506493506493506,"3":0.875,"1":0.9617391304347827},"class_recall":{"2":0.9312977099236641,"3":1.0,"1":0.9667832167832168}}
[ Info: ===== scores for 7: {"micro_f1":0.963,"precision":0.963,"recall":0.963,"macro_recall":0.9733951375172749,"macro_f1":0.9527097999776512,"accuracy":0.963,"class_f1":{"2":0.9528662420382166,"3":0.9333333333333333,"1":0.9719298245614035},"class_precision":{"2":0.9540816326530612,"3":0.875,"1":0.9753521126760564},"class_recall":{"2":0.9516539440203562,"3":1.0,"1":0.9685314685314685}}
[ Info: ===== scores for 9: {"micro_f1":0.967,"precision":0.967,"recall":0.967,"macro_recall":0.9765224173621121,"macro_f1":0.9517915149085429,"accuracy":0.967,"class_f1":{"2":0.9580686149936468,"3":0.9210526315789475,"1":0.9762532981530342},"class_precision":{"2":0.9568527918781726,"3":0.8536585365853658,"1":0.9823008849557522},"class_recall":{"2":0.9592875318066157,"3":1.0,"1":0.9702797202797203}}
[ Info: ===== scores for 11: {"micro_f1":0.968,"precision":0.968,"recall":0.968,"macro_recall":0.9768397421069177,"macro_f1":0.9487751681405262,"accuracy":0.968,"class_f1":{"2":0.9591836734693877,"3":0.9090909090909091,"1":0.9780509218612818},"class_precision":{"2":0.9616368286445013,"3":0.8333333333333334,"1":0.982363315696649},"class_recall":{"2":0.9567430025445293,"3":1.0,"1":0.9737762237762237}}
(score = 0.957, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.957, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.956, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.956, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.956, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.956, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.96, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.96, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.954, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.954, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.957, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.957, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.963, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.963, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.963, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.963, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
[ Info: config: {"score":0.963,"k":7,"kernel":"direct_kernel","dist":"l1_distance","summary":"most_frequent_label","kernel_fun":"fun"}
[ Info: ===== scores optimized! B: {"micro_f1":0.963,"precision":0.963,"recall":0.963,"macro_recall":0.9733951375172749,"macro_f1":0.9527097999776512,"accuracy":0.963,"class_f1":{"2":0.9528662420382166,"3":0.9333333333333333,"1":0.9719298245614035},"class_precision":{"2":0.9540816326530612,"3":0.875,"1":0.9753521126760564},"class_recall":{"2":0.9516539440203562,"3":1.0,"1":0.9685314685314685}}
Test Summary: | Pass  Total
AKNC          |    8      8
[270, 3, 2, 4, 1, 2, 4, 1, 1, 1, 1, 1, 2, 5, 8, 6, 3, 4, 8, 4, 11, 10, 5, 9, 32, 10, 17, 1, 11, 15, 4, 8, 18, 17, 4, 9, 8, 23, 4, 7, 9, 2, 14, 17, 26, 24, 3, 14, 29, 58, 7, 23, 6, 9, 7, 2, 7, 1, 19, 49, 39, 2, 4, 17, 1, 25, 24, 11, 11, 24, 2, 14, 5, 1, 79, 14, 42, 13, 10, 23, 3, 8, 11, 22, 6, 1, 6, 15, 8, 10, 3, 12, 26, 14, 20, 13, 36, 41, 23, 10, 4, 33, 11, 13, 4, 2, 10, 10, 81, 6, 579, 16, 20, 7, 9, 81, 117, 21, 20, 5, 11, 21, 20, 13, 12, 21, 12, 25, 15, 62, 3, 7, 3, 32, 27, 22, 6, 23, 63, 6, 2, 17, 13, 23, 89, 1, 14, 9, 64, 57, 4, 3, 28, 28, 16, 15, 915, 143, 24, 1, 7, 50, 5, 12, 11, 98, 36, 10, 95, 13, 11, 104, 16, 83, 8, 4, 4, 18, 12, 54, 11, 34, 63, 59, 26, 96, 53, 40, 13, 15, 16, 16, 1, 23, 30, 15, 5, 23, 14, 9, 11, 47, 3, 91, 27, 6, 44, 24, 55, 6, 70, 7, 4, 5, 54, 9, 10, 23, 6, 53, 134, 89, 81, 48, 17, 11, 39, 43, 31, 123, 214, 20, 28, 57, 101, 1, 2, 3, 36, 8, 30, 16, 45, 446, 100, 27, 15, 3, 71, 20, 9, 10, 18, 11, 43, 32, 7, 19, 2, 123, 15, 23, 15, 2, 57, 13, 37, 14, 4, 41, 25, 99, 3, 18, 3, 74, 77, 21, 8, 103, 13, 10, 17, 6, 25, 34, 50, 34, 59, 202, 40, 20, 3, 31, 8, 127, 129, 147, 35, 9]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.6520000000000001, speedup = 0.27431659554867477, eval_ratio = 0.083034)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":null,"recall":0.40017361111111116,"f1":null,"seconds":0.0001535862684249878,"exhaustive_search_seconds":0.000366726890206337,"evaluations":467.7265625,"distances_sum":1726.9536276638084}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5627170138888887,"recall":0.5624999999999998,"f1":null,"seconds":0.0002667810767889023,"exhaustive_search_seconds":0.000366726890206337,"evaluations":632.3125,"distances_sum":1695.1172071378755}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.659722222222222,"recall":0.659722222222222,"f1":0.659722222222222,"seconds":0.00034114159643650055,"exhaustive_search_seconds":0.000366726890206337,"evaluations":727.53125,"distances_sum":1636.806964166762}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7439236111111109,"recall":0.7439236111111109,"f1":0.7439236111111109,"seconds":0.00042592547833919525,"exhaustive_search_seconds":0.000366726890206337,"evaluations":838.609375,"distances_sum":1606.0427629096043}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7899305555555552,"recall":0.7899305555555552,"f1":0.7899305555555552,"seconds":0.0005369670689105988,"exhaustive_search_seconds":0.000366726890206337,"evaluations":944.859375,"distances_sum":1590.4949285966468}
KCenters.DeloneInvIndex> reached performance {"precision":0.8333333333333329,"recall":0.8333333333333329,"f1":0.8333333333333329,"seconds":0.0007043946534395218,"exhaustive_search_seconds":0.000366726890206337,"evaluations":1036.734375,"distances_sum":1577.8039321780523}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.8230000000000003, speedup = 0.6171318984190036, eval_ratio = 0.12003599999999999)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
    Testing KCenters tests passed 
