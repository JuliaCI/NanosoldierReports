Julia Version 1.5.0-DEV.285
Commit e36fe95a63 (2020-02-18 00:48 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed SortingAlgorithms ── v0.3.1
  Installed Requires ─────────── v1.0.1
  Installed ArgCheck ─────────── v1.1.0
  Installed OpenSpecFun_jll ──── v0.5.3+1
  Installed OrderedCollections ─ v1.1.0
  Installed AdvancedHMC ──────── v0.2.20
  Installed DataStructures ───── v0.17.9
  Installed BinaryProvider ───── v0.5.8
  Installed ArrayLayouts ─────── v0.1.5
  Installed Missings ─────────── v0.4.3
  Installed SpecialFunctions ─── v0.10.0
  Installed Parameters ───────── v0.12.0
  Installed MacroTools ───────── v0.5.4
  Installed Rmath ────────────── v0.6.0
  Installed StaticArrays ─────── v0.12.1
  Installed LazyArrays ───────── v0.14.11
  Installed StatsBase ────────── v0.32.1
  Installed InplaceOps ───────── v0.3.0
  Installed ProgressMeter ────── v1.2.0
  Installed DataAPI ──────────── v1.1.0
  Installed StatsFuns ────────── v0.9.4
  Installed FillArrays ───────── v0.8.4
#=#=#                                                                         ######################################################################## 100.0%
   Updating `~/.julia/environments/v1.5/Project.toml`
  [0bf59076] + AdvancedHMC v0.2.20
   Updating `~/.julia/environments/v1.5/Manifest.toml`
  [0bf59076] + AdvancedHMC v0.2.20
  [dce04be8] + ArgCheck v1.1.0
  [4c555306] + ArrayLayouts v0.1.5
  [b99e7846] + BinaryProvider v0.5.8
  [9a962f9c] + DataAPI v1.1.0
  [864edb3b] + DataStructures v0.17.9
  [1a297f60] + FillArrays v0.8.4
  [505f98c9] + InplaceOps v0.3.0
  [5078a376] + LazyArrays v0.14.11
  [1914dd2f] + MacroTools v0.5.4
  [e1d29d7a] + Missings v0.4.3
  [efe28fd5] + OpenSpecFun_jll v0.5.3+1
  [bac558e1] + OrderedCollections v1.1.0
  [d96e819e] + Parameters v0.12.0
  [92933f4c] + ProgressMeter v1.2.0
  [ae029012] + Requires v1.0.1
  [79098fc4] + Rmath v0.6.0
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.10.0
  [90137ffa] + StaticArrays v0.12.1
  [2913bbd2] + StatsBase v0.32.1
  [4c63d2b9] + StatsFuns v0.9.4
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Building Rmath → `~/.julia/packages/Rmath/BoBag/deps/build.log`
    Testing AdvancedHMC
#=#=#                                                                         ##                                                                         3.4%##########                                                                14.6%###################                                                       27.6%##############################                                            41.9%###########################################                               61.1%##########################################################                81.9%######################################################################## 100.0%
#=#=#                                                                         ######################                                                    30.7%######################################################################## 100.0%
#=#=#                                                                         ##O#- #                                                                       ##O=#  #                                                                      #=#=-#  #                                                                     ######################################################################## 100.0%
#######                                                                   10.8%######################################################################## 100.0%
Status `/tmp/jl_Z35f1B/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [80f14c24] AbstractMCMC v0.4.0
  [79e6a3ab] Adapt v1.0.1
  [0bf59076] AdvancedHMC v0.2.20
  [dce04be8] ArgCheck v1.1.0
  [ec485272] ArnoldiMethod v0.0.4
  [7d9fca2a] Arpack v0.4.0
  [68821587] Arpack_jll v3.5.0+2
  [4fba245c] ArrayInterface v2.4.1
  [4c555306] ArrayLayouts v0.1.5
  [39de3d68] AxisArrays v0.4.2
  [76274a88] Bijectors v0.5.2
  [b99e7846] BinaryProvider v0.5.8
  [324d7699] CategoricalArrays v0.7.7
  [d360d2e6] ChainRulesCore v0.6.1
  [861a8166] Combinatorics v1.0.0
  [bbf7d656] CommonSubexpressions v0.2.0
  [34da2185] Compat v2.2.0
  [9a962f9c] DataAPI v1.1.0
  [a93c6f00] DataFrames v0.20.2
  [864edb3b] DataStructures v0.17.9
  [e2d170a0] DataValueInterfaces v1.0.0
  [2b5f629d] DiffEqBase v6.16.0
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [31c24e10] Distributions v0.22.4
  [ced4e74d] DistributionsAD v0.1.1
  [ffbed154] DocStringExtensions v0.8.1
  [da5c29d0] EllipsisNotation v0.4.0
  [d4d017d3] ExponentialUtilities v1.6.0
  [7a1cc6ca] FFTW v1.2.0
  [f5851436] FFTW_jll v3.3.9+3
  [1a297f60] FillArrays v0.8.4
  [6a86dc24] FiniteDiff v2.2.0
  [26cc04aa] FiniteDifferences v0.9.2
  [f6369f11] ForwardDiff v0.10.9
  [069b7b12] FunctionWrappers v1.0.0
  [01680d73] GenericSVD v0.2.2
  [7869d1d1] IRTools v0.3.1
  [d25df0c9] Inflate v0.1.1
  [505f98c9] InplaceOps v0.3.0
  [1d5cc7b8] IntelOpenMP_jll v2018.0.3+0
  [8197267c] IntervalSets v0.4.0
  [41ab1584] InvertedIndices v1.0.0
  [c8e1da08] IterTools v1.3.0
  [42fd0dbc] IterativeSolvers v0.8.1
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5078a376] LazyArrays v0.14.11
  [6f1fad26] Libtask v0.3.1
  [093fc24a] LightGraphs v1.3.0
  [c7f686f2] MCMCChains v2.0.0
  [856f044c] MKL_jll v2019.0.117+2
  [1914dd2f] MacroTools v0.5.4
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [46d2c3a1] MuladdMacro v0.2.2
  [872c559c] NNlib v0.6.4
  [77ba4419] NaNMath v0.3.3
  [4536629a] OpenBLAS_jll v0.3.7+5
  [efe28fd5] OpenSpecFun_jll v0.5.3+1
  [bac558e1] OrderedCollections v1.1.0
  [1dea7af3] OrdinaryDiffEq v5.29.0
  [90014a1f] PDMats v0.9.11
  [d96e819e] Parameters v0.12.0
  [69de0a69] Parsers v0.3.11
  [f27b6e38] Polynomials v0.5.3
  [2dfb63ee] PooledArrays v0.5.3
  [92933f4c] ProgressMeter v1.2.0
  [1fd47b50] QuadGK v2.3.1
  [b3c3ace0] RangeArrays v0.3.2
  [3cdcf5f2] RecipesBase v0.8.0
  [731186ca] RecursiveArrayTools v2.1.0
  [f2c3362d] RecursiveFactorization v0.1.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [79098fc4] Rmath v0.6.0
  [f2b01f46] Roots v0.8.4
  [699a6c99] SimpleTraits v0.9.1
  [a2af1166] SortingAlgorithms v0.3.1
  [47a9eef4] SparseDiffTools v1.3.3
  [276daf66] SpecialFunctions v0.10.0
  [90137ffa] StaticArrays v0.12.1
  [2913bbd2] StatsBase v0.32.1
  [4c63d2b9] StatsFuns v0.9.4
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.1
  [9f7883ad] Tracker v0.2.6
  [a2a6695c] TreeViews v0.3.0
  [fce5fe82] Turing v0.7.1
  [b8865327] UnicodePlots v1.1.0
  [19fa3120] VertexSafeGraphs v0.1.1
  [e88e6eb3] Zygote v0.4.7
  [700de1a5] ZygoteRules v0.2.0
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [9fa8497b] Future 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [1a1011a3] SharedArrays 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [4607b0f0] SuiteSparse 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/Sn9Ek/src/hamiltonian.jl:44
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/Sn9Ek/src/hamiltonian.jl:44
┌ Info: Performance of step() v.s. step()
│   n_steps = 10
│   t_step = 0.208104759
│   t_steps = 0.009230833
└   t_step / t_steps = 22.544526479896234
Sampling  0%|                               |  ETA: 7:14:35[K
  iterations:                    1
  n_steps:                       1
  is_accept:                     true
  acceptance_rate:               0.00024678063904202984
  log_density:                   -11.468631840427596
  hamiltonian_energy:            17.607598588461073
  hamiltonian_energy_error:      0.0
  max_hamiltonian_energy_error:  8.307010716976087
  tree_depth:                    1
  numerical_error:               false
  step_size:                     1.6
  nom_step_size:                 1.6
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0, 1 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 10%|███▏                           |  ETA: 0:00:32[K
  iterations:                    1187
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.6299707885409495
  log_density:                   -10.663527147079762
  hamiltonian_energy:            14.432390751333934
  hamiltonian_energy_error:      0.019714226468657614
  max_hamiltonian_energy_error:  0.8300164879730936
  tree_depth:                    2
  numerical_error:               false
  step_size:                     1.103909816964845
  nom_step_size:                 1.103909816964845
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.8968503603628007, 0.7751 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 12%|███▋                           |  ETA: 0:00:27[K
  iterations:                    1400
  n_steps:                       95
  is_accept:                     true
  acceptance_rate:               0.8416694383776708
  log_density:                   -12.066876123140949
  hamiltonian_energy:            17.713447049652963
  hamiltonian_energy_error:      -0.11729734222057075
  max_hamiltonian_energy_error:  0.48196944539933284
  tree_depth:                    6
  numerical_error:               false
  step_size:                     0.8273417368541902
  nom_step_size:                 0.8273417368541902
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.8968503603628007, 0.7751 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 13%|████▏                          |  ETA: 0:00:24[K
  iterations:                    1612
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.6227758233778004
  log_density:                   -12.504034222400685
  hamiltonian_energy:            18.47061322125289
  hamiltonian_energy_error:      -0.15311641136690923
  max_hamiltonian_energy_error:  1.0540812534801098
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.8959280121685502
  nom_step_size:                 0.8959280121685502
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.8968503603628007, 0.7751 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 14%|████▌                          |  ETA: 0:00:22[K
  iterations:                    1731
  n_steps:                       31
  is_accept:                     true
  acceptance_rate:               0.14809733618244342
  log_density:                   -15.696226319000166
  hamiltonian_energy:            22.182725519400638
  hamiltonian_energy_error:      1.1045997210771503
  max_hamiltonian_energy_error:  5.919271189793498
  tree_depth:                    5
  numerical_error:               false
  step_size:                     1.474871808393944
  nom_step_size:                 1.474871808393944
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.8968503603628007, 0.7751 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 16%|█████                          |  ETA: 0:00:20[K
  iterations:                    1948
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.6793112515224075
  log_density:                   -22.9491407623011
  hamiltonian_energy:            29.118418933542955
  hamiltonian_energy_error:      0.7218796793282856
  max_hamiltonian_energy_error:  0.7734428090054273
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.8054763780004742
  nom_step_size:                 0.8054763780004742
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([0.8968503603628007, 0.7751 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 18%|█████▋                         |  ETA: 0:00:18[K
  iterations:                    2183
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.982177333229707
  log_density:                   -14.174079222637761
  hamiltonian_energy:            21.106006092121483
  hamiltonian_energy_error:      -0.3411990431633569
  max_hamiltonian_energy_error:  -0.5000648641897669
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6742785470864922
  nom_step_size:                 0.6742785470864922
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.964685035462096, 0.95566 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 22%|██████▊                        |  ETA: 0:00:15[K
  iterations:                    2624
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.6983540163186922
  log_density:                   -17.886299856975363
  hamiltonian_energy:            21.295174185529635
  hamiltonian_energy_error:      0.6169328935903913
  max_hamiltonian_energy_error:  0.7138421142010216
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6742785470864922
  nom_step_size:                 0.6742785470864922
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.964685035462096, 0.95566 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 25%|███████▋                       |  ETA: 0:00:13[K
  iterations:                    2966
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9867971981638463
  log_density:                   -12.782961330595132
  hamiltonian_energy:            17.488676757757684
  hamiltonian_energy_error:      -0.12042926562778078
  max_hamiltonian_energy_error:  -0.151930483486872
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6742785470864922
  nom_step_size:                 0.6742785470864922
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.964685035462096, 0.95566 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 28%|████████▊                      |  ETA: 0:00:11[K
  iterations:                    3397
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9260182869717354
  log_density:                   -15.704823680125527
  hamiltonian_energy:            24.46431698905821
  hamiltonian_energy_error:      -0.18075099827975194
  max_hamiltonian_energy_error:  -0.4227754594491593
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6742785470864922
  nom_step_size:                 0.6742785470864922
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.964685035462096, 0.95566 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 31%|█████████▌                     |  ETA: 0:00:10[K
  iterations:                    3701
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9637121856935453
  log_density:                   -15.536395881735151
  hamiltonian_energy:            22.73281338503909
  hamiltonian_energy_error:      -0.11226931915517113
  max_hamiltonian_energy_error:  -0.1776285128884325
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6742785470864922
  nom_step_size:                 0.6742785470864922
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.964685035462096, 0.95566 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 34%|██████████▋                    |  ETA: 0:00:09[K
  iterations:                    4123
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9223562519943245
  log_density:                   -12.800668995963424
  hamiltonian_energy:            15.054942692342188
  hamiltonian_energy_error:      0.12228687553299977
  max_hamiltonian_energy_error:  0.12228687553299977
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6742785470864922
  nom_step_size:                 0.6742785470864922
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.964685035462096, 0.95566 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 37%|███████████▋                   |  ETA: 0:00:08[K
  iterations:                    4487
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9803700908987837
  log_density:                   -18.04625158395295
  hamiltonian_energy:            25.18658608809385
  hamiltonian_energy_error:      -0.04685693397256685
  max_hamiltonian_energy_error:  -0.26057674328352576
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6742785470864922
  nom_step_size:                 0.6742785470864922
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.964685035462096, 0.95566 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 41%|████████████▋                  |  ETA: 0:00:07[K
  iterations:                    4894
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -13.797589920043114
  hamiltonian_energy:            20.21997909544998
  hamiltonian_energy_error:      -0.2963668625201592
  max_hamiltonian_energy_error:  -0.3755921451678752
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6742785470864922
  nom_step_size:                 0.6742785470864922
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.964685035462096, 0.95566 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 44%|█████████████▋                 |  ETA: 0:00:06[K
  iterations:                    5279
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8097630577920262
  log_density:                   -16.301975974147727
  hamiltonian_energy:            27.616438501885263
  hamiltonian_energy_error:      -0.17904653263359904
  max_hamiltonian_energy_error:  0.5414527163766429
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6742785470864922
  nom_step_size:                 0.6742785470864922
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.964685035462096, 0.95566 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 47%|██████████████▌                |  ETA: 0:00:06[K
  iterations:                    5633
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9908104250431405
  log_density:                   -13.469636653136115
  hamiltonian_energy:            16.822089697628826
  hamiltonian_energy_error:      -0.030149842534772375
  max_hamiltonian_energy_error:  -0.13028213529991106
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6742785470864922
  nom_step_size:                 0.6742785470864922
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.964685035462096, 0.95566 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 51%|███████████████▊               |  ETA: 0:00:05[K
  iterations:                    6078
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9934072087523189
  log_density:                   -12.901986050019797
  hamiltonian_energy:            16.097818379419184
  hamiltonian_energy_error:      -0.12942399136873206
  max_hamiltonian_energy_error:  -0.3022657805821787
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6742785470864922
  nom_step_size:                 0.6742785470864922
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.964685035462096, 0.95566 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 53%|████████████████▌              |  ETA: 0:00:05[K
  iterations:                    6368
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9991726352303664
  log_density:                   -13.519173997942207
  hamiltonian_energy:            20.104262324956327
  hamiltonian_energy_error:      -0.38334110399068066
  max_hamiltonian_energy_error:  -0.38334110399068066
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6742785470864922
  nom_step_size:                 0.6742785470864922
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.964685035462096, 0.95566 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 57%|█████████████████▌             |  ETA: 0:00:04[K
  iterations:                    6795
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9995843089590953
  log_density:                   -14.815698948146865
  hamiltonian_energy:            23.944741075749683
  hamiltonian_energy_error:      -0.6142234443508094
  max_hamiltonian_energy_error:  -0.6809918667021932
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6742785470864922
  nom_step_size:                 0.6742785470864922
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.964685035462096, 0.95566 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 59%|██████████████████▍            |  ETA: 0:00:04[K
  iterations:                    7133
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -13.527179017858654
  hamiltonian_energy:            15.711762727763592
  hamiltonian_energy_error:      -0.006609870785414529
  max_hamiltonian_energy_error:  -0.23032468450466226
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6742785470864922
  nom_step_size:                 0.6742785470864922
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.964685035462096, 0.95566 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 63%|███████████████████▌           |  ETA: 0:00:03[K
  iterations:                    7564
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8894880390565179
  log_density:                   -11.523654477301031
  hamiltonian_energy:            16.04616353464561
  hamiltonian_energy_error:      -0.09878714903580033
  max_hamiltonian_energy_error:  0.24298521322546307
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6742785470864922
  nom_step_size:                 0.6742785470864922
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.964685035462096, 0.95566 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 66%|████████████████████▌          |  ETA: 0:00:03[K
  iterations:                    7912
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7755051840939082
  log_density:                   -17.862810168956443
  hamiltonian_energy:            24.953948599896556
  hamiltonian_energy_error:      0.2599594088471555
  max_hamiltonian_energy_error:  0.6368057092231858
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6742785470864922
  nom_step_size:                 0.6742785470864922
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.964685035462096, 0.95566 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 69%|█████████████████████▌         |  ETA: 0:00:02[K
  iterations:                    8336
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.937453241857309
  log_density:                   -12.505461037492067
  hamiltonian_energy:            19.169748896380554
  hamiltonian_energy_error:      -0.18109782189934975
  max_hamiltonian_energy_error:  0.2463682742788329
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6742785470864922
  nom_step_size:                 0.6742785470864922
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.964685035462096, 0.95566 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 73%|██████████████████████▌        |  ETA: 0:00:02[K
  iterations:                    8706
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8429594807343854
  log_density:                   -12.718736498201007
  hamiltonian_energy:            14.54118183593593
  hamiltonian_energy_error:      0.20263263104078
  max_hamiltonian_energy_error:  0.3152006007477528
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6742785470864922
  nom_step_size:                 0.6742785470864922
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.964685035462096, 0.95566 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 76%|███████████████████████▌       |  ETA: 0:00:02[K
  iterations:                    9103
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -13.065763905371481
  hamiltonian_energy:            16.923121743212132
  hamiltonian_energy_error:      -0.23963567704607058
  max_hamiltonian_energy_error:  -0.3782573636364681
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6742785470864922
  nom_step_size:                 0.6742785470864922
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.964685035462096, 0.95566 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 79%|████████████████████████▌      |  ETA: 0:00:02[K
  iterations:                    9467
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -12.496710508219724
  hamiltonian_energy:            14.983719034622002
  hamiltonian_energy_error:      -0.04000165472626627
  max_hamiltonian_energy_error:  -0.12304242075294702
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6742785470864922
  nom_step_size:                 0.6742785470864922
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.964685035462096, 0.95566 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 82%|█████████████████████████▌     |  ETA: 0:00:01[K
  iterations:                    9855
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7973742997837537
  log_density:                   -14.497420219129452
  hamiltonian_energy:            21.55299388714625
  hamiltonian_energy_error:      0.022846888133884136
  max_hamiltonian_energy_error:  0.5754156358366522
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6742785470864922
  nom_step_size:                 0.6742785470864922
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.964685035462096, 0.95566 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 86%|██████████████████████████▋    |  ETA: 0:00:01[K
  iterations:                    10313
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.8562423514655103
  log_density:                   -12.145085310426566
  hamiltonian_energy:            17.982517423473233
  hamiltonian_energy_error:      -0.029035036774679668
  max_hamiltonian_energy_error:  0.3774682315940403
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6742785470864922
  nom_step_size:                 0.6742785470864922
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.964685035462096, 0.95566 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 89%|███████████████████████████▌   |  ETA: 0:00:01[K
  iterations:                    10658
  n_steps:                       3
  is_accept:                     true
  acceptance_rate:               0.8681530864667953
  log_density:                   -15.250158945663635
  hamiltonian_energy:            18.993369812320807
  hamiltonian_energy_error:      0.09121940576090992
  max_hamiltonian_energy_error:  -0.3944844039454303
  tree_depth:                    2
  numerical_error:               false
  step_size:                     0.6742785470864922
  nom_step_size:                 0.6742785470864922
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.964685035462096, 0.95566 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 92%|████████████████████████████▌  |  ETA: 0:00:01[K
  iterations:                    11026
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -14.19708575375412
  hamiltonian_energy:            21.74320123108754
  hamiltonian_energy_error:      -0.45405243386097993
  max_hamiltonian_energy_error:  -0.5169972394767406
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6742785470864922
  nom_step_size:                 0.6742785470864922
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.964685035462096, 0.95566 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 94%|█████████████████████████████▏ |  ETA: 0:00:00[K
  iterations:                    11276
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               1.0
  log_density:                   -17.38833447455591
  hamiltonian_energy:            20.524974186369747
  hamiltonian_energy_error:      -0.010311621893126954
  max_hamiltonian_energy_error:  -0.551117896779953
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6742785470864922
  nom_step_size:                 0.6742785470864922
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.964685035462096, 0.95566 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 98%|██████████████████████████████▍|  ETA: 0:00:00[K
  iterations:                    11737
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.7775841364749905
  log_density:                   -15.921282062311207
  hamiltonian_energy:            22.002411650865145
  hamiltonian_energy_error:      0.16371643687043402
  max_hamiltonian_energy_error:  0.5083555023256849
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6742785470864922
  nom_step_size:                 0.6742785470864922
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.964685035462096, 0.95566 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|███████████████████████████████| Time: 0:00:06[K
  iterations:                    12000
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.9649891216657208
  log_density:                   -13.689148292560056
  hamiltonian_energy:            22.94114971324648
  hamiltonian_energy_error:      -0.5504546739101386
  max_hamiltonian_energy_error:  -0.5504546739101386
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.6742785470864922
  nom_step_size:                 0.6742785470864922
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.964685035462096, 0.95566 ...])
┌ Info: Finished 12000 sampling steps for 1 chains in 6.663351221 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.964685035462096, 0.95566 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.674), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 1.0794214681860175
└   average_acceptance_rate = 0.8761632215647918
┌ Info: Finished 1000 adapation steps
│   adaptor =
│    StanHMCAdaptor(
│        pc=DiagPreconditioner,
│        ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.6250306843958474),
│        init_buffer=75, term_buffer=50, window_size=25,
│        state=window(76, 950), window_splits(100, 150, 250, 450, 950)
│    )
│   τ.integrator = Leapfrog(ϵ=0.625)
└   h.metric = DiagEuclideanMetric([0.37521629705404447, 0.561 ...])
┌ Info: Finished 5000 sampling steps for 1 chains in 1.004423932 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.37521629705404447, 0.561 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.625), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 0.9497682250328671
└   average_acceptance_rate = 0.9074262074801318
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
[ Info: Adaptation tests for HMCDA with NesterovDualAveraging are skipped

                   Scalabiliry of multiple chains
              ┌────────────────────────────────────────┐                 
            4 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ matrix parallism
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│ seperate        
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠤⠔⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⢣⠀⠀⠀⠀⡰⢇⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠁⠈⡆⠀⠀⡰⠁⠈⢆│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠎⠀⠀⠀⠀⠀⢠⢆⠀⠀⠀⡀⠀⠀⣀⢄⠀⠀⡠⠃⠀⠀⠘⠤⠊⠁⠀⠀⠈│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠎⠀⠀⠀⠀⠀⠀⡜⠈⢆⡠⠊⠈⠉⠊⠀⠀⠉⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
   Time (s)   │⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⢠⠃⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⡀⠀⠀⠀⠀⢠⠇⠀⠀⠀⠀⠀⡀⠀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⢣⠀⠀⠀⢠⠃⠀⢀⡠⠤⠔⠊⠈⠑⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⡈⡆⠀⢀⡧⠤⠔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠑⢼⡴⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
            0 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│                 
              └────────────────────────────────────────┘                 
              0                                       20
                            Num of chains

Test Summary: | Pass  Total
AdvancedHMC   | 2875   2875
    Testing AdvancedHMC tests passed 
