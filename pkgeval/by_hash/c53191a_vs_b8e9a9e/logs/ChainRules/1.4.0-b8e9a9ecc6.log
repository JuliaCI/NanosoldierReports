Julia Version 1.4.0
Commit b8e9a9ecc6 (2020-03-21 16:36 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed Reexport ─────── v0.2.0
  Installed Requires ─────── v1.0.1
  Installed MuladdMacro ──── v0.2.2
  Installed ChainRulesCore ─ v0.7.1
  Installed ChainRules ───── v0.4.1
   Updating `~/.julia/environments/v1.4/Project.toml`
  [082447d4] + ChainRules v0.4.1
   Updating `~/.julia/environments/v1.4/Manifest.toml`
  [082447d4] + ChainRules v0.4.1
  [d360d2e6] + ChainRulesCore v0.7.1
  [46d2c3a1] + MuladdMacro v0.2.2
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v1.0.1
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
    Testing ChainRules
Status `/tmp/jl_WiTjHc/Manifest.toml`
  [082447d4] ChainRules v0.4.1
  [d360d2e6] ChainRulesCore v0.7.1
  [cdddcdb0] ChainRulesTestUtils v0.2.1
  [34da2185] Compat v3.8.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [26cc04aa] FiniteDifferences v0.9.3
  [46d2c3a1] MuladdMacro v0.2.2
  [77ba4419] NaNMath v0.3.3
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [276daf66] SpecialFunctions v0.10.0
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [1a1011a3] SharedArrays 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
Testing ChainRules.jl
identity: Test Failed at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:177
  Expression: isapprox(x̄_ad, x̄_fd; rtol = rtol, atol = atol, kwargs...)
   Evaluated: isapprox([-0.01044524463737564, -0.839026854388764, 0.31111133849833383, 2.2950878238373105], [-9.814263825030653e-15, -9.814263825030653e-15, -9.814263825030653e-15, -9.814263825030653e-15]; rtol = 1.0e-9, atol = 1.0e-9)
Stacktrace:
 [1] rrule_test(::typeof(identity), ::Array{Float64,1}, ::Tuple{Array{Float64,1},Array{Float64,1}}; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:177
 [2] rrule_test at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:161 [inlined]
 [3] macro expansion at /home/pkgeval/.julia/packages/ChainRules/B0Olg/test/rulesets/Base/base.jl:131 [inlined]
 [4] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113 [inlined]
 [5] macro expansion at /home/pkgeval/.julia/packages/ChainRules/B0Olg/test/rulesets/Base/base.jl:129 [inlined]
 [6] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113 [inlined]
 [7] top-level scope at /home/pkgeval/.julia/packages/ChainRules/B0Olg/test/rulesets/Base/base.jl:2
   erfcinv at 6.91371765804357e-310, rrule: Error During Test at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:100
  Test threw exception
  Expression: isapprox(∂x, fdm(f, x); rtol = rtol, atol = atol, kwargs...)
  DomainError with -0.012863447307313727:
  `y` must be nonnegative.
  Stacktrace:
   [1] erfcinv(::Float64) at /home/pkgeval/.julia/packages/SpecialFunctions/5QYEE/src/erf.jl:333
   [2] #20 at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:265 [inlined]
   [3] _mapreduce(::FiniteDifferences.var"#20#22"{typeof(erfcinv),Float64,Array{Int64,1},Array{Float64,1},Float64}, ::typeof(Base.add_sum), ::IndexLinear, ::Base.OneTo{Int64}) at ./reduce.jl:400
   [4] _mapreduce_dim(::Function, ::Function, ::NamedTuple{(),Tuple{}}, ::Base.OneTo{Int64}, ::Colon) at ./reducedim.jl:312
   [5] #mapreduce#580 at ./reducedim.jl:307 [inlined]
   [6] mapreduce at ./reducedim.jl:307 [inlined]
   [7] _sum at ./reducedim.jl:657 [inlined]
   [8] #sum#584 at ./reducedim.jl:653 [inlined]
   [9] sum at ./reducedim.jl:653 [inlined]
   [10] fdm(::FiniteDifferences.Central{Array{Int64,1},Array{Float64,1}}, ::typeof(erfcinv), ::Float64, ::Val{true}; condition::Int64, bound::Float64, eps::Float64, adapt::Int64, max_step::Float64) at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:265
   [11] fdm(::FiniteDifferences.Central{Array{Int64,1},Array{Float64,1}}, ::Function, ::Float64, ::Val{false}; kwargs::Base.Iterators.Pairs{Symbol,Real,NTuple{5,Symbol},NamedTuple{(:condition, :eps, :bound, :max_step, :adapt),Tuple{Int64,Float64,Float64,Float64,Int64}}}) at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:276
   [12] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(erfcinv), ::Float64, ::Val{true}; condition::Int64, bound::Float64, eps::Float64, adapt::Int64, max_step::Float64) at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:243
   [13] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(erfcinv), ::Float64, ::Val{true}) at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:224
   [14] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Function, ::Float64, ::Val{false}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:276
   [15] fdm at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:276 [inlined] (repeats 2 times)
   [16] #_#7 at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:93 [inlined]
   [17] Central at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:93 [inlined]
   [18] macro expansion at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:100 [inlined]
   [19] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1186 [inlined]
   [20] test_scalar(::typeof(erfcinv), ::Float64; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:90
  
erfcinv at 6.91371765804357e-310, frule: Error During Test at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:100
  Test threw exception
  Expression: isapprox(∂x, fdm(f, x); rtol = rtol, atol = atol, kwargs...)
  DomainError with -0.012863447307313727:
  `y` must be nonnegative.
  Stacktrace:
   [1] erfcinv(::Float64) at /home/pkgeval/.julia/packages/SpecialFunctions/5QYEE/src/erf.jl:333
   [2] #20 at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:265 [inlined]
   [3] _mapreduce(::FiniteDifferences.var"#20#22"{typeof(erfcinv),Float64,Array{Int64,1},Array{Float64,1},Float64}, ::typeof(Base.add_sum), ::IndexLinear, ::Base.OneTo{Int64}) at ./reduce.jl:400
   [4] _mapreduce_dim(::Function, ::Function, ::NamedTuple{(),Tuple{}}, ::Base.OneTo{Int64}, ::Colon) at ./reducedim.jl:312
   [5] #mapreduce#580 at ./reducedim.jl:307 [inlined]
   [6] mapreduce at ./reducedim.jl:307 [inlined]
   [7] _sum at ./reducedim.jl:657 [inlined]
   [8] #sum#584 at ./reducedim.jl:653 [inlined]
   [9] sum at ./reducedim.jl:653 [inlined]
   [10] fdm(::FiniteDifferences.Central{Array{Int64,1},Array{Float64,1}}, ::typeof(erfcinv), ::Float64, ::Val{true}; condition::Int64, bound::Float64, eps::Float64, adapt::Int64, max_step::Float64) at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:265
   [11] fdm(::FiniteDifferences.Central{Array{Int64,1},Array{Float64,1}}, ::Function, ::Float64, ::Val{false}; kwargs::Base.Iterators.Pairs{Symbol,Real,NTuple{5,Symbol},NamedTuple{(:condition, :eps, :bound, :max_step, :adapt),Tuple{Int64,Float64,Float64,Float64,Int64}}}) at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:276
   [12] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(erfcinv), ::Float64, ::Val{true}; condition::Int64, bound::Float64, eps::Float64, adapt::Int64, max_step::Float64) at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:243
   [13] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(erfcinv), ::Float64, ::Val{true}) at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:224
   [14] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Function, ::Float64, ::Val{false}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:276
   [15] fdm at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:276 [inlined] (repeats 2 times)
   [16] #_#7 at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:93 [inlined]
   [17] Central at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:93 [inlined]
   [18] macro expansion at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:100 [inlined]
   [19] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1186 [inlined]
   [20] test_scalar(::typeof(erfcinv), ::Float64; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:90
  
bessely0 at 6.91371767111536e-310, rrule: Error During Test at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:100
  Test threw exception
  Expression: isapprox(∂x, fdm(f, x); rtol = rtol, atol = atol, kwargs...)
  DomainError with -0.012729825775067363:
  NaN result for non-NaN input.
  Stacktrace:
   [1] nan_dom_err at ./math.jl:404 [inlined]
   [2] bessely0 at /home/pkgeval/.julia/packages/SpecialFunctions/5QYEE/src/bessel.jl:192 [inlined]
   [3] #20 at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:265 [inlined]
   [4] _mapreduce(::FiniteDifferences.var"#20#22"{typeof(bessely0),Float64,Array{Int64,1},Array{Float64,1},Float64}, ::typeof(Base.add_sum), ::IndexLinear, ::Base.OneTo{Int64}) at ./reduce.jl:400
   [5] _mapreduce_dim(::Function, ::Function, ::NamedTuple{(),Tuple{}}, ::Base.OneTo{Int64}, ::Colon) at ./reducedim.jl:312
   [6] #mapreduce#580 at ./reducedim.jl:307 [inlined]
   [7] mapreduce at ./reducedim.jl:307 [inlined]
   [8] _sum at ./reducedim.jl:657 [inlined]
   [9] #sum#584 at ./reducedim.jl:653 [inlined]
   [10] sum at ./reducedim.jl:653 [inlined]
   [11] fdm(::FiniteDifferences.Central{Array{Int64,1},Array{Float64,1}}, ::typeof(bessely0), ::Float64, ::Val{true}; condition::Int64, bound::Float64, eps::Float64, adapt::Int64, max_step::Float64) at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:265
   [12] fdm(::FiniteDifferences.Central{Array{Int64,1},Array{Float64,1}}, ::Function, ::Float64, ::Val{false}; kwargs::Base.Iterators.Pairs{Symbol,Real,NTuple{5,Symbol},NamedTuple{(:condition, :eps, :bound, :max_step, :adapt),Tuple{Int64,Float64,Float64,Float64,Int64}}}) at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:276
   [13] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(bessely0), ::Float64, ::Val{true}; condition::Int64, bound::Float64, eps::Float64, adapt::Int64, max_step::Float64) at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:243
   [14] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(bessely0), ::Float64, ::Val{true}) at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:224
   [15] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Function, ::Float64, ::Val{false}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:276
   [16] fdm at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:276 [inlined] (repeats 2 times)
   [17] #_#7 at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:93 [inlined]
   [18] Central at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:93 [inlined]
   [19] macro expansion at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:100 [inlined]
   [20] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1186 [inlined]
   [21] test_scalar(::typeof(bessely0), ::Float64; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:90
  
bessely0 at 6.91371767111536e-310, frule: Error During Test at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:100
  Test threw exception
  Expression: isapprox(∂x, fdm(f, x); rtol = rtol, atol = atol, kwargs...)
  DomainError with -0.012729825775067363:
  NaN result for non-NaN input.
  Stacktrace:
   [1] nan_dom_err at ./math.jl:404 [inlined]
   [2] bessely0 at /home/pkgeval/.julia/packages/SpecialFunctions/5QYEE/src/bessel.jl:192 [inlined]
   [3] #20 at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:265 [inlined]
   [4] _mapreduce(::FiniteDifferences.var"#20#22"{typeof(bessely0),Float64,Array{Int64,1},Array{Float64,1},Float64}, ::typeof(Base.add_sum), ::IndexLinear, ::Base.OneTo{Int64}) at ./reduce.jl:400
   [5] _mapreduce_dim(::Function, ::Function, ::NamedTuple{(),Tuple{}}, ::Base.OneTo{Int64}, ::Colon) at ./reducedim.jl:312
   [6] #mapreduce#580 at ./reducedim.jl:307 [inlined]
   [7] mapreduce at ./reducedim.jl:307 [inlined]
   [8] _sum at ./reducedim.jl:657 [inlined]
   [9] #sum#584 at ./reducedim.jl:653 [inlined]
   [10] sum at ./reducedim.jl:653 [inlined]
   [11] fdm(::FiniteDifferences.Central{Array{Int64,1},Array{Float64,1}}, ::typeof(bessely0), ::Float64, ::Val{true}; condition::Int64, bound::Float64, eps::Float64, adapt::Int64, max_step::Float64) at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:265
   [12] fdm(::FiniteDifferences.Central{Array{Int64,1},Array{Float64,1}}, ::Function, ::Float64, ::Val{false}; kwargs::Base.Iterators.Pairs{Symbol,Real,NTuple{5,Symbol},NamedTuple{(:condition, :eps, :bound, :max_step, :adapt),Tuple{Int64,Float64,Float64,Float64,Int64}}}) at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:276
   [13] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(bessely0), ::Float64, ::Val{true}; condition::Int64, bound::Float64, eps::Float64, adapt::Int64, max_step::Float64) at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:243
   [14] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(bessely0), ::Float64, ::Val{true}) at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:224
   [15] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Function, ::Float64, ::Val{false}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:276
   [16] fdm at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:276 [inlined] (repeats 2 times)
   [17] #_#7 at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:93 [inlined]
   [18] Central at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:93 [inlined]
   [19] macro expansion at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:100 [inlined]
   [20] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1186 [inlined]
   [21] test_scalar(::typeof(bessely0), ::Float64; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:90
  
bessely1 at 6.91371767111536e-310, rrule: Error During Test at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:100
  Test threw exception
  Expression: isapprox(∂x, fdm(f, x); rtol = rtol, atol = atol, kwargs...)
  ArgumentError: eps must be positive, got NaN
  Stacktrace:
   [1] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(bessely1), ::Float64, ::Val{true}; condition::Int64, bound::Float64, eps::Float64, adapt::Int64, max_step::Float64) at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:227
   [2] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(bessely1), ::Float64, ::Val{true}) at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:224
   [3] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Function, ::Float64, ::Val{false}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:276
   [4] fdm at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:276 [inlined] (repeats 2 times)
   [5] #_#7 at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:93 [inlined]
   [6] Central at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:93 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:100 [inlined]
   [8] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1186 [inlined]
   [9] test_scalar(::typeof(bessely1), ::Float64; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:90
  
bessely1 at 6.91371767111536e-310, frule: Error During Test at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:100
  Test threw exception
  Expression: isapprox(∂x, fdm(f, x); rtol = rtol, atol = atol, kwargs...)
  ArgumentError: eps must be positive, got NaN
  Stacktrace:
   [1] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(bessely1), ::Float64, ::Val{true}; condition::Int64, bound::Float64, eps::Float64, adapt::Int64, max_step::Float64) at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:227
   [2] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(bessely1), ::Float64, ::Val{true}) at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:224
   [3] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Function, ::Float64, ::Val{false}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:276
   [4] fdm at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:276 [inlined] (repeats 2 times)
   [5] #_#7 at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:93 [inlined]
   [6] Central at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:93 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:100 [inlined]
   [8] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1186 [inlined]
   [9] test_scalar(::typeof(bessely1), ::Float64; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:90
  
gamma at 6.91371767111536e-310, rrule: Error During Test at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:100
  Test threw exception
  Expression: isapprox(∂x, fdm(f, x); rtol = rtol, atol = atol, kwargs...)
  ArgumentError: eps must be positive, got NaN
  Stacktrace:
   [1] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(gamma), ::Float64, ::Val{true}; condition::Int64, bound::Float64, eps::Float64, adapt::Int64, max_step::Float64) at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:227
   [2] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(gamma), ::Float64, ::Val{true}) at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:224
   [3] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Function, ::Float64, ::Val{false}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:276
   [4] fdm at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:276 [inlined] (repeats 2 times)
   [5] #_#7 at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:93 [inlined]
   [6] Central at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:93 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:100 [inlined]
   [8] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1186 [inlined]
   [9] test_scalar(::typeof(gamma), ::Float64; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:90
  
gamma at 6.91371767111536e-310, frule: Error During Test at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:100
  Test threw exception
  Expression: isapprox(∂x, fdm(f, x); rtol = rtol, atol = atol, kwargs...)
  ArgumentError: eps must be positive, got NaN
  Stacktrace:
   [1] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(gamma), ::Float64, ::Val{true}; condition::Int64, bound::Float64, eps::Float64, adapt::Int64, max_step::Float64) at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:227
   [2] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(gamma), ::Float64, ::Val{true}) at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:224
   [3] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Function, ::Float64, ::Val{false}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:276
   [4] fdm at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:276 [inlined] (repeats 2 times)
   [5] #_#7 at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:93 [inlined]
   [6] Central at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:93 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:100 [inlined]
   [8] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1186 [inlined]
   [9] test_scalar(::typeof(gamma), ::Float64; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:90
  
digamma at 6.91371767111536e-310, rrule: Error During Test at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:100
  Test threw exception
  Expression: isapprox(∂x, fdm(f, x); rtol = rtol, atol = atol, kwargs...)
  ArgumentError: eps must be positive, got NaN
  Stacktrace:
   [1] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(digamma), ::Float64, ::Val{true}; condition::Int64, bound::Float64, eps::Float64, adapt::Int64, max_step::Float64) at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:227
   [2] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(digamma), ::Float64, ::Val{true}) at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:224
   [3] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Function, ::Float64, ::Val{false}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:276
   [4] fdm at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:276 [inlined] (repeats 2 times)
   [5] #_#7 at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:93 [inlined]
   [6] Central at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:93 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:100 [inlined]
   [8] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1186 [inlined]
   [9] test_scalar(::typeof(digamma), ::Float64; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:90
  
digamma at 6.91371767111536e-310, frule: Error During Test at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:100
  Test threw exception
  Expression: isapprox(∂x, fdm(f, x); rtol = rtol, atol = atol, kwargs...)
  ArgumentError: eps must be positive, got NaN
  Stacktrace:
   [1] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(digamma), ::Float64, ::Val{true}; condition::Int64, bound::Float64, eps::Float64, adapt::Int64, max_step::Float64) at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:227
   [2] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(digamma), ::Float64, ::Val{true}) at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:224
   [3] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Function, ::Float64, ::Val{false}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:276
   [4] fdm at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:276 [inlined] (repeats 2 times)
   [5] #_#7 at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:93 [inlined]
   [6] Central at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:93 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:100 [inlined]
   [8] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1186 [inlined]
   [9] test_scalar(::typeof(digamma), ::Float64; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:90
  
trigamma at 6.91371767111536e-310, rrule: Error During Test at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:100
  Test threw exception
  Expression: isapprox(∂x, fdm(f, x); rtol = rtol, atol = atol, kwargs...)
  ArgumentError: eps must be positive, got NaN
  Stacktrace:
   [1] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(trigamma), ::Float64, ::Val{true}; condition::Int64, bound::Float64, eps::Float64, adapt::Int64, max_step::Float64) at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:227
   [2] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(trigamma), ::Float64, ::Val{true}) at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:224
   [3] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Function, ::Float64, ::Val{false}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:276
   [4] fdm at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:276 [inlined] (repeats 2 times)
   [5] #_#7 at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:93 [inlined]
   [6] Central at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:93 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:100 [inlined]
   [8] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1186 [inlined]
   [9] test_scalar(::typeof(trigamma), ::Float64; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:90
  
trigamma at 6.91371767111536e-310, frule: Error During Test at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:100
  Test threw exception
  Expression: isapprox(∂x, fdm(f, x); rtol = rtol, atol = atol, kwargs...)
  ArgumentError: eps must be positive, got NaN
  Stacktrace:
   [1] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(trigamma), ::Float64, ::Val{true}; condition::Int64, bound::Float64, eps::Float64, adapt::Int64, max_step::Float64) at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:227
   [2] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(trigamma), ::Float64, ::Val{true}) at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:224
   [3] fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::Function, ::Float64, ::Val{false}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:276
   [4] fdm at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:276 [inlined] (repeats 2 times)
   [5] #_#7 at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:93 [inlined]
   [6] Central at /home/pkgeval/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:93 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:100 [inlined]
   [8] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1186 [inlined]
   [9] test_scalar(::typeof(trigamma), ::Float64; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:90
  
SpecialFunctions: Error During Test at /home/pkgeval/.julia/packages/ChainRules/B0Olg/test/rulesets/packages/SpecialFunctions.jl:3
  Got exception outside of a @test
  AmosException with id 2: overflow.
  Stacktrace:
   [1] _bessely(::Float64, ::Complex{Float64}, ::Int32) at /home/pkgeval/.julia/packages/SpecialFunctions/5QYEE/src/bessel.jl:292
   [2] bessely(::Float64, ::Complex{Float64}) at /home/pkgeval/.julia/packages/SpecialFunctions/5QYEE/src/bessel.jl:429
   [3] bessely at /home/pkgeval/.julia/packages/SpecialFunctions/5QYEE/src/bessel.jl:586 [inlined]
   [4] bessely0 at /home/pkgeval/.julia/packages/SpecialFunctions/5QYEE/src/bessel.jl:205 [inlined]
   [5] rrule at /home/pkgeval/.julia/packages/ChainRulesCore/CMKLT/src/rule_definition_tools.jl:196 [inlined]
   [6] test_scalar(::typeof(bessely0), ::Complex{Float64}; rtol::Float64, atol::Float64, fdm::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:84
   [7] test_scalar at /home/pkgeval/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:82 [inlined]
   [8] macro expansion at /home/pkgeval/.julia/packages/ChainRules/B0Olg/test/rulesets/packages/SpecialFunctions.jl:29 [inlined]
   [9] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1186 [inlined]
   [10] top-level scope at /home/pkgeval/.julia/packages/ChainRules/B0Olg/test/rulesets/packages/SpecialFunctions.jl:0
   [11] include(::String) at ./client.jl:439
   [12] top-level scope at /home/pkgeval/.julia/packages/ChainRules/B0Olg/test/runtests.jl:48
   [13] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113
   [14] top-level scope at /home/pkgeval/.julia/packages/ChainRules/B0Olg/test/runtests.jl:47
   [15] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113
   [16] top-level scope at /home/pkgeval/.julia/packages/ChainRules/B0Olg/test/runtests.jl:22
   [17] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113
   [18] top-level scope at /home/pkgeval/.julia/packages/ChainRules/B0Olg/test/runtests.jl:19
   [19] include(::String) at ./client.jl:439
   [20] top-level scope at none:6
   [21] eval(::Module, ::Any) at ./boot.jl:331
   [22] exec_options(::Base.JLOptions) at ./client.jl:264
   [23] _start() at ./client.jl:484
  
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = rrule at rule_definition_tools.jl:196 [inlined]
└ @ Core ~/.julia/packages/ChainRulesCore/CMKLT/src/rule_definition_tools.jl:196
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = frule at rule_definition_tools.jl:167 [inlined]
└ @ Core ~/.julia/packages/ChainRulesCore/CMKLT/src/rule_definition_tools.jl:167
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = macro expansion at ChainRulesTestUtils.jl:94 [inlined]
└ @ Core ~/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:94
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(lgamma), ::Float64, ::Val{true}) at methods.jl:224
└ @ FiniteDifferences ~/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:224
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = #20 at methods.jl:265 [inlined]
└ @ Core ~/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:265
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = #20 at methods.jl:265 [inlined]
└ @ Core ~/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:265
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = #20 at methods.jl:265 [inlined]
└ @ Core ~/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:265
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = #20 at methods.jl:265 [inlined]
└ @ Core ~/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:265
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = #20 at methods.jl:265 [inlined]
└ @ Core ~/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:265
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = #20 at methods.jl:265 [inlined]
└ @ Core ~/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:265
┌ Warning: `lgamma(x::Number)` is deprecated, use `loggamma(x)` instead.
│   caller = rrule at rule_definition_tools.jl:196 [inlined]
└ @ Core ~/.julia/packages/ChainRulesCore/CMKLT/src/rule_definition_tools.jl:196
┌ Warning: `lgamma(x::Number)` is deprecated, use `loggamma(x)` instead.
│   caller = frule at rule_definition_tools.jl:167 [inlined]
└ @ Core ~/.julia/packages/ChainRulesCore/CMKLT/src/rule_definition_tools.jl:167
┌ Warning: `lgamma(x::Number)` is deprecated, use `loggamma(x)` instead.
│   caller = macro expansion at ChainRulesTestUtils.jl:94 [inlined]
└ @ Core ~/.julia/packages/ChainRulesTestUtils/jfPPB/src/ChainRulesTestUtils.jl:94
┌ Warning: `lgamma(x::Number)` is deprecated, use `loggamma(x)` instead.
│   caller = fdm(::FiniteDifferences.Central{UnitRange{Int64},Array{Float64,1}}, ::typeof(lgamma), ::Complex{Float64}, ::Val{true}) at methods.jl:224
└ @ FiniteDifferences ~/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:224
┌ Warning: `lgamma(x::Number)` is deprecated, use `loggamma(x)` instead.
│   caller = #20 at methods.jl:265 [inlined]
└ @ Core ~/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:265
┌ Warning: `lgamma(x::Number)` is deprecated, use `loggamma(x)` instead.
│   caller = #20 at methods.jl:265 [inlined]
└ @ Core ~/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:265
┌ Warning: `lgamma(x::Number)` is deprecated, use `loggamma(x)` instead.
│   caller = #20 at methods.jl:265 [inlined]
└ @ Core ~/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:265
┌ Warning: `lgamma(x::Number)` is deprecated, use `loggamma(x)` instead.
│   caller = #20 at methods.jl:265 [inlined]
└ @ Core ~/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:265
┌ Warning: `lgamma(x::Number)` is deprecated, use `loggamma(x)` instead.
│   caller = #20 at methods.jl:265 [inlined]
└ @ Core ~/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:265
┌ Warning: `lgamma(x::Number)` is deprecated, use `loggamma(x)` instead.
│   caller = #20 at methods.jl:265 [inlined]
└ @ Core ~/.julia/packages/FiniteDifferences/kqb1h/src/methods.jl:265
Test Summary:                                                    | Pass  Fail  Error  Total
ChainRules                                                       | 3150     1     13   3164
  helper functions                                               |    2                   2
  rulesets                                                       | 3148     1     13   3162
    Base                                                         |  977     1           978
      base                                                       |  893     1           894
        Trig                                                     |  495                 495
        math                                                     |  133                 133
        Unary complex functions                                  |  112                 112
        *(x, y)                                                  |    4                   4
        binary function (hypot)                                  |    6                   6
        binary function (atan)                                   |    6                   6
        binary function (mod)                                    |    6                   6
        binary function (rem)                                    |    6                   6
        binary function (^)                                      |    6                   6
        identity                                                 |    5     1             6
        Constants                                                |   14                  14
        Constants                                                |   14                  14
        Constants                                                |   14                  14
        Constants                                                |   14                  14
        Constants                                                |   14                  14
        sign                                                     |   30                  30
        trinary (muladd)                                         |    7                   7
        trinary (fma)                                            |    7                   7
      reshape                                                    |    9                   9
      hcat                                                       |    5                   5
      vcat                                                       |    5                   5
      fill                                                       |    8                   8
      Maps and Reductions                                        |   49                  49
      broadcast                                                  |    8                   8
    Statistics                                                   |    8                   8
    LinearAlgebra                                                | 1355                1355
    packages                                                     |  808           13    821
      SpecialFunctions                                           |  119                 119
      SpecialFunctions                                           |   84                  84
      SpecialFunctions                                           |   84                  84
      SpecialFunctions                                           |  121           12    133
        erf at 0.5, rrule                                        |    3                   3
        erf at 0.5, frule                                        |    2                   2
        erfc at 0.5, rrule                                       |    3                   3
        erfc at 0.5, frule                                       |    2                   2
        erfi at 0.5, rrule                                       |    3                   3
        erfi at 0.5, frule                                       |    2                   2
        airyai at 0.5, rrule                                     |    3                   3
        airyai at 0.5, frule                                     |    2                   2
        airyaiprime at 0.5, rrule                                |    3                   3
        airyaiprime at 0.5, frule                                |    2                   2
        airybi at 6.91372139732605e-310, rrule                   |    3                   3
        airybi at 6.91372139732605e-310, frule                   |    2                   2
        airybiprime at 6.91372139732605e-310, rrule              |    3                   3
        airybiprime at 6.91372139732605e-310, frule              |    2                   2
        besselj0 at 6.91372139732605e-310, rrule                 |    3                   3
        besselj0 at 6.91372139732605e-310, frule                 |    2                   2
        besselj1 at 6.91372139732605e-310, rrule                 |    3                   3
        besselj1 at 6.91372139732605e-310, frule                 |    2                   2
        erfcx at 6.91371765804357e-310, rrule                    |    3                   3
        erfcx at 6.91371765804357e-310, frule                    |    2                   2
        dawson at 6.91371765804357e-310, rrule                   |    3                   3
        dawson at 6.91371765804357e-310, frule                   |    2                   2
        invdigamma at 6.91371765804357e-310, rrule               |    3                   3
        invdigamma at 6.91371765804357e-310, frule               |    2                   2
        erfinv at 6.91371765804357e-310, rrule                   |    3                   3
        erfinv at 6.91371765804357e-310, frule                   |    2                   2
        erfcinv at 6.91371765804357e-310, rrule                  |    2            1      3
        erfcinv at 6.91371765804357e-310, frule                  |    1            1      2
        bessely0 at 6.91371767111536e-310, rrule                 |    2            1      3
        bessely0 at 6.91371767111536e-310, frule                 |    1            1      2
        bessely1 at 6.91371767111536e-310, rrule                 |    2            1      3
        bessely1 at 6.91371767111536e-310, frule                 |    1            1      2
        gamma at 6.91371767111536e-310, rrule                    |    2            1      3
        gamma at 6.91371767111536e-310, frule                    |    1            1      2
        digamma at 6.91371767111536e-310, rrule                  |    2            1      3
        digamma at 6.91371767111536e-310, frule                  |    1            1      2
        trigamma at 6.91371767111536e-310, rrule                 |    2            1      3
        trigamma at 6.91371767111536e-310, frule                 |    1            1      2
      SpecialFunctions                                           |  119                 119
      SpecialFunctions                                           |   84                  84
      SpecialFunctions                                           |   77            1     78
        erf at 1.5 + 0.7im, rrule                                |    3                   3
        erf at 1.5 + 0.7im, frule                                |    2                   2
        erfc at 1.5 + 0.7im, rrule                               |    3                   3
        erfc at 1.5 + 0.7im, frule                               |    2                   2
        erfi at 1.5 + 0.7im, rrule                               |    3                   3
        erfi at 1.5 + 0.7im, frule                               |    2                   2
        airyai at 1.5 + 0.7im, rrule                             |    3                   3
        airyai at 1.5 + 0.7im, frule                             |    2                   2
        airyaiprime at 6.91371709281508e-310 + 1.0e-323im, rrule |    3                   3
        airyaiprime at 6.91371709281508e-310 + 1.0e-323im, frule |    2                   2
        airybi at 6.91371709281508e-310 + 1.0e-323im, rrule      |    3                   3
        airybi at 6.91371709281508e-310 + 1.0e-323im, frule      |    2                   2
        airybiprime at 6.91371709281508e-310 + 1.0e-323im, rrule |    3                   3
        airybiprime at 6.91371709281508e-310 + 1.0e-323im, frule |    2                   2
        besselj0 at 6.91371709281508e-310 + 1.0e-323im, rrule    |    3                   3
        besselj0 at 6.91371709281508e-310 + 1.0e-323im, frule    |    2                   2
        besselj1 at 6.91371709281508e-310 + 1.0e-323im, rrule    |    3                   3
        besselj1 at 6.91371709281508e-310 + 1.0e-323im, frule    |    2                   2
        erfcx at 6.91371433667027e-310 + 5.0e-324im, rrule       |    3                   3
        erfcx at 6.91371433667027e-310 + 5.0e-324im, frule       |    2                   2
        dawson at 6.91371433667027e-310 + 5.0e-324im, rrule      |    3                   3
        dawson at 6.91371433667027e-310 + 5.0e-324im, frule      |    2                   2
      log gamma and co                                           |  120                 120
ERROR: LoadError: Some tests did not pass: 3150 passed, 1 failed, 13 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/ChainRules/B0Olg/test/runtests.jl:18
ERROR: Package ChainRules errored during testing
Stacktrace:
 [1] pkgerror(::String, ::Vararg{String,N} where N) at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/Types.jl:53
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:1503
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:316
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:303
 [5] #test#68 at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:297 [inlined]
 [6] test at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:297 [inlined]
 [7] #test#67 at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:296 [inlined]
 [8] test at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:296 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:295
 [10] test(::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:295
 [11] top-level scope at none:16
