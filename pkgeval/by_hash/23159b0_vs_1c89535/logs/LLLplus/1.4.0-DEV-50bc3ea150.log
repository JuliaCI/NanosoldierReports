Julia Version 1.4.0-DEV.661
Commit 50bc3ea150 (2019-12-23 18:40 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed Parsers ──────── v0.3.10
 Installed BenchmarkTools ─ v0.4.3
 Installed LLLplus ──────── v1.2.3
 Installed JSON ─────────── v0.21.0
  Updating `~/.julia/environments/v1.4/Project.toml`
  [142c1900] + LLLplus v1.2.3
  Updating `~/.julia/environments/v1.4/Manifest.toml`
  [6e4b80f9] + BenchmarkTools v0.4.3
  [682c06a0] + JSON v0.21.0
  [142c1900] + LLLplus v1.2.3
  [69de0a69] + Parsers v0.3.10
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [de0858da] + Printf 
  [9a3f8284] + Random 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [4ec0a83e] + Unicode 
   Testing LLLplus
Path `/home/pkgeval/.julia/packages/LLLplus/AhAPL` exists and looks like the correct package. Using existing path.
  Updating `/tmp/jl_IoDb8d/Project.toml`
  [142c1900] + LLLplus v1.2.3 [`~/.julia/packages/LLLplus/AhAPL`]
  Updating `/tmp/jl_IoDb8d/Manifest.toml`
  [142c1900] ~ LLLplus v1.2.3 ⇒ v1.2.3 [`~/.julia/packages/LLLplus/AhAPL`]
Running sandbox
Status `/tmp/jl_IoDb8d/Project.toml`
  [6e4b80f9] BenchmarkTools v0.4.3
  [142c1900] LLLplus v1.2.3 [`~/.julia/packages/LLLplus/AhAPL`]
  [8bb1440f] DelimitedFiles 
  [37e2e46d] LinearAlgebra 
  [de0858da] Printf 
  [9a3f8284] Random 
  [8dfed614] Test 
tests with small matrices...
...done

In all the following tests, the first time includes the JIT compilation; 
for the second execution the compilation is already done and the time
should be faster.

Testing LLL on 1000x1000 real matrix...
  5.237063 seconds (3.48 M allocations: 747.222 MiB, 11.78% gc time)
  2.694722 seconds (84.73 k allocations: 580.893 MiB, 1.03% gc time)

Testing LLL on 10x10 complex matrix...
  8.130641 seconds (9.87 M allocations: 475.741 MiB, 6.34% gc time)
  0.000715 seconds (736 allocations: 135.156 KiB)
Testing Seysen on same 10x10 complex matrix...
  2.544018 seconds (2.29 M allocations: 118.062 MiB, 4.10% gc time)
  0.074523 seconds (467 allocations: 194.859 KiB)
Testing VBLAST on same 10x10 complex matrix...
  2.481663 seconds (1.95 M allocations: 94.626 MiB, 3.49% gc time)
  0.023852 seconds (181 allocations: 121.000 KiB)
Testing Brun on real part of same 10x10 matrix...
  1.910356 seconds (1.55 M allocations: 80.719 MiB, 5.02% gc time)
  0.000194 seconds (24 allocations: 12.188 KiB)

Testing sphere decoder on 100000 samples of 3x3 BPSK system...
  2.177567 seconds (4.00 M allocations: 312.214 MiB, 5.19% gc time)
  0.447255 seconds (2.00 M allocations: 209.809 MiB, 5.26% gc time)
Error Rate is 0.0. It should be zero or very small.

Testing now with 200x200 matrix from latticechallenge.org.
The min norm of the input should be 30, min norm of the reduced bases should be smaller.
min norm of input is 30.0
  0.977134 seconds (314.85 k allocations: 335.458 MiB, 12.85% gc time)
min norm of lll-reduced basis is 29.30870177950569
  6.361130 seconds (4.43 M allocations: 1.230 GiB, 3.52% gc time)
min norm of seysen-reduced basis is 30.0
   Testing LLLplus tests passed 
