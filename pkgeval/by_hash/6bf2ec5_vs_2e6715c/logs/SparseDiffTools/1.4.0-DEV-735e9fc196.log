Julia Version 1.4.0-DEV.690
Commit 735e9fc196 (2020-01-13 12:51 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

  Resolving package versions...
  Installed NaNMath ────────────── v0.3.3
  Installed VertexSafeGraphs ───── v0.1.0
  Installed Adapt ──────────────── v1.0.0
  Installed OpenSpecFun_jll ────── v0.5.3+1
  Installed SimpleTraits ───────── v0.9.1
  Installed SpecialFunctions ───── v0.9.0
  Installed SparseDiffTools ────── v1.2.0
  Installed ForwardDiff ────────── v0.10.8
  Installed Inflate ────────────── v0.1.1
  Installed ArrayInterface ─────── v2.3.1
  Installed OrderedCollections ─── v1.1.0
  Installed ArnoldiMethod ──────── v0.0.4
  Installed Compat ─────────────── v3.2.0
  Installed DiffResults ────────── v1.0.2
  Installed DiffRules ──────────── v1.0.0
  Installed LightGraphs ────────── v1.3.0
  Installed MacroTools ─────────── v0.5.3
  Installed Requires ───────────── v1.0.0
  Installed DataStructures ─────── v0.17.7
  Installed StaticArrays ───────── v0.12.1
  Installed CommonSubexpressions ─ v0.2.0
  Installed DiffEqDiffTools ────── v1.7.0
Downloading artifacts...
[ Info: Downloading https://github.com/JuliaBinaryWrappers/OpenSpecFun_jll.jl/releases/download/OpenSpecFun-v0.5.3+1/OpenSpecFun.v0.5.3.x86_64-linux-gnu-libgfortran4.tar.gz to /tmp/jl_lIVlmg-download.gz...
#=#=#                                                                         #####                                                                      7.1%######################################################################## 100.0%
   Updating `~/.julia/environments/v1.4/Project.toml`
  [47a9eef4] + SparseDiffTools v1.2.0
   Updating `~/.julia/environments/v1.4/Manifest.toml`
  [79e6a3ab] + Adapt v1.0.0
  [ec485272] + ArnoldiMethod v0.0.4
  [4fba245c] + ArrayInterface v2.3.1
  [bbf7d656] + CommonSubexpressions v0.2.0
  [34da2185] + Compat v3.2.0
  [864edb3b] + DataStructures v0.17.7
  [01453d9d] + DiffEqDiffTools v1.7.0
  [163ba53b] + DiffResults v1.0.2
  [b552c78f] + DiffRules v1.0.0
  [f6369f11] + ForwardDiff v0.10.8
  [d25df0c9] + Inflate v0.1.1
  [093fc24a] + LightGraphs v1.3.0
  [1914dd2f] + MacroTools v0.5.3
  [77ba4419] + NaNMath v0.3.3
  [efe28fd5] + OpenSpecFun_jll v0.5.3+1
  [bac558e1] + OrderedCollections v1.1.0
  [ae029012] + Requires v1.0.0
  [699a6c99] + SimpleTraits v0.9.1
  [47a9eef4] + SparseDiffTools v1.2.0
  [276daf66] + SpecialFunctions v0.9.0
  [90137ffa] + StaticArrays v0.12.1
  [19fa3120] + VertexSafeGraphs v0.1.0
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
    Testing SparseDiffTools
[ Info: Downloading https://github.com/JuliaBinaryWrappers/MKL_jll.jl/releases/download/MKL-v2019.0.117+0/MKL.v2019.0.117.x86_64-linux-gnu.tar.gz to /tmp/jl_aKMuww-download.gz...
#=#=#                                                                         ##O#- #                                                                                                                                                  0.0%#                                                                          2.3%###                                                                        4.4%###                                                                        5.2%####                                                                       6.0%####                                                                       6.8%#####                                                                      7.5%#####                                                                      8.2%######                                                                     8.8%######                                                                     9.5%#######                                                                   10.1%#######                                                                   10.7%########                                                                  11.3%########                                                                  11.9%#########                                                                 12.6%#########                                                                 13.2%#########                                                                 13.9%##########                                                                14.6%##########                                                                15.2%###########                                                               16.0%############                                                              16.7%############                                                              17.5%#############                                                             18.3%#############                                                             19.1%##############                                                            19.9%##############                                                            20.7%###############                                                           21.4%################                                                          22.3%################                                                          23.2%#################                                                         24.1%#################                                                         25.0%##################                                                        25.9%###################                                                       26.9%####################                                                      27.8%####################                                                      28.7%#####################                                                     29.5%#####################                                                     30.4%######################                                                    31.4%#######################                                                   32.5%########################                                                  33.6%########################                                                  34.6%#########################                                                 35.7%##########################                                                36.9%###########################                                               38.0%############################                                              39.1%############################                                              40.1%#############################                                             41.2%##############################                                            42.3%###############################                                           43.5%################################                                          44.6%################################                                          45.8%#################################                                         47.1%##################################                                        48.4%###################################                                       49.7%####################################                                      51.0%#####################################                                     52.4%######################################                                    53.8%#######################################                                   55.1%########################################                                  56.3%#########################################                                 57.8%##########################################                                59.2%###########################################                               60.6%############################################                              62.1%#############################################                             63.4%##############################################                            64.8%###############################################                           66.4%################################################                          67.9%#################################################                         69.4%##################################################                        70.6%###################################################                       72.1%#####################################################                     73.7%######################################################                    75.3%#######################################################                   77.0%########################################################                  78.7%#########################################################                 80.4%###########################################################               82.1%############################################################              83.8%#############################################################             85.5%##############################################################            87.0%###############################################################           88.6%################################################################          90.2%##################################################################        92.1%###################################################################       93.7%####################################################################      95.5%######################################################################    97.4%#######################################################################   99.1%######################################################################## 100.0%
[ Info: Downloading https://github.com/JuliaBinaryWrappers/IntelOpenMP_jll.jl/releases/download/IntelOpenMP-v2018.0.3+0/IntelOpenMP.v2018.0.3.x86_64-linux-gnu.tar.gz to /tmp/jl_GykLqW-download.gz...
#=#=#                                                                         #                                                                          2.3%######################################################################## 100.0%
[ Info: Downloading https://github.com/JuliaBinaryWrappers/FFTW_jll.jl/releases/download/FFTW-v3.3.9+3/FFTW.v3.3.9.x86_64-linux-gnu.tar.gz to /tmp/jl_an91Ro-download.gz...
#=#=#                                                                         ##O#- #                                                                       ######                                                                     8.5%######################################################################## 100.0%
Status `/tmp/jl_akQtIw/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [79e6a3ab] Adapt v1.0.0
  [ec485272] ArnoldiMethod v0.0.4
  [4fba245c] ArrayInterface v2.3.1
  [4c555306] ArrayLayouts v0.1.5
  [aae01518] BandedMatrices v0.14.2
  [b99e7846] BinaryProvider v0.5.8
  [8e7c35d0] BlockArrays v0.11.1
  [ffab5731] BlockBandedMatrices v0.7.1
  [7057c7e9] Cassette v0.3.0
  [bbf7d656] CommonSubexpressions v0.2.0
  [34da2185] Compat v3.2.0
  [864edb3b] DataStructures v0.17.7
  [01453d9d] DiffEqDiffTools v1.7.0
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.0
  [7a1cc6ca] FFTW v1.2.0
  [f5851436] FFTW_jll v3.3.9+3
  [1a297f60] FillArrays v0.8.4
  [f6369f11] ForwardDiff v0.10.8
  [7869d1d1] IRTools v0.3.0
  [d25df0c9] Inflate v0.1.1
  [1d5cc7b8] IntelOpenMP_jll v2018.0.3+0
  [42fd0dbc] IterativeSolvers v0.8.1
  [093fc24a] LightGraphs v1.3.0
  [856f044c] MKL_jll v2019.0.117+0
  [1914dd2f] MacroTools v0.5.3
  [a3b82374] MatrixFactorizations v0.2.1
  [872c559c] NNlib v0.6.2
  [77ba4419] NaNMath v0.3.3
  [efe28fd5] OpenSpecFun_jll v0.5.3+1
  [bac558e1] OrderedCollections v1.1.0
  [3cdcf5f2] RecipesBase v0.7.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.0
  [1bc83da4] SafeTestsets v0.0.1
  [699a6c99] SimpleTraits v0.9.1
  [47a9eef4] SparseDiffTools v1.2.0
  [684fba80] SparsityDetection v0.1.2
  [276daf66] SpecialFunctions v0.9.0
  [90137ffa] StaticArrays v0.12.1
  [19fa3120] VertexSafeGraphs v0.1.0
  [e88e6eb3] Zygote v0.4.5
  [700de1a5] ZygoteRules v0.2.0
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [1a1011a3] SharedArrays 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
Test Summary:                  | Pass  Total
Exact coloring via contraction |   20     20
114.347426 seconds (10.81 M allocations: 562.514 MiB, 0.53% gc time)
Test Summary:              | Pass  Total
Greedy distance-1 coloring |   20     20
  0.874318 seconds (1.19 M allocations: 62.535 MiB, 2.37% gc time)
Test Summary:        | Pass  Total
Greedy star coloring |  816    816
  1.260451 seconds (847.69 k allocations: 42.724 MiB, 1.23% gc time)
Test Summary:    |    Pass    Total
Acyclic coloring | 2872590  2872590
 37.271887 seconds (105.88 M allocations: 6.011 GiB, 10.61% gc time)
Test Summary:              |  Pass  Total
Matrix to graph conversion | 72615  72615
  3.051981 seconds (3.91 M allocations: 414.252 MiB, 5.19% gc time)
[ Info: ended definitions
[ Info: second passed
[ Info: third passed
[ Info: 4th passed
[ Info: which (::SparseDiffTools.var"#forwarddiff_color_jacobian##kw")(::Any, ::typeof(SparseDiffTools.forwarddiff_color_jacobian), f, x::AbstractArray{#s19,N} where N where #s19<:Number) in SparseDiffTools at /home/pkgeval/.julia/packages/SparseDiffTools/IVLqv/src/differentiation/compute_jacobian_ad.jl:73
[ Info: 5
Test Summary:            | Pass  Total
AD using colorvec vector |   41     41
1626.161958 seconds (2.19 G allocations: 91.188 GiB, 1.85% gc time)
Explored path: SparsityDetection.Path(Bool[], 1)
Test Summary:    | Pass  Total
Integration test |    7      7
 29.102480 seconds (24.04 M allocations: 1.231 GiB, 1.23% gc time)
Test Summary:    | Pass  Total
Special matrices |   87     87
 10.182464 seconds (7.52 M allocations: 371.978 MiB, 1.09% gc time)
┌ Warning: Deprecated syntax `(;)` at /home/pkgeval/.julia/packages/IRTools/Fl3dY/src/passes/relooper.jl:148.
│ Use `begin end` instead.
└ @ ~/.julia/packages/IRTools/Fl3dY/src/passes/relooper.jl:148
┌ Warning: Deprecated syntax `(;)` at /home/pkgeval/.julia/packages/IRTools/Fl3dY/src/passes/relooper.jl:157.
│ Use `begin end` instead.
└ @ ~/.julia/packages/IRTools/Fl3dY/src/passes/relooper.jl:157
┌ Warning: Deprecated syntax `(;)` at /home/pkgeval/.julia/packages/IRTools/Fl3dY/src/passes/relooper.jl:167.
│ Use `begin end` instead.
└ @ ~/.julia/packages/IRTools/Fl3dY/src/passes/relooper.jl:167
Test Summary:         | Pass  Total
Jac Vecs and Hes Vecs |   51     51
152.848044 seconds (57.88 M allocations: 2.845 GiB, 0.55% gc time)
    Testing SparseDiffTools tests passed 
