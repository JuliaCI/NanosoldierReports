Julia Version 1.4.2-pre.0
Commit ef4fe83698 (2020-04-15 16:24 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
   Updating `~/.julia/environments/v1.4/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
   Updating `~/.julia/environments/v1.4/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
    Testing TransformUtils
Status `/tmp/jl_q30Q8D/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [9a3f8284] Random 
  [9e88b42a] Serialization 
  [6462fe0b] Sockets 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.027757523735499348 -0.07048140681685088; -0.027757523735499348 0.0 0.2168065663307267; 0.07048140681685088 -0.2168065663307267 0.0])
dAA = so3([0.0 -0.050650270679516045 0.10448453909512341; 0.050650270679516045 0.0 -0.05778127640229164; -0.10448453909512341 0.05778127640229164 0.0])
dAA = so3([0.0 -0.11054151728974122 0.07120660909833294; 0.11054151728974122 0.0 0.17165239752179237; -0.07120660909833294 -0.17165239752179237 0.0])
dAA = Quaternion(0.9993278998080426, [-0.013325384319249909, -0.010332106089221782, -0.032548892173961785])
dAA = SO3([0.998862828328535 0.025675546396311238 0.040172335017651654; -0.02667826746077 0.9993406807193295 0.024626690900709347; -0.03951354487781617 -0.0256704144235797 0.998889237901035])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.95823511902764 -0.10571687653739391 0.2657242907173939; 0.14312026789254712 0.981710685532563 -0.12554170155590022; -0.24759249903914735 0.15832899900638098 0.9558398832927968]), [-2.168065663307267, -0.7048140681685088, -0.27757523735499345])
xj = SE3(SO3([0.9854555477535878 0.16293884009445664 -0.04825243818036022; -0.15945578161715393 0.9847970308233291 0.06891053468387423; 0.05874706044168427 -0.06021413845790716 0.9964552375391647]), [-1.7165239752179235, 0.7120660909833294, 1.1054151728974122])
Dx = SE3(SO3([0.9069314284100843 0.3119867027216396 -0.28308952910152546; -0.25141736388416347 0.9400267387305191 0.23051906560890448; 0.3380306100038608 -0.13789136229852694 0.9309786672657293]), [0.29304931936011047, 1.5621983027578978, 1.2640254410468752])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
