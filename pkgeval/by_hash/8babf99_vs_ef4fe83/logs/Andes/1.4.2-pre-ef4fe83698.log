Julia Version 1.4.2-pre.0
Commit ef4fe83698 (2020-04-15 16:24 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed VersionParsing â”€ v1.2.0
  Installed Andes â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.1.0
  Installed Parsers â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.3
  Installed Conda â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.4.1
  Installed MacroTools â”€â”€â”€â”€â”€ v0.5.5
  Installed PyCall â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.91.4
  Installed JSON â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.21.0
   Updating `~/.julia/environments/v1.4/Project.toml`
  [93a26e3f] + Andes v0.1.0
   Updating `~/.julia/environments/v1.4/Manifest.toml`
  [93a26e3f] + Andes v0.1.0
  [8f4d0f93] + Conda v1.4.1
  [682c06a0] + JSON v0.21.0
  [1914dd2f] + MacroTools v0.5.5
  [69de0a69] + Parsers v1.0.3
  [438e738f] + PyCall v1.91.4
  [81def892] + VersionParsing v1.2.0
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Building Conda â”€â†’ `~/.julia/packages/Conda/3rPhK/deps/build.log`
   Building PyCall â†’ `~/.julia/packages/PyCall/zqDXB/deps/build.log`
   Building Andes â”€â†’ `~/.julia/packages/Andes/z2jyF/deps/build.log`
    Testing Andes
Status `/tmp/jl_U8XHOB/Manifest.toml`
  [93a26e3f] Andes v0.1.0
  [8f4d0f93] Conda v1.4.1
  [682c06a0] JSON v0.21.0
  [1914dd2f] MacroTools v0.5.5
  [69de0a69] Parsers v1.0.3
  [438e738f] PyCall v1.91.4
  [81def892] VersionParsing v1.2.0
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [6462fe0b] Sockets 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
Working directory: "/home/pkgeval/.julia/packages/Andes/z2jyF/test"
Generating numerical calls at the first launch.
[K Code generation for Bus ( 1/30).[K Code generation for PQ ( 2/30).[K Code generation for PV ( 3/30).[K Code generation for Slack ( 4/30).[K Code generation for Shunt ( 5/30).[K Code generation for Line ( 6/30).[K Code generation for Area ( 7/30).[K Code generation for GENCLS ( 8/30).[K Code generation for GENROU ( 9/30).[K Code generation for TG2 (10/30).[K Code generation for TGOV1 (11/30).[K Code generation for EXDC2 (12/30).[K Code generation for IEEEST (13/30).[K Code generation for BusFreq (14/30).[K Code generation for BusROCOF (15/30).[K Code generation for COI (16/30).[K Code generation for Node (17/30).[K Code generation for Ground (18/30).[K Code generation for R (19/30).[K Code generation for L (20/30).[K Code generation for C (21/30).[K Code generation for RCp (22/30).[K Code generation for RCs (23/30).[K Code generation for RLs (24/30).[K Code generation for RLCs (25/30).[K Code generation for RLCp (26/30).[K Code generation for VSCShunt (27/30).[K Code generation for Toggler (28/30).[K Code generation for Fault (29/30).[K Code generation for PI2 (30/30).Parsing input file "/home/pkgeval/.julia/conda/3/lib/python3.7/site-packages/andes/cases/kundur/kundur_full.xlsx"
Input file parsed in 0.1514 seconds.

-> Power flow calculation
Sparse Solver: UMFPACK
Method: NR method
Power flow initialized.
0: |F(x)| = 14.9283   
1: |F(x)| = 3.60858   
2: |F(x)| = 0.17009   
3: |F(x)| = 0.00203822
4: |F(x)| = 3.76399e-07
Converged in 5 iterations in 0.0180 seconds.
-> Single process finished in 38.4949 seconds.
Test Summary:           | Pass  Total
Andes.jl run power flow |    1      1
    Testing Andes tests passed 
