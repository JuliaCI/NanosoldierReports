Julia Version 1.6.0-DEV.27
Commit 35eb898ad7 (2020-05-12 10:33 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.3.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.3.0
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_oPXPNN/Project.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_oPXPNN/Manifest.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21722216983589432
curgen: 20 fitness: 0.21723004104899435
curgen: 30 fitness: 0.21723004104899435
curgen: 40 fitness: 0.21723004104899435
curgen: 50 fitness: 0.21723004104899435
CoordinateCreature{Array{Float64,1}}([0.22283302792221893], -0.21723004104899435) 0.22283302792221893 -0.21723004104899435
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.257962772365017
curgen: 100 fitness: 3.2582427598747965
curgen: 150 fitness: 3.2583110715066224
curgen: 200 fitness: 3.258346232715014
curgen: 250 fitness: 3.2584302792268933
curgen: 300 fitness: 3.258431196331434
curgen: 350 fitness: 3.258452203353074
curgen: 400 fitness: 3.2584576496625264
curgen: 450 fitness: 3.2584576496625264
curgen: 500 fitness: 3.2584576496625264
CoordinateCreature{Array{Float64,1}}([-0.22261913821158746, 0.22285656657530054, 0.2226986750521808, 0.222339032300849, 0.22289841131363516, 0.22275917219163907, -0.22260751436474838, -0.2217902409863041, -0.22243523409245586, -0.22255725638908896, -0.2226239917764755, -0.2227237657154224, -0.2226633040724593, -0.2223127835698418, 0.22270425781997027], -3.2584576496625264) [-0.22261913821158746, 0.22285656657530054, 0.2226986750521808, 0.222339032300849, 0.22289841131363516, 0.22275917219163907, -0.22260751436474838, -0.2217902409863041, -0.22243523409245586, -0.22255725638908896, -0.2226239917764755, -0.2227237657154224, -0.2226633040724593, -0.2223127835698418, 0.22270425781997027] -3.2584576496625264
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0026399311985869645
curgen: 100 fitness: -0.0024358287250549893
curgen: 150 fitness: -0.0024358287250549893
curgen: 200 fitness: -0.0023850416970105925
curgen: 250 fitness: -0.0023813752343926353
curgen: 300 fitness: -0.00231614723421103
curgen: 350 fitness: -0.002258237826168852
curgen: 400 fitness: -0.002022564109211089
curgen: 450 fitness: -0.002022564109211089
curgen: 500 fitness: -0.002022564109211089
CoordinateCreature{Array{Float64,1}}([0.00019634688167016946, 0.0026037161502124066, -1.6393160418505916e-5, 0.00010657844187567479, 0.00017447145414070143, -4.35426631474846e-6, -0.00023527930128937986, -0.001404878890505265, 0.0003583256566387443, 0.0003723454484313121, 0.000797129385103186, 0.00010335999838394928, 7.387709638183228e-5, -0.0005583119022172598, -0.00027499499163847834], 0.002022564109211089) [0.00019634688167016946, 0.0026037161502124066, -1.6393160418505916e-5, 0.00010657844187567479, 0.00017447145414070143, -4.35426631474846e-6, -0.00023527930128937986, -0.001404878890505265, 0.0003583256566387443, 0.0003723454484313121, 0.000797129385103186, 0.00010335999838394928, 7.387709638183228e-5, -0.0005583119022172598, -0.00027499499163847834] 0.002022564109211089
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
