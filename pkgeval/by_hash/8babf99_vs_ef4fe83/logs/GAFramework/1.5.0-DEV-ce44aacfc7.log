Julia Version 1.5.0-DEV.881
Commit ce44aacfc7 (2020-05-13 14:26 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.3.0
Updating `~/.julia/environments/v1.5/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [5789e2e9] + FileIO v1.3.0
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_B6tTQq/Project.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_B6tTQq/Manifest.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.2172332072731162
curgen: 20 fitness: 0.2172332072731162
curgen: 30 fitness: 0.2172332072731162
curgen: 40 fitness: 0.2172332072731162
curgen: 50 fitness: 0.2172332072731162
CoordinateCreature{Array{Float64,1}}([-0.22264568783878647], -0.2172332072731162) -0.22264568783878647 -0.2172332072731162
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2580910880505742
curgen: 100 fitness: 3.2582430529967317
curgen: 150 fitness: 3.2582506803585747
curgen: 200 fitness: 3.2582792588353318
curgen: 250 fitness: 3.258337629243861
curgen: 300 fitness: 3.25840747619582
curgen: 350 fitness: 3.258413774374997
curgen: 400 fitness: 3.2584246868051663
curgen: 450 fitness: 3.2584246868051663
curgen: 500 fitness: 3.2584246868051663
CoordinateCreature{Array{Float64,1}}([-0.22226331264919133, -0.22271172400242306, -0.22251229219979676, 0.22255252196479355, 0.22259416192383008, -0.2228354604074067, 0.2227002379566485, 0.2235029539406297, -0.22189498742107694, -0.22274034283458868, -0.2228015038783316, 0.22257382989852134, -0.22276853353595769, 0.22226906694059265, 0.222692940809135], -3.2584246868051663) [-0.22226331264919133, -0.22271172400242306, -0.22251229219979676, 0.22255252196479355, 0.22259416192383008, -0.2228354604074067, 0.2227002379566485, 0.2235029539406297, -0.22189498742107694, -0.22274034283458868, -0.2228015038783316, 0.22257382989852134, -0.22276853353595769, 0.22226906694059265, 0.222692940809135] -3.2584246868051663
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.002652962108726342
curgen: 100 fitness: -0.002599474970935489
curgen: 150 fitness: -0.0025744142585324425
curgen: 200 fitness: -0.0025744142585324425
curgen: 250 fitness: -0.002280437775965538
curgen: 300 fitness: -0.002280437775965538
curgen: 350 fitness: -0.00227866684619471
curgen: 400 fitness: -0.0013293962961995476
curgen: 450 fitness: -0.0013293962961995476
curgen: 500 fitness: -0.0005926136425671302
CoordinateCreature{Array{Float64,1}}([-6.584348139475858e-5, 0.0001628424882057752, -0.0005561651222601002, 0.000564932685654593, -0.0006086568642774647, 8.292228169990923e-5, -0.00032198837112234503, -0.0006984969893987357, -0.0007639486452988365, -0.00021195236554005965, -0.00015011920010824225, -0.00025870533644433064, -1.3276479779897045e-5, 0.0007493493022601092, -0.00028132807010630093], 0.0005926136425671302) [-6.584348139475858e-5, 0.0001628424882057752, -0.0005561651222601002, 0.000564932685654593, -0.0006086568642774647, 8.292228169990923e-5, -0.00032198837112234503, -0.0006984969893987357, -0.0007639486452988365, -0.00021195236554005965, -0.00015011920010824225, -0.00025870533644433064, -1.3276479779897045e-5, 0.0007493493022601092, -0.00028132807010630093] 0.0005926136425671302
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
