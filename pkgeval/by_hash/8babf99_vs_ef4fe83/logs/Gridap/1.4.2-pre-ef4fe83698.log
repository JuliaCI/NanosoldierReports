Julia Version 1.4.2-pre.0
Commit ef4fe83698 (2020-04-15 16:24 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed Requires ───────────────────── v1.0.1
  Installed Reexport ───────────────────── v0.2.0
  Installed Distances ──────────────────── v0.8.2
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed TranscodingStreams ─────────── v0.9.5
  Installed JSON ───────────────────────── v0.21.0
  Installed StaticArrays ───────────────── v0.12.3
  Installed Gridap ─────────────────────── v0.9.2
  Installed NaNMath ────────────────────── v0.3.3
  Installed CodecZlib ──────────────────── v0.7.0
  Installed Combinatorics ──────────────── v1.0.2
  Installed UnPack ─────────────────────── v1.0.0
  Installed Parsers ────────────────────── v1.0.3
  Installed QuadGK ─────────────────────── v2.3.1
  Installed CommonSubexpressions ───────── v0.2.0
  Installed ForwardDiff ────────────────── v0.10.10
  Installed NLsolve ────────────────────── v4.3.0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed Zlib_jll ───────────────────── v1.2.11+9
  Installed JLD2 ───────────────────────── v0.1.13
  Installed DocStringExtensions ────────── v0.8.1
  Installed XML2_jll ───────────────────── v2.9.9+4
  Installed SpecialFunctions ───────────── v0.10.0
  Installed DataStructures ─────────────── v0.17.15
  Installed FillArrays ─────────────────── v0.8.9
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed DiffResults ────────────────── v1.0.2
  Installed ArrayInterface ─────────────── v2.8.7
  Installed Parameters ─────────────────── v0.12.1
  Installed FiniteDiff ─────────────────── v2.3.1
  Installed OrderedCollections ─────────── v1.2.0
  Installed DiffRules ──────────────────── v1.0.1
  Installed LineSearches ───────────────── v7.0.1
  Installed Libiconv_jll ───────────────── v1.16.0+2
  Installed NLSolversBase ──────────────── v7.6.1
  Installed BSON ───────────────────────── v0.2.6
  Installed LightXML ───────────────────── v0.9.0
  Installed WriteVTK ───────────────────── v1.5.0
  Installed FileIO ─────────────────────── v1.3.0
   Updating `~/.julia/environments/v1.4/Project.toml`
  [56d4f2e9] + Gridap v0.9.2
   Updating `~/.julia/environments/v1.4/Manifest.toml`
  [4fba245c] + ArrayInterface v2.8.7
  [fbb218c0] + BSON v0.2.6
  [944b1d66] + CodecZlib v0.7.0
  [861a8166] + Combinatorics v1.0.2
  [bbf7d656] + CommonSubexpressions v0.2.0
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [864edb3b] + DataStructures v0.17.15
  [163ba53b] + DiffResults v1.0.2
  [b552c78f] + DiffRules v1.0.1
  [b4f34e82] + Distances v0.8.2
  [ffbed154] + DocStringExtensions v0.8.1
  [442a2c76] + FastGaussQuadrature v0.4.2
  [5789e2e9] + FileIO v1.3.0
  [1a297f60] + FillArrays v0.8.9
  [6a86dc24] + FiniteDiff v2.3.1
  [f6369f11] + ForwardDiff v0.10.10
  [56d4f2e9] + Gridap v0.9.2
  [033835bb] + JLD2 v0.1.13
  [682c06a0] + JSON v0.21.0
  [94ce4f54] + Libiconv_jll v1.16.0+2
  [9c8b4983] + LightXML v0.9.0
  [d3d80556] + LineSearches v7.0.1
  [d41bc354] + NLSolversBase v7.6.1
  [2774e3e8] + NLsolve v4.3.0
  [77ba4419] + NaNMath v0.3.3
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [bac558e1] + OrderedCollections v1.2.0
  [d96e819e] + Parameters v0.12.1
  [69de0a69] + Parsers v1.0.3
  [1fd47b50] + QuadGK v2.3.1
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v1.0.1
  [276daf66] + SpecialFunctions v0.10.0
  [90137ffa] + StaticArrays v0.12.3
  [3bb67fe8] + TranscodingStreams v0.9.5
  [3a884ed6] + UnPack v1.0.0
  [64499a7a] + WriteVTK v1.5.0
  [02c8fc9c] + XML2_jll v2.9.9+4
  [83775a58] + Zlib_jll v1.2.11+9
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
    Testing Gridap
Status `/tmp/jl_23xWF9/Manifest.toml`
  [4fba245c] ArrayInterface v2.8.7
  [fbb218c0] BSON v0.2.6
  [944b1d66] CodecZlib v0.7.0
  [861a8166] Combinatorics v1.0.2
  [bbf7d656] CommonSubexpressions v0.2.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [864edb3b] DataStructures v0.17.15
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [b4f34e82] Distances v0.8.2
  [ffbed154] DocStringExtensions v0.8.1
  [442a2c76] FastGaussQuadrature v0.4.2
  [5789e2e9] FileIO v1.3.0
  [1a297f60] FillArrays v0.8.9
  [6a86dc24] FiniteDiff v2.3.1
  [f6369f11] ForwardDiff v0.10.10
  [56d4f2e9] Gridap v0.9.2
  [033835bb] JLD2 v0.1.13
  [682c06a0] JSON v0.21.0
  [94ce4f54] Libiconv_jll v1.16.0+2
  [9c8b4983] LightXML v0.9.0
  [d3d80556] LineSearches v7.0.1
  [d41bc354] NLSolversBase v7.6.1
  [2774e3e8] NLsolve v4.3.0
  [77ba4419] NaNMath v0.3.3
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [bac558e1] OrderedCollections v1.2.0
  [d96e819e] Parameters v0.12.1
  [69de0a69] Parsers v1.0.3
  [1fd47b50] QuadGK v2.3.1
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [276daf66] SpecialFunctions v0.10.0
  [90137ffa] StaticArrays v0.12.3
  [3bb67fe8] TranscodingStreams v0.9.5
  [3a884ed6] UnPack v1.0.0
  [64499a7a] WriteVTK v1.5.0
  [02c8fc9c] XML2_jll v2.9.9+4
  [83775a58] Zlib_jll v1.2.11+9
  [2a0f44e3] Base64 
  [ade2ca70] Dates 
  [8ba89e20] Distributed 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [d6f4376e] Markdown 
  [a63ad114] Mmap 
  [44cfe95a] Pkg 
  [de0858da] Printf 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [ea8e919c] SHA 
  [9e88b42a] Serialization 
  [6462fe0b] Sockets 
  [2f01184e] SparseArrays 
  [10745b16] Statistics 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
Test Summary: | Pass  Total
Helpers       |   13     13
264.202122 seconds (17.59 M allocations: 953.682 MiB, 0.44% gc time)
Test Summary: | Pass  Total
Inference     |   17     17
  2.488882 seconds (2.20 M allocations: 125.769 MiB, 1.46% gc time)
Test Summary: | Pass  Total
Io            |    9      9
 32.271061 seconds (30.21 M allocations: 1.445 GiB, 3.99% gc time)
Test Summary: | Pass  Total
Algebra       |  693    693
 86.142285 seconds (84.88 M allocations: 4.027 GiB, 3.48% gc time)
Test Summary: | Pass  Total
TensorValues  |  227    227
 16.131722 seconds (13.35 M allocations: 686.756 MiB, 3.35% gc time)
Test Summary: | Pass  Total
Arrays        |  321    321
 32.344729 seconds (28.82 M allocations: 1.410 GiB, 4.23% gc time)
Test Summary: | Pass  Total
Fields        |  620    620
 71.792625 seconds (56.19 M allocations: 2.766 GiB, 2.91% gc time)
Test Summary: | Pass  Total
Polynomials   |  261    261
 25.475685 seconds (22.42 M allocations: 1.126 GiB, 3.33% gc time)
Test Summary: | Pass  Total
Integration   |   28     28
 19.791137 seconds (30.59 M allocations: 1.380 GiB, 10.14% gc time)
Test Summary: | Pass  Total
ReferenceFEs  |  981    981
 86.953719 seconds (79.11 M allocations: 3.928 GiB, 3.49% gc time)
Test Summary: | Pass  Total
Geometry      | 2165   2165
187.658636 seconds (163.10 M allocations: 8.311 GiB, 4.11% gc time)
Test Summary: | Pass  Total
FESpaces      | 1001   1001
448.693409 seconds (313.40 M allocations: 15.749 GiB, 4.24% gc time)
Test Summary: | Pass  Total
MultiField    |  318    318
120.829450 seconds (76.74 M allocations: 3.921 GiB, 3.57% gc time)
Test Summary: |
Visualization | No tests
 20.341486 seconds (14.15 M allocations: 742.483 MiB, 2.93% gc time)
Test Summary: | Pass  Total
Gridap        |   31     31
977.617009 seconds (468.44 M allocations: 25.020 GiB, 3.23% gc time)
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds (1 allocation: 32 bytes)
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds (1 allocation: 32 bytes)
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ running suite for n = 10 +++
  0.000000 seconds
  0.000001 seconds (10 allocations: 320 bytes)
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
+++ running suite for n = 1000 +++
  0.000000 seconds
  0.000074 seconds (1000 allocations: 31.250 KiB)
  0.000025 seconds
  0.000000 seconds
  0.000033 seconds
  0.000035 seconds
  0.000052 seconds
+++ running suite for n = 100000 +++
  0.000000 seconds
  0.004683 seconds (100.00 k allocations: 3.052 MiB)
  0.002254 seconds
  0.000000 seconds
  0.002615 seconds
  0.003049 seconds
  0.000962 seconds
WARNING: replacing module ArraysBenchs.
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds (1 allocation: 32 bytes)
  0.000001 seconds (1 allocation: 32 bytes)
  0.000000 seconds
  0.000001 seconds
  0.000005 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds (1 allocation: 32 bytes)
  0.000001 seconds (1 allocation: 32 bytes)
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
+++ running suite for n = 10 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds (10 allocations: 320 bytes)
  0.000005 seconds (10 allocations: 320 bytes)
  0.000000 seconds
  0.000002 seconds
  0.000004 seconds (2 allocations: 288 bytes)
+++ running suite for n = 1000 +++
  0.000005 seconds
  0.000005 seconds
  0.000079 seconds (1000 allocations: 31.250 KiB)
  0.000332 seconds (1000 allocations: 31.250 KiB)
  0.000005 seconds
  0.000108 seconds
  0.000172 seconds (2 allocations: 288 bytes)
+++ running suite for n = 100000 +++
  0.000455 seconds
  0.000438 seconds
  0.007244 seconds (100.00 k allocations: 3.052 MiB)
  0.029879 seconds (100.00 k allocations: 3.052 MiB)
  0.000352 seconds
  0.012212 seconds
  0.022019 seconds (2 allocations: 288 bytes)
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ running suite for n = 10 +++
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
+++ running suite for n = 1000 +++
  0.000026 seconds
  0.000027 seconds
  0.000075 seconds
  0.000079 seconds
+++ running suite for n = 100000 +++
  0.002588 seconds
  0.002633 seconds
  0.007481 seconds
  0.007997 seconds
+++ running suite for n = 1 +++
  0.000007 seconds
  0.000000 seconds
  0.000017 seconds
  0.000000 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ running suite for n = 10 +++
  0.000001 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
+++ running suite for n = 1000 +++
  0.000016 seconds
  0.000000 seconds
  0.000054 seconds
  0.000000 seconds
+++ running suite for n = 100000 +++
  0.001452 seconds
  0.000000 seconds
  0.004778 seconds
  0.000000 seconds
+++ running suite for n = 1 +++
  0.000003 seconds
  0.000003 seconds
  0.000002 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000000 seconds
+++ running suite for n = 10 +++
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
+++ running suite for n = 1000 +++
  0.000092 seconds
  0.000100 seconds
  0.000116 seconds
+++ running suite for n = 100000 +++
  0.009310 seconds
  0.009713 seconds
  0.011065 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
  0.000001 seconds
  0.000000 seconds
  0.000002 seconds (3 allocations: 48 bytes)
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000002 seconds
  0.000001 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000000 seconds
  0.000002 seconds (3 allocations: 48 bytes)
  0.000001 seconds
  0.000000 seconds
  0.000000 seconds
  0.000002 seconds
  0.000002 seconds
+++ running suite for n = 10 +++
  0.000001 seconds
  0.000000 seconds
  0.000002 seconds
  0.000003 seconds
  0.000001 seconds
  0.000000 seconds
  0.000003 seconds
  0.000003 seconds
  0.000001 seconds
  0.000001 seconds
  0.000006 seconds (30 allocations: 480 bytes)
  0.000003 seconds
  0.000001 seconds
  0.000000 seconds
  0.000009 seconds
  0.000008 seconds
+++ running suite for n = 1000 +++
  0.000033 seconds
  0.000005 seconds
  0.000130 seconds
  0.000149 seconds
  0.000029 seconds
  0.000002 seconds
  0.000147 seconds
  0.000144 seconds
  0.000048 seconds
  0.000017 seconds
  0.000406 seconds (3.49 k allocations: 54.516 KiB)
  0.000186 seconds
  0.000133 seconds
  0.000003 seconds
  0.000677 seconds
  0.000492 seconds
+++ running suite for n = 100000 +++
  0.003193 seconds
  0.000395 seconds
  0.016835 seconds
  0.017384 seconds
  0.003893 seconds
  0.000143 seconds
  0.019221 seconds
  0.018422 seconds
  0.003643 seconds
  0.001481 seconds
  0.034287 seconds (399.49 k allocations: 6.096 MiB)
  0.015826 seconds
  0.010424 seconds
  0.000285 seconds
  0.069954 seconds
  0.070306 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds (1 allocation: 112 bytes)
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds (1 allocation: 144 bytes)
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000000 seconds
  0.000001 seconds
  0.000002 seconds (1 allocation: 112 bytes)
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds (1 allocation: 144 bytes)
+++ running suite for n = 10 +++
  0.000001 seconds
  0.000000 seconds
  0.000003 seconds
  0.000003 seconds (1 allocation: 112 bytes)
  0.000000 seconds
  0.000003 seconds
  0.000003 seconds (1 allocation: 144 bytes)
+++ running suite for n = 1000 +++
  0.000066 seconds
  0.000007 seconds
  0.000188 seconds
  0.000198 seconds (1 allocation: 112 bytes)
  0.000007 seconds
  0.000226 seconds
  0.000215 seconds (1 allocation: 144 bytes)
+++ running suite for n = 100000 +++
  0.006784 seconds
  0.000729 seconds
  0.023985 seconds
  0.019194 seconds (1 allocation: 112 bytes)
  0.000671 seconds
  0.023784 seconds
  0.022965 seconds (1 allocation: 144 bytes)
+++ running suite for n = 1 +++
  0.000001 seconds
  0.000000 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000002 seconds
  0.000002 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
+++ running suite for n = 1 +++
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
  0.000001 seconds
+++ running suite for n = 10 +++
  0.000001 seconds
  0.000002 seconds
  0.000005 seconds
  0.000001 seconds
  0.000002 seconds
  0.000004 seconds
  0.000002 seconds
  0.000002 seconds
  0.000002 seconds
  0.000002 seconds
  0.000002 seconds
  0.000002 seconds
  0.000004 seconds
+++ running suite for n = 1000 +++
  0.000107 seconds
  0.003497 seconds
  0.000432 seconds
  0.000100 seconds
  0.000133 seconds
  0.000316 seconds
  0.000101 seconds
  0.000138 seconds
  0.000111 seconds
  0.000118 seconds
  0.000142 seconds
  0.000108 seconds
  0.000250 seconds
+++ running suite for n = 100000 +++
  0.008913 seconds
  0.010991 seconds
  0.042755 seconds
  0.008822 seconds
  0.011427 seconds
  0.032324 seconds
  0.010044 seconds
  0.012508 seconds
  0.009833 seconds
  0.010422 seconds
  0.012389 seconds
  0.009338 seconds
  0.024401 seconds
+++ running suite for n = 1 +++
  0.000001 seconds
  0.000001 seconds
  0.000002 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000001 seconds
  0.000002 seconds
+++ running suite for n = 10 +++
  0.000001 seconds
  0.000003 seconds
  0.000013 seconds
+++ running suite for n = 1000 +++
  0.000092 seconds
  0.000262 seconds
  0.001178 seconds
+++ running suite for n = 100000 +++
  0.008007 seconds
  0.026388 seconds
  0.113464 seconds
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000004 seconds (3 allocations: 48 bytes)
+++ running suite for n = 1 +++
  0.000000 seconds
  0.000002 seconds (3 allocations: 48 bytes)
+++ running suite for n = 10 +++
  0.000001 seconds
  0.000008 seconds (30 allocations: 480 bytes)
+++ running suite for n = 1000 +++
  0.000080 seconds
  0.000697 seconds (3.49 k allocations: 54.516 KiB)
+++ running suite for n = 100000 +++
  0.008119 seconds
  0.068721 seconds (399.49 k allocations: 6.096 MiB)
+++ running suite for n = 1 +++
  0.000008 seconds
  0.000001 seconds
  0.000008 seconds (5 allocations: 96 bytes)
  0.315877 seconds (197.37 k allocations: 9.823 MiB)
  0.000000 seconds
  0.000014 seconds (5 allocations: 128 bytes)
  0.000000 seconds
+++ running suite for n = 1 +++
  0.000001 seconds
  0.000001 seconds
  0.000004 seconds (5 allocations: 96 bytes)
  0.000009 seconds (5 allocations: 96 bytes)
  0.000000 seconds
  0.000011 seconds (5 allocations: 128 bytes)
  0.000000 seconds
+++ running suite for n = 10 +++
  0.000001 seconds
  0.000002 seconds
  0.000023 seconds (50 allocations: 960 bytes)
  0.000056 seconds (50 allocations: 960 bytes)
  0.000001 seconds
  0.000038 seconds (50 allocations: 1.250 KiB)
  0.000012 seconds (5 allocations: 128 bytes)
+++ running suite for n = 1000 +++
  0.000023 seconds
  0.000137 seconds
  0.002233 seconds (5.49 k allocations: 101.391 KiB)
  0.005316 seconds (5.49 k allocations: 101.391 KiB)
  0.000029 seconds
  0.002010 seconds (5.49 k allocations: 132.641 KiB)
  0.000013 seconds (5 allocations: 128 bytes)
+++ running suite for n = 100000 +++
  0.002410 seconds
  0.012851 seconds
  0.214570 seconds (599.49 k allocations: 10.673 MiB)
  0.623435 seconds (599.49 k allocations: 10.673 MiB)
  0.003029 seconds
  0.225227 seconds (599.49 k allocations: 13.725 MiB)
  0.000224 seconds (5 allocations: 128 bytes)
+++ running suite for n = 1 +++
  0.000004 seconds
  0.000008 seconds
  0.000007 seconds
  0.000014 seconds (30 allocations: 1.406 KiB)
+++ running suite for n = 1 +++
  0.000002 seconds
  0.000003 seconds
  0.000002 seconds
  0.000005 seconds (30 allocations: 1.406 KiB)
+++ running suite for n = 10 +++
  0.000011 seconds
  0.000023 seconds
  0.000019 seconds
  0.000052 seconds (300 allocations: 14.062 KiB)
+++ running suite for n = 1000 +++
  0.001049 seconds
  0.002059 seconds
  0.001775 seconds
  0.004031 seconds (30.00 k allocations: 1.373 MiB)
+++ running suite for n = 100000 +++
  0.082724 seconds
  0.158668 seconds
  0.174747 seconds
  0.735345 seconds (3.00 M allocations: 137.329 MiB, 29.75% gc time)
    Testing Gridap tests passed 
