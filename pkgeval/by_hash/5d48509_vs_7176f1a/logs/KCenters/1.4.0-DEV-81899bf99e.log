Julia Version 1.4.0-DEV.634
Commit 81899bf99e (2019-12-18 10:13 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed LearnBase ─────────────────── v0.2.2
 Installed Missings ──────────────────── v0.4.3
 Installed Tables ────────────────────── v0.2.11
 Installed KCenters ──────────────────── v0.1.8
 Installed OrderedCollections ────────── v1.1.0
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed StatsBase ─────────────────── v0.32.0
 Installed DataFrames ────────────────── v0.20.0
 Installed InvertedIndices ───────────── v1.0.0
 Installed DataAPI ───────────────────── v1.1.0
 Installed Reexport ──────────────────── v0.2.0
 Installed SortingAlgorithms ─────────── v0.3.1
 Installed Compat ────────────────────── v3.0.0
 Installed Parsers ───────────────────── v0.3.10
 Installed MappedArrays ──────────────── v0.2.2
 Installed SimilaritySearch ──────────── v0.3.17
 Installed DataStructures ────────────── v0.17.6
 Installed PooledArrays ──────────────── v0.5.2
 Installed JSON ──────────────────────── v0.21.0
 Installed DataValueInterfaces ───────── v1.0.0
 Installed MLDataPattern ─────────────── v0.5.0
 Installed MLLabelUtils ──────────────── v0.5.1
 Installed CategoricalArrays ─────────── v0.7.4
 Installed TableTraits ───────────────── v1.0.0
 Installed MLDataUtils ───────────────── v0.5.0
  Updating `~/.julia/environments/v1.4/Project.toml`
  [5d8de97f] + KCenters v0.1.8
  Updating `~/.julia/environments/v1.4/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.4
  [34da2185] + Compat v3.0.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.6
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.8
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [2dfb63ee] + PooledArrays v0.5.2
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing KCenters
Path `/home/pkgeval/.julia/packages/KCenters/ME2xN` exists and looks like the correct package. Using existing path.
  Updating `/tmp/jl_g7Ai7g/Project.toml`
  [5d8de97f] + KCenters v0.1.8 [`~/.julia/packages/KCenters/ME2xN`]
  Updating `/tmp/jl_g7Ai7g/Manifest.toml`
  [5d8de97f] ~ KCenters v0.1.8 ⇒ v0.1.8 [`~/.julia/packages/KCenters/ME2xN`]
Running sandbox
Status `/tmp/jl_g7Ai7g/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.8 [`~/.julia/packages/KCenters/ME2xN`]
  [cc2ba9b6] MLDataUtils v0.5.0
  [053f045d] SimilaritySearch v0.3.17
  [2913bbd2] StatsBase v0.32.0
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [2f01184e] SparseArrays 
  [8dfed614] Test 
WARNING: Compat.Statistics is deprecated, use Statistics instead.
  likely near /home/pkgeval/.julia/packages/CategoricalArrays/u89s1/src/extras.jl:1
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 137.36999999999995
[ Info: 73.66
[ Info: 43.760000000000005
[ Info: 25.070000000000004
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 313.64000338064864
[ Info: 547.7199992669996
[ Info: 146.21999835129265
[ Info: 76.6400011840614
Test Summary:        |
Clustering with dnet | No tests
inertia(cfft.distances) = 18.7977060097429
inertia(cdnet.distances) = 29.250768316598425
inertia(crand.distances) = 20.625957954946667
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7509765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7509765625,"f1":0.8460185647685654,"seconds":5.889683961868286e-6,"exhaustive_search_seconds":1.8272548913955688e-6,"evaluations":8.265625,"distances_sum":1956.8216840479722}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.505859375, conf: {"ssize":5,"bsize":3}, perf: {"precision":null,"recall":0.505859375,"f1":null,"seconds":3.935769200325012e-6,"exhaustive_search_seconds":1.8272548913955688e-6,"evaluations":6.921875,"distances_sum":1264.9423613202532}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7509765625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7509765625,"f1":0.8460185647685654,"seconds":5.889683961868286e-6,"exhaustive_search_seconds":1.8272548913955688e-6,"evaluations":8.265625,"distances_sum":1956.8216840479722}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9486492673992677,"seconds":5.6587159633636475e-6,"exhaustive_search_seconds":1.8272548913955688e-6,"evaluations":8.7265625,"distances_sum":2588.6941199566686}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.841796875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.841796875,"f1":0.9076293498168506,"seconds":5.535781383514404e-6,"exhaustive_search_seconds":1.8272548913955688e-6,"evaluations":8.6171875,"distances_sum":2275.7146880018668}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.759765625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.759765625,"f1":0.8526712870462878,"seconds":5.187466740608215e-6,"exhaustive_search_seconds":1.8272548913955688e-6,"evaluations":8.2265625,"distances_sum":1999.1835037839592}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9091796875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9091796875,"f1":0.9486492673992677,"seconds":5.6587159633636475e-6,"exhaustive_search_seconds":1.8272548913955688e-6,"evaluations":8.7265625,"distances_sum":2588.6941199566686}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.969236492673993,"seconds":5.953013896942139e-6,"exhaustive_search_seconds":1.8272548913955688e-6,"evaluations":8.84375,"distances_sum":2709.9968435455526}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9524210164835166,"seconds":5.772337317466736e-6,"exhaustive_search_seconds":1.8272548913955688e-6,"evaluations":8.75,"distances_sum":2595.033029283348}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9443359375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.969236492673993,"seconds":5.953013896942139e-6,"exhaustive_search_seconds":1.8272548913955688e-6,"evaluations":8.84375,"distances_sum":2709.9968435455526}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9443359375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.969236492673993,"seconds":5.953013896942139e-6,"exhaustive_search_seconds":1.8272548913955688e-6,"evaluations":8.84375,"distances_sum":2709.9968435455526}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5830078125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5830078125,"f1":0.7168595293595299,"seconds":4.51505184173584e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":7.2421875,"distances_sum":1282.9639632323858}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5830078125,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5830078125,"f1":0.7168595293595299,"seconds":4.51505184173584e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":7.2421875,"distances_sum":1282.9639632323858}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.681640625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.681640625,"f1":0.7987288752913763,"seconds":4.954636096954346e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":7.875,"distances_sum":1536.1178724640492}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.681640625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.681640625,"f1":0.7987288752913763,"seconds":4.954636096954346e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":7.875,"distances_sum":1536.1178724640492}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9420673076923084,"seconds":5.781650543212891e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.671875,"distances_sum":2256.0171838725796}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.961836080586081,"seconds":5.813315510749817e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.9140625,"distances_sum":2409.560255052283}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9465862262737267,"seconds":5.956739187240601e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.8203125,"distances_sum":2324.0725873651895}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8603515625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8603515625,"f1":0.9201725357975366,"seconds":5.349516868591309e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.625,"distances_sum":2102.552870317402}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7705078125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7705078125,"f1":0.8605215964590972,"seconds":5.161389708518982e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.2265625,"distances_sum":1831.714517435211}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9326171875,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.961836080586081,"seconds":5.813315510749817e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.9140625,"distances_sum":2409.560255052283}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9326171875,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.961836080586081,"seconds":5.813315510749817e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.9140625,"distances_sum":2409.560255052283}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1923828125, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.1923828125,"f1":null,"seconds":3.1478703022003174e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":5.6015625,"distances_sum":477.8714752405096}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.1923828125,"state":{"ssize":5,"bsize":1},"perf":{"precision":null,"recall":0.1923828125,"f1":null,"seconds":3.1478703022003174e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":5.6015625,"distances_sum":477.8714752405096}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.1923828125,"state":{"ssize":5,"bsize":1},"perf":{"precision":null,"recall":0.1923828125,"f1":null,"seconds":3.1478703022003174e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":5.6015625,"distances_sum":477.8714752405096}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.212890625, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.212890625,"f1":null,"seconds":3.3266842365264893e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":5.5703125,"distances_sum":494.00638699791466}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.572265625, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.572265625,"f1":0.7118927947052952,"seconds":4.2673200368881226e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":7.0,"distances_sum":1382.6469661418714}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.572265625,"state":{"ssize":5,"bsize":3},"perf":{"precision":1.0,"recall":0.572265625,"f1":0.7118927947052952,"seconds":4.2673200368881226e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":7.0,"distances_sum":1382.6469661418714}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9443483599733604,"seconds":5.964189767837524e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.8828125,"distances_sum":2495.371964903004}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.90234375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.90234375,"f1":0.9443483599733604,"seconds":5.964189767837524e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.8828125,"distances_sum":2495.371964903004}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9732715201465204,"seconds":6.146728992462158e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.9453125,"distances_sum":2748.254097956701}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9424398518148525,"seconds":5.930662155151367e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.8515625,"distances_sum":2536.210473748941}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9521484375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9732715201465204,"seconds":6.146728992462158e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.9453125,"distances_sum":2748.254097956701}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9521484375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9732715201465204,"seconds":6.146728992462158e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.9453125,"distances_sum":2748.254097956701}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6474609375, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6474609375,"f1":0.7746643981018988,"seconds":4.820525646209717e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":7.6875,"distances_sum":1585.1643797138136}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5048828125, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5048828125,"f1":0.6537703615828621,"seconds":4.159286618232727e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":6.546875,"distances_sum":1190.3555003694412}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1748046875, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.1748046875,"f1":null,"seconds":3.1311064958572388e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":4.609375,"distances_sum":429.26143594818853}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6474609375,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.6474609375,"f1":0.7746643981018988,"seconds":4.820525646209717e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":7.6875,"distances_sum":1585.1643797138136}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9439789377289382,"seconds":5.548819899559021e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.7734375,"distances_sum":2415.4643531238917}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8173828125, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8173828125,"f1":0.8931178196803204,"seconds":5.6121498346328735e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.5625,"distances_sum":2109.343587202467}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8740234375, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8740234375,"f1":0.927229541292042,"seconds":5.738809704780579e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.703125,"distances_sum":2289.8145974536483}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8037109375, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8037109375,"f1":0.8818400349650357,"seconds":5.982816219329834e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.4921875,"distances_sum":2020.5495588052331}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8642578125, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8642578125,"f1":0.9193254662004668,"seconds":6.215646862983704e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.671875,"distances_sum":2271.3208918260607}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7412109375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7412109375,"f1":0.8429325882450891,"seconds":4.8782676458358765e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.03125,"distances_sum":1850.4513589313792}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9013671875,"state":{"ssize":6,"bsize":8},"perf":{"precision":1.0,"recall":0.9013671875,"f1":0.9439789377289382,"seconds":5.548819899559021e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.7734375,"distances_sum":2415.4643531238917}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":10,"bsize":11}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.96577380952381,"seconds":6.1336904764175415e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.9296875,"distances_sum":2520.263043110769}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9732142857142863,"seconds":6.0498714447021484e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.890625,"distances_sum":2614.488628962071}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9726762820512824,"seconds":6.195157766342163e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.890625,"distances_sum":2595.191211014895}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.957652243589744,"seconds":5.83939254283905e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.8671875,"distances_sum":2502.0217224577677}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.966666666666667,"seconds":6.023794412612915e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.890625,"distances_sum":2550.117720779843}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9629693223443226,"seconds":5.9157609939575195e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.875,"distances_sum":2535.0475033633124}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.951171875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9732142857142863,"seconds":6.0498714447021484e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.890625,"distances_sum":2614.488628962071}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.951171875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9732142857142863,"seconds":6.0498714447021484e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.890625,"distances_sum":2614.488628962071}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.658203125, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.658203125,"f1":0.781563922188923,"seconds":4.881992936134338e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":7.8515625,"distances_sum":1561.5303308287998}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7880859375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7880859375,"f1":0.8746227730602739,"seconds":5.3998082876205444e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.34375,"distances_sum":1955.107898647477}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.41015625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.41015625,"f1":null,"seconds":4.580244421958923e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":6.3671875,"distances_sum":871.7239096221874}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7880859375,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7880859375,"f1":0.8746227730602739,"seconds":5.3998082876205444e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.34375,"distances_sum":1955.107898647477}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9491872710622717,"seconds":5.8785080909729e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.796875,"distances_sum":2526.147793789228}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.957291666666667,"seconds":5.982816219329834e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.828125,"distances_sum":2565.081376700186}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.945936355311356,"seconds":5.964189767837524e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.7734375,"distances_sum":2459.259914221624}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.92578125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.957291666666667,"seconds":5.982816219329834e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.828125,"distances_sum":2565.081376700186}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.962890625, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.962890625,"f1":0.9800595238095242,"seconds":6.370246410369873e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.9921875,"distances_sum":2692.4546212753503}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9684008699633706,"seconds":6.236135959625244e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.9296875,"distances_sum":2625.3220788059284}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":8,"bsize":11}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9696657509157514,"seconds":6.156042218208313e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.9375,"distances_sum":2630.416647376486}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.962890625,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.962890625,"f1":0.9800595238095242,"seconds":6.370246410369873e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.9921875,"distances_sum":2692.4546212753503}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.962890625,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.962890625,"f1":0.9800595238095242,"seconds":6.370246410369873e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.9921875,"distances_sum":2692.4546212753503}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.431640625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.431640625,"f1":null,"seconds":3.7383288145065308e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":6.5625,"distances_sum":933.8017547882201}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.65625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.65625,"f1":0.7810156857031866,"seconds":4.900619387626648e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":7.7265625,"distances_sum":1520.1426755965015}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.65625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.65625,"f1":0.7810156857031866,"seconds":4.900619387626648e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":7.7265625,"distances_sum":1520.1426755965015}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7578125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7578125,"f1":0.8549601440226448,"seconds":5.37186861038208e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.1875,"distances_sum":1819.6823247378811}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.67578125, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.67578125,"f1":0.7944680319680327,"seconds":4.893168807029724e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":7.8515625,"distances_sum":1574.6591824702614}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.796875, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.796875,"f1":0.8805918040293049,"seconds":5.519017577171326e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.5625,"distances_sum":1954.1059435935974}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.796875,"state":{"ssize":3,"bsize":6},"perf":{"precision":1.0,"recall":0.796875,"f1":0.8805918040293049,"seconds":5.519017577171326e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.5625,"distances_sum":1954.1059435935974}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9685096153846158,"seconds":6.059184670448303e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.921875,"distances_sum":2562.863386254861}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9531307234432241,"seconds":6.148591637611389e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.734375,"distances_sum":2499.594866077929}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8681640625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8681640625,"f1":0.9233173076923081,"seconds":5.539506673812866e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.5546875,"distances_sum":2282.544968601573}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83984375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.83984375,"f1":0.9073208041958049,"seconds":5.8710575103759766e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.6796875,"distances_sum":2141.282003796082}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9685096153846158,"seconds":6.059184670448303e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.921875,"distances_sum":2562.863386254861}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.943359375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9685096153846158,"seconds":6.059184670448303e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.921875,"distances_sum":2562.863386254861}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.66015625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.66015625,"f1":0.7856159465534472,"seconds":4.954636096954346e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":7.78125,"distances_sum":1579.8843769345347}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.21875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.21875,"f1":null,"seconds":3.85381281375885e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":6.1953125,"distances_sum":483.5926708389943}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5966796875, conf: {"ssize":4,"bsize":3}, perf: {"precision":null,"recall":0.5966796875,"f1":null,"seconds":4.375353455543518e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":7.1015625,"distances_sum":1372.711650201386}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.66015625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.66015625,"f1":0.7856159465534472,"seconds":4.954636096954346e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":7.78125,"distances_sum":1579.8843769345347}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.771484375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.771484375,"f1":0.8641285797535806,"seconds":5.7462602853775024e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.1484375,"distances_sum":1907.4614185276525}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8740234375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8740234375,"f1":0.9285256410256417,"seconds":6.081536412239075e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.46875,"distances_sum":2298.8854781166624}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.873046875, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.873046875,"f1":0.9275469322344331,"seconds":8.084066212177277e-5,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.5234375,"distances_sum":2295.057064465181}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8740234375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8740234375,"f1":0.9285256410256417,"seconds":6.081536412239075e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.46875,"distances_sum":2298.8854781166624}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9660917207792211,"seconds":5.833804607391357e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.90625,"distances_sum":2580.673365330253}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9659111721611725,"seconds":6.012618541717529e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.8515625,"distances_sum":2616.9695687103595}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9430746336996341,"seconds":5.774199962615967e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.7265625,"distances_sum":2450.946641960966}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9484291749916756,"seconds":5.89713454246521e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.7421875,"distances_sum":2480.829856095324}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9722699175824179,"seconds":5.97536563873291e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.9140625,"distances_sum":2649.988629226968}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9501953125,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9722699175824179,"seconds":5.97536563873291e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.9140625,"distances_sum":2649.988629226968}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9501953125,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9722699175824179,"seconds":5.97536563873291e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.9140625,"distances_sum":2649.988629226968}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.724609375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.724609375,"f1":0.8292707292707301,"seconds":4.764646291732788e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":7.828125,"distances_sum":1749.512706430685}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.15625, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.15625,"f1":null,"seconds":2.907589077949524e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":4.546875,"distances_sum":381.203703677382}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3173828125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3173828125,"f1":null,"seconds":3.112480044364929e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":5.078125,"distances_sum":762.1061531741304}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.724609375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.724609375,"f1":0.8292707292707301,"seconds":4.764646291732788e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":7.828125,"distances_sum":1749.512706430685}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.75,"f1":0.8470045579420588,"seconds":4.759058356285095e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":7.9375,"distances_sum":1859.4518156959555}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9598474442224447,"seconds":5.837529897689819e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.78125,"distances_sum":2527.885350289246}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.9310782967032971,"seconds":5.474314093589783e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.5703125,"distances_sum":2372.3618067000193}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7822265625, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.7822265625,"f1":0.8690054736929745,"seconds":4.967674612998962e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.015625,"distances_sum":1920.1894450057448}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9296875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9598474442224447,"seconds":5.837529897689819e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.78125,"distances_sum":2527.885350289246}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9677734375, conf: {"ssize":3,"bsize":13}, perf: {"precision":1.0,"recall":0.9677734375,"f1":0.9827380952380955,"seconds":5.770474672317505e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.96875,"distances_sum":2638.9350456046445}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9704097985347988,"seconds":5.869194865226746e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.84375,"distances_sum":2582.8134518937295}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9658203125, conf: {"ssize":4,"bsize":13}, perf: {"precision":1.0,"recall":0.9658203125,"f1":0.9813988095238098,"seconds":5.932524800300598e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.984375,"distances_sum":2635.312978429706}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":2,"bsize":12}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9703926282051285,"seconds":5.716457962989807e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.890625,"distances_sum":2575.6121626114636}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9633585164835169,"seconds":6.083399057388306e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.8671875,"distances_sum":2503.2426023395305}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9677734375,"state":{"ssize":3,"bsize":13},"perf":{"precision":1.0,"recall":0.9677734375,"f1":0.9827380952380955,"seconds":5.770474672317505e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.96875,"distances_sum":2638.9350456046445}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9677734375,"state":{"ssize":3,"bsize":13},"perf":{"precision":1.0,"recall":0.9677734375,"f1":0.9827380952380955,"seconds":5.770474672317505e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.96875,"distances_sum":2638.9350456046445}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5224609375, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5224609375,"f1":null,"seconds":3.8798898458480835e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":6.421875,"distances_sum":1005.2663548744534}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.375,"f1":null,"seconds":7.202848792076111e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":5.3984375,"distances_sum":705.826793363767}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5224609375,"state":{"ssize":1,"bsize":3},"perf":{"precision":null,"recall":0.5224609375,"f1":null,"seconds":3.8798898458480835e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":6.421875,"distances_sum":1005.2663548744534}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.703125, conf: {"ssize":3,"bsize":5}, perf: {"precision":0.9856026785714285,"recall":0.703125,"f1":0.8123714826839834,"seconds":4.751607775688171e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.328125,"distances_sum":1427.3176800838112}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.703125,"state":{"ssize":3,"bsize":5},"perf":{"precision":0.9856026785714285,"recall":0.703125,"f1":0.8123714826839834,"seconds":4.751607775688171e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.328125,"distances_sum":1427.3176800838112}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":7,"bsize":8}, perf: {"precision":0.9925595238095238,"recall":0.91015625,"f1":0.9460422390109895,"seconds":5.375593900680542e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.7890625,"distances_sum":2166.155794580343}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.787109375, conf: {"ssize":3,"bsize":6}, perf: {"precision":0.9866071428571428,"recall":0.787109375,"f1":0.8689763361638371,"seconds":1.6417354345321655e-5,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.0703125,"distances_sum":1697.2077682803651}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91015625,"state":{"ssize":7,"bsize":8},"perf":{"precision":0.9925595238095238,"recall":0.91015625,"f1":0.9460422390109895,"seconds":5.375593900680542e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.7890625,"distances_sum":2166.155794580343}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.91015625,"state":{"ssize":7,"bsize":8},"perf":{"precision":0.9925595238095238,"recall":0.91015625,"f1":0.9460422390109895,"seconds":5.375593900680542e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.7890625,"distances_sum":2166.155794580343}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3896484375, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.3896484375,"f1":null,"seconds":3.3918768167495728e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":5.859375,"distances_sum":692.3955351493375}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6796875, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6796875,"f1":0.7974031177156184,"seconds":4.2673200368881226e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":7.3203125,"distances_sum":1330.5764301009751}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6796875,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.6796875,"f1":0.7974031177156184,"seconds":4.2673200368881226e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":7.3203125,"distances_sum":1330.5764301009751}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.78125,"f1":0.8709935897435906,"seconds":5.2228569984436035e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":7.921875,"distances_sum":1658.5947835119273}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.78125,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.78125,"f1":0.8709935897435906,"seconds":5.2228569984436035e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":7.921875,"distances_sum":1658.5947835119273}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9610920329670334,"seconds":6.34416937828064e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.8828125,"distances_sum":2267.1815938236155}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9599187271062276,"seconds":6.239861249923706e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.875,"distances_sum":2259.860882854017}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.931640625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.9610920329670334,"seconds":6.34416937828064e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.8828125,"distances_sum":2267.1815938236155}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.931640625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.9610920329670334,"seconds":6.34416937828064e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.8828125,"distances_sum":2267.1815938236155}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4443359375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4443359375,"f1":null,"seconds":4.079192876815796e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":6.3046875,"distances_sum":873.1460630111424}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6669921875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6669921875,"f1":0.7860361860361869,"seconds":4.868954420089722e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":7.1875,"distances_sum":1378.1545363874723}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6669921875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6669921875,"f1":0.7860361860361869,"seconds":4.868954420089722e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":7.1875,"distances_sum":1378.1545363874723}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7216796875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7216796875,"f1":0.8292478354978363,"seconds":5.273148417472839e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":7.6171875,"distances_sum":1552.098130627139}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.72265625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.72265625,"f1":0.8270035520035529,"seconds":5.234032869338989e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":7.6875,"distances_sum":1511.7148721647118}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8173828125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8173828125,"f1":0.8924627455877463,"seconds":5.822628736495972e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.359375,"distances_sum":1866.8166305991915}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8173828125,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8173828125,"f1":0.8924627455877463,"seconds":5.822628736495972e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.359375,"distances_sum":1866.8166305991915}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9538003663003667,"seconds":6.113201379776001e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.7734375,"distances_sum":2297.1416335702097}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9635817307692314,"seconds":5.930662155151367e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.890625,"distances_sum":2335.274695565114}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8740234375, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8740234375,"f1":0.9270750083250091,"seconds":5.7220458984375e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.7265625,"distances_sum":2115.376042775462}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9657967032967034,"seconds":6.11133873462677e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.890625,"distances_sum":2340.9192485874883}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9384765625,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9657967032967034,"seconds":6.11133873462677e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.890625,"distances_sum":2340.9192485874883}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9384765625,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9657967032967034,"seconds":6.11133873462677e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.890625,"distances_sum":2340.9192485874883}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.646484375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.646484375,"f1":0.7725038850038857,"seconds":4.669651389122009e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":6.75,"distances_sum":1245.4999328814724}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.244140625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.244140625,"f1":null,"seconds":3.203749656677246e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":5.0625,"distances_sum":505.85865713945543}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.646484375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.646484375,"f1":0.7725038850038857,"seconds":4.669651389122009e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":6.75,"distances_sum":1245.4999328814724}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.716796875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.716796875,"f1":0.8267149517149526,"seconds":5.081295967102051e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":7.4453125,"distances_sum":1476.3494535690945}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.69921875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.69921875,"f1":0.8111258533133542,"seconds":4.973262548446655e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":7.234375,"distances_sum":1435.90728599853}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.65234375, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.65234375,"f1":0.7758449883449889,"seconds":4.692003130912781e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":6.8984375,"distances_sum":1272.7953990285782}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.716796875,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.716796875,"f1":0.8267149517149526,"seconds":5.081295967102051e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":7.4453125,"distances_sum":1476.3494535690945}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9684352106227108,"seconds":6.210058927536011e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.875,"distances_sum":2295.61037736596}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.86328125, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.86328125,"f1":0.9205731768231775,"seconds":5.669891834259033e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.640625,"distances_sum":2009.1989420573962}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9555689102564108,"seconds":6.3944607973098755e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.7890625,"distances_sum":2202.2187704915495}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9684352106227108,"seconds":6.210058927536011e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.875,"distances_sum":2295.61037736596}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.943359375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9684352106227108,"seconds":6.210058927536011e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.875,"distances_sum":2295.61037736596}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7314453125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7314453125,"f1":0.8354900308025315,"seconds":4.999339580535889e-6,"exhaustive_search_seconds":1.560896635055542e-6,"evaluations":7.3359375,"distances_sum":1544.250878539949}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.650390625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.650390625,"f1":0.7769173534798544,"seconds":4.4852495193481445e-6,"exhaustive_search_seconds":1.560896635055542e-6,"evaluations":6.9296875,"distances_sum":1303.890492327317}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7314453125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7314453125,"f1":0.8354900308025315,"seconds":4.999339580535889e-6,"exhaustive_search_seconds":1.560896635055542e-6,"evaluations":7.3359375,"distances_sum":1544.250878539949}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.80859375, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.80859375,"f1":0.8866674991675,"seconds":5.261972546577454e-6,"exhaustive_search_seconds":1.560896635055542e-6,"evaluations":7.90625,"distances_sum":1789.1866300796514}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8486328125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8486328125,"f1":0.9117190101565109,"seconds":5.230307579040527e-6,"exhaustive_search_seconds":1.560896635055542e-6,"evaluations":8.65625,"distances_sum":1938.2567697993713}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.947332875457876,"seconds":5.392357707023621e-6,"exhaustive_search_seconds":1.560896635055542e-6,"evaluations":8.7578125,"distances_sum":2159.6983880730622}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.802734375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.802734375,"f1":0.8849848068598077,"seconds":5.081295967102051e-6,"exhaustive_search_seconds":1.560896635055542e-6,"evaluations":7.9375,"distances_sum":1752.5727824166113}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9072265625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9072265625,"f1":0.947332875457876,"seconds":5.392357707023621e-6,"exhaustive_search_seconds":1.560896635055542e-6,"evaluations":8.7578125,"distances_sum":2159.6983880730622}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9634157509157513,"seconds":5.908310413360596e-6,"exhaustive_search_seconds":1.560896635055542e-6,"evaluations":8.859375,"distances_sum":2255.8223724978257}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9673592032967038,"seconds":5.45009970664978e-6,"exhaustive_search_seconds":1.560896635055542e-6,"evaluations":8.8671875,"distances_sum":2262.393271290519}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9423828125,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9673592032967038,"seconds":5.45009970664978e-6,"exhaustive_search_seconds":1.560896635055542e-6,"evaluations":8.8671875,"distances_sum":2262.393271290519}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9423828125,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9673592032967038,"seconds":5.45009970664978e-6,"exhaustive_search_seconds":1.560896635055542e-6,"evaluations":8.8671875,"distances_sum":2262.393271290519}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5771484375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5771484375,"f1":0.7129524988899996,"seconds":4.08664345741272e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":6.9375,"distances_sum":1141.2387976763591}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5771484375,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5771484375,"f1":0.7129524988899996,"seconds":4.08664345741272e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":6.9375,"distances_sum":1141.2387976763591}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8134765625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8134765625,"f1":0.8901759698634707,"seconds":5.422160029411316e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.375,"distances_sum":1750.6848105746353}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6767578125, conf: {"ssize":7,"bsize":4}, perf: {"precision":1.0,"recall":0.6767578125,"f1":0.7984640359640367,"seconds":4.507601261138916e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.671875,"distances_sum":1348.7899939296599}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.58203125, conf: {"ssize":6,"bsize":3}, perf: {"precision":1.0,"recall":0.58203125,"f1":0.718352307414808,"seconds":4.172325134277344e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":6.9609375,"distances_sum":1140.6022894180296}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8134765625,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8134765625,"f1":0.8901759698634707,"seconds":5.422160029411316e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.375,"distances_sum":1750.6848105746353}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8349609375, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8349609375,"f1":0.9044445138195147,"seconds":5.200505256652832e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.3359375,"distances_sum":1831.8464778433515}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8310546875, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8310546875,"f1":0.9029189560439569,"seconds":5.109235644340515e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.4609375,"distances_sum":1826.0322596985304}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8349609375,"state":{"ssize":3,"bsize":6},"perf":{"precision":1.0,"recall":0.8349609375,"f1":0.9044445138195147,"seconds":5.200505256652832e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.3359375,"distances_sum":1831.8464778433515}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8349609375,"state":{"ssize":3,"bsize":6},"perf":{"precision":1.0,"recall":0.8349609375,"f1":0.9044445138195147,"seconds":5.200505256652832e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.3359375,"distances_sum":1831.8464778433515}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.291015625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.291015625,"f1":null,"seconds":3.162771463394165e-6,"exhaustive_search_seconds":2.2798776626586914e-6,"evaluations":5.3515625,"distances_sum":629.4576422936274}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.537109375, conf: {"ssize":3,"bsize":3}, perf: {"precision":null,"recall":0.537109375,"f1":null,"seconds":4.0940940380096436e-6,"exhaustive_search_seconds":2.2798776626586914e-6,"evaluations":6.3828125,"distances_sum":1013.0372426001212}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.517578125, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.517578125,"f1":null,"seconds":3.876164555549622e-6,"exhaustive_search_seconds":2.2798776626586914e-6,"evaluations":6.3359375,"distances_sum":1004.4975548812571}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.537109375,"state":{"ssize":3,"bsize":3},"perf":{"precision":null,"recall":0.537109375,"f1":null,"seconds":4.0940940380096436e-6,"exhaustive_search_seconds":2.2798776626586914e-6,"evaluations":6.3828125,"distances_sum":1013.0372426001212}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.798828125, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.798828125,"f1":0.8806979478854484,"seconds":5.19677996635437e-6,"exhaustive_search_seconds":2.2798776626586914e-6,"evaluations":8.0078125,"distances_sum":1715.9268233752996}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6162109375, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6162109375,"f1":0.7484376734376743,"seconds":4.433095455169678e-6,"exhaustive_search_seconds":2.2798776626586914e-6,"evaluations":6.875,"distances_sum":1160.568361225091}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7275390625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7275390625,"f1":0.8337953712953721,"seconds":4.785135388374329e-6,"exhaustive_search_seconds":2.2798776626586914e-6,"evaluations":7.359375,"distances_sum":1457.9621161993814}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.798828125,"state":{"ssize":2,"bsize":6},"perf":{"precision":1.0,"recall":0.798828125,"f1":0.8806979478854484,"seconds":5.19677996635437e-6,"exhaustive_search_seconds":2.2798776626586914e-6,"evaluations":8.0078125,"distances_sum":1715.9268233752996}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9459738178488183,"seconds":5.472451448440552e-6,"exhaustive_search_seconds":2.2798776626586914e-6,"evaluations":8.6875,"distances_sum":2090.074665986161}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8798828125, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8798828125,"f1":0.9317625083250091,"seconds":6.03310763835907e-6,"exhaustive_search_seconds":2.2798776626586914e-6,"evaluations":8.671875,"distances_sum":1995.3787165304548}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9610176282051284,"seconds":1.2954697012901306e-5,"exhaustive_search_seconds":2.2798776626586914e-6,"evaluations":8.8203125,"distances_sum":2188.251338424449}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9540808150183155,"seconds":5.6438148021698e-6,"exhaustive_search_seconds":2.2798776626586914e-6,"evaluations":8.78125,"distances_sum":2118.5011391264834}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8515625, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8515625,"f1":0.9132097069597076,"seconds":5.504116415977478e-6,"exhaustive_search_seconds":2.2798776626586914e-6,"evaluations":8.4765625,"distances_sum":1919.940749376909}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87109375, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.87109375,"f1":0.9249172702297708,"seconds":5.645677447319031e-6,"exhaustive_search_seconds":2.2798776626586914e-6,"evaluations":8.546875,"distances_sum":1980.999051894293}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9482944139194144,"seconds":5.46872615814209e-6,"exhaustive_search_seconds":2.2798776626586914e-6,"evaluations":8.7265625,"distances_sum":2127.0657973497887}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9445398351648358,"seconds":5.517154932022095e-6,"exhaustive_search_seconds":2.2798776626586914e-6,"evaluations":8.6953125,"distances_sum":2087.6131833951654}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9306640625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9610176282051284,"seconds":1.2954697012901306e-5,"exhaustive_search_seconds":2.2798776626586914e-6,"evaluations":8.8203125,"distances_sum":2188.251338424449}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9306640625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9610176282051284,"seconds":1.2954697012901306e-5,"exhaustive_search_seconds":2.2798776626586914e-6,"evaluations":8.8203125,"distances_sum":2188.251338424449}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.724609375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.724609375,"f1":0.8345238095238104,"seconds":4.7907233238220215e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":7.4453125,"distances_sum":1546.1546929996227}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5849609375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5849609375,"f1":0.7262839590964596,"seconds":3.816559910774231e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":6.5234375,"distances_sum":1118.0632744613642}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.724609375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.724609375,"f1":0.8345238095238104,"seconds":4.7907233238220215e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":7.4453125,"distances_sum":1546.1546929996227}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7978515625, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.7978515625,"f1":0.8822115384615392,"seconds":5.282461643218994e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.46875,"distances_sum":1785.2780914252328}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.88671875,"f1":0.9356856684981691,"seconds":5.334615707397461e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.8671875,"distances_sum":2118.8602657599467}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.88671875,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.88671875,"f1":0.9356856684981691,"seconds":5.334615707397461e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.8671875,"distances_sum":2118.8602657599467}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9468063186813194,"seconds":1.2660399079322815e-5,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.78125,"distances_sum":2256.3511568612007}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.908203125,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.908203125,"f1":0.9468063186813194,"seconds":1.2660399079322815e-5,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.78125,"distances_sum":2256.3511568612007}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.908203125,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.908203125,"f1":0.9468063186813194,"seconds":1.2660399079322815e-5,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.78125,"distances_sum":2256.3511568612007}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4248046875, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.4248046875,"f1":null,"seconds":3.866851329803467e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":6.0625,"distances_sum":751.2845544599635}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7158203125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7158203125,"f1":0.8241343725718736,"seconds":9.03196632862091e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":7.515625,"distances_sum":1522.8860980402735}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7158203125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7158203125,"f1":0.8241343725718736,"seconds":9.03196632862091e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":7.515625,"distances_sum":1522.8860980402735}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.88671875,"f1":0.9366872710622717,"seconds":5.666166543960571e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.953125,"distances_sum":2163.8995087124526}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.806640625, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.806640625,"f1":0.885452915140416,"seconds":5.247071385383606e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.765625,"distances_sum":1835.7381427738778}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.88671875,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.88671875,"f1":0.9366872710622717,"seconds":5.666166543960571e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.953125,"distances_sum":2163.8995087124526}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9629292582417585,"seconds":5.971640348434448e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.9375,"distances_sum":2338.712563895652}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.976751373626374,"seconds":4.548579454421997e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":9.0,"distances_sum":2428.0887886152645}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9580078125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.976751373626374,"seconds":4.548579454421997e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":9.0,"distances_sum":2428.0887886152645}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9580078125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.976751373626374,"seconds":4.548579454421997e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":9.0,"distances_sum":2428.0887886152645}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.716796875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.716796875,"f1":0.8265328421578431,"seconds":4.796311259269714e-6,"exhaustive_search_seconds":1.6633421182632446e-6,"evaluations":7.5390625,"distances_sum":1587.6655845280168}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4375,"f1":null,"seconds":4.077330231666565e-6,"exhaustive_search_seconds":1.6633421182632446e-6,"evaluations":5.859375,"distances_sum":813.9159335146652}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.716796875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.716796875,"f1":0.8265328421578431,"seconds":4.796311259269714e-6,"exhaustive_search_seconds":1.6633421182632446e-6,"evaluations":7.5390625,"distances_sum":1587.6655845280168}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7265625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7265625,"f1":0.8349046786546797,"seconds":4.881992936134338e-6,"exhaustive_search_seconds":1.6633421182632446e-6,"evaluations":7.7265625,"distances_sum":1575.9805267873876}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.80859375, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.80859375,"f1":0.8868652181152189,"seconds":5.241483449935913e-6,"exhaustive_search_seconds":1.6633421182632446e-6,"evaluations":8.625,"distances_sum":1878.7912428925022}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9567765567765572,"seconds":5.7015568017959595e-6,"exhaustive_search_seconds":1.6633421182632446e-6,"evaluations":8.8515625,"distances_sum":2348.208952128106}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9473099816849823,"seconds":5.537644028663635e-6,"exhaustive_search_seconds":1.6633421182632446e-6,"evaluations":8.84375,"distances_sum":2293.937591813871}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7265625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7265625,"f1":0.8338640526140534,"seconds":4.548579454421997e-6,"exhaustive_search_seconds":1.6633421182632446e-6,"evaluations":7.6796875,"distances_sum":1598.9741063795725}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.923828125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.9567765567765572,"seconds":5.7015568017959595e-6,"exhaustive_search_seconds":1.6633421182632446e-6,"evaluations":8.8515625,"distances_sum":2348.208952128106}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9721955128205133,"seconds":6.034970283508301e-6,"exhaustive_search_seconds":1.6633421182632446e-6,"evaluations":8.953125,"distances_sum":2455.566873381478}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9726018772893777,"seconds":5.986541509628296e-6,"exhaustive_search_seconds":1.6633421182632446e-6,"evaluations":8.921875,"distances_sum":2465.3674834797944}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9612236721611723,"seconds":5.5301934480667114e-6,"exhaustive_search_seconds":1.6633421182632446e-6,"evaluations":8.8671875,"distances_sum":2395.262361641234}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9682692307692312,"seconds":5.76116144657135e-6,"exhaustive_search_seconds":1.6633421182632446e-6,"evaluations":8.9140625,"distances_sum":2444.958840855848}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.951171875,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9721955128205133,"seconds":6.034970283508301e-6,"exhaustive_search_seconds":1.6633421182632446e-6,"evaluations":8.953125,"distances_sum":2455.566873381478}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.951171875,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9721955128205133,"seconds":6.034970283508301e-6,"exhaustive_search_seconds":1.6633421182632446e-6,"evaluations":8.953125,"distances_sum":2455.566873381478}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.30078125,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.30078125,"f1":null,"seconds":3.589317202568054e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":6.6953125,"distances_sum":732.9952366502915}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.30078125,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.30078125,"f1":null,"seconds":3.589317202568054e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":6.6953125,"distances_sum":732.9952366502915}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.439453125, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.439453125,"f1":null,"seconds":3.7550926208496094e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":5.765625,"distances_sum":841.6377778284236}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.439453125,"state":{"ssize":3,"bsize":2},"perf":{"precision":null,"recall":0.439453125,"f1":null,"seconds":3.7550926208496094e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":5.765625,"distances_sum":841.6377778284236}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7236328125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7236328125,"f1":0.8340721778221787,"seconds":5.379319190979004e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":7.34375,"distances_sum":1573.1136844169862}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7001953125, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.7001953125,"f1":0.8149792915417924,"seconds":4.900619387626648e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":7.2890625,"distances_sum":1494.0432375833589}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6328125, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.6328125,"f1":0.7650089493839501,"seconds":4.3138861656188965e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":6.7734375,"distances_sum":1296.8765066134406}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7236328125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7236328125,"f1":0.8340721778221787,"seconds":5.379319190979004e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":7.34375,"distances_sum":1573.1136844169862}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9621711621711625,"seconds":5.54695725440979e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.9140625,"distances_sum":2380.6934769527156}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.876953125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.876953125,"f1":0.9293617840492846,"seconds":6.021931767463684e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.8203125,"distances_sum":2143.489275668071}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9628033424908428,"seconds":5.7220458984375e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.8359375,"distances_sum":2406.707696794965}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9345703125,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9621711621711625,"seconds":5.54695725440979e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.9140625,"distances_sum":2380.6934769527156}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9345703125,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9621711621711625,"seconds":5.54695725440979e-6,"exhaustive_search_seconds":1.3578683137893677e-6,"evaluations":8.9140625,"distances_sum":2380.6934769527156}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6845703125, conf: {"ssize":4,"bsize":4}, perf: {"precision":null,"recall":0.6845703125,"f1":null,"seconds":4.740431904792786e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":6.9140625,"distances_sum":1405.4173343778052}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4267578125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4267578125,"f1":null,"seconds":3.904104232788086e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":5.8828125,"distances_sum":774.5026508753124}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6845703125,"state":{"ssize":4,"bsize":4},"perf":{"precision":null,"recall":0.6845703125,"f1":null,"seconds":4.740431904792786e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":6.9140625,"distances_sum":1405.4173343778052}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.80859375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.80859375,"f1":0.8882273976023987,"seconds":5.928799510002136e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.6484375,"distances_sum":1871.3994184548244}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9597355769230773,"seconds":5.66430389881134e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.9375,"distances_sum":2355.8519330478066}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8115234375, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8115234375,"f1":0.8900843947718956,"seconds":5.446374416351318e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.59375,"distances_sum":1889.457840389073}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7236328125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7236328125,"f1":0.8325611888111897,"seconds":5.256384611129761e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":7.640625,"distances_sum":1561.38251932077}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9296875,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9597355769230773,"seconds":5.66430389881134e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.9375,"distances_sum":2355.8519330478066}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9599609375, conf: {"ssize":7,"bsize":11}, perf: {"precision":1.0,"recall":0.9599609375,"f1":0.9781994047619053,"seconds":6.2193721532821655e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.984375,"distances_sum":2484.2407556123444}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.967376373626374,"seconds":5.887821316719055e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.90625,"distances_sum":2429.9632668221498}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9687156593406597,"seconds":5.8282166719436646e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.953125,"distances_sum":2412.497965079191}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9632669413919418,"seconds":5.755573511123657e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.9453125,"distances_sum":2373.0241431937743}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9599609375,"state":{"ssize":7,"bsize":11},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.9781994047619053,"seconds":6.2193721532821655e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.984375,"distances_sum":2484.2407556123444}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9599609375,"state":{"ssize":7,"bsize":11},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.9781994047619053,"seconds":6.2193721532821655e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.984375,"distances_sum":2484.2407556123444}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6357421875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6357421875,"f1":0.7658107517482525,"seconds":4.539266228675842e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":6.6796875,"distances_sum":1322.4971507049702}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6357421875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6357421875,"f1":0.7658107517482525,"seconds":4.539266228675842e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":6.6796875,"distances_sum":1322.4971507049702}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9561272061272066,"seconds":5.790963768959045e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.8671875,"distances_sum":2368.265263570548}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.71875, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.71875,"f1":0.8296625249750258,"seconds":4.850327968597412e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.3203125,"distances_sum":1563.7918649343933}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.923828125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.9561272061272066,"seconds":5.790963768959045e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.8671875,"distances_sum":2368.265263570548}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.9753949175824179,"seconds":6.457790732383728e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.9609375,"distances_sum":2502.3103822840544}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9560546875,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.9753949175824179,"seconds":6.457790732383728e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.9609375,"distances_sum":2502.3103822840544}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9560546875,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.9753949175824179,"seconds":6.457790732383728e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.9609375,"distances_sum":2502.3103822840544}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5078125, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5078125,"f1":null,"seconds":4.395842552185059e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":6.8828125,"distances_sum":1061.4190412134}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.171875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.171875,"f1":null,"seconds":2.866610884666443e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":4.65625,"distances_sum":405.0966377812575}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7353515625, conf: {"ssize":1,"bsize":5}, perf: {"precision":0.9758184523809522,"recall":0.7353515625,"f1":0.8307673663142418,"seconds":5.194917321205139e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":7.953125,"distances_sum":1679.4125093147277}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7353515625,"state":{"ssize":1,"bsize":5},"perf":{"precision":0.9758184523809522,"recall":0.7353515625,"f1":0.8307673663142418,"seconds":5.194917321205139e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":7.953125,"distances_sum":1679.4125093147277}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.833984375, conf: {"ssize":2,"bsize":6}, perf: {"precision":0.9867931547619047,"recall":0.833984375,"f1":0.8970438415750921,"seconds":5.641952157020569e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.3828125,"distances_sum":2039.664868851701}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":1,"bsize":7}, perf: {"precision":0.979185267857143,"recall":0.8828125,"f1":0.9244162087912089,"seconds":5.548819899559021e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.6328125,"distances_sum":2247.3928846924127}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8828125,"state":{"ssize":1,"bsize":7},"perf":{"precision":0.979185267857143,"recall":0.8828125,"f1":0.9244162087912089,"seconds":5.548819899559021e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.6328125,"distances_sum":2247.3928846924127}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":1,"bsize":9}, perf: {"precision":0.9878627232142858,"recall":0.88671875,"f1":0.9298556261446892,"seconds":6.008893251419067e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.6640625,"distances_sum":2293.843048116308}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":1,"bsize":10}, perf: {"precision":0.9910714285714286,"recall":0.92578125,"f1":0.9541895604395607,"seconds":6.577000021934509e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.765625,"distances_sum":2428.651210360303}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":3,"bsize":10}, perf: {"precision":0.9757626488095238,"recall":0.90625,"f1":0.936668669871795,"seconds":6.0051679611206055e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.8203125,"distances_sum":2382.709156314301}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.92578125,"state":{"ssize":1,"bsize":10},"perf":{"precision":0.9910714285714286,"recall":0.92578125,"f1":0.9541895604395607,"seconds":6.577000021934509e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.765625,"distances_sum":2428.651210360303}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.92578125,"state":{"ssize":1,"bsize":10},"perf":{"precision":0.9910714285714286,"recall":0.92578125,"f1":0.9541895604395607,"seconds":6.577000021934509e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.765625,"distances_sum":2428.651210360303}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7568359375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7568359375,"f1":0.8517352439227449,"seconds":5.271285772323608e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.0234375,"distances_sum":1737.2333092154918}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.69140625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.69140625,"f1":0.8078166625041633,"seconds":4.686415195465088e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":7.640625,"distances_sum":1495.6479866883174}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4208984375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4208984375,"f1":null,"seconds":3.6712735891342163e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":6.125,"distances_sum":831.8166369670855}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7568359375,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7568359375,"f1":0.8517352439227449,"seconds":5.271285772323608e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.0234375,"distances_sum":1737.2333092154918}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9540407509157517,"seconds":5.895271897315979e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.828125,"distances_sum":2358.418796517388}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9471070596070601,"seconds":5.641952157020569e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.8046875,"distances_sum":2312.18780044689}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.849609375, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.849609375,"f1":0.913333021145522,"seconds":5.7034194469451904e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.796875,"distances_sum":2051.659412346609}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.944024725274726,"seconds":5.574896931648254e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.8046875,"distances_sum":2278.989630806213}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.841796875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.841796875,"f1":0.908019064269065,"seconds":5.5655837059021e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.7890625,"distances_sum":2011.3591733776084}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8203125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8203125,"f1":0.8941423160173169,"seconds":5.632638931274414e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.7109375,"distances_sum":1944.667437359459}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8232421875, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8232421875,"f1":0.8956824425574433,"seconds":5.405396223068237e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.71875,"distances_sum":1947.697020044535}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91796875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.91796875,"f1":0.9540407509157517,"seconds":5.895271897315979e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.828125,"distances_sum":2358.418796517388}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.953983516483517,"seconds":5.837529897689819e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.84375,"distances_sum":2345.2578702571486}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":7,"bsize":11}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.972321428571429,"seconds":6.18956983089447e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.9375,"distances_sum":2444.824056163244}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.958167353479854,"seconds":5.859881639480591e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.859375,"distances_sum":2369.6456278737737}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94921875,"state":{"ssize":7,"bsize":11},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.972321428571429,"seconds":6.18956983089447e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.9375,"distances_sum":2444.824056163244}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94921875,"state":{"ssize":7,"bsize":11},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.972321428571429,"seconds":6.18956983089447e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.9375,"distances_sum":2444.824056163244}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7763671875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7763671875,"f1":0.8678456959706969,"seconds":5.058944225311279e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":7.8125,"distances_sum":1853.1508574962706}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7763671875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7763671875,"f1":0.8678456959706969,"seconds":5.058944225311279e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":7.8125,"distances_sum":1853.1508574962706}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8271484375, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8271484375,"f1":0.8966668747918756,"seconds":5.4407864809036255e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.3359375,"distances_sum":2066.8714810487863}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9577953296703303,"seconds":5.8785080909729e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.8828125,"distances_sum":2456.7446155896423}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.92578125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.9577953296703303,"seconds":5.8785080909729e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.8828125,"distances_sum":2456.7446155896423}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.9758184523809528,"seconds":5.776062607765198e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.921875,"distances_sum":2580.714538281953}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9694597069597074,"seconds":5.768612027168274e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.8671875,"distances_sum":2541.844358720851}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9560546875,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.9758184523809528,"seconds":5.776062607765198e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.921875,"distances_sum":2580.714538281953}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9560546875,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.9758184523809528,"seconds":5.776062607765198e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.921875,"distances_sum":2580.714538281953}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.154296875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.154296875,"f1":null,"seconds":2.6654452085494995e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":4.6875,"distances_sum":293.69688602053924}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.185546875, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.185546875,"f1":null,"seconds":2.8721988201141357e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":5.3359375,"distances_sum":410.0431286632899}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.185546875,"state":{"ssize":4,"bsize":1},"perf":{"precision":null,"recall":0.185546875,"f1":null,"seconds":2.8721988201141357e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":5.3359375,"distances_sum":410.0431286632899}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.642578125, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.642578125,"f1":0.7716151903651913,"seconds":4.278495907783508e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":7.0234375,"distances_sum":1338.703489468407}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.642578125,"state":{"ssize":6,"bsize":4},"perf":{"precision":1.0,"recall":0.642578125,"f1":0.7716151903651913,"seconds":4.278495907783508e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":7.0234375,"distances_sum":1338.703489468407}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":10,"bsize":7}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.9315190018315024,"seconds":5.714595317840576e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.515625,"distances_sum":2249.659009310929}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8251953125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8251953125,"f1":0.897347444222445,"seconds":5.299225449562073e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.203125,"distances_sum":1974.7966879836656}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8115234375, conf: {"ssize":9,"bsize":6}, perf: {"precision":1.0,"recall":0.8115234375,"f1":0.8880702630702638,"seconds":4.589557647705078e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.0859375,"distances_sum":1979.9735063995788}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.880859375,"state":{"ssize":10,"bsize":7},"perf":{"precision":1.0,"recall":0.880859375,"f1":0.9315190018315024,"seconds":5.714595317840576e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.515625,"distances_sum":2249.659009310929}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.880859375,"state":{"ssize":10,"bsize":7},"perf":{"precision":1.0,"recall":0.880859375,"f1":0.9315190018315024,"seconds":5.714595317840576e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.515625,"distances_sum":2249.659009310929}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.33984375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.33984375,"f1":null,"seconds":2.985820174217224e-6,"exhaustive_search_seconds":1.8272548913955688e-6,"evaluations":5.375,"distances_sum":795.6742367172133}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.33984375,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.33984375,"f1":null,"seconds":2.985820174217224e-6,"exhaustive_search_seconds":1.8272548913955688e-6,"evaluations":5.375,"distances_sum":795.6742367172133}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.68359375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.68359375,"f1":0.802033383283384,"seconds":4.764646291732788e-6,"exhaustive_search_seconds":1.8272548913955688e-6,"evaluations":7.7734375,"distances_sum":1586.318753844437}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.529296875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.529296875,"f1":0.6781059218559223,"seconds":3.7420541048049927e-6,"exhaustive_search_seconds":1.8272548913955688e-6,"evaluations":6.921875,"distances_sum":1199.9190491503678}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.80078125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.80078125,"f1":0.8812187812187822,"seconds":6.502494215965271e-6,"exhaustive_search_seconds":1.8272548913955688e-6,"evaluations":8.1328125,"distances_sum":2005.6343931276742}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.80078125,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.80078125,"f1":0.8812187812187822,"seconds":6.502494215965271e-6,"exhaustive_search_seconds":1.8272548913955688e-6,"evaluations":8.1328125,"distances_sum":2005.6343931276742}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9492075632700637,"seconds":5.345791578292847e-6,"exhaustive_search_seconds":1.8272548913955688e-6,"evaluations":8.734375,"distances_sum":2430.0707922841293}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8212890625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8212890625,"f1":0.8927062520812531,"seconds":5.04031777381897e-6,"exhaustive_search_seconds":1.8272548913955688e-6,"evaluations":8.421875,"distances_sum":2068.400727362021}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9483344780219786,"seconds":5.163252353668213e-6,"exhaustive_search_seconds":1.8272548913955688e-6,"evaluations":8.7421875,"distances_sum":2430.5604291178747}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8291015625, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8291015625,"f1":0.8992445054945063,"seconds":5.0514936447143555e-6,"exhaustive_search_seconds":1.8272548913955688e-6,"evaluations":8.375,"distances_sum":2095.9954484793825}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87890625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.87890625,"f1":0.9290521978021982,"seconds":5.191192030906677e-6,"exhaustive_search_seconds":1.8272548913955688e-6,"evaluations":8.6796875,"distances_sum":2301.4590374074874}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9130859375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9130859375,"f1":0.9492075632700637,"seconds":5.345791578292847e-6,"exhaustive_search_seconds":1.8272548913955688e-6,"evaluations":8.734375,"distances_sum":2430.0707922841293}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9130859375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9130859375,"f1":0.9492075632700637,"seconds":5.345791578292847e-6,"exhaustive_search_seconds":1.8272548913955688e-6,"evaluations":8.734375,"distances_sum":2430.0707922841293}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.779296875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.779296875,"f1":0.869336913086914,"seconds":5.323439836502075e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":7.78125,"distances_sum":1847.6469633154975}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.572265625, conf: {"ssize":5,"bsize":3}, perf: {"precision":null,"recall":0.572265625,"f1":null,"seconds":3.8780272006988525e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":7.390625,"distances_sum":1241.462129227684}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.779296875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.779296875,"f1":0.869336913086914,"seconds":5.323439836502075e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":7.78125,"distances_sum":1847.6469633154975}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9464431401931405,"seconds":5.4370611906051636e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.7578125,"distances_sum":2380.8622697777023}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9658138736263737,"seconds":5.384907126426697e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.8828125,"distances_sum":2485.902253541799}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9384765625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9658138736263737,"seconds":5.384907126426697e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.8828125,"distances_sum":2485.902253541799}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9672676282051286,"seconds":5.686655640602112e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.890625,"distances_sum":2496.82681425946}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9678800366300371,"seconds":5.640089511871338e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.921875,"distances_sum":2468.804328685667}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9423828125,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9678800366300371,"seconds":5.640089511871338e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.921875,"distances_sum":2468.804328685667}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9423828125,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9678800366300371,"seconds":5.640089511871338e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.921875,"distances_sum":2468.804328685667}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5458984375, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5458984375,"f1":0.6908652111777117,"seconds":4.589557647705078e-6,"exhaustive_search_seconds":5.2671879529953e-5,"evaluations":7.2265625,"distances_sum":1160.724273785189}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5546875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5546875,"f1":0.6938108766233771,"seconds":3.8929283618927e-6,"exhaustive_search_seconds":5.2671879529953e-5,"evaluations":7.3515625,"distances_sum":1221.2790419871806}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5546875,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5546875,"f1":0.6938108766233771,"seconds":3.8929283618927e-6,"exhaustive_search_seconds":5.2671879529953e-5,"evaluations":7.3515625,"distances_sum":1221.2790419871806}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7880859375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7880859375,"f1":0.8759589368964379,"seconds":4.759058356285095e-6,"exhaustive_search_seconds":5.2671879529953e-5,"evaluations":7.9375,"distances_sum":1905.4018710138048}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8330078125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8330078125,"f1":0.898067904317905,"seconds":4.956498742103577e-6,"exhaustive_search_seconds":5.2671879529953e-5,"evaluations":8.4296875,"distances_sum":2094.545730691076}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8515625, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8515625,"f1":0.9148039460539469,"seconds":5.183741450309753e-6,"exhaustive_search_seconds":5.2671879529953e-5,"evaluations":8.5390625,"distances_sum":2155.3361819511}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5634765625, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.5634765625,"f1":0.7049684690309694,"seconds":4.036352038383484e-6,"exhaustive_search_seconds":5.2671879529953e-5,"evaluations":7.3984375,"distances_sum":1208.4964440358249}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76953125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.76953125,"f1":0.8642544955044963,"seconds":4.71062958240509e-6,"exhaustive_search_seconds":5.2671879529953e-5,"evaluations":7.9296875,"distances_sum":1818.262975626408}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8515625,"state":{"ssize":2,"bsize":6},"perf":{"precision":1.0,"recall":0.8515625,"f1":0.9148039460539469,"seconds":5.183741450309753e-6,"exhaustive_search_seconds":5.2671879529953e-5,"evaluations":8.5390625,"distances_sum":2155.3361819511}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9546016483516492,"seconds":5.982816219329834e-6,"exhaustive_search_seconds":5.2671879529953e-5,"evaluations":8.8359375,"distances_sum":2439.3787600909095}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9520203754578758,"seconds":5.498528480529785e-6,"exhaustive_search_seconds":5.2671879529953e-5,"evaluations":8.734375,"distances_sum":2448.160248329147}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8935546875, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8935546875,"f1":0.9400583791208798,"seconds":5.2247196435928345e-6,"exhaustive_search_seconds":5.2671879529953e-5,"evaluations":8.7109375,"distances_sum":2332.4897339043127}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9518117299367302,"seconds":5.329027771949768e-6,"exhaustive_search_seconds":5.2671879529953e-5,"evaluations":8.796875,"distances_sum":2428.544621558587}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9679143772893777,"seconds":5.4854899644851685e-6,"exhaustive_search_seconds":5.2671879529953e-5,"evaluations":8.9140625,"distances_sum":2508.446089627897}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9630666208791212,"seconds":5.494803190231323e-6,"exhaustive_search_seconds":5.2671879529953e-5,"evaluations":8.8671875,"distances_sum":2492.0146093566905}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9423828125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9679143772893777,"seconds":5.4854899644851685e-6,"exhaustive_search_seconds":5.2671879529953e-5,"evaluations":8.9140625,"distances_sum":2508.446089627897}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9423828125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9679143772893777,"seconds":5.4854899644851685e-6,"exhaustive_search_seconds":5.2671879529953e-5,"evaluations":8.9140625,"distances_sum":2508.446089627897}}, n: 9
inertia(cfft.distances) = 21.12379460245638
inertia(cdnet.distances) = 25.130048822121456
inertia(crand.distances) = 21.6198353632014
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.9488888888888889
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.9
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.9
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8733333333333334
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8955555555555555
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8933333333333334
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.888888888888889
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9488888888888889
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9444444444444445
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.9333333333333332
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.9266666666666666
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8911111111111111
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.8977777777777778
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.9133333333333334
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.8866666666666667
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9244444444444445
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9199999999999999
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9333333333333332
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.8755555555555556
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.8777777777777778
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.8777777777777778
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.8733333333333334
===> k=11
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.9444444444444443
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.8955555555555555
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.8999999999999999
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.9066666666666667
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.8933333333333334
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.9111111111111111
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.9177777777777777
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.8622222222222221
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.9022222222222221
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.8888888888888888
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.888888888888889
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [1, 3, 3, 2, 3, 2, 2, 3, 3, 1, 1, 3, 3, 2, 3, 3, 2, 3, 3, 1, 2]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 1, 2, 2, 3, 3, 3, 3]
acc = 0.92
*** starting iteration: 1; err: [Inf, 0.41366667086667736] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.41366667086667736, 0.1774652390961882] ***
*** starting iteration: 2; err: [Inf, 0.41366667086667736, 0.1774652390961882] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.41366667086667736, 0.1774652390961882, 0.16576174977891156] ***
*** starting iteration: 3; err: [Inf, 0.41366667086667736, 0.1774652390961882, 0.16576174977891156] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.41366667086667736, 0.1774652390961882, 0.16576174977891156, 0.16353679693460832] ***
*** starting iteration: 4; err: [Inf, 0.41366667086667736, 0.1774652390961882, 0.16576174977891156, 0.16353679693460832] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.41366667086667736, 0.1774652390961882, 0.16576174977891156, 0.16353679693460832, 0.16305776938516617] ***
*** finished computation of 12 references, err: [Inf, 0.41366667086667736, 0.1774652390961882, 0.16576174977891156, 0.16353679693460832, 0.16305776938516617] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 3: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 4, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
*** center 5: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 22, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 8: selecting labels [1] (freq >= 1) [from [24, 0, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 1]]
** centroid: 9, normalized-entropy: 0.9182958340544894, [(2, 2), (3, 1)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 11: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 2, 10]]
** centroid: 12, normalized-entropy: 0.6500224216483541, [(2, 2), (3, 10)]
finished with 14 centroids; started with 12
acc = 0.9666666666666667
Test Summary:   | Pass  Total
NearestCentroid |   10     10
iteration 1 finished
*** starting iteration: 1; err: [Inf, 4.2284999838630855] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.2284999838630855, 1.244568785753932] ***
*** finished computation of 3 references, err: [Inf, 4.2284999838630855, 1.244568785753932] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 25, 14]]
** centroid: 1, normalized-entropy: 0.9418285354475157, [(2, 25), (3, 14)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 22]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [32, 7, 0]]
** centroid: 3, normalized-entropy: 0.6789538995185759, [(1, 32), (2, 7)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1013000150647259] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1013000150647259, 0.5812807309001194] ***
*** finished computation of 3 references, err: [Inf, 1.1013000150647259, 0.5812807309001194] ***
*** center 1: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 28, 2]]
** centroid: 2, normalized-entropy: 0.3533593350214213, [(2, 28), (3, 2)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 9, 29]]
** centroid: 3, normalized-entropy: 0.7897492536625221, [(2, 9), (3, 29)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.5384000034461558] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5384000034461558, 0.9028637796993721] ***
*** finished computation of 3 references, err: [Inf, 1.5384000034461558, 0.9028637796993721] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [17, 2, 0]]
** centroid: 1, normalized-entropy: 0.48546076074591343, [(1, 17), (2, 2)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 29, 33]]
** centroid: 2, normalized-entropy: 0.9969954265557693, [(2, 29), (3, 33)]
*** center 3: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 4.015899988191081] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.015899988191081, 1.9271533255192546] ***
*** finished computation of 3 references, err: [Inf, 4.015899988191081, 1.9271533255192546] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 14, 28]]
** centroid: 2, normalized-entropy: 0.9182958340544894, [(2, 14), (3, 28)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [32, 18, 1]]
** centroid: 3, normalized-entropy: 0.6709510185406165, [(1, 32), (2, 18), (3, 1)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 4.834200049603516] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.834200049603516, 1.6161561132057307] ***
*** finished computation of 3 references, err: [Inf, 4.834200049603516, 1.6161561132057307] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 35, 8]]
** centroid: 1, normalized-entropy: 0.6931274153282881, [(2, 35), (3, 8)]
*** center 2: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 2, 23]]
** centroid: 3, normalized-entropy: 0.4021791902022729, [(2, 2), (3, 23)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.9687000034813544] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.9687000034813544, 0.9348039605035435] ***
*** finished computation of 3 references, err: [Inf, 1.9687000034813544, 0.9348039605035435] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 28, 33]]
** centroid: 1, normalized-entropy: 0.995148095654003, [(2, 28), (3, 33)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [10, 3, 0]]
** centroid: 2, normalized-entropy: 0.7793498372920851, [(1, 10), (2, 3)]
*** center 3: selecting labels [1] (freq >= 1) [from [26, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.9664146689730195] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.9664146689730195, 0.4035873014498992] ***
*** finished computation of 7 references, err: [Inf, 2.9664146689730195, 0.4035873014498992] ***
*** center 1: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 22]]
*** center 3: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 1, 0]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 9, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 6, 5]]
** centroid: 5, normalized-entropy: 0.9940302114769566, [(2, 6), (3, 5)]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 1, 8]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 15, 1]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 2.6979984170030447] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.6979984170030447, 0.5101107400005349] ***
*** finished computation of 7 references, err: [Inf, 2.6979984170030447, 0.5101107400005349] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 5, 4]]
** centroid: 1, normalized-entropy: 0.9910760598382222, [(2, 5), (3, 4)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 5, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 1, 7]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 22, 1]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [32, 2, 0]]
** centroid: 5, normalized-entropy: 0.32275695889739825, [(1, 32), (2, 2)]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 2, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3130396303250034] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3130396303250034, 0.1842652025893097] ***
*** finished computation of 7 references, err: [Inf, 0.3130396303250034, 0.1842652025893097] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [24, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 6, 13]]
** centroid: 5, normalized-entropy: 0.8997437586982626, [(2, 6), (3, 13)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 13, 1]]
*** center 7: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.43050000213187767] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.43050000213187767, 0.30327702833145914] ***
*** starting iteration: 2; err: [Inf, 0.43050000213187767, 0.30327702833145914] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.43050000213187767, 0.30327702833145914, 0.2820796967447472] ***
*** starting iteration: 3; err: [Inf, 0.43050000213187767, 0.30327702833145914, 0.2820796967447472] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.43050000213187767, 0.30327702833145914, 0.2820796967447472, 0.2678696251525892] ***
*** starting iteration: 4; err: [Inf, 0.43050000213187767, 0.30327702833145914, 0.2820796967447472, 0.2678696251525892] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.43050000213187767, 0.30327702833145914, 0.2820796967447472, 0.2678696251525892, 0.2636302268376883] ***
*** starting iteration: 5; err: [Inf, 0.43050000213187767, 0.30327702833145914, 0.2820796967447472, 0.2678696251525892, 0.2636302268376883] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.43050000213187767, 0.30327702833145914, 0.2820796967447472, 0.2678696251525892, 0.2636302268376883, 0.262067837738413] ***
*** starting iteration: 6; err: [Inf, 0.43050000213187767, 0.30327702833145914, 0.2820796967447472, 0.2678696251525892, 0.2636302268376883, 0.262067837738413] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.43050000213187767, 0.30327702833145914, 0.2820796967447472, 0.2678696251525892, 0.2636302268376883, 0.262067837738413, 0.25841006701772595] ***
*** starting iteration: 7; err: [Inf, 0.43050000213187767, 0.30327702833145914, 0.2820796967447472, 0.2678696251525892, 0.2636302268376883, 0.262067837738413, 0.25841006701772595] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.43050000213187767, 0.30327702833145914, 0.2820796967447472, 0.2678696251525892, 0.2636302268376883, 0.262067837738413, 0.25841006701772595, 0.25462213095191016] ***
*** starting iteration: 8; err: [Inf, 0.43050000213187767, 0.30327702833145914, 0.2820796967447472, 0.2678696251525892, 0.2636302268376883, 0.262067837738413, 0.25841006701772595, 0.25462213095191016] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.43050000213187767, 0.30327702833145914, 0.2820796967447472, 0.2678696251525892, 0.2636302268376883, 0.262067837738413, 0.25841006701772595, 0.25462213095191016, 0.2528022570469733] ***
*** starting iteration: 9; err: [Inf, 0.43050000213187767, 0.30327702833145914, 0.2820796967447472, 0.2678696251525892, 0.2636302268376883, 0.262067837738413, 0.25841006701772595, 0.25462213095191016, 0.2528022570469733] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.43050000213187767, 0.30327702833145914, 0.2820796967447472, 0.2678696251525892, 0.2636302268376883, 0.262067837738413, 0.25841006701772595, 0.25462213095191016, 0.2528022570469733, 0.25103051866011317] ***
*** starting iteration: 10; err: [Inf, 0.43050000213187767, 0.30327702833145914, 0.2820796967447472, 0.2678696251525892, 0.2636302268376883, 0.262067837738413, 0.25841006701772595, 0.25462213095191016, 0.2528022570469733, 0.25103051866011317] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.43050000213187767, 0.30327702833145914, 0.2820796967447472, 0.2678696251525892, 0.2636302268376883, 0.262067837738413, 0.25841006701772595, 0.25462213095191016, 0.2528022570469733, 0.25103051866011317, 0.24911904866149268] ***
*** finished computation of 7 references, err: [Inf, 0.43050000213187767, 0.30327702833145914, 0.2820796967447472, 0.2678696251525892, 0.2636302268376883, 0.262067837738413, 0.25841006701772595, 0.25462213095191016, 0.2528022570469733, 0.25103051866011317, 0.24911904866149268] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 2: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 16, 1]]
*** center 5: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 16, 11]]
** centroid: 6, normalized-entropy: 0.975119064940866, [(2, 16), (3, 11)]
*** center 7: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4987000096151504] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4987000096151504, 0.260592466039532] ***
*** starting iteration: 2; err: [Inf, 0.4987000096151504, 0.260592466039532] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4987000096151504, 0.260592466039532, 0.2450420825958981] ***
*** starting iteration: 3; err: [Inf, 0.4987000096151504, 0.260592466039532, 0.2450420825958981] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4987000096151504, 0.260592466039532, 0.2450420825958981, 0.24263491692796157] ***
*** starting iteration: 4; err: [Inf, 0.4987000096151504, 0.260592466039532, 0.2450420825958981, 0.24263491692796157] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4987000096151504, 0.260592466039532, 0.2450420825958981, 0.24263491692796157, 0.2417858609731634] ***
*** finished computation of 7 references, err: [Inf, 0.4987000096151504, 0.260592466039532, 0.2450420825958981, 0.24263491692796157, 0.2417858609731634] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 4, 10]]
** centroid: 2, normalized-entropy: 0.8631205685666311, [(2, 4), (3, 10)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 17, 1]]
*** center 5: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [22, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 12]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4783000023721168] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4783000023721168, 0.2732800379012893] ***
*** starting iteration: 2; err: [Inf, 0.4783000023721168, 0.2732800379012893] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4783000023721168, 0.2732800379012893, 0.20533071509046605] ***
*** starting iteration: 3; err: [Inf, 0.4783000023721168, 0.2732800379012893, 0.20533071509046605] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4783000023721168, 0.2732800379012893, 0.20533071509046605, 0.1943928361324309] ***
*** starting iteration: 4; err: [Inf, 0.4783000023721168, 0.2732800379012893, 0.20533071509046605, 0.1943928361324309] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4783000023721168, 0.2732800379012893, 0.20533071509046605, 0.1943928361324309, 0.19347034945686756] ***
*** finished computation of 7 references, err: [Inf, 0.4783000023721168, 0.2732800379012893, 0.20533071509046605, 0.1943928361324309, 0.19347034945686756] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 9, 8]]
** centroid: 2, normalized-entropy: 0.9975025463691153, [(2, 9), (3, 8)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [21, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.38653674971091817] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38653674971091817, 0.23965480528521346] ***
*** starting iteration: 2; err: [Inf, 0.38653674971091817, 0.23965480528521346] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38653674971091817, 0.23965480528521346, 0.21658098335524148] ***
*** starting iteration: 3; err: [Inf, 0.38653674971091817, 0.23965480528521346, 0.21658098335524148] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38653674971091817, 0.23965480528521346, 0.21658098335524148, 0.21061795370891936] ***
*** finished computation of 7 references, err: [Inf, 0.38653674971091817, 0.23965480528521346, 0.21658098335524148, 0.21061795370891936] ***
*** center 1: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 12, 10]]
** centroid: 2, normalized-entropy: 0.9940302114769566, [(2, 12), (3, 10)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 1]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 11]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5963252510534969] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5963252510534969, 0.22336726878038415] ***
*** starting iteration: 2; err: [Inf, 0.5963252510534969, 0.22336726878038415] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5963252510534969, 0.22336726878038415, 0.21359032703061603] ***
*** starting iteration: 3; err: [Inf, 0.5963252510534969, 0.22336726878038415, 0.21359032703061603] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5963252510534969, 0.22336726878038415, 0.21359032703061603, 0.19859796844980743] ***
*** finished computation of 7 references, err: [Inf, 0.5963252510534969, 0.22336726878038415, 0.21359032703061603, 0.19859796844980743] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 21, 1]]
** centroid: 1, normalized-entropy: 0.2667649878030262, [(2, 21), (3, 1)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 7, 3]]
** centroid: 2, normalized-entropy: 0.8812908992306927, [(2, 7), (3, 3)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 11]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 1, 7]]
** centroid: 4, normalized-entropy: 0.5435644431995963, [(2, 1), (3, 7)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 8, 1]]
** centroid: 6, normalized-entropy: 0.5032583347756457, [(2, 8), (3, 1)]
*** center 7: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.455311960298837] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.455311960298837, 0.3018978247898039] ***
*** starting iteration: 2; err: [Inf, 0.455311960298837, 0.3018978247898039] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.455311960298837, 0.3018978247898039, 0.2996506558486181] ***
*** starting iteration: 3; err: [Inf, 0.455311960298837, 0.3018978247898039, 0.2996506558486181] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.455311960298837, 0.3018978247898039, 0.2996506558486181, 0.29965922585193155] ***
*** finished computation of 7 references, err: [Inf, 0.455311960298837, 0.3018978247898039, 0.2996506558486181, 0.29965922585193155] ***
*** center 1: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 29, 8]]
** centroid: 2, normalized-entropy: 0.7531979910695015, [(2, 29), (3, 8)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 2, 25]]
** centroid: 3, normalized-entropy: 0.38094658570539014, [(2, 2), (3, 25)]
*** center 4: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7232000092863443] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7232000092863443, 0.41073581393885034] ***
*** finished computation of 7 references, err: [Inf, 0.7232000092863443, 0.41073581393885034] ***
*** center 1: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 26, 2]]
** centroid: 2, normalized-entropy: 0.3712323266408756, [(2, 26), (3, 2)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 6, 7]]
** centroid: 4, normalized-entropy: 0.9957274520849256, [(2, 6), (3, 7)]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 7: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 0, 1]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5588000050009668] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5588000050009668, 0.3216840351442506] ***
*** finished computation of 7 references, err: [Inf, 0.5588000050009668, 0.3216840351442506] ***
*** center 1: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 28, 1]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 3, 7]]
** centroid: 3, normalized-entropy: 0.8812908992306927, [(2, 3), (3, 7)]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 6, 6]]
** centroid: 5, normalized-entropy: 1.0, [(2, 6), (3, 6)]
*** center 6: selecting labels [1] (freq >= 2) [from [22, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 11.417099973741221] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 11.417099973741221, 1.1294011527721795] ***
*** finished computation of 7 references, err: [Inf, 11.417099973741221, 1.1294011527721795] ***
*** center 1: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [2, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 30, 33]]
** centroid: 3, normalized-entropy: 0.998363672593813, [(2, 30), (3, 33)]
*** center 4: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 1, 0]
*** center 5: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [2, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.6757055762431043] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.6757055762431043, 0.2861243260016968] ***
*** starting iteration: 2; err: [Inf, 1.6757055762431043, 0.2861243260016968] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.6757055762431043, 0.2861243260016968, 0.190961231495489] ***
*** starting iteration: 3; err: [Inf, 1.6757055762431043, 0.2861243260016968, 0.190961231495489] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.6757055762431043, 0.2861243260016968, 0.190961231495489, 0.17100304099986954] ***
*** starting iteration: 4; err: [Inf, 1.6757055762431043, 0.2861243260016968, 0.190961231495489, 0.17100304099986954] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.6757055762431043, 0.2861243260016968, 0.190961231495489, 0.17100304099986954, 0.16839610526838844] ***
*** starting iteration: 5; err: [Inf, 1.6757055762431043, 0.2861243260016968, 0.190961231495489, 0.17100304099986954, 0.16839610526838844] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.6757055762431043, 0.2861243260016968, 0.190961231495489, 0.17100304099986954, 0.16839610526838844, 0.1629470369456452] ***
*** starting iteration: 6; err: [Inf, 1.6757055762431043, 0.2861243260016968, 0.190961231495489, 0.17100304099986954, 0.16839610526838844, 0.1629470369456452] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.6757055762431043, 0.2861243260016968, 0.190961231495489, 0.17100304099986954, 0.16839610526838844, 0.1629470369456452, 0.1622151527234303] ***
*** finished computation of 7 references, err: [Inf, 1.6757055762431043, 0.2861243260016968, 0.190961231495489, 0.17100304099986954, 0.16839610526838844, 0.1629470369456452, 0.1622151527234303] ***
*** center 1: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 16, 1]]
*** center 3: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 2, 12]]
** centroid: 4, normalized-entropy: 0.5916727785823274, [(2, 2), (3, 12)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 14, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3954398042494919] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3954398042494919, 0.27881420172855864] ***
*** starting iteration: 2; err: [Inf, 0.3954398042494919, 0.27881420172855864] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3954398042494919, 0.27881420172855864, 0.2370604610697562] ***
*** starting iteration: 3; err: [Inf, 0.3954398042494919, 0.27881420172855864, 0.2370604610697562] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3954398042494919, 0.27881420172855864, 0.2370604610697562, 0.21793982356831643] ***
*** starting iteration: 4; err: [Inf, 0.3954398042494919, 0.27881420172855864, 0.2370604610697562, 0.21793982356831643] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3954398042494919, 0.27881420172855864, 0.2370604610697562, 0.21793982356831643, 0.20500694956585577] ***
*** starting iteration: 5; err: [Inf, 0.3954398042494919, 0.27881420172855864, 0.2370604610697562, 0.21793982356831643, 0.20500694956585577] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3954398042494919, 0.27881420172855864, 0.2370604610697562, 0.21793982356831643, 0.20500694956585577, 0.19868627531912206] ***
*** starting iteration: 6; err: [Inf, 0.3954398042494919, 0.27881420172855864, 0.2370604610697562, 0.21793982356831643, 0.20500694956585577, 0.19868627531912206] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3954398042494919, 0.27881420172855864, 0.2370604610697562, 0.21793982356831643, 0.20500694956585577, 0.19868627531912206, 0.19135094543858425] ***
*** starting iteration: 7; err: [Inf, 0.3954398042494919, 0.27881420172855864, 0.2370604610697562, 0.21793982356831643, 0.20500694956585577, 0.19868627531912206, 0.19135094543858425] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3954398042494919, 0.27881420172855864, 0.2370604610697562, 0.21793982356831643, 0.20500694956585577, 0.19868627531912206, 0.19135094543858425, 0.18902019437414008] ***
*** starting iteration: 8; err: [Inf, 0.3954398042494919, 0.27881420172855864, 0.2370604610697562, 0.21793982356831643, 0.20500694956585577, 0.19868627531912206, 0.19135094543858425, 0.18902019437414008] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3954398042494919, 0.27881420172855864, 0.2370604610697562, 0.21793982356831643, 0.20500694956585577, 0.19868627531912206, 0.19135094543858425, 0.18902019437414008, 0.1876108150787122] ***
*** starting iteration: 9; err: [Inf, 0.3954398042494919, 0.27881420172855864, 0.2370604610697562, 0.21793982356831643, 0.20500694956585577, 0.19868627531912206, 0.19135094543858425, 0.18902019437414008, 0.1876108150787122] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3954398042494919, 0.27881420172855864, 0.2370604610697562, 0.21793982356831643, 0.20500694956585577, 0.19868627531912206, 0.19135094543858425, 0.18902019437414008, 0.1876108150787122, 0.1876108150787122] ***
*** finished computation of 7 references, err: [Inf, 0.3954398042494919, 0.27881420172855864, 0.2370604610697562, 0.21793982356831643, 0.20500694956585577, 0.19868627531912206, 0.19135094543858425, 0.18902019437414008, 0.1876108150787122, 0.1876108150787122] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 15, 7]]
** centroid: 1, normalized-entropy: 0.9023932827949788, [(2, 15), (3, 7)]
*** center 2: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 8, 1]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 3, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 8.019399195577217] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 8.019399195577217, 0.6187030619177978] ***
*** starting iteration: 2; err: [Inf, 8.019399195577217, 0.6187030619177978] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 8.019399195577217, 0.6187030619177978, 0.5990843270401034] ***
*** starting iteration: 3; err: [Inf, 8.019399195577217, 0.6187030619177978, 0.5990843270401034] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 8.019399195577217, 0.6187030619177978, 0.5990843270401034, 0.548319894196346] ***
*** starting iteration: 4; err: [Inf, 8.019399195577217, 0.6187030619177978, 0.5990843270401034, 0.548319894196346] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 8.019399195577217, 0.6187030619177978, 0.5990843270401034, 0.548319894196346, 0.4297426649974] ***
*** starting iteration: 5; err: [Inf, 8.019399195577217, 0.6187030619177978, 0.5990843270401034, 0.548319894196346, 0.4297426649974] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 8.019399195577217, 0.6187030619177978, 0.5990843270401034, 0.548319894196346, 0.4297426649974, 0.3470079066337041] ***
*** starting iteration: 6; err: [Inf, 8.019399195577217, 0.6187030619177978, 0.5990843270401034, 0.548319894196346, 0.4297426649974, 0.3470079066337041] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 8.019399195577217, 0.6187030619177978, 0.5990843270401034, 0.548319894196346, 0.4297426649974, 0.3470079066337041, 0.33152404340532704] ***
*** starting iteration: 7; err: [Inf, 8.019399195577217, 0.6187030619177978, 0.5990843270401034, 0.548319894196346, 0.4297426649974, 0.3470079066337041, 0.33152404340532704] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 8.019399195577217, 0.6187030619177978, 0.5990843270401034, 0.548319894196346, 0.4297426649974, 0.3470079066337041, 0.33152404340532704, 0.3281762877419043] ***
*** starting iteration: 8; err: [Inf, 8.019399195577217, 0.6187030619177978, 0.5990843270401034, 0.548319894196346, 0.4297426649974, 0.3470079066337041, 0.33152404340532704, 0.3281762877419043] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 8.019399195577217, 0.6187030619177978, 0.5990843270401034, 0.548319894196346, 0.4297426649974, 0.3470079066337041, 0.33152404340532704, 0.3281762877419043, 0.3244843918130418] ***
*** starting iteration: 9; err: [Inf, 8.019399195577217, 0.6187030619177978, 0.5990843270401034, 0.548319894196346, 0.4297426649974, 0.3470079066337041, 0.33152404340532704, 0.3281762877419043, 0.3244843918130418] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 8.019399195577217, 0.6187030619177978, 0.5990843270401034, 0.548319894196346, 0.4297426649974, 0.3470079066337041, 0.33152404340532704, 0.3281762877419043, 0.3244843918130418, 0.31537649205764295] ***
*** starting iteration: 10; err: [Inf, 8.019399195577217, 0.6187030619177978, 0.5990843270401034, 0.548319894196346, 0.4297426649974, 0.3470079066337041, 0.33152404340532704, 0.3281762877419043, 0.3244843918130418, 0.31537649205764295] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 8.019399195577217, 0.6187030619177978, 0.5990843270401034, 0.548319894196346, 0.4297426649974, 0.3470079066337041, 0.33152404340532704, 0.3281762877419043, 0.3244843918130418, 0.31537649205764295, 0.30669514210190607] ***
*** finished computation of 7 references, err: [Inf, 8.019399195577217, 0.6187030619177978, 0.5990843270401034, 0.548319894196346, 0.4297426649974, 0.3470079066337041, 0.33152404340532704, 0.3281762877419043, 0.3244843918130418, 0.31537649205764295, 0.30669514210190607] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 4, 26]]
** centroid: 1, normalized-entropy: 0.5665095065529052, [(2, 4), (3, 26)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 27, 7]]
** centroid: 2, normalized-entropy: 0.7335379291086666, [(2, 27), (3, 7)]
*** center 3: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 4.875200015588957] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.875200015588957, 2.5294715676788697] ***
*** starting iteration: 2; err: [Inf, 4.875200015588957, 2.5294715676788697] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.875200015588957, 2.5294715676788697, 1.450467569021464] ***
*** starting iteration: 3; err: [Inf, 4.875200015588957, 2.5294715676788697, 1.450467569021464] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.875200015588957, 2.5294715676788697, 1.450467569021464, 0.9380165438095623] ***
*** starting iteration: 4; err: [Inf, 4.875200015588957, 2.5294715676788697, 1.450467569021464, 0.9380165438095623] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.875200015588957, 2.5294715676788697, 1.450467569021464, 0.9380165438095623, 0.7024863580368046] ***
*** starting iteration: 5; err: [Inf, 4.875200015588957, 2.5294715676788697, 1.450467569021464, 0.9380165438095623, 0.7024863580368046] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.875200015588957, 2.5294715676788697, 1.450467569021464, 0.9380165438095623, 0.7024863580368046, 0.595431993213299] ***
*** starting iteration: 6; err: [Inf, 4.875200015588957, 2.5294715676788697, 1.450467569021464, 0.9380165438095623, 0.7024863580368046, 0.595431993213299] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.875200015588957, 2.5294715676788697, 1.450467569021464, 0.9380165438095623, 0.7024863580368046, 0.595431993213299, 0.5485745123549205] ***
*** starting iteration: 7; err: [Inf, 4.875200015588957, 2.5294715676788697, 1.450467569021464, 0.9380165438095623, 0.7024863580368046, 0.595431993213299, 0.5485745123549205] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.875200015588957, 2.5294715676788697, 1.450467569021464, 0.9380165438095623, 0.7024863580368046, 0.595431993213299, 0.5485745123549205, 0.5390373939614979] ***
*** starting iteration: 8; err: [Inf, 4.875200015588957, 2.5294715676788697, 1.450467569021464, 0.9380165438095623, 0.7024863580368046, 0.595431993213299, 0.5485745123549205, 0.5390373939614979] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.875200015588957, 2.5294715676788697, 1.450467569021464, 0.9380165438095623, 0.7024863580368046, 0.595431993213299, 0.5485745123549205, 0.5390373939614979, 0.5382014004958858] ***
*** finished computation of 3 references, err: [Inf, 4.875200015588957, 2.5294715676788697, 1.450467569021464, 0.9380165438095623, 0.7024863580368046, 0.595431993213299, 0.5485745123549205, 0.5390373939614979, 0.5382014004958858] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 1, 24]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 31, 12]]
** centroid: 2, normalized-entropy: 0.8541802051521676, [(2, 31), (3, 12)]
*** center 3: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 4.160300001669429] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.160300001669429, 1.3124693843307857] ***
*** starting iteration: 2; err: [Inf, 4.160300001669429, 1.3124693843307857] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.160300001669429, 1.3124693843307857, 0.5926701532977354] ***
*** starting iteration: 3; err: [Inf, 4.160300001669429, 1.3124693843307857, 0.5926701532977354] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.160300001669429, 1.3124693843307857, 0.5926701532977354, 0.5344924096505189] ***
*** starting iteration: 4; err: [Inf, 4.160300001669429, 1.3124693843307857, 0.5926701532977354, 0.5344924096505189] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.160300001669429, 1.3124693843307857, 0.5926701532977354, 0.5344924096505189, 0.5249898451317941] ***
*** starting iteration: 5; err: [Inf, 4.160300001669429, 1.3124693843307857, 0.5926701532977354, 0.5344924096505189, 0.5249898451317941] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.160300001669429, 1.3124693843307857, 0.5926701532977354, 0.5344924096505189, 0.5249898451317941, 0.5223556757860179] ***
*** starting iteration: 6; err: [Inf, 4.160300001669429, 1.3124693843307857, 0.5926701532977354, 0.5344924096505189, 0.5249898451317941, 0.5223556757860179] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.160300001669429, 1.3124693843307857, 0.5926701532977354, 0.5344924096505189, 0.5249898451317941, 0.5223556757860179, 0.5223556757860179] ***
*** finished computation of 3 references, err: [Inf, 4.160300001669429, 1.3124693843307857, 0.5926701532977354, 0.5344924096505189, 0.5249898451317941, 0.5223556757860179, 0.5223556757860179] ***
*** center 1: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 35, 8]]
** centroid: 2, normalized-entropy: 0.6931274153282881, [(2, 35), (3, 8)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 23]]
** centroid: 3, normalized-entropy: 0.4021791902022729, [(2, 2), (3, 23)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 5.6183999883508] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.6183999883508, 0.8159526461960149] ***
*** starting iteration: 2; err: [Inf, 5.6183999883508, 0.8159526461960149] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.6183999883508, 0.8159526461960149, 0.6271243733986306] ***
*** starting iteration: 3; err: [Inf, 5.6183999883508, 0.8159526461960149, 0.6271243733986306] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.6183999883508, 0.8159526461960149, 0.6271243733986306, 0.5695264699549807] ***
*** starting iteration: 4; err: [Inf, 5.6183999883508, 0.8159526461960149, 0.6271243733986306, 0.5695264699549807] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.6183999883508, 0.8159526461960149, 0.6271243733986306, 0.5695264699549807, 0.5242285190272039] ***
*** starting iteration: 5; err: [Inf, 5.6183999883508, 0.8159526461960149, 0.6271243733986306, 0.5695264699549807, 0.5242285190272039] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.6183999883508, 0.8159526461960149, 0.6271243733986306, 0.5695264699549807, 0.5242285190272039, 0.5083085703712219] ***
*** starting iteration: 6; err: [Inf, 5.6183999883508, 0.8159526461960149, 0.6271243733986306, 0.5695264699549807, 0.5242285190272039, 0.5083085703712219] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.6183999883508, 0.8159526461960149, 0.6271243733986306, 0.5695264699549807, 0.5242285190272039, 0.5083085703712219, 0.5060898989154841] ***
*** starting iteration: 7; err: [Inf, 5.6183999883508, 0.8159526461960149, 0.6271243733986306, 0.5695264699549807, 0.5242285190272039, 0.5083085703712219, 0.5060898989154841] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.6183999883508, 0.8159526461960149, 0.6271243733986306, 0.5695264699549807, 0.5242285190272039, 0.5083085703712219, 0.5060898989154841, 0.5060898989154841] ***
*** finished computation of 3 references, err: [Inf, 5.6183999883508, 0.8159526461960149, 0.6271243733986306, 0.5695264699549807, 0.5242285190272039, 0.5083085703712219, 0.5060898989154841, 0.5060898989154841] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 31, 8]]
** centroid: 1, normalized-entropy: 0.7320666900931937, [(2, 31), (3, 8)]
*** center 2: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 25]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 5.956399979242085] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 5.956399979242085, 0.8563059866419321] ***
*** finished computation of 7 references, err: [Inf, 5.956399979242085, 0.8563059866419321] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 11]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 3, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 22, 5]]
** centroid: 4, normalized-entropy: 0.6912898694057888, [(2, 22), (3, 5)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [32, 3, 0]]
** centroid: 5, normalized-entropy: 0.4220005168831531, [(1, 32), (2, 3)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.0935000037000056] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.0935000037000056, 0.6377417912399438] ***
*** finished computation of 7 references, err: [Inf, 1.0935000037000056, 0.6377417912399438] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 3, 4]]
** centroid: 1, normalized-entropy: 0.9852281360342514, [(2, 3), (3, 4)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 32, 4]]
** centroid: 2, normalized-entropy: 0.5032583347756457, [(2, 32), (3, 4)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 23]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [1, 2, 0]]
** centroid: 4, normalized-entropy: 0.9182958340544894, [(1, 1), (2, 2)]
*** center 5: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.38070000254535] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38070000254535, 0.25960702185031675] ***
*** finished computation of 7 references, err: [Inf, 0.38070000254535, 0.25960702185031675] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 16]]
** centroid: 3, normalized-entropy: 0.6292492238560344, [(2, 3), (3, 16)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 12, 8]]
** centroid: 4, normalized-entropy: 0.9709505944546688, [(2, 12), (3, 8)]
*** center 5: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 7: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.542699989867364] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.542699989867364, 0.5616020379797014] ***
*** starting iteration: 2; err: [Inf, 1.542699989867364, 0.5616020379797014] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.542699989867364, 0.5616020379797014, 0.5421749326051786] ***
*** starting iteration: 3; err: [Inf, 1.542699989867364, 0.5616020379797014, 0.5421749326051786] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.542699989867364, 0.5616020379797014, 0.5421749326051786, 0.5390373939614979] ***
*** finished computation of 3 references, err: [Inf, 1.542699989867364, 0.5616020379797014, 0.5421749326051786, 0.5390373939614979] ***
*** center 1: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 1, 24]]
** centroid: 2, normalized-entropy: 0.24229218908241482, [(2, 1), (3, 24)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 31, 12]]
** centroid: 3, normalized-entropy: 0.8541802051521676, [(2, 31), (3, 12)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.074100001165183] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.074100001165183, 0.5387329647516834] ***
*** starting iteration: 2; err: [Inf, 1.074100001165183, 0.5387329647516834] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.074100001165183, 0.5387329647516834, 0.5294445576451964] ***
*** starting iteration: 3; err: [Inf, 1.074100001165183, 0.5387329647516834, 0.5294445576451964] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.074100001165183, 0.5387329647516834, 0.5294445576451964, 0.5269469081980211] ***
*** finished computation of 3 references, err: [Inf, 1.074100001165183, 0.5387329647516834, 0.5294445576451964, 0.5269469081980211] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 4, 25]]
** centroid: 1, normalized-entropy: 0.5787946246321198, [(2, 4), (3, 25)]
*** center 2: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 33, 6]]
** centroid: 3, normalized-entropy: 0.6193821946787638, [(2, 33), (3, 6)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.3173999961557756] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3173999961557756, 0.5060898989154841] ***
*** starting iteration: 2; err: [Inf, 1.3173999961557756, 0.5060898989154841] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3173999961557756, 0.5060898989154841, 0.5060898989154841] ***
*** finished computation of 3 references, err: [Inf, 1.3173999961557756, 0.5060898989154841, 0.5060898989154841] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 25]]
*** center 2: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 31, 8]]
** centroid: 3, normalized-entropy: 0.7320666900931937, [(2, 31), (3, 8)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.5810999877503418] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5810999877503418, 0.5616020379797014] ***
*** starting iteration: 2; err: [Inf, 1.5810999877503418, 0.5616020379797014] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5810999877503418, 0.5616020379797014, 0.5421749326051786] ***
*** starting iteration: 3; err: [Inf, 1.5810999877503418, 0.5616020379797014, 0.5421749326051786] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5810999877503418, 0.5616020379797014, 0.5421749326051786, 0.5390373939614979] ***
*** starting iteration: 4; err: [Inf, 1.5810999877503418, 0.5616020379797014, 0.5421749326051786, 0.5390373939614979] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5810999877503418, 0.5616020379797014, 0.5421749326051786, 0.5390373939614979, 0.5382014004958858] ***
*** finished computation of 3 references, err: [Inf, 1.5810999877503418, 0.5616020379797014, 0.5421749326051786, 0.5390373939614979, 0.5382014004958858] ***
*** center 1: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 1, 24]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 31, 12]]
** centroid: 3, normalized-entropy: 0.8541802051521676, [(2, 31), (3, 12)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.3299000035721502] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3299000035721502, 0.5374168089545389] ***
*** starting iteration: 2; err: [Inf, 1.3299000035721502, 0.5374168089545389] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3299000035721502, 0.5374168089545389, 0.5281248540826077] ***
*** starting iteration: 3; err: [Inf, 1.3299000035721502, 0.5374168089545389, 0.5281248540826077] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3299000035721502, 0.5374168089545389, 0.5281248540826077, 0.5223556757860179] ***
*** starting iteration: 4; err: [Inf, 1.3299000035721502, 0.5374168089545389, 0.5281248540826077, 0.5223556757860179] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3299000035721502, 0.5374168089545389, 0.5281248540826077, 0.5223556757860179, 0.5223556757860179] ***
*** finished computation of 3 references, err: [Inf, 1.3299000035721502, 0.5374168089545389, 0.5281248540826077, 0.5223556757860179, 0.5223556757860179] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 35, 8]]
** centroid: 1, normalized-entropy: 0.6931274153282881, [(2, 35), (3, 8)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 23]]
** centroid: 2, normalized-entropy: 0.4021791902022729, [(2, 2), (3, 23)]
*** center 3: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8766000100584296] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8766000100584296, 0.6147813766803187] ***
*** starting iteration: 2; err: [Inf, 0.8766000100584296, 0.6147813766803187] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8766000100584296, 0.6147813766803187, 0.5604798084290173] ***
*** starting iteration: 3; err: [Inf, 0.8766000100584296, 0.6147813766803187, 0.5604798084290173] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8766000100584296, 0.6147813766803187, 0.5604798084290173, 0.5242285190272039] ***
*** starting iteration: 4; err: [Inf, 0.8766000100584296, 0.6147813766803187, 0.5604798084290173, 0.5242285190272039] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8766000100584296, 0.6147813766803187, 0.5604798084290173, 0.5242285190272039, 0.5083085703712219] ***
*** starting iteration: 5; err: [Inf, 0.8766000100584296, 0.6147813766803187, 0.5604798084290173, 0.5242285190272039, 0.5083085703712219] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8766000100584296, 0.6147813766803187, 0.5604798084290173, 0.5242285190272039, 0.5083085703712219, 0.5060898989154841] ***
*** starting iteration: 6; err: [Inf, 0.8766000100584296, 0.6147813766803187, 0.5604798084290173, 0.5242285190272039, 0.5083085703712219, 0.5060898989154841] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8766000100584296, 0.6147813766803187, 0.5604798084290173, 0.5242285190272039, 0.5083085703712219, 0.5060898989154841, 0.5060898989154841] ***
*** finished computation of 3 references, err: [Inf, 0.8766000100584296, 0.6147813766803187, 0.5604798084290173, 0.5242285190272039, 0.5083085703712219, 0.5060898989154841, 0.5060898989154841] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 31, 8]]
** centroid: 1, normalized-entropy: 0.7320666900931937, [(2, 31), (3, 8)]
*** center 2: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 25]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.273299996905766] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.273299996905766, 0.6545614665596001] ***
*** finished computation of 3 references, err: [Inf, 1.273299996905766, 0.6545614665596001] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 31, 22]]
** centroid: 1, normalized-entropy: 0.9790981671667148, [(2, 31), (3, 22)]
*** center 2: selecting labels [1] (freq >= 2) [from [32, 1, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1450000096621689] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1450000096621689, 0.561542544550365] ***
*** finished computation of 3 references, err: [Inf, 1.1450000096621689, 0.561542544550365] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 37, 11]]
** centroid: 1, normalized-entropy: 0.7765557854444601, [(2, 37), (3, 11)]
*** center 2: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 20]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0060000055097225] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0060000055097225, 0.5604798084290173] ***
*** finished computation of 3 references, err: [Inf, 1.0060000055097225, 0.5604798084290173] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 31, 14]]
** centroid: 1, normalized-entropy: 0.8944518845341284, [(2, 31), (3, 14)]
*** center 2: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3379474929613478] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3379474929613478, 0.18121607135969411] ***
*** finished computation of 7 references, err: [Inf, 0.3379474929613478, 0.18121607135969411] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 16, 14]]
** centroid: 1, normalized-entropy: 0.9967916319816367, [(2, 16), (3, 14)]
*** center 2: selecting labels [1] (freq >= 2) [from [23, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 9, 1]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4467183558277806] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4467183558277806, 0.1976445135735858] ***
*** finished computation of 7 references, err: [Inf, 0.4467183558277806, 0.1976445135735858] ***
*** center 1: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 17, 2]]
** centroid: 3, normalized-entropy: 0.48546076074591343, [(2, 17), (3, 2)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 14, 9]]
** centroid: 4, normalized-entropy: 0.9656361333706099, [(2, 14), (3, 9)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 6, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 12]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.374049230974945] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.374049230974945, 0.16900204859641543] ***
*** finished computation of 7 references, err: [Inf, 0.374049230974945, 0.16900204859641543] ***
*** center 1: selecting labels [1] (freq >= 2) [from [24, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 17, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 1, 19]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 13, 5]]
** centroid: 7, normalized-entropy: 0.8524051786494784, [(2, 13), (3, 5)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7292000050899575] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7292000050899575, 0.25749502293470306] ***
*** starting iteration: 2; err: [Inf, 0.7292000050899575, 0.25749502293470306] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7292000050899575, 0.25749502293470306, 0.24979712802315937] ***
*** starting iteration: 3; err: [Inf, 0.7292000050899575, 0.25749502293470306, 0.24979712802315937] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7292000050899575, 0.25749502293470306, 0.24979712802315937, 0.24934908066434172] ***
*** finished computation of 7 references, err: [Inf, 0.7292000050899575, 0.25749502293470306, 0.24979712802315937, 0.24934908066434172] ***
*** center 1: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 4, 6]]
** centroid: 3, normalized-entropy: 0.9709505944546688, [(2, 4), (3, 6)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 17, 5]]
** centroid: 4, normalized-entropy: 0.7732266742876346, [(2, 17), (3, 5)]
*** center 5: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4538000046057256] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4538000046057256, 0.25115415216576215] ***
*** starting iteration: 2; err: [Inf, 0.4538000046057256, 0.25115415216576215] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4538000046057256, 0.25115415216576215, 0.2463022671003554] ***
*** starting iteration: 3; err: [Inf, 0.4538000046057256, 0.25115415216576215, 0.2463022671003554] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4538000046057256, 0.25115415216576215, 0.2463022671003554, 0.24322780031439076] ***
*** starting iteration: 4; err: [Inf, 0.4538000046057256, 0.25115415216576215, 0.2463022671003554, 0.24322780031439076] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4538000046057256, 0.25115415216576215, 0.2463022671003554, 0.24322780031439076, 0.24206562613527216] ***
*** starting iteration: 5; err: [Inf, 0.4538000046057256, 0.25115415216576215, 0.2463022671003554, 0.24322780031439076, 0.24206562613527216] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4538000046057256, 0.25115415216576215, 0.2463022671003554, 0.24322780031439076, 0.24206562613527216, 0.24206562613527216] ***
*** finished computation of 7 references, err: [Inf, 0.4538000046057256, 0.25115415216576215, 0.2463022671003554, 0.24322780031439076, 0.24206562613527216, 0.24206562613527216] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 2: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 18, 1]]
*** center 4: selecting labels [1] (freq >= 2) [from [22, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 4, 7]]
** centroid: 5, normalized-entropy: 0.9456603046006401, [(2, 4), (3, 7)]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 15, 1]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5372000057267169] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5372000057267169, 0.2391902440612389] ***
*** starting iteration: 2; err: [Inf, 0.5372000057267169, 0.2391902440612389] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5372000057267169, 0.2391902440612389, 0.2225287913638756] ***
*** starting iteration: 3; err: [Inf, 0.5372000057267169, 0.2391902440612389, 0.2225287913638756] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5372000057267169, 0.2391902440612389, 0.2225287913638756, 0.22165900068305824] ***
*** finished computation of 7 references, err: [Inf, 0.5372000057267169, 0.2391902440612389, 0.2225287913638756, 0.22165900068305824] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 3: selecting labels [1] (freq >= 2) [from [24, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 5: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 15, 7]]
** centroid: 6, normalized-entropy: 0.9023932827949788, [(2, 15), (3, 7)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6134000039134677] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6134000039134677, 0.27903966401769553] ***
*** finished computation of 7 references, err: [Inf, 0.6134000039134677, 0.27903966401769553] ***
*** center 1: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 13, 5]]
** centroid: 4, normalized-entropy: 0.8524051786494784, [(2, 13), (3, 5)]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 5, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 14, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6562000101547345] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6562000101547345, 0.25580975584623106] ***
*** finished computation of 7 references, err: [Inf, 0.6562000101547345, 0.25580975584623106] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 2: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 16, 3]]
** centroid: 3, normalized-entropy: 0.6292492238560344, [(2, 16), (3, 3)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 13, 8]]
** centroid: 4, normalized-entropy: 0.9587118829771317, [(2, 13), (3, 8)]
*** center 5: selecting labels [1] (freq >= 2) [from [22, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5161000065046608] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5161000065046608, 0.25610670938571056] ***
*** finished computation of 7 references, err: [Inf, 0.5161000065046608, 0.25610670938571056] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 22, 7]]
** centroid: 1, normalized-entropy: 0.7973265101474423, [(2, 22), (3, 7)]
*** center 2: selecting labels [1] (freq >= 2) [from [26, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 2, 18]]
** centroid: 4, normalized-entropy: 0.46899559358928133, [(2, 2), (3, 18)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 7: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 0, 1]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.47235167473608397] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47235167473608397, 0.18204861589671117] ***
*** starting iteration: 2; err: [Inf, 0.47235167473608397, 0.18204861589671117] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47235167473608397, 0.18204861589671117, 0.17623882053907905] ***
*** starting iteration: 3; err: [Inf, 0.47235167473608397, 0.18204861589671117, 0.17623882053907905] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47235167473608397, 0.18204861589671117, 0.17623882053907905, 0.17567551201896964] ***
*** finished computation of 7 references, err: [Inf, 0.47235167473608397, 0.18204861589671117, 0.17623882053907905, 0.17567551201896964] ***
*** center 1: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 5, 4]]
** centroid: 3, normalized-entropy: 0.9910760598382222, [(2, 5), (3, 4)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 16, 7]]
** centroid: 4, normalized-entropy: 0.8865408928220899, [(2, 16), (3, 7)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 7: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4654648585818236] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4654648585818236, 0.19805938692151354] ***
*** starting iteration: 2; err: [Inf, 0.4654648585818236, 0.19805938692151354] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4654648585818236, 0.19805938692151354, 0.1782614992208582] ***
*** starting iteration: 3; err: [Inf, 0.4654648585818236, 0.19805938692151354, 0.1782614992208582] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4654648585818236, 0.19805938692151354, 0.1782614992208582, 0.16691800062439896] ***
*** finished computation of 7 references, err: [Inf, 0.4654648585818236, 0.19805938692151354, 0.1782614992208582, 0.16691800062439896] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 15, 7]]
** centroid: 1, normalized-entropy: 0.9023932827949788, [(2, 15), (3, 7)]
*** center 2: selecting labels [1] (freq >= 2) [from [23, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 5, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 6: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 17, 1]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3438403244980325] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3438403244980325, 0.17291410994611087] ***
*** starting iteration: 2; err: [Inf, 0.3438403244980325, 0.17291410994611087] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3438403244980325, 0.17291410994611087, 0.16903210490843837] ***
*** starting iteration: 3; err: [Inf, 0.3438403244980325, 0.17291410994611087, 0.16903210490843837] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3438403244980325, 0.17291410994611087, 0.16903210490843837, 0.15891070207705205] ***
*** finished computation of 7 references, err: [Inf, 0.3438403244980325, 0.17291410994611087, 0.16903210490843837, 0.15891070207705205] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 2: selecting labels [1] (freq >= 2) [from [23, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 13, 5]]
** centroid: 4, normalized-entropy: 0.8524051786494784, [(2, 13), (3, 5)]
*** center 5: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 2, 19]]
** centroid: 7, normalized-entropy: 0.45371633918694493, [(2, 2), (3, 19)]
finished with 7 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 16)
[0.9866666666666667, 0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.96, 0.9533333333333333, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9066666666666667, 0.9066666666666666, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.6, 2) => 0.9866666666666667
finished with 17
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.4550908330906181] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4550908330906181, 0.20396081991751727] ***
*** starting iteration: 2; err: [Inf, 0.4550908330906181, 0.20396081991751727] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4550908330906181, 0.20396081991751727, 0.20333795823459666] ***
*** finished computation of 7 references, err: [Inf, 0.4550908330906181, 0.20396081991751727, 0.20333795823459666] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 12, 1]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 14, 1]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 6, 13]]
** centroid: 4, normalized-entropy: 0.8997437586982626, [(2, 6), (3, 13)]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
*** center 7: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3345834917224934] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3345834917224934, 0.20314118846374762] ***
*** starting iteration: 2; err: [Inf, 0.3345834917224934, 0.20314118846374762] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3345834917224934, 0.20314118846374762, 0.17954628620863] ***
*** starting iteration: 3; err: [Inf, 0.3345834917224934, 0.20314118846374762, 0.17954628620863] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3345834917224934, 0.20314118846374762, 0.17954628620863, 0.17357172053207606] ***
*** starting iteration: 4; err: [Inf, 0.3345834917224934, 0.20314118846374762, 0.17954628620863, 0.17357172053207606] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3345834917224934, 0.20314118846374762, 0.17954628620863, 0.17357172053207606, 0.17010430171548876] ***
*** starting iteration: 5; err: [Inf, 0.3345834917224934, 0.20314118846374762, 0.17954628620863, 0.17357172053207606, 0.17010430171548876] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3345834917224934, 0.20314118846374762, 0.17954628620863, 0.17357172053207606, 0.17010430171548876, 0.1681406889807689] ***
*** starting iteration: 6; err: [Inf, 0.3345834917224934, 0.20314118846374762, 0.17954628620863, 0.17357172053207606, 0.17010430171548876, 0.1681406889807689] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3345834917224934, 0.20314118846374762, 0.17954628620863, 0.17357172053207606, 0.17010430171548876, 0.1681406889807689, 0.16732437094329286] ***
*** finished computation of 7 references, err: [Inf, 0.3345834917224934, 0.20314118846374762, 0.17954628620863, 0.17357172053207606, 0.17010430171548876, 0.1681406889807689, 0.16732437094329286] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 13, 5]]
** centroid: 3, normalized-entropy: 0.8524051786494784, [(2, 13), (3, 5)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 12, 2]]
** centroid: 4, normalized-entropy: 0.5916727785823274, [(2, 12), (3, 2)]
*** center 5: selecting labels [1] (freq >= 2) [from [22, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 12, 1]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3313867544400473] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3313867544400473, 0.21749343838320936] ***
*** starting iteration: 2; err: [Inf, 0.3313867544400473, 0.21749343838320936] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3313867544400473, 0.21749343838320936, 0.19735707066694144] ***
*** starting iteration: 3; err: [Inf, 0.3313867544400473, 0.21749343838320936, 0.19735707066694144] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3313867544400473, 0.21749343838320936, 0.19735707066694144, 0.19278949641222137] ***
*** starting iteration: 4; err: [Inf, 0.3313867544400473, 0.21749343838320936, 0.19735707066694144, 0.19278949641222137] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3313867544400473, 0.21749343838320936, 0.19735707066694144, 0.19278949641222137, 0.1905530724418325] ***
*** starting iteration: 5; err: [Inf, 0.3313867544400473, 0.21749343838320936, 0.19735707066694144, 0.19278949641222137, 0.1905530724418325] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3313867544400473, 0.21749343838320936, 0.19735707066694144, 0.19278949641222137, 0.1905530724418325, 0.19022012825874995] ***
*** finished computation of 7 references, err: [Inf, 0.3313867544400473, 0.21749343838320936, 0.19735707066694144, 0.19278949641222137, 0.1905530724418325, 0.19022012825874995] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 15, 12]]
** centroid: 2, normalized-entropy: 0.9910760598382222, [(2, 15), (3, 12)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 21]]
*** center 4: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 9, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 17)
[0.9866666666666667, 0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.96, 0.9533333333333333, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9066666666666667, 0.9066666666666666, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.6, 2) => 0.9866666666666667
finished with 18
iteration 3 finished
*** starting iteration: 1; err: [Inf, 0.42602155131790886] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42602155131790886, 0.19288398580579258] ***
*** starting iteration: 2; err: [Inf, 0.42602155131790886, 0.19288398580579258] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42602155131790886, 0.19288398580579258, 0.18798378801275495] ***
*** starting iteration: 3; err: [Inf, 0.42602155131790886, 0.19288398580579258, 0.18798378801275495] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42602155131790886, 0.19288398580579258, 0.18798378801275495, 0.1863151002323136] ***
*** starting iteration: 4; err: [Inf, 0.42602155131790886, 0.19288398580579258, 0.18798378801275495, 0.1863151002323136] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42602155131790886, 0.19288398580579258, 0.18798378801275495, 0.1863151002323136, 0.18618701179181904] ***
*** finished computation of 7 references, err: [Inf, 0.42602155131790886, 0.19288398580579258, 0.18798378801275495, 0.1863151002323136, 0.18618701179181904] ***
*** center 1: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 14, 4]]
** centroid: 4, normalized-entropy: 0.7642045065086204, [(2, 14), (3, 4)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.39422920619061697] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39422920619061697, 0.21504415038734634] ***
*** starting iteration: 2; err: [Inf, 0.39422920619061697, 0.21504415038734634] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39422920619061697, 0.21504415038734634, 0.1970769143185569] ***
*** starting iteration: 3; err: [Inf, 0.39422920619061697, 0.21504415038734634, 0.1970769143185569] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39422920619061697, 0.21504415038734634, 0.1970769143185569, 0.18570630973317695] ***
*** starting iteration: 4; err: [Inf, 0.39422920619061697, 0.21504415038734634, 0.1970769143185569, 0.18570630973317695] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39422920619061697, 0.21504415038734634, 0.1970769143185569, 0.18570630973317695, 0.18309353459618716] ***
*** starting iteration: 5; err: [Inf, 0.39422920619061697, 0.21504415038734634, 0.1970769143185569, 0.18570630973317695, 0.18309353459618716] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39422920619061697, 0.21504415038734634, 0.1970769143185569, 0.18570630973317695, 0.18309353459618716, 0.18309353459618716] ***
*** finished computation of 7 references, err: [Inf, 0.39422920619061697, 0.21504415038734634, 0.1970769143185569, 0.18570630973317695, 0.18309353459618716, 0.18309353459618716] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 22, 1]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 3: selecting labels [1] (freq >= 2) [from [23, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 15, 10]]
** centroid: 4, normalized-entropy: 0.9709505944546688, [(2, 15), (3, 10)]
*** center 5: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.37900021402927564] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37900021402927564, 0.1818704932451411] ***
*** starting iteration: 2; err: [Inf, 0.37900021402927564, 0.1818704932451411] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37900021402927564, 0.1818704932451411, 0.1737970960515137] ***
*** starting iteration: 3; err: [Inf, 0.37900021402927564, 0.1818704932451411, 0.1737970960515137] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37900021402927564, 0.1818704932451411, 0.1737970960515137, 0.17188620025441295] ***
*** starting iteration: 4; err: [Inf, 0.37900021402927564, 0.1818704932451411, 0.1737970960515137, 0.17188620025441295] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37900021402927564, 0.1818704932451411, 0.1737970960515137, 0.17188620025441295, 0.1710342222185077] ***
*** finished computation of 7 references, err: [Inf, 0.37900021402927564, 0.1818704932451411, 0.1737970960515137, 0.17188620025441295, 0.1710342222185077] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
*** center 2: selecting labels [1] (freq >= 2) [from [23, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 17, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 3, 19]]
** centroid: 4, normalized-entropy: 0.5746356978376794, [(2, 3), (3, 19)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
finished with 7 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 18)
[0.9866666666666667, 0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.96, 0.9533333333333333, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9066666666666667, 0.9066666666666666, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.6, 2) => 0.9866666666666667
finished with 18
iteration 4 finished
generating 4 configurations using top 4 configurations, starting with 18)
[0.9866666666666667, 0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.96, 0.9533333333333333, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9066666666666667, 0.9066666666666666, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.6, 2) => 0.9866666666666667
finished with 18
iteration 5 finished
generating 4 configurations using top 4 configurations, starting with 18)
[0.9866666666666667, 0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.96, 0.9533333333333333, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9066666666666667, 0.9066666666666666, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.6, 2) => 0.9866666666666667
finished with 19
iteration 6 finished
*** starting iteration: 1; err: [Inf, 2.7674000020737792] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.7674000020737792, 0.6661681199679105] ***
*** starting iteration: 2; err: [Inf, 2.7674000020737792, 0.6661681199679105] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.7674000020737792, 0.6661681199679105, 0.5478495908731698] ***
*** starting iteration: 3; err: [Inf, 2.7674000020737792, 0.6661681199679105, 0.5478495908731698] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.7674000020737792, 0.6661681199679105, 0.5478495908731698, 0.5390373939614979] ***
*** finished computation of 3 references, err: [Inf, 2.7674000020737792, 0.6661681199679105, 0.5478495908731698, 0.5390373939614979] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 1, 24]]
** centroid: 1, normalized-entropy: 0.24229218908241482, [(2, 1), (3, 24)]
*** center 2: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 31, 12]]
** centroid: 3, normalized-entropy: 0.8541802051521676, [(2, 31), (3, 12)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2896000024260978] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2896000024260978, 0.5423062056036863] ***
*** starting iteration: 2; err: [Inf, 1.2896000024260978, 0.5423062056036863] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2896000024260978, 0.5423062056036863, 0.5319590638792946] ***
*** starting iteration: 3; err: [Inf, 1.2896000024260978, 0.5423062056036863, 0.5319590638792946] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2896000024260978, 0.5423062056036863, 0.5319590638792946, 0.5269469081980211] ***
*** finished computation of 3 references, err: [Inf, 1.2896000024260978, 0.5423062056036863, 0.5319590638792946, 0.5269469081980211] ***
*** center 1: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 4, 25]]
** centroid: 2, normalized-entropy: 0.5787946246321198, [(2, 4), (3, 25)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 33, 6]]
** centroid: 3, normalized-entropy: 0.6193821946787638, [(2, 33), (3, 6)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.3773999817670766] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.3773999817670766, 0.9383284759863534] ***
*** starting iteration: 2; err: [Inf, 2.3773999817670766, 0.9383284759863534] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.3773999817670766, 0.9383284759863534, 0.8992966919731329] ***
*** starting iteration: 3; err: [Inf, 2.3773999817670766, 0.9383284759863534, 0.8992966919731329] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.3773999817670766, 0.9383284759863534, 0.8992966919731329, 0.8990619695677903] ***
*** finished computation of 3 references, err: [Inf, 2.3773999817670766, 0.9383284759863534, 0.8992966919731329, 0.8990619695677903] ***
*** center 1: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 29, 33]]
** centroid: 2, normalized-entropy: 0.9969954265557693, [(2, 29), (3, 33)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [21, 2, 0]]
** centroid: 3, normalized-entropy: 0.42622865699814483, [(1, 21), (2, 2)]
finished with 5 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 19)
[0.9866666666666667, 0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.96, 0.9533333333333333, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9066666666666667, 0.9066666666666666, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.6, 2) => 0.9866666666666667
finished with 21
iteration 7 finished
*** starting iteration: 1; err: [Inf, 1.1466591493268183] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1466591493268183, 0.3775672472829439] ***
*** finished computation of 3 references, err: [Inf, 1.1466591493268183, 0.3775672472829439] ***
*** center 1: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 24]]
** centroid: 2, normalized-entropy: 0.3912435636292556, [(2, 2), (3, 24)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 30, 12]]
** centroid: 3, normalized-entropy: 0.8631205685666311, [(2, 30), (3, 12)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7035202815552738] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7035202815552738, 0.4129356050566678] ***
*** finished computation of 3 references, err: [Inf, 0.7035202815552738, 0.4129356050566678] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 11, 30]]
** centroid: 1, normalized-entropy: 0.8390040613676978, [(2, 11), (3, 30)]
*** center 2: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 26, 1]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5968150902550828] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5968150902550828, 0.4114079466942431] ***
*** finished computation of 3 references, err: [Inf, 0.5968150902550828, 0.4114079466942431] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 13, 33]]
** centroid: 1, normalized-entropy: 0.8589810370425965, [(2, 13), (3, 33)]
*** center 2: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 18, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0672999970881945] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0672999970881945, 0.6817810606676225] ***
*** finished computation of 3 references, err: [Inf, 1.0672999970881945, 0.6817810606676225] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 31, 23]]
** centroid: 1, normalized-entropy: 0.9841095278800533, [(2, 31), (3, 23)]
*** center 2: selecting labels [1] (freq >= 2) [from [32, 1, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9958000019699249] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9958000019699249, 0.6038406711401367] ***
*** finished computation of 3 references, err: [Inf, 0.9958000019699249, 0.6038406711401367] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 37, 14]]
** centroid: 1, normalized-entropy: 0.8478617451660525, [(2, 37), (3, 14)]
*** center 2: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9891000059841254] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9891000059841254, 0.6147813766803187] ***
*** finished computation of 3 references, err: [Inf, 0.9891000059841254, 0.6147813766803187] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 31, 19]]
** centroid: 1, normalized-entropy: 0.9580420222262997, [(2, 31), (3, 19)]
*** center 2: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
finished with 4 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 21)
[0.9866666666666667, 0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.96, 0.9533333333333333, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9066666666666667, 0.9066666666666666, 0.8999999999999999, 0.8933333333333332, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.6, 2) => 0.9866666666666667
finished with 22
iteration 8 finished
*** starting iteration: 1; err: [Inf, 0.370379658333336] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.370379658333336, 0.19516764505066994] ***
*** finished computation of 7 references, err: [Inf, 0.370379658333336, 0.19516764505066994] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 21, 10]]
** centroid: 1, normalized-entropy: 0.9071657675730821, [(2, 21), (3, 10)]
*** center 2: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 7: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 0, 1]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.43319382294526304] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.43319382294526304, 0.1976445135735858] ***
*** finished computation of 7 references, err: [Inf, 0.43319382294526304, 0.1976445135735858] ***
*** center 1: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 17, 2]]
** centroid: 3, normalized-entropy: 0.48546076074591343, [(2, 17), (3, 2)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 14, 9]]
** centroid: 4, normalized-entropy: 0.9656361333706099, [(2, 14), (3, 9)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 6, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 12]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3631829360481683] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3631829360481683, 0.20000708078604723] ***
*** finished computation of 7 references, err: [Inf, 0.3631829360481683, 0.20000708078604723] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 2, 18]]
** centroid: 1, normalized-entropy: 0.46899559358928133, [(2, 2), (3, 18)]
*** center 2: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 18, 6]]
** centroid: 5, normalized-entropy: 0.8112781244591328, [(2, 18), (3, 6)]
*** center 6: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
finished with 9 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 22)
[0.9866666666666667, 0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.9733333333333333, 0.96, 0.9533333333333333, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9066666666666667, 0.9066666666666666, 0.8999999999999999, 0.8933333333333332, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.6, 2) => 0.9866666666666667
finished with 22
iteration 9 finished
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.6, 2), 0.9866666666666667)
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[4.839999999999999, 3.2350000000000003, 1.4699999999999998, 0.23000000000000007], [7.42857142857143, 3.142857142857143, 6.2, 2.0857142857142854], [5.625, 2.8, 4.25, 1.25], [5.633333333333334, 2.5666666666666664, 4.933333333333334, 1.8333333333333333], [6.3, 2.9529411764705875, 4.582352941176471, 1.4588235294117649], [6.180000000000001, 2.8, 5.0, 1.7600000000000002], [5.425000000000001, 3.816666666666666, 1.5166666666666666, 0.3166666666666667], [6.483333333333333, 3.0277777777777777, 5.527777777777779, 2.1333333333333333], [5.4818181818181815, 2.4454545454545458, 3.663636363636364, 1.0999999999999999]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 3, 2, 3, 2, 3, 1, 3, 2], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.6, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[6.586666666666667, 3.08, 5.546666666666667, 2.1666666666666665], [4.61, 3.05, 1.3600000000000003, 0.2], [5.51578947368421, 2.594736842105263, 3.9210526315789482, 1.2157894736842105], [5.1863636363636365, 3.5681818181818183, 1.518181818181818, 0.26363636363636367], [5.675000000000001, 2.875, 4.65, 1.475], [5.957142857142857, 2.7, 5.028571428571429, 1.8285714285714287], [7.514285714285714, 3.271428571428572, 6.428571428571429, 2.1], [6.38125, 2.8874999999999997, 4.60625, 1.4375]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [3, 1, 2, 1, 2, 3, 3, 2], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.6, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.5375, 2.6937499999999996, 3.9875, 1.2375], [7.500000000000001, 2.8714285714285714, 6.371428571428572, 2.0714285714285716], [4.792000000000001, 3.1880000000000006, 1.4039999999999997, 0.20800000000000005], [6.541176470588235, 3.0411764705882356, 5.476470588235294, 2.1117647058823534], [5.336363636363637, 3.872727272727272, 1.518181818181818, 0.2727272727272727], [6.446666666666667, 2.9266666666666667, 4.653333333333333, 1.4733333333333332], [6.042857142857143, 2.7714285714285714, 4.942857142857142, 1.7714285714285718], [7.550000000000001, 3.5, 6.2, 1.9]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 3, 1, 3, 1, 2, 3, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.6, 2))]
Test Summary: | Pass  Total
AKNC          |    1      1
[70, 2, 1, 22, 20, 1, 26, 14, 41, 32, 41, 26, 14, 31, 14, 32, 2, 32, 24, 25, 29, 23, 6, 16, 35, 15, 25, 24, 20, 33, 34, 30, 37, 5, 24, 17, 20, 23, 36, 37, 28, 23, 1, 14, 36, 14, 42, 31, 25, 39, 34, 12, 24, 25, 18, 20, 33, 30, 14, 50, 33, 19, 37, 32, 34, 22, 48, 31, 38, 24, 31, 28, 24, 45, 37, 24, 1, 31, 26, 33, 60, 61, 17, 8, 37, 35, 48, 30, 39, 29, 52, 24, 38, 32, 29, 28, 12, 43, 32, 52, 23, 36, 39, 20, 36, 28, 6, 1, 40, 39, 47, 53, 55, 56, 47, 20, 70, 29, 27, 25, 26, 55, 54, 32, 40, 30, 27, 38, 39, 15, 39, 55, 35, 32, 40, 30, 12, 38, 15, 37, 26, 34, 32, 37, 29, 52, 52, 53, 28, 42, 41, 34, 27, 20, 44, 84, 31, 17, 48, 51, 27, 31, 22, 42, 27, 38, 49, 63, 41, 53, 14, 21, 30, 63, 15, 38, 30, 28, 61, 53, 40, 38, 36, 28, 24, 26, 39, 15, 27, 28, 46, 37, 60, 4, 24, 24, 37, 40, 30, 41, 27, 23, 34, 42, 36, 36, 44, 41, 31, 41, 62, 49, 43, 18, 30, 38, 26, 24, 37, 29, 46, 44, 61, 28, 23, 49, 25, 22, 41, 16, 34, 37, 61, 56, 24, 47, 21, 42, 38, 56, 27, 23, 39, 33, 37, 25, 48, 31, 44, 35, 50, 32, 23, 67, 18, 52, 33, 66, 33, 31, 27, 33, 39, 48, 22, 32, 36, 27, 22, 24, 35, 49, 33, 28, 48, 31, 3, 77, 39, 48, 35, 23, 32, 47, 38, 27, 34, 37, 36, 41, 43, 30, 37, 32, 38, 33, 30, 38, 79, 26]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.6070000000000001, speedup = 0.33612431862491543, eval_ratio = 0.041129)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.4010416666666668,"recall":0.39496527777777796,"f1":null,"seconds":6.928108632564545e-5,"exhaustive_search_seconds":0.00038870982825756073,"evaluations":340.390625,"distances_sum":1694.7064824309186}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5668402777777773,"recall":0.5668402777777773,"f1":null,"seconds":0.0001036711037158966,"exhaustive_search_seconds":0.00038870982825756073,"evaluations":380.1640625,"distances_sum":1590.737722034345}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6848958333333331,"recall":0.6848958333333331,"f1":0.6848958333333331,"seconds":0.0001342184841632843,"exhaustive_search_seconds":0.00038870982825756073,"evaluations":420.234375,"distances_sum":1543.7479632620123}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7499999999999996,"recall":0.7499999999999996,"f1":0.7499999999999996,"seconds":0.00016764365136623383,"exhaustive_search_seconds":0.00038870982825756073,"evaluations":458.984375,"distances_sum":1522.2634322036824}
KCenters.DeloneInvIndex> reached performance {"precision":0.8081597222222217,"recall":0.8081597222222217,"f1":0.8081597222222217,"seconds":0.00019515305757522583,"exhaustive_search_seconds":0.00038870982825756073,"evaluations":497.53125,"distances_sum":1506.8863093190844}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.7539999999999998, speedup = 1.6546493977083538, eval_ratio = 0.048993)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
   Testing KCenters tests passed 
