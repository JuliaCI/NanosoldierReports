Julia Version 1.5.2-pre.0
Commit c4acbf93fb (2020-08-26 10:58 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed VersionParsing ─ v1.2.0
  Installed Conda ────────── v1.4.1
  Installed SerialPorts ──── v0.2.2
  Installed Parsers ──────── v1.0.10
  Installed MacroTools ───── v0.5.5
  Installed PyCall ───────── v1.91.4
  Installed JSON ─────────── v0.21.0
Updating `~/.julia/environments/v1.5/Project.toml`
  [5d0f9de7] + SerialPorts v0.2.2
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [8f4d0f93] + Conda v1.4.1
  [682c06a0] + JSON v0.21.0
  [1914dd2f] + MacroTools v0.5.5
  [69de0a69] + Parsers v1.0.10
  [438e738f] + PyCall v1.91.4
  [5d0f9de7] + SerialPorts v0.2.2
  [81def892] + VersionParsing v1.2.0
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [de0858da] + Printf
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [4ec0a83e] + Unicode
   Building Conda ─→ `~/.julia/packages/Conda/3rPhK/deps/build.log`
   Building PyCall → `~/.julia/packages/PyCall/zqDXB/deps/build.log`
    Testing SerialPorts
Status `/tmp/jl_lobyHw/Project.toml`
  [438e738f] PyCall v1.91.4
  [5d0f9de7] SerialPorts v0.2.2
  [8dfed614] Test
Status `/tmp/jl_lobyHw/Manifest.toml`
  [8f4d0f93] Conda v1.4.1
  [682c06a0] JSON v0.21.0
  [1914dd2f] MacroTools v0.5.5
  [69de0a69] Parsers v1.0.10
  [438e738f] PyCall v1.91.4
  [5d0f9de7] SerialPorts v0.2.2
  [81def892] VersionParsing v1.2.0
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [de0858da] Printf
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [4ec0a83e] Unicode
[ Info: Installing serial via the Conda pyserial package...
[ Info: Running `conda install -q -y pyserial` in root environment
Collecting package metadata (current_repodata.json): ...working... done
Solving environment: ...working... done

## Package Plan ##

  environment location: /home/pkgeval/.julia/conda/3

  added / updated specs:
    - pyserial


The following packages will be downloaded:

    package                    |            build
    ---------------------------|-----------------
    pyserial-3.4               |             py_2          60 KB
    ------------------------------------------------------------
                                           Total:          60 KB

The following NEW packages will be INSTALLED:

  pyserial           pkgs/main/noarch::pyserial-3.4-py_2


Preparing transaction: ...working... done
Verifying transaction: ...working... done
Executing transaction: ...working... done
list_serialports() = String[]
ERROR: LoadError: KeyError: key "USER" not found
Stacktrace:
 [1] (::Base.var"#477#478")(::String) at ./env.jl:79
 [2] access_env at ./env.jl:43 [inlined]
 [3] getindex at ./env.jl:79 [inlined]
 [4] check_serial_access() at /home/pkgeval/.julia/packages/SerialPorts/4zoml/src/SerialPorts.jl:126
 [5] top-level scope at /home/pkgeval/.julia/packages/SerialPorts/4zoml/test/runtests.jl:8
 [6] include(::String) at ./client.jl:457
 [7] top-level scope at none:6
in expression starting at /home/pkgeval/.julia/packages/SerialPorts/4zoml/test/runtests.jl:8
ERROR: Package SerialPorts errored during testing
Stacktrace:
 [1] pkgerror(::String) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:52
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1578
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:328
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:315
 [5] #test#61 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:67 [inlined]
 [6] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:67 [inlined]
 [7] #test#60 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:66 [inlined]
 [8] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:66 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:65
 [10] test(::String) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:65
 [11] top-level scope at none:19
