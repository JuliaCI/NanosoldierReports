Julia Version 1.5.2-pre.0
Commit c4acbf93fb (2020-08-26 10:58 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.4.3
Updating `~/.julia/environments/v1.5/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [5789e2e9] + FileIO v1.4.3
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_ZGSvAG/Project.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_ZGSvAG/Manifest.toml`
  [5789e2e9] FileIO v1.4.3
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.2172335892211981
curgen: 20 fitness: 0.2172335892211981
curgen: 30 fitness: 0.2172335892211981
curgen: 40 fitness: 0.2172335892211981
curgen: 50 fitness: 0.2172335892211981
CoordinateCreature{Array{Float64,1}}([-0.22257783509333798], -0.2172335892211981) -0.22257783509333798 -0.2172335892211981
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2577818812699184
curgen: 100 fitness: 3.258239204885987
curgen: 150 fitness: 3.2583811638873907
curgen: 200 fitness: 3.2584239201082594
curgen: 250 fitness: 3.2584574948414335
curgen: 300 fitness: 3.2584574948414335
curgen: 350 fitness: 3.258461658768663
curgen: 400 fitness: 3.258461658768663
curgen: 450 fitness: 3.258463395682798
curgen: 500 fitness: 3.258466199388245
CoordinateCreature{Array{Float64,1}}([0.22239594046947456, -0.22236284610130885, 0.2225528212227662, -0.2220494943013768, 0.22263598508324292, -0.22287839050406488, 0.2222798313399766, 0.22250187311498087, -0.22217106058030492, 0.22238821097275277, -0.22273670413948754, -0.222367927479137, 0.2224872279014418, 0.22277185721250545, 0.22227345000668178], -3.258466199388245) [0.22239594046947456, -0.22236284610130885, 0.2225528212227662, -0.2220494943013768, 0.22263598508324292, -0.22287839050406488, 0.2222798313399766, 0.22250187311498087, -0.22217106058030492, 0.22238821097275277, -0.22273670413948754, -0.222367927479137, 0.2224872279014418, 0.22277185721250545, 0.22227345000668178] -3.258466199388245
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0024955265969879292
curgen: 100 fitness: -0.0024878176256208917
curgen: 150 fitness: -0.0020950457617914253
curgen: 200 fitness: -0.0016831260280980587
curgen: 250 fitness: -0.0015033227210778932
curgen: 300 fitness: -0.0015033227210778932
curgen: 350 fitness: -0.0010818618026178228
curgen: 400 fitness: -0.0010773088606299552
curgen: 450 fitness: -0.0009908139858509912
curgen: 500 fitness: -0.0009908139858509912
CoordinateCreature{Array{Float64,1}}([-0.0008651622516643449, -0.0002418065476464249, -0.0005049356014246416, 0.0003290496588732926, 0.0005325948665518302, -0.0006178336492547414, -0.00027223916239504226, 0.00022134891455785285, -0.0003862879852270291, -0.0005583189279753514, 0.000873317560545415, -7.68455195515258e-6, -0.0012283665454397388, 0.0002733455966222506, 0.0004777612957163808], 0.0009908139858509912) [-0.0008651622516643449, -0.0002418065476464249, -0.0005049356014246416, 0.0003290496588732926, 0.0005325948665518302, -0.0006178336492547414, -0.00027223916239504226, 0.00022134891455785285, -0.0003862879852270291, -0.0005583189279753514, 0.000873317560545415, -7.68455195515258e-6, -0.0012283665454397388, 0.0002733455966222506, 0.0004777612957163808] 0.0009908139858509912
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
