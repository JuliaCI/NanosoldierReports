Julia Version 1.5.0-DEV.613
Commit cd9c2a22d4 (2020-04-10 02:59 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.2.4
Updating `~/.julia/environments/v1.5/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [5789e2e9] + FileIO v1.2.4
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_C8OBM9/Project.toml`
  [5789e2e9] FileIO v1.2.4
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_C8OBM9/Manifest.toml`
  [5789e2e9] FileIO v1.2.4
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21723175998330335
curgen: 20 fitness: 0.21723175998330335
curgen: 30 fitness: 0.21723175998330335
curgen: 40 fitness: 0.21723175998330335
curgen: 50 fitness: 0.21723175998330335
CoordinateCreature{Array{Float64,1}}([0.22275369163877823], -0.21723175998330335) 0.22275369163877823 -0.21723175998330335
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2580515165705517
curgen: 100 fitness: 3.258344921938566
curgen: 150 fitness: 3.258352830387443
curgen: 200 fitness: 3.2583717740574913
curgen: 250 fitness: 3.2583717740574913
curgen: 300 fitness: 3.25838702122345
curgen: 350 fitness: 3.2583964294173815
curgen: 400 fitness: 3.258402132923624
curgen: 450 fitness: 3.2584031689488824
curgen: 500 fitness: 3.258411587411913
CoordinateCreature{Array{Float64,1}}([-0.2216241990867409, -0.2224097943123327, -0.22273887596758155, 0.22278307162507666, 0.22221713065574372, -0.22276825888886057, -0.22278558740956333, -0.22250788336142724, -0.22243646899326755, -0.22180931192463998, 0.22249534636891388, 0.22240530226790328, 0.22266515608748708, -0.222542206384535, -0.22310923963254195], -3.258411587411913) [-0.2216241990867409, -0.2224097943123327, -0.22273887596758155, 0.22278307162507666, 0.22221713065574372, -0.22276825888886057, -0.22278558740956333, -0.22250788336142724, -0.22243646899326755, -0.22180931192463998, 0.22249534636891388, 0.22240530226790328, 0.22266515608748708, -0.222542206384535, -0.22310923963254195] -3.258411587411913
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.002191571870525877
curgen: 100 fitness: -0.0021914861657137408
curgen: 150 fitness: -0.0015688934215063455
curgen: 200 fitness: -0.0015688934215063455
curgen: 250 fitness: -0.0012156126705917814
curgen: 300 fitness: -0.0012156126705917814
curgen: 350 fitness: -0.0010324666630197044
curgen: 400 fitness: -0.0010324666630197044
curgen: 450 fitness: -0.0010324666630197044
curgen: 500 fitness: -0.0010324666630197044
CoordinateCreature{Array{Float64,1}}([0.000448993055551807, -3.82809364213917e-5, 0.0008106662821764704, -0.0010432360831202421, -0.0010305479211348985, -0.0006732545421551801, 1.5010139930004412e-6, -1.5373979768842212e-5, -0.00037958986332300667, -0.0001715914514386841, 0.001005809189829912, -0.00016976203440188537, 0.0007092995980230144, 0.00013909683383293186, -6.007121534647866e-5], 0.0010324666630197044) [0.000448993055551807, -3.82809364213917e-5, 0.0008106662821764704, -0.0010432360831202421, -0.0010305479211348985, -0.0006732545421551801, 1.5010139930004412e-6, -1.5373979768842212e-5, -0.00037958986332300667, -0.0001715914514386841, 0.001005809189829912, -0.00016976203440188537, 0.0007092995980230144, 0.00013909683383293186, -6.007121534647866e-5] 0.0010324666630197044
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
