Julia Version 1.5.0-DEV.613
Commit cd9c2a22d4 (2020-04-10 02:59 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed Adapt ────────────── v1.0.1
  Installed AbstractFFTs ─────── v0.5.0
  Installed CUDAapi ──────────── v4.0.0
  Installed Cthulhu ──────────── v1.0.2
  Installed MacroTools ───────── v0.5.5
  Installed BinaryProvider ───── v0.5.8
  Installed CUDAdrv ──────────── v6.2.2
  Installed Requires ─────────── v1.0.1
  Installed CuArrays ─────────── v2.0.1
  Installed CodeTracking ─────── v0.5.8
  Installed Reexport ─────────── v0.2.0
  Installed OrderedCollections ─ v1.1.0
  Installed CEnum ────────────── v0.2.0
  Installed TimerOutputs ─────── v0.5.3
  Installed ExprTools ────────── v0.1.0
  Installed LLVM ─────────────── v1.3.4
  Installed CUDAnative ───────── v3.0.4
  Installed NNlib ────────────── v0.6.6
  Installed GPUArrays ────────── v3.1.0
  Installed DataStructures ───── v0.17.11
Updating `~/.julia/environments/v1.5/Project.toml`
  [3a865a2d] + CuArrays v2.0.1
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [621f4979] + AbstractFFTs v0.5.0
  [79e6a3ab] + Adapt v1.0.1
  [b99e7846] + BinaryProvider v0.5.8
  [fa961155] + CEnum v0.2.0
  [3895d2a7] + CUDAapi v4.0.0
  [c5f51814] + CUDAdrv v6.2.2
  [be33ccc6] + CUDAnative v3.0.4
  [da1fd8a2] + CodeTracking v0.5.8
  [f68482b8] + Cthulhu v1.0.2
  [3a865a2d] + CuArrays v2.0.1
  [864edb3b] + DataStructures v0.17.11
  [e2ba6199] + ExprTools v0.1.0
  [0c68f7d7] + GPUArrays v3.1.0
  [929cbde3] + LLVM v1.3.4
  [1914dd2f] + MacroTools v0.5.5
  [872c559c] + NNlib v0.6.6
  [bac558e1] + OrderedCollections v1.1.0
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v1.0.1
  [a759f4b9] + TimerOutputs v0.5.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building NNlib → `~/.julia/packages/NNlib/FAI3o/deps/build.log`
    Testing CuArrays
Status `/tmp/jl_3N3ik5/Project.toml`
  [621f4979] AbstractFFTs v0.5.0
  [79e6a3ab] Adapt v1.0.1
  [fa961155] CEnum v0.2.0
  [3895d2a7] CUDAapi v4.0.0
  [c5f51814] CUDAdrv v6.2.2
  [be33ccc6] CUDAnative v3.0.4
  [3a865a2d] CuArrays v2.0.1
  [864edb3b] DataStructures v0.17.11
  [7a1cc6ca] FFTW v1.2.0
  [1a297f60] FillArrays v0.8.7
  [f6369f11] ForwardDiff v0.10.10
  [0c68f7d7] GPUArrays v3.1.0
  [1914dd2f] MacroTools v0.5.5
  [872c559c] NNlib v0.6.6
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [a759f4b9] TimerOutputs v0.5.3
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [44cfe95a] Pkg
  [de0858da] Printf
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_3N3ik5/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [79e6a3ab] Adapt v1.0.1
  [b99e7846] BinaryProvider v0.5.8
  [fa961155] CEnum v0.2.0
  [3895d2a7] CUDAapi v4.0.0
  [c5f51814] CUDAdrv v6.2.2
  [be33ccc6] CUDAnative v3.0.4
  [da1fd8a2] CodeTracking v0.5.8
  [bbf7d656] CommonSubexpressions v0.2.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [f68482b8] Cthulhu v1.0.2
  [3a865a2d] CuArrays v2.0.1
  [864edb3b] DataStructures v0.17.11
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [e2ba6199] ExprTools v0.1.0
  [7a1cc6ca] FFTW v1.2.0
  [f5851436] FFTW_jll v3.3.9+5
  [1a297f60] FillArrays v0.8.7
  [f6369f11] ForwardDiff v0.10.10
  [0c68f7d7] GPUArrays v3.1.0
  [1d5cc7b8] IntelOpenMP_jll v2018.0.3+0
  [929cbde3] LLVM v1.3.4
  [856f044c] MKL_jll v2019.0.117+2
  [1914dd2f] MacroTools v0.5.5
  [872c559c] NNlib v0.6.6
  [77ba4419] NaNMath v0.3.3
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [bac558e1] OrderedCollections v1.1.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [276daf66] SpecialFunctions v0.10.0
  [90137ffa] StaticArrays v0.12.1
  [a759f4b9] TimerOutputs v0.5.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
[ Info: Testing using device Tesla T4 (compute capability 7.5.0, 14.593 GiB available memory) on CUDA driver 10.2.0 and toolkit 10.2.89
SubArray: Test Failed at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:198
  Expression: testf(((x, y)->begin
            copyto!(y, selectdim(x, 2, 1))
        end), ones(2, 2, 2), zeros(3, 3))
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:198
 [2] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
 [3] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:138
accumulate: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:227
  Test threw exception
  Expression: testf((x->begin
            accumulate(+, x)
        end), rand(n))
  InvalidIRError: compiling partial_scan(typeof(+), CuDeviceArray{Float64,1,CUDAnative.AS.Global}, CuDeviceArray{Float64,1,CUDAnative.AS.Global}, CartesianIndices{1,Tuple{Base.OneTo{Int64}}}, CartesianIndices{0,Tuple{}}, CartesianIndices{0,Tuple{}}, CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}}, Float64, Nothing, Val{true}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_21247)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CuArrays.partial_scan),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(CuArrays.partial_scan), ::Type{Tuple{typeof(+),CuDeviceArray{Float64,1,CUDAnative.AS.Global},CuDeviceArray{Float64,1,CUDAnative.AS.Global},CartesianIndices{1,Tuple{Base.OneTo{Int64}}},CartesianIndices{0,Tuple{}},CartesianIndices{0,Tuple{}},CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}},Float64,Nothing,Val{true}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [15] scan!(::Function, ::CuArray{Float64,1,Nothing}, ::CuArray{Float64,1,Nothing}; dims::Int64, init::Nothing, neutral::Float64) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/accumulate.jl:151
   [16] _accumulate! at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/accumulate.jl:199 [inlined]
   [17] #accumulate!#641 at ./accumulate.jl:337 [inlined]
   [18] #accumulate#637 at ./accumulate.jl:280 [inlined]
   [19] accumulate at ./accumulate.jl:268 [inlined]
   [20] (::var"#85#89")(::CuArray{Float64,1,Nothing}) at ./none:0
   [21] compare(::Function, ::Type{CuArray}, ::Array{Float64,1}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:23
   [22] compare at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:20 [inlined]
   [23] #testf#1 at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18 [inlined]
   [24] testf(::Function, ::Array{Float64,1}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18
   [25] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:227
   [26] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [27] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:226
  
accumulate: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:227
  Test threw exception
  Expression: testf((x->begin
            accumulate(+, x)
        end), rand(n))
  InvalidIRError: compiling partial_scan(typeof(+), CuDeviceArray{Float64,1,CUDAnative.AS.Global}, CuDeviceArray{Float64,1,CUDAnative.AS.Global}, CartesianIndices{1,Tuple{Base.OneTo{Int64}}}, CartesianIndices{0,Tuple{}}, CartesianIndices{0,Tuple{}}, CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}}, Float64, Nothing, Val{true}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_21247)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CuArrays.partial_scan),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(CuArrays.partial_scan), ::Type{Tuple{typeof(+),CuDeviceArray{Float64,1,CUDAnative.AS.Global},CuDeviceArray{Float64,1,CUDAnative.AS.Global},CartesianIndices{1,Tuple{Base.OneTo{Int64}}},CartesianIndices{0,Tuple{}},CartesianIndices{0,Tuple{}},CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}},Float64,Nothing,Val{true}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [15] scan!(::Function, ::CuArray{Float64,1,Nothing}, ::CuArray{Float64,1,Nothing}; dims::Int64, init::Nothing, neutral::Float64) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/accumulate.jl:151
   [16] _accumulate! at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/accumulate.jl:199 [inlined]
   [17] #accumulate!#641 at ./accumulate.jl:337 [inlined]
   [18] #accumulate#637 at ./accumulate.jl:280 [inlined]
   [19] accumulate at ./accumulate.jl:268 [inlined]
   [20] (::var"#85#89")(::CuArray{Float64,1,Nothing}) at ./none:0
   [21] compare(::Function, ::Type{CuArray}, ::Array{Float64,1}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:23
   [22] compare at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:20 [inlined]
   [23] #testf#1 at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18 [inlined]
   [24] testf(::Function, ::Array{Float64,1}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18
   [25] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:227
   [26] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [27] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:226
  
accumulate: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:227
  Test threw exception
  Expression: testf((x->begin
            accumulate(+, x)
        end), rand(n))
  InvalidIRError: compiling partial_scan(typeof(+), CuDeviceArray{Float64,1,CUDAnative.AS.Global}, CuDeviceArray{Float64,1,CUDAnative.AS.Global}, CartesianIndices{1,Tuple{Base.OneTo{Int64}}}, CartesianIndices{0,Tuple{}}, CartesianIndices{0,Tuple{}}, CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}}, Float64, Nothing, Val{true}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_21247)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CuArrays.partial_scan),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(CuArrays.partial_scan), ::Type{Tuple{typeof(+),CuDeviceArray{Float64,1,CUDAnative.AS.Global},CuDeviceArray{Float64,1,CUDAnative.AS.Global},CartesianIndices{1,Tuple{Base.OneTo{Int64}}},CartesianIndices{0,Tuple{}},CartesianIndices{0,Tuple{}},CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}},Float64,Nothing,Val{true}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [15] scan!(::Function, ::CuArray{Float64,1,Nothing}, ::CuArray{Float64,1,Nothing}; dims::Int64, init::Nothing, neutral::Float64) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/accumulate.jl:151
   [16] _accumulate! at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/accumulate.jl:199 [inlined]
   [17] #accumulate!#641 at ./accumulate.jl:337 [inlined]
   [18] #accumulate#637 at ./accumulate.jl:280 [inlined]
   [19] accumulate at ./accumulate.jl:268 [inlined]
   [20] (::var"#85#89")(::CuArray{Float64,1,Nothing}) at ./none:0
   [21] compare(::Function, ::Type{CuArray}, ::Array{Float64,1}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:23
   [22] compare at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:20 [inlined]
   [23] #testf#1 at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18 [inlined]
   [24] testf(::Function, ::Array{Float64,1}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18
   [25] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:227
   [26] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [27] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:226
  
accumulate: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:227
  Test threw exception
  Expression: testf((x->begin
            accumulate(+, x)
        end), rand(n))
  InvalidIRError: compiling partial_scan(typeof(+), CuDeviceArray{Float64,1,CUDAnative.AS.Global}, CuDeviceArray{Float64,1,CUDAnative.AS.Global}, CartesianIndices{1,Tuple{Base.OneTo{Int64}}}, CartesianIndices{0,Tuple{}}, CartesianIndices{0,Tuple{}}, CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}}, Float64, Nothing, Val{true}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_21247)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CuArrays.partial_scan),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(CuArrays.partial_scan), ::Type{Tuple{typeof(+),CuDeviceArray{Float64,1,CUDAnative.AS.Global},CuDeviceArray{Float64,1,CUDAnative.AS.Global},CartesianIndices{1,Tuple{Base.OneTo{Int64}}},CartesianIndices{0,Tuple{}},CartesianIndices{0,Tuple{}},CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}},Float64,Nothing,Val{true}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [15] scan!(::Function, ::CuArray{Float64,1,Nothing}, ::CuArray{Float64,1,Nothing}; dims::Int64, init::Nothing, neutral::Float64) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/accumulate.jl:151
   [16] _accumulate! at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/accumulate.jl:199 [inlined]
   [17] #accumulate!#641 at ./accumulate.jl:337 [inlined]
   [18] #accumulate#637 at ./accumulate.jl:280 [inlined]
   [19] accumulate at ./accumulate.jl:268 [inlined]
   [20] (::var"#85#89")(::CuArray{Float64,1,Nothing}) at ./none:0
   [21] compare(::Function, ::Type{CuArray}, ::Array{Float64,1}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:23
   [22] compare at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:20 [inlined]
   [23] #testf#1 at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18 [inlined]
   [24] testf(::Function, ::Array{Float64,1}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18
   [25] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:227
   [26] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [27] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:226
  
accumulate: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:227
  Test threw exception
  Expression: testf((x->begin
            accumulate(+, x)
        end), rand(n))
  InvalidIRError: compiling partial_scan(typeof(+), CuDeviceArray{Float64,1,CUDAnative.AS.Global}, CuDeviceArray{Float64,1,CUDAnative.AS.Global}, CartesianIndices{1,Tuple{Base.OneTo{Int64}}}, CartesianIndices{0,Tuple{}}, CartesianIndices{0,Tuple{}}, CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}}, Float64, Nothing, Val{true}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_21247)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CuArrays.partial_scan),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(CuArrays.partial_scan), ::Type{Tuple{typeof(+),CuDeviceArray{Float64,1,CUDAnative.AS.Global},CuDeviceArray{Float64,1,CUDAnative.AS.Global},CartesianIndices{1,Tuple{Base.OneTo{Int64}}},CartesianIndices{0,Tuple{}},CartesianIndices{0,Tuple{}},CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}},Float64,Nothing,Val{true}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [15] scan!(::Function, ::CuArray{Float64,1,Nothing}, ::CuArray{Float64,1,Nothing}; dims::Int64, init::Nothing, neutral::Float64) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/accumulate.jl:151
   [16] _accumulate! at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/accumulate.jl:199 [inlined]
   [17] #accumulate!#641 at ./accumulate.jl:337 [inlined]
   [18] #accumulate#637 at ./accumulate.jl:280 [inlined]
   [19] accumulate at ./accumulate.jl:268 [inlined]
   [20] (::var"#85#89")(::CuArray{Float64,1,Nothing}) at ./none:0
   [21] compare(::Function, ::Type{CuArray}, ::Array{Float64,1}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:23
   [22] compare at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:20 [inlined]
   [23] #testf#1 at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18 [inlined]
   [24] testf(::Function, ::Array{Float64,1}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18
   [25] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:227
   [26] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [27] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:226
  
accumulate: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:227
  Test threw exception
  Expression: testf((x->begin
            accumulate(+, x)
        end), rand(n))
  InvalidIRError: compiling partial_scan(typeof(+), CuDeviceArray{Float64,1,CUDAnative.AS.Global}, CuDeviceArray{Float64,1,CUDAnative.AS.Global}, CartesianIndices{1,Tuple{Base.OneTo{Int64}}}, CartesianIndices{0,Tuple{}}, CartesianIndices{0,Tuple{}}, CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}}, Float64, Nothing, Val{true}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_21247)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CuArrays.partial_scan),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(CuArrays.partial_scan), ::Type{Tuple{typeof(+),CuDeviceArray{Float64,1,CUDAnative.AS.Global},CuDeviceArray{Float64,1,CUDAnative.AS.Global},CartesianIndices{1,Tuple{Base.OneTo{Int64}}},CartesianIndices{0,Tuple{}},CartesianIndices{0,Tuple{}},CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}},Float64,Nothing,Val{true}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [15] scan!(::Function, ::CuArray{Float64,1,Nothing}, ::CuArray{Float64,1,Nothing}; dims::Int64, init::Nothing, neutral::Float64) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/accumulate.jl:151
   [16] _accumulate! at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/accumulate.jl:199 [inlined]
   [17] #accumulate!#641 at ./accumulate.jl:337 [inlined]
   [18] #accumulate#637 at ./accumulate.jl:280 [inlined]
   [19] accumulate at ./accumulate.jl:268 [inlined]
   [20] (::var"#85#89")(::CuArray{Float64,1,Nothing}) at ./none:0
   [21] compare(::Function, ::Type{CuArray}, ::Array{Float64,1}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:23
   [22] compare at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:20 [inlined]
   [23] #testf#1 at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18 [inlined]
   [24] testf(::Function, ::Array{Float64,1}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18
   [25] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:227
   [26] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [27] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:226
  
accumulate: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:227
  Test threw exception
  Expression: testf((x->begin
            accumulate(+, x)
        end), rand(n))
  InvalidIRError: compiling partial_scan(typeof(+), CuDeviceArray{Float64,1,CUDAnative.AS.Global}, CuDeviceArray{Float64,1,CUDAnative.AS.Global}, CartesianIndices{1,Tuple{Base.OneTo{Int64}}}, CartesianIndices{0,Tuple{}}, CartesianIndices{0,Tuple{}}, CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}}, Float64, Nothing, Val{true}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_21247)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CuArrays.partial_scan),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(CuArrays.partial_scan), ::Type{Tuple{typeof(+),CuDeviceArray{Float64,1,CUDAnative.AS.Global},CuDeviceArray{Float64,1,CUDAnative.AS.Global},CartesianIndices{1,Tuple{Base.OneTo{Int64}}},CartesianIndices{0,Tuple{}},CartesianIndices{0,Tuple{}},CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}},Float64,Nothing,Val{true}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [15] scan!(::Function, ::CuArray{Float64,1,Nothing}, ::CuArray{Float64,1,Nothing}; dims::Int64, init::Nothing, neutral::Float64) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/accumulate.jl:151
   [16] _accumulate! at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/accumulate.jl:199 [inlined]
   [17] #accumulate!#641 at ./accumulate.jl:337 [inlined]
   [18] #accumulate#637 at ./accumulate.jl:280 [inlined]
   [19] accumulate at ./accumulate.jl:268 [inlined]
   [20] (::var"#85#89")(::CuArray{Float64,1,Nothing}) at ./none:0
   [21] compare(::Function, ::Type{CuArray}, ::Array{Float64,1}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:23
   [22] compare at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:20 [inlined]
   [23] #testf#1 at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18 [inlined]
   [24] testf(::Function, ::Array{Float64,1}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18
   [25] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:227
   [26] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [27] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:226
  
accumulate: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:234
  Test threw exception
  Expression: testf((x->begin
            accumulate(+, x; dims = dims)
        end), rand(Int, sizes))
  InvalidIRError: compiling partial_scan(typeof(+), CuDeviceArray{Int64,3,CUDAnative.AS.Global}, CuDeviceArray{Int64,3,CUDAnative.AS.Global}, CartesianIndices{1,Tuple{Base.OneTo{Int64}}}, CartesianIndices{1,Tuple{Base.OneTo{Int64}}}, CartesianIndices{1,Tuple{Base.OneTo{Int64}}}, CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}}, Int64, Nothing, Val{true}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_21247)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CuArrays.partial_scan),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(CuArrays.partial_scan), ::Type{Tuple{typeof(+),CuDeviceArray{Int64,3,CUDAnative.AS.Global},CuDeviceArray{Int64,3,CUDAnative.AS.Global},CartesianIndices{1,Tuple{Base.OneTo{Int64}}},CartesianIndices{1,Tuple{Base.OneTo{Int64}}},CartesianIndices{1,Tuple{Base.OneTo{Int64}}},CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}},Int64,Nothing,Val{true}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [15] scan!(::Function, ::CuArray{Int64,3,Nothing}, ::CuArray{Int64,3,Nothing}; dims::Int64, init::Nothing, neutral::Int64) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/accumulate.jl:151
   [16] _accumulate! at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/accumulate.jl:202 [inlined]
   [17] #accumulate!#641 at ./accumulate.jl:337 [inlined]
   [18] #accumulate#637 at ./accumulate.jl:280 [inlined]
   [19] (::var"#86#90"{Int64})(::CuArray{Int64,3,Nothing}) at ./none:0
   [20] compare(::Function, ::Type{CuArray}, ::Array{Int64,3}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:23
   [21] compare at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:20 [inlined]
   [22] #testf#1 at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18 [inlined]
   [23] testf(::Function, ::Array{Int64,3}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18
   [24] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:234
   [25] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [26] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:226
  
accumulate: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:234
  Test threw exception
  Expression: testf((x->begin
            accumulate(+, x; dims = dims)
        end), rand(Int, sizes))
  InvalidIRError: compiling partial_scan(typeof(+), CuDeviceArray{Int64,4,CUDAnative.AS.Global}, CuDeviceArray{Int64,4,CUDAnative.AS.Global}, CartesianIndices{1,Tuple{Base.OneTo{Int64}}}, CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}}, CartesianIndices{1,Tuple{Base.OneTo{Int64}}}, CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}}, Int64, Nothing, Val{true}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_21247)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CuArrays.partial_scan),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(CuArrays.partial_scan), ::Type{Tuple{typeof(+),CuDeviceArray{Int64,4,CUDAnative.AS.Global},CuDeviceArray{Int64,4,CUDAnative.AS.Global},CartesianIndices{1,Tuple{Base.OneTo{Int64}}},CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}},CartesianIndices{1,Tuple{Base.OneTo{Int64}}},CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}},Int64,Nothing,Val{true}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [15] scan!(::Function, ::CuArray{Int64,4,Nothing}, ::CuArray{Int64,4,Nothing}; dims::Int64, init::Nothing, neutral::Int64) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/accumulate.jl:151
   [16] _accumulate! at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/accumulate.jl:202 [inlined]
   [17] #accumulate!#641 at ./accumulate.jl:337 [inlined]
   [18] #accumulate#637 at ./accumulate.jl:280 [inlined]
   [19] (::var"#86#90"{Int64})(::CuArray{Int64,4,Nothing}) at ./none:0
   [20] compare(::Function, ::Type{CuArray}, ::Array{Int64,4}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:23
   [21] compare at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:20 [inlined]
   [22] #testf#1 at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18 [inlined]
   [23] testf(::Function, ::Array{Int64,4}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18
   [24] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:234
   [25] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [26] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:226
  
accumulate: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:241
  Test threw exception
  Expression: testf((x->begin
            accumulate(+, x; dims = dims, init = 100.0)
        end), rand(Int, sizes))
  InvalidIRError: compiling partial_scan(typeof(+), CuDeviceArray{Float64,3,CUDAnative.AS.Global}, CuDeviceArray{Int64,3,CUDAnative.AS.Global}, CartesianIndices{1,Tuple{Base.OneTo{Int64}}}, CartesianIndices{1,Tuple{Base.OneTo{Int64}}}, CartesianIndices{1,Tuple{Base.OneTo{Int64}}}, CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}}, Float64, Some{Float64}, Val{true}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_21247)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CuArrays.partial_scan),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(CuArrays.partial_scan), ::Type{Tuple{typeof(+),CuDeviceArray{Float64,3,CUDAnative.AS.Global},CuDeviceArray{Int64,3,CUDAnative.AS.Global},CartesianIndices{1,Tuple{Base.OneTo{Int64}}},CartesianIndices{1,Tuple{Base.OneTo{Int64}}},CartesianIndices{1,Tuple{Base.OneTo{Int64}}},CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}},Float64,Some{Float64},Val{true}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [15] scan!(::Function, ::CuArray{Float64,3,Nothing}, ::CuArray{Int64,3,Nothing}; dims::Int64, init::Some{Float64}, neutral::Float64) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/accumulate.jl:151
   [16] _accumulate! at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/accumulate.jl:208 [inlined]
   [17] #accumulate!#641 at ./accumulate.jl:339 [inlined]
   [18] #accumulate#637 at ./accumulate.jl:280 [inlined]
   [19] (::var"#87#91"{Int64})(::CuArray{Int64,3,Nothing}) at ./none:0
   [20] compare(::Function, ::Type{CuArray}, ::Array{Int64,3}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:23
   [21] compare at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:20 [inlined]
   [22] #testf#1 at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18 [inlined]
   [23] testf(::Function, ::Array{Int64,3}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18
   [24] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:241
   [25] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [26] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:226
  
accumulate: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:241
  Test threw exception
  Expression: testf((x->begin
            accumulate(+, x; dims = dims, init = 100.0)
        end), rand(Int, sizes))
  InvalidIRError: compiling partial_scan(typeof(+), CuDeviceArray{Float64,4,CUDAnative.AS.Global}, CuDeviceArray{Int64,4,CUDAnative.AS.Global}, CartesianIndices{1,Tuple{Base.OneTo{Int64}}}, CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}}, CartesianIndices{1,Tuple{Base.OneTo{Int64}}}, CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}}, Float64, Some{Float64}, Val{true}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_21247)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CuArrays.partial_scan),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(CuArrays.partial_scan), ::Type{Tuple{typeof(+),CuDeviceArray{Float64,4,CUDAnative.AS.Global},CuDeviceArray{Int64,4,CUDAnative.AS.Global},CartesianIndices{1,Tuple{Base.OneTo{Int64}}},CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}},CartesianIndices{1,Tuple{Base.OneTo{Int64}}},CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}},Float64,Some{Float64},Val{true}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [15] scan!(::Function, ::CuArray{Float64,4,Nothing}, ::CuArray{Int64,4,Nothing}; dims::Int64, init::Some{Float64}, neutral::Float64) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/accumulate.jl:151
   [16] _accumulate! at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/accumulate.jl:208 [inlined]
   [17] #accumulate!#641 at ./accumulate.jl:339 [inlined]
   [18] #accumulate#637 at ./accumulate.jl:280 [inlined]
   [19] (::var"#87#91"{Int64})(::CuArray{Int64,4,Nothing}) at ./none:0
   [20] compare(::Function, ::Type{CuArray}, ::Array{Int64,4}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:23
   [21] compare at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:20 [inlined]
   [22] #testf#1 at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18 [inlined]
   [23] testf(::Function, ::Array{Int64,4}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18
   [24] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:241
   [25] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [26] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:226
  
accumulate: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:245
  Test threw exception
  Expression: testf((x->begin
            accumulate!(+, x, copy(x))
            x
        end), rand(2))
  InvalidIRError: compiling partial_scan(typeof(+), CuDeviceArray{Float64,1,CUDAnative.AS.Global}, CuDeviceArray{Float64,1,CUDAnative.AS.Global}, CartesianIndices{1,Tuple{Base.OneTo{Int64}}}, CartesianIndices{0,Tuple{}}, CartesianIndices{0,Tuple{}}, CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}}, Float64, Nothing, Val{true}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_21247)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CuArrays.partial_scan),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(CuArrays.partial_scan), ::Type{Tuple{typeof(+),CuDeviceArray{Float64,1,CUDAnative.AS.Global},CuDeviceArray{Float64,1,CUDAnative.AS.Global},CartesianIndices{1,Tuple{Base.OneTo{Int64}}},CartesianIndices{0,Tuple{}},CartesianIndices{0,Tuple{}},CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}},Float64,Nothing,Val{true}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [15] scan!(::Function, ::CuArray{Float64,1,Nothing}, ::CuArray{Float64,1,Nothing}; dims::Int64, init::Nothing, neutral::Float64) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/accumulate.jl:151
   [16] _accumulate! at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/accumulate.jl:199 [inlined]
   [17] #accumulate!#641 at ./accumulate.jl:337 [inlined]
   [18] accumulate! at ./accumulate.jl:335 [inlined]
   [19] (::var"#88#92")(::CuArray{Float64,1,Nothing}) at ./none:0
   [20] compare(::Function, ::Type{CuArray}, ::Array{Float64,1}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:23
   [21] compare at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:20 [inlined]
   [22] #testf#1 at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18 [inlined]
   [23] testf(::Function, ::Array{Float64,1}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18
   [24] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:245
   [25] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [26] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:226
  
accumulate: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:248
  Test threw exception
  Expression: testf(cumsum, rand(2))
  InvalidIRError: compiling partial_scan(typeof(Base.add_sum), CuDeviceArray{Float64,1,CUDAnative.AS.Global}, CuDeviceArray{Float64,1,CUDAnative.AS.Global}, CartesianIndices{1,Tuple{Base.OneTo{Int64}}}, CartesianIndices{0,Tuple{}}, CartesianIndices{0,Tuple{}}, CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}}, Float64, Nothing, Val{true}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_21247)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CuArrays.partial_scan),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(CuArrays.partial_scan), ::Type{Tuple{typeof(Base.add_sum),CuDeviceArray{Float64,1,CUDAnative.AS.Global},CuDeviceArray{Float64,1,CUDAnative.AS.Global},CartesianIndices{1,Tuple{Base.OneTo{Int64}}},CartesianIndices{0,Tuple{}},CartesianIndices{0,Tuple{}},CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}},Float64,Nothing,Val{true}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [15] scan!(::Function, ::CuArray{Float64,1,Nothing}, ::CuArray{Float64,1,Nothing}; dims::Int64, init::Nothing, neutral::Float64) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/accumulate.jl:151
   [16] _accumulate! at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/accumulate.jl:199 [inlined]
   [17] #accumulate!#641 at ./accumulate.jl:337 [inlined]
   [18] accumulate! at ./accumulate.jl:335 [inlined]
   [19] accumulate_pairwise! at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/accumulate.jl:211 [inlined]
   [20] _cumsum! at ./accumulate.jl:55 [inlined]
   [21] #cumsum!#633 at ./accumulate.jl:51 [inlined]
   [22] cumsum(::CuArray{Float64,1,Nothing}; dims::Int64) at ./accumulate.jl:91
   [23] cumsum(::CuArray{Float64,1,Nothing}) at ./accumulate.jl:128
   [24] compare(::Function, ::Type{CuArray}, ::Array{Float64,1}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:23
   [25] compare at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:20 [inlined]
   [26] #testf#1 at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18 [inlined]
   [27] testf(::Function, ::Array{Float64,1}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18
   [28] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:248
   [29] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [30] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:226
  
accumulate: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:249
  Test threw exception
  Expression: testf(cumprod, rand(2))
  InvalidIRError: compiling partial_scan(typeof(Base.mul_prod), CuDeviceArray{Float64,1,CUDAnative.AS.Global}, CuDeviceArray{Float64,1,CUDAnative.AS.Global}, CartesianIndices{1,Tuple{Base.OneTo{Int64}}}, CartesianIndices{0,Tuple{}}, CartesianIndices{0,Tuple{}}, CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}}, Float64, Nothing, Val{true}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_21247)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CuArrays.partial_scan),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(CuArrays.partial_scan), ::Type{Tuple{typeof(Base.mul_prod),CuDeviceArray{Float64,1,CUDAnative.AS.Global},CuDeviceArray{Float64,1,CUDAnative.AS.Global},CartesianIndices{1,Tuple{Base.OneTo{Int64}}},CartesianIndices{0,Tuple{}},CartesianIndices{0,Tuple{}},CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}},Float64,Nothing,Val{true}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [15] scan!(::Function, ::CuArray{Float64,1,Nothing}, ::CuArray{Float64,1,Nothing}; dims::Int64, init::Nothing, neutral::Float64) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/accumulate.jl:151
   [16] _accumulate! at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/accumulate.jl:202 [inlined]
   [17] #accumulate!#641 at ./accumulate.jl:337 [inlined]
   [18] #accumulate#637 at ./accumulate.jl:280 [inlined]
   [19] #cumprod#636 at ./accumulate.jl:175 [inlined]
   [20] cumprod(::CuArray{Float64,1,Nothing}) at ./accumulate.jl:212
   [21] compare(::Function, ::Type{CuArray}, ::Array{Float64,1}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:23
   [22] compare at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:20 [inlined]
   [23] #testf#1 at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18 [inlined]
   [24] testf(::Function, ::Array{Float64,1}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18
   [25] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:249
   [26] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [27] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:226
  
logical indexing: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:253
  Test threw exception
  Expression: (CuArray{Int}(undef, 2))[CuArray{Bool}(undef, 2)] isa CuArray
  InvalidIRError: compiling partial_scan(typeof(Base.add_sum), CuDeviceArray{Int64,1,CUDAnative.AS.Global}, CuDeviceArray{Bool,1,CUDAnative.AS.Global}, CartesianIndices{1,Tuple{Base.OneTo{Int64}}}, CartesianIndices{0,Tuple{}}, CartesianIndices{0,Tuple{}}, CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}}, Int64, Nothing, Val{true}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_21247)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CuArrays.partial_scan),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(CuArrays.partial_scan), ::Type{Tuple{typeof(Base.add_sum),CuDeviceArray{Int64,1,CUDAnative.AS.Global},CuDeviceArray{Bool,1,CUDAnative.AS.Global},CartesianIndices{1,Tuple{Base.OneTo{Int64}}},CartesianIndices{0,Tuple{}},CartesianIndices{0,Tuple{}},CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}},Int64,Nothing,Val{true}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [15] scan!(::Function, ::CuArray{Int64,1,Nothing}, ::CuArray{Bool,1,Nothing}; dims::Int64, init::Nothing, neutral::Int64) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/accumulate.jl:151
   [16] _accumulate! at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/accumulate.jl:199 [inlined]
   [17] #accumulate!#641 at ./accumulate.jl:337 [inlined]
   [18] accumulate! at ./accumulate.jl:335 [inlined]
   [19] _cumsum! at ./accumulate.jl:61 [inlined]
   [20] #cumsum!#633 at ./accumulate.jl:51 [inlined]
   [21] cumsum(::CuArray{Bool,1,Nothing}; dims::Int64) at ./accumulate.jl:91
   [22] cumsum at ./accumulate.jl:128 [inlined]
   [23] getindex(::CuArray{Int64,1,Nothing}, ::CuArray{Bool,1,Nothing}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/indexing.jl:15
   [24] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:253
   [25] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [26] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:253
  
logical indexing: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:254
  Test threw exception
  Expression: (CuArray{Int}(undef, 2, 2))[CuArray{Bool}(undef, 2, 2)] isa CuArray
  InvalidIRError: compiling partial_scan(typeof(Base.add_sum), CuDeviceArray{Int64,1,CUDAnative.AS.Global}, CuDeviceArray{Bool,1,CUDAnative.AS.Global}, CartesianIndices{1,Tuple{Base.OneTo{Int64}}}, CartesianIndices{0,Tuple{}}, CartesianIndices{0,Tuple{}}, CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}}, Int64, Nothing, Val{true}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_21247)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CuArrays.partial_scan),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(CuArrays.partial_scan), ::Type{Tuple{typeof(Base.add_sum),CuDeviceArray{Int64,1,CUDAnative.AS.Global},CuDeviceArray{Bool,1,CUDAnative.AS.Global},CartesianIndices{1,Tuple{Base.OneTo{Int64}}},CartesianIndices{0,Tuple{}},CartesianIndices{0,Tuple{}},CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}},Int64,Nothing,Val{true}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [15] scan!(::Function, ::CuArray{Int64,1,Nothing}, ::CuArray{Bool,1,CuArray{Bool,2,Nothing}}; dims::Int64, init::Nothing, neutral::Int64) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/accumulate.jl:151
   [16] _accumulate! at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/accumulate.jl:199 [inlined]
   [17] #accumulate!#641 at ./accumulate.jl:337 [inlined]
   [18] accumulate! at ./accumulate.jl:335 [inlined]
   [19] _cumsum! at ./accumulate.jl:61 [inlined]
   [20] #cumsum!#633 at ./accumulate.jl:51 [inlined]
   [21] cumsum(::CuArray{Bool,1,CuArray{Bool,2,Nothing}}; dims::Int64) at ./accumulate.jl:91
   [22] cumsum at ./accumulate.jl:128 [inlined]
   [23] getindex(::CuArray{Int64,2,Nothing}, ::CuArray{Bool,2,Nothing}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/indexing.jl:15
   [24] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:254
   [25] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [26] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:253
  
logical indexing: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:255
  Test threw exception
  Expression: (CuArray{Int}(undef, 2, 2, 2))[CuArray{Bool}(undef, 2, 2, 2)] isa CuArray
  InvalidIRError: compiling partial_scan(typeof(Base.add_sum), CuDeviceArray{Int64,1,CUDAnative.AS.Global}, CuDeviceArray{Bool,1,CUDAnative.AS.Global}, CartesianIndices{1,Tuple{Base.OneTo{Int64}}}, CartesianIndices{0,Tuple{}}, CartesianIndices{0,Tuple{}}, CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}}, Int64, Nothing, Val{true}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_21247)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CuArrays.partial_scan),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(CuArrays.partial_scan), ::Type{Tuple{typeof(Base.add_sum),CuDeviceArray{Int64,1,CUDAnative.AS.Global},CuDeviceArray{Bool,1,CUDAnative.AS.Global},CartesianIndices{1,Tuple{Base.OneTo{Int64}}},CartesianIndices{0,Tuple{}},CartesianIndices{0,Tuple{}},CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}},Int64,Nothing,Val{true}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [15] scan!(::Function, ::CuArray{Int64,1,Nothing}, ::CuArray{Bool,1,CuArray{Bool,3,Nothing}}; dims::Int64, init::Nothing, neutral::Int64) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/accumulate.jl:151
   [16] _accumulate! at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/accumulate.jl:199 [inlined]
   [17] #accumulate!#641 at ./accumulate.jl:337 [inlined]
   [18] accumulate! at ./accumulate.jl:335 [inlined]
   [19] _cumsum! at ./accumulate.jl:61 [inlined]
   [20] #cumsum!#633 at ./accumulate.jl:51 [inlined]
   [21] cumsum(::CuArray{Bool,1,CuArray{Bool,3,Nothing}}; dims::Int64) at ./accumulate.jl:91
   [22] cumsum at ./accumulate.jl:128 [inlined]
   [23] getindex(::CuArray{Int64,3,Nothing}, ::CuArray{Bool,3,Nothing}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/indexing.jl:15
   [24] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:255
   [25] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [26] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:253
  
logical indexing: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:257
  Test threw exception
  Expression: (CuArray{Int}(undef, 2))[Array{Bool}(undef, 2)] isa CuArray
  InvalidIRError: compiling partial_scan(typeof(Base.add_sum), CuDeviceArray{Int64,1,CUDAnative.AS.Global}, CuDeviceArray{Bool,1,CUDAnative.AS.Global}, CartesianIndices{1,Tuple{Base.OneTo{Int64}}}, CartesianIndices{0,Tuple{}}, CartesianIndices{0,Tuple{}}, CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}}, Int64, Nothing, Val{true}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_21247)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CuArrays.partial_scan),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(CuArrays.partial_scan), ::Type{Tuple{typeof(Base.add_sum),CuDeviceArray{Int64,1,CUDAnative.AS.Global},CuDeviceArray{Bool,1,CUDAnative.AS.Global},CartesianIndices{1,Tuple{Base.OneTo{Int64}}},CartesianIndices{0,Tuple{}},CartesianIndices{0,Tuple{}},CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}},Int64,Nothing,Val{true}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [15] scan!(::Function, ::CuArray{Int64,1,Nothing}, ::CuArray{Bool,1,Nothing}; dims::Int64, init::Nothing, neutral::Int64) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/accumulate.jl:151
   [16] _accumulate! at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/accumulate.jl:199 [inlined]
   [17] #accumulate!#641 at ./accumulate.jl:337 [inlined]
   [18] accumulate! at ./accumulate.jl:335 [inlined]
   [19] _cumsum! at ./accumulate.jl:61 [inlined]
   [20] #cumsum!#633 at ./accumulate.jl:51 [inlined]
   [21] cumsum(::CuArray{Bool,1,Nothing}; dims::Int64) at ./accumulate.jl:91
   [22] cumsum at ./accumulate.jl:128 [inlined]
   [23] getindex(::CuArray{Int64,1,Nothing}, ::CuArray{Bool,1,Nothing}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/indexing.jl:15
   [24] getindex(::CuArray{Int64,1,Nothing}, ::Array{Bool,1}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/indexing.jl:11
   [25] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:257
   [26] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [27] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:253
  
logical indexing: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:258
  Test threw exception
  Expression: (CuArray{Int}(undef, 2, 2))[Array{Bool}(undef, 2, 2)] isa CuArray
  InvalidIRError: compiling partial_scan(typeof(Base.add_sum), CuDeviceArray{Int64,1,CUDAnative.AS.Global}, CuDeviceArray{Bool,1,CUDAnative.AS.Global}, CartesianIndices{1,Tuple{Base.OneTo{Int64}}}, CartesianIndices{0,Tuple{}}, CartesianIndices{0,Tuple{}}, CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}}, Int64, Nothing, Val{true}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_21247)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CuArrays.partial_scan),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(CuArrays.partial_scan), ::Type{Tuple{typeof(Base.add_sum),CuDeviceArray{Int64,1,CUDAnative.AS.Global},CuDeviceArray{Bool,1,CUDAnative.AS.Global},CartesianIndices{1,Tuple{Base.OneTo{Int64}}},CartesianIndices{0,Tuple{}},CartesianIndices{0,Tuple{}},CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}},Int64,Nothing,Val{true}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [15] scan!(::Function, ::CuArray{Int64,1,Nothing}, ::CuArray{Bool,1,CuArray{Bool,2,Nothing}}; dims::Int64, init::Nothing, neutral::Int64) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/accumulate.jl:151
   [16] _accumulate! at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/accumulate.jl:199 [inlined]
   [17] #accumulate!#641 at ./accumulate.jl:337 [inlined]
   [18] accumulate! at ./accumulate.jl:335 [inlined]
   [19] _cumsum! at ./accumulate.jl:61 [inlined]
   [20] #cumsum!#633 at ./accumulate.jl:51 [inlined]
   [21] cumsum(::CuArray{Bool,1,CuArray{Bool,2,Nothing}}; dims::Int64) at ./accumulate.jl:91
   [22] cumsum at ./accumulate.jl:128 [inlined]
   [23] getindex(::CuArray{Int64,2,Nothing}, ::CuArray{Bool,2,Nothing}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/indexing.jl:15
   [24] getindex(::CuArray{Int64,2,Nothing}, ::Array{Bool,2}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/indexing.jl:11
   [25] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:258
   [26] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [27] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:253
  
logical indexing: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:259
  Test threw exception
  Expression: (CuArray{Int}(undef, 2, 2, 2))[Array{Bool}(undef, 2, 2, 2)] isa CuArray
  InvalidIRError: compiling partial_scan(typeof(Base.add_sum), CuDeviceArray{Int64,1,CUDAnative.AS.Global}, CuDeviceArray{Bool,1,CUDAnative.AS.Global}, CartesianIndices{1,Tuple{Base.OneTo{Int64}}}, CartesianIndices{0,Tuple{}}, CartesianIndices{0,Tuple{}}, CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}}, Int64, Nothing, Val{true}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_21247)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CuArrays.partial_scan),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(CuArrays.partial_scan), ::Type{Tuple{typeof(Base.add_sum),CuDeviceArray{Int64,1,CUDAnative.AS.Global},CuDeviceArray{Bool,1,CUDAnative.AS.Global},CartesianIndices{1,Tuple{Base.OneTo{Int64}}},CartesianIndices{0,Tuple{}},CartesianIndices{0,Tuple{}},CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}},Int64,Nothing,Val{true}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [15] scan!(::Function, ::CuArray{Int64,1,Nothing}, ::CuArray{Bool,1,CuArray{Bool,3,Nothing}}; dims::Int64, init::Nothing, neutral::Int64) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/accumulate.jl:151
   [16] _accumulate! at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/accumulate.jl:199 [inlined]
   [17] #accumulate!#641 at ./accumulate.jl:337 [inlined]
   [18] accumulate! at ./accumulate.jl:335 [inlined]
   [19] _cumsum! at ./accumulate.jl:61 [inlined]
   [20] #cumsum!#633 at ./accumulate.jl:51 [inlined]
   [21] cumsum(::CuArray{Bool,1,CuArray{Bool,3,Nothing}}; dims::Int64) at ./accumulate.jl:91
   [22] cumsum at ./accumulate.jl:128 [inlined]
   [23] getindex(::CuArray{Int64,3,Nothing}, ::CuArray{Bool,3,Nothing}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/indexing.jl:15
   [24] getindex(::CuArray{Int64,3,Nothing}, ::Array{Bool,3}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/indexing.jl:11
   [25] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:259
   [26] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [27] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:253
  
logical indexing: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:261
  Test threw exception
  Expression: testf(((x, y)->begin
            x[y]
        end), rand(2), rand(Bool, 2))
  InvalidIRError: compiling partial_scan(typeof(Base.add_sum), CuDeviceArray{Int64,1,CUDAnative.AS.Global}, CuDeviceArray{Bool,1,CUDAnative.AS.Global}, CartesianIndices{1,Tuple{Base.OneTo{Int64}}}, CartesianIndices{0,Tuple{}}, CartesianIndices{0,Tuple{}}, CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}}, Int64, Nothing, Val{true}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_21247)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CuArrays.partial_scan),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(CuArrays.partial_scan), ::Type{Tuple{typeof(Base.add_sum),CuDeviceArray{Int64,1,CUDAnative.AS.Global},CuDeviceArray{Bool,1,CUDAnative.AS.Global},CartesianIndices{1,Tuple{Base.OneTo{Int64}}},CartesianIndices{0,Tuple{}},CartesianIndices{0,Tuple{}},CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}},Int64,Nothing,Val{true}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [15] scan!(::Function, ::CuArray{Int64,1,Nothing}, ::CuArray{Bool,1,Nothing}; dims::Int64, init::Nothing, neutral::Int64) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/accumulate.jl:151
   [16] _accumulate! at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/accumulate.jl:199 [inlined]
   [17] #accumulate!#641 at ./accumulate.jl:337 [inlined]
   [18] accumulate! at ./accumulate.jl:335 [inlined]
   [19] _cumsum! at ./accumulate.jl:61 [inlined]
   [20] #cumsum!#633 at ./accumulate.jl:51 [inlined]
   [21] cumsum(::CuArray{Bool,1,Nothing}; dims::Int64) at ./accumulate.jl:91
   [22] cumsum at ./accumulate.jl:128 [inlined]
   [23] getindex(::CuArray{Float64,1,Nothing}, ::CuArray{Bool,1,Nothing}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/indexing.jl:15
   [24] (::var"#93#105")(::CuArray{Float64,1,Nothing}, ::CuArray{Bool,1,Nothing}) at ./none:0
   [25] compare(::Function, ::Type{CuArray}, ::Array{Float64,1}, ::Vararg{Any,N} where N; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:23
   [26] compare(::Function, ::Type{CuArray}, ::Array{Float64,1}, ::Vararg{Any,N} where N) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:20
   [27] testf(::Function, ::Array{Float64,1}, ::Vararg{Any,N} where N; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18
   [28] testf(::Function, ::Array{Float64,1}, ::Vararg{Any,N} where N) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18
   [29] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:261
   [30] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [31] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:253
  
logical indexing: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:262
  Test threw exception
  Expression: testf(((x, y)->begin
            x[y]
        end), rand(2, 2), rand(Bool, 2, 2))
  InvalidIRError: compiling partial_scan(typeof(Base.add_sum), CuDeviceArray{Int64,1,CUDAnative.AS.Global}, CuDeviceArray{Bool,1,CUDAnative.AS.Global}, CartesianIndices{1,Tuple{Base.OneTo{Int64}}}, CartesianIndices{0,Tuple{}}, CartesianIndices{0,Tuple{}}, CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}}, Int64, Nothing, Val{true}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_21247)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CuArrays.partial_scan),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(CuArrays.partial_scan), ::Type{Tuple{typeof(Base.add_sum),CuDeviceArray{Int64,1,CUDAnative.AS.Global},CuDeviceArray{Bool,1,CUDAnative.AS.Global},CartesianIndices{1,Tuple{Base.OneTo{Int64}}},CartesianIndices{0,Tuple{}},CartesianIndices{0,Tuple{}},CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}},Int64,Nothing,Val{true}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [15] scan!(::Function, ::CuArray{Int64,1,Nothing}, ::CuArray{Bool,1,CuArray{Bool,2,Nothing}}; dims::Int64, init::Nothing, neutral::Int64) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/accumulate.jl:151
   [16] _accumulate! at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/accumulate.jl:199 [inlined]
   [17] #accumulate!#641 at ./accumulate.jl:337 [inlined]
   [18] accumulate! at ./accumulate.jl:335 [inlined]
   [19] _cumsum! at ./accumulate.jl:61 [inlined]
   [20] #cumsum!#633 at ./accumulate.jl:51 [inlined]
   [21] cumsum(::CuArray{Bool,1,CuArray{Bool,2,Nothing}}; dims::Int64) at ./accumulate.jl:91
   [22] cumsum at ./accumulate.jl:128 [inlined]
   [23] getindex(::CuArray{Float64,2,Nothing}, ::CuArray{Bool,2,Nothing}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/indexing.jl:15
   [24] (::var"#94#106")(::CuArray{Float64,2,Nothing}, ::CuArray{Bool,2,Nothing}) at ./none:0
   [25] compare(::Function, ::Type{CuArray}, ::Array{Float64,2}, ::Vararg{Any,N} where N; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:23
   [26] compare(::Function, ::Type{CuArray}, ::Array{Float64,2}, ::Vararg{Any,N} where N) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:20
   [27] testf(::Function, ::Array{Float64,2}, ::Vararg{Any,N} where N; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18
   [28] testf(::Function, ::Array{Float64,2}, ::Vararg{Any,N} where N) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18
   [29] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:262
   [30] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [31] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:253
  
logical indexing: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:263
  Test threw exception
  Expression: testf(((x, y)->begin
            x[y]
        end), rand(2, 2, 2), rand(Bool, 2, 2, 2))
  InvalidIRError: compiling partial_scan(typeof(Base.add_sum), CuDeviceArray{Int64,1,CUDAnative.AS.Global}, CuDeviceArray{Bool,1,CUDAnative.AS.Global}, CartesianIndices{1,Tuple{Base.OneTo{Int64}}}, CartesianIndices{0,Tuple{}}, CartesianIndices{0,Tuple{}}, CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}}, Int64, Nothing, Val{true}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_21247)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CuArrays.partial_scan),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(CuArrays.partial_scan), ::Type{Tuple{typeof(Base.add_sum),CuDeviceArray{Int64,1,CUDAnative.AS.Global},CuDeviceArray{Bool,1,CUDAnative.AS.Global},CartesianIndices{1,Tuple{Base.OneTo{Int64}}},CartesianIndices{0,Tuple{}},CartesianIndices{0,Tuple{}},CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}},Int64,Nothing,Val{true}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [15] scan!(::Function, ::CuArray{Int64,1,Nothing}, ::CuArray{Bool,1,CuArray{Bool,3,Nothing}}; dims::Int64, init::Nothing, neutral::Int64) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/accumulate.jl:151
   [16] _accumulate! at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/accumulate.jl:199 [inlined]
   [17] #accumulate!#641 at ./accumulate.jl:337 [inlined]
   [18] accumulate! at ./accumulate.jl:335 [inlined]
   [19] _cumsum! at ./accumulate.jl:61 [inlined]
   [20] #cumsum!#633 at ./accumulate.jl:51 [inlined]
   [21] cumsum(::CuArray{Bool,1,CuArray{Bool,3,Nothing}}; dims::Int64) at ./accumulate.jl:91
   [22] cumsum at ./accumulate.jl:128 [inlined]
   [23] getindex(::CuArray{Float64,3,Nothing}, ::CuArray{Bool,3,Nothing}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/indexing.jl:15
   [24] (::var"#95#107")(::CuArray{Float64,3,Nothing}, ::CuArray{Bool,3,Nothing}) at ./none:0
   [25] compare(::Function, ::Type{CuArray}, ::Array{Float64,3}, ::Vararg{Any,N} where N; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:23
   [26] compare(::Function, ::Type{CuArray}, ::Array{Float64,3}, ::Vararg{Any,N} where N) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:20
   [27] testf(::Function, ::Array{Float64,3}, ::Vararg{Any,N} where N; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18
   [28] testf(::Function, ::Array{Float64,3}, ::Vararg{Any,N} where N) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18
   [29] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:263
   [30] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [31] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:253
  
logical indexing: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:265
  Test threw exception
  Expression: testf((x->begin
            x[x .> 0.5]
        end), rand(2))
  InvalidIRError: compiling partial_scan(typeof(Base.add_sum), CuDeviceArray{Int64,1,CUDAnative.AS.Global}, CuDeviceArray{Bool,1,CUDAnative.AS.Global}, CartesianIndices{1,Tuple{Base.OneTo{Int64}}}, CartesianIndices{0,Tuple{}}, CartesianIndices{0,Tuple{}}, CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}}, Int64, Nothing, Val{true}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_21247)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CuArrays.partial_scan),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(CuArrays.partial_scan), ::Type{Tuple{typeof(Base.add_sum),CuDeviceArray{Int64,1,CUDAnative.AS.Global},CuDeviceArray{Bool,1,CUDAnative.AS.Global},CartesianIndices{1,Tuple{Base.OneTo{Int64}}},CartesianIndices{0,Tuple{}},CartesianIndices{0,Tuple{}},CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}},Int64,Nothing,Val{true}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [15] scan!(::Function, ::CuArray{Int64,1,Nothing}, ::CuArray{Bool,1,Nothing}; dims::Int64, init::Nothing, neutral::Int64) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/accumulate.jl:151
   [16] _accumulate! at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/accumulate.jl:199 [inlined]
   [17] #accumulate!#641 at ./accumulate.jl:337 [inlined]
   [18] accumulate! at ./accumulate.jl:335 [inlined]
   [19] _cumsum! at ./accumulate.jl:61 [inlined]
   [20] #cumsum!#633 at ./accumulate.jl:51 [inlined]
   [21] cumsum(::CuArray{Bool,1,Nothing}; dims::Int64) at ./accumulate.jl:91
   [22] cumsum at ./accumulate.jl:128 [inlined]
   [23] getindex(::CuArray{Float64,1,Nothing}, ::CuArray{Bool,1,Nothing}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/indexing.jl:15
   [24] (::var"#96#108")(::CuArray{Float64,1,Nothing}) at ./none:0
   [25] compare(::Function, ::Type{CuArray}, ::Array{Float64,1}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:23
   [26] compare at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:20 [inlined]
   [27] #testf#1 at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18 [inlined]
   [28] testf(::Function, ::Array{Float64,1}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18
   [29] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:265
   [30] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [31] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:253
  
logical indexing: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:266
  Test threw exception
  Expression: testf((x->begin
            x[x .> 0.5]
        end), rand(2, 2))
  InvalidIRError: compiling broadcast(CuArrays.CuKernelContext, CuDeviceArray{Bool,2,CUDAnative.AS.Global}, Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}},typeof(>),Tuple{Base.Broadcast.Extruded{CuDeviceArray{Float64,2,CUDAnative.AS.Global},Tuple{Bool,Bool},Tuple{Int64,Int64}},Float64}}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_21247)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::String, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{String,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},GPUArrays.var"#26#27",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::String, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] getproperty at ./Base.jl:33 [inlined]
   [14] merge at ./namedtuple.jl:253 [inlined]
   [15] cufunction(::GPUArrays.var"#26#27", ::Type{Tuple{CuArrays.CuKernelContext,CuDeviceArray{Bool,2,CUDAnative.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}},typeof(>),Tuple{Base.Broadcast.Extruded{CuDeviceArray{Float64,2,CUDAnative.AS.Global},Tuple{Bool,Bool},Tuple{Int64,Int64}},Float64}}}}; kwargs::Base.Iterators.Pairs{Symbol,String,Tuple{Symbol},NamedTuple{(:name,),Tuple{String}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:0
   [16] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [17] gpu_call(::CuArrays.CuArrayBackend, ::Function, ::Tuple{CuArray{Bool,2,Nothing},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}},typeof(>),Tuple{Base.Broadcast.Extruded{CuArray{Float64,2,Nothing},Tuple{Bool,Bool},Tuple{Int64,Int64}},Float64}}}, ::Int64; name::String) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/gpuarrays.jl:32
   [18] #gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:60 [inlined]
   [19] copyto! at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/broadcast.jl:63 [inlined]
   [20] copyto! at ./broadcast.jl:865 [inlined]
   [21] copy at ./broadcast.jl:841 [inlined]
   [22] materialize at ./broadcast.jl:821 [inlined]
   [23] (::var"#97#109")(::CuArray{Float64,2,Nothing}) at ./none:0
   [24] compare(::Function, ::Type{CuArray}, ::Array{Float64,2}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:23
   [25] compare at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:20 [inlined]
   [26] #testf#1 at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18 [inlined]
   [27] testf(::Function, ::Array{Float64,2}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18
   [28] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:266
   [29] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [30] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:253
  
logical indexing: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:267
  Test threw exception
  Expression: testf((x->begin
            x[x .> 0.5]
        end), rand(2, 2, 2))
  InvalidIRError: compiling broadcast(CuArrays.CuKernelContext, CuDeviceArray{Bool,3,CUDAnative.AS.Global}, Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(>),Tuple{Base.Broadcast.Extruded{CuDeviceArray{Float64,3,CUDAnative.AS.Global},Tuple{Bool,Bool,Bool},Tuple{Int64,Int64,Int64}},Float64}}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_22829)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::String, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{String,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},GPUArrays.var"#26#27",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::String, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] getproperty at ./Base.jl:33 [inlined]
   [14] merge at ./namedtuple.jl:253 [inlined]
   [15] cufunction(::GPUArrays.var"#26#27", ::Type{Tuple{CuArrays.CuKernelContext,CuDeviceArray{Bool,3,CUDAnative.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(>),Tuple{Base.Broadcast.Extruded{CuDeviceArray{Float64,3,CUDAnative.AS.Global},Tuple{Bool,Bool,Bool},Tuple{Int64,Int64,Int64}},Float64}}}}; kwargs::Base.Iterators.Pairs{Symbol,String,Tuple{Symbol},NamedTuple{(:name,),Tuple{String}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:0
   [16] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [17] gpu_call(::CuArrays.CuArrayBackend, ::Function, ::Tuple{CuArray{Bool,3,Nothing},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(>),Tuple{Base.Broadcast.Extruded{CuArray{Float64,3,Nothing},Tuple{Bool,Bool,Bool},Tuple{Int64,Int64,Int64}},Float64}}}, ::Int64; name::String) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/gpuarrays.jl:32
   [18] #gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:60 [inlined]
   [19] copyto! at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/broadcast.jl:63 [inlined]
   [20] copyto! at ./broadcast.jl:865 [inlined]
   [21] copy at ./broadcast.jl:841 [inlined]
   [22] materialize at ./broadcast.jl:821 [inlined]
   [23] (::var"#98#110")(::CuArray{Float64,3,Nothing}) at ./none:0
   [24] compare(::Function, ::Type{CuArray}, ::Array{Float64,3}, ::Vararg{Array{Float64,3},N} where N; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:23
   [25] compare(::Function, ::Type{CuArray}, ::Array{Float64,3}, ::Vararg{Array{Float64,3},N} where N) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:20
   [26] testf(::Function, ::Array{Float64,3}, ::Vararg{Any,N} where N; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18
   [27] testf(::Function, ::Array{Float64,3}, ::Vararg{Any,N} where N) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18
   [28] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:267
   [29] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [30] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:253
  
logical indexing: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:269
  Test threw exception
  Expression: testf((x->begin
            filter((y->begin
                        y .> 0.5
                    end), x)
        end), rand(2))
  InvalidIRError: compiling partial_scan(typeof(Base.add_sum), CuDeviceArray{Int64,1,CUDAnative.AS.Global}, CuDeviceArray{Bool,1,CUDAnative.AS.Global}, CartesianIndices{1,Tuple{Base.OneTo{Int64}}}, CartesianIndices{0,Tuple{}}, CartesianIndices{0,Tuple{}}, CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}}, Int64, Nothing, Val{true}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_21247)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CuArrays.partial_scan),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(CuArrays.partial_scan), ::Type{Tuple{typeof(Base.add_sum),CuDeviceArray{Int64,1,CUDAnative.AS.Global},CuDeviceArray{Bool,1,CUDAnative.AS.Global},CartesianIndices{1,Tuple{Base.OneTo{Int64}}},CartesianIndices{0,Tuple{}},CartesianIndices{0,Tuple{}},CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}},Int64,Nothing,Val{true}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [15] scan!(::Function, ::CuArray{Int64,1,Nothing}, ::CuArray{Bool,1,Nothing}; dims::Int64, init::Nothing, neutral::Int64) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/accumulate.jl:151
   [16] _accumulate! at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/accumulate.jl:199 [inlined]
   [17] #accumulate!#641 at ./accumulate.jl:337 [inlined]
   [18] accumulate! at ./accumulate.jl:335 [inlined]
   [19] _cumsum! at ./accumulate.jl:61 [inlined]
   [20] #cumsum!#633 at ./accumulate.jl:51 [inlined]
   [21] cumsum(::CuArray{Bool,1,Nothing}; dims::Int64) at ./accumulate.jl:91
   [22] cumsum at ./accumulate.jl:128 [inlined]
   [23] getindex(::CuArray{Float64,1,Nothing}, ::CuArray{Bool,1,Nothing}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/indexing.jl:15
   [24] filter(::Function, ::CuArray{Float64,1,Nothing}) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/abstractarray.jl:257
   [25] (::var"#99#111")(::CuArray{Float64,1,Nothing}) at ./none:0
   [26] compare(::Function, ::Type{CuArray}, ::Array{Float64,1}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:23
   [27] compare at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:20 [inlined]
   [28] #testf#1 at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18 [inlined]
   [29] testf(::Function, ::Array{Float64,1}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18
   [30] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:269
   [31] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [32] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:253
  
logical indexing: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:270
  Test threw exception
  Expression: testf((x->begin
            filter((y->begin
                        y .> 0.5
                    end), x)
        end), rand(2, 2))
  InvalidIRError: compiling broadcast(CuArrays.CuKernelContext, CuDeviceArray{Bool,2,CUDAnative.AS.Global}, Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}},var"#102#114",Tuple{Base.Broadcast.Extruded{CuDeviceArray{Float64,2,CUDAnative.AS.Global},Tuple{Bool,Bool},Tuple{Int64,Int64}}}}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_21247)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::String, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{String,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},GPUArrays.var"#26#27",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::String, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] getproperty at ./Base.jl:33 [inlined]
   [14] merge at ./namedtuple.jl:253 [inlined]
   [15] cufunction(::GPUArrays.var"#26#27", ::Type{Tuple{CuArrays.CuKernelContext,CuDeviceArray{Bool,2,CUDAnative.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}},var"#102#114",Tuple{Base.Broadcast.Extruded{CuDeviceArray{Float64,2,CUDAnative.AS.Global},Tuple{Bool,Bool},Tuple{Int64,Int64}}}}}}; kwargs::Base.Iterators.Pairs{Symbol,String,Tuple{Symbol},NamedTuple{(:name,),Tuple{String}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:0
   [16] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [17] gpu_call(::CuArrays.CuArrayBackend, ::Function, ::Tuple{CuArray{Bool,2,Nothing},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}},var"#102#114",Tuple{Base.Broadcast.Extruded{CuArray{Float64,2,Nothing},Tuple{Bool,Bool},Tuple{Int64,Int64}}}}}, ::Int64; name::String) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/gpuarrays.jl:32
   [18] #gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:60 [inlined]
   [19] copyto! at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/broadcast.jl:63 [inlined]
   [20] copyto! at ./broadcast.jl:865 [inlined]
   [21] copy at ./broadcast.jl:841 [inlined]
   [22] materialize(::Base.Broadcast.Broadcasted{CuArrays.CuArrayStyle{2},Nothing,var"#102#114",Tuple{CuArray{Float64,2,Nothing}}}) at ./broadcast.jl:821
   [23] map(::Function, ::CuArray{Float64,2,Nothing}) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/broadcast.jl:91
   [24] filter at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/abstractarray.jl:257 [inlined]
   [25] (::var"#101#113")(::CuArray{Float64,2,Nothing}) at ./none:0
   [26] compare(::Function, ::Type{CuArray}, ::Array{Float64,2}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:23
   [27] compare at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:20 [inlined]
   [28] #testf#1 at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18 [inlined]
   [29] testf(::Function, ::Array{Float64,2}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18
   [30] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:270
   [31] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [32] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:253
  
logical indexing: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:271
  Test threw exception
  Expression: testf((x->begin
            filter((y->begin
                        y .> 0.5
                    end), x)
        end), rand(2, 2, 2))
  InvalidIRError: compiling broadcast(CuArrays.CuKernelContext, CuDeviceArray{Bool,3,CUDAnative.AS.Global}, Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},var"#104#116",Tuple{Base.Broadcast.Extruded{CuDeviceArray{Float64,3,CUDAnative.AS.Global},Tuple{Bool,Bool,Bool},Tuple{Int64,Int64,Int64}}}}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_22829)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::String, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{String,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},GPUArrays.var"#26#27",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::String, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] getproperty at ./Base.jl:33 [inlined]
   [14] merge at ./namedtuple.jl:253 [inlined]
   [15] cufunction(::GPUArrays.var"#26#27", ::Type{Tuple{CuArrays.CuKernelContext,CuDeviceArray{Bool,3,CUDAnative.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},var"#104#116",Tuple{Base.Broadcast.Extruded{CuDeviceArray{Float64,3,CUDAnative.AS.Global},Tuple{Bool,Bool,Bool},Tuple{Int64,Int64,Int64}}}}}}; kwargs::Base.Iterators.Pairs{Symbol,String,Tuple{Symbol},NamedTuple{(:name,),Tuple{String}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:0
   [16] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [17] gpu_call(::CuArrays.CuArrayBackend, ::Function, ::Tuple{CuArray{Bool,3,Nothing},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},var"#104#116",Tuple{Base.Broadcast.Extruded{CuArray{Float64,3,Nothing},Tuple{Bool,Bool,Bool},Tuple{Int64,Int64,Int64}}}}}, ::Int64; name::String) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/gpuarrays.jl:32
   [18] #gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:60 [inlined]
   [19] copyto! at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/broadcast.jl:63 [inlined]
   [20] copyto! at ./broadcast.jl:865 [inlined]
   [21] copy at ./broadcast.jl:841 [inlined]
   [22] materialize(::Base.Broadcast.Broadcasted{CuArrays.CuArrayStyle{3},Nothing,var"#104#116",Tuple{CuArray{Float64,3,Nothing}}}) at ./broadcast.jl:821
   [23] map(::Function, ::CuArray{Float64,3,Nothing}) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/broadcast.jl:91
   [24] filter at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/abstractarray.jl:257 [inlined]
   [25] (::var"#103#115")(::CuArray{Float64,3,Nothing}) at ./none:0
   [26] compare(::Function, ::Type{CuArray}, ::Array{Float64,3}, ::Vararg{Array{Float64,3},N} where N; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:23
   [27] compare(::Function, ::Type{CuArray}, ::Array{Float64,3}, ::Vararg{Array{Float64,3},N} where N) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:20
   [28] testf(::Function, ::Array{Float64,3}, ::Vararg{Any,N} where N; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18
   [29] testf(::Function, ::Array{Float64,3}, ::Vararg{Any,N} where N) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18
   [30] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:271
   [31] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [32] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:253
  
findall: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:299
  Test threw exception
  Expression: testf((x->begin
            findall(x)
        end), rand(Bool, 100))
  InvalidIRError: compiling partial_scan(typeof(Base.add_sum), CuDeviceArray{Int64,1,CUDAnative.AS.Global}, CuDeviceArray{Bool,1,CUDAnative.AS.Global}, CartesianIndices{1,Tuple{Base.OneTo{Int64}}}, CartesianIndices{0,Tuple{}}, CartesianIndices{0,Tuple{}}, CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}}, Int64, Nothing, Val{true}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_21247)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CuArrays.partial_scan),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(CuArrays.partial_scan), ::Type{Tuple{typeof(Base.add_sum),CuDeviceArray{Int64,1,CUDAnative.AS.Global},CuDeviceArray{Bool,1,CUDAnative.AS.Global},CartesianIndices{1,Tuple{Base.OneTo{Int64}}},CartesianIndices{0,Tuple{}},CartesianIndices{0,Tuple{}},CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}},Int64,Nothing,Val{true}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [15] scan!(::Function, ::CuArray{Int64,1,Nothing}, ::CuArray{Bool,1,Nothing}; dims::Int64, init::Nothing, neutral::Int64) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/accumulate.jl:151
   [16] _accumulate! at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/accumulate.jl:199 [inlined]
   [17] #accumulate!#641 at ./accumulate.jl:337 [inlined]
   [18] accumulate! at ./accumulate.jl:335 [inlined]
   [19] _cumsum! at ./accumulate.jl:61 [inlined]
   [20] #cumsum!#633 at ./accumulate.jl:51 [inlined]
   [21] cumsum(::CuArray{Bool,1,Nothing}; dims::Int64) at ./accumulate.jl:91
   [22] cumsum at ./accumulate.jl:128 [inlined]
   [23] findall(::CuArray{Bool,1,Nothing}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/indexing.jl:54
   [24] (::var"#131#136")(::CuArray{Bool,1,Nothing}) at ./none:0
   [25] compare(::Function, ::Type{CuArray}, ::Array{Bool,1}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:23
   [26] compare at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:20 [inlined]
   [27] #testf#1 at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18 [inlined]
   [28] testf(::Function, ::Array{Bool,1}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18
   [29] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:299
   [30] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [31] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:299
  
findall: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:300
  Test threw exception
  Expression: testf((x->begin
            findall((y->begin
                        y > 0.5
                    end), x)
        end), rand(100))
  InvalidIRError: compiling partial_scan(typeof(Base.add_sum), CuDeviceArray{Int64,1,CUDAnative.AS.Global}, CuDeviceArray{Bool,1,CUDAnative.AS.Global}, CartesianIndices{1,Tuple{Base.OneTo{Int64}}}, CartesianIndices{0,Tuple{}}, CartesianIndices{0,Tuple{}}, CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}}, Int64, Nothing, Val{true}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_21247)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CuArrays.partial_scan),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(CuArrays.partial_scan), ::Type{Tuple{typeof(Base.add_sum),CuDeviceArray{Int64,1,CUDAnative.AS.Global},CuDeviceArray{Bool,1,CUDAnative.AS.Global},CartesianIndices{1,Tuple{Base.OneTo{Int64}}},CartesianIndices{0,Tuple{}},CartesianIndices{0,Tuple{}},CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}},Int64,Nothing,Val{true}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [15] scan!(::Function, ::CuArray{Int64,1,Nothing}, ::CuArray{Bool,1,Nothing}; dims::Int64, init::Nothing, neutral::Int64) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/accumulate.jl:151
   [16] _accumulate! at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/accumulate.jl:199 [inlined]
   [17] #accumulate!#641 at ./accumulate.jl:337 [inlined]
   [18] accumulate! at ./accumulate.jl:335 [inlined]
   [19] _cumsum! at ./accumulate.jl:61 [inlined]
   [20] #cumsum!#633 at ./accumulate.jl:51 [inlined]
   [21] cumsum(::CuArray{Bool,1,Nothing}; dims::Int64) at ./accumulate.jl:91
   [22] cumsum at ./accumulate.jl:128 [inlined]
   [23] findall(::CuArray{Bool,1,Nothing}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/indexing.jl:54
   [24] findall(::Function, ::CuArray{Float64,1,Nothing}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/indexing.jl:91
   [25] (::var"#132#137")(::CuArray{Float64,1,Nothing}) at ./none:0
   [26] compare(::Function, ::Type{CuArray}, ::Array{Float64,1}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:23
   [27] compare at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:20 [inlined]
   [28] #testf#1 at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18 [inlined]
   [29] testf(::Function, ::Array{Float64,1}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18
   [30] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:300
   [31] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [32] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:299
  
findall: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:304
  Test threw exception
  Expression: findall(x) == Array(findall(CuArray(x)))
  InvalidIRError: compiling partial_scan(typeof(Base.add_sum), CuDeviceArray{Int64,1,CUDAnative.AS.Global}, CuDeviceArray{Bool,1,CUDAnative.AS.Global}, CartesianIndices{1,Tuple{Base.OneTo{Int64}}}, CartesianIndices{0,Tuple{}}, CartesianIndices{0,Tuple{}}, CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}}, Int64, Nothing, Val{true}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_21247)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CuArrays.partial_scan),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(CuArrays.partial_scan), ::Type{Tuple{typeof(Base.add_sum),CuDeviceArray{Int64,1,CUDAnative.AS.Global},CuDeviceArray{Bool,1,CUDAnative.AS.Global},CartesianIndices{1,Tuple{Base.OneTo{Int64}}},CartesianIndices{0,Tuple{}},CartesianIndices{0,Tuple{}},CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}},Int64,Nothing,Val{true}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [15] scan!(::Function, ::CuArray{Int64,1,Nothing}, ::CuArray{Bool,1,CuArray{Bool,2,Nothing}}; dims::Int64, init::Nothing, neutral::Int64) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/accumulate.jl:151
   [16] _accumulate! at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/accumulate.jl:199 [inlined]
   [17] #accumulate!#641 at ./accumulate.jl:337 [inlined]
   [18] accumulate! at ./accumulate.jl:335 [inlined]
   [19] _cumsum! at ./accumulate.jl:61 [inlined]
   [20] #cumsum!#633 at ./accumulate.jl:51 [inlined]
   [21] cumsum(::CuArray{Bool,1,CuArray{Bool,2,Nothing}}; dims::Int64) at ./accumulate.jl:91
   [22] cumsum at ./accumulate.jl:128 [inlined]
   [23] findall(::CuArray{Bool,2,Nothing}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/indexing.jl:54
   [24] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:304
   [25] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [26] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:299
  
findall: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:307
  Test threw exception
  Expression: findall((y->begin
                y > 0.5
            end), x) == Array(findall((y->begin
                    y > 0.5
                end), CuArray(x)))
  InvalidIRError: compiling broadcast(CuArrays.CuKernelContext, CuDeviceArray{Bool,2,CUDAnative.AS.Global}, Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}},var"#135#140",Tuple{Base.Broadcast.Extruded{CuDeviceArray{Float64,2,CUDAnative.AS.Global},Tuple{Bool,Bool},Tuple{Int64,Int64}}}}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_21247)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::String, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{String,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},GPUArrays.var"#26#27",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::String, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] getproperty at ./Base.jl:33 [inlined]
   [14] merge at ./namedtuple.jl:253 [inlined]
   [15] cufunction(::GPUArrays.var"#26#27", ::Type{Tuple{CuArrays.CuKernelContext,CuDeviceArray{Bool,2,CUDAnative.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}},var"#135#140",Tuple{Base.Broadcast.Extruded{CuDeviceArray{Float64,2,CUDAnative.AS.Global},Tuple{Bool,Bool},Tuple{Int64,Int64}}}}}}; kwargs::Base.Iterators.Pairs{Symbol,String,Tuple{Symbol},NamedTuple{(:name,),Tuple{String}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:0
   [16] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [17] gpu_call(::CuArrays.CuArrayBackend, ::Function, ::Tuple{CuArray{Bool,2,Nothing},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}},var"#135#140",Tuple{Base.Broadcast.Extruded{CuArray{Float64,2,Nothing},Tuple{Bool,Bool},Tuple{Int64,Int64}}}}}, ::Int64; name::String) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/gpuarrays.jl:32
   [18] #gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:60 [inlined]
   [19] copyto! at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/broadcast.jl:63 [inlined]
   [20] copyto! at ./broadcast.jl:865 [inlined]
   [21] copy at ./broadcast.jl:841 [inlined]
   [22] materialize(::Base.Broadcast.Broadcasted{CuArrays.CuArrayStyle{2},Nothing,var"#135#140",Tuple{CuArray{Float64,2,Nothing}}}) at ./broadcast.jl:821
   [23] map(::Function, ::CuArray{Float64,2,Nothing}) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/broadcast.jl:91
   [24] findall(::Function, ::CuArray{Float64,2,Nothing}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/indexing.jl:90
   [25] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:307
   [26] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [27] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:299
  
findmax & findmin: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:331
  Test threw exception
  Expression: findmax(x) == findmax(CuArray(x))
  InvalidIRError: compiling mapreduce_grid(typeof(identity), typeof(max), CuDeviceArray{Float32,2,CUDAnative.AS.Global}, CuDeviceArray{Float32,2,CUDAnative.AS.Global}, Float32, CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}}, CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}}, Val{true}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_23655)
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_21247)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CuArrays.mapreduce_grid),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(CuArrays.mapreduce_grid), ::Type{Tuple{typeof(identity),typeof(max),CuDeviceArray{Float32,2,CUDAnative.AS.Global},CuDeviceArray{Float32,2,CUDAnative.AS.Global},Float32,CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}},CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}},Val{true}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [15] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [16] macro expansion at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/mapreduce.jl:161 [inlined]
   [17] mapreducedim!(::Function, ::Function, ::CuArray{Float32,2,Nothing}, ::CuArray{Float32,2,Nothing}, ::Float32) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/nvtx/highlevel.jl:83
   [18] mapreduce(::Function, ::Function, ::CuArray{Float32,2,Nothing}; dims::Function, init::Nothing) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/mapreduce.jl:38
   [19] mapreduce at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/mapreduce.jl:24 [inlined]
   [20] _maximum at ./reducedim.jl:657 [inlined]
   [21] _maximum at ./reducedim.jl:656 [inlined]
   [22] #maximum#606 at ./reducedim.jl:652 [inlined]
   [23] maximum at ./reducedim.jl:652 [inlined]
   [24] #findmax#65 at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/indexing.jl:201 [inlined]
   [25] findmax(::CuArray{Float32,2,Nothing}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/indexing.jl:200
   [26] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:331
   [27] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [28] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:326
  
findmax & findmin: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:332
  Test threw exception
  Expression: findmax(x; dims = 1) == Array.(findmax(CuArray(x); dims = 1))
  InvalidIRError: compiling mapreduce_grid(typeof(identity), typeof(max), CuDeviceArray{Float32,2,CUDAnative.AS.Global}, CuDeviceArray{Float32,2,CUDAnative.AS.Global}, Float32, CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}}, CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}}, Val{true}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_23655)
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_21247)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CuArrays.mapreduce_grid),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(CuArrays.mapreduce_grid), ::Type{Tuple{typeof(identity),typeof(max),CuDeviceArray{Float32,2,CUDAnative.AS.Global},CuDeviceArray{Float32,2,CUDAnative.AS.Global},Float32,CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}},CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}},Val{true}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [15] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [16] macro expansion at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/mapreduce.jl:161 [inlined]
   [17] mapreducedim!(::Function, ::Function, ::CuArray{Float32,2,Nothing}, ::CuArray{Float32,2,Nothing}, ::Float32) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/nvtx/highlevel.jl:83
   [18] #mapreduce#28 at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/mapreduce.jl:38 [inlined]
   [19] _maximum at ./reducedim.jl:679 [inlined]
   [20] _maximum at ./reducedim.jl:678 [inlined]
   [21] #maximum#606 at ./reducedim.jl:652 [inlined]
   [22] #findmax#65 at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/indexing.jl:205 [inlined]
   [23] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:332
   [24] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [25] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:326
  
findmax & findmin: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:333
  Test threw exception
  Expression: findmax(x; dims = 2) == Array.(findmax(CuArray(x); dims = 2))
  InvalidIRError: compiling mapreduce_grid(typeof(identity), typeof(max), CuDeviceArray{Float32,2,CUDAnative.AS.Global}, CuDeviceArray{Float32,2,CUDAnative.AS.Global}, Float32, CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}}, CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}}, Val{true}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_23655)
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_21247)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CuArrays.mapreduce_grid),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(CuArrays.mapreduce_grid), ::Type{Tuple{typeof(identity),typeof(max),CuDeviceArray{Float32,2,CUDAnative.AS.Global},CuDeviceArray{Float32,2,CUDAnative.AS.Global},Float32,CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}},CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}},Val{true}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [15] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [16] macro expansion at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/mapreduce.jl:161 [inlined]
   [17] mapreducedim!(::Function, ::Function, ::CuArray{Float32,2,Nothing}, ::CuArray{Float32,2,Nothing}, ::Float32) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/nvtx/highlevel.jl:83
   [18] #mapreduce#28 at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/mapreduce.jl:38 [inlined]
   [19] _maximum at ./reducedim.jl:679 [inlined]
   [20] _maximum at ./reducedim.jl:678 [inlined]
   [21] #maximum#606 at ./reducedim.jl:652 [inlined]
   [22] #findmax#65 at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/indexing.jl:205 [inlined]
   [23] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:333
   [24] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [25] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:326
  
findmax & findmin: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:336
  Test threw exception
  Expression: findmax(x) == findmax(CuArray(x))
  InvalidIRError: compiling mapreduce_grid(typeof(identity), typeof(max), CuDeviceArray{Float32,3,CUDAnative.AS.Global}, CuDeviceArray{Float32,3,CUDAnative.AS.Global}, Float32, CartesianIndices{3,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}}}, CartesianIndices{3,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}}}, Val{true}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_23896)
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_22829)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CuArrays.mapreduce_grid),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(CuArrays.mapreduce_grid), ::Type{Tuple{typeof(identity),typeof(max),CuDeviceArray{Float32,3,CUDAnative.AS.Global},CuDeviceArray{Float32,3,CUDAnative.AS.Global},Float32,CartesianIndices{3,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}}},CartesianIndices{3,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}}},Val{true}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [15] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [16] macro expansion at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/mapreduce.jl:161 [inlined]
   [17] mapreducedim!(::Function, ::Function, ::CuArray{Float32,3,Nothing}, ::CuArray{Float32,3,Nothing}, ::Float32) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/nvtx/highlevel.jl:83
   [18] mapreduce(::Function, ::Function, ::CuArray{Float32,3,Nothing}; dims::Function, init::Nothing) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/mapreduce.jl:38
   [19] mapreduce at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/mapreduce.jl:24 [inlined]
   [20] _maximum at ./reducedim.jl:657 [inlined]
   [21] _maximum at ./reducedim.jl:656 [inlined]
   [22] #maximum#606 at ./reducedim.jl:652 [inlined]
   [23] maximum at ./reducedim.jl:652 [inlined]
   [24] #findmax#65 at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/indexing.jl:201 [inlined]
   [25] findmax(::CuArray{Float32,3,Nothing}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/indexing.jl:200
   [26] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:336
   [27] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [28] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:326
  
findmax & findmin: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:337
  Test threw exception
  Expression: findmax(x; dims = 1) == Array.(findmax(CuArray(x); dims = 1))
  InvalidIRError: compiling mapreduce_grid(typeof(identity), typeof(max), CuDeviceArray{Float32,3,CUDAnative.AS.Global}, CuDeviceArray{Float32,3,CUDAnative.AS.Global}, Float32, CartesianIndices{3,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}}}, CartesianIndices{3,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}}}, Val{true}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_23896)
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_22829)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CuArrays.mapreduce_grid),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(CuArrays.mapreduce_grid), ::Type{Tuple{typeof(identity),typeof(max),CuDeviceArray{Float32,3,CUDAnative.AS.Global},CuDeviceArray{Float32,3,CUDAnative.AS.Global},Float32,CartesianIndices{3,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}}},CartesianIndices{3,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}}},Val{true}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [15] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [16] macro expansion at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/mapreduce.jl:161 [inlined]
   [17] mapreducedim!(::Function, ::Function, ::CuArray{Float32,3,Nothing}, ::CuArray{Float32,3,Nothing}, ::Float32) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/nvtx/highlevel.jl:83
   [18] #mapreduce#28 at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/mapreduce.jl:38 [inlined]
   [19] _maximum at ./reducedim.jl:679 [inlined]
   [20] _maximum at ./reducedim.jl:678 [inlined]
   [21] #maximum#606 at ./reducedim.jl:652 [inlined]
   [22] #findmax#65 at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/indexing.jl:205 [inlined]
   [23] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:337
   [24] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [25] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:326
  
findmax & findmin: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:338
  Test threw exception
  Expression: findmax(x; dims = 2) == Array.(findmax(CuArray(x); dims = 2))
  InvalidIRError: compiling mapreduce_grid(typeof(identity), typeof(max), CuDeviceArray{Float32,3,CUDAnative.AS.Global}, CuDeviceArray{Float32,3,CUDAnative.AS.Global}, Float32, CartesianIndices{3,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}}}, CartesianIndices{3,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}}}, Val{true}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_23896)
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_22829)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CuArrays.mapreduce_grid),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(CuArrays.mapreduce_grid), ::Type{Tuple{typeof(identity),typeof(max),CuDeviceArray{Float32,3,CUDAnative.AS.Global},CuDeviceArray{Float32,3,CUDAnative.AS.Global},Float32,CartesianIndices{3,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}}},CartesianIndices{3,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}}},Val{true}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [15] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [16] macro expansion at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/mapreduce.jl:161 [inlined]
   [17] mapreducedim!(::Function, ::Function, ::CuArray{Float32,3,Nothing}, ::CuArray{Float32,3,Nothing}, ::Float32) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/nvtx/highlevel.jl:83
   [18] #mapreduce#28 at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/mapreduce.jl:38 [inlined]
   [19] _maximum at ./reducedim.jl:679 [inlined]
   [20] _maximum at ./reducedim.jl:678 [inlined]
   [21] #maximum#606 at ./reducedim.jl:652 [inlined]
   [22] #findmax#65 at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/indexing.jl:205 [inlined]
   [23] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:338
   [24] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [25] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:326
  
findmax & findmin: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:339
  Test threw exception
  Expression: findmax(x; dims = 3) == Array.(findmax(CuArray(x); dims = 3))
  InvalidIRError: compiling mapreduce_grid(typeof(identity), typeof(max), CuDeviceArray{Float32,3,CUDAnative.AS.Global}, CuDeviceArray{Float32,3,CUDAnative.AS.Global}, Float32, CartesianIndices{3,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}}}, CartesianIndices{3,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}}}, Val{true}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_23896)
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_22829)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CuArrays.mapreduce_grid),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(CuArrays.mapreduce_grid), ::Type{Tuple{typeof(identity),typeof(max),CuDeviceArray{Float32,3,CUDAnative.AS.Global},CuDeviceArray{Float32,3,CUDAnative.AS.Global},Float32,CartesianIndices{3,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}}},CartesianIndices{3,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}}},Val{true}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [15] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [16] macro expansion at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/mapreduce.jl:161 [inlined]
   [17] mapreducedim!(::Function, ::Function, ::CuArray{Float32,3,Nothing}, ::CuArray{Float32,3,Nothing}, ::Float32) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/nvtx/highlevel.jl:83
   [18] #mapreduce#28 at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/mapreduce.jl:38 [inlined]
   [19] _maximum at ./reducedim.jl:679 [inlined]
   [20] _maximum at ./reducedim.jl:678 [inlined]
   [21] #maximum#606 at ./reducedim.jl:652 [inlined]
   [22] #findmax#65 at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/indexing.jl:205 [inlined]
   [23] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:339
   [24] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [25] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:326
  
findmax & findmin: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:347
  Test threw exception
  Expression: findmin(x) == findmin(CuArray(x))
  InvalidIRError: compiling mapreduce_grid(typeof(identity), typeof(min), CuDeviceArray{Float32,2,CUDAnative.AS.Global}, CuDeviceArray{Float32,2,CUDAnative.AS.Global}, Float32, CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}}, CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}}, Val{true}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_23655)
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_21247)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CuArrays.mapreduce_grid),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(CuArrays.mapreduce_grid), ::Type{Tuple{typeof(identity),typeof(min),CuDeviceArray{Float32,2,CUDAnative.AS.Global},CuDeviceArray{Float32,2,CUDAnative.AS.Global},Float32,CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}},CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}},Val{true}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [15] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [16] macro expansion at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/mapreduce.jl:161 [inlined]
   [17] mapreducedim!(::Function, ::Function, ::CuArray{Float32,2,Nothing}, ::CuArray{Float32,2,Nothing}, ::Float32) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/nvtx/highlevel.jl:83
   [18] mapreduce(::Function, ::Function, ::CuArray{Float32,2,Nothing}; dims::Function, init::Nothing) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/mapreduce.jl:38
   [19] mapreduce at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/mapreduce.jl:24 [inlined]
   [20] _minimum at ./reducedim.jl:657 [inlined]
   [21] _minimum at ./reducedim.jl:656 [inlined]
   [22] #minimum#608 at ./reducedim.jl:652 [inlined]
   [23] minimum at ./reducedim.jl:652 [inlined]
   [24] #findmin#62 at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/indexing.jl:189 [inlined]
   [25] findmin(::CuArray{Float32,2,Nothing}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/indexing.jl:188
   [26] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:347
   [27] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [28] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:326
  
findmax & findmin: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:348
  Test threw exception
  Expression: findmin(x; dims = 1) == Array.(findmin(CuArray(x); dims = 1))
  InvalidIRError: compiling mapreduce_grid(typeof(identity), typeof(min), CuDeviceArray{Float32,2,CUDAnative.AS.Global}, CuDeviceArray{Float32,2,CUDAnative.AS.Global}, Float32, CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}}, CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}}, Val{true}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_23655)
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_21247)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CuArrays.mapreduce_grid),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(CuArrays.mapreduce_grid), ::Type{Tuple{typeof(identity),typeof(min),CuDeviceArray{Float32,2,CUDAnative.AS.Global},CuDeviceArray{Float32,2,CUDAnative.AS.Global},Float32,CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}},CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}},Val{true}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [15] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [16] macro expansion at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/mapreduce.jl:161 [inlined]
   [17] mapreducedim!(::Function, ::Function, ::CuArray{Float32,2,Nothing}, ::CuArray{Float32,2,Nothing}, ::Float32) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/nvtx/highlevel.jl:83
   [18] #mapreduce#28 at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/mapreduce.jl:38 [inlined]
   [19] _minimum at ./reducedim.jl:679 [inlined]
   [20] _minimum at ./reducedim.jl:678 [inlined]
   [21] #minimum#608 at ./reducedim.jl:652 [inlined]
   [22] #findmin#62 at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/indexing.jl:193 [inlined]
   [23] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:348
   [24] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [25] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:326
  
findmax & findmin: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:349
  Test threw exception
  Expression: findmin(x; dims = 2) == Array.(findmin(CuArray(x); dims = 2))
  InvalidIRError: compiling mapreduce_grid(typeof(identity), typeof(min), CuDeviceArray{Float32,2,CUDAnative.AS.Global}, CuDeviceArray{Float32,2,CUDAnative.AS.Global}, Float32, CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}}, CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}}, Val{true}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_23655)
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_21247)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CuArrays.mapreduce_grid),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(CuArrays.mapreduce_grid), ::Type{Tuple{typeof(identity),typeof(min),CuDeviceArray{Float32,2,CUDAnative.AS.Global},CuDeviceArray{Float32,2,CUDAnative.AS.Global},Float32,CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}},CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}},Val{true}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [15] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [16] macro expansion at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/mapreduce.jl:161 [inlined]
   [17] mapreducedim!(::Function, ::Function, ::CuArray{Float32,2,Nothing}, ::CuArray{Float32,2,Nothing}, ::Float32) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/nvtx/highlevel.jl:83
   [18] #mapreduce#28 at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/mapreduce.jl:38 [inlined]
   [19] _minimum at ./reducedim.jl:679 [inlined]
   [20] _minimum at ./reducedim.jl:678 [inlined]
   [21] #minimum#608 at ./reducedim.jl:652 [inlined]
   [22] #findmin#62 at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/indexing.jl:193 [inlined]
   [23] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:349
   [24] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [25] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:326
  
findmax & findmin: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:352
  Test threw exception
  Expression: findmin(x) == findmin(CuArray(x))
  InvalidIRError: compiling mapreduce_grid(typeof(identity), typeof(min), CuDeviceArray{Float32,3,CUDAnative.AS.Global}, CuDeviceArray{Float32,3,CUDAnative.AS.Global}, Float32, CartesianIndices{3,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}}}, CartesianIndices{3,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}}}, Val{true}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_23896)
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_22829)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CuArrays.mapreduce_grid),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(CuArrays.mapreduce_grid), ::Type{Tuple{typeof(identity),typeof(min),CuDeviceArray{Float32,3,CUDAnative.AS.Global},CuDeviceArray{Float32,3,CUDAnative.AS.Global},Float32,CartesianIndices{3,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}}},CartesianIndices{3,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}}},Val{true}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [15] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [16] macro expansion at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/mapreduce.jl:161 [inlined]
   [17] mapreducedim!(::Function, ::Function, ::CuArray{Float32,3,Nothing}, ::CuArray{Float32,3,Nothing}, ::Float32) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/nvtx/highlevel.jl:83
   [18] mapreduce(::Function, ::Function, ::CuArray{Float32,3,Nothing}; dims::Function, init::Nothing) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/mapreduce.jl:38
   [19] mapreduce at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/mapreduce.jl:24 [inlined]
   [20] _minimum at ./reducedim.jl:657 [inlined]
   [21] _minimum at ./reducedim.jl:656 [inlined]
   [22] #minimum#608 at ./reducedim.jl:652 [inlined]
   [23] minimum at ./reducedim.jl:652 [inlined]
   [24] #findmin#62 at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/indexing.jl:189 [inlined]
   [25] findmin(::CuArray{Float32,3,Nothing}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/indexing.jl:188
   [26] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:352
   [27] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [28] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:326
  
findmax & findmin: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:353
  Test threw exception
  Expression: findmin(x; dims = 1) == Array.(findmin(CuArray(x); dims = 1))
  InvalidIRError: compiling mapreduce_grid(typeof(identity), typeof(min), CuDeviceArray{Float32,3,CUDAnative.AS.Global}, CuDeviceArray{Float32,3,CUDAnative.AS.Global}, Float32, CartesianIndices{3,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}}}, CartesianIndices{3,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}}}, Val{true}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_23896)
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_22829)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CuArrays.mapreduce_grid),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(CuArrays.mapreduce_grid), ::Type{Tuple{typeof(identity),typeof(min),CuDeviceArray{Float32,3,CUDAnative.AS.Global},CuDeviceArray{Float32,3,CUDAnative.AS.Global},Float32,CartesianIndices{3,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}}},CartesianIndices{3,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}}},Val{true}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [15] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [16] macro expansion at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/mapreduce.jl:161 [inlined]
   [17] mapreducedim!(::Function, ::Function, ::CuArray{Float32,3,Nothing}, ::CuArray{Float32,3,Nothing}, ::Float32) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/nvtx/highlevel.jl:83
   [18] #mapreduce#28 at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/mapreduce.jl:38 [inlined]
   [19] _minimum at ./reducedim.jl:679 [inlined]
   [20] _minimum at ./reducedim.jl:678 [inlined]
   [21] #minimum#608 at ./reducedim.jl:652 [inlined]
   [22] #findmin#62 at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/indexing.jl:193 [inlined]
   [23] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:353
   [24] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [25] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:326
  
findmax & findmin: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:354
  Test threw exception
  Expression: findmin(x; dims = 2) == Array.(findmin(CuArray(x); dims = 2))
  InvalidIRError: compiling mapreduce_grid(typeof(identity), typeof(min), CuDeviceArray{Float32,3,CUDAnative.AS.Global}, CuDeviceArray{Float32,3,CUDAnative.AS.Global}, Float32, CartesianIndices{3,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}}}, CartesianIndices{3,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}}}, Val{true}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_23896)
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_22829)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CuArrays.mapreduce_grid),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(CuArrays.mapreduce_grid), ::Type{Tuple{typeof(identity),typeof(min),CuDeviceArray{Float32,3,CUDAnative.AS.Global},CuDeviceArray{Float32,3,CUDAnative.AS.Global},Float32,CartesianIndices{3,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}}},CartesianIndices{3,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}}},Val{true}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [15] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [16] macro expansion at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/mapreduce.jl:161 [inlined]
   [17] mapreducedim!(::Function, ::Function, ::CuArray{Float32,3,Nothing}, ::CuArray{Float32,3,Nothing}, ::Float32) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/nvtx/highlevel.jl:83
   [18] #mapreduce#28 at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/mapreduce.jl:38 [inlined]
   [19] _minimum at ./reducedim.jl:679 [inlined]
   [20] _minimum at ./reducedim.jl:678 [inlined]
   [21] #minimum#608 at ./reducedim.jl:652 [inlined]
   [22] #findmin#62 at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/indexing.jl:193 [inlined]
   [23] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:354
   [24] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [25] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:326
  
findmax & findmin: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:355
  Test threw exception
  Expression: findmin(x; dims = 3) == Array.(findmin(CuArray(x); dims = 3))
  InvalidIRError: compiling mapreduce_grid(typeof(identity), typeof(min), CuDeviceArray{Float32,3,CUDAnative.AS.Global}, CuDeviceArray{Float32,3,CUDAnative.AS.Global}, Float32, CartesianIndices{3,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}}}, CartesianIndices{3,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}}}, Val{true}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_23896)
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_22829)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CuArrays.mapreduce_grid),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(CuArrays.mapreduce_grid), ::Type{Tuple{typeof(identity),typeof(min),CuDeviceArray{Float32,3,CUDAnative.AS.Global},CuDeviceArray{Float32,3,CUDAnative.AS.Global},Float32,CartesianIndices{3,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}}},CartesianIndices{3,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}}},Val{true}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [15] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [16] macro expansion at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/mapreduce.jl:161 [inlined]
   [17] mapreducedim!(::Function, ::Function, ::CuArray{Float32,3,Nothing}, ::CuArray{Float32,3,Nothing}, ::Float32) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/nvtx/highlevel.jl:83
   [18] #mapreduce#28 at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/mapreduce.jl:38 [inlined]
   [19] _minimum at ./reducedim.jl:679 [inlined]
   [20] _minimum at ./reducedim.jl:678 [inlined]
   [21] #minimum#608 at ./reducedim.jl:652 [inlined]
   [22] #findmin#62 at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/indexing.jl:193 [inlined]
   [23] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:355
   [24] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [25] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/base.jl:326
  
getrf_strided_batched: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/blas.jl:1299
  Got exception outside of a @test
  InvalidIRError: compiling broadcast(CuArrays.CuKernelContext, CuDeviceArray{Float32,3,CUDAnative.AS.Global}, Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Base.Broadcast.Extruded{CuDeviceArray{Float32,3,CUDAnative.AS.Global},Tuple{Bool,Bool,Bool},Tuple{Int64,Int64,Int64}}}}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_23896)
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_22829)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::String, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{String,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},GPUArrays.var"#26#27",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::String, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] getproperty at ./Base.jl:33 [inlined]
   [14] merge at ./namedtuple.jl:253 [inlined]
   [15] cufunction(::GPUArrays.var"#26#27", ::Type{Tuple{CuArrays.CuKernelContext,CuDeviceArray{Float32,3,CUDAnative.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Base.Broadcast.Extruded{CuDeviceArray{Float32,3,CUDAnative.AS.Global},Tuple{Bool,Bool,Bool},Tuple{Int64,Int64,Int64}}}}}}; kwargs::Base.Iterators.Pairs{Symbol,String,Tuple{Symbol},NamedTuple{(:name,),Tuple{String}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:0
   [16] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [17] gpu_call(::CuArrays.CuArrayBackend, ::Function, ::Tuple{CuArray{Float32,3,Nothing},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Base.Broadcast.Extruded{CuArray{Float32,3,Nothing},Tuple{Bool,Bool,Bool},Tuple{Int64,Int64,Int64}}}}}, ::Int64; name::String) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/gpuarrays.jl:32
   [18] #gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:60 [inlined]
   [19] copyto!(::CuArray{Float32,3,Nothing}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{CuArray{Float32,3,Nothing}}}) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/broadcast.jl:63
   [20] copyto!(::CuArray{Float32,3,Nothing}, ::Base.Broadcast.Broadcasted{CuArrays.CuArrayStyle{3},Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{CuArray{Float32,3,Nothing}}}) at ./broadcast.jl:865
   [21] copy(::Base.Broadcast.Broadcasted{CuArrays.CuArrayStyle{3},Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{CuArray{Float32,3,Nothing}}}) at ./broadcast.jl:841
   [22] materialize(::Base.Broadcast.Broadcasted{CuArrays.CuArrayStyle{3},Nothing,typeof(identity),Tuple{CuArray{Float32,3,Nothing}}}) at ./broadcast.jl:821
   [23] copy at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/abstractarray.jl:173 [inlined]
   [24] getrf_strided_batched(::CuArray{Float32,3,Nothing}, ::Bool) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/blas/wrappers.jl:1573
   [25] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/blas.jl:1305
   [26] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [27] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/blas.jl:1300
   [28] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [29] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/blas.jl:1162
   [30] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [31] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/blas.jl:49
   [32] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [33] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/blas.jl:5
   [34] include(::String) at ./client.jl:442
   [35] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:55
   [36] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [37] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:40
   [38] include(::String) at ./client.jl:442
   [39] top-level scope at none:6
   [40] eval(::Module, ::Any) at ./boot.jl:331
   [41] exec_options(::Base.JLOptions) at ./client.jl:265
   [42] _start() at ./client.jl:491
  
getrf_strided_batched!: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/blas.jl:1247
  Got exception outside of a @test
  InvalidIRError: compiling index_kernel(CuArrays.CuKernelContext, CuDeviceArray{Float64,2,CUDAnative.AS.Global}, CuDeviceArray{Float64,3,CUDAnative.AS.Global}, Tuple{Int64,Int64,Int64}, Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Int64}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_23896)
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_22829)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(GPUArrays.index_kernel),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(GPUArrays.index_kernel), ::Type{Tuple{CuArrays.CuKernelContext,CuDeviceArray{Float64,2,CUDAnative.AS.Global},CuDeviceArray{Float64,3,CUDAnative.AS.Global},Tuple{Int64,Int64,Int64},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Int64}}}; kwargs::Base.Iterators.Pairs{Symbol,Nothing,Tuple{Symbol},NamedTuple{(:name,),Tuple{Nothing}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [15] gpu_call(::CuArrays.CuArrayBackend, ::Function, ::Tuple{CuArray{Float64,2,Nothing},CuArray{Float64,3,Nothing},Tuple{Int64,Int64,Int64},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Int64}}, ::Int64; name::Nothing) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/gpuarrays.jl:32
   [16] #gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:60 [inlined]
   [17] gpu_call at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:46 [inlined]
   [18] _unsafe_getindex! at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/indexing.jl:125 [inlined]
   [19] _unsafe_getindex at ./multidimensional.jl:752 [inlined]
   [20] _getindex at ./multidimensional.jl:738 [inlined]
   [21] getindex(::CuArray{Float64,3,Nothing}, ::Function, ::Function, ::Int64) at ./abstractarray.jl:980
   [22] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/blas.jl:1258
   [23] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [24] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/blas.jl:1248
   [25] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [26] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/blas.jl:1162
   [27] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [28] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/blas.jl:49
   [29] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [30] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/blas.jl:5
   [31] include(::String) at ./client.jl:442
   [32] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:55
   [33] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [34] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:40
   [35] include(::String) at ./client.jl:442
   [36] top-level scope at none:6
   [37] eval(::Module, ::Any) at ./boot.jl:331
   [38] exec_options(::Base.JLOptions) at ./client.jl:265
   [39] _start() at ./client.jl:491
  
getrf_strided_batched: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/blas.jl:1299
  Got exception outside of a @test
  InvalidIRError: compiling broadcast(CuArrays.CuKernelContext, CuDeviceArray{Float64,3,CUDAnative.AS.Global}, Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Base.Broadcast.Extruded{CuDeviceArray{Float64,3,CUDAnative.AS.Global},Tuple{Bool,Bool,Bool},Tuple{Int64,Int64,Int64}}}}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_23896)
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_22829)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::String, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{String,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},GPUArrays.var"#26#27",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::String, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] getproperty at ./Base.jl:33 [inlined]
   [14] merge at ./namedtuple.jl:253 [inlined]
   [15] cufunction(::GPUArrays.var"#26#27", ::Type{Tuple{CuArrays.CuKernelContext,CuDeviceArray{Float64,3,CUDAnative.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Base.Broadcast.Extruded{CuDeviceArray{Float64,3,CUDAnative.AS.Global},Tuple{Bool,Bool,Bool},Tuple{Int64,Int64,Int64}}}}}}; kwargs::Base.Iterators.Pairs{Symbol,String,Tuple{Symbol},NamedTuple{(:name,),Tuple{String}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:0
   [16] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [17] gpu_call(::CuArrays.CuArrayBackend, ::Function, ::Tuple{CuArray{Float64,3,Nothing},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Base.Broadcast.Extruded{CuArray{Float64,3,Nothing},Tuple{Bool,Bool,Bool},Tuple{Int64,Int64,Int64}}}}}, ::Int64; name::String) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/gpuarrays.jl:32
   [18] #gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:60 [inlined]
   [19] copyto!(::CuArray{Float64,3,Nothing}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{CuArray{Float64,3,Nothing}}}) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/broadcast.jl:63
   [20] copyto!(::CuArray{Float64,3,Nothing}, ::Base.Broadcast.Broadcasted{CuArrays.CuArrayStyle{3},Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{CuArray{Float64,3,Nothing}}}) at ./broadcast.jl:865
   [21] copy(::Base.Broadcast.Broadcasted{CuArrays.CuArrayStyle{3},Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{CuArray{Float64,3,Nothing}}}) at ./broadcast.jl:841
   [22] materialize(::Base.Broadcast.Broadcasted{CuArrays.CuArrayStyle{3},Nothing,typeof(identity),Tuple{CuArray{Float64,3,Nothing}}}) at ./broadcast.jl:821
   [23] copy at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/abstractarray.jl:173 [inlined]
   [24] getrf_strided_batched(::CuArray{Float64,3,Nothing}, ::Bool) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/blas/wrappers.jl:1573
   [25] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/blas.jl:1305
   [26] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [27] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/blas.jl:1300
   [28] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [29] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/blas.jl:1162
   [30] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [31] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/blas.jl:49
   [32] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [33] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/blas.jl:5
   [34] include(::String) at ./client.jl:442
   [35] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:55
   [36] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [37] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:40
   [38] include(::String) at ./client.jl:442
   [39] top-level scope at none:6
   [40] eval(::Module, ::Any) at ./boot.jl:331
   [41] exec_options(::Base.JLOptions) at ./client.jl:265
   [42] _start() at ./client.jl:491
  
getrf_strided_batched!: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/blas.jl:1247
  Got exception outside of a @test
  InvalidIRError: compiling index_kernel(CuArrays.CuKernelContext, CuDeviceArray{Complex{Float32},2,CUDAnative.AS.Global}, CuDeviceArray{Complex{Float32},3,CUDAnative.AS.Global}, Tuple{Int64,Int64,Int64}, Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Int64}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_23896)
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_22829)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(GPUArrays.index_kernel),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(GPUArrays.index_kernel), ::Type{Tuple{CuArrays.CuKernelContext,CuDeviceArray{Complex{Float32},2,CUDAnative.AS.Global},CuDeviceArray{Complex{Float32},3,CUDAnative.AS.Global},Tuple{Int64,Int64,Int64},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Int64}}}; kwargs::Base.Iterators.Pairs{Symbol,Nothing,Tuple{Symbol},NamedTuple{(:name,),Tuple{Nothing}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [15] gpu_call(::CuArrays.CuArrayBackend, ::Function, ::Tuple{CuArray{Complex{Float32},2,Nothing},CuArray{Complex{Float32},3,Nothing},Tuple{Int64,Int64,Int64},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Int64}}, ::Int64; name::Nothing) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/gpuarrays.jl:32
   [16] #gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:60 [inlined]
   [17] gpu_call at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:46 [inlined]
   [18] _unsafe_getindex! at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/indexing.jl:125 [inlined]
   [19] _unsafe_getindex at ./multidimensional.jl:752 [inlined]
   [20] _getindex at ./multidimensional.jl:738 [inlined]
   [21] getindex(::CuArray{Complex{Float32},3,Nothing}, ::Function, ::Function, ::Int64) at ./abstractarray.jl:980
   [22] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/blas.jl:1258
   [23] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [24] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/blas.jl:1248
   [25] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [26] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/blas.jl:1162
   [27] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [28] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/blas.jl:49
   [29] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [30] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/blas.jl:5
   [31] include(::String) at ./client.jl:442
   [32] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:55
   [33] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [34] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:40
   [35] include(::String) at ./client.jl:442
   [36] top-level scope at none:6
   [37] eval(::Module, ::Any) at ./boot.jl:331
   [38] exec_options(::Base.JLOptions) at ./client.jl:265
   [39] _start() at ./client.jl:491
  
getrf_strided_batched: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/blas.jl:1299
  Got exception outside of a @test
  InvalidIRError: compiling index_kernel(CuArrays.CuKernelContext, CuDeviceArray{Complex{Float32},2,CUDAnative.AS.Global}, CuDeviceArray{Complex{Float32},3,CUDAnative.AS.Global}, Tuple{Int64,Int64,Int64}, Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Int64}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_23896)
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_22829)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(GPUArrays.index_kernel),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(GPUArrays.index_kernel), ::Type{Tuple{CuArrays.CuKernelContext,CuDeviceArray{Complex{Float32},2,CUDAnative.AS.Global},CuDeviceArray{Complex{Float32},3,CUDAnative.AS.Global},Tuple{Int64,Int64,Int64},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Int64}}}; kwargs::Base.Iterators.Pairs{Symbol,Nothing,Tuple{Symbol},NamedTuple{(:name,),Tuple{Nothing}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [15] gpu_call(::CuArrays.CuArrayBackend, ::Function, ::Tuple{CuArray{Complex{Float32},2,Nothing},CuArray{Complex{Float32},3,Nothing},Tuple{Int64,Int64,Int64},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Int64}}, ::Int64; name::Nothing) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/gpuarrays.jl:32
   [16] #gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:60 [inlined]
   [17] gpu_call at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:46 [inlined]
   [18] _unsafe_getindex! at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/indexing.jl:125 [inlined]
   [19] _unsafe_getindex at ./multidimensional.jl:752 [inlined]
   [20] _getindex at ./multidimensional.jl:738 [inlined]
   [21] getindex(::CuArray{Complex{Float32},3,Nothing}, ::Function, ::Function, ::Int64) at ./abstractarray.jl:980
   [22] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/blas.jl:1309
   [23] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [24] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/blas.jl:1300
   [25] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [26] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/blas.jl:1162
   [27] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [28] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/blas.jl:49
   [29] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [30] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/blas.jl:5
   [31] include(::String) at ./client.jl:442
   [32] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:55
   [33] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [34] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:40
   [35] include(::String) at ./client.jl:442
   [36] top-level scope at none:6
   [37] eval(::Module, ::Any) at ./boot.jl:331
   [38] exec_options(::Base.JLOptions) at ./client.jl:265
   [39] _start() at ./client.jl:491
  
getrf_strided_batched!: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/blas.jl:1247
  Got exception outside of a @test
  InvalidIRError: compiling index_kernel(CuArrays.CuKernelContext, CuDeviceArray{Complex{Float64},2,CUDAnative.AS.Global}, CuDeviceArray{Complex{Float64},3,CUDAnative.AS.Global}, Tuple{Int64,Int64,Int64}, Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Int64}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_23896)
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_22829)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(GPUArrays.index_kernel),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(GPUArrays.index_kernel), ::Type{Tuple{CuArrays.CuKernelContext,CuDeviceArray{Complex{Float64},2,CUDAnative.AS.Global},CuDeviceArray{Complex{Float64},3,CUDAnative.AS.Global},Tuple{Int64,Int64,Int64},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Int64}}}; kwargs::Base.Iterators.Pairs{Symbol,Nothing,Tuple{Symbol},NamedTuple{(:name,),Tuple{Nothing}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [15] gpu_call(::CuArrays.CuArrayBackend, ::Function, ::Tuple{CuArray{Complex{Float64},2,Nothing},CuArray{Complex{Float64},3,Nothing},Tuple{Int64,Int64,Int64},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Int64}}, ::Int64; name::Nothing) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/gpuarrays.jl:32
   [16] #gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:60 [inlined]
   [17] gpu_call at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:46 [inlined]
   [18] _unsafe_getindex! at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/indexing.jl:125 [inlined]
   [19] _unsafe_getindex at ./multidimensional.jl:752 [inlined]
   [20] _getindex at ./multidimensional.jl:738 [inlined]
   [21] getindex(::CuArray{Complex{Float64},3,Nothing}, ::Function, ::Function, ::Int64) at ./abstractarray.jl:980
   [22] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/blas.jl:1258
   [23] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [24] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/blas.jl:1248
   [25] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [26] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/blas.jl:1162
   [27] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [28] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/blas.jl:49
   [29] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [30] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/blas.jl:5
   [31] include(::String) at ./client.jl:442
   [32] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:55
   [33] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [34] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:40
   [35] include(::String) at ./client.jl:442
   [36] top-level scope at none:6
   [37] eval(::Module, ::Any) at ./boot.jl:331
   [38] exec_options(::Base.JLOptions) at ./client.jl:265
   [39] _start() at ./client.jl:491
  
getrf_strided_batched: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/blas.jl:1299
  Got exception outside of a @test
  InvalidIRError: compiling broadcast(CuArrays.CuKernelContext, CuDeviceArray{Complex{Float64},3,CUDAnative.AS.Global}, Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Base.Broadcast.Extruded{CuDeviceArray{Complex{Float64},3,CUDAnative.AS.Global},Tuple{Bool,Bool,Bool},Tuple{Int64,Int64,Int64}}}}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_23896)
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_22829)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::String, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{String,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},GPUArrays.var"#26#27",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::String, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] getproperty at ./Base.jl:33 [inlined]
   [14] merge at ./namedtuple.jl:253 [inlined]
   [15] cufunction(::GPUArrays.var"#26#27", ::Type{Tuple{CuArrays.CuKernelContext,CuDeviceArray{Complex{Float64},3,CUDAnative.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Base.Broadcast.Extruded{CuDeviceArray{Complex{Float64},3,CUDAnative.AS.Global},Tuple{Bool,Bool,Bool},Tuple{Int64,Int64,Int64}}}}}}; kwargs::Base.Iterators.Pairs{Symbol,String,Tuple{Symbol},NamedTuple{(:name,),Tuple{String}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:0
   [16] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [17] gpu_call(::CuArrays.CuArrayBackend, ::Function, ::Tuple{CuArray{Complex{Float64},3,Nothing},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Base.Broadcast.Extruded{CuArray{Complex{Float64},3,Nothing},Tuple{Bool,Bool,Bool},Tuple{Int64,Int64,Int64}}}}}, ::Int64; name::String) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/gpuarrays.jl:32
   [18] #gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:60 [inlined]
   [19] copyto!(::CuArray{Complex{Float64},3,Nothing}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{CuArray{Complex{Float64},3,Nothing}}}) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/broadcast.jl:63
   [20] copyto!(::CuArray{Complex{Float64},3,Nothing}, ::Base.Broadcast.Broadcasted{CuArrays.CuArrayStyle{3},Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{CuArray{Complex{Float64},3,Nothing}}}) at ./broadcast.jl:865
   [21] copy(::Base.Broadcast.Broadcasted{CuArrays.CuArrayStyle{3},Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{CuArray{Complex{Float64},3,Nothing}}}) at ./broadcast.jl:841
   [22] materialize(::Base.Broadcast.Broadcasted{CuArrays.CuArrayStyle{3},Nothing,typeof(identity),Tuple{CuArray{Complex{Float64},3,Nothing}}}) at ./broadcast.jl:821
   [23] copy at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/abstractarray.jl:173 [inlined]
   [24] getrf_strided_batched(::CuArray{Complex{Float64},3,Nothing}, ::Bool) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/blas/wrappers.jl:1573
   [25] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/blas.jl:1305
   [26] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [27] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/blas.jl:1300
   [28] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [29] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/blas.jl:1162
   [30] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [31] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/blas.jl:49
   [32] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [33] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/blas.jl:5
   [34] include(::String) at ./client.jl:442
   [35] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:55
   [36] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [37] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:40
   [38] include(::String) at ./client.jl:442
   [39] top-level scope at none:6
   [40] eval(::Module, ::Any) at ./boot.jl:331
   [41] exec_options(::Base.JLOptions) at ./client.jl:265
   [42] _start() at ./client.jl:491
  
3D: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/fft.jl:108
  Got exception outside of a @test
  InvalidIRError: compiling broadcast(CuArrays.CuKernelContext, CuDeviceArray{Complex{Float64},3,CUDAnative.AS.Global}, Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Base.Broadcast.Extruded{CuDeviceArray{Complex{Float64},3,CUDAnative.AS.Global},Tuple{Bool,Bool,Bool},Tuple{Int64,Int64,Int64}}}}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_23896)
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_22829)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::String, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{String,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},GPUArrays.var"#26#27",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::String, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] getproperty at ./Base.jl:33 [inlined]
   [14] merge at ./namedtuple.jl:253 [inlined]
   [15] cufunction(::GPUArrays.var"#26#27", ::Type{Tuple{CuArrays.CuKernelContext,CuDeviceArray{Complex{Float64},3,CUDAnative.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Base.Broadcast.Extruded{CuDeviceArray{Complex{Float64},3,CUDAnative.AS.Global},Tuple{Bool,Bool,Bool},Tuple{Int64,Int64,Int64}}}}}}; kwargs::Base.Iterators.Pairs{Symbol,String,Tuple{Symbol},NamedTuple{(:name,),Tuple{String}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:0
   [16] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [17] gpu_call(::CuArrays.CuArrayBackend, ::Function, ::Tuple{CuArray{Complex{Float64},3,Nothing},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Base.Broadcast.Extruded{CuArray{Complex{Float64},3,Nothing},Tuple{Bool,Bool,Bool},Tuple{Int64,Int64,Int64}}}}}, ::Int64; name::String) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/gpuarrays.jl:32
   [18] #gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:60 [inlined]
   [19] copyto!(::CuArray{Complex{Float64},3,Nothing}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{CuArray{Complex{Float64},3,Nothing}}}) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/broadcast.jl:63
   [20] copyto!(::CuArray{Complex{Float64},3,Nothing}, ::Base.Broadcast.Broadcasted{CuArrays.CuArrayStyle{3},Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{CuArray{Complex{Float64},3,Nothing}}}) at ./broadcast.jl:865
   [21] copy(::Base.Broadcast.Broadcasted{CuArrays.CuArrayStyle{3},Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{CuArray{Complex{Float64},3,Nothing}}}) at ./broadcast.jl:841
   [22] materialize(::Base.Broadcast.Broadcasted{CuArrays.CuArrayStyle{3},Nothing,typeof(identity),Tuple{CuArray{Complex{Float64},3,Nothing}}}) at ./broadcast.jl:821
   [23] copy at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/abstractarray.jl:173 [inlined]
   [24] unsafe_execute! at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/fft/fft.jl:430 [inlined]
   [25] mul! at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/fft/fft.jl:449 [inlined]
   [26] * at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/fft/fft.jl:477 [inlined]
   [27] (::var"#out_of_place#196"{Float64,Float64})(::Array{Complex{Float64},3}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/fft.jl:27
   [28] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/fft.jl:111
   [29] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [30] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/fft.jl:109
   [31] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [32] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/fft.jl:70
   [33] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [34] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/fft.jl:3
   [35] include(::String) at ./client.jl:442
   [36] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:57
   [37] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [38] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:40
   [39] include(::String) at ./client.jl:442
   [40] top-level scope at none:6
   [41] eval(::Module, ::Any) at ./boot.jl:331
   [42] exec_options(::Base.JLOptions) at ./client.jl:265
   [43] _start() at ./client.jl:491
  
Batch 2D (in 3D): Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/fft.jl:120
  Got exception outside of a @test
  InvalidIRError: compiling broadcast(CuArrays.CuKernelContext, CuDeviceArray{Complex{Float64},3,CUDAnative.AS.Global}, Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Base.Broadcast.Extruded{CuDeviceArray{Complex{Float64},3,CUDAnative.AS.Global},Tuple{Bool,Bool,Bool},Tuple{Int64,Int64,Int64}}}}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_23896)
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_22829)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::String, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{String,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},GPUArrays.var"#26#27",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::String, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] getproperty at ./Base.jl:33 [inlined]
   [14] merge at ./namedtuple.jl:253 [inlined]
   [15] cufunction(::GPUArrays.var"#26#27", ::Type{Tuple{CuArrays.CuKernelContext,CuDeviceArray{Complex{Float64},3,CUDAnative.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Base.Broadcast.Extruded{CuDeviceArray{Complex{Float64},3,CUDAnative.AS.Global},Tuple{Bool,Bool,Bool},Tuple{Int64,Int64,Int64}}}}}}; kwargs::Base.Iterators.Pairs{Symbol,String,Tuple{Symbol},NamedTuple{(:name,),Tuple{String}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:0
   [16] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [17] gpu_call(::CuArrays.CuArrayBackend, ::Function, ::Tuple{CuArray{Complex{Float64},3,Nothing},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Base.Broadcast.Extruded{CuArray{Complex{Float64},3,Nothing},Tuple{Bool,Bool,Bool},Tuple{Int64,Int64,Int64}}}}}, ::Int64; name::String) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/gpuarrays.jl:32
   [18] #gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:60 [inlined]
   [19] copyto!(::CuArray{Complex{Float64},3,Nothing}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{CuArray{Complex{Float64},3,Nothing}}}) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/broadcast.jl:63
   [20] copyto!(::CuArray{Complex{Float64},3,Nothing}, ::Base.Broadcast.Broadcasted{CuArrays.CuArrayStyle{3},Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{CuArray{Complex{Float64},3,Nothing}}}) at ./broadcast.jl:865
   [21] copy(::Base.Broadcast.Broadcasted{CuArrays.CuArrayStyle{3},Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{CuArray{Complex{Float64},3,Nothing}}}) at ./broadcast.jl:841
   [22] materialize(::Base.Broadcast.Broadcasted{CuArrays.CuArrayStyle{3},Nothing,typeof(identity),Tuple{CuArray{Complex{Float64},3,Nothing}}}) at ./broadcast.jl:821
   [23] copy at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/abstractarray.jl:173 [inlined]
   [24] unsafe_execute! at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/fft/fft.jl:430 [inlined]
   [25] mul! at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/fft/fft.jl:449 [inlined]
   [26] * at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/fft/fft.jl:477 [inlined]
   [27] (::var"#batched#198"{Float64,Float64})(::Array{Complex{Float64},3}, ::Tuple{Int64,Int64}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/fft.jl:60
   [28] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/fft.jl:124
   [29] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [30] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/fft.jl:121
   [31] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [32] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/fft.jl:70
   [33] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [34] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/fft.jl:3
   [35] include(::String) at ./client.jl:442
   [36] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:57
   [37] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [38] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:40
   [39] include(::String) at ./client.jl:442
   [40] top-level scope at none:6
   [41] eval(::Module, ::Any) at ./boot.jl:331
   [42] exec_options(::Base.JLOptions) at ./client.jl:265
   [43] _start() at ./client.jl:491
  
Batch 2D (in 3D): Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/fft.jl:215
  Got exception outside of a @test
  InvalidIRError: compiling broadcast(CuArrays.CuKernelContext, CuDeviceArray{Float32,3,CUDAnative.AS.Global}, Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Base.Broadcast.Extruded{CuDeviceArray{Float32,3,CUDAnative.AS.Global},Tuple{Bool,Bool,Bool},Tuple{Int64,Int64,Int64}}}}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_23896)
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_22829)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::String, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{String,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},GPUArrays.var"#26#27",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::String, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] getproperty at ./Base.jl:33 [inlined]
   [14] merge at ./namedtuple.jl:253 [inlined]
   [15] cufunction(::GPUArrays.var"#26#27", ::Type{Tuple{CuArrays.CuKernelContext,CuDeviceArray{Float32,3,CUDAnative.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Base.Broadcast.Extruded{CuDeviceArray{Float32,3,CUDAnative.AS.Global},Tuple{Bool,Bool,Bool},Tuple{Int64,Int64,Int64}}}}}}; kwargs::Base.Iterators.Pairs{Symbol,String,Tuple{Symbol},NamedTuple{(:name,),Tuple{String}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:0
   [16] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [17] gpu_call(::CuArrays.CuArrayBackend, ::Function, ::Tuple{CuArray{Float32,3,Nothing},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Base.Broadcast.Extruded{CuArray{Float32,3,Nothing},Tuple{Bool,Bool,Bool},Tuple{Int64,Int64,Int64}}}}}, ::Int64; name::String) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/gpuarrays.jl:32
   [18] #gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:60 [inlined]
   [19] copyto!(::CuArray{Float32,3,Nothing}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{CuArray{Float32,3,Nothing}}}) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/broadcast.jl:63
   [20] copyto!(::CuArray{Float32,3,Nothing}, ::Base.Broadcast.Broadcasted{CuArrays.CuArrayStyle{3},Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{CuArray{Float32,3,Nothing}}}) at ./broadcast.jl:865
   [21] copy(::Base.Broadcast.Broadcasted{CuArrays.CuArrayStyle{3},Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{CuArray{Float32,3,Nothing}}}) at ./broadcast.jl:841
   [22] materialize(::Base.Broadcast.Broadcasted{CuArrays.CuArrayStyle{3},Nothing,typeof(identity),Tuple{CuArray{Float32,3,Nothing}}}) at ./broadcast.jl:821
   [23] copy at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/abstractarray.jl:173 [inlined]
   [24] unsafe_execute! at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/fft/fft.jl:412 [inlined]
   [25] mul! at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/fft/fft.jl:449 [inlined]
   [26] *(::CuArrays.CUFFT.rCuFFTPlan{Float32,-1,false,3}, ::CuArray{Float32,3,Nothing}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/fft/fft.jl:463
   [27] (::var"#batched#198"{Float64,Float64})(::Array{Float32,3}, ::Tuple{Int64,Int64}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/fft.jl:179
   [28] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/fft.jl:219
   [29] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [30] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/fft.jl:216
   [31] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [32] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/fft.jl:189
   [33] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [34] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/fft.jl:3
   [35] include(::String) at ./client.jl:442
   [36] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:57
   [37] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [38] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:40
   [39] include(::String) at ./client.jl:442
   [40] top-level scope at none:6
   [41] eval(::Module, ::Any) at ./boot.jl:331
   [42] exec_options(::Base.JLOptions) at ./client.jl:265
   [43] _start() at ./client.jl:491
  
3D: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/fft.jl:238
  Got exception outside of a @test
  InvalidIRError: compiling broadcast(CuArrays.CuKernelContext, CuDeviceArray{Float32,3,CUDAnative.AS.Global}, Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Base.Broadcast.Extruded{CuDeviceArray{Float32,3,CUDAnative.AS.Global},Tuple{Bool,Bool,Bool},Tuple{Int64,Int64,Int64}}}}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_23896)
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_22829)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::String, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{String,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},GPUArrays.var"#26#27",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::String, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] getproperty at ./Base.jl:33 [inlined]
   [14] merge at ./namedtuple.jl:253 [inlined]
   [15] cufunction(::GPUArrays.var"#26#27", ::Type{Tuple{CuArrays.CuKernelContext,CuDeviceArray{Float32,3,CUDAnative.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Base.Broadcast.Extruded{CuDeviceArray{Float32,3,CUDAnative.AS.Global},Tuple{Bool,Bool,Bool},Tuple{Int64,Int64,Int64}}}}}}; kwargs::Base.Iterators.Pairs{Symbol,String,Tuple{Symbol},NamedTuple{(:name,),Tuple{String}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:0
   [16] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [17] gpu_call(::CuArrays.CuArrayBackend, ::Function, ::Tuple{CuArray{Float32,3,Nothing},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Base.Broadcast.Extruded{CuArray{Float32,3,Nothing},Tuple{Bool,Bool,Bool},Tuple{Int64,Int64,Int64}}}}}, ::Int64; name::String) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/gpuarrays.jl:32
   [18] #gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:60 [inlined]
   [19] copyto!(::CuArray{Float32,3,Nothing}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{CuArray{Float32,3,Nothing}}}) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/broadcast.jl:63
   [20] copyto!(::CuArray{Float32,3,Nothing}, ::Base.Broadcast.Broadcasted{CuArrays.CuArrayStyle{3},Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{CuArray{Float32,3,Nothing}}}) at ./broadcast.jl:865
   [21] copy(::Base.Broadcast.Broadcasted{CuArrays.CuArrayStyle{3},Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{CuArray{Float32,3,Nothing}}}) at ./broadcast.jl:841
   [22] materialize(::Base.Broadcast.Broadcasted{CuArrays.CuArrayStyle{3},Nothing,typeof(identity),Tuple{CuArray{Float32,3,Nothing}}}) at ./broadcast.jl:821
   [23] copy at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/abstractarray.jl:173 [inlined]
   [24] unsafe_execute! at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/fft/fft.jl:412 [inlined]
   [25] mul! at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/fft/fft.jl:449 [inlined]
   [26] *(::CuArrays.CUFFT.rCuFFTPlan{Float32,-1,false,3}, ::CuArray{Float32,3,Nothing}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/fft/fft.jl:463
   [27] (::var"#out_of_place#196"{Float64,Float64})(::Array{Float32,3}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/fft.jl:153
   [28] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/fft.jl:240
   [29] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [30] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/fft.jl:239
   [31] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [32] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/fft.jl:189
   [33] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [34] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/fft.jl:3
   [35] include(::String) at ./client.jl:442
   [36] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:57
   [37] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [38] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:40
   [39] include(::String) at ./client.jl:442
   [40] top-level scope at none:6
   [41] eval(::Module, ::Any) at ./boot.jl:331
   [42] exec_options(::Base.JLOptions) at ./client.jl:265
   [43] _start() at ./client.jl:491
  
Batch 2D (in 3D): Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/fft.jl:215
  Got exception outside of a @test
  InvalidIRError: compiling broadcast(CuArrays.CuKernelContext, CuDeviceArray{Float64,3,CUDAnative.AS.Global}, Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Base.Broadcast.Extruded{CuDeviceArray{Float64,3,CUDAnative.AS.Global},Tuple{Bool,Bool,Bool},Tuple{Int64,Int64,Int64}}}}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_23896)
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_22829)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::String, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{String,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},GPUArrays.var"#26#27",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::String, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] getproperty at ./Base.jl:33 [inlined]
   [14] merge at ./namedtuple.jl:253 [inlined]
   [15] cufunction(::GPUArrays.var"#26#27", ::Type{Tuple{CuArrays.CuKernelContext,CuDeviceArray{Float64,3,CUDAnative.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Base.Broadcast.Extruded{CuDeviceArray{Float64,3,CUDAnative.AS.Global},Tuple{Bool,Bool,Bool},Tuple{Int64,Int64,Int64}}}}}}; kwargs::Base.Iterators.Pairs{Symbol,String,Tuple{Symbol},NamedTuple{(:name,),Tuple{String}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:0
   [16] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [17] gpu_call(::CuArrays.CuArrayBackend, ::Function, ::Tuple{CuArray{Float64,3,Nothing},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Base.Broadcast.Extruded{CuArray{Float64,3,Nothing},Tuple{Bool,Bool,Bool},Tuple{Int64,Int64,Int64}}}}}, ::Int64; name::String) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/gpuarrays.jl:32
   [18] #gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:60 [inlined]
   [19] copyto!(::CuArray{Float64,3,Nothing}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{CuArray{Float64,3,Nothing}}}) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/broadcast.jl:63
   [20] copyto!(::CuArray{Float64,3,Nothing}, ::Base.Broadcast.Broadcasted{CuArrays.CuArrayStyle{3},Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{CuArray{Float64,3,Nothing}}}) at ./broadcast.jl:865
   [21] copy(::Base.Broadcast.Broadcasted{CuArrays.CuArrayStyle{3},Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{CuArray{Float64,3,Nothing}}}) at ./broadcast.jl:841
   [22] materialize(::Base.Broadcast.Broadcasted{CuArrays.CuArrayStyle{3},Nothing,typeof(identity),Tuple{CuArray{Float64,3,Nothing}}}) at ./broadcast.jl:821
   [23] copy at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/abstractarray.jl:173 [inlined]
   [24] unsafe_execute! at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/fft/fft.jl:443 [inlined]
   [25] mul! at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/fft/fft.jl:449 [inlined]
   [26] *(::CuArrays.CUFFT.rCuFFTPlan{Float64,-1,false,3}, ::CuArray{Float64,3,Nothing}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/fft/fft.jl:463
   [27] (::var"#batched#198"{Float64,Float64})(::Array{Float64,3}, ::Tuple{Int64,Int64}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/fft.jl:179
   [28] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/fft.jl:219
   [29] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [30] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/fft.jl:216
   [31] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [32] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/fft.jl:189
   [33] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [34] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/fft.jl:3
   [35] include(::String) at ./client.jl:442
   [36] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:57
   [37] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [38] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:40
   [39] include(::String) at ./client.jl:442
   [40] top-level scope at none:6
   [41] eval(::Module, ::Any) at ./boot.jl:331
   [42] exec_options(::Base.JLOptions) at ./client.jl:265
   [43] _start() at ./client.jl:491
  
3D: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/fft.jl:238
  Got exception outside of a @test
  InvalidIRError: compiling broadcast(CuArrays.CuKernelContext, CuDeviceArray{Float64,3,CUDAnative.AS.Global}, Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Base.Broadcast.Extruded{CuDeviceArray{Float64,3,CUDAnative.AS.Global},Tuple{Bool,Bool,Bool},Tuple{Int64,Int64,Int64}}}}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_23896)
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_22829)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::String, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{String,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},GPUArrays.var"#26#27",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::String, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] getproperty at ./Base.jl:33 [inlined]
   [14] merge at ./namedtuple.jl:253 [inlined]
   [15] cufunction(::GPUArrays.var"#26#27", ::Type{Tuple{CuArrays.CuKernelContext,CuDeviceArray{Float64,3,CUDAnative.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Base.Broadcast.Extruded{CuDeviceArray{Float64,3,CUDAnative.AS.Global},Tuple{Bool,Bool,Bool},Tuple{Int64,Int64,Int64}}}}}}; kwargs::Base.Iterators.Pairs{Symbol,String,Tuple{Symbol},NamedTuple{(:name,),Tuple{String}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:0
   [16] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [17] gpu_call(::CuArrays.CuArrayBackend, ::Function, ::Tuple{CuArray{Float64,3,Nothing},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{Base.Broadcast.Extruded{CuArray{Float64,3,Nothing},Tuple{Bool,Bool,Bool},Tuple{Int64,Int64,Int64}}}}}, ::Int64; name::String) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/gpuarrays.jl:32
   [18] #gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:60 [inlined]
   [19] copyto!(::CuArray{Float64,3,Nothing}, ::Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{CuArray{Float64,3,Nothing}}}) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/broadcast.jl:63
   [20] copyto!(::CuArray{Float64,3,Nothing}, ::Base.Broadcast.Broadcasted{CuArrays.CuArrayStyle{3},Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{CuArray{Float64,3,Nothing}}}) at ./broadcast.jl:865
   [21] copy(::Base.Broadcast.Broadcasted{CuArrays.CuArrayStyle{3},Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(identity),Tuple{CuArray{Float64,3,Nothing}}}) at ./broadcast.jl:841
   [22] materialize(::Base.Broadcast.Broadcasted{CuArrays.CuArrayStyle{3},Nothing,typeof(identity),Tuple{CuArray{Float64,3,Nothing}}}) at ./broadcast.jl:821
   [23] copy at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/abstractarray.jl:173 [inlined]
   [24] unsafe_execute! at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/fft/fft.jl:443 [inlined]
   [25] mul! at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/fft/fft.jl:449 [inlined]
   [26] *(::CuArrays.CUFFT.rCuFFTPlan{Float64,-1,false,3}, ::CuArray{Float64,3,Nothing}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/fft/fft.jl:463
   [27] (::var"#out_of_place#196"{Float64,Float64})(::Array{Float64,3}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/fft.jl:153
   [28] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/fft.jl:240
   [29] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [30] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/fft.jl:239
   [31] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [32] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/fft.jl:189
   [33] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [34] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/fft.jl:3
   [35] include(::String) at ./client.jl:442
   [36] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:57
   [37] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [38] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:40
   [39] include(::String) at ./client.jl:442
   [40] top-level scope at none:6
   [41] eval(::Module, ::Any) at ./boot.jl:331
   [42] exec_options(::Base.JLOptions) at ./client.jl:265
   [43] _start() at ./client.jl:491
  
Cholesky (po): Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:16
  Got exception outside of a @test
  InvalidIRError: compiling broadcast(CuArrays.CuKernelContext, CuDeviceArray{Bool,2,CUDAnative.AS.Global}, Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}},typeof(==),Tuple{Base.Broadcast.Extruded{CuDeviceArray{Float32,2,CUDAnative.AS.Global},Tuple{Bool,Bool},Tuple{Int64,Int64}},Base.Broadcast.Extruded{Adjoint{Float32,CuDeviceArray{Float32,2,CUDAnative.AS.Global}},Tuple{Bool,Bool},Tuple{Int64,Int64}}}}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_23655)
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_21247)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::String, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{String,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},GPUArrays.var"#26#27",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::String, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] getproperty at ./Base.jl:33 [inlined]
   [14] merge at ./namedtuple.jl:253 [inlined]
   [15] cufunction(::GPUArrays.var"#26#27", ::Type{Tuple{CuArrays.CuKernelContext,CuDeviceArray{Bool,2,CUDAnative.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}},typeof(==),Tuple{Base.Broadcast.Extruded{CuDeviceArray{Float32,2,CUDAnative.AS.Global},Tuple{Bool,Bool},Tuple{Int64,Int64}},Base.Broadcast.Extruded{Adjoint{Float32,CuDeviceArray{Float32,2,CUDAnative.AS.Global}},Tuple{Bool,Bool},Tuple{Int64,Int64}}}}}}; kwargs::Base.Iterators.Pairs{Symbol,String,Tuple{Symbol},NamedTuple{(:name,),Tuple{String}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:0
   [16] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [17] gpu_call(::CuArrays.CuArrayBackend, ::Function, ::Tuple{CuArray{Bool,2,Nothing},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}},typeof(==),Tuple{Base.Broadcast.Extruded{CuArray{Float32,2,Nothing},Tuple{Bool,Bool},Tuple{Int64,Int64}},Base.Broadcast.Extruded{Adjoint{Float32,CuArray{Float32,2,Nothing}},Tuple{Bool,Bool},Tuple{Int64,Int64}}}}}, ::Int64; name::String) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/gpuarrays.jl:32
   [18] #gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:60 [inlined]
   [19] copyto! at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/broadcast.jl:63 [inlined]
   [20] copyto! at ./broadcast.jl:865 [inlined]
   [21] copy at ./broadcast.jl:841 [inlined]
   [22] materialize(::Base.Broadcast.Broadcasted{CuArrays.CuArrayStyle{2},Nothing,typeof(==),Tuple{CuArray{Float32,2,Nothing},Adjoint{Float32,CuArray{Float32,2,Nothing}}}}) at ./broadcast.jl:821
   [23] map(::Function, ::CuArray{Float32,2,Nothing}, ::Adjoint{Float32,CuArray{Float32,2,Nothing}}) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/broadcast.jl:91
   [24] #mapreduce#600 at ./reducedim.jl:308 [inlined]
   [25] mapreduce at ./reducedim.jl:308 [inlined]
   [26] ishermitian at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/mapreduce.jl:62 [inlined]
   [27] cholesky!(::CuArray{Float32,2,Nothing}, ::Val{false}; check::Bool) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/cholesky.jl:247
   [28] #cholesky#136 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/cholesky.jl:344 [inlined]
   [29] cholesky(::CuArray{Float32,2,Nothing}, ::Val{false}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/cholesky.jl:344
   [30] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:23
   [31] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [32] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:17
   [33] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [34] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:15
   [35] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [36] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:3
   [37] include(::String) at ./client.jl:442
   [38] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:59
   [39] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [40] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:40
   [41] include(::String) at ./client.jl:442
   [42] top-level scope at none:6
   [43] eval(::Module, ::Any) at ./boot.jl:331
   [44] exec_options(::Base.JLOptions) at ./client.jl:265
   [45] _start() at ./client.jl:491
  
ormqr!: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:96
  Got exception outside of a @test
  InvalidIRError: compiling index_kernel(CuArrays.CuKernelContext, CuDeviceArray{Float32,2,CUDAnative.AS.Global}, CuDeviceArray{Float32,2,CUDAnative.AS.Global}, Tuple{Int64,Int64}, Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_23655)
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_21247)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(GPUArrays.index_kernel),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(GPUArrays.index_kernel), ::Type{Tuple{CuArrays.CuKernelContext,CuDeviceArray{Float32,2,CUDAnative.AS.Global},CuDeviceArray{Float32,2,CUDAnative.AS.Global},Tuple{Int64,Int64},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}}}}; kwargs::Base.Iterators.Pairs{Symbol,Nothing,Tuple{Symbol},NamedTuple{(:name,),Tuple{Nothing}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [15] gpu_call(::CuArrays.CuArrayBackend, ::Function, ::Tuple{CuArray{Float32,2,Nothing},CuArray{Float32,2,Nothing},Tuple{Int64,Int64},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}}}, ::Int64; name::Nothing) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/gpuarrays.jl:32
   [16] #gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:60 [inlined]
   [17] gpu_call at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:46 [inlined]
   [18] _unsafe_getindex! at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/indexing.jl:125 [inlined]
   [19] _unsafe_getindex at ./multidimensional.jl:752 [inlined]
   [20] _getindex at ./multidimensional.jl:738 [inlined]
   [21] getindex at ./abstractarray.jl:980 [inlined]
   [22] ormqr!(::Char, ::Char, ::CuArray{Float32,2,Nothing}, ::CuArray{Float32,1,Nothing}, ::CuArray{Float32,2,Nothing}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/solver/wrappers.jl:501
   [23] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:120
   [24] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [25] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:97
   [26] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [27] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:15
   [28] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [29] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:3
   [30] include(::String) at ./client.jl:442
   [31] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:59
   [32] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [33] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:40
   [34] include(::String) at ./client.jl:442
   [35] top-level scope at none:6
   [36] eval(::Module, ::Any) at ./boot.jl:331
   [37] exec_options(::Base.JLOptions) at ./client.jl:265
   [38] _start() at ./client.jl:491
  
orgqr!: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:135
  Got exception outside of a @test
  InvalidIRError: compiling index_kernel(CuArrays.CuKernelContext, CuDeviceArray{Float32,2,CUDAnative.AS.Global}, CuDeviceArray{Float32,2,CUDAnative.AS.Global}, Tuple{Int64,Int64}, Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_23655)
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_21247)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(GPUArrays.index_kernel),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(GPUArrays.index_kernel), ::Type{Tuple{CuArrays.CuKernelContext,CuDeviceArray{Float32,2,CUDAnative.AS.Global},CuDeviceArray{Float32,2,CUDAnative.AS.Global},Tuple{Int64,Int64},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}}}}; kwargs::Base.Iterators.Pairs{Symbol,Nothing,Tuple{Symbol},NamedTuple{(:name,),Tuple{Nothing}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [15] gpu_call(::CuArrays.CuArrayBackend, ::Function, ::Tuple{CuArray{Float32,2,Nothing},CuArray{Float32,2,Nothing},Tuple{Int64,Int64},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}}}, ::Int64; name::Nothing) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/gpuarrays.jl:32
   [16] #gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:60 [inlined]
   [17] gpu_call at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:46 [inlined]
   [18] _unsafe_getindex! at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/indexing.jl:125 [inlined]
   [19] _unsafe_getindex at ./multidimensional.jl:752 [inlined]
   [20] _getindex at ./multidimensional.jl:738 [inlined]
   [21] getindex at ./abstractarray.jl:980 [inlined]
   [22] orgqr!(::CuArray{Float32,2,Nothing}, ::CuArray{Float32,1,Nothing}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/solver/wrappers.jl:532
   [23] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:139
   [24] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [25] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:136
   [26] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [27] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:15
   [28] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [29] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:3
   [30] include(::String) at ./client.jl:442
   [31] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:59
   [32] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [33] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:40
   [34] include(::String) at ./client.jl:442
   [35] top-level scope at none:6
   [36] eval(::Module, ::Any) at ./boot.jl:331
   [37] exec_options(::Base.JLOptions) at ./client.jl:265
   [38] _start() at ./client.jl:491
  
qr: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:318
  Test threw exception
  Expression: ≈(d_RR[1:n, :], d_F.R, atol = tol * norm(A))
  InvalidIRError: compiling index_kernel(CuArrays.CuKernelContext, CuDeviceArray{Float32,2,CUDAnative.AS.Global}, CuDeviceArray{Float32,2,CUDAnative.AS.Global}, Tuple{Int64,Int64}, Tuple{UnitRange{Int64},Base.Slice{Base.OneTo{Int64}}}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_23655)
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_21247)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(GPUArrays.index_kernel),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(GPUArrays.index_kernel), ::Type{Tuple{CuArrays.CuKernelContext,CuDeviceArray{Float32,2,CUDAnative.AS.Global},CuDeviceArray{Float32,2,CUDAnative.AS.Global},Tuple{Int64,Int64},Tuple{UnitRange{Int64},Base.Slice{Base.OneTo{Int64}}}}}; kwargs::Base.Iterators.Pairs{Symbol,Nothing,Tuple{Symbol},NamedTuple{(:name,),Tuple{Nothing}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [15] gpu_call(::CuArrays.CuArrayBackend, ::Function, ::Tuple{CuArray{Float32,2,Nothing},CuArray{Float32,2,Nothing},Tuple{Int64,Int64},Tuple{UnitRange{Int64},Base.Slice{Base.OneTo{Int64}}}}, ::Int64; name::Nothing) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/gpuarrays.jl:32
   [16] #gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:60 [inlined]
   [17] gpu_call at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:46 [inlined]
   [18] _unsafe_getindex! at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/indexing.jl:125 [inlined]
   [19] _unsafe_getindex at ./multidimensional.jl:752 [inlined]
   [20] _getindex at ./multidimensional.jl:738 [inlined]
   [21] getindex(::CuArray{Float32,2,Nothing}, ::UnitRange{Int64}, ::Function) at ./abstractarray.jl:980
   [22] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:318
   [23] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [24] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:312
   [25] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [26] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:15
   [27] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [28] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:3
  
qr: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:319
  Test threw exception
  Expression: norm(d_RR[n + 1:end, :]) < tol * norm(A)
  InvalidIRError: compiling index_kernel(CuArrays.CuKernelContext, CuDeviceArray{Float32,2,CUDAnative.AS.Global}, CuDeviceArray{Float32,2,CUDAnative.AS.Global}, Tuple{Int64,Int64}, Tuple{UnitRange{Int64},Base.Slice{Base.OneTo{Int64}}}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_23655)
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_21247)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(GPUArrays.index_kernel),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(GPUArrays.index_kernel), ::Type{Tuple{CuArrays.CuKernelContext,CuDeviceArray{Float32,2,CUDAnative.AS.Global},CuDeviceArray{Float32,2,CUDAnative.AS.Global},Tuple{Int64,Int64},Tuple{UnitRange{Int64},Base.Slice{Base.OneTo{Int64}}}}}; kwargs::Base.Iterators.Pairs{Symbol,Nothing,Tuple{Symbol},NamedTuple{(:name,),Tuple{Nothing}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [15] gpu_call(::CuArrays.CuArrayBackend, ::Function, ::Tuple{CuArray{Float32,2,Nothing},CuArray{Float32,2,Nothing},Tuple{Int64,Int64},Tuple{UnitRange{Int64},Base.Slice{Base.OneTo{Int64}}}}, ::Int64; name::Nothing) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/gpuarrays.jl:32
   [16] #gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:60 [inlined]
   [17] gpu_call at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:46 [inlined]
   [18] _unsafe_getindex! at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/indexing.jl:125 [inlined]
   [19] _unsafe_getindex at ./multidimensional.jl:752 [inlined]
   [20] _getindex at ./multidimensional.jl:738 [inlined]
   [21] getindex(::CuArray{Float32,2,Nothing}, ::UnitRange{Int64}, ::Function) at ./abstractarray.jl:980
   [22] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:319
   [23] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [24] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:312
   [25] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [26] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:15
   [27] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [28] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:3
  
qr: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:326
  Test threw exception
  Expression: ≈((d_F.Q)' * d_A, d_F.R, atol = tol * norm(A))
  InvalidIRError: compiling index_kernel(CuArrays.CuKernelContext, CuDeviceArray{Float32,2,CUDAnative.AS.Global}, CuDeviceArray{Float32,2,CUDAnative.AS.Global}, Tuple{Int64,Int64}, Tuple{UnitRange{Int64},UnitRange{Int64}}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_23655)
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_21247)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(GPUArrays.index_kernel),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(GPUArrays.index_kernel), ::Type{Tuple{CuArrays.CuKernelContext,CuDeviceArray{Float32,2,CUDAnative.AS.Global},CuDeviceArray{Float32,2,CUDAnative.AS.Global},Tuple{Int64,Int64},Tuple{UnitRange{Int64},UnitRange{Int64}}}}; kwargs::Base.Iterators.Pairs{Symbol,Nothing,Tuple{Symbol},NamedTuple{(:name,),Tuple{Nothing}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [15] gpu_call(::CuArrays.CuArrayBackend, ::Function, ::Tuple{CuArray{Float32,2,Nothing},CuArray{Float32,2,Nothing},Tuple{Int64,Int64},Tuple{UnitRange{Int64},UnitRange{Int64}}}, ::Int64; name::Nothing) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/gpuarrays.jl:32
   [16] #gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:60 [inlined]
   [17] gpu_call at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:46 [inlined]
   [18] _unsafe_getindex! at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/indexing.jl:125 [inlined]
   [19] _unsafe_getindex(::IndexLinear, ::CuArray{Float32,2,Nothing}, ::UnitRange{Int64}, ::UnitRange{Int64}) at ./multidimensional.jl:752
   [20] _getindex at ./multidimensional.jl:738 [inlined]
   [21] getindex(::CuArray{Float32,2,Nothing}, ::UnitRange{Int64}, ::UnitRange{Int64}) at ./abstractarray.jl:980
   [22] getproperty(::CuArrays.CUSOLVER.CuQR{Float32,CuArray{Float32,2,Nothing}}, ::Symbol) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/solver/linalg.jl:33
   [23] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:326
   [24] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [25] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:312
   [26] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [27] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:15
   [28] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [29] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:3
  
qr: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:311
  Got exception outside of a @test
  InvalidIRError: compiling index_kernel(CuArrays.CuKernelContext, CuDeviceArray{Float32,2,CUDAnative.AS.Global}, CuDeviceArray{Float32,2,CUDAnative.AS.Global}, Tuple{Int64,Int64}, Tuple{UnitRange{Int64},UnitRange{Int64}}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_23655)
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_21247)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(GPUArrays.index_kernel),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(GPUArrays.index_kernel), ::Type{Tuple{CuArrays.CuKernelContext,CuDeviceArray{Float32,2,CUDAnative.AS.Global},CuDeviceArray{Float32,2,CUDAnative.AS.Global},Tuple{Int64,Int64},Tuple{UnitRange{Int64},UnitRange{Int64}}}}; kwargs::Base.Iterators.Pairs{Symbol,Nothing,Tuple{Symbol},NamedTuple{(:name,),Tuple{Nothing}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [15] gpu_call(::CuArrays.CuArrayBackend, ::Function, ::Tuple{CuArray{Float32,2,Nothing},CuArray{Float32,2,Nothing},Tuple{Int64,Int64},Tuple{UnitRange{Int64},UnitRange{Int64}}}, ::Int64; name::Nothing) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/gpuarrays.jl:32
   [16] #gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:60 [inlined]
   [17] gpu_call at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:46 [inlined]
   [18] _unsafe_getindex! at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/indexing.jl:125 [inlined]
   [19] _unsafe_getindex(::IndexLinear, ::CuArray{Float32,2,Nothing}, ::UnitRange{Int64}, ::UnitRange{Int64}) at ./multidimensional.jl:752
   [20] _getindex at ./multidimensional.jl:738 [inlined]
   [21] getindex(::CuArray{Float32,2,Nothing}, ::UnitRange{Int64}, ::UnitRange{Int64}) at ./abstractarray.jl:980
   [22] getproperty(::CuArrays.CUSOLVER.CuQR{Float32,CuArray{Float32,2,Nothing}}, ::Symbol) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/solver/linalg.jl:33
   [23] iterate at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/solver/linalg.jl:43 [inlined]
   [24] indexed_iterate(::CuArrays.CUSOLVER.CuQR{Float32,CuArray{Float32,2,Nothing}}, ::Int64, ::Val{:R}) at ./tuple.jl:89
   [25] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:330
   [26] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [27] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:312
   [28] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [29] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:15
   [30] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [31] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:3
   [32] include(::String) at ./client.jl:442
   [33] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:59
   [34] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [35] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:40
   [36] include(::String) at ./client.jl:442
   [37] top-level scope at none:6
   [38] eval(::Module, ::Any) at ./boot.jl:331
   [39] exec_options(::Base.JLOptions) at ./client.jl:265
   [40] _start() at ./client.jl:491
  
Cholesky (po): Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:16
  Got exception outside of a @test
  InvalidIRError: compiling broadcast(CuArrays.CuKernelContext, CuDeviceArray{Bool,2,CUDAnative.AS.Global}, Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}},typeof(==),Tuple{Base.Broadcast.Extruded{CuDeviceArray{Float64,2,CUDAnative.AS.Global},Tuple{Bool,Bool},Tuple{Int64,Int64}},Base.Broadcast.Extruded{Adjoint{Float64,CuDeviceArray{Float64,2,CUDAnative.AS.Global}},Tuple{Bool,Bool},Tuple{Int64,Int64}}}}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_23655)
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_21247)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::String, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{String,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},GPUArrays.var"#26#27",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::String, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] getproperty at ./Base.jl:33 [inlined]
   [14] merge at ./namedtuple.jl:253 [inlined]
   [15] cufunction(::GPUArrays.var"#26#27", ::Type{Tuple{CuArrays.CuKernelContext,CuDeviceArray{Bool,2,CUDAnative.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}},typeof(==),Tuple{Base.Broadcast.Extruded{CuDeviceArray{Float64,2,CUDAnative.AS.Global},Tuple{Bool,Bool},Tuple{Int64,Int64}},Base.Broadcast.Extruded{Adjoint{Float64,CuDeviceArray{Float64,2,CUDAnative.AS.Global}},Tuple{Bool,Bool},Tuple{Int64,Int64}}}}}}; kwargs::Base.Iterators.Pairs{Symbol,String,Tuple{Symbol},NamedTuple{(:name,),Tuple{String}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:0
   [16] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [17] gpu_call(::CuArrays.CuArrayBackend, ::Function, ::Tuple{CuArray{Bool,2,Nothing},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}},typeof(==),Tuple{Base.Broadcast.Extruded{CuArray{Float64,2,Nothing},Tuple{Bool,Bool},Tuple{Int64,Int64}},Base.Broadcast.Extruded{Adjoint{Float64,CuArray{Float64,2,Nothing}},Tuple{Bool,Bool},Tuple{Int64,Int64}}}}}, ::Int64; name::String) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/gpuarrays.jl:32
   [18] #gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:60 [inlined]
   [19] copyto! at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/broadcast.jl:63 [inlined]
   [20] copyto! at ./broadcast.jl:865 [inlined]
   [21] copy at ./broadcast.jl:841 [inlined]
   [22] materialize(::Base.Broadcast.Broadcasted{CuArrays.CuArrayStyle{2},Nothing,typeof(==),Tuple{CuArray{Float64,2,Nothing},Adjoint{Float64,CuArray{Float64,2,Nothing}}}}) at ./broadcast.jl:821
   [23] map(::Function, ::CuArray{Float64,2,Nothing}, ::Adjoint{Float64,CuArray{Float64,2,Nothing}}) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/broadcast.jl:91
   [24] #mapreduce#600 at ./reducedim.jl:308 [inlined]
   [25] mapreduce at ./reducedim.jl:308 [inlined]
   [26] ishermitian at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/mapreduce.jl:62 [inlined]
   [27] cholesky!(::CuArray{Float64,2,Nothing}, ::Val{false}; check::Bool) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/cholesky.jl:247
   [28] #cholesky#136 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/cholesky.jl:344 [inlined]
   [29] cholesky(::CuArray{Float64,2,Nothing}, ::Val{false}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/cholesky.jl:344
   [30] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:23
   [31] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [32] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:17
   [33] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [34] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:15
   [35] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [36] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:3
   [37] include(::String) at ./client.jl:442
   [38] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:59
   [39] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [40] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:40
   [41] include(::String) at ./client.jl:442
   [42] top-level scope at none:6
   [43] eval(::Module, ::Any) at ./boot.jl:331
   [44] exec_options(::Base.JLOptions) at ./client.jl:265
   [45] _start() at ./client.jl:491
  
ormqr!: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:96
  Got exception outside of a @test
  InvalidIRError: compiling setindex_kernel!(CuArrays.CuKernelContext, CuDeviceArray{Float64,2,CUDAnative.AS.Global}, CuDeviceArray{Float64,2,CUDAnative.AS.Global}, Tuple{Int64,Int64}, Tuple{UnitRange{Int64},Base.Slice{Base.OneTo{Int64}}}, Int64) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_23655)
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_21247)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(GPUArrays.setindex_kernel!),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(GPUArrays.setindex_kernel!), ::Type{Tuple{CuArrays.CuKernelContext,CuDeviceArray{Float64,2,CUDAnative.AS.Global},CuDeviceArray{Float64,2,CUDAnative.AS.Global},Tuple{Int64,Int64},Tuple{UnitRange{Int64},Base.Slice{Base.OneTo{Int64}}},Int64}}; kwargs::Base.Iterators.Pairs{Symbol,Nothing,Tuple{Symbol},NamedTuple{(:name,),Tuple{Nothing}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [15] gpu_call(::CuArrays.CuArrayBackend, ::Function, ::Tuple{CuArray{Float64,2,Nothing},CuArray{Float64,2,Nothing},Tuple{Int64,Int64},Tuple{UnitRange{Int64},Base.Slice{Base.OneTo{Int64}}},Int64}, ::Int64; name::Nothing) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/gpuarrays.jl:32
   [16] #gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:60 [inlined]
   [17] _unsafe_setindex! at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/indexing.jl:152 [inlined]
   [18] _setindex! at ./multidimensional.jl:780 [inlined]
   [19] setindex! at ./abstractarray.jl:1073 [inlined]
   [20] _typed_vcat(::Type{Float64}, ::Tuple{CuArray{Float64,2,Nothing},CuArray{Float64,2,Nothing}}) at ./abstractarray.jl:1366
   [21] typed_vcat at ./abstractarray.jl:1372 [inlined]
   [22] vcat at ./abstractarray.jl:1350 [inlined]
   [23] ormqr!(::Char, ::Char, ::CuArray{Float64,2,Nothing}, ::CuArray{Float64,1,Nothing}, ::CuArray{Float64,2,Nothing}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/solver/wrappers.jl:474
   [24] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:102
   [25] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [26] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:97
   [27] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [28] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:15
   [29] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [30] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:3
   [31] include(::String) at ./client.jl:442
   [32] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:59
   [33] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [34] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:40
   [35] include(::String) at ./client.jl:442
   [36] top-level scope at none:6
   [37] eval(::Module, ::Any) at ./boot.jl:331
   [38] exec_options(::Base.JLOptions) at ./client.jl:265
   [39] _start() at ./client.jl:491
  
orgqr!: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:135
  Got exception outside of a @test
  InvalidIRError: compiling index_kernel(CuArrays.CuKernelContext, CuDeviceArray{Float64,2,CUDAnative.AS.Global}, CuDeviceArray{Float64,2,CUDAnative.AS.Global}, Tuple{Int64,Int64}, Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_23655)
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_21247)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(GPUArrays.index_kernel),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(GPUArrays.index_kernel), ::Type{Tuple{CuArrays.CuKernelContext,CuDeviceArray{Float64,2,CUDAnative.AS.Global},CuDeviceArray{Float64,2,CUDAnative.AS.Global},Tuple{Int64,Int64},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}}}}; kwargs::Base.Iterators.Pairs{Symbol,Nothing,Tuple{Symbol},NamedTuple{(:name,),Tuple{Nothing}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [15] gpu_call(::CuArrays.CuArrayBackend, ::Function, ::Tuple{CuArray{Float64,2,Nothing},CuArray{Float64,2,Nothing},Tuple{Int64,Int64},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}}}, ::Int64; name::Nothing) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/gpuarrays.jl:32
   [16] #gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:60 [inlined]
   [17] gpu_call at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:46 [inlined]
   [18] _unsafe_getindex! at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/indexing.jl:125 [inlined]
   [19] _unsafe_getindex at ./multidimensional.jl:752 [inlined]
   [20] _getindex at ./multidimensional.jl:738 [inlined]
   [21] getindex at ./abstractarray.jl:980 [inlined]
   [22] orgqr!(::CuArray{Float64,2,Nothing}, ::CuArray{Float64,1,Nothing}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/solver/wrappers.jl:532
   [23] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:139
   [24] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [25] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:136
   [26] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [27] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:15
   [28] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [29] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:3
   [30] include(::String) at ./client.jl:442
   [31] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:59
   [32] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [33] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:40
   [34] include(::String) at ./client.jl:442
   [35] top-level scope at none:6
   [36] eval(::Module, ::Any) at ./boot.jl:331
   [37] exec_options(::Base.JLOptions) at ./client.jl:265
   [38] _start() at ./client.jl:491
  
qr: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:318
  Test threw exception
  Expression: ≈(d_RR[1:n, :], d_F.R, atol = tol * norm(A))
  InvalidIRError: compiling index_kernel(CuArrays.CuKernelContext, CuDeviceArray{Float64,2,CUDAnative.AS.Global}, CuDeviceArray{Float64,2,CUDAnative.AS.Global}, Tuple{Int64,Int64}, Tuple{UnitRange{Int64},Base.Slice{Base.OneTo{Int64}}}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_23655)
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_21247)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(GPUArrays.index_kernel),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(GPUArrays.index_kernel), ::Type{Tuple{CuArrays.CuKernelContext,CuDeviceArray{Float64,2,CUDAnative.AS.Global},CuDeviceArray{Float64,2,CUDAnative.AS.Global},Tuple{Int64,Int64},Tuple{UnitRange{Int64},Base.Slice{Base.OneTo{Int64}}}}}; kwargs::Base.Iterators.Pairs{Symbol,Nothing,Tuple{Symbol},NamedTuple{(:name,),Tuple{Nothing}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [15] gpu_call(::CuArrays.CuArrayBackend, ::Function, ::Tuple{CuArray{Float64,2,Nothing},CuArray{Float64,2,Nothing},Tuple{Int64,Int64},Tuple{UnitRange{Int64},Base.Slice{Base.OneTo{Int64}}}}, ::Int64; name::Nothing) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/gpuarrays.jl:32
   [16] #gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:60 [inlined]
   [17] gpu_call at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:46 [inlined]
   [18] _unsafe_getindex! at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/indexing.jl:125 [inlined]
   [19] _unsafe_getindex at ./multidimensional.jl:752 [inlined]
   [20] _getindex at ./multidimensional.jl:738 [inlined]
   [21] getindex(::CuArray{Float64,2,Nothing}, ::UnitRange{Int64}, ::Function) at ./abstractarray.jl:980
   [22] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:318
   [23] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [24] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:312
   [25] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [26] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:15
   [27] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [28] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:3
  
qr: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:319
  Test threw exception
  Expression: norm(d_RR[n + 1:end, :]) < tol * norm(A)
  InvalidIRError: compiling index_kernel(CuArrays.CuKernelContext, CuDeviceArray{Float64,2,CUDAnative.AS.Global}, CuDeviceArray{Float64,2,CUDAnative.AS.Global}, Tuple{Int64,Int64}, Tuple{UnitRange{Int64},Base.Slice{Base.OneTo{Int64}}}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_23655)
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_21247)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(GPUArrays.index_kernel),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(GPUArrays.index_kernel), ::Type{Tuple{CuArrays.CuKernelContext,CuDeviceArray{Float64,2,CUDAnative.AS.Global},CuDeviceArray{Float64,2,CUDAnative.AS.Global},Tuple{Int64,Int64},Tuple{UnitRange{Int64},Base.Slice{Base.OneTo{Int64}}}}}; kwargs::Base.Iterators.Pairs{Symbol,Nothing,Tuple{Symbol},NamedTuple{(:name,),Tuple{Nothing}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [15] gpu_call(::CuArrays.CuArrayBackend, ::Function, ::Tuple{CuArray{Float64,2,Nothing},CuArray{Float64,2,Nothing},Tuple{Int64,Int64},Tuple{UnitRange{Int64},Base.Slice{Base.OneTo{Int64}}}}, ::Int64; name::Nothing) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/gpuarrays.jl:32
   [16] #gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:60 [inlined]
   [17] gpu_call at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:46 [inlined]
   [18] _unsafe_getindex! at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/indexing.jl:125 [inlined]
   [19] _unsafe_getindex at ./multidimensional.jl:752 [inlined]
   [20] _getindex at ./multidimensional.jl:738 [inlined]
   [21] getindex(::CuArray{Float64,2,Nothing}, ::UnitRange{Int64}, ::Function) at ./abstractarray.jl:980
   [22] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:319
   [23] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [24] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:312
   [25] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [26] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:15
   [27] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [28] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:3
  
qr: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:326
  Test threw exception
  Expression: ≈((d_F.Q)' * d_A, d_F.R, atol = tol * norm(A))
  InvalidIRError: compiling index_kernel(CuArrays.CuKernelContext, CuDeviceArray{Float64,2,CUDAnative.AS.Global}, CuDeviceArray{Float64,2,CUDAnative.AS.Global}, Tuple{Int64,Int64}, Tuple{UnitRange{Int64},UnitRange{Int64}}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_23655)
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_21247)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(GPUArrays.index_kernel),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(GPUArrays.index_kernel), ::Type{Tuple{CuArrays.CuKernelContext,CuDeviceArray{Float64,2,CUDAnative.AS.Global},CuDeviceArray{Float64,2,CUDAnative.AS.Global},Tuple{Int64,Int64},Tuple{UnitRange{Int64},UnitRange{Int64}}}}; kwargs::Base.Iterators.Pairs{Symbol,Nothing,Tuple{Symbol},NamedTuple{(:name,),Tuple{Nothing}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [15] gpu_call(::CuArrays.CuArrayBackend, ::Function, ::Tuple{CuArray{Float64,2,Nothing},CuArray{Float64,2,Nothing},Tuple{Int64,Int64},Tuple{UnitRange{Int64},UnitRange{Int64}}}, ::Int64; name::Nothing) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/gpuarrays.jl:32
   [16] #gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:60 [inlined]
   [17] gpu_call at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:46 [inlined]
   [18] _unsafe_getindex! at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/indexing.jl:125 [inlined]
   [19] _unsafe_getindex(::IndexLinear, ::CuArray{Float64,2,Nothing}, ::UnitRange{Int64}, ::UnitRange{Int64}) at ./multidimensional.jl:752
   [20] _getindex at ./multidimensional.jl:738 [inlined]
   [21] getindex(::CuArray{Float64,2,Nothing}, ::UnitRange{Int64}, ::UnitRange{Int64}) at ./abstractarray.jl:980
   [22] getproperty(::CuArrays.CUSOLVER.CuQR{Float64,CuArray{Float64,2,Nothing}}, ::Symbol) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/solver/linalg.jl:33
   [23] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:326
   [24] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [25] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:312
   [26] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [27] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:15
   [28] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [29] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:3
  
qr: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:311
  Got exception outside of a @test
  InvalidIRError: compiling index_kernel(CuArrays.CuKernelContext, CuDeviceArray{Float64,2,CUDAnative.AS.Global}, CuDeviceArray{Float64,2,CUDAnative.AS.Global}, Tuple{Int64,Int64}, Tuple{UnitRange{Int64},UnitRange{Int64}}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_23655)
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_21247)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(GPUArrays.index_kernel),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(GPUArrays.index_kernel), ::Type{Tuple{CuArrays.CuKernelContext,CuDeviceArray{Float64,2,CUDAnative.AS.Global},CuDeviceArray{Float64,2,CUDAnative.AS.Global},Tuple{Int64,Int64},Tuple{UnitRange{Int64},UnitRange{Int64}}}}; kwargs::Base.Iterators.Pairs{Symbol,Nothing,Tuple{Symbol},NamedTuple{(:name,),Tuple{Nothing}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [15] gpu_call(::CuArrays.CuArrayBackend, ::Function, ::Tuple{CuArray{Float64,2,Nothing},CuArray{Float64,2,Nothing},Tuple{Int64,Int64},Tuple{UnitRange{Int64},UnitRange{Int64}}}, ::Int64; name::Nothing) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/gpuarrays.jl:32
   [16] #gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:60 [inlined]
   [17] gpu_call at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:46 [inlined]
   [18] _unsafe_getindex! at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/indexing.jl:125 [inlined]
   [19] _unsafe_getindex(::IndexLinear, ::CuArray{Float64,2,Nothing}, ::UnitRange{Int64}, ::UnitRange{Int64}) at ./multidimensional.jl:752
   [20] _getindex at ./multidimensional.jl:738 [inlined]
   [21] getindex(::CuArray{Float64,2,Nothing}, ::UnitRange{Int64}, ::UnitRange{Int64}) at ./abstractarray.jl:980
   [22] getproperty(::CuArrays.CUSOLVER.CuQR{Float64,CuArray{Float64,2,Nothing}}, ::Symbol) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/solver/linalg.jl:33
   [23] iterate at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/solver/linalg.jl:43 [inlined]
   [24] indexed_iterate(::CuArrays.CUSOLVER.CuQR{Float64,CuArray{Float64,2,Nothing}}, ::Int64, ::Val{:R}) at ./tuple.jl:89
   [25] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:330
   [26] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [27] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:312
   [28] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [29] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:15
   [30] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [31] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:3
   [32] include(::String) at ./client.jl:442
   [33] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:59
   [34] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [35] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:40
   [36] include(::String) at ./client.jl:442
   [37] top-level scope at none:6
   [38] eval(::Module, ::Any) at ./boot.jl:331
   [39] exec_options(::Base.JLOptions) at ./client.jl:265
   [40] _start() at ./client.jl:491
  
Cholesky (po): Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:16
  Got exception outside of a @test
  InvalidIRError: compiling broadcast(CuArrays.CuKernelContext, CuDeviceArray{Bool,2,CUDAnative.AS.Global}, Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}},typeof(==),Tuple{Base.Broadcast.Extruded{CuDeviceArray{Complex{Float32},2,CUDAnative.AS.Global},Tuple{Bool,Bool},Tuple{Int64,Int64}},Base.Broadcast.Extruded{Adjoint{Complex{Float32},CuDeviceArray{Complex{Float32},2,CUDAnative.AS.Global}},Tuple{Bool,Bool},Tuple{Int64,Int64}}}}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_23655)
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_21247)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::String, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{String,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},GPUArrays.var"#26#27",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::String, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] getproperty at ./Base.jl:33 [inlined]
   [14] merge at ./namedtuple.jl:253 [inlined]
   [15] cufunction(::GPUArrays.var"#26#27", ::Type{Tuple{CuArrays.CuKernelContext,CuDeviceArray{Bool,2,CUDAnative.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}},typeof(==),Tuple{Base.Broadcast.Extruded{CuDeviceArray{Complex{Float32},2,CUDAnative.AS.Global},Tuple{Bool,Bool},Tuple{Int64,Int64}},Base.Broadcast.Extruded{Adjoint{Complex{Float32},CuDeviceArray{Complex{Float32},2,CUDAnative.AS.Global}},Tuple{Bool,Bool},Tuple{Int64,Int64}}}}}}; kwargs::Base.Iterators.Pairs{Symbol,String,Tuple{Symbol},NamedTuple{(:name,),Tuple{String}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:0
   [16] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [17] gpu_call(::CuArrays.CuArrayBackend, ::Function, ::Tuple{CuArray{Bool,2,Nothing},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}},typeof(==),Tuple{Base.Broadcast.Extruded{CuArray{Complex{Float32},2,Nothing},Tuple{Bool,Bool},Tuple{Int64,Int64}},Base.Broadcast.Extruded{Adjoint{Complex{Float32},CuArray{Complex{Float32},2,Nothing}},Tuple{Bool,Bool},Tuple{Int64,Int64}}}}}, ::Int64; name::String) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/gpuarrays.jl:32
   [18] #gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:60 [inlined]
   [19] copyto! at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/broadcast.jl:63 [inlined]
   [20] copyto! at ./broadcast.jl:865 [inlined]
   [21] copy at ./broadcast.jl:841 [inlined]
   [22] materialize(::Base.Broadcast.Broadcasted{CuArrays.CuArrayStyle{2},Nothing,typeof(==),Tuple{CuArray{Complex{Float32},2,Nothing},Adjoint{Complex{Float32},CuArray{Complex{Float32},2,Nothing}}}}) at ./broadcast.jl:821
   [23] map(::Function, ::CuArray{Complex{Float32},2,Nothing}, ::Adjoint{Complex{Float32},CuArray{Complex{Float32},2,Nothing}}) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/broadcast.jl:91
   [24] #mapreduce#600 at ./reducedim.jl:308 [inlined]
   [25] mapreduce at ./reducedim.jl:308 [inlined]
   [26] ishermitian at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/mapreduce.jl:62 [inlined]
   [27] cholesky!(::CuArray{Complex{Float32},2,Nothing}, ::Val{false}; check::Bool) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/cholesky.jl:247
   [28] #cholesky#136 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/cholesky.jl:344 [inlined]
   [29] cholesky(::CuArray{Complex{Float32},2,Nothing}, ::Val{false}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/cholesky.jl:344
   [30] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:23
   [31] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [32] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:17
   [33] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [34] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:15
   [35] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [36] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:3
   [37] include(::String) at ./client.jl:442
   [38] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:59
   [39] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [40] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:40
   [41] include(::String) at ./client.jl:442
   [42] top-level scope at none:6
   [43] eval(::Module, ::Any) at ./boot.jl:331
   [44] exec_options(::Base.JLOptions) at ./client.jl:265
   [45] _start() at ./client.jl:491
  
ormqr!: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:96
  Got exception outside of a @test
  InvalidIRError: compiling setindex_kernel!(CuArrays.CuKernelContext, CuDeviceArray{Complex{Float32},2,CUDAnative.AS.Global}, CuDeviceArray{Complex{Float32},2,CUDAnative.AS.Global}, Tuple{Int64,Int64}, Tuple{UnitRange{Int64},Base.Slice{Base.OneTo{Int64}}}, Int64) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_23655)
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_21247)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(GPUArrays.setindex_kernel!),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(GPUArrays.setindex_kernel!), ::Type{Tuple{CuArrays.CuKernelContext,CuDeviceArray{Complex{Float32},2,CUDAnative.AS.Global},CuDeviceArray{Complex{Float32},2,CUDAnative.AS.Global},Tuple{Int64,Int64},Tuple{UnitRange{Int64},Base.Slice{Base.OneTo{Int64}}},Int64}}; kwargs::Base.Iterators.Pairs{Symbol,Nothing,Tuple{Symbol},NamedTuple{(:name,),Tuple{Nothing}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [15] gpu_call(::CuArrays.CuArrayBackend, ::Function, ::Tuple{CuArray{Complex{Float32},2,Nothing},CuArray{Complex{Float32},2,Nothing},Tuple{Int64,Int64},Tuple{UnitRange{Int64},Base.Slice{Base.OneTo{Int64}}},Int64}, ::Int64; name::Nothing) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/gpuarrays.jl:32
   [16] #gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:60 [inlined]
   [17] _unsafe_setindex! at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/indexing.jl:152 [inlined]
   [18] _setindex! at ./multidimensional.jl:780 [inlined]
   [19] setindex! at ./abstractarray.jl:1073 [inlined]
   [20] _typed_vcat(::Type{Complex{Float32}}, ::Tuple{CuArray{Complex{Float32},2,Nothing},CuArray{Complex{Float32},2,Nothing}}) at ./abstractarray.jl:1366
   [21] typed_vcat at ./abstractarray.jl:1372 [inlined]
   [22] vcat at ./abstractarray.jl:1350 [inlined]
   [23] ormqr!(::Char, ::Char, ::CuArray{Complex{Float32},2,Nothing}, ::CuArray{Complex{Float32},1,Nothing}, ::CuArray{Complex{Float32},2,Nothing}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/solver/wrappers.jl:474
   [24] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:102
   [25] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [26] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:97
   [27] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [28] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:15
   [29] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [30] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:3
   [31] include(::String) at ./client.jl:442
   [32] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:59
   [33] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [34] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:40
   [35] include(::String) at ./client.jl:442
   [36] top-level scope at none:6
   [37] eval(::Module, ::Any) at ./boot.jl:331
   [38] exec_options(::Base.JLOptions) at ./client.jl:265
   [39] _start() at ./client.jl:491
  
orgqr!: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:135
  Got exception outside of a @test
  InvalidIRError: compiling index_kernel(CuArrays.CuKernelContext, CuDeviceArray{Complex{Float32},2,CUDAnative.AS.Global}, CuDeviceArray{Complex{Float32},2,CUDAnative.AS.Global}, Tuple{Int64,Int64}, Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_23655)
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_21247)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(GPUArrays.index_kernel),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(GPUArrays.index_kernel), ::Type{Tuple{CuArrays.CuKernelContext,CuDeviceArray{Complex{Float32},2,CUDAnative.AS.Global},CuDeviceArray{Complex{Float32},2,CUDAnative.AS.Global},Tuple{Int64,Int64},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}}}}; kwargs::Base.Iterators.Pairs{Symbol,Nothing,Tuple{Symbol},NamedTuple{(:name,),Tuple{Nothing}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [15] gpu_call(::CuArrays.CuArrayBackend, ::Function, ::Tuple{CuArray{Complex{Float32},2,Nothing},CuArray{Complex{Float32},2,Nothing},Tuple{Int64,Int64},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}}}, ::Int64; name::Nothing) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/gpuarrays.jl:32
   [16] #gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:60 [inlined]
   [17] gpu_call at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:46 [inlined]
   [18] _unsafe_getindex! at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/indexing.jl:125 [inlined]
   [19] _unsafe_getindex at ./multidimensional.jl:752 [inlined]
   [20] _getindex at ./multidimensional.jl:738 [inlined]
   [21] getindex at ./abstractarray.jl:980 [inlined]
   [22] orgqr!(::CuArray{Complex{Float32},2,Nothing}, ::CuArray{Complex{Float32},1,Nothing}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/solver/wrappers.jl:532
   [23] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:139
   [24] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [25] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:136
   [26] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [27] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:15
   [28] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [29] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:3
   [30] include(::String) at ./client.jl:442
   [31] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:59
   [32] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [33] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:40
   [34] include(::String) at ./client.jl:442
   [35] top-level scope at none:6
   [36] eval(::Module, ::Any) at ./boot.jl:331
   [37] exec_options(::Base.JLOptions) at ./client.jl:265
   [38] _start() at ./client.jl:491
  
qr: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:318
  Test threw exception
  Expression: ≈(d_RR[1:n, :], d_F.R, atol = tol * norm(A))
  InvalidIRError: compiling index_kernel(CuArrays.CuKernelContext, CuDeviceArray{Complex{Float32},2,CUDAnative.AS.Global}, CuDeviceArray{Complex{Float32},2,CUDAnative.AS.Global}, Tuple{Int64,Int64}, Tuple{UnitRange{Int64},Base.Slice{Base.OneTo{Int64}}}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_23655)
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_21247)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(GPUArrays.index_kernel),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(GPUArrays.index_kernel), ::Type{Tuple{CuArrays.CuKernelContext,CuDeviceArray{Complex{Float32},2,CUDAnative.AS.Global},CuDeviceArray{Complex{Float32},2,CUDAnative.AS.Global},Tuple{Int64,Int64},Tuple{UnitRange{Int64},Base.Slice{Base.OneTo{Int64}}}}}; kwargs::Base.Iterators.Pairs{Symbol,Nothing,Tuple{Symbol},NamedTuple{(:name,),Tuple{Nothing}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [15] gpu_call(::CuArrays.CuArrayBackend, ::Function, ::Tuple{CuArray{Complex{Float32},2,Nothing},CuArray{Complex{Float32},2,Nothing},Tuple{Int64,Int64},Tuple{UnitRange{Int64},Base.Slice{Base.OneTo{Int64}}}}, ::Int64; name::Nothing) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/gpuarrays.jl:32
   [16] #gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:60 [inlined]
   [17] gpu_call at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:46 [inlined]
   [18] _unsafe_getindex! at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/indexing.jl:125 [inlined]
   [19] _unsafe_getindex at ./multidimensional.jl:752 [inlined]
   [20] _getindex at ./multidimensional.jl:738 [inlined]
   [21] getindex(::CuArray{Complex{Float32},2,Nothing}, ::UnitRange{Int64}, ::Function) at ./abstractarray.jl:980
   [22] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:318
   [23] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [24] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:312
   [25] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [26] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:15
   [27] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [28] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:3
  
qr: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:319
  Test threw exception
  Expression: norm(d_RR[n + 1:end, :]) < tol * norm(A)
  InvalidIRError: compiling index_kernel(CuArrays.CuKernelContext, CuDeviceArray{Complex{Float32},2,CUDAnative.AS.Global}, CuDeviceArray{Complex{Float32},2,CUDAnative.AS.Global}, Tuple{Int64,Int64}, Tuple{UnitRange{Int64},Base.Slice{Base.OneTo{Int64}}}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_23655)
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_21247)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(GPUArrays.index_kernel),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(GPUArrays.index_kernel), ::Type{Tuple{CuArrays.CuKernelContext,CuDeviceArray{Complex{Float32},2,CUDAnative.AS.Global},CuDeviceArray{Complex{Float32},2,CUDAnative.AS.Global},Tuple{Int64,Int64},Tuple{UnitRange{Int64},Base.Slice{Base.OneTo{Int64}}}}}; kwargs::Base.Iterators.Pairs{Symbol,Nothing,Tuple{Symbol},NamedTuple{(:name,),Tuple{Nothing}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [15] gpu_call(::CuArrays.CuArrayBackend, ::Function, ::Tuple{CuArray{Complex{Float32},2,Nothing},CuArray{Complex{Float32},2,Nothing},Tuple{Int64,Int64},Tuple{UnitRange{Int64},Base.Slice{Base.OneTo{Int64}}}}, ::Int64; name::Nothing) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/gpuarrays.jl:32
   [16] #gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:60 [inlined]
   [17] gpu_call at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:46 [inlined]
   [18] _unsafe_getindex! at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/indexing.jl:125 [inlined]
   [19] _unsafe_getindex at ./multidimensional.jl:752 [inlined]
   [20] _getindex at ./multidimensional.jl:738 [inlined]
   [21] getindex(::CuArray{Complex{Float32},2,Nothing}, ::UnitRange{Int64}, ::Function) at ./abstractarray.jl:980
   [22] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:319
   [23] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [24] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:312
   [25] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [26] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:15
   [27] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [28] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:3
  
qr: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:322
  Test threw exception
  Expression: ≈(det(d_F.Q), det(collect(d_F.Q * CuMatrix{elty}(I, size(d_F.Q)))), atol = tol * norm(A))
  InvalidIRError: compiling mapreduce_grid(CuArrays.CUSOLVER.var"#741#742", typeof(Base.mul_prod), CuDeviceArray{Complex{Float32},1,CUDAnative.AS.Global}, CuDeviceArray{Complex{Float32},1,CUDAnative.AS.Global}, Complex{Float32}, CartesianIndices{1,Tuple{Base.OneTo{Int64}}}, CartesianIndices{1,Tuple{Base.OneTo{Int64}}}, Val{true}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_hypot_2637)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CuArrays.mapreduce_grid),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(CuArrays.mapreduce_grid), ::Type{Tuple{CuArrays.CUSOLVER.var"#741#742",typeof(Base.mul_prod),CuDeviceArray{Complex{Float32},1,CUDAnative.AS.Global},CuDeviceArray{Complex{Float32},1,CUDAnative.AS.Global},Complex{Float32},CartesianIndices{1,Tuple{Base.OneTo{Int64}}},CartesianIndices{1,Tuple{Base.OneTo{Int64}}},Val{true}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [15] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [16] macro expansion at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/mapreduce.jl:161 [inlined]
   [17] mapreducedim!(::Function, ::Function, ::CuArray{Complex{Float32},1,Nothing}, ::CuArray{Complex{Float32},1,Nothing}, ::Complex{Float32}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/nvtx/highlevel.jl:83
   [18] mapreduce(::Function, ::Function, ::CuArray{Complex{Float32},1,Nothing}; dims::Function, init::Nothing) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/mapreduce.jl:38
   [19] mapreduce at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/mapreduce.jl:24 [inlined]
   [20] _prod(::Function, ::CuArray{Complex{Float32},1,Nothing}, ::Colon) at ./reducedim.jl:657
   [21] #prod#605 at ./reducedim.jl:653 [inlined]
   [22] prod at ./reducedim.jl:653 [inlined]
   [23] det(::CuArrays.CUSOLVER.CuQRPackedQ{Complex{Float32},CuArray{Complex{Float32},2,Nothing}}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/solver/linalg.jl:72
   [24] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:322
   [25] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [26] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:312
   [27] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [28] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:15
   [29] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [30] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:3
  
qr: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:326
  Test threw exception
  Expression: ≈((d_F.Q)' * d_A, d_F.R, atol = tol * norm(A))
  InvalidIRError: compiling index_kernel(CuArrays.CuKernelContext, CuDeviceArray{Complex{Float32},2,CUDAnative.AS.Global}, CuDeviceArray{Complex{Float32},2,CUDAnative.AS.Global}, Tuple{Int64,Int64}, Tuple{UnitRange{Int64},UnitRange{Int64}}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_23655)
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_21247)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(GPUArrays.index_kernel),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(GPUArrays.index_kernel), ::Type{Tuple{CuArrays.CuKernelContext,CuDeviceArray{Complex{Float32},2,CUDAnative.AS.Global},CuDeviceArray{Complex{Float32},2,CUDAnative.AS.Global},Tuple{Int64,Int64},Tuple{UnitRange{Int64},UnitRange{Int64}}}}; kwargs::Base.Iterators.Pairs{Symbol,Nothing,Tuple{Symbol},NamedTuple{(:name,),Tuple{Nothing}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [15] gpu_call(::CuArrays.CuArrayBackend, ::Function, ::Tuple{CuArray{Complex{Float32},2,Nothing},CuArray{Complex{Float32},2,Nothing},Tuple{Int64,Int64},Tuple{UnitRange{Int64},UnitRange{Int64}}}, ::Int64; name::Nothing) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/gpuarrays.jl:32
   [16] #gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:60 [inlined]
   [17] gpu_call at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:46 [inlined]
   [18] _unsafe_getindex! at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/indexing.jl:125 [inlined]
   [19] _unsafe_getindex(::IndexLinear, ::CuArray{Complex{Float32},2,Nothing}, ::UnitRange{Int64}, ::UnitRange{Int64}) at ./multidimensional.jl:752
   [20] _getindex at ./multidimensional.jl:738 [inlined]
   [21] getindex(::CuArray{Complex{Float32},2,Nothing}, ::UnitRange{Int64}, ::UnitRange{Int64}) at ./abstractarray.jl:980
   [22] getproperty(::CuArrays.CUSOLVER.CuQR{Complex{Float32},CuArray{Complex{Float32},2,Nothing}}, ::Symbol) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/solver/linalg.jl:33
   [23] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:326
   [24] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [25] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:312
   [26] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [27] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:15
   [28] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [29] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:3
  
qr: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:327
  Test threw exception
  Expression: ≈(det(d_F.Q), det(collect(d_F.Q * CuMatrix{elty}(I, size(d_F.Q)))), atol = tol * norm(A))
  InvalidIRError: compiling mapreduce_grid(CuArrays.CUSOLVER.var"#741#742", typeof(Base.mul_prod), CuDeviceArray{Complex{Float32},1,CUDAnative.AS.Global}, CuDeviceArray{Complex{Float32},1,CUDAnative.AS.Global}, Complex{Float32}, CartesianIndices{1,Tuple{Base.OneTo{Int64}}}, CartesianIndices{1,Tuple{Base.OneTo{Int64}}}, Val{true}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_hypot_2637)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CuArrays.mapreduce_grid),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(CuArrays.mapreduce_grid), ::Type{Tuple{CuArrays.CUSOLVER.var"#741#742",typeof(Base.mul_prod),CuDeviceArray{Complex{Float32},1,CUDAnative.AS.Global},CuDeviceArray{Complex{Float32},1,CUDAnative.AS.Global},Complex{Float32},CartesianIndices{1,Tuple{Base.OneTo{Int64}}},CartesianIndices{1,Tuple{Base.OneTo{Int64}}},Val{true}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [15] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [16] macro expansion at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/mapreduce.jl:161 [inlined]
   [17] mapreducedim!(::Function, ::Function, ::CuArray{Complex{Float32},1,Nothing}, ::CuArray{Complex{Float32},1,Nothing}, ::Complex{Float32}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/nvtx/highlevel.jl:83
   [18] mapreduce(::Function, ::Function, ::CuArray{Complex{Float32},1,Nothing}; dims::Function, init::Nothing) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/mapreduce.jl:38
   [19] mapreduce at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/mapreduce.jl:24 [inlined]
   [20] _prod(::Function, ::CuArray{Complex{Float32},1,Nothing}, ::Colon) at ./reducedim.jl:657
   [21] #prod#605 at ./reducedim.jl:653 [inlined]
   [22] prod at ./reducedim.jl:653 [inlined]
   [23] det(::CuArrays.CUSOLVER.CuQRPackedQ{Complex{Float32},CuArray{Complex{Float32},2,Nothing}}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/solver/linalg.jl:72
   [24] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:327
   [25] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [26] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:312
   [27] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [28] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:15
   [29] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [30] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:3
  
qr: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:311
  Got exception outside of a @test
  InvalidIRError: compiling index_kernel(CuArrays.CuKernelContext, CuDeviceArray{Complex{Float32},2,CUDAnative.AS.Global}, CuDeviceArray{Complex{Float32},2,CUDAnative.AS.Global}, Tuple{Int64,Int64}, Tuple{UnitRange{Int64},UnitRange{Int64}}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_23655)
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_21247)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(GPUArrays.index_kernel),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(GPUArrays.index_kernel), ::Type{Tuple{CuArrays.CuKernelContext,CuDeviceArray{Complex{Float32},2,CUDAnative.AS.Global},CuDeviceArray{Complex{Float32},2,CUDAnative.AS.Global},Tuple{Int64,Int64},Tuple{UnitRange{Int64},UnitRange{Int64}}}}; kwargs::Base.Iterators.Pairs{Symbol,Nothing,Tuple{Symbol},NamedTuple{(:name,),Tuple{Nothing}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [15] gpu_call(::CuArrays.CuArrayBackend, ::Function, ::Tuple{CuArray{Complex{Float32},2,Nothing},CuArray{Complex{Float32},2,Nothing},Tuple{Int64,Int64},Tuple{UnitRange{Int64},UnitRange{Int64}}}, ::Int64; name::Nothing) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/gpuarrays.jl:32
   [16] #gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:60 [inlined]
   [17] gpu_call at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:46 [inlined]
   [18] _unsafe_getindex! at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/indexing.jl:125 [inlined]
   [19] _unsafe_getindex(::IndexLinear, ::CuArray{Complex{Float32},2,Nothing}, ::UnitRange{Int64}, ::UnitRange{Int64}) at ./multidimensional.jl:752
   [20] _getindex at ./multidimensional.jl:738 [inlined]
   [21] getindex(::CuArray{Complex{Float32},2,Nothing}, ::UnitRange{Int64}, ::UnitRange{Int64}) at ./abstractarray.jl:980
   [22] getproperty(::CuArrays.CUSOLVER.CuQR{Complex{Float32},CuArray{Complex{Float32},2,Nothing}}, ::Symbol) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/solver/linalg.jl:33
   [23] iterate at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/solver/linalg.jl:43 [inlined]
   [24] indexed_iterate(::CuArrays.CUSOLVER.CuQR{Complex{Float32},CuArray{Complex{Float32},2,Nothing}}, ::Int64, ::Val{:R}) at ./tuple.jl:89
   [25] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:330
   [26] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [27] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:312
   [28] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [29] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:15
   [30] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [31] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:3
   [32] include(::String) at ./client.jl:442
   [33] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:59
   [34] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [35] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:40
   [36] include(::String) at ./client.jl:442
   [37] top-level scope at none:6
   [38] eval(::Module, ::Any) at ./boot.jl:331
   [39] exec_options(::Base.JLOptions) at ./client.jl:265
   [40] _start() at ./client.jl:491
  
Cholesky (po): Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:16
  Got exception outside of a @test
  InvalidIRError: compiling broadcast(CuArrays.CuKernelContext, CuDeviceArray{Bool,2,CUDAnative.AS.Global}, Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}},typeof(==),Tuple{Base.Broadcast.Extruded{CuDeviceArray{Complex{Float64},2,CUDAnative.AS.Global},Tuple{Bool,Bool},Tuple{Int64,Int64}},Base.Broadcast.Extruded{Adjoint{Complex{Float64},CuDeviceArray{Complex{Float64},2,CUDAnative.AS.Global}},Tuple{Bool,Bool},Tuple{Int64,Int64}}}}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_23655)
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_21247)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::String, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{String,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},GPUArrays.var"#26#27",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::String, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] getproperty at ./Base.jl:33 [inlined]
   [14] merge at ./namedtuple.jl:253 [inlined]
   [15] cufunction(::GPUArrays.var"#26#27", ::Type{Tuple{CuArrays.CuKernelContext,CuDeviceArray{Bool,2,CUDAnative.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}},typeof(==),Tuple{Base.Broadcast.Extruded{CuDeviceArray{Complex{Float64},2,CUDAnative.AS.Global},Tuple{Bool,Bool},Tuple{Int64,Int64}},Base.Broadcast.Extruded{Adjoint{Complex{Float64},CuDeviceArray{Complex{Float64},2,CUDAnative.AS.Global}},Tuple{Bool,Bool},Tuple{Int64,Int64}}}}}}; kwargs::Base.Iterators.Pairs{Symbol,String,Tuple{Symbol},NamedTuple{(:name,),Tuple{String}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:0
   [16] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [17] gpu_call(::CuArrays.CuArrayBackend, ::Function, ::Tuple{CuArray{Bool,2,Nothing},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}},typeof(==),Tuple{Base.Broadcast.Extruded{CuArray{Complex{Float64},2,Nothing},Tuple{Bool,Bool},Tuple{Int64,Int64}},Base.Broadcast.Extruded{Adjoint{Complex{Float64},CuArray{Complex{Float64},2,Nothing}},Tuple{Bool,Bool},Tuple{Int64,Int64}}}}}, ::Int64; name::String) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/gpuarrays.jl:32
   [18] #gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:60 [inlined]
   [19] copyto! at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/broadcast.jl:63 [inlined]
   [20] copyto! at ./broadcast.jl:865 [inlined]
   [21] copy at ./broadcast.jl:841 [inlined]
   [22] materialize(::Base.Broadcast.Broadcasted{CuArrays.CuArrayStyle{2},Nothing,typeof(==),Tuple{CuArray{Complex{Float64},2,Nothing},Adjoint{Complex{Float64},CuArray{Complex{Float64},2,Nothing}}}}) at ./broadcast.jl:821
   [23] map(::Function, ::CuArray{Complex{Float64},2,Nothing}, ::Adjoint{Complex{Float64},CuArray{Complex{Float64},2,Nothing}}) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/broadcast.jl:91
   [24] #mapreduce#600 at ./reducedim.jl:308 [inlined]
   [25] mapreduce at ./reducedim.jl:308 [inlined]
   [26] ishermitian at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/mapreduce.jl:62 [inlined]
   [27] cholesky!(::CuArray{Complex{Float64},2,Nothing}, ::Val{false}; check::Bool) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/cholesky.jl:247
   [28] #cholesky#136 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/cholesky.jl:344 [inlined]
   [29] cholesky(::CuArray{Complex{Float64},2,Nothing}, ::Val{false}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/cholesky.jl:344
   [30] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:23
   [31] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [32] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:17
   [33] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [34] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:15
   [35] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [36] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:3
   [37] include(::String) at ./client.jl:442
   [38] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:59
   [39] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [40] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:40
   [41] include(::String) at ./client.jl:442
   [42] top-level scope at none:6
   [43] eval(::Module, ::Any) at ./boot.jl:331
   [44] exec_options(::Base.JLOptions) at ./client.jl:265
   [45] _start() at ./client.jl:491
  
ormqr!: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:96
  Got exception outside of a @test
  InvalidIRError: compiling setindex_kernel!(CuArrays.CuKernelContext, CuDeviceArray{Complex{Float64},2,CUDAnative.AS.Global}, CuDeviceArray{Complex{Float64},2,CUDAnative.AS.Global}, Tuple{Int64,Int64}, Tuple{UnitRange{Int64},Base.Slice{Base.OneTo{Int64}}}, Int64) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_23655)
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_21247)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(GPUArrays.setindex_kernel!),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(GPUArrays.setindex_kernel!), ::Type{Tuple{CuArrays.CuKernelContext,CuDeviceArray{Complex{Float64},2,CUDAnative.AS.Global},CuDeviceArray{Complex{Float64},2,CUDAnative.AS.Global},Tuple{Int64,Int64},Tuple{UnitRange{Int64},Base.Slice{Base.OneTo{Int64}}},Int64}}; kwargs::Base.Iterators.Pairs{Symbol,Nothing,Tuple{Symbol},NamedTuple{(:name,),Tuple{Nothing}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [15] gpu_call(::CuArrays.CuArrayBackend, ::Function, ::Tuple{CuArray{Complex{Float64},2,Nothing},CuArray{Complex{Float64},2,Nothing},Tuple{Int64,Int64},Tuple{UnitRange{Int64},Base.Slice{Base.OneTo{Int64}}},Int64}, ::Int64; name::Nothing) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/gpuarrays.jl:32
   [16] #gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:60 [inlined]
   [17] _unsafe_setindex! at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/indexing.jl:152 [inlined]
   [18] _setindex! at ./multidimensional.jl:780 [inlined]
   [19] setindex! at ./abstractarray.jl:1073 [inlined]
   [20] _typed_vcat(::Type{Complex{Float64}}, ::Tuple{CuArray{Complex{Float64},2,Nothing},CuArray{Complex{Float64},2,Nothing}}) at ./abstractarray.jl:1366
   [21] typed_vcat at ./abstractarray.jl:1372 [inlined]
   [22] vcat at ./abstractarray.jl:1350 [inlined]
   [23] ormqr!(::Char, ::Char, ::CuArray{Complex{Float64},2,Nothing}, ::CuArray{Complex{Float64},1,Nothing}, ::CuArray{Complex{Float64},2,Nothing}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/solver/wrappers.jl:474
   [24] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:102
   [25] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [26] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:97
   [27] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [28] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:15
   [29] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [30] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:3
   [31] include(::String) at ./client.jl:442
   [32] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:59
   [33] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [34] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:40
   [35] include(::String) at ./client.jl:442
   [36] top-level scope at none:6
   [37] eval(::Module, ::Any) at ./boot.jl:331
   [38] exec_options(::Base.JLOptions) at ./client.jl:265
   [39] _start() at ./client.jl:491
  
orgqr!: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:135
  Got exception outside of a @test
  InvalidIRError: compiling index_kernel(CuArrays.CuKernelContext, CuDeviceArray{Complex{Float64},2,CUDAnative.AS.Global}, CuDeviceArray{Complex{Float64},2,CUDAnative.AS.Global}, Tuple{Int64,Int64}, Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_23655)
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_21247)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(GPUArrays.index_kernel),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(GPUArrays.index_kernel), ::Type{Tuple{CuArrays.CuKernelContext,CuDeviceArray{Complex{Float64},2,CUDAnative.AS.Global},CuDeviceArray{Complex{Float64},2,CUDAnative.AS.Global},Tuple{Int64,Int64},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}}}}; kwargs::Base.Iterators.Pairs{Symbol,Nothing,Tuple{Symbol},NamedTuple{(:name,),Tuple{Nothing}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [15] gpu_call(::CuArrays.CuArrayBackend, ::Function, ::Tuple{CuArray{Complex{Float64},2,Nothing},CuArray{Complex{Float64},2,Nothing},Tuple{Int64,Int64},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}}}, ::Int64; name::Nothing) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/gpuarrays.jl:32
   [16] #gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:60 [inlined]
   [17] gpu_call at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:46 [inlined]
   [18] _unsafe_getindex! at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/indexing.jl:125 [inlined]
   [19] _unsafe_getindex at ./multidimensional.jl:752 [inlined]
   [20] _getindex at ./multidimensional.jl:738 [inlined]
   [21] getindex at ./abstractarray.jl:980 [inlined]
   [22] orgqr!(::CuArray{Complex{Float64},2,Nothing}, ::CuArray{Complex{Float64},1,Nothing}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/solver/wrappers.jl:532
   [23] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:139
   [24] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [25] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:136
   [26] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [27] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:15
   [28] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [29] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:3
   [30] include(::String) at ./client.jl:442
   [31] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:59
   [32] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [33] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:40
   [34] include(::String) at ./client.jl:442
   [35] top-level scope at none:6
   [36] eval(::Module, ::Any) at ./boot.jl:331
   [37] exec_options(::Base.JLOptions) at ./client.jl:265
   [38] _start() at ./client.jl:491
  
qr: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:318
  Test threw exception
  Expression: ≈(d_RR[1:n, :], d_F.R, atol = tol * norm(A))
  InvalidIRError: compiling index_kernel(CuArrays.CuKernelContext, CuDeviceArray{Complex{Float64},2,CUDAnative.AS.Global}, CuDeviceArray{Complex{Float64},2,CUDAnative.AS.Global}, Tuple{Int64,Int64}, Tuple{UnitRange{Int64},Base.Slice{Base.OneTo{Int64}}}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_23655)
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_21247)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(GPUArrays.index_kernel),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(GPUArrays.index_kernel), ::Type{Tuple{CuArrays.CuKernelContext,CuDeviceArray{Complex{Float64},2,CUDAnative.AS.Global},CuDeviceArray{Complex{Float64},2,CUDAnative.AS.Global},Tuple{Int64,Int64},Tuple{UnitRange{Int64},Base.Slice{Base.OneTo{Int64}}}}}; kwargs::Base.Iterators.Pairs{Symbol,Nothing,Tuple{Symbol},NamedTuple{(:name,),Tuple{Nothing}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [15] gpu_call(::CuArrays.CuArrayBackend, ::Function, ::Tuple{CuArray{Complex{Float64},2,Nothing},CuArray{Complex{Float64},2,Nothing},Tuple{Int64,Int64},Tuple{UnitRange{Int64},Base.Slice{Base.OneTo{Int64}}}}, ::Int64; name::Nothing) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/gpuarrays.jl:32
   [16] #gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:60 [inlined]
   [17] gpu_call at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:46 [inlined]
   [18] _unsafe_getindex! at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/indexing.jl:125 [inlined]
   [19] _unsafe_getindex at ./multidimensional.jl:752 [inlined]
   [20] _getindex at ./multidimensional.jl:738 [inlined]
   [21] getindex(::CuArray{Complex{Float64},2,Nothing}, ::UnitRange{Int64}, ::Function) at ./abstractarray.jl:980
   [22] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:318
   [23] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [24] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:312
   [25] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [26] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:15
   [27] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [28] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:3
  
qr: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:319
  Test threw exception
  Expression: norm(d_RR[n + 1:end, :]) < tol * norm(A)
  InvalidIRError: compiling index_kernel(CuArrays.CuKernelContext, CuDeviceArray{Complex{Float64},2,CUDAnative.AS.Global}, CuDeviceArray{Complex{Float64},2,CUDAnative.AS.Global}, Tuple{Int64,Int64}, Tuple{UnitRange{Int64},Base.Slice{Base.OneTo{Int64}}}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_23655)
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_21247)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(GPUArrays.index_kernel),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(GPUArrays.index_kernel), ::Type{Tuple{CuArrays.CuKernelContext,CuDeviceArray{Complex{Float64},2,CUDAnative.AS.Global},CuDeviceArray{Complex{Float64},2,CUDAnative.AS.Global},Tuple{Int64,Int64},Tuple{UnitRange{Int64},Base.Slice{Base.OneTo{Int64}}}}}; kwargs::Base.Iterators.Pairs{Symbol,Nothing,Tuple{Symbol},NamedTuple{(:name,),Tuple{Nothing}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [15] gpu_call(::CuArrays.CuArrayBackend, ::Function, ::Tuple{CuArray{Complex{Float64},2,Nothing},CuArray{Complex{Float64},2,Nothing},Tuple{Int64,Int64},Tuple{UnitRange{Int64},Base.Slice{Base.OneTo{Int64}}}}, ::Int64; name::Nothing) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/gpuarrays.jl:32
   [16] #gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:60 [inlined]
   [17] gpu_call at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:46 [inlined]
   [18] _unsafe_getindex! at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/indexing.jl:125 [inlined]
   [19] _unsafe_getindex at ./multidimensional.jl:752 [inlined]
   [20] _getindex at ./multidimensional.jl:738 [inlined]
   [21] getindex(::CuArray{Complex{Float64},2,Nothing}, ::UnitRange{Int64}, ::Function) at ./abstractarray.jl:980
   [22] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:319
   [23] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [24] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:312
   [25] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [26] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:15
   [27] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [28] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:3
  
qr: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:322
  Test threw exception
  Expression: ≈(det(d_F.Q), det(collect(d_F.Q * CuMatrix{elty}(I, size(d_F.Q)))), atol = tol * norm(A))
  InvalidIRError: compiling mapreduce_grid(CuArrays.CUSOLVER.var"#741#742", typeof(Base.mul_prod), CuDeviceArray{Complex{Float64},1,CUDAnative.AS.Global}, CuDeviceArray{Complex{Float64},1,CUDAnative.AS.Global}, Complex{Float64}, CartesianIndices{1,Tuple{Base.OneTo{Int64}}}, CartesianIndices{1,Tuple{Base.OneTo{Int64}}}, Val{true}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_hypot_2646)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CuArrays.mapreduce_grid),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(CuArrays.mapreduce_grid), ::Type{Tuple{CuArrays.CUSOLVER.var"#741#742",typeof(Base.mul_prod),CuDeviceArray{Complex{Float64},1,CUDAnative.AS.Global},CuDeviceArray{Complex{Float64},1,CUDAnative.AS.Global},Complex{Float64},CartesianIndices{1,Tuple{Base.OneTo{Int64}}},CartesianIndices{1,Tuple{Base.OneTo{Int64}}},Val{true}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [15] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [16] macro expansion at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/mapreduce.jl:161 [inlined]
   [17] mapreducedim!(::Function, ::Function, ::CuArray{Complex{Float64},1,Nothing}, ::CuArray{Complex{Float64},1,Nothing}, ::Complex{Float64}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/nvtx/highlevel.jl:83
   [18] mapreduce(::Function, ::Function, ::CuArray{Complex{Float64},1,Nothing}; dims::Function, init::Nothing) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/mapreduce.jl:38
   [19] mapreduce at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/mapreduce.jl:24 [inlined]
   [20] _prod(::Function, ::CuArray{Complex{Float64},1,Nothing}, ::Colon) at ./reducedim.jl:657
   [21] #prod#605 at ./reducedim.jl:653 [inlined]
   [22] prod at ./reducedim.jl:653 [inlined]
   [23] det(::CuArrays.CUSOLVER.CuQRPackedQ{Complex{Float64},CuArray{Complex{Float64},2,Nothing}}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/solver/linalg.jl:72
   [24] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:322
   [25] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [26] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:312
   [27] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [28] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:15
   [29] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [30] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:3
  
qr: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:326
  Test threw exception
  Expression: ≈((d_F.Q)' * d_A, d_F.R, atol = tol * norm(A))
  InvalidIRError: compiling index_kernel(CuArrays.CuKernelContext, CuDeviceArray{Complex{Float64},2,CUDAnative.AS.Global}, CuDeviceArray{Complex{Float64},2,CUDAnative.AS.Global}, Tuple{Int64,Int64}, Tuple{UnitRange{Int64},UnitRange{Int64}}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_23655)
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_21247)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(GPUArrays.index_kernel),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(GPUArrays.index_kernel), ::Type{Tuple{CuArrays.CuKernelContext,CuDeviceArray{Complex{Float64},2,CUDAnative.AS.Global},CuDeviceArray{Complex{Float64},2,CUDAnative.AS.Global},Tuple{Int64,Int64},Tuple{UnitRange{Int64},UnitRange{Int64}}}}; kwargs::Base.Iterators.Pairs{Symbol,Nothing,Tuple{Symbol},NamedTuple{(:name,),Tuple{Nothing}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [15] gpu_call(::CuArrays.CuArrayBackend, ::Function, ::Tuple{CuArray{Complex{Float64},2,Nothing},CuArray{Complex{Float64},2,Nothing},Tuple{Int64,Int64},Tuple{UnitRange{Int64},UnitRange{Int64}}}, ::Int64; name::Nothing) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/gpuarrays.jl:32
   [16] #gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:60 [inlined]
   [17] gpu_call at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:46 [inlined]
   [18] _unsafe_getindex! at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/indexing.jl:125 [inlined]
   [19] _unsafe_getindex(::IndexLinear, ::CuArray{Complex{Float64},2,Nothing}, ::UnitRange{Int64}, ::UnitRange{Int64}) at ./multidimensional.jl:752
   [20] _getindex at ./multidimensional.jl:738 [inlined]
   [21] getindex(::CuArray{Complex{Float64},2,Nothing}, ::UnitRange{Int64}, ::UnitRange{Int64}) at ./abstractarray.jl:980
   [22] getproperty(::CuArrays.CUSOLVER.CuQR{Complex{Float64},CuArray{Complex{Float64},2,Nothing}}, ::Symbol) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/solver/linalg.jl:33
   [23] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:326
   [24] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [25] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:312
   [26] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [27] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:15
   [28] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [29] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:3
  
qr: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:327
  Test threw exception
  Expression: ≈(det(d_F.Q), det(collect(d_F.Q * CuMatrix{elty}(I, size(d_F.Q)))), atol = tol * norm(A))
  InvalidIRError: compiling mapreduce_grid(CuArrays.CUSOLVER.var"#741#742", typeof(Base.mul_prod), CuDeviceArray{Complex{Float64},1,CUDAnative.AS.Global}, CuDeviceArray{Complex{Float64},1,CUDAnative.AS.Global}, Complex{Float64}, CartesianIndices{1,Tuple{Base.OneTo{Int64}}}, CartesianIndices{1,Tuple{Base.OneTo{Int64}}}, Val{true}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_hypot_2646)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CuArrays.mapreduce_grid),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(CuArrays.mapreduce_grid), ::Type{Tuple{CuArrays.CUSOLVER.var"#741#742",typeof(Base.mul_prod),CuDeviceArray{Complex{Float64},1,CUDAnative.AS.Global},CuDeviceArray{Complex{Float64},1,CUDAnative.AS.Global},Complex{Float64},CartesianIndices{1,Tuple{Base.OneTo{Int64}}},CartesianIndices{1,Tuple{Base.OneTo{Int64}}},Val{true}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [15] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [16] macro expansion at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/mapreduce.jl:161 [inlined]
   [17] mapreducedim!(::Function, ::Function, ::CuArray{Complex{Float64},1,Nothing}, ::CuArray{Complex{Float64},1,Nothing}, ::Complex{Float64}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/nvtx/highlevel.jl:83
   [18] mapreduce(::Function, ::Function, ::CuArray{Complex{Float64},1,Nothing}; dims::Function, init::Nothing) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/mapreduce.jl:38
   [19] mapreduce at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/mapreduce.jl:24 [inlined]
   [20] _prod(::Function, ::CuArray{Complex{Float64},1,Nothing}, ::Colon) at ./reducedim.jl:657
   [21] #prod#605 at ./reducedim.jl:653 [inlined]
   [22] prod at ./reducedim.jl:653 [inlined]
   [23] det(::CuArrays.CUSOLVER.CuQRPackedQ{Complex{Float64},CuArray{Complex{Float64},2,Nothing}}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/solver/linalg.jl:72
   [24] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:327
   [25] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [26] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:312
   [27] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [28] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:15
   [29] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [30] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:3
  
qr: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:311
  Got exception outside of a @test
  InvalidIRError: compiling index_kernel(CuArrays.CuKernelContext, CuDeviceArray{Complex{Float64},2,CUDAnative.AS.Global}, CuDeviceArray{Complex{Float64},2,CUDAnative.AS.Global}, Tuple{Int64,Int64}, Tuple{UnitRange{Int64},UnitRange{Int64}}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_23655)
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_21247)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(GPUArrays.index_kernel),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(GPUArrays.index_kernel), ::Type{Tuple{CuArrays.CuKernelContext,CuDeviceArray{Complex{Float64},2,CUDAnative.AS.Global},CuDeviceArray{Complex{Float64},2,CUDAnative.AS.Global},Tuple{Int64,Int64},Tuple{UnitRange{Int64},UnitRange{Int64}}}}; kwargs::Base.Iterators.Pairs{Symbol,Nothing,Tuple{Symbol},NamedTuple{(:name,),Tuple{Nothing}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [15] gpu_call(::CuArrays.CuArrayBackend, ::Function, ::Tuple{CuArray{Complex{Float64},2,Nothing},CuArray{Complex{Float64},2,Nothing},Tuple{Int64,Int64},Tuple{UnitRange{Int64},UnitRange{Int64}}}, ::Int64; name::Nothing) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/gpuarrays.jl:32
   [16] #gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:60 [inlined]
   [17] gpu_call at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:46 [inlined]
   [18] _unsafe_getindex! at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/indexing.jl:125 [inlined]
   [19] _unsafe_getindex(::IndexLinear, ::CuArray{Complex{Float64},2,Nothing}, ::UnitRange{Int64}, ::UnitRange{Int64}) at ./multidimensional.jl:752
   [20] _getindex at ./multidimensional.jl:738 [inlined]
   [21] getindex(::CuArray{Complex{Float64},2,Nothing}, ::UnitRange{Int64}, ::UnitRange{Int64}) at ./abstractarray.jl:980
   [22] getproperty(::CuArrays.CUSOLVER.CuQR{Complex{Float64},CuArray{Complex{Float64},2,Nothing}}, ::Symbol) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/solver/linalg.jl:33
   [23] iterate at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/solver/linalg.jl:43 [inlined]
   [24] indexed_iterate(::CuArrays.CUSOLVER.CuQR{Complex{Float64},CuArray{Complex{Float64},2,Nothing}}, ::Int64, ::Val{:R}) at ./tuple.jl:89
   [25] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:330
   [26] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [27] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:312
   [28] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1188
   [29] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:15
   [30] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [31] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/solver.jl:3
   [32] include(::String) at ./client.jl:442
   [33] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:59
   [34] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [35] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:40
   [36] include(::String) at ./client.jl:442
   [37] top-level scope at none:6
   [38] eval(::Module, ::Any) at ./boot.jl:331
   [39] exec_options(::Base.JLOptions) at ./client.jl:265
   [40] _start() at ./client.jl:491
  
[ Info: Testing CUDNN 7.6.5
NNlib: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/dnn.jl:70
  Test threw exception
  Expression: testf(softmax, rand(Float64, dims))
  InvalidIRError: compiling mapreduce_grid(typeof(identity), typeof(max), CuDeviceArray{Float64,2,CUDAnative.AS.Global}, CuDeviceArray{Float64,2,CUDAnative.AS.Global}, Float64, CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}}, CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}}, Val{true}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_23655)
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_21247)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CuArrays.mapreduce_grid),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(CuArrays.mapreduce_grid), ::Type{Tuple{typeof(identity),typeof(max),CuDeviceArray{Float64,2,CUDAnative.AS.Global},CuDeviceArray{Float64,2,CUDAnative.AS.Global},Float64,CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}},CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}},Val{true}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [15] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [16] macro expansion at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/mapreduce.jl:161 [inlined]
   [17] mapreducedim!(::Function, ::Function, ::CuArray{Float64,2,Nothing}, ::CuArray{Float64,2,Nothing}, ::Float64) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/nvtx/highlevel.jl:83
   [18] #mapreduce#28 at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/mapreduce.jl:38 [inlined]
   [19] _maximum at ./reducedim.jl:679 [inlined]
   [20] _maximum at ./reducedim.jl:678 [inlined]
   [21] #maximum#606 at ./reducedim.jl:652 [inlined]
   [22] softmax(::CuArray{Float64,2,Nothing}; dims::Int64) at /home/pkgeval/.julia/packages/NNlib/FAI3o/src/softmax.jl:29
   [23] softmax(::CuArray{Float64,2,Nothing}) at /home/pkgeval/.julia/packages/NNlib/FAI3o/src/softmax.jl:29
   [24] compare(::Function, ::Type{CuArray}, ::Array{Float64,2}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:23
   [25] compare at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:20 [inlined]
   [26] #testf#1 at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18 [inlined]
   [27] testf(::Function, ::Array{Float64,2}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18
   [28] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/dnn.jl:70
   [29] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [30] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/dnn.jl:14
   [31] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [32] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/dnn.jl:3
  
NNlib: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/dnn.jl:71
  Test threw exception
  Expression: testf(∇softmax, rand(Float64, dims), rand(Float64, dims))
  InvalidIRError: compiling mapreduce_grid(typeof(identity), typeof(max), CuDeviceArray{Float64,2,CUDAnative.AS.Global}, CuDeviceArray{Float64,2,CUDAnative.AS.Global}, Float64, CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}}, CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}}, Val{true}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_23655)
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_21247)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CuArrays.mapreduce_grid),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(CuArrays.mapreduce_grid), ::Type{Tuple{typeof(identity),typeof(max),CuDeviceArray{Float64,2,CUDAnative.AS.Global},CuDeviceArray{Float64,2,CUDAnative.AS.Global},Float64,CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}},CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}},Val{true}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [15] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [16] macro expansion at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/mapreduce.jl:161 [inlined]
   [17] mapreducedim!(::Function, ::Function, ::CuArray{Float64,2,Nothing}, ::CuArray{Float64,2,Nothing}, ::Float64) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/nvtx/highlevel.jl:83
   [18] #mapreduce#28 at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/mapreduce.jl:38 [inlined]
   [19] _maximum at ./reducedim.jl:679 [inlined]
   [20] _maximum at ./reducedim.jl:678 [inlined]
   [21] #maximum#606 at ./reducedim.jl:652 [inlined]
   [22] softmax(::CuArray{Float64,2,Nothing}; dims::Int64) at /home/pkgeval/.julia/packages/NNlib/FAI3o/src/softmax.jl:29
   [23] ∇softmax(::CuArray{Float64,2,Nothing}, ::CuArray{Float64,2,Nothing}; dims::Int64) at /home/pkgeval/.julia/packages/NNlib/FAI3o/src/softmax.jl:66
   [24] ∇softmax(::CuArray{Float64,2,Nothing}, ::CuArray{Float64,2,Nothing}) at /home/pkgeval/.julia/packages/NNlib/FAI3o/src/softmax.jl:66
   [25] compare(::Function, ::Type{CuArray}, ::Array{Float64,2}, ::Vararg{Any,N} where N; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:23
   [26] compare(::Function, ::Type{CuArray}, ::Array{Float64,2}, ::Vararg{Any,N} where N) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:20
   [27] testf(::Function, ::Array{Float64,2}, ::Vararg{Array{Float64,2},N} where N; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18
   [28] testf(::Function, ::Array{Float64,2}, ::Vararg{Array{Float64,2},N} where N) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18
   [29] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/dnn.jl:71
   [30] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [31] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/dnn.jl:14
   [32] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [33] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/dnn.jl:3
  
NNlib: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/dnn.jl:72
  Test threw exception
  Expression: testf(logsoftmax, rand(Float64, dims))
  InvalidIRError: compiling mapreduce_grid(typeof(identity), typeof(max), CuDeviceArray{Float64,2,CUDAnative.AS.Global}, CuDeviceArray{Float64,2,CUDAnative.AS.Global}, Float64, CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}}, CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}}, Val{true}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_23655)
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_21247)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CuArrays.mapreduce_grid),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(CuArrays.mapreduce_grid), ::Type{Tuple{typeof(identity),typeof(max),CuDeviceArray{Float64,2,CUDAnative.AS.Global},CuDeviceArray{Float64,2,CUDAnative.AS.Global},Float64,CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}},CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}},Val{true}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [15] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [16] macro expansion at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/mapreduce.jl:161 [inlined]
   [17] mapreducedim!(::Function, ::Function, ::CuArray{Float64,2,Nothing}, ::CuArray{Float64,2,Nothing}, ::Float64) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/nvtx/highlevel.jl:83
   [18] #mapreduce#28 at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/mapreduce.jl:38 [inlined]
   [19] _maximum at ./reducedim.jl:679 [inlined]
   [20] _maximum at ./reducedim.jl:678 [inlined]
   [21] #maximum#606 at ./reducedim.jl:652 [inlined]
   [22] logsoftmax(::CuArray{Float64,2,Nothing}; dims::Int64) at /home/pkgeval/.julia/packages/NNlib/FAI3o/src/softmax.jl:86
   [23] logsoftmax(::CuArray{Float64,2,Nothing}) at /home/pkgeval/.julia/packages/NNlib/FAI3o/src/softmax.jl:86
   [24] compare(::Function, ::Type{CuArray}, ::Array{Float64,2}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:23
   [25] compare at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:20 [inlined]
   [26] #testf#1 at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18 [inlined]
   [27] testf(::Function, ::Array{Float64,2}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18
   [28] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/dnn.jl:72
   [29] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [30] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/dnn.jl:14
   [31] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [32] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/dnn.jl:3
  
NNlib: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/dnn.jl:73
  Test threw exception
  Expression: testf(∇logsoftmax, rand(Float64, dims), rand(Float64, dims))
  InvalidIRError: compiling mapreduce_grid(typeof(identity), typeof(max), CuDeviceArray{Float64,2,CUDAnative.AS.Global}, CuDeviceArray{Float64,2,CUDAnative.AS.Global}, Float64, CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}}, CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}}, Val{true}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_23655)
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_21247)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CuArrays.mapreduce_grid),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(CuArrays.mapreduce_grid), ::Type{Tuple{typeof(identity),typeof(max),CuDeviceArray{Float64,2,CUDAnative.AS.Global},CuDeviceArray{Float64,2,CUDAnative.AS.Global},Float64,CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}},CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}},Val{true}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [15] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [16] macro expansion at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/mapreduce.jl:161 [inlined]
   [17] mapreducedim!(::Function, ::Function, ::CuArray{Float64,2,Nothing}, ::CuArray{Float64,2,Nothing}, ::Float64) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/nvtx/highlevel.jl:83
   [18] #mapreduce#28 at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/mapreduce.jl:38 [inlined]
   [19] _maximum at ./reducedim.jl:679 [inlined]
   [20] _maximum at ./reducedim.jl:678 [inlined]
   [21] #maximum#606 at ./reducedim.jl:652 [inlined]
   [22] logsoftmax(::CuArray{Float64,2,Nothing}; dims::Int64) at /home/pkgeval/.julia/packages/NNlib/FAI3o/src/softmax.jl:86
   [23] logsoftmax at /home/pkgeval/.julia/packages/NNlib/FAI3o/src/softmax.jl:86 [inlined]
   [24] ∇logsoftmax!(::CuArray{Float64,2,Nothing}, ::CuArray{Float64,2,Nothing}, ::CuArray{Float64,2,Nothing}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/dnn/nnlib.jl:33
   [25] ∇logsoftmax(::CuArray{Float64,2,Nothing}, ::CuArray{Float64,2,Nothing}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/dnn/nnlib.jl:38
   [26] compare(::Function, ::Type{CuArray}, ::Array{Float64,2}, ::Vararg{Any,N} where N; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:23
   [27] compare(::Function, ::Type{CuArray}, ::Array{Float64,2}, ::Vararg{Any,N} where N) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:20
   [28] testf(::Function, ::Array{Float64,2}, ::Vararg{Array{Float64,2},N} where N; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18
   [29] testf(::Function, ::Array{Float64,2}, ::Vararg{Array{Float64,2},N} where N) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18
   [30] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/dnn.jl:73
   [31] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [32] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/dnn.jl:14
   [33] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [34] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/dnn.jl:3
  
Activations and Other Ops: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/dnn.jl:85
  Test threw exception
  Expression: testf((x->begin
            f.(x)
        end), rand(Float64, dims))
  InvalidIRError: compiling broadcast(CuArrays.CuKernelContext, CuDeviceArray{Float64,2,CUDAnative.AS.Global}, Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}},typeof(CuArrays.cuσ),Tuple{Base.Broadcast.Extruded{CuDeviceArray{Float64,2,CUDAnative.AS.Global},Tuple{Bool,Bool},Tuple{Int64,Int64}}}}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_23655)
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_21247)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::String, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{String,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},GPUArrays.var"#26#27",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::String, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] getproperty at ./Base.jl:33 [inlined]
   [14] merge at ./namedtuple.jl:253 [inlined]
   [15] cufunction(::GPUArrays.var"#26#27", ::Type{Tuple{CuArrays.CuKernelContext,CuDeviceArray{Float64,2,CUDAnative.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}},typeof(CuArrays.cuσ),Tuple{Base.Broadcast.Extruded{CuDeviceArray{Float64,2,CUDAnative.AS.Global},Tuple{Bool,Bool},Tuple{Int64,Int64}}}}}}; kwargs::Base.Iterators.Pairs{Symbol,String,Tuple{Symbol},NamedTuple{(:name,),Tuple{String}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:0
   [16] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [17] gpu_call(::CuArrays.CuArrayBackend, ::Function, ::Tuple{CuArray{Float64,2,Nothing},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}},typeof(CuArrays.cuσ),Tuple{Base.Broadcast.Extruded{CuArray{Float64,2,Nothing},Tuple{Bool,Bool},Tuple{Int64,Int64}}}}}, ::Int64; name::String) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/gpuarrays.jl:32
   [18] #gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:60 [inlined]
   [19] copyto! at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/broadcast.jl:63 [inlined]
   [20] copyto! at ./broadcast.jl:865 [inlined]
   [21] copy at ./broadcast.jl:841 [inlined]
   [22] materialize at ./broadcast.jl:821 [inlined]
   [23] (::var"#213#227"{typeof(σ)})(::CuArray{Float64,2,Nothing}) at ./none:0
   [24] compare(::Function, ::Type{CuArray}, ::Array{Float64,2}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:23
   [25] compare at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:20 [inlined]
   [26] #testf#1 at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18 [inlined]
   [27] testf(::Function, ::Array{Float64,2}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18
   [28] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/dnn.jl:85
   [29] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [30] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/dnn.jl:78
   [31] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [32] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/dnn.jl:3
  
Activations and Other Ops: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/dnn.jl:85
  Test threw exception
  Expression: testf((x->begin
            f.(x)
        end), rand(Float64, dims))
  InvalidIRError: compiling broadcast(CuArrays.CuKernelContext, CuDeviceArray{Float64,2,CUDAnative.AS.Global}, Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}},typeof(CuArrays.culogσ),Tuple{Base.Broadcast.Extruded{CuDeviceArray{Float64,2,CUDAnative.AS.Global},Tuple{Bool,Bool},Tuple{Int64,Int64}}}}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_23655)
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_21247)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::String, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{String,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},GPUArrays.var"#26#27",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::String, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] getproperty at ./Base.jl:33 [inlined]
   [14] merge at ./namedtuple.jl:253 [inlined]
   [15] cufunction(::GPUArrays.var"#26#27", ::Type{Tuple{CuArrays.CuKernelContext,CuDeviceArray{Float64,2,CUDAnative.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}},typeof(CuArrays.culogσ),Tuple{Base.Broadcast.Extruded{CuDeviceArray{Float64,2,CUDAnative.AS.Global},Tuple{Bool,Bool},Tuple{Int64,Int64}}}}}}; kwargs::Base.Iterators.Pairs{Symbol,String,Tuple{Symbol},NamedTuple{(:name,),Tuple{String}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:0
   [16] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [17] gpu_call(::CuArrays.CuArrayBackend, ::Function, ::Tuple{CuArray{Float64,2,Nothing},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}},typeof(CuArrays.culogσ),Tuple{Base.Broadcast.Extruded{CuArray{Float64,2,Nothing},Tuple{Bool,Bool},Tuple{Int64,Int64}}}}}, ::Int64; name::String) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/gpuarrays.jl:32
   [18] #gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:60 [inlined]
   [19] copyto! at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/broadcast.jl:63 [inlined]
   [20] copyto! at ./broadcast.jl:865 [inlined]
   [21] copy at ./broadcast.jl:841 [inlined]
   [22] materialize at ./broadcast.jl:821 [inlined]
   [23] (::var"#213#227"{typeof(logσ)})(::CuArray{Float64,2,Nothing}) at ./none:0
   [24] compare(::Function, ::Type{CuArray}, ::Array{Float64,2}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:23
   [25] compare at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:20 [inlined]
   [26] #testf#1 at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18 [inlined]
   [27] testf(::Function, ::Array{Float64,2}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18
   [28] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/dnn.jl:85
   [29] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [30] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/dnn.jl:78
   [31] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [32] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/dnn.jl:3
  
Activations and Other Ops: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/dnn.jl:85
  Test threw exception
  Expression: testf((x->begin
            f.(x)
        end), rand(Float64, dims))
  InvalidIRError: compiling broadcast(CuArrays.CuKernelContext, CuDeviceArray{Float64,2,CUDAnative.AS.Global}, Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}},typeof(CuArrays.cuelu),Tuple{Base.Broadcast.Extruded{CuDeviceArray{Float64,2,CUDAnative.AS.Global},Tuple{Bool,Bool},Tuple{Int64,Int64}}}}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_23655)
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_21247)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::String, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{String,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},GPUArrays.var"#26#27",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::String, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] getproperty at ./Base.jl:33 [inlined]
   [14] merge at ./namedtuple.jl:253 [inlined]
   [15] cufunction(::GPUArrays.var"#26#27", ::Type{Tuple{CuArrays.CuKernelContext,CuDeviceArray{Float64,2,CUDAnative.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}},typeof(CuArrays.cuelu),Tuple{Base.Broadcast.Extruded{CuDeviceArray{Float64,2,CUDAnative.AS.Global},Tuple{Bool,Bool},Tuple{Int64,Int64}}}}}}; kwargs::Base.Iterators.Pairs{Symbol,String,Tuple{Symbol},NamedTuple{(:name,),Tuple{String}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:0
   [16] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [17] gpu_call(::CuArrays.CuArrayBackend, ::Function, ::Tuple{CuArray{Float64,2,Nothing},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}},typeof(CuArrays.cuelu),Tuple{Base.Broadcast.Extruded{CuArray{Float64,2,Nothing},Tuple{Bool,Bool},Tuple{Int64,Int64}}}}}, ::Int64; name::String) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/gpuarrays.jl:32
   [18] #gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:60 [inlined]
   [19] copyto! at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/broadcast.jl:63 [inlined]
   [20] copyto! at ./broadcast.jl:865 [inlined]
   [21] copy at ./broadcast.jl:841 [inlined]
   [22] materialize at ./broadcast.jl:821 [inlined]
   [23] (::var"#213#227"{typeof(elu)})(::CuArray{Float64,2,Nothing}) at ./none:0
   [24] compare(::Function, ::Type{CuArray}, ::Array{Float64,2}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:23
   [25] compare at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:20 [inlined]
   [26] #testf#1 at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18 [inlined]
   [27] testf(::Function, ::Array{Float64,2}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18
   [28] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/dnn.jl:85
   [29] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [30] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/dnn.jl:78
   [31] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [32] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/dnn.jl:3
  
Activations and Other Ops: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/dnn.jl:85
  Test threw exception
  Expression: testf((x->begin
            f.(x)
        end), rand(Float64, dims))
  InvalidIRError: compiling broadcast(CuArrays.CuKernelContext, CuDeviceArray{Float64,2,CUDAnative.AS.Global}, Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}},typeof(CuArrays.cuswish),Tuple{Base.Broadcast.Extruded{CuDeviceArray{Float64,2,CUDAnative.AS.Global},Tuple{Bool,Bool},Tuple{Int64,Int64}}}}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_23655)
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_21247)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::String, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{String,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},GPUArrays.var"#26#27",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::String, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] getproperty at ./Base.jl:33 [inlined]
   [14] merge at ./namedtuple.jl:253 [inlined]
   [15] cufunction(::GPUArrays.var"#26#27", ::Type{Tuple{CuArrays.CuKernelContext,CuDeviceArray{Float64,2,CUDAnative.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}},typeof(CuArrays.cuswish),Tuple{Base.Broadcast.Extruded{CuDeviceArray{Float64,2,CUDAnative.AS.Global},Tuple{Bool,Bool},Tuple{Int64,Int64}}}}}}; kwargs::Base.Iterators.Pairs{Symbol,String,Tuple{Symbol},NamedTuple{(:name,),Tuple{String}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:0
   [16] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [17] gpu_call(::CuArrays.CuArrayBackend, ::Function, ::Tuple{CuArray{Float64,2,Nothing},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}},typeof(CuArrays.cuswish),Tuple{Base.Broadcast.Extruded{CuArray{Float64,2,Nothing},Tuple{Bool,Bool},Tuple{Int64,Int64}}}}}, ::Int64; name::String) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/gpuarrays.jl:32
   [18] #gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:60 [inlined]
   [19] copyto! at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/broadcast.jl:63 [inlined]
   [20] copyto! at ./broadcast.jl:865 [inlined]
   [21] copy at ./broadcast.jl:841 [inlined]
   [22] materialize at ./broadcast.jl:821 [inlined]
   [23] (::var"#213#227"{typeof(swish)})(::CuArray{Float64,2,Nothing}) at ./none:0
   [24] compare(::Function, ::Type{CuArray}, ::Array{Float64,2}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:23
   [25] compare at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:20 [inlined]
   [26] #testf#1 at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18 [inlined]
   [27] testf(::Function, ::Array{Float64,2}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18
   [28] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/dnn.jl:85
   [29] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [30] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/dnn.jl:78
   [31] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [32] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/dnn.jl:3
  
Activations and Other Ops: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/dnn.jl:85
  Test threw exception
  Expression: testf((x->begin
            f.(x)
        end), rand(Float64, dims))
  InvalidIRError: compiling broadcast(CuArrays.CuKernelContext, CuDeviceArray{Float64,2,CUDAnative.AS.Global}, Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}},typeof(CuArrays.cugelu),Tuple{Base.Broadcast.Extruded{CuDeviceArray{Float64,2,CUDAnative.AS.Global},Tuple{Bool,Bool},Tuple{Int64,Int64}}}}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_23655)
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_21247)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::String, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{String,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},GPUArrays.var"#26#27",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::String, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] getproperty at ./Base.jl:33 [inlined]
   [14] merge at ./namedtuple.jl:253 [inlined]
   [15] cufunction(::GPUArrays.var"#26#27", ::Type{Tuple{CuArrays.CuKernelContext,CuDeviceArray{Float64,2,CUDAnative.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}},typeof(CuArrays.cugelu),Tuple{Base.Broadcast.Extruded{CuDeviceArray{Float64,2,CUDAnative.AS.Global},Tuple{Bool,Bool},Tuple{Int64,Int64}}}}}}; kwargs::Base.Iterators.Pairs{Symbol,String,Tuple{Symbol},NamedTuple{(:name,),Tuple{String}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:0
   [16] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [17] gpu_call(::CuArrays.CuArrayBackend, ::Function, ::Tuple{CuArray{Float64,2,Nothing},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}},typeof(CuArrays.cugelu),Tuple{Base.Broadcast.Extruded{CuArray{Float64,2,Nothing},Tuple{Bool,Bool},Tuple{Int64,Int64}}}}}, ::Int64; name::String) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/gpuarrays.jl:32
   [18] #gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:60 [inlined]
   [19] copyto! at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/broadcast.jl:63 [inlined]
   [20] copyto! at ./broadcast.jl:865 [inlined]
   [21] copy at ./broadcast.jl:841 [inlined]
   [22] materialize at ./broadcast.jl:821 [inlined]
   [23] (::var"#213#227"{typeof(gelu)})(::CuArray{Float64,2,Nothing}) at ./none:0
   [24] compare(::Function, ::Type{CuArray}, ::Array{Float64,2}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:23
   [25] compare at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:20 [inlined]
   [26] #testf#1 at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18 [inlined]
   [27] testf(::Function, ::Array{Float64,2}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18
   [28] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/dnn.jl:85
   [29] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [30] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/dnn.jl:78
   [31] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [32] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/dnn.jl:3
  
Activations and Other Ops: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/dnn.jl:85
  Test threw exception
  Expression: testf((x->begin
            f.(x)
        end), rand(Float64, dims))
  InvalidIRError: compiling broadcast(CuArrays.CuKernelContext, CuDeviceArray{Float64,2,CUDAnative.AS.Global}, Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}},typeof(CuArrays.cuselu),Tuple{Base.Broadcast.Extruded{CuDeviceArray{Float64,2,CUDAnative.AS.Global},Tuple{Bool,Bool},Tuple{Int64,Int64}}}}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_23655)
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_21247)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::String, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{String,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},GPUArrays.var"#26#27",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::String, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] getproperty at ./Base.jl:33 [inlined]
   [14] merge at ./namedtuple.jl:253 [inlined]
   [15] cufunction(::GPUArrays.var"#26#27", ::Type{Tuple{CuArrays.CuKernelContext,CuDeviceArray{Float64,2,CUDAnative.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}},typeof(CuArrays.cuselu),Tuple{Base.Broadcast.Extruded{CuDeviceArray{Float64,2,CUDAnative.AS.Global},Tuple{Bool,Bool},Tuple{Int64,Int64}}}}}}; kwargs::Base.Iterators.Pairs{Symbol,String,Tuple{Symbol},NamedTuple{(:name,),Tuple{String}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:0
   [16] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [17] gpu_call(::CuArrays.CuArrayBackend, ::Function, ::Tuple{CuArray{Float64,2,Nothing},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}},typeof(CuArrays.cuselu),Tuple{Base.Broadcast.Extruded{CuArray{Float64,2,Nothing},Tuple{Bool,Bool},Tuple{Int64,Int64}}}}}, ::Int64; name::String) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/gpuarrays.jl:32
   [18] #gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:60 [inlined]
   [19] copyto! at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/broadcast.jl:63 [inlined]
   [20] copyto! at ./broadcast.jl:865 [inlined]
   [21] copy at ./broadcast.jl:841 [inlined]
   [22] materialize at ./broadcast.jl:821 [inlined]
   [23] (::var"#213#227"{typeof(selu)})(::CuArray{Float64,2,Nothing}) at ./none:0
   [24] compare(::Function, ::Type{CuArray}, ::Array{Float64,2}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:23
   [25] compare at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:20 [inlined]
   [26] #testf#1 at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18 [inlined]
   [27] testf(::Function, ::Array{Float64,2}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18
   [28] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/dnn.jl:85
   [29] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [30] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/dnn.jl:78
   [31] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [32] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/dnn.jl:3
  
Activations and Other Ops: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/dnn.jl:85
  Test threw exception
  Expression: testf((x->begin
            f.(x)
        end), rand(Float64, dims))
  InvalidIRError: compiling broadcast(CuArrays.CuKernelContext, CuDeviceArray{Float64,2,CUDAnative.AS.Global}, Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}},typeof(CuArrays.cusoftplus),Tuple{Base.Broadcast.Extruded{CuDeviceArray{Float64,2,CUDAnative.AS.Global},Tuple{Bool,Bool},Tuple{Int64,Int64}}}}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_23655)
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_21247)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::String, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{String,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},GPUArrays.var"#26#27",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::String, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] getproperty at ./Base.jl:33 [inlined]
   [14] merge at ./namedtuple.jl:253 [inlined]
   [15] cufunction(::GPUArrays.var"#26#27", ::Type{Tuple{CuArrays.CuKernelContext,CuDeviceArray{Float64,2,CUDAnative.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}},typeof(CuArrays.cusoftplus),Tuple{Base.Broadcast.Extruded{CuDeviceArray{Float64,2,CUDAnative.AS.Global},Tuple{Bool,Bool},Tuple{Int64,Int64}}}}}}; kwargs::Base.Iterators.Pairs{Symbol,String,Tuple{Symbol},NamedTuple{(:name,),Tuple{String}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:0
   [16] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [17] gpu_call(::CuArrays.CuArrayBackend, ::Function, ::Tuple{CuArray{Float64,2,Nothing},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}},typeof(CuArrays.cusoftplus),Tuple{Base.Broadcast.Extruded{CuArray{Float64,2,Nothing},Tuple{Bool,Bool},Tuple{Int64,Int64}}}}}, ::Int64; name::String) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/gpuarrays.jl:32
   [18] #gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:60 [inlined]
   [19] copyto! at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/broadcast.jl:63 [inlined]
   [20] copyto! at ./broadcast.jl:865 [inlined]
   [21] copy at ./broadcast.jl:841 [inlined]
   [22] materialize at ./broadcast.jl:821 [inlined]
   [23] (::var"#213#227"{typeof(softplus)})(::CuArray{Float64,2,Nothing}) at ./none:0
   [24] compare(::Function, ::Type{CuArray}, ::Array{Float64,2}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:23
   [25] compare at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:20 [inlined]
   [26] #testf#1 at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18 [inlined]
   [27] testf(::Function, ::Array{Float64,2}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18
   [28] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/dnn.jl:85
   [29] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [30] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/dnn.jl:78
   [31] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [32] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/dnn.jl:3
  
[ Info: Testing CUTENSOR 1.0.1
[ Info: Testing ForwardDiff integration
Broadcast Fix: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/forwarddiff.jl:83
  Test threw exception
  Expression: f(ds) ≈ collect(f(CuArray(ds)))
  LLVM error: Symbol name with unsupported characters
  Stacktrace:
   [1] handle_error(::Cstring) at /home/pkgeval/.julia/packages/LLVM/pINgj/src/core/context.jl:103
   [2] macro expansion at /home/pkgeval/.julia/packages/LLVM/pINgj/src/base.jl:18 [inlined]
   [3] LLVMTargetMachineEmitToMemoryBuffer at /home/pkgeval/.julia/packages/LLVM/pINgj/lib/9.0/libLLVM_h.jl:3512 [inlined]
   [4] emit(::LLVM.TargetMachine, ::LLVM.Module, ::LLVM.API.LLVMCodeGenFileType) at /home/pkgeval/.julia/packages/LLVM/pINgj/src/targetmachine.jl:42
   [5] mcgen(::CUDAnative.CompilerJob, ::LLVM.Module, ::LLVM.Function) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/mcgen.jl:87
   [6] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [7] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:202 [inlined]
   [8] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [9] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:199
   [10] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [11] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [12] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::String, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [13] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [14] get!(::CUDAnative.var"#219#220"{String,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},GPUArrays.var"#26#27",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [15] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [16] macro expansion at ./lock.jl:183 [inlined]
   [17] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::String, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [18] getproperty at ./Base.jl:33 [inlined]
   [19] merge at ./namedtuple.jl:253 [inlined]
   [20] cufunction(::GPUArrays.var"#26#27", ::Type{Tuple{CuArrays.CuKernelContext,CuDeviceArray{Dual{Nothing,Float64,1},1,CUDAnative.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64}},typeof(CuArrays.culogσ),Tuple{Base.Broadcast.Extruded{CuDeviceArray{Dual{Nothing,Float64,1},1,CUDAnative.AS.Global},Tuple{Bool},Tuple{Int64}}}}}}; kwargs::Base.Iterators.Pairs{Symbol,String,Tuple{Symbol},NamedTuple{(:name,),Tuple{String}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:0
   [21] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [22] gpu_call(::CuArrays.CuArrayBackend, ::Function, ::Tuple{CuArray{Dual{Nothing,Float64,1},1,Nothing},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64}},typeof(CuArrays.culogσ),Tuple{Base.Broadcast.Extruded{CuArray{Dual{Nothing,Float64,1},1,Nothing},Tuple{Bool},Tuple{Int64}}}}}, ::Int64; name::String) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/gpuarrays.jl:32
   [23] #gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:60 [inlined]
   [24] copyto! at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/broadcast.jl:63 [inlined]
   [25] copyto! at ./broadcast.jl:865 [inlined]
   [26] copy(::Base.Broadcast.Broadcasted{CuArrays.CuArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(CuArrays.culogσ),Tuple{CuArray{Dual{Nothing,Float64,1},1,Nothing}}}) at ./broadcast.jl:841
   [27] materialize at ./broadcast.jl:821 [inlined]
   [28] (::var"#6750#f#277")(::CuArray{Dual{Nothing,Float64,1},1,Nothing}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/forwarddiff.jl:81
   [29] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/forwarddiff.jl:83
   [30] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [31] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/forwarddiff.jl:78
   [32] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [33] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/forwarddiff.jl:2
  
batched_mul: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/nnlib.jl:10
  Test threw exception
  Expression: cu(C) ≈ batched_mul(cu(A), cu(B))
  InvalidIRError: compiling broadcast(CuArrays.CuKernelContext, CuDeviceArray{Float32,3,CUDAnative.AS.Global}, Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(-),Tuple{Base.Broadcast.Extruded{CuDeviceArray{Float32,3,CUDAnative.AS.Global},Tuple{Bool,Bool,Bool},Tuple{Int64,Int64,Int64}},Base.Broadcast.Extruded{CuDeviceArray{Float32,3,CUDAnative.AS.Global},Tuple{Bool,Bool,Bool},Tuple{Int64,Int64,Int64}}}}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_23896)
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_22829)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::String, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{String,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},GPUArrays.var"#26#27",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::String, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] getproperty at ./Base.jl:33 [inlined]
   [14] merge at ./namedtuple.jl:253 [inlined]
   [15] cufunction(::GPUArrays.var"#26#27", ::Type{Tuple{CuArrays.CuKernelContext,CuDeviceArray{Float32,3,CUDAnative.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(-),Tuple{Base.Broadcast.Extruded{CuDeviceArray{Float32,3,CUDAnative.AS.Global},Tuple{Bool,Bool,Bool},Tuple{Int64,Int64,Int64}},Base.Broadcast.Extruded{CuDeviceArray{Float32,3,CUDAnative.AS.Global},Tuple{Bool,Bool,Bool},Tuple{Int64,Int64,Int64}}}}}}; kwargs::Base.Iterators.Pairs{Symbol,String,Tuple{Symbol},NamedTuple{(:name,),Tuple{String}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:0
   [16] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [17] gpu_call(::CuArrays.CuArrayBackend, ::Function, ::Tuple{CuArray{Float32,3,Nothing},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(-),Tuple{Base.Broadcast.Extruded{CuArray{Float32,3,Nothing},Tuple{Bool,Bool,Bool},Tuple{Int64,Int64,Int64}},Base.Broadcast.Extruded{CuArray{Float32,3,Nothing},Tuple{Bool,Bool,Bool},Tuple{Int64,Int64,Int64}}}}}, ::Int64; name::String) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/gpuarrays.jl:32
   [18] #gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:60 [inlined]
   [19] copyto! at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/broadcast.jl:63 [inlined]
   [20] copyto! at ./broadcast.jl:865 [inlined]
   [21] copy(::Base.Broadcast.Broadcasted{CuArrays.CuArrayStyle{3},Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(-),Tuple{CuArray{Float32,3,Nothing},CuArray{Float32,3,Nothing}}}) at ./broadcast.jl:841
   [22] materialize at ./broadcast.jl:821 [inlined]
   [23] broadcast_preserving_zero_d at ./broadcast.jl:810 [inlined]
   [24] -(::CuArray{Float32,3,Nothing}, ::CuArray{Float32,3,Nothing}) at ./arraymath.jl:39
   [25] isapprox(::CuArray{Float32,3,Nothing}, ::CuArray{Float32,3,Nothing}; atol::Int64, rtol::Float32, nans::Bool, norm::typeof(norm)) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl:1635
   [26] isapprox(::CuArray{Float32,3,Nothing}, ::CuArray{Float32,3,Nothing}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl:1635
   [27] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:246
   [28] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/nnlib.jl:10
   [29] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [30] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/nnlib.jl:4
   [31] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [32] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/nnlib.jl:3
  
batched_mul: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/nnlib.jl:13
  Test threw exception
  Expression: cu(Ct) ≈ batched_mul(batched_transpose(cu(A)), cu(B))
  InvalidIRError: compiling broadcast(CuArrays.CuKernelContext, CuDeviceArray{Float32,3,CUDAnative.AS.Global}, Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(-),Tuple{Base.Broadcast.Extruded{CuDeviceArray{Float32,3,CUDAnative.AS.Global},Tuple{Bool,Bool,Bool},Tuple{Int64,Int64,Int64}},Base.Broadcast.Extruded{CuDeviceArray{Float32,3,CUDAnative.AS.Global},Tuple{Bool,Bool,Bool},Tuple{Int64,Int64,Int64}}}}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_23896)
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_22829)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::String, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{String,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},GPUArrays.var"#26#27",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::String, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] getproperty at ./Base.jl:33 [inlined]
   [14] merge at ./namedtuple.jl:253 [inlined]
   [15] cufunction(::GPUArrays.var"#26#27", ::Type{Tuple{CuArrays.CuKernelContext,CuDeviceArray{Float32,3,CUDAnative.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(-),Tuple{Base.Broadcast.Extruded{CuDeviceArray{Float32,3,CUDAnative.AS.Global},Tuple{Bool,Bool,Bool},Tuple{Int64,Int64,Int64}},Base.Broadcast.Extruded{CuDeviceArray{Float32,3,CUDAnative.AS.Global},Tuple{Bool,Bool,Bool},Tuple{Int64,Int64,Int64}}}}}}; kwargs::Base.Iterators.Pairs{Symbol,String,Tuple{Symbol},NamedTuple{(:name,),Tuple{String}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:0
   [16] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [17] gpu_call(::CuArrays.CuArrayBackend, ::Function, ::Tuple{CuArray{Float32,3,Nothing},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(-),Tuple{Base.Broadcast.Extruded{CuArray{Float32,3,Nothing},Tuple{Bool,Bool,Bool},Tuple{Int64,Int64,Int64}},Base.Broadcast.Extruded{CuArray{Float32,3,Nothing},Tuple{Bool,Bool,Bool},Tuple{Int64,Int64,Int64}}}}}, ::Int64; name::String) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/gpuarrays.jl:32
   [18] #gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:60 [inlined]
   [19] copyto! at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/broadcast.jl:63 [inlined]
   [20] copyto! at ./broadcast.jl:865 [inlined]
   [21] copy(::Base.Broadcast.Broadcasted{CuArrays.CuArrayStyle{3},Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(-),Tuple{CuArray{Float32,3,Nothing},CuArray{Float32,3,Nothing}}}) at ./broadcast.jl:841
   [22] materialize at ./broadcast.jl:821 [inlined]
   [23] broadcast_preserving_zero_d at ./broadcast.jl:810 [inlined]
   [24] -(::CuArray{Float32,3,Nothing}, ::CuArray{Float32,3,Nothing}) at ./arraymath.jl:39
   [25] isapprox(::CuArray{Float32,3,Nothing}, ::CuArray{Float32,3,Nothing}; atol::Int64, rtol::Float32, nans::Bool, norm::typeof(norm)) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl:1635
   [26] isapprox(::CuArray{Float32,3,Nothing}, ::CuArray{Float32,3,Nothing}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl:1635
   [27] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:246
   [28] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/nnlib.jl:13
   [29] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [30] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/nnlib.jl:4
   [31] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [32] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/nnlib.jl:3
  
batched_mul: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/nnlib.jl:16
  Test threw exception
  Expression: cu(Ca) ≈ batched_mul(cu(A), batched_adjoint(cu(B)))
  InvalidIRError: compiling broadcast(CuArrays.CuKernelContext, CuDeviceArray{Float32,3,CUDAnative.AS.Global}, Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(-),Tuple{Base.Broadcast.Extruded{CuDeviceArray{Float32,3,CUDAnative.AS.Global},Tuple{Bool,Bool,Bool},Tuple{Int64,Int64,Int64}},Base.Broadcast.Extruded{CuDeviceArray{Float32,3,CUDAnative.AS.Global},Tuple{Bool,Bool,Bool},Tuple{Int64,Int64,Int64}}}}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_23896)
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_22829)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::String, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{String,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},GPUArrays.var"#26#27",DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::String, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] getproperty at ./Base.jl:33 [inlined]
   [14] merge at ./namedtuple.jl:253 [inlined]
   [15] cufunction(::GPUArrays.var"#26#27", ::Type{Tuple{CuArrays.CuKernelContext,CuDeviceArray{Float32,3,CUDAnative.AS.Global},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(-),Tuple{Base.Broadcast.Extruded{CuDeviceArray{Float32,3,CUDAnative.AS.Global},Tuple{Bool,Bool,Bool},Tuple{Int64,Int64,Int64}},Base.Broadcast.Extruded{CuDeviceArray{Float32,3,CUDAnative.AS.Global},Tuple{Bool,Bool,Bool},Tuple{Int64,Int64,Int64}}}}}}; kwargs::Base.Iterators.Pairs{Symbol,String,Tuple{Symbol},NamedTuple{(:name,),Tuple{String}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:0
   [16] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [17] gpu_call(::CuArrays.CuArrayBackend, ::Function, ::Tuple{CuArray{Float32,3,Nothing},Base.Broadcast.Broadcasted{Nothing,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(-),Tuple{Base.Broadcast.Extruded{CuArray{Float32,3,Nothing},Tuple{Bool,Bool,Bool},Tuple{Int64,Int64,Int64}},Base.Broadcast.Extruded{CuArray{Float32,3,Nothing},Tuple{Bool,Bool,Bool},Tuple{Int64,Int64,Int64}}}}}, ::Int64; name::String) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/gpuarrays.jl:32
   [18] #gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/device/execution.jl:60 [inlined]
   [19] copyto! at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/broadcast.jl:63 [inlined]
   [20] copyto! at ./broadcast.jl:865 [inlined]
   [21] copy(::Base.Broadcast.Broadcasted{CuArrays.CuArrayStyle{3},Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}},typeof(-),Tuple{CuArray{Float32,3,Nothing},CuArray{Float32,3,Nothing}}}) at ./broadcast.jl:841
   [22] materialize at ./broadcast.jl:821 [inlined]
   [23] broadcast_preserving_zero_d at ./broadcast.jl:810 [inlined]
   [24] -(::CuArray{Float32,3,Nothing}, ::CuArray{Float32,3,Nothing}) at ./arraymath.jl:39
   [25] isapprox(::CuArray{Float32,3,Nothing}, ::CuArray{Float32,3,Nothing}; atol::Int64, rtol::Float32, nans::Bool, norm::typeof(norm)) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl:1635
   [26] isapprox(::CuArray{Float32,3,Nothing}, ::CuArray{Float32,3,Nothing}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl:1635
   [27] eval_test(::Expr, ::Expr, ::LineNumberNode, ::Bool) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:246
   [28] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/nnlib.jl:16
   [29] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [30] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/nnlib.jl:4
   [31] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [32] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/nnlib.jl:3
  
std: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/statistics.jl:7
  Test threw exception
  Expression: testf(std, rand(10, 1, 2))
  InvalidIRError: compiling mapreduce_grid(typeof(identity), typeof(Base.add_sum), CuDeviceArray{Float64,3,CUDAnative.AS.Global}, CuDeviceArray{Float64,3,CUDAnative.AS.Global}, Float64, CartesianIndices{3,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}}}, CartesianIndices{3,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}}}, Val{true}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_23896)
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_22829)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CuArrays.mapreduce_grid),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(CuArrays.mapreduce_grid), ::Type{Tuple{typeof(identity),typeof(Base.add_sum),CuDeviceArray{Float64,3,CUDAnative.AS.Global},CuDeviceArray{Float64,3,CUDAnative.AS.Global},Float64,CartesianIndices{3,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}}},CartesianIndices{3,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}}},Val{true}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [15] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [16] macro expansion at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/mapreduce.jl:161 [inlined]
   [17] mapreducedim!(::Function, ::Function, ::CuArray{Float64,3,Nothing}, ::CuArray{Float64,3,Nothing}, ::Float64) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/nvtx/highlevel.jl:83
   [18] mapreduce(::Function, ::Function, ::CuArray{Float64,3,Nothing}; dims::Function, init::Nothing) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/mapreduce.jl:38
   [19] mapreduce at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/mapreduce.jl:24 [inlined]
   [20] _sum at ./reducedim.jl:657 [inlined]
   [21] _sum at ./reducedim.jl:656 [inlined]
   [22] #sum#602 at ./reducedim.jl:652 [inlined]
   [23] sum at ./reducedim.jl:652 [inlined]
   [24] _mean at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Statistics/src/Statistics.jl:160 [inlined]
   [25] #mean#4 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Statistics/src/Statistics.jl:157 [inlined]
   [26] mean at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Statistics/src/Statistics.jl:157 [inlined]
   [27] _var(::CuArray{Float64,3,Nothing}, ::Bool, ::Nothing, ::Colon) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/statistics.jl:6
   [28] #var#15 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Statistics/src/Statistics.jl:335 [inlined]
   [29] _std at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/statistics.jl:12 [inlined]
   [30] #std#18 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Statistics/src/Statistics.jl:408 [inlined]
   [31] std(::CuArray{Float64,3,Nothing}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Statistics/src/Statistics.jl:408
   [32] compare(::Function, ::Type{CuArray}, ::Array{Float64,3}, ::Vararg{Array{Float64,3},N} where N; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:23
   [33] compare(::Function, ::Type{CuArray}, ::Array{Float64,3}, ::Vararg{Array{Float64,3},N} where N) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:20
   [34] testf(::Function, ::Array{Float64,3}, ::Vararg{Any,N} where N; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18
   [35] testf(::Function, ::Array{Float64,3}, ::Vararg{Any,N} where N) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18
   [36] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/statistics.jl:7
   [37] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [38] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/statistics.jl:6
   [39] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [40] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/statistics.jl:3
  
std: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/statistics.jl:8
  Test threw exception
  Expression: testf(std, rand(10, 1, 2), corrected = true)
  InvalidIRError: compiling mapreduce_grid(typeof(identity), typeof(Base.add_sum), CuDeviceArray{Float64,3,CUDAnative.AS.Global}, CuDeviceArray{Float64,3,CUDAnative.AS.Global}, Float64, CartesianIndices{3,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}}}, CartesianIndices{3,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}}}, Val{true}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_23896)
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_22829)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CuArrays.mapreduce_grid),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(CuArrays.mapreduce_grid), ::Type{Tuple{typeof(identity),typeof(Base.add_sum),CuDeviceArray{Float64,3,CUDAnative.AS.Global},CuDeviceArray{Float64,3,CUDAnative.AS.Global},Float64,CartesianIndices{3,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}}},CartesianIndices{3,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}}},Val{true}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [15] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [16] macro expansion at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/mapreduce.jl:161 [inlined]
   [17] mapreducedim!(::Function, ::Function, ::CuArray{Float64,3,Nothing}, ::CuArray{Float64,3,Nothing}, ::Float64) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/nvtx/highlevel.jl:83
   [18] mapreduce(::Function, ::Function, ::CuArray{Float64,3,Nothing}; dims::Function, init::Nothing) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/mapreduce.jl:38
   [19] mapreduce at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/mapreduce.jl:24 [inlined]
   [20] _sum at ./reducedim.jl:657 [inlined]
   [21] _sum at ./reducedim.jl:656 [inlined]
   [22] #sum#602 at ./reducedim.jl:652 [inlined]
   [23] sum at ./reducedim.jl:652 [inlined]
   [24] _mean at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Statistics/src/Statistics.jl:160 [inlined]
   [25] #mean#4 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Statistics/src/Statistics.jl:157 [inlined]
   [26] mean at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Statistics/src/Statistics.jl:157 [inlined]
   [27] _var(::CuArray{Float64,3,Nothing}, ::Bool, ::Nothing, ::Colon) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/statistics.jl:6
   [28] #var#15 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Statistics/src/Statistics.jl:335 [inlined]
   [29] _std at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/statistics.jl:12 [inlined]
   [30] #std#18 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Statistics/src/Statistics.jl:408 [inlined]
   [31] compare(::Function, ::Type{CuArray}, ::Array{Float64,3}; kwargs::Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:corrected,),Tuple{Bool}}}) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:23
   [32] #testf#1 at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18 [inlined]
   [33] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/statistics.jl:8
   [34] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [35] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/statistics.jl:6
   [36] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [37] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/statistics.jl:3
  
std: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/statistics.jl:9
  Test threw exception
  Expression: testf(std, rand(10, 1, 2), dims = 1)
  InvalidIRError: compiling mapreduce_grid(typeof(identity), typeof(Base.add_sum), CuDeviceArray{Float64,3,CUDAnative.AS.Global}, CuDeviceArray{Float64,3,CUDAnative.AS.Global}, Nothing, CartesianIndices{3,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}}}, CartesianIndices{3,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}}}, Val{true}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_23896)
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_22829)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CuArrays.mapreduce_grid),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(CuArrays.mapreduce_grid), ::Type{Tuple{typeof(identity),typeof(Base.add_sum),CuDeviceArray{Float64,3,CUDAnative.AS.Global},CuDeviceArray{Float64,3,CUDAnative.AS.Global},Nothing,CartesianIndices{3,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}}},CartesianIndices{3,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}}},Val{true}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [15] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [16] macro expansion at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/mapreduce.jl:161 [inlined]
   [17] mapreducedim!(::Function, ::Function, ::CuArray{Float64,3,Nothing}, ::CuArray{Float64,3,Nothing}, ::Nothing) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/nvtx/highlevel.jl:83
   [18] mapreducedim! at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/nvtx/highlevel.jl:81 [inlined]
   [19] mapreducedim! at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/mapreduce.jl:6 [inlined]
   [20] #sum!#614 at ./reducedim.jl:674 [inlined]
   [21] #sum!#615 at ./reducedim.jl:676 [inlined]
   [22] mean!(::CuArray{Float64,3,Nothing}, ::CuArray{Float64,3,Nothing}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Statistics/src/Statistics.jl:126
   [23] _mean at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Statistics/src/Statistics.jl:159 [inlined]
   [24] #mean#4 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Statistics/src/Statistics.jl:157 [inlined]
   [25] _var(::CuArray{Float64,3,Nothing}, ::Bool, ::Nothing, ::Int64) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/statistics.jl:3
   [26] #var#15 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Statistics/src/Statistics.jl:335 [inlined]
   [27] _std(::CuArray{Float64,3,Nothing}, ::Bool, ::Nothing, ::Int64) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/statistics.jl:9
   [28] #std#18 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Statistics/src/Statistics.jl:408 [inlined]
   [29] compare(::Function, ::Type{CuArray}, ::Array{Float64,3}; kwargs::Base.Iterators.Pairs{Symbol,Int64,Tuple{Symbol},NamedTuple{(:dims,),Tuple{Int64}}}) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:23
   [30] #testf#1 at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18 [inlined]
   [31] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/statistics.jl:9
   [32] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [33] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/statistics.jl:6
   [34] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [35] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/statistics.jl:3
  
var: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/statistics.jl:13
  Test threw exception
  Expression: testf(var, rand(10, 1, 2))
  InvalidIRError: compiling mapreduce_grid(typeof(identity), typeof(Base.add_sum), CuDeviceArray{Float64,3,CUDAnative.AS.Global}, CuDeviceArray{Float64,3,CUDAnative.AS.Global}, Float64, CartesianIndices{3,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}}}, CartesianIndices{3,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}}}, Val{true}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_23896)
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_22829)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CuArrays.mapreduce_grid),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(CuArrays.mapreduce_grid), ::Type{Tuple{typeof(identity),typeof(Base.add_sum),CuDeviceArray{Float64,3,CUDAnative.AS.Global},CuDeviceArray{Float64,3,CUDAnative.AS.Global},Float64,CartesianIndices{3,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}}},CartesianIndices{3,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}}},Val{true}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [15] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [16] macro expansion at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/mapreduce.jl:161 [inlined]
   [17] mapreducedim!(::Function, ::Function, ::CuArray{Float64,3,Nothing}, ::CuArray{Float64,3,Nothing}, ::Float64) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/nvtx/highlevel.jl:83
   [18] mapreduce(::Function, ::Function, ::CuArray{Float64,3,Nothing}; dims::Function, init::Nothing) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/mapreduce.jl:38
   [19] mapreduce at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/mapreduce.jl:24 [inlined]
   [20] _sum at ./reducedim.jl:657 [inlined]
   [21] _sum at ./reducedim.jl:656 [inlined]
   [22] #sum#602 at ./reducedim.jl:652 [inlined]
   [23] sum at ./reducedim.jl:652 [inlined]
   [24] _mean at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Statistics/src/Statistics.jl:160 [inlined]
   [25] #mean#4 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Statistics/src/Statistics.jl:157 [inlined]
   [26] mean at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Statistics/src/Statistics.jl:157 [inlined]
   [27] _var(::CuArray{Float64,3,Nothing}, ::Bool, ::Nothing, ::Colon) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/statistics.jl:6
   [28] #var#15 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Statistics/src/Statistics.jl:335 [inlined]
   [29] var(::CuArray{Float64,3,Nothing}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Statistics/src/Statistics.jl:335
   [30] compare(::Function, ::Type{CuArray}, ::Array{Float64,3}, ::Vararg{Array{Float64,3},N} where N; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:23
   [31] compare(::Function, ::Type{CuArray}, ::Array{Float64,3}, ::Vararg{Array{Float64,3},N} where N) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:20
   [32] testf(::Function, ::Array{Float64,3}, ::Vararg{Any,N} where N; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18
   [33] testf(::Function, ::Array{Float64,3}, ::Vararg{Any,N} where N) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18
   [34] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/statistics.jl:13
   [35] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [36] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/statistics.jl:12
   [37] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [38] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/statistics.jl:3
  
var: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/statistics.jl:14
  Test threw exception
  Expression: testf(var, rand(10, 1, 2), corrected = true)
  InvalidIRError: compiling mapreduce_grid(typeof(identity), typeof(Base.add_sum), CuDeviceArray{Float64,3,CUDAnative.AS.Global}, CuDeviceArray{Float64,3,CUDAnative.AS.Global}, Float64, CartesianIndices{3,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}}}, CartesianIndices{3,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}}}, Val{true}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_23896)
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_22829)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CuArrays.mapreduce_grid),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(CuArrays.mapreduce_grid), ::Type{Tuple{typeof(identity),typeof(Base.add_sum),CuDeviceArray{Float64,3,CUDAnative.AS.Global},CuDeviceArray{Float64,3,CUDAnative.AS.Global},Float64,CartesianIndices{3,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}}},CartesianIndices{3,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}}},Val{true}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [15] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [16] macro expansion at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/mapreduce.jl:161 [inlined]
   [17] mapreducedim!(::Function, ::Function, ::CuArray{Float64,3,Nothing}, ::CuArray{Float64,3,Nothing}, ::Float64) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/nvtx/highlevel.jl:83
   [18] mapreduce(::Function, ::Function, ::CuArray{Float64,3,Nothing}; dims::Function, init::Nothing) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/mapreduce.jl:38
   [19] mapreduce at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/mapreduce.jl:24 [inlined]
   [20] _sum at ./reducedim.jl:657 [inlined]
   [21] _sum at ./reducedim.jl:656 [inlined]
   [22] #sum#602 at ./reducedim.jl:652 [inlined]
   [23] sum at ./reducedim.jl:652 [inlined]
   [24] _mean at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Statistics/src/Statistics.jl:160 [inlined]
   [25] #mean#4 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Statistics/src/Statistics.jl:157 [inlined]
   [26] mean at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Statistics/src/Statistics.jl:157 [inlined]
   [27] _var(::CuArray{Float64,3,Nothing}, ::Bool, ::Nothing, ::Colon) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/statistics.jl:6
   [28] #var#15 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Statistics/src/Statistics.jl:335 [inlined]
   [29] compare(::Function, ::Type{CuArray}, ::Array{Float64,3}; kwargs::Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:corrected,),Tuple{Bool}}}) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:23
   [30] #testf#1 at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18 [inlined]
   [31] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/statistics.jl:14
   [32] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [33] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/statistics.jl:12
   [34] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [35] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/statistics.jl:3
  
var: Error During Test at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/statistics.jl:15
  Test threw exception
  Expression: testf(var, rand(10, 1, 2), dims = 1)
  InvalidIRError: compiling mapreduce_grid(typeof(identity), typeof(Base.add_sum), CuDeviceArray{Float64,3,CUDAnative.AS.Global}, CuDeviceArray{Float64,3,CUDAnative.AS.Global}, Nothing, CartesianIndices{3,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}}}, CartesianIndices{3,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}}}, Val{true}) resulted in invalid LLVM IR
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_23896)
  Reason: unsupported call to an unknown function (call to jfptr_throw_boundserror_22829)
  Stacktrace:
   [1] check_ir(::CUDAnative.CompilerJob, ::LLVM.Module) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/validation.jl:116
   [2] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:186 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/7Id5J/src/TimerOutput.jl:228 [inlined]
   [4] codegen(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:184
   [5] compile(::Symbol, ::CUDAnative.CompilerJob; libraries::Bool, dynamic_parallelism::Bool, optimize::Bool, strip::Bool, strict::Bool) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:45
   [6] #compile#171 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/compiler/driver.jl:33 [inlined]
   [7] cufunction_slow(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:326
   [8] #219 at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:393 [inlined]
   [9] get!(::CUDAnative.var"#219#220"{Nothing,Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},typeof(CuArrays.mapreduce_grid),DataType,Int64}, ::Dict{UInt64,CUDAnative.HostKernel}, ::UInt64) at ./dict.jl:450
   [10] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:392 [inlined]
   [11] macro expansion at ./lock.jl:183 [inlined]
   [12] cufunction_fast(::Function, ::Type{T} where T, ::Int64; name::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:391
   [13] cufunction(::typeof(CuArrays.mapreduce_grid), ::Type{Tuple{typeof(identity),typeof(Base.add_sum),CuDeviceArray{Float64,3,CUDAnative.AS.Global},CuDeviceArray{Float64,3,CUDAnative.AS.Global},Nothing,CartesianIndices{3,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}}},CartesianIndices{3,Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}}},Val{true}}}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [14] cufunction(::Function, ::Type{T} where T) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:419
   [15] macro expansion at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/execution.jl:157 [inlined]
   [16] macro expansion at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/mapreduce.jl:161 [inlined]
   [17] mapreducedim!(::Function, ::Function, ::CuArray{Float64,3,Nothing}, ::CuArray{Float64,3,Nothing}, ::Nothing) at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/nvtx/highlevel.jl:83
   [18] mapreducedim! at /home/pkgeval/.julia/packages/CUDAnative/ierw8/src/nvtx/highlevel.jl:81 [inlined]
   [19] mapreducedim! at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/src/host/mapreduce.jl:6 [inlined]
   [20] #sum!#614 at ./reducedim.jl:674 [inlined]
   [21] #sum!#615 at ./reducedim.jl:676 [inlined]
   [22] mean!(::CuArray{Float64,3,Nothing}, ::CuArray{Float64,3,Nothing}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Statistics/src/Statistics.jl:126
   [23] _mean at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Statistics/src/Statistics.jl:159 [inlined]
   [24] #mean#4 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Statistics/src/Statistics.jl:157 [inlined]
   [25] _var(::CuArray{Float64,3,Nothing}, ::Bool, ::Nothing, ::Int64) at /home/pkgeval/.julia/packages/CuArrays/e8PLr/src/statistics.jl:3
   [26] #var#15 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Statistics/src/Statistics.jl:335 [inlined]
   [27] compare(::Function, ::Type{CuArray}, ::Array{Float64,3}; kwargs::Base.Iterators.Pairs{Symbol,Int64,Tuple{Symbol},NamedTuple{(:dims,),Tuple{Int64}}}) at /home/pkgeval/.julia/packages/GPUArrays/QDGmr/test/testsuite.jl:23
   [28] #testf#1 at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:18 [inlined]
   [29] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/statistics.jl:15
   [30] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [31] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/statistics.jl:12
   [32] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114
   [33] top-level scope at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/statistics.jl:3
  
Effective GPU memory usage: 6.53% (986.312 MiB/14.756 GiB)
CuArrays allocator usage: 6.054 MiB
BinnedPool usage: 6.054 MiB (16.000 KiB allocated, 6.038 MiB cached)
 ────────────────────────────────────────────────────────
                                           Time          
                                   ──────────────────────
         Tot / % measured:              1998s / 0.22%    

 Section                   ncalls     time   %tot     avg
 ────────────────────────────────────────────────────────
 pooled alloc               12.2k    4.13s  95.7%   339μs
   1. try alloc             10.1k    797ms  18.4%  79.0μs
   2a. gc (incremental)         1   33.0ms  0.76%  33.0ms
   2b. repopulate               1   2.25μs  0.00%  2.25μs
   3. reclaim unused            1   10.6μs  0.00%  10.6μs
     reclaim                    1   2.70μs  0.00%  2.70μs
     scan                       1   2.35μs  0.00%  2.35μs
   4. try alloc                 1   2.71ms  0.06%  2.71ms
   5a. gc (full)                1    565ms  13.1%   565ms
   5b. repopulate               1   2.84μs  0.00%  2.84μs
   6. reclaim unused            1   13.9μs  0.00%  13.9μs
     reclaim                    1   4.22μs  0.00%  4.22μs
     scan                       1   2.04μs  0.00%  2.04μs
   7. try alloc                 1   3.71ms  0.09%  3.71ms
   8. reclaim everything        1   15.8μs  0.00%  15.8μs
     reclaim                    1   2.69μs  0.00%  2.69μs
     scan                       1   2.27μs  0.00%  2.27μs
   9. try alloc                 1   3.24ms  0.08%  3.24ms
 pooled free                12.4k    178ms  4.13%  14.4μs
 reclaim                        5   9.07ms  0.21%  1.81ms
 scan                           5   11.1μs  0.00%  2.23μs
 ────────────────────────────────────────────────────────
 ────────────────────────────────────────
                           Time          
                   ──────────────────────
 Tot / % measured:      1998s / 0.04%    

 Section   ncalls     time   %tot     avg
 ────────────────────────────────────────
 alloc      10.1k    771ms  98.9%  76.4μs
 free         621   8.61ms  1.10%  13.9μs
 ────────────────────────────────────────
Test Summary:                                  | Pass  Fail  Error  Broken  Total
CuArrays                                       | 6062     1    113       1   6177
  GPUArrays test suite                         | 1134                        1134
  essential utilities                          |    3                           3
  Memory                                       |    5                           5
  Array                                        |   22                          22
  Adapt                                        |    2                           2
  Broadcast                                    |   18                          18
  cufunc                                       |    8                           8
  Ref Broadcast                                |    1                           1
  Broadcast Fix                                |    3                           3
  SubArray                                     |   21     1                    22
  reshape                                      |    1                           1
  Utilities                                    |    2                           2
  accumulate                                   |    3           14             17
  logical indexing                             |                15             15
  reverse                                      |   26                          26
  findall                                      |                 4              4
  findfirst                                    |    4                           4
  findmax & findmin                            |    4           14             18
  argmax & argmin                              |    4                           4
  issue #543                                   |    2                           2
  resizing                                     |    9                           9
  aliasing                                     |    2                           2
  threading                                    |                            No tests
  memory allocator                             |    3                           3
  CUBLAS                                       | 1460            7           1467
    Level 1 with element type Float32          |    9                           9
    Level 1 with element type Float64          |    9                           9
    Level 1 with element type Complex{Float32} |   11                          11
    Level 1 with element type Complex{Float64} |   11                          11
    element type Float32                       |  372            1            373
      Level 2                                  |   37                          37
      Level 3                                  |  148                         148
      extensions                               |  187            1            188
        getrf_batched!                         |   40                          40
        getrf_batched                          |   20                          20
        getrf_strided_batched!                 |   40                          40
        getrf_strided_batched                  |                 1              1
        getri_batched                          |   30                          30
        matinv_batched                         |   11                          11
        geqrf_batched!                         |   10                          10
        geqrf_batched                          |   10                          10
        gels_batched!                          |   12                          12
        gels_batched                           |   10                          10
        dgmm!                                  |    3                           3
        dgmm                                   |    1                           1
    element type Float64                       |  332            2            334
      Level 2                                  |   37                          37
      Level 3                                  |  148                         148
      extensions                               |  147            2            149
        getrf_batched!                         |   40                          40
        getrf_batched                          |   20                          20
        getrf_strided_batched!                 |                 1              1
        getrf_strided_batched                  |                 1              1
        getri_batched                          |   30                          30
        matinv_batched                         |   11                          11
        geqrf_batched!                         |   10                          10
        geqrf_batched                          |   10                          10
        gels_batched!                          |   12                          12
        gels_batched                           |   10                          10
        dgmm!                                  |    3                           3
        dgmm                                   |    1                           1
    element type Complex{Float32}              |  356            2            358
      Level 2                                  |   41                          41
      Level 3                                  |  168                         168
      extensions                               |  147            2            149
        getrf_batched!                         |   40                          40
        getrf_batched                          |   20                          20
        getrf_strided_batched!                 |                 1              1
        getrf_strided_batched                  |                 1              1
        getri_batched                          |   30                          30
        matinv_batched                         |   11                          11
        geqrf_batched!                         |   10                          10
        geqrf_batched                          |   10                          10
        gels_batched!                          |   12                          12
        gels_batched                           |   10                          10
        dgmm!                                  |    3                           3
        dgmm                                   |    1                           1
    element type Complex{Float64}              |  356            2            358
      Level 2                                  |   41                          41
      Level 3                                  |  168                         168
      extensions                               |  147            2            149
        getrf_batched!                         |   40                          40
        getrf_batched                          |   20                          20
        getrf_strided_batched!                 |                 1              1
        getrf_strided_batched                  |                 1              1
        getri_batched                          |   30                          30
        matinv_batched                         |   11                          11
        geqrf_batched!                         |   10                          10
        geqrf_batched                          |   10                          10
        gels_batched!                          |   12                          12
        gels_batched                           |   10                          10
        dgmm!                                  |    3                           3
        dgmm                                   |    1                           1
  CURAND                                       |  101                         101
  CUFFT                                        |  117            6       1    124
    T = Complex{Float32}                       |   36                    1     37
    T = Complex{Float64}                       |   27            2             29
      1D                                       |    3                           3
      1D inplace                               |    2                           2
      2D                                       |    3                           3
      2D inplace                               |    2                           2
      Batch 1D                                 |    6                           6
      3D                                       |                 1              1
      3D inplace                               |    2                           2
      Batch 2D (in 3D)                         |                 1              1
      Batch 2D (in 4D)                         |    9                           9
    T = Float32                                |   23            2             25
      1D                                       |    4                           4
      Batch 1D                                 |    6                           6
      2D                                       |    4                           4
      Batch 2D (in 3D)                         |                 1              1
      Batch 2D (in 4D)                         |    9                           9
      3D                                       |                 1              1
    T = Float64                                |   23            2             25
      1D                                       |    4                           4
      Batch 1D                                 |    6                           6
      2D                                       |    4                           4
      Batch 2D (in 3D)                         |                 1              1
      Batch 2D (in 4D)                         |    9                           9
      3D                                       |                 1              1
    T = Complex{Int32}                         |    2                           2
    T = Complex{Int64}                         |    2                           2
    T = Int32                                  |    2                           2
    T = Int64                                  |    2                           2
    streams                                    |                            No tests
  CUSPARSE                                     | 1235                        1235
  CUSOLVER                                     |  215           32            247
    elty = Float32                             |   56            7             63
      Cholesky (po)                            |                 1              1
      getrf!                                   |    2                           2
      getrs!                                   |    3                           3
      Matrix division                          |    1                           1
      geqrf!                                   |    1                           1
      ormqr!                                   |    2            1              3
      orgqr!                                   |                 1              1
      sytrf!                                   |    4                           4
      gebrd!                                   |    5                           5
      syevd!                                   |    3                           3
      sygvd!                                   |    5                           5
      syevj!                                   |    4                           4
      svd with QRAlgorithm method              |    7                           7
      svd with QRAlgorithm method              |    1                           1
      svd with JacobiAlgorithm method          |    7                           7
      svd with JacobiAlgorithm method          |    7                           7
      qr                                       |    4            4              8
    elty = Float64                             |   54            7             61
      Cholesky (po)                            |                 1              1
      getrf!                                   |    2                           2
      getrs!                                   |    3                           3
      Matrix division                          |    1                           1
      geqrf!                                   |    1                           1
      ormqr!                                   |                 1              1
      orgqr!                                   |                 1              1
      sytrf!                                   |    4                           4
      gebrd!                                   |    5                           5
      syevd!                                   |    3                           3
      sygvd!                                   |    5                           5
      syevj!                                   |    4                           4
      svd with QRAlgorithm method              |    7                           7
      svd with QRAlgorithm method              |    1                           1
      svd with JacobiAlgorithm method          |    7                           7
      svd with JacobiAlgorithm method          |    7                           7
      qr                                       |    4            4              8
    elty = Complex{Float32}                    |   52            9             61
      Cholesky (po)                            |                 1              1
      getrf!                                   |    2                           2
      getrs!                                   |    3                           3
      Matrix division                          |    1                           1
      geqrf!                                   |    1                           1
      ormqr!                                   |                 1              1
      orgqr!                                   |                 1              1
      sytrf!                                   |    4                           4
      gebrd!                                   |    5                           5
      syevd!                                   |    3                           3
      sygvd!                                   |    5                           5
      syevj!                                   |    4                           4
      svd with QRAlgorithm method              |    7                           7
      svd with QRAlgorithm method              |    1                           1
      svd with JacobiAlgorithm method          |    7                           7
      svd with JacobiAlgorithm method          |    7                           7
      qr                                       |    2            6              8
    elty = Complex{Float64}                    |   52            9             61
      Cholesky (po)                            |                 1              1
      getrf!                                   |    2                           2
      getrs!                                   |    3                           3
      Matrix division                          |    1                           1
      geqrf!                                   |    1                           1
      ormqr!                                   |                 1              1
      orgqr!                                   |                 1              1
      sytrf!                                   |    4                           4
      gebrd!                                   |    5                           5
      syevd!                                   |    3                           3
      sygvd!                                   |    5                           5
      syevj!                                   |    4                           4
      svd with QRAlgorithm method              |    7                           7
      svd with QRAlgorithm method              |    1                           1
      svd with JacobiAlgorithm method          |    7                           7
      svd with JacobiAlgorithm method          |    7                           7
      qr                                       |    2            6              8
  CUSPARSE + CUSOLVER                          |   84                          84
  CUDNN                                        |   75           11             86
    NNlib                                      |   63            4             67
    Activations and Other Ops                  |   11            7             18
    Batchnorm                                  |                            No tests
  CUTENSOR                                     | 1359                        1359
  CuIterator                                   |   30                          30
  ForwardDiff                                  |  106            1            107
    UNARY                                      |   88                          88
    POW                                        |    8                           8
    LITERAL_POW                                |   10                          10
    Broadcast Fix                              |                 1              1
  NNlib                                        |                 3              3
    batched_mul                                |                 3              3
  Statistics                                   |    2            6              8
    std                                        |    1            3              4
    var                                        |    1            3              4
ERROR: LoadError: Some tests did not pass: 6062 passed, 1 failed, 113 errored, 1 broken.
in expression starting at /home/pkgeval/.julia/packages/CuArrays/e8PLr/test/runtests.jl:37
ERROR: Package CuArrays errored during testing
Stacktrace:
 [1] pkgerror(::String, ::Vararg{String,N} where N) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:52
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1516
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:316
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:303
 [5] #test#68 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:297 [inlined]
 [6] test at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:297 [inlined]
 [7] #test#67 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:296 [inlined]
 [8] test at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:296 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:295
 [10] test(::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:295
 [11] top-level scope at none:16
