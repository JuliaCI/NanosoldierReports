Julia Version 1.5.0-DEV.613
Commit cd9c2a22d4 (2020-04-10 02:59 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_Wv5zxh/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_Wv5zxh/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.023902042801777462 0.005801032144537531; -0.023902042801777462 0.0 0.14045511324720245; -0.005801032144537531 -0.14045511324720245 0.0])
dAA = so3([0.0 0.26054124004229273 -0.01612931349503986; -0.26054124004229273 0.0 0.17620177129461656; 0.01612931349503986 -0.17620177129461656 0.0])
dAA = so3([0.0 0.05784419266038026 0.00020072559748197483; -0.05784419266038026 0.0 0.00042880425493889624; -0.00020072559748197483 -0.00042880425493889624 0.0])
dAA = Quaternion(0.9970289559606857, [0.05716107989145101, 0.03795738436177923, -0.03500155559400374])
dAA = SO3([0.9942123907799356 -0.09901541396404753 -0.04168536694301033; 0.10326084632188806 0.9878135187813453 0.11645449639110134; 0.02964657883352701 -0.12008496954384393 0.9923208555971814])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.797832611155938 0.5945414693489687 0.09991779521420216; -0.5776777619030312 0.7064921909689788 0.4088486119611474; 0.17248631243899548 -0.3839130439620688 0.9071158948541117]), [-1.4045511324720243, 0.0580103214453753, -0.2390204280177746])
xj = SE3(SO3([0.9670198372792719 0.1879014317992582 0.17194675407276322; -0.1327728098123944 0.947999364830921 -0.28925522511217; -0.21735688459971153 0.25688568704378834 0.9416823925874098]), [-0.004288042549388962, 0.0020072559748197483, -0.5784419266038026])
Dx = SE3(SO3([0.8107287739222799 -0.35341499651213903 0.46670836222934914; 0.5645765848329403 0.6828475755880354 -0.4636512357062322; -0.15482937380500666 0.6393880111120845 0.7531340094918585]), [1.0909817202053758, 0.9232570872407877, -0.1908802113408984])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
