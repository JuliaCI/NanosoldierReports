Julia Version 1.5.0-DEV.607
Commit 8a5b3233a1 (2020-04-09 12:28 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_MeL0Ub/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_MeL0Ub/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.21434942805763227 -0.1715816478087213; 0.21434942805763227 0.0 -0.04333301529944628; 0.1715816478087213 0.04333301529944628 0.0])
dAA = so3([0.0 -0.06846064712468453 -0.013768647423818002; 0.06846064712468453 0.0 -0.08775505222177891; 0.013768647423818002 0.08775505222177891 0.0])
dAA = so3([0.0 -0.05624329916250151 -0.06715067165565816; 0.05624329916250151 0.0 -0.09971445640055475; 0.06715067165565816 0.09971445640055475 0.0])
dAA = Quaternion(0.9986948637260035, [0.00940386331647109, -0.02531903292816335, 0.043348392053303736])
dAA = SO3([0.9812526776981406 -0.19272512623722016 -0.00045631905094956245; 0.19237729832675904 0.9796185314867677 -0.057779822223728586; 0.011582642130612877 0.056608819847759506 0.9983292462493111])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9848607022826541 -0.1726692504717585 -0.015320804183804278; 0.1651669126292126 0.9615410229901743 -0.21945102433012958; 0.05262402561427044 0.21359820001238353 0.9755032141821053]), [0.4333301529944628, -1.7158164780872127, 2.1434942805763226])
xj = SE3(SO3([0.9686213164739783 -0.21615148582051336 -0.12268366007664488; 0.21084300352448973 0.9759785050403642 -0.05487427050948276; 0.13159777025842556 0.02728539676750709 0.990927612889181]), [0.9971445640055474, -0.6715067165565816, 0.562432991625015])
Dx = SE3(SO3([0.9957065623629818 -0.05024388023624971 -0.07774312938195432; 0.06359212744557186 0.9815941968340811 0.18008018788473576; 0.06726427725204545 -0.18425087582006477 0.9805748986004582]), [0.6445622661585164, 0.5690814192370697, -1.7801433062638612])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
